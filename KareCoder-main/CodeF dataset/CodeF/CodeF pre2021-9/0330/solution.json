["def main():\n    string = input()\n    length = len(string)\n    (a, b) = ([], [])\n    for i in range(length):\n        if string[i] == '(':\n            a.append(i)\n        else:\n            b.append(i)\n    removed_indices = []\n    if len(a) > 0 and len(b) > 0:\n        while not a[0] > b[-1]:\n            removed_indices.append(a.pop(0) + 1)\n            removed_indices.append(b.pop() + 1)\n            if len(a) == 0 or len(b) == 0:\n                break\n    if len(removed_indices) == 0:\n        print(0)\n    else:\n        print(1)\n        print(len(removed_indices))\n        print(*sorted(removed_indices))\nmain()", "a = []\nb = []\nz = []\nk = op = num = 0\nfor i in input():\n    if i == '(':\n        a.append(k)\n    else:\n        b.append(k)\n    k = k + 1\nb.reverse()\nfor (x, y) in zip(a, b):\n    if x > y:\n        break\n    else:\n        z = z + [x + 1, y + 1]\n        num = num + 2\n        op = 1\nprint(op)\nif op == 1:\n    print(num)\n    print(*sorted(z))", "import sys\ninput = sys.stdin.readline\ns = list(map(str, input().split()))[0]\ni = 0\nj = len(s) - 1\ncnt = 0\nleft = []\nright = []\nwhile i < j:\n    if s[i] != '(':\n        i += 1\n    elif s[j] != ')':\n        j -= 1\n    else:\n        left.append(i + 1)\n        right.append(j + 1)\n        i += 1\n        j -= 1\nif left and right:\n    right = right[::-1]\n    print(1)\n    print(len(left) + len(right))\n    print(*left + right, sep=' ')\nelse:\n    print(0)", "def min_opr(s):\n    min_oprs = 0\n    output = []\n    op = True\n    while op:\n        op = False\n        to_remove = set()\n        a = 0\n        b = len(s) - 1\n        while a < b:\n            if s[a] == '(':\n                while s[b] != ')' and b > 0:\n                    b -= 1\n                if a < b:\n                    to_remove.add(a)\n                    to_remove.add(b)\n                b -= 1\n            a += 1\n        if len(to_remove) > 0:\n            op = True\n            output.append((len(to_remove), [str(i + 1) for i in sorted(list(to_remove))]))\n            s = ''.join([c for (i, c) in enumerate(s) if i not in to_remove])\n            min_oprs += 1\n    return output\n\ndef solve():\n    s = input().strip()\n    result = min_opr(s)\n    print(len(result))\n    for r in result:\n        print(r[0])\n        print(*r[1])\nsolve()", "strings = input()\n(left, right) = (0, len(strings) - 1)\ncount = 0\nans = set()\nwhile left < right:\n    if strings[right] == '(':\n        right -= 1\n    elif strings[left] == '(':\n        ans.add(right + 1)\n        ans.add(left + 1)\n        count += 1\n        right -= 1\n        left += 1\n    if strings[left] == ')':\n        left += 1\nif count:\n    print(1)\n    print(len(ans))\n    ans = list(ans)\n    ans.sort()\n    print(*ans)\nelse:\n    print(0)", "def main():\n    brackets = input()\n    length = len(brackets)\n    left = 0\n    right = length - 1\n    ans = []\n    while left < right:\n        while left < right and brackets[left] == ')':\n            left += 1\n        while left < right and brackets[right] == '(':\n            right -= 1\n        if left < right:\n            ans.append(left + 1)\n            ans.append(right + 1)\n        left += 1\n        right -= 1\n    ans.sort()\n    if len(ans) > 0:\n        print(1)\n        print(len(ans))\n        print(*ans)\n    else:\n        print(0)\nmain()", "string = input()\nl = 0\nr = len(string) - 1\nindices = []\nwhile l < r:\n    while string[l] == '(' and string[r] == ')':\n        didOp = True\n        indices.extend([l + 1, r + 1])\n        l += 1\n        r -= 1\n    if string[l] != '(':\n        l += 1\n    if string[r] != ')':\n        r -= 1\nif indices:\n    print(1)\n    print(len(indices))\n    print(*sorted(indices))\nelse:\n    print(0)", "s = input()\nstart = 0\nend = len(s) - 1\nans = []\nwhile end > start:\n    while s[start] != '(' and end > start:\n        start += 1\n    while s[end] != ')' and end > start:\n        end -= 1\n    if s[start] == '(' and s[end] == ')':\n        ans.append(start + 1)\n        ans.append(end + 1)\n    start += 1\n    end -= 1\nans.sort()\nif len(ans) != 0:\n    print('1')\n    print(len(ans))\n    for i in ans:\n        print(i, end=' ')\nelse:\n    print('0')", "s = input()\nstart = 0\nend = len(s) - 1\nans = []\nwhile end > start:\n    while s[start] != '(' and end > start:\n        start += 1\n    while s[end] != ')' and end > start:\n        end -= 1\n    if s[start] == '(' and s[end] == ')':\n        ans.append(start + 1)\n        ans.append(end + 1)\n    start += 1\n    end -= 1\nans.sort()\nif len(ans) != 0:\n    print('1')\n    print(len(ans))\n    for i in ans:\n        print(i, end=' ')\nelse:\n    print('0')", "s = input()\nud = []\nr = len(s) - 1\nfor l in range(len(s)):\n    if l == r:\n        break\n    if s[l] == '(':\n        while s[r] == '(' and r > l:\n            r -= 1\n        if s[r] == ')':\n            ud.append(l + 1)\n            ud.append(r + 1)\n            r -= 1\nif len(ud) == 0:\n    print(0)\nelse:\n    print(1)\n    print(len(ud))\n    print(' '.join(map(str, sorted(ud))))", "from sys import *\nimport math\ninput = stdin.readline\nI = int\nR = range\nlistInput = lambda : list(map(int, input().strip().split()))\nlineInput = lambda : map(int, input().strip().split())\nsJoin = lambda a, sep: '{}'.format(sep).join(a)\narrJoin = lambda a, sep: '{}'.format(sep).join(map(str, a))\n\ndef isPrime(n):\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    for i in range(5, int(math.sqrt(n) + 1), 6):\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n    return True\n\ndef main():\n    s = input().strip()\n    (start, end) = ([], [])\n    for i in range(len(s)):\n        if s[i] == '(':\n            start.append(i + 1)\n        if s[i] == ')':\n            end.append(i + 1)\n    (i, j) = (0, len(end) - 1)\n    ans = []\n    while i < len(start) and j >= 0:\n        if start[i] > end[j]:\n            break\n        ans.append(start[i])\n        ans.append(end[j])\n        i += 1\n        j -= 1\n    ans.sort()\n    if len(ans) == 0:\n        print(0)\n    else:\n        print(1)\n        print(len(ans))\n        print(*ans)\nmain()", "inp = input()\nn = len(inp)\nleft = []\nright = []\nfor i in range(0, n):\n    if inp[i] == '(':\n        left.append(i)\n    else:\n        right.append(i)\nq = len(right) - 1\np = 0\nans = []\nwhile q >= 0 and p < len(left) and (left[p] < right[q]):\n    ans.append(left[p])\n    ans.append(right[q])\n    p += 1\n    q -= 1\nif len(ans) > 0:\n    print(1)\n    print(len(ans))\n    ans.sort()\n    for i in ans:\n        print(i + 1, end=' ')\n    print()\nelse:\n    print(0)", "def solve(seq):\n    pointer1 = 0\n    pointer2 = len(seq) - 1\n    bold = 0\n    ans = []\n    while pointer1 < pointer2:\n        if seq[pointer1] == '(' and seq[pointer2] == ')':\n            bold += 2\n            ans.append(pointer1 + 1)\n            ans.append(pointer2 + 1)\n            pointer1 += 1\n            pointer2 -= 1\n        elif seq[pointer1] == ')':\n            pointer1 += 1\n        elif seq[pointer2] == '(':\n            pointer2 -= 1\n    if bold == 0:\n        print(0)\n        return\n    else:\n        print(1)\n        print(bold)\n        for x in sorted(ans):\n            print(x, end=' ')\nsolve(input())", "s = input()\nans = []\nleft = []\nright = []\ni = 0\nj = len(s) - 1\nl_found = 0\nr_found = 0\nwhile i < j:\n    if s[i] == '(':\n        l_save = i + 1\n        l_found = 1\n    if s[j] == ')':\n        r_save = j + 1\n        r_found = 1\n    if l_found == 1 and r_found == 1:\n        l_found = 0\n        r_found = 0\n        left.append(l_save)\n        right.append(r_save)\n        i += 1\n        j -= 1\n    elif l_found == 1 and r_found == 0:\n        j -= 1\n    elif l_found == 0 and r_found == 1:\n        i += 1\n    else:\n        i += 1\n        j -= 1\nans = left + right\nans.sort()\nif len(ans) == 0:\n    print(0)\nelse:\n    print(1)\n    print(len(ans))\n    print(*ans)", "s = input()\nn = len(s)\nif s.count('(') == n or s.count(')') == n:\n    print(0)\nelse:\n    a = []\n    b = []\n    for i in range(n):\n        if s[i] == '(':\n            a.append(i)\n        else:\n            b.append(i)\n    c = []\n    i = 0\n    j = len(b) - 1\n    while i < len(a) and j >= 0:\n        if a[i] > b[j]:\n            break\n        else:\n            c.append(a[i] + 1)\n            c.append(b[j] + 1)\n            i += 1\n            j -= 1\n    if len(c) == 0:\n        print(0)\n    else:\n        c.sort()\n        print(1)\n        print(len(c))\n        for i in range(len(c)):\n            print(c[i], end=' ')\n        print()", "def outer_brackets(bracket_list):\n    first_open = len(bracket_list)\n    last_closed = 0\n    for i in range(len(bracket_list)):\n        if bracket_list[i] == '(':\n            first_open = i\n            break\n    for i in range(1, len(bracket_list) + 1):\n        if bracket_list[-i] == ')':\n            last_closed = len(bracket_list) - i\n            break\n    return [first_open, last_closed]\n\ndef print_list(list):\n    answer = ''\n    for item in list:\n        answer += str(item) + ' '\n    print(answer)\n\ndef add_one_to_list(list):\n    for i in range(len(list)):\n        list[i] += 1\nbrackets = input()\nbracket_list = []\nfor bracket in brackets:\n    bracket_list.append(bracket)\nmove_count = 0\nis_simple = False\nis_reducible = True\nremove_history = []\nwhile is_simple is False:\n    pairs_to_remove = []\n    while is_reducible is True:\n        current_pair = outer_brackets(bracket_list)\n        first_open = current_pair[0]\n        last_closed = current_pair[1]\n        if first_open < last_closed:\n            pairs_to_remove.append(current_pair[0])\n            pairs_to_remove.append(current_pair[1])\n            bracket_list[current_pair[0]] = 'x'\n            bracket_list[current_pair[1]] = 'x'\n        else:\n            is_reducible = False\n    pairs_to_remove.sort()\n    if not pairs_to_remove:\n        is_simple = True\n    else:\n        remove_history.append(pairs_to_remove)\n        move_count += 1\nprint(move_count)\nfor move in remove_history:\n    add_one_to_list(move)\n    print(len(move))\n    print_list(move)", "def outer_brackets(bracket_list):\n    first_open = len(bracket_list)\n    last_closed = 0\n    for i in range(len(bracket_list)):\n        if bracket_list[i] == '(':\n            first_open = i\n            break\n    for i in range(1, len(bracket_list) + 1):\n        if bracket_list[-i] == ')':\n            last_closed = len(bracket_list) - i\n            break\n    return [first_open, last_closed]\n\ndef print_list(list):\n    answer = ''\n    for item in list:\n        answer += str(item) + ' '\n    print(answer)\n\ndef add_one_to_list(list):\n    for i in range(len(list)):\n        list[i] += 1\nbrackets = input()\nbracket_list = []\nfor bracket in brackets:\n    bracket_list.append(bracket)\nmove_count = 0\nis_simple = False\nis_reducible = True\nremove_history = []\nwhile is_simple is False:\n    pairs_to_remove = []\n    while is_reducible is True:\n        current_pair = outer_brackets(bracket_list)\n        first_open = current_pair[0]\n        last_closed = current_pair[1]\n        if first_open < last_closed:\n            pairs_to_remove.append(current_pair[0])\n            pairs_to_remove.append(current_pair[1])\n            bracket_list[current_pair[0]] = 'x'\n            bracket_list[current_pair[1]] = 'x'\n        else:\n            is_reducible = False\n    pairs_to_remove.sort()\n    if not pairs_to_remove:\n        is_simple = True\n    else:\n        remove_history.append(pairs_to_remove)\n        move_count += 1\nprint(move_count)\nfor move in remove_history:\n    add_one_to_list(move)\n    print(len(move))\n    print_list(move)", "s = input()\ni = 0\nj = len(s) - 1\nflag = 0\nc = 0\nli = []\nwhile i < j:\n    if s[i] == '(' and s[j] == ')':\n        if flag == 0:\n            c += 1\n            flag = 1\n        li.append(i + 1)\n        li.append(j + 1)\n        i += 1\n        j -= 1\n    else:\n        if s[i] == ')':\n            i += 1\n        if s[j] == '(':\n            j -= 1\nprint(c)\nif c != 0:\n    print(len(li))\n    li.sort()\n    print(*li)", "a = input()\ns1 = []\ns2 = []\n(c, o) = (0, len(a) - 1)\nwhile o - c >= 1:\n    while o >= 0 and a[o] == '(':\n        o -= 1\n    while c < len(a) and a[c] == ')':\n        c += 1\n    if o >= 0 and c < len(a) and (c < o):\n        s1.append(c + 1)\n        s2.append(o + 1)\n        c += 1\n        o -= 1\nif not s1:\n    print(0)\n    exit(0)\nprint(1)\nprint(2 * len(s1))\nprint(*s1, end=' ')\ns2.reverse()\nprint(*s2)", "s = input()\nlow = 0\nhigh = len(s) - 1\nres = []\nwhile low < high:\n    if s[low] == '(':\n        while low < high and s[high] != ')':\n            high -= 1\n        if low < high:\n            res.append(low + 1)\n            res.append(high + 1)\n            high -= 1\n        else:\n            break\n    low += 1\nif res:\n    print(1)\n    print(len(res))\n    res.sort()\n    print(*res)\nelse:\n    print(0)", "string = input()\n(oList, cList) = ([], [])\nfor i in range(len(string)):\n    if string[i] == '(':\n        oList.append(i)\n    if string[i] == ')':\n        cList.append(i)\n(oPtr, cPtr) = (0, len(cList) - 1)\nremoval = []\nwhile oPtr < len(oList) and cPtr >= 0:\n    if oList[oPtr] > cList[cPtr]:\n        break\n    removal.append(oList[oPtr])\n    removal.append(cList[cPtr])\n    oPtr += 1\n    cPtr -= 1\nremoval.sort()\nif len(removal) == 0:\n    print(0)\nelse:\n    print('1\\n{}\\n{}'.format(len(removal), ' '.join([str(x + 1) for x in removal])))", "from sys import stdin\n\ndef line():\n    return stdin.readline().strip()\n\ndef main():\n    cad = line()\n    ini = 0\n    fin = len(cad) - 1\n    ans = []\n    while ini < fin:\n        while cad[ini] != '(' and ini != fin:\n            ini += 1\n        while cad[fin] != ')' and ini != fin:\n            fin -= 1\n        if ini == fin:\n            break\n        ans.append(ini + 1)\n        ans.append(fin + 1)\n        ini += 1\n        fin -= 1\n    if not len(ans):\n        print(0)\n    else:\n        print(1, '\\n', len(ans))\n        for item in sorted(ans):\n            print(item, end=' ')\nmain()", "s = input()\ni = 0\nj = len(s) - 1\nli = []\nwhile i < j:\n    if s[i] == '(' and s[j] == ')':\n        li.append(i + 1)\n        li.append(j + 1)\n        i += 1\n        j -= 1\n    elif s[i] == ')':\n        i += 1\n    else:\n        j -= 1\nl_li = len(li)\nif l_li == 0:\n    print(0)\nelse:\n    print(1)\n    print(len(li))\n    li.sort()\n    print(*li, sep=' ')", "s = input()\nn = len(s)\na = []\nb = []\noc = cc = 0\nstart = 0\nend = n - 1\nwhile end >= start:\n    if oc > cc:\n        if s[end] == ')':\n            cc += 1\n            b.append(end + 1)\n        end -= 1\n    else:\n        if s[start] == '(':\n            oc += 1\n            a.append(start + 1)\n        start += 1\nif oc == 0 or cc == 0:\n    print('0')\nelse:\n    print('1')\n    if oc > cc:\n        print(2 * cc)\n        b.extend(a[:-1])\n        b.sort()\n        print(*b)\n    elif cc > oc:\n        print(2 * oc)\n        a.extend(b[:-1])\n        a.sort()\n        print(*a)\n    else:\n        print(2 * oc)\n        a.extend(b)\n        a.sort()\n        print(*a)", "x = list(input())\na = []\nb = []\nfor i1 in range(len(x)):\n    if x[i1] == '(':\n        a.append(i1 + 1)\n    else:\n        b.append(i1 + 1)\nb.reverse()\nindex = []\ni = 0\nwhile True:\n    if i >= len(b) or i >= len(a):\n        break\n    if a[i] < b[i]:\n        index.append(a[i])\n        index.append(b[i])\n    else:\n        break\n    i += 1\nindex.sort()\nif len(index) == 0:\n    print(0)\nelse:\n    print(1)\n    print(len(index))\n    print(*index)", "string = input()\n(oList, cList) = ([], [])\nfor i in range(len(string)):\n    if string[i] == '(':\n        oList.append(i)\n    if string[i] == ')':\n        cList.append(i)\n(oPtr, cPtr) = (0, len(cList) - 1)\nremoval = []\nwhile oPtr < len(oList) and cPtr >= 0:\n    if oList[oPtr] > cList[cPtr]:\n        break\n    removal.append(oList[oPtr])\n    removal.append(cList[cPtr])\n    oPtr += 1\n    cPtr -= 1\nremoval.sort()\nif len(removal) == 0:\n    print(0)\nelse:\n    print('1\\n{}\\n{}'.format(len(removal), ' '.join([str(x + 1) for x in removal])))", "s = input()\nop = []\ncl = []\nans = []\nfor i in range(len(s)):\n    if s[i] == '(':\n        op.append(i)\n    else:\n        cl.append(i)\nop.reverse()\nwhile op and cl and (op[-1] < cl[-1]):\n    ans.append(op.pop(-1) + 1)\n    ans.append(cl.pop(-1) + 1)\nans.sort()\nif len(ans) == 0:\n    print(0)\nelse:\n    print(1)\n    print(len(ans))\n    print(*ans)", "s = input()\nn = len(s)\na = []\nb = []\ni = 0\nj = n - 1\nwhile i < j:\n    if s[i] == '(' and s[j] == ')':\n        a.append(i + 1)\n        b = [j + 1] + b\n        i += 1\n        j -= 1\n    elif s[j] == '(':\n        j -= 1\n    elif s[i] == ')':\n        i += 1\nif len(a) != 0:\n    print(1)\n    print(len(a) + len(b))\n    print(*a, *b)\nelse:\n    print(0)", "l = list(input())\nleft = 0\nright = len(l) - 1\nans = 0\nindex = []\nwhile left < right:\n    while left < right and l[left] != '(':\n        left += 1\n    while right > left and l[right] != ')':\n        right -= 1\n    if l[left] == '(' and l[right] == ')':\n        ans += 1\n        index.extend([left + 1, right + 1])\n        left += 1\n        right -= 1\n    else:\n        break\nif index:\n    print(1)\n    print(ans * 2)\n    index.sort()\n    print(*index)\nelse:\n    print(0)", "a = input().strip()\nans = []\nl = 0\nr = len(a) - 1\nwhile l < r:\n    if a[l] != '(':\n        l += 1\n        continue\n    if a[r] != ')':\n        r -= 1\n        continue\n    ans.append(l + 1)\n    ans.append(r + 1)\n    l += 1\n    r -= 1\nif ans:\n    print(1)\n    print(len(ans))\n    ans.sort()\n    print(' '.join(map(str, ans)))\nelse:\n    print(0)", "s = input()\nres = []\ni = 0\nj = len(s) - 1\nwhile i < j:\n    if s[i] == '(' and s[j] == ')':\n        res.append(i + 1)\n        res.append(j + 1)\n        i += 1\n        j -= 1\n    elif s[i] == ')':\n        i += 1\n    else:\n        j -= 1\nif len(res) == 0:\n    print(0)\nelse:\n    print(1)\n    print(len(res))\n    res.sort()\n    print(*res, sep=' ')", "S = input()\nN = len(S)\n(L, R) = ([], [])\n(l, r) = (0, N - 1)\nwhile r > l:\n    while S[l] == ')':\n        l += 1\n        if l >= N:\n            break\n    while S[r] == '(':\n        r -= 1\n        if r < 0:\n            break\n    if r > l:\n        L.append(l + 1)\n        R.append(r + 1)\n        l += 1\n        r -= 1\nif len(L) == 0:\n    print(0)\nelse:\n    print(1)\n    print(len(L) * 2)\n    print(*L + R[::-1])", "s = input()\nle = len(s)\ni = 0\nj = le - 1\nans = []\nwhile i < j:\n    while s[i] == ')' and i < j:\n        i = i + 1\n    while s[j] == '(' and i < j:\n        j = j - 1\n    if i < j:\n        ans.append(i)\n        ans.append(j)\n        i = i + 1\n        j = j - 1\nans.sort()\nif len(ans) > 0:\n    print(1)\n    print(len(ans))\n    for i in range(len(ans)):\n        if i == len(ans) - 1:\n            print(ans[i] + 1)\n        else:\n            print(ans[i] + 1, end=' ')\nelse:\n    print(0)", "t = input()\ncn1 = []\ncn2 = []\nr = []\nfor i in range(len(t)):\n    if t[i] == '(':\n        cn1.append(i + 1)\n    else:\n        cn2.append(i + 1)\ncn2 = cn2[::-1]\nfor i in range(min(len(cn2), len(cn1))):\n    if cn2[i] > cn1[i]:\n        r.append(cn1[i])\n        r.append(cn2[i])\n    else:\n        break\nr.sort()\nif len(r) != 0:\n    print(1)\nprint(len(r))\nprint(*r)", "a = input()\nc = []\nb = []\ni = 0\nj = len(a) - 1\nwhile i < j:\n    if a[i] == '(':\n        k = 0\n        for k in range(j, i, -1):\n            if a[k] == ')':\n                b.append(i)\n                c.append(k)\n                break\n        j = k - 1\n    i = i + 1\nif len(b) == 0 or len(c) == 0:\n    print(0)\nelse:\n    print(1)\n    print(len(b) + len(c))\n    for i in range(len(b)):\n        print(b[i] + 1, end=' ')\n    for i in range(len(c) - 1, -1, -1):\n        print(c[i] + 1, end=' ')", "s = input().strip()\nops = []\nopening = [i for (i, c) in enumerate(s) if c == '('][::-1]\nclosing = [i for (i, c) in enumerate(s) if c == ')']\nwhile opening and closing and (opening[-1] < closing[-1]):\n    op = []\n    while opening and closing and (opening[-1] < closing[-1]):\n        op.append(opening.pop() + 1)\n        op.append(closing.pop() + 1)\n    ops.append(sorted(op))\nprint(len(ops))\nfor op in ops:\n    print(len(op))\n    print(' '.join(map(str, op)))", "s = input()\ni = 0\nl = []\nl2 = []\nj = len(s) - 1\nwhile i < j:\n    if s[i] == '(':\n        if s[j] == ')':\n            l.append(i + 1)\n            l2.insert(0, j + 1)\n            i += 1\n            j -= 1\n        else:\n            j -= 1\n    else:\n        i += 1\nl += l2\nif not l:\n    print(0)\nelse:\n    print(1)\n    print(len(l))\n    for i in l:\n        print(i, end=' ')", "word = list(input())\nresult = []\nwhile True:\n    i = 0\n    j = len(word) - 1\n    del_list = []\n    check = 0\n    while i <= j:\n        if check == 0:\n            if word[i] != '(':\n                i += 1\n            else:\n                del_list.append(i + 1)\n                check = 1\n                i += 1\n        elif word[j] != ')':\n            j -= 1\n        else:\n            del_list.append(j + 1)\n            check = 0\n            j -= 1\n    if len(del_list) % 2 != 0:\n        del_list.pop()\n    del_list.sort()\n    cnt = 0\n    for e in del_list:\n        del word[e - 1 - cnt]\n        cnt += 1\n    if not del_list:\n        break\n    result.append(del_list)\nprint(len(result))\nfor i in range(len(result)):\n    print(len(result[i]))\n    for j in range(len(result[i])):\n        print(result[i][j], end=' ')\n    print()", "a = input()\na = list(a)\ni = -1\nj = len(a)\nk = 0\nm1 = []\nm2 = []\nwhile i < j:\n    while True:\n        i += 1\n        if i >= j:\n            break\n        if a[i] == '(':\n            m1.append(i + 1)\n            break\n    while True:\n        j -= 1\n        if i >= j:\n            break\n        if a[j] == ')':\n            m2.append(j + 1)\n            break\nif len(m1) > 0 and len(m2) > 0:\n    print(1)\n    print(2 * min(len(m1), len(m2)))\n    m2.reverse()\n    for i in range(len(m1) - len(m2)):\n        m1.pop()\n    print(' '.join(map(str, m1 + m2)))\nelse:\n    print(0)", "s = input()\na = []\nb = []\nl = 1\nfor i in s:\n    if i == '(':\n        a.append(l)\n    else:\n        b.append(l)\n    l += 1\nk = 0\nj = len(b) - 1\nans = []\ncount = 0\nwhile j >= 0 and k < len(a) and (a[k] < b[j]):\n    ans.append(a[k])\n    ans.append(b[j])\n    k += 1\n    j -= 1\n    count += 1\nif len(ans) > 0:\n    ans.sort()\nif count > 0:\n    print('1')\n    print(len(ans))\n    for p in ans:\n        print(p, end=' ')\nelse:\n    print('0')", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    S = input().strip()\n    ans = []\n    l = 0\n    r = len(S) - 1\n    while True:\n        while l <= len(S) - 1 and S[l] != '(':\n            l += 1\n        if l == len(S):\n            break\n        while r >= 0 and S[r] != ')':\n            r -= 1\n        if r == 0:\n            break\n        if r <= l:\n            break\n        else:\n            ans.append(l + 1)\n            ans.append(r + 1)\n            l += 1\n            r -= 1\n    if len(ans) == 0:\n        print(0)\n        return\n    print(1)\n    print(len(ans))\n    ans.sort()\n    print(*ans)\nmain()", "s = input()\nn = len(s)\n(l, r) = (0, n - 1)\n(ob, cb) = ([], [])\nwhile r >= l:\n    if len(ob) == len(cb):\n        if s[l] == '(':\n            ob.append(l + 1)\n        l += 1\n    else:\n        if s[r] == ')':\n            cb.append(r + 1)\n        r -= 1\nl = len(cb)\nans = ob[:l] + cb[::-1]\nif len(ans):\n    print(1)\n    print(len(ans))\n    print(' '.join(map(str, ans)))\nelse:\n    print(0)", "from sys import stdin\n\ndef main():\n    readline = stdin.readline\n    s = readline().strip()\n    count = 0\n    count_left = [0] * (len(s) + 2)\n    count_right = [0] * (len(s) + 2)\n    max_count = 0\n    for i in range(len(s) + 2):\n        if i == 0:\n            continue\n        if i == len(s) + 1:\n            count_left[i] = count_left[i - 1]\n            break\n        if s[i - 1] == '(':\n            count += 1\n            count_left[i] = count\n        elif s[i - 1] == ')':\n            count_left[i] = count\n    count = 0\n    for i in range(len(s) + 2):\n        i = len(s) + 1 - i\n        if i == len(s) + 1:\n            continue\n        if i == 0:\n            count_right[i] = count_right[i + 1]\n            break\n        if s[i - 1] == ')':\n            count += 1\n            count_right[i] = count\n        elif s[i - 1] == '(':\n            count_right[i] = count\n    for i in range(len(count_left)):\n        max_count = max(max_count, min(count_left[i], count_right[i]))\n    left = max_count\n    right = max_count\n    result = []\n    i = 0\n    while left > 0:\n        if s[i] == '(':\n            left -= 1\n            result.append(i + 1)\n        i += 1\n    i = len(s) - 1\n    while right > 0:\n        if s[i] == ')':\n            right -= 1\n            result.append(i + 1)\n        i -= 1\n    result.sort()\n    if len(result) > 0:\n        print(1)\n        print(len(result))\n        print(*result)\n    else:\n        print(0)\nmain()", "s = input()\nn = len(s)\ncount = 0\nmajorcount = 0\nlisti = []\nlistj = []\ni = 0\nj = n - 1\nfor k in range(n):\n    if j > i:\n        if s[i] == '(' and s[j] == ')':\n            listi.append(i)\n            listi.append(j)\n            count += 1\n            j = j - 1\n            i += 1\n        if s[i] == '(' and s[j] == '(':\n            j = j - 1\n        if s[i] == ')':\n            i = i + 1\nlist2 = sorted(listi)\nif count == 0:\n    print(0)\nelse:\n    print(1)\n    print(len(list2))\n    for i in list2:\n        print(i + 1, end=' ')", "s = input()\ni = 0\nl = []\nl2 = []\nj = len(s) - 1\nwhile i < j:\n    if s[i] == '(':\n        if s[j] == ')':\n            l.append(i + 1)\n            l2.insert(0, j + 1)\n            i += 1\n            j -= 1\n        else:\n            j -= 1\n    else:\n        i += 1\nl += l2\nif not l:\n    print(0)\nelse:\n    print(1)\n    print(len(l))\n    for i in l:\n        print(i, end=' ')", "def f():\n    s = input()\n    n = len(s)\n    memo0 = [0] * n\n    memo1 = [0] * n\n    cur = 0\n    for i in range(n):\n        if s[i] == '(':\n            cur += 1\n        memo0[i] = cur\n    cur = 0\n    for i in range(n - 1, -1, -1):\n        if s[i] == ')':\n            cur += 1\n        memo1[i] = cur\n    memo1.append(0)\n    memo0 = [0] + memo0\n    for i in range(n + 1):\n        if memo0[i] == memo1[i]:\n            bar = i\n            break\n    count = memo0[bar] * 2\n    if count == 0:\n        print(0)\n        return\n    posi = []\n    for i in range(bar):\n        if s[i] == '(':\n            posi.append(i)\n    for i in range(bar, n):\n        if s[i] == ')':\n            posi.append(i)\n    print(1)\n    print(count)\n    print(' '.join((str(num + 1) for num in posi)))\nf()", "string = input()\n(oList, cList) = ([], [])\nfor i in range(len(string)):\n    if string[i] == '(':\n        oList.append(i)\n    if string[i] == ')':\n        cList.append(i)\n(oPtr, cPtr) = (0, len(cList) - 1)\nremoval = []\nwhile oPtr < len(oList) and cPtr >= 0:\n    if oList[oPtr] > cList[cPtr]:\n        break\n    removal.append(oList[oPtr])\n    removal.append(cList[cPtr])\n    oPtr += 1\n    cPtr -= 1\nremoval.sort()\nif len(removal) == 0:\n    print(0)\nelse:\n    print('1\\n{}\\n{}'.format(len(removal), ' '.join([str(x + 1) for x in removal])))", "st = input()\nop = []\ncl = []\nfin = []\nfor i in range(0, len(st)):\n    if st[i] == '(':\n        op.append(i)\n    else:\n        cl.append(i)\nt = 1\nrem = 0\nops = len(op)\ncls = len(cl)\nj = 0\ni = 0\nif ops == 0 or cls == 0:\n    print(0)\nelif op[0] > cl[cls - 1]:\n    print(0)\nelse:\n    while t:\n        if rem + i > ops - 1 or cls - rem - 1 - j < 0:\n            break\n        if op[rem + i] < cl[cls - rem - 1 - j]:\n            fin.append(op[rem + i] + 1)\n            fin.append(cl[cls - rem - 1 - j] + 1)\n            i = i + 1\n            j = j + 1\n        else:\n            t = 0\n    if len(fin) == 0:\n        print(0)\n    else:\n        print(1)\n        print(len(fin))\n        fin.sort()\n        for i in range(0, len(fin)):\n            print(fin[i], end=' ')", "def main():\n    from sys import stdin, stdout\n    s = stdin.readline().strip()\n    ans = []\n    while True:\n        temp = []\n        l = 0\n        r = len(s) - 1\n        while l < r:\n            if s[l] == '(' and s[r] == ')':\n                temp.append(l)\n                temp.append(r)\n                l += 1\n                r -= 1\n            if s[l] == '(' and s[r] == '(':\n                r -= 1\n            if s[l] == ')':\n                l += 1\n        if len(temp) == 0:\n            break\n        temp.sort()\n        ans.append(temp)\n        tempS = ''\n        j = 0\n        for i in range(len(s)):\n            if j < len(temp) and i == temp[j]:\n                j += 1\n                continue\n            else:\n                tempS += s[i]\n        s = tempS\n    stdout.write(str(len(ans)) + '\\n')\n    for i in ans:\n        stdout.write(str(len(i)) + '\\n')\n        for j in i:\n            stdout.write(str(j + 1) + ' ')\n        stdout.write('\\n')\nmain()", "def main():\n    s = input()\n    moves = []\n    while True:\n        left = 0\n        right = s.count(')')\n        max_count = 0\n        index = -1\n        move = set()\n        for i in range(len(s)):\n            if s[i] == '(':\n                left += 1\n            else:\n                right -= 1\n            count = min(left, right)\n            if count >= max_count:\n                index = i\n                max_count = count\n        if max_count == 0:\n            break\n        for i in range(index + 1):\n            if s[i] == '(':\n                move.add(i + 1)\n            if len(move) == max_count:\n                break\n        for i in range(index + 1, len(s)):\n            if s[i] == ')':\n                move.add(i + 1)\n            if len(move) == 2 * max_count:\n                break\n        s1 = ''\n        for i in range(len(s)):\n            if i + 1 not in move:\n                s1 += s[i]\n        s = s1[:]\n        move = list(move)\n        move.sort()\n        moves.append(move)\n    print(len(moves))\n    for m in moves:\n        print(len(m))\n        for i in m:\n            print(i, end=' ')\n        print()\nmain()", "s = str(input())\nnr = list(range(1, len(s) + 1))\nk = 0\nt = s.find('(')\nz = s.rfind(')')\npt1 = []\npt2 = []\nwhile t != -1 and z != -1 and (z > t):\n    k += 1\n    pt1 = pt1 + [t + 1]\n    pt2 = [z + 1] + pt2\n    t = s.find('(', t + 1)\n    z = s.rfind(')', 0, z)\nif len(pt1) == 0:\n    print(0)\nelse:\n    print(1)\n    print(2 * len(pt1))\n    for i in range(len(pt1)):\n        print(pt1[i], '', end='')\n    for i in range(len(pt2)):\n        print(pt2[i], '', end='')", "from itertools import accumulate\n\ndef solve(p, L, R):\n    if p[1] is '(' and L <= R:\n        return True\n    if p[1] is ')' and L >= R:\n        return True\n    return False\ns = input()\nleft = list(accumulate([1 if ch is '(' else 0 for ch in s]))\nright = list(reversed(list(accumulate([1 if ch is ')' else 0 for ch in reversed(s)]))))\nans = list(map(lambda x: str(x[0] + 1), filter(lambda p: solve(p, left[p[0]], right[p[0]]), enumerate(s))))\nif len(ans) == 0:\n    print('0')\nelse:\n    print('1')\n    print(len(ans))\n    print(' '.join(ans))", "s = input()\nl = list(s)\nres = []\nout = []\nfor (i, item) in enumerate(l):\n    if item == '(':\n        res.append(i + 1)\nflag = 0\nfor i in range(len(s) - 1, -1, -1):\n    if l[i] == '(' and res:\n        del res[-1]\n    if l[i] == ')':\n        if res and res[0] - 1 < i:\n            out.append(i + 1)\n            out.append(res[0])\n            del res[0]\n            flag = 1\nif out:\n    print(1)\n    print(len(out))\n    print(*sorted(out), sep=' ')\nelse:\n    print(0)", "s = input()\n(l, c, b) = ([], 0, len(s))\nfor i in range(len(s)):\n    a = s[:b].rfind(')')\n    if s[i] == '(' and a > -1 and (a > i):\n        c += 1\n        l.append(i + 1)\n        l.append(a + 1)\n        b = a\nif c > 0:\n    print(1)\nprint(c * 2)\nl.sort()\nfor i in l:\n    print(i, end=' ')", "def brac(t):\n    x = len(t)\n    a = []\n    b = []\n    c = []\n    for i in range(x):\n        if t[i] == '(':\n            a.append(i)\n        else:\n            b.append(i)\n    while len(a) > 0 and len(b) > 0:\n        if a[0] < b[-1]:\n            c.append(a[0] + 1)\n            c.append(b[-1] + 1)\n            a.pop(0)\n            b.pop()\n        else:\n            break\n    c.sort()\n    if len(c) > 0:\n        print(1)\n        print(len(c))\n        print(*c)\n    else:\n        print(0)\nt = input()\nbrac(t)", "word = list(input())\nindices = list()\nfor i in range(len(word)):\n    if word[i] == '(' or i == len(word) - 1:\n        for j in range(len(word) - 1, i, -1):\n            if word[j] == ')':\n                indices.append(i)\n                indices.append(j)\n                word[i] = -1\n                word[j] = -1\n                if j != i + 1:\n                    break\n        else:\n            indices = [x + 1 for x in indices]\n            indices.sort()\n            if len(indices) == 0:\n                print(0)\n                exit()\n            else:\n                print(1)\n                print(len(indices))\n                print(*indices)\n                exit()\n            break", "s = input()\nl1 = []\nl2 = []\nfor i in range(len(s)):\n    if s[i] == '(':\n        l1.append(i)\n    else:\n        l2.append(i)\nl2 = l2[::-1]\nl = []\nfor i in range(min(len(l1), len(l2))):\n    if l1[i] > l2[i]:\n        break\n    else:\n        l.append(l1[i] + 1)\n        l.append(l2[i] + 1)\nl.sort()\nif len(l) == 0:\n    print(0)\nelse:\n    print(1)\n    print(len(l))\n    print(*l)", "s = input()\na = []\nb = []\nz = []\nc = 0\nfor i in range(len(s)):\n    if s[i] == '(':\n        a.append(i)\n    else:\n        b.append(i)\n        c = c + 1\ni = j = l = 0\ndel s\nif len(a) > 0:\n    i = a[l]\nif len(b) > 0:\n    j = b[c - 1]\nwhile i < j and len(a) != 0 and (len(b) != 0):\n    z.append(a.pop(0) + 1)\n    z.append(b.pop(c - 1) + 1)\n    c = c - 1\n    if len(a) == 0 or len(b) == 0:\n        break\n    j = b[c - 1]\n    i = a[l]\nif len(z) == 0:\n    print('0')\nelse:\n    print('1')\n    print(len(z))\n    z.sort()\n    z = [str(x) for x in z]\n    print(' '.join(z))", "s = input()\nn = len(s)\na = []\nb = []\ni = 0\nj = n - 1\nwhile i < j:\n    if s[i] == '(' and s[j] == ')':\n        a.append(i + 1)\n        b = [j + 1] + b\n        i += 1\n        j -= 1\n    elif s[j] == '(':\n        j -= 1\n    elif s[i] == ')':\n        i += 1\nif len(a) != 0:\n    print(1)\n    print(len(a) + len(b))\n    print(*a, *b)\nelse:\n    print(0)", "s = input()\ni = 0\nj = len(s) - 1\ncounter = 0\nanswer_1 = []\nanswer_0 = []\nwhile i < j:\n    find_1 = False\n    find_0 = False\n    while i < j:\n        if s[i] == '(':\n            find_1 = True\n            break\n        i += 1\n    while i < j:\n        if s[j] == ')':\n            find_0 = True\n            break\n        j -= 1\n    if i >= j:\n        break\n    counter += 2\n    answer_1.append(i + 1)\n    answer_0.append(j + 1)\n    i += 1\n    j -= 1\nanswer_0.reverse()\nif counter != 0:\n    print('1')\nprint(counter)\nfor item in answer_1:\n    print(item, end=' ')\nfor item in answer_0:\n    print(item, end=' ')", "s = input()\n(oL, cL) = ([], [])\nfor i in range(len(s)):\n    if s[i] == '(':\n        oL.append(i)\n    if s[i] == ')':\n        cL.append(i)\n(oPt, cPt) = (0, len(cL) - 1)\nremov = []\nwhile oPt < len(oL) and cPt >= 0:\n    if oL[oPt] > cL[cPt]:\n        break\n    remov.append(oL[oPt])\n    remov.append(cL[cPt])\n    oPt += 1\n    cPt -= 1\nremov.sort()\nif len(remov) == 0:\n    print(0)\nelse:\n    print('1\\n{}\\n{}'.format(len(remov), ' '.join((str(x + 1) for x in remov))))", "s = input()\nop = []\nclo = []\nfor i in range(len(s)):\n    if s[i] == '(':\n        op.append(i + 1)\n    else:\n        clo.append(i + 1)\nj = 0\nwhile j < min(len(op), len(clo)):\n    if op[j] < clo[len(clo) - 1 - j]:\n        j += 1\n    else:\n        break\nif j != 0:\n    print(1)\nprint(j * 2)\nfor i in range(j):\n    print(op[i], end=' ')\nfor i in range(-j, 0):\n    print(clo[i], end=' ')", "s = input()\na = []\ni = 0\nj = len(s) - 1\nwhile i < j:\n    while i < j and s[i] != '(':\n        i += 1\n    while i < j and s[j] != ')':\n        j -= 1\n    if i < j and s[i] == '(' and (s[j] == ')'):\n        a.append(i + 1)\n        a.append(j + 1)\n        i += 1\n        j -= 1\nif a:\n    print(1)\n    print(len(a))\n    print(*sorted(a))\nelse:\n    print(0)", "s = input()\nsize = len(s)\ni = 0\nj = size - 1\nans = []\nwhile i < j:\n    while i < size and s[i] == ')':\n        i += 1\n    while j >= 0 and s[j] == '(':\n        j -= 1\n    if i < size and j >= 0 and (i < j):\n        ans.append(i + 1)\n        ans.append(j + 1)\n        i += 1\n        j -= 1\nif len(ans) == 0:\n    print(0)\nelse:\n    print(1)\n    print(len(ans))\n    ans = sorted(ans)\n    for x in ans:\n        print(x, end=' ')\n    print()", "s = list(input())\n(p1, p2) = (0, len(s) - 1)\nres = []\nwhile p1 < p2:\n    if s[p1] == '(':\n        while p1 < p2:\n            if s[p2] == ')':\n                res.extend([p1 + 1, p2 + 1])\n                p2 -= 1\n                break\n            p2 -= 1\n    p1 += 1\nif len(res) == 0:\n    print(0)\nelse:\n    print(1)\n    res.sort()\n    print(len(res))\n    for i in res:\n        print(i, end=' ')", "import sys\nS = [s == '(' for s in input()]\nN = len(S)\noutputs = []\nfalses = [i for (i, s) in enumerate(S) if not s]\ntrues = [i for (i, s) in enumerate(S) if s]\ntrues.reverse()\nwhile falses and trues and (trues[-1] < falses[-1]):\n    outputs.append(trues[-1])\n    outputs.append(falses[-1])\n    trues.pop()\n    falses.pop()\nif outputs:\n    print('1')\n    print(len(outputs))\n    print(' '.join([str(x + 1) for x in sorted(outputs)]))\nelse:\n    print('0')", "s = input()\nlst = []\n(i, j) = (0, len(s) - 1)\nwhile i < j:\n    while i < len(s) and s[i] != '(':\n        i += 1\n    while j > -1 and s[j] != ')':\n        j -= 1\n    if i < j:\n        lst.append(i + 1)\n        lst.append(j + 1)\n        i += 1\n        j -= 1\nif len(lst):\n    print(1)\n    print(len(lst))\n    print(*sorted(lst))\nelse:\n    print(0)", "s = input()\ni = 0\nj = len(s) - 1\nli = []\nwhile i < j:\n    if s[i] == '(' and s[j] == ')':\n        li.append(i + 1)\n        li.append(j + 1)\n        i += 1\n        j -= 1\n    elif s[i] == ')':\n        i += 1\n    else:\n        j -= 1\nl_li = len(li)\nif l_li == 0:\n    print(0)\nelse:\n    print(1)\n    print(len(li))\n    li.sort()\n    print(*li, sep=' ')", "s = input()\nres = []\n(i, j) = (0, len(s) - 1)\nwhile i < j:\n    if s[i] == '(':\n        if s[j] == ')':\n            res.extend([i + 1, j + 1])\n            i += 1\n            j -= 1\n        else:\n            j -= 1\n    else:\n        i += 1\nif res:\n    print(1)\n    print(len(res))\n    res.sort()\n    print(*res)\nelse:\n    print(0)", "s = input()\nres = []\n(i, j) = (0, len(s) - 1)\nwhile i < j:\n    if s[i] == '(':\n        if s[j] == ')':\n            res.extend([i + 1, j + 1])\n            i += 1\n            j -= 1\n        else:\n            j -= 1\n    else:\n        i += 1\nif res:\n    print(1)\n    print(len(res))\n    res.sort()\n    print(*res)\nelse:\n    print(0)", "s = input()\nl = -1\nr = len(s)\nla = []\nra = []\nwhile True:\n    while True:\n        l += 1\n        if s[l] == '(':\n            la.append(l + 1)\n            break\n        if l == r or l == len(s) - 1:\n            if l == len(s) - 1:\n                l += 1\n            break\n    if l == r or l == len(s):\n        break\n    while True:\n        r -= 1\n        if s[r] == ')':\n            ra.append(r + 1)\n            break\n        if l == r or r == 0:\n            la = la[:-1]\n            if r == 0:\n                r -= 1\n            break\n    if l == r or r == -1:\n        break\nif len(la) == 0:\n    print(0)\nelse:\n    print(1)\n    ra = ra[::-1]\n    la += ra\n    print(len(la))\n    s = ''\n    for i in la:\n        s += str(i) + ' '\n    print(s[:-1])", "string = input()\n(oList, cList) = ([], [])\nfor i in range(len(string)):\n    if string[i] == '(':\n        oList.append(i)\n    if string[i] == ')':\n        cList.append(i)\n(oPtr, cPtr) = (0, len(cList) - 1)\nremoval = []\nwhile oPtr < len(oList) and cPtr >= 0:\n    if oList[oPtr] > cList[cPtr]:\n        break\n    removal.append(oList[oPtr])\n    removal.append(cList[cPtr])\n    oPtr += 1\n    cPtr -= 1\nremoval.sort()\nif len(removal) == 0:\n    print(0)\nelse:\n    print('1\\n{}\\n{}'.format(len(removal), ' '.join([str(x + 1) for x in removal])))", "string = list(input())\ni = 0\nj = len(string) - 1\nanslist = []\nstartnotfound = 1\nwhile i < j:\n    if string[i] != '(':\n        i += 1\n        continue\n    if string[j] != ')':\n        j -= 1\n        continue\n    if string[i] == '(' and string[j] == ')':\n        anslist.append(i + 1)\n        anslist.append(j + 1)\n        i += 1\n        j -= 1\nif anslist:\n    print(1)\n    print(len(anslist))\n    anslist.sort()\n    print(' '.join([str(i) for i in anslist]))\nelse:\n    print(0)", "s = input()\no = []\nc = []\nfor i in range(len(s)):\n    if s[i] == '(':\n        o.append(i)\n    else:\n        c.append(i)\nans = []\nstart = 0\nend = len(c) - 1\nn = len(o)\nwhile start < n and end >= 0:\n    if o[start] > c[end]:\n        break\n    ans.append(o[start] + 1)\n    ans.append(c[end] + 1)\n    start += 1\n    end -= 1\nm = len(ans)\nif m == 0:\n    print(0)\nelse:\n    print(1)\n    print(m)\n    ans.sort()\n    print(*ans)", "string = input()\nl_string = list(string)\nl_inl = []\ncount = 0\nl_char = []\nwhile True:\n    i = 0\n    j = len(l_string) - 1\n    count_of_char = 0\n    l_index = []\n    flag = 0\n    while i < j:\n        l = l_string[i]\n        r = l_string[j]\n        if l == '(' and r == ')':\n            count_of_char += 2\n            l_index.append(i)\n            l_index.append(j)\n            i += 1\n            j -= 1\n            flag = 1\n        elif l == '(':\n            j -= 1\n        elif r == ')':\n            i += 1\n        else:\n            i += 1\n            j -= 1\n    if flag == 1:\n        flag = 0\n        count += 1\n        l_char.append(count_of_char)\n        l_index.sort()\n        iter = 0\n        for k in l_index:\n            l_string.pop(k - iter)\n            iter += 1\n        l_inl.append(l_index)\n    else:\n        break\nprint(count)\nfor i in range(len(l_char)):\n    print(l_char[i])\n    str_fin = ''\n    for k in l_inl[i]:\n        str_fin += str(k + 1) + ' '\n    print(str_fin[:-1])", "s = input()\nans = []\n(first, last) = (0, len(s) - 1)\nwhile True:\n    while first < len(s) and s[first] == ')':\n        first += 1\n    while last >= 0 and s[last] == '(':\n        last -= 1\n    if first >= last:\n        break\n    ans.append(first + 1)\n    first += 1\n    ans.append(last + 1)\n    last -= 1\nif ans:\n    print(1)\n    print(len(ans))\n    print(' '.join((str(i) for i in sorted(ans))))\nelse:\n    print(0)", "a = input()\ni = 0\ns = list()\ne = list()\nf = list()\nr = []\nwhile i < len(a):\n    if a[i] == '(':\n        s.append(i + 1)\n    i += 1\ni = 0\nwhile i < len(a):\n    if a[i] == ')':\n        e.append(i + 1)\n    i += 1\nif len(s) == 0 or len(e) == 0:\n    print(0)\nelse:\n    e.sort(reverse=True)\n    m = min(len(s), len(e))\n    for i in range(m):\n        if s[i] < e[i]:\n            r.append(s[i])\n            r.append(e[i])\n    if len(r) == 0:\n        print(0)\n    else:\n        print(1)\n        print(len(r))\n        r.sort()\n        print(*r)", "import math\ns = input()\nl = 0\nr = len(s) - 1\na = []\nwhile r > l:\n    if s[l] == '(':\n        while r > l and s[r] != ')':\n            r = r - 1\n        if r > l:\n            a.append(l)\n            a.append(r)\n            r = r - 1\n    l = l + 1\na.sort()\nif len(a) > 0:\n    print(1)\n    print(len(a))\n    for i in range(0, len(a)):\n        print(a[i] + 1, end=' ')\n    print('')\nelse:\n    print(0)", "n = input()\ni = 0\nj = len(n) - 1\nz = []\nwhile i < j:\n    if n[i] == '(' and n[j] == ')':\n        z += [[i + 1, j + 1]]\n        i += 1\n        j -= 1\n    elif n[i] == ')':\n        i += 1\n    elif n[j] == '(':\n        j -= 1\nprint(1 if len(z) else 0)\nif z:\n    print(2 * len(z))\nfor i in z:\n    print(i[0], end=' ')\nfor i in z[::-1]:\n    print(i[-1], end=' ')", "from math import *\nt = 1\nfor i in range(t):\n    s = list(input())\n    n = len(s)\n    a = []\n    b = []\n    for i in range(n):\n        if s[i] == '(':\n            a.append(i)\n        else:\n            b.append(i)\n    (l, r) = (0, len(b) - 1)\n    arr = []\n    while l < len(a) and r >= 0:\n        if a[l] > b[r]:\n            break\n        arr.append(a[l] + 1)\n        arr.append(b[r] + 1)\n        l = l + 1\n        r = r - 1\n    if len(arr) > 0:\n        print(1)\n        print(len(arr))\n        arr.sort()\n        print(*arr)\n    else:\n        print(0)", "s = input()\nop = []\ncl = []\nfor (i, c) in enumerate(s):\n    if c == '(':\n        op.append(i)\n    else:\n        cl.append(i)\ncl = cl[::-1]\n(k, m) = (0, 0)\na = []\nfor (o, c) in zip(op, cl):\n    if o < c:\n        m += 2\n        a.extend([o + 1, c + 1])\n    else:\n        break\nif a:\n    k = 1\n    print(k)\n    print(m)\n    print(' '.join(map(str, sorted(a))))\nelse:\n    print(0)", "s = input()\nl = []\nl1 = []\nfor i in range(len(s)):\n    if s[i] == '(':\n        l.append(i)\nfor i in range(len(s) - 1, -1, -1):\n    if s[i] == ')':\n        l1.append(i)\np = min(len(l1), len(l))\ni = 0\nremoval = []\nwhile i < p:\n    if l[i] > l1[i]:\n        break\n    removal.append(l[i] + 1)\n    removal.append(l1[i] + 1)\n    i += 1\nif len(removal) > 0:\n    print(1)\n    print(len(removal))\n    print(*sorted(removal))\nelse:\n    print(0)", "s = input()\n(opens, closed) = ([], [])\nindices = []\nfor (i, c) in enumerate(s):\n    if c == '(':\n        opens.append(i)\n    else:\n        closed.append(i)\n(oPtr, cPtr) = (0, len(closed) - 1)\nwhile oPtr < len(opens) and cPtr > -1:\n    if opens[oPtr] > closed[cPtr]:\n        break\n    indices.append(opens[oPtr] + 1)\n    indices.append(closed[cPtr] + 1)\n    oPtr += 1\n    cPtr -= 1\nindices.sort()\nif len(indices) > 0:\n    print('1\\n' + str(len(indices)) + '\\n' + ' '.join(map(str, indices)))\nelse:\n    print(0)", "s = input()\n(l, r) = (0, len(s) - 1)\na = []\nwhile l <= r:\n    if s[l] == '(' and s[r] == ')':\n        a.append(l + 1)\n        a.append(r + 1)\n        l += 1\n        r -= 1\n    elif s[l] == ')':\n        l += 1\n    else:\n        r -= 1\nif len(a) == 0:\n    print(0)\nelse:\n    print(1)\n    print(len(a))\n    a.sort()\n    print(*a)", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    al = list(input())\n    al.pop()\n    n = len(al)\n    ans = [False] * n\n    ok = 0\n    (i, j) = (0, n - 1)\n    while i < j:\n        while i < n and al[i] == ')':\n            i += 1\n        while j >= 0 and al[j] == '(':\n            j -= 1\n        if i < j and al[i] == '(' and (al[j] == ')'):\n            ans[i] = ans[j] = True\n            ok += 2\n        i += 1\n        j -= 1\n    print(1 if ok != 0 else 0)\n    if ok != 0:\n        print(ok)\n    for i in range(n):\n        if ans[i] == True:\n            print(i + 1, end=' ')\nmain()", "s = input()\nx = 0\ny = len(s) - 1\nl = []\nwhile x < y:\n    if s[x] == '(' and s[y] == ')':\n        l.extend([x + 1, y + 1])\n        x += 1\n        y -= 1\n    elif s[x] == ')' and s[y] == '(':\n        x += 1\n        y -= 1\n    elif s[x] == ')' and s[y] == ')':\n        x += 1\n    else:\n        y -= 1\nif len(l):\n    print(1)\n    print(len(l))\n    print(*sorted(l))\nelse:\n    print(0)", "from math import *\nfrom collections import *\nfrom functools import *\nfrom bisect import *\nfrom itertools import *\nfrom heapq import *\nfrom statistics import *\ninf = float('inf')\nninf = -float('inf')\nip = input\nalphal = 'abcdefghijklmnopqrstuvwxyz'\nalphau = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\ndef ipl():\n    return list(map(int, ip().split()))\n\ndef ipn():\n    return int(ip())\n\ndef ipf():\n    return float(ip())\n\ndef solve():\n    s = ip()\n    n = len(s)\n    (i, j) = (0, n - 1)\n    lb = [i for (i, e) in enumerate(s) if e == '(']\n    rb = [i for (i, e) in enumerate(s) if e == ')']\n    r = []\n    for i in range(min(len(lb), len(rb))):\n        if lb[i] < rb[-i - 1]:\n            r.append(lb[i] + 1)\n            r.append(rb[-i - 1] + 1)\n    if r:\n        print(1)\n        print(len(r))\n        for i in sorted(r):\n            print(i, end=' ')\n        return\n    print(0)\nt = 1\nfor _ in range(t):\n    solve()", "s = input()\nstart = 0\nend = len(s) - 1\nx = []\nwhile start < end and start < len(s) and (end >= 0):\n    if s[start] == ')' and s[end] == ')':\n        start += 1\n    elif s[start] == '(' and s[end] == '(':\n        end -= 1\n    elif s[start] == '(' and s[end] == ')':\n        x += [start + 1, end + 1]\n        start += 1\n        end -= 1\n    else:\n        start += 1\n        end -= 1\nif len(x) > 0:\n    print(1)\n    print(len(x))\n    print(*sorted(x))\nelse:\n    print(0)", "s = input().strip()\nls = list(s)\noperations = []\nk = 0\nwhile True:\n    left = 0\n    right = len(ls) - 1\n    remove = []\n    while left < right:\n        if ls[left] == ')':\n            left += 1\n        else:\n            while left < right:\n                if ls[right] == '(':\n                    right -= 1\n                else:\n                    remove.append(left)\n                    remove.append(right)\n                    left += 1\n                    right -= 1\n                    break\n    if len(remove) == 0:\n        break\n    k += 1\n    ls = [ls[i] for i in range(len(ls)) if i not in remove]\n    operations.append([e + 1 for e in remove])\nprint(k)\nfor c in operations:\n    print(len(c))\n    print(' '.join(map(str, sorted(c))))", "s = input()\nl1 = []\nl2 = []\nfor i in range(len(s)):\n    if s[i] == '(':\n        l1.append(i)\n    else:\n        l2.append(i)\nl2 = l2[::-1]\nl = []\nfor i in range(min(len(l1), len(l2))):\n    if l1[i] > l2[i]:\n        break\n    else:\n        l.append(l1[i] + 1)\n        l.append(l2[i] + 1)\nl.sort()\nif len(l) == 0:\n    print(0)\nelse:\n    print(1)\n    print(len(l))\n    print(*l)", "s = input()\nn = len(s)\nleft = 0\nright = n - 1\nremoved = []\nwhile left < right:\n    if s[left] == '(' and s[right] == ')':\n        removed.append(left + 1)\n        removed.append(right + 1)\n        left += 1\n        right -= 1\n    else:\n        if s[left] == ')':\n            left += 1\n        if s[right] == '(':\n            right -= 1\nif len(removed) == 0:\n    print(0)\nelse:\n    print(1)\n    print(len(removed))\n    print(' '.join(map(str, sorted(removed))))", "s = input()\ni = 0\nj = len(s) - 1\nres = []\nwhile i < j:\n    if s[i] == '(' and s[j] == ')':\n        res.append(i + 1)\n        res.append(j + 1)\n        i += 1\n        j -= 1\n    if s[i] == ')':\n        i += 1\n    if s[j] == '(':\n        j -= 1\nres.sort()\nif len(res):\n    print(1)\n    print(len(res))\n    print(' '.join([str(x) for x in res]))\nelse:\n    print(0)", "s = input()\ni = 0\narr = []\nwhile i < len(s):\n    if s[i] == '(':\n        arr.append(i)\n    i += 1\ni = len(s) - 1\narr1 = []\nwhile i >= 0:\n    if s[i] == ')':\n        arr1.append(i)\n    i -= 1\ni = 0\nj = 0\nans = []\nwhile i < len(arr) and j < len(arr1):\n    if arr[i] < arr1[j]:\n        ans.append(arr[i] + 1)\n        ans.append(arr1[i] + 1)\n    else:\n        break\n    i += 1\n    j += 1\nif len(ans) == 0:\n    print(0)\nelse:\n    print(1)\n    ans = sorted(ans)\n    print(len(ans))\n    print(*ans)", "n = input()\nans = 0\nansArr = []\nwhile True:\n    r = n[::-1]\n    if n.count('(') == 0 or n.count(')') == 0:\n        break\n    if r.index(')') + n.index('(') >= len(n):\n        break\n    a = False\n    ans += 1\n    while a == False:\n        if n.count('(') == 0 or n.count(')') == 0:\n            ansArr.append(-1)\n            break\n        o = n.index('(')\n        p = r.index(')')\n        if o + p >= len(n):\n            a = True\n            ansArr.append(-1)\n        else:\n            ansArr.append(o + 1)\n            ansArr.append(len(n) - p)\n            n = n[:o] + '-' + n[o + 1:]\n            n = n[:len(n) - p - 1] + '-' + n[len(n) - p:]\n            r = n[::-1]\nprint(ans)\nfor i in range(ans):\n    print(ansArr.index(-1))\n    k = ansArr[:ansArr.index(-1)]\n    k.sort()\n    for j in range(ansArr.index(-1)):\n        print(k[j], end=' ')\n    print()\n    ansArr = ansArr[ansArr.index(-1) + 1:]", "S = input()\nIncreasing = []\nDecreasing = []\ncount = 0\nfor i in S:\n    if i == '(':\n        count += 1\n        Increasing.append(count)\n    else:\n        Increasing.append(count)\ncount = 0\nfor i in S[::-1]:\n    if i == ')':\n        count += 1\n        Decreasing.append(count)\n    else:\n        Decreasing.append(count)\nDecreasing = Decreasing[::-1]\nindex = -1001\nfor i in range(len(Increasing) - 1):\n    if Increasing[i] == Decreasing[i + 1] != 0:\n        index = i\n        break\nif index != -1001:\n    print(1)\n    Ans = []\n    for i in range(index + 1):\n        if S[i] == '(':\n            Ans.append(i + 1)\n    for j in range(index + 1, len(Increasing)):\n        if S[j] == ')':\n            Ans.append(j + 1)\n    print(len(Ans))\n    print(*Ans)\nelse:\n    print(0)", "s = input()\nk = [[0, 0] for i in range(len(s))]\nleft = 0\nright = 0\nfor i in range(len(s)):\n    if s[i] == '(':\n        left += 1\n    k[i][0] = left\n    k[-i - 1][1] = right\n    if s[-i - 1] == ')':\n        right += 1\nx = 0\nans = -1\nfor i in range(len(k)):\n    if k[i][0] == k[i][1] and k[i][0] > ans:\n        x = i\n        ans = k[i][0]\nremoved = []\ni = 0\nj = 0\nwhile j < ans:\n    if s[i] == '(':\n        removed.append(i + 1)\n        j += 1\n    i += 1\ni = 1\nj = 0\nwhile j < ans and len(s) - i >= 0:\n    if s[len(s) - i] == ')':\n        removed.append(len(s) - i + 1)\n        j += 1\n    i += 1\nremoved.sort()\nif len(removed):\n    print(1)\n    print(len(removed))\n    print(*removed)\nelse:\n    print(0)"]