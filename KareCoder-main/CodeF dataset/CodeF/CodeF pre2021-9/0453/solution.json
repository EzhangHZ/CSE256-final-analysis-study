["import math, sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nmod1 = 1000000007\nmod2 = 998244353\nfor _ in range(I()):\n    (n, k) = M()\n    s = S()\n    f = o = z = 0\n    for i in range(k):\n        s1 = ''\n        for j in range(i, n, k):\n            s1 += s[j]\n        if '1' in s1 and '0' in s1:\n            f = 1\n            break\n        elif '1' in s1:\n            o += 1\n        elif '0' in s1:\n            z += 1\n        else:\n            o += 1\n            z += 1\n    print('YES' if f == 0 and o >= k // 2 and (z >= k // 2) else 'NO')", "t = int(input())\nc = []\nfor i in range(t):\n    ph = []\n    blo = 'YES'\n    a = input().split(' ')\n    m = int(a[0])\n    n = int(a[1])\n    b = list(input())\n    for j in range(n):\n        sam = []\n        for k in b[j::n]:\n            sam.append(k)\n        if '1' in sam and '0' in sam:\n            blo = 'NO'\n            break\n        elif '1' in sam:\n            ph.append('1')\n        elif '0' in sam:\n            ph.append('0')\n        else:\n            ph.append('?')\n    x = ph.count('1')\n    y = ph.count('0')\n    z = ph.count('?')\n    if x > y and z < x - y:\n        blo = 'NO'\n    elif x < y and z < y - x:\n        blo = 'NO'\n    c.append(blo)\nfor i in range(t):\n    print(c[i])", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    l = [''] * k\n    works = True\n    for i in range(n):\n        c = s[i]\n        if c != '?':\n            if l[i % k] == c or l[i % k] == '':\n                l[i % k] = c\n            else:\n                works = False\n                break\n    if works:\n        smol = 0\n        big = k\n        for c in l:\n            if c == '0':\n                big -= 1\n            elif c == '1':\n                smol += 1\n        goal = k // 2\n        if smol <= goal <= big:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef out(ret):\n    print(ret)\n\ndef outlt(ret):\n    print(' '.join(ret))\n\nclass Solution:\n\n    def main(self, n, k, s):\n        for i in range(k):\n            if s[i] == '?':\n                for j in range(i + k, n, k):\n                    if s[j] != '?':\n                        s[i] = s[j]\n                        break\n        for i in range(k):\n            if s[i] != '?':\n                for j in range(i + k, n, k):\n                    if s[j] == '?':\n                        s[j] = s[i]\n                    elif s[j] != s[i]:\n                        return 'NO'\n                    j += k\n        substr = s[:k]\n        if substr.count('0') <= k / 2 and substr.count('1') <= k / 2:\n            return 'YES'\n        else:\n            return 'NO'\nt = inp()\nsolution = Solution()\nfor _ in range(t):\n    (n, k) = inlt()\n    s = insr()\n    out(solution.main(n, k, s))", "def func(n, k, s):\n    zeroCount = 0\n    oneCount = 0\n    s = list(s)\n    for i in range(k):\n        if s[i] == '?':\n            for j in range(i + k, n, k):\n                if s[j] != '?':\n                    s[i] = s[j]\n                    break\n    for i in range(k):\n        if s[i] != '?':\n            for j in range(i + k, n, k):\n                if s[j] == '?':\n                    s[j] = s[i]\n                elif s[j] != s[i]:\n                    return 'NO'\n    for i in range(k):\n        if s[i] == '1':\n            oneCount += 1\n        if s[i] == '0':\n            zeroCount += 1\n    if oneCount <= k / 2 and zeroCount <= k / 2:\n        return 'YES'\n    else:\n        return 'NO'\nt = int(input())\nans_arr = []\nfor i in range(t):\n    n_klist = list(map(int, input().split()))\n    n = n_klist[0]\n    k = n_klist[1]\n    s = str(input())\n    balance_str = func(n, k, s)\n    ans_arr.append(balance_str)\nfor j in ans_arr:\n    print(j)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    (s, l) = (input(), [''] * k)\n    for i in range(k):\n        l[i] = s[i::k]\n    (ans, c1, c2) = (True, 0, 0)\n    for i in range(k):\n        c1 += 1 if '1' in l[i] else -1\n        c2 += -1 if '0' in l[i] else 1\n        ans &= not ('0' in l[i] and '1' in l[i])\n    ans &= c1 <= 0 and 0 <= c2\n    print('YES' if ans else 'NO')", "import sys\n\ndef minp():\n    return sys.stdin.readline().strip()\n\ndef mint():\n    return int(minp())\n\ndef mints():\n    return map(int, minp().split())\n\ndef solve():\n    (a, b) = mints()\n    s = minp()\n    r = [2] * b\n    ss = [0] * a\n    for i in range(len(s)):\n        c = s[i]\n        if c == '?':\n            ss[i] = 2\n        elif c == '0':\n            ss[i] = 0\n            r[i % b] = 0\n        else:\n            ss[i] = 1\n            r[i % b] = 1\n    c = [0, 0, 0]\n    for i in r:\n        c[i] += 1\n    for i in range(b):\n        if r[i] == 2:\n            if c[0] < c[1]:\n                r[i] = 0\n                c[0] += 1\n            else:\n                r[i] = 1\n                c[1] += 1\n    if c[0] != c[1]:\n        return False\n    for i in range(len(s)):\n        if ss[i] != 2 and r[i % b] != ss[i]:\n            return False\n    return True\nfor i in range(mint()):\n    print(['NO', 'YES'][solve()])", "import sys\ninput = sys.stdin.readline\nins = lambda : input().rstrip()\nini = lambda : int(input().rstrip())\ninm = lambda : map(int, input().rstrip().split())\ninl = lambda : list(map(int, input().split()))\nout = lambda x, s='\\n': print(s.join(map(str, x)))\nt = ini()\nfor _ in range(t):\n    (n, k) = inm()\n    s = list(ins())\n    ans = True\n    count0 = count1 = 0\n    for i in range(k):\n        seen0 = seen1 = False\n        for j in range(i, n, k):\n            if s[j] == '0':\n                seen0 = True\n            elif s[j] == '1':\n                seen1 = True\n        if seen0 and seen1:\n            ans = False\n            break\n        elif seen0:\n            count0 += 1\n        elif seen1:\n            count1 += 1\n    if count0 > k // 2 or count1 > k // 2:\n        ans = False\n    print('YES' if ans else 'NO')", "def func_name(x, y, z):\n    z = list(z)\n    temp = 0\n    temp1 = 0\n    for i in range(y):\n        if z[i] == '?':\n            for j in range(i + y, x, y):\n                if z[j] != '?':\n                    z[i] = z[j]\n                    break\n    for i in range(y):\n        if z[i] != '?':\n            for j in range(i + y, x, y):\n                if z[j] == '?':\n                    z[j] = z[i]\n                elif z[j] != z[i]:\n                    return 'NO'\n    for i in range(y):\n        if z[i] == '1':\n            temp += 1\n        if z[i] == '0':\n            temp1 += 1\n    if temp <= y / 2 and temp1 <= y / 2:\n        return 'YES'\n    else:\n        return 'NO'\nt = int(input())\nfor i in range(t):\n    temp = list(map(int, input().split()))\n    x = temp[0]\n    y = temp[1]\n    z = input()\n    answer = func_name(x, y, z)\n    print(answer)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    (u, v, w) = (0, 0, 0)\n    for i in range(k):\n        (o, z, q) = (0, 0, 0)\n        for j in range(i, n, k):\n            if s[j] == '0':\n                z += 1\n            elif s[j] == '1':\n                o += 1\n            else:\n                q += 1\n        if o and z:\n            print('NO')\n            break\n        elif o:\n            u += 1\n        elif z:\n            v += 1\n        else:\n            w += 1\n    else:\n        print('YES' if u <= k // 2 and v <= k // 2 else 'NO')", "def solve(n, k, s):\n    period = [None] * k\n    for (i, char) in enumerate(s):\n        if char != '?':\n            if period[i % k] is None:\n                period[i % k] = char\n            elif period[i % k] != char:\n                return 'NO'\n    count1 = count0 = 0\n    for char in period:\n        count1 += char == '1'\n        count0 += char == '0'\n    if count1 <= k // 2 and count0 <= k // 2:\n        return 'YES'\n    return 'NO'\nt = int(input())\nfor _ in range(t):\n    (n, k) = [*map(int, input().split())][:2]\n    s = input()\n    print(solve(n, k, s))", "def solve():\n    (n, k) = map(int, input().split())\n    s = list(input().strip())\n    for start in range(k):\n        letters = set(s[start:n:k])\n        if '0' in letters and '1' in letters:\n            print('NO')\n            return\n        if '0' in letters:\n            s[start] = '0'\n        if '1' in letters:\n            s[start] = '1'\n    nr_0 = s[:k].count('0')\n    nr_1 = s[:k].count('1')\n    nr_q = s[:k].count('?')\n    if abs(nr_0 - nr_1) > nr_q:\n        print('NO')\n    else:\n        print('YES')\nruns = int(input())\nwhile runs > 0:\n    solve()\n    runs -= 1", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    (s, side, yes, counts) = (input().strip(), [set() for _ in range(k)], True, [0, 0])\n    for i in range(n):\n        if s[i] != '?':\n            side[i % k].add(s[i])\n    for i in range(k):\n        if len(side[i]) > 1:\n            yes = False\n        elif side[i]:\n            counts[int(side[i].pop())] += 1\n    print(f\"{('YES' if yes and max(counts) <= k // 2 else 'NO')}\")", "def check(s, k):\n    count = {'0': 0, '1': 0, '?': 0}\n    for i in range(k):\n        val = '?'\n        for j in range(i, len(s), k):\n            if s[j] == '?':\n                continue\n            if val == '?':\n                val = s[j]\n                continue\n            if val != s[j]:\n                return False\n        count[val] += 1\n    diff = abs(count['0'] - count['1'])\n    marks = count['?'] - diff\n    if marks < 0:\n        return False\n    return marks % 2 == 0\nT = int(input())\nfor t in range(T):\n    (n, k) = [int(i) for i in input().split(' ')]\n    s = input()\n    ans = check(s, k)\n    if ans == True:\n        print('YES')\n    else:\n        print('NO')", "def main():\n    (n, k) = map(int, input().split())\n    line = input()\n    mass = ['?' for _ in range(k)]\n    for i in range(0, n):\n        if mass[i % k] == '?':\n            mass[i % k] = line[i]\n        elif line[i] != '?':\n            if mass[i % k] != line[i]:\n                print('NO')\n                return\n    one = 0\n    zero = 0\n    questionmark = 0\n    for i in mass:\n        if i == '0':\n            zero += 1\n        elif i == '1':\n            one += 1\n        else:\n            questionmark += 1\n    if zero <= one <= zero + questionmark or one <= zero <= one + questionmark:\n        print('YES')\n        return\n    print('NO')\nt = int(input())\nfor i in range(t):\n    main()", "def ans(arr, n, k):\n    for i in range(k):\n        if arr[i] == '?':\n            for j in range(i + k, n, k):\n                if arr[j] != '?':\n                    arr[i] = arr[j]\n                    break\n    (p, q) = (0, 0)\n    for i in range(k):\n        if arr[i] != '?':\n            if arr[i] == '1':\n                q += 1\n            else:\n                p += 1\n            for j in range(i + k, n, k):\n                if arr[j] == '?':\n                    arr[j] = arr[i]\n                elif arr[j] != arr[i]:\n                    return 'NO'\n    if p <= k // 2 and q <= k // 2:\n        return 'YES'\n    return 'NO'\nT = int(input())\nfor i in range(T):\n    (n, k) = map(int, input().strip().split(' '))\n    arr = list(input())\n    print(ans(arr, n, k))", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor tests in range(t):\n    (n, k) = map(int, input().split())\n    S = input().strip()\n    A = [-1] * k\n    for i in range(n):\n        if S[i] == '0':\n            if A[i % k] == 1:\n                print('NO')\n                break\n            else:\n                A[i % k] = 0\n        if S[i] == '1':\n            if A[i % k] == 0:\n                print('NO')\n                break\n            else:\n                A[i % k] = 1\n    else:\n        Z = 0\n        O = 0\n        for i in range(k):\n            if A[i] == 0:\n                Z += 1\n            if A[i] == 1:\n                O += 1\n        if Z > k // 2 or O > k // 2:\n            print('NO')\n        else:\n            print('YES')", "def ans():\n    (n, k) = map(int, input().split())\n    a = input()\n    l = list(a)\n    for i in range(k):\n        if l[i] == '?':\n            for j in range(i + k, n, k):\n                if l[j] != '?':\n                    l[i] = l[j]\n                    break\n    for i in range(k):\n        if l[i] != '?':\n            for j in range(i + k, n, k):\n                if l[j] == '?':\n                    l[j] = l[i]\n                elif l[j] != l[i]:\n                    print('NO')\n                    return\n    one = l[:k].count('1')\n    zero = l[:k].count('0')\n    if one <= k // 2 and zero <= k // 2:\n        print('YES')\n    else:\n        print('NO')\n\ndef solve():\n    for _ in range(int(input())):\n        ans()\nsolve()", "def sol():\n    (n, k) = map(int, input().split())\n    s = list(input())\n    gg = False\n    one = 0\n    zero = 0\n    for i in range(k):\n        ck = 0\n        for y in range(i, n, k):\n            if s[y] == '1':\n                ck |= 2\n            if s[y] == '0':\n                ck |= 1\n        if ck == 3:\n            return 'NO'\n        if ck == 2:\n            one += 1\n        elif ck == 1:\n            zero += 1\n    if max(zero, one) > k / 2:\n        gg = True\n    if gg:\n        return 'NO'\n    else:\n        return 'YES'\nt = int(input())\nwhile t:\n    t -= 1\n    print(sol())", "def solve(n, k, s):\n    for i in range(k):\n        if s[i] == '?':\n            for j in range(i + k, n, k):\n                if s[j] != '?':\n                    s[i] = s[j]\n                    break\n    for i in range(k):\n        if s[i] != '?':\n            for j in range(i + k, n, k):\n                if s[j] != '?':\n                    if s[j] != s[i]:\n                        print('NO')\n                        return\n                else:\n                    s[j] = s[i]\n    else:\n        c1 = s[:k].count('1')\n        c0 = s[:k].count('0')\n        if c1 <= int(k // 2) and c0 <= int(k // 2):\n            print('YES')\n            return\n        else:\n            print('NO')\n            return\nfor k in range(int(input())):\n    l = [int(x) for x in input('').split()]\n    n = l[0]\n    k = l[1]\n    s = list(input(''))\n    ls = []\n    b = ''\n    solve(n, k, s)", "import sys\ninput = sys.stdin.readline\nins = lambda : input().rstrip()\nini = lambda : int(input().rstrip())\ninm = lambda : map(int, input().rstrip().split())\ninl = lambda : list(map(int, input().split()))\nout = lambda x, s='\\n': print(s.join(map(str, x)))\nt = ini()\nfor _ in range(t):\n    (n, k) = inm()\n    s = list(ins())\n    ans = True\n    count0 = count1 = 0\n    for i in range(k):\n        tmp = -1\n        for j in range(i, n, k):\n            if s[j] != '?':\n                if tmp != -1 and s[j] != tmp:\n                    ans = False\n                    break\n                tmp = s[j]\n        if not ans:\n            break\n        if tmp == '0':\n            count0 += 1\n        elif tmp == '1':\n            count1 += 1\n    if count0 > k // 2 or count1 > k // 2:\n        ans = False\n    print('YES' if ans else 'NO')", "def solve(n, k, l):\n    s = list(l)\n    for i in range(k):\n        if s[i] == '?':\n            for j in range(i + k, n, k):\n                if s[j] != '?':\n                    s[i] = s[j]\n                    break\n    for i in range(k):\n        if s[i] != '?':\n            for j in range(i + k, n, k):\n                if s[j] == '?':\n                    s[j] = s[i]\n                elif s[i] != s[j]:\n                    return 'NO'\n    z = 0\n    o = 0\n    for i in range(k):\n        if s[i] == '0':\n            z += 1\n        elif s[i] == '1':\n            o += 1\n    if o <= k // 2 and z <= k // 2:\n        return 'YES'\n    else:\n        return 'NO'\nt = int(input())\nwhile t:\n    (n, k) = map(int, input().split(' '))\n    in_ = input()\n    print(solve(n, k, in_))\n    t -= 1", "for _ in range(int(input())):\n    (x, k) = map(int, input().split())\n    w = input()\n    on = [False] * k\n    off = [False] * k\n    for i in range(x):\n        if w[i] == '1':\n            on[i % k] = True\n        if w[i] == '0':\n            off[i % k] = True\n    works = True\n    for i in range(k):\n        if on[i] == off[i] == True:\n            works = False\n            break\n    if on.count(True) * 2 > k or off.count(True) * 2 > k:\n        works = False\n    print('YES' if works == True else 'NO')", "import sys\ninput = sys.stdin.readline\nins = lambda : input().rstrip()\nini = lambda : int(input().rstrip())\ninm = lambda : map(int, input().rstrip().split())\ninl = lambda : list(map(int, input().split()))\nout = lambda x, s='\\n': print(s.join(map(str, x)))\nt = ini()\nfor _ in range(t):\n    (n, k) = inm()\n    s = list(ins())\n    ans = True\n    for i in range(k):\n        tmp = -1\n        for j in range(i, n, k):\n            if s[j] != '?':\n                if tmp != -1 and s[j] != tmp:\n                    ans = False\n                    break\n                tmp = s[j]\n        if not ans:\n            break\n        elif s[i] == '?':\n            s[i] = tmp\n    if ans:\n        count0 = count1 = x = 0\n        for i in range(k):\n            if s[i] == '0':\n                count0 += 1\n            elif s[i] == '1':\n                count1 += 1\n            else:\n                x += 1\n        if x == 0 and count0 != count1:\n            ans = False\n        elif count0 == count1:\n            pass\n        elif min(count0, count1) + x < max(count0, count1):\n            ans = False\n    print('YES' if ans else 'NO')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    flag = True\n    cnt = [0, 0]\n    for i in range(k):\n        for j in range(i + k, n, k):\n            if s[i] == '?':\n                s[i] = s[j]\n            elif s[j] == '?':\n                continue\n            elif s[i] != s[j]:\n                flag = False\n        if s[i] != '?':\n            cnt[int(s[i])] += 1\n    if max(cnt) > k // 2:\n        flag = False\n    print('YES' if flag else 'NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    x = y = 0\n    for i in range(k):\n        a = b = 0\n        for j in range(i, n, k):\n            if s[j] == '1':\n                a += 1\n            elif s[j] == '0':\n                b += 1\n        if min(a, b) > 0:\n            print('NO')\n            break\n        if a:\n            x += 1\n        elif b:\n            x -= 1\n        else:\n            y += 1\n    else:\n        if abs(x) <= y:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    A = input()\n    v = ['?'] * k\n    ok = True\n    for i in range(k):\n        for j in range(i, n, k):\n            if A[j] == '?':\n                continue\n            if v[i] == '?' or v[i] == A[j]:\n                v[i] = A[j]\n            elif v[i] != A[j]:\n                ok = False\n    (c0, c1) = (0, 0)\n    for i in range(k):\n        if v[i] == '1':\n            c1 += 1\n        if v[i] == '0':\n            c0 += 1\n    if c0 > k // 2 or c1 > k // 2:\n        ok = False\n    if ok:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    l = ['?'] * k\n    f = 0\n    for i in range(n):\n        if s[i] == '1':\n            if l[i % k] == '0':\n                f = 1\n                break\n            else:\n                l[i % k] = '1'\n        elif s[i] == '0':\n            if l[i % k] == '1':\n                f = 1\n                break\n            else:\n                l[i % k] = '0'\n    if f:\n        print('NO')\n    elif abs(l.count('1') - l.count('0')) > l.count('?'):\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    s = input()\n    s = list(s)\n    ans = True\n    for i in range(k, n):\n        if s[i] != '?':\n            if s[i % k] == '?':\n                s[i % k] = s[i]\n            elif s[i % k] != s[i]:\n                ans = False\n                break\n    if not ans:\n        print('NO')\n        continue\n    (one, zer) = (0, 0)\n    for i in range(k):\n        if s[i] == '0':\n            zer += 1\n        elif s[i] == '1':\n            one += 1\n    if one <= k // 2 and zer <= k // 2:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    ans = True\n    for i in range(k):\n        d = set(s[i::k])\n        if '0' in d and '1' in d:\n            print('NO')\n            ans = False\n            break\n        if '?' in d and len(d) == 2:\n            r = (d - {'?'}).pop()\n            for p in range(i, n, k):\n                s[p] = r\n    if ans:\n        zeros = s[:k].count('0')\n        ones = s[:k].count('1')\n        if max(zeros, ones) <= k / 2:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    s = list(input())\n    result = True\n    for i in range(k, n):\n        if s[i] != '?':\n            if s[i % k] == '?':\n                s[i % k] = s[i]\n            elif s[i] != s[i % k]:\n                result = False\n                break\n    if not result:\n        print('NO')\n    else:\n        count0 = 0\n        count1 = 0\n        for i in range(k):\n            if s[i] == '0':\n                count0 += 1\n            elif s[i] == '1':\n                count1 += 1\n        if count0 <= k // 2 and count1 <= k // 2:\n            print('YES')\n        else:\n            print('NO')", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    ans = True\n    for i in range(k):\n        d = set(s[i::k])\n        if '0' in d and '1' in d:\n            print('NO')\n            ans = False\n            break\n        if '?' in d and len(d) == 2:\n            r = (d - {'?'}).pop()\n            for p in range(i, n, k):\n                s[p] = r\n    if ans:\n        print('YES') if max(s[:k].count('0'), s[:k].count('1')) <= k / 2 else print('NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n\n    def solve(n, k, s):\n        l = list(s)\n        for i in range(k):\n            t = s[i]\n            for j in range(i, n, k):\n                if s[j] != '?':\n                    if t != '?' and s[j] != t:\n                        return False\n                    t = s[j]\n            for j in range(i, n, k):\n                l[j] = t\n        return max(l[:k].count('1'), l[:k].count('0')) <= k // 2\n    if solve(n, k, s):\n        print('YES')\n    else:\n        print('NO')", "def solve(s, n, k):\n    first_k = ''\n    if k % 2:\n        return 'NO'\n    for i in range(k):\n        num1 = 0\n        num2 = 0\n        num3 = 0\n        for j in range(i, n, k):\n            if s[j] == '0':\n                num1 += 1\n            elif s[j] == '1':\n                num2 += 1\n            else:\n                num3 += 1\n        if num1 * num2 > 0:\n            return 'NO'\n        if num1 > 0:\n            first_k += '0'\n        elif num2 > 0:\n            first_k += '1'\n        else:\n            first_k += '?'\n    num1 = 0\n    num2 = 0\n    num3 = 0\n    for i in range(k):\n        if first_k[i] == '0':\n            num1 += 1\n        elif first_k[i] == '1':\n            num2 += 1\n        else:\n            num3 += 1\n    if num1 + num3 < num2 or num2 + num3 < num1:\n        return 'NO'\n    else:\n        return 'YES'\nt = int(input())\nfor i in range(t):\n    temp = input().split(' ')\n    n = int(temp[0])\n    k = int(temp[1])\n    s = input()\n    print(solve(s, n, k))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n\n    def solve(n, k, s):\n        l = list(s)\n        for i in range(k):\n            t = s[i]\n            for j in range(i, n, k):\n                if s[j] != '?':\n                    if t != '?' and s[j] != t:\n                        return False\n                    t = s[j]\n            for j in range(i, n, k):\n                l[j] = t\n        return max(l[:k].count('1'), l[:k].count('0')) <= k // 2\n    if solve(n, k, s):\n        print('YES')\n    else:\n        print('NO')", "def checker(a, n, k):\n    (n0, n1, qm) = (0, 0, 0)\n    for i in range(k):\n        if a[i] == '0':\n            n0 += 1\n        elif a[i] == '1':\n            n1 += 1\n        else:\n            qm += 1\n    if n0 != n1 and qm < abs(n1 - n0):\n        return 0\n    for i in range(1, n - k + 1):\n        if a[i - 1] == '1' and a[i + k - 1] == '0':\n            return 0\n        elif a[i - 1] == '0' and a[i + k - 1] == '1':\n            return 0\n        elif a[i - 1] == '0' and a[i + k - 1] == '?':\n            a[i + k - 1] = '0'\n        elif a[i - 1] == '1' and a[i + k - 1] == '?':\n            a[i + k - 1] = '1'\n    (n0, n1, qm) = (0, 0, 0)\n    for i in range(n - k, n):\n        if a[i] == '0':\n            n0 += 1\n        elif a[i] == '1':\n            n1 += 1\n        else:\n            qm += 1\n    if n0 != n1 and qm < abs(n1 - n0):\n        return 0\n    return 1\n\ndef main():\n    t = int(input())\n    res = []\n    for i in range(t):\n        (n, k) = list(map(int, input().split()))\n        a = [i for i in input()]\n        flag = checker(a, n, k)\n        if flag == 1:\n            print('YES')\n        else:\n            print('NO')\n    for i in res:\n        print(i)\nmain()", "def solve():\n    (n, k) = list(map(int, input().split()))\n    s = list(input())\n    for i in range(k):\n        zero = False\n        one = False\n        for j in range(i, n, k):\n            if s[j] == '1':\n                one = True\n            if s[j] == '0':\n                zero = True\n        if one and zero:\n            print('NO')\n            return\n        if not one and (not zero):\n            continue\n        for j in range(i, n, k):\n            s[j] = '1' if one else '0'\n    one = 0\n    zero = 0\n    for i in range(k):\n        if s[i] == '1':\n            one += 1\n        if s[i] == '0':\n            zero += 1\n    print('YES' if one <= k / 2 and zero <= k / 2 else 'NO')\nct = int(input())\nwhile ct > 0:\n    solve()\n    ct -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    arr = [-1] * n\n    flag = True\n    for i in range(n):\n        if arr[i % k] == -1:\n            if s[i] == '0':\n                arr[i % k] = 0\n            if s[i] == '1':\n                arr[i % k] = 1\n        elif s[i] == '0' and arr[i % k] == 1 or (s[i] == '1' and arr[i % k] == 0):\n            flag = False\n            break\n    zero = one = 0\n    for i in range(k):\n        if arr[i] != -1:\n            if arr[i] == 0:\n                zero += 1\n            else:\n                one += 1\n    if zero > k // 2 or one > k // 2:\n        flag = False\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "def ii():\n    return int(input())\n\ndef li():\n    return [int(i) for i in input().split()]\nfor t in range(ii()):\n    (n, k) = li()\n    S = input()\n    s = []\n    for i in S:\n        s.append(i)\n    q = 0\n    one = 0\n    zer = 0\n    flag = 1\n    for i in range(k):\n        if s[i] == '1':\n            one += 1\n        elif s[i] == '0':\n            zer += 1\n    if one > k // 2 or zer > k // 2:\n        print('NO')\n    else:\n        for i in range(k):\n            if s[i] == '?':\n                lol = -1\n                for j in range(i + k, n, k):\n                    if lol == -1:\n                        if s[j] != '?':\n                            lol = s[j]\n                    elif s[j] != lol and s[j] != '?':\n                        flag = 0\n                        break\n                if flag == 1:\n                    if lol == '1':\n                        one += 1\n                    elif lol == '0':\n                        zer += 1\n                else:\n                    break\n            else:\n                for j in range(i, n, k):\n                    if s[i] != s[j] and s[j] != '?':\n                        flag = 0\n                        break\n                if flag == 0:\n                    break\n        if flag == 0 or one > k // 2 or zer > k // 2:\n            print('NO')\n        else:\n            print('YES')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    (s, l) = (input(), [''] * k)\n    for i in range(n):\n        tmp = l[i % k]\n        l[i % k] = None\n        tmp += s[i]\n        l[i % k] = tmp\n    (ans, c1, c2) = (True, 0, 0)\n    for i in range(k):\n        c1 += 1 if '1' in l[i] else -1\n        c2 += -1 if '0' in l[i] else 1\n        ans &= not ('0' in l[i] and '1' in l[i])\n    ans &= c1 <= 0 and 0 <= c2\n    print('YES' if ans else 'NO')", "import sys\nsys.setrecursionlimit(10 ** 5)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\nfor _ in range(II()):\n\n    def solve():\n        for si in range(k):\n            cnt = [0] * 3\n            for i in range(si, n, k):\n                if s[i] == '0':\n                    cnt[0] += 1\n                if s[i] == '1':\n                    cnt[1] += 1\n                if s[i] == '?':\n                    cnt[2] += 1\n            if cnt[0] and cnt[1]:\n                return False\n            if cnt[0]:\n                s[si] = '0'\n            if cnt[1]:\n                s[si] = '1'\n        return True\n    (n, k) = MI()\n    s = list(SI())\n    if not solve():\n        print('NO')\n        continue\n    cnt = [0] * 2\n    for i in range(k):\n        if s[i] == '0':\n            cnt[0] += 1\n        if s[i] == '1':\n            cnt[1] += 1\n    if cnt[0] > k // 2 or cnt[1] > k // 2:\n        print('NO')\n    else:\n        print('YES')", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    a = ['?' for i in range(k)]\n    for i in range(k):\n        c = '?'\n        for j in range(i, n, k):\n            if c != '?':\n                if '?' != s[j] != c:\n                    print('NO')\n                    break\n            elif s[j] != '?':\n                c = s[j]\n                a[i] = s[j]\n        else:\n            continue\n        break\n    else:\n        count_0 = 0\n        count_1 = 0\n        for c in a:\n            if c == '1':\n                count_1 += 1\n            elif c == '0':\n                count_0 += 1\n        if count_1 * 2 > k or count_0 * 2 > k:\n            print('NO')\n        else:\n            print('YES')", "from functools import cmp_to_key\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    is_valid = True\n    for i in range(k, n):\n        if s[i] != '?':\n            if s[i % k] == '?':\n                s[i % k] = s[i]\n            elif s[i % k] != s[i]:\n                is_valid = False\n                break\n    if not is_valid:\n        print('NO')\n    else:\n        (cnt0, cnt1) = (0, 0)\n        for i in range(k):\n            if s[i] == '0':\n                cnt0 += 1\n            elif s[i] == '1':\n                cnt1 += 1\n        if cnt0 <= k // 2 and cnt1 <= k // 2:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    l = len(s)\n    bad = False\n    n0 = 0\n    n1 = 0\n    nwhat = 0\n    for j in range(k):\n        q = j\n        e = s[q]\n        while q < l:\n            if e == '?':\n                if s[q] != '?':\n                    e = s[q]\n            elif s[q] not in [e, '?']:\n                bad = True\n                break\n            q += k\n        if e == '0':\n            n0 += 1\n        elif e == '1':\n            n1 += 1\n        elif e == '?':\n            nwhat += 1\n        if bad:\n            break\n    if abs(n0 - n1) > nwhat:\n        bad = True\n    print('NO') if bad else print('YES')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    bitstring = input()\n    balanced = ['?'] * k\n    answer = True\n    for j in range(k):\n        for i in range(j, n, k):\n            if bitstring[i] != '?':\n                if balanced[j] != '?':\n                    if balanced[j] != bitstring[i]:\n                        answer = False\n                        break\n                else:\n                    balanced[j] = bitstring[i]\n        if not answer:\n            break\n    if answer:\n        q = balanced.count('?')\n        o = balanced.count('1')\n        r = k // 2 - o\n        answer = r >= 0 and q >= r\n    print('YES' if answer else 'NO')", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    ans = True\n    for i in range(k):\n        d = set(s[i::k])\n        if '0' in d and '1' in d:\n            print('NO')\n            ans = False\n            break\n        if '?' in d and len(d) == 2:\n            r = (d - {'?'}).pop()\n            for p in range(i, n, k):\n                s[p] = r\n    if ans:\n        zeros = s[:k].count('0')\n        ones = s[:k].count('1')\n        if max(zeros, ones) <= k / 2:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    l = [0] * k\n    f = k\n    for i in range(k):\n        v = []\n        c = 0\n        for j in s[i::k]:\n            if j != '?':\n                if j not in v:\n                    v += [j]\n                    c += 1\n                if c > 1:\n                    break\n        else:\n            if v:\n                l[i] = (-1) ** int(v[0])\n                f -= 1\n            continue\n        break\n    else:\n        print(['NO', 'YES'][abs(sum(l)) <= f])\n        continue\n    print('NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = 0\n    X = 0\n    A = input()\n    for i in range(k):\n        y = '1' in A[i::k]\n        z = '0' in A[i::k]\n        if y and z:\n            x = k\n            X = k\n            break\n        elif y:\n            x += 1\n        elif z:\n            X += 1\n    if k % 2 == 0 and 2 * x <= k and (2 * X <= k):\n        print('YES')\n    else:\n        print('NO')", "import sys\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = sys.stdin.readline().strip()\n    p = []\n    f = 0\n    z = 0\n    o = 0\n    for j in range(k):\n        p.append(['?'])\n    for j in range(n):\n        p[j % k].append(a[j])\n    for j in range(k):\n        q = set(p[j])\n        if len(q) > 2:\n            f = 1\n        elif '1' in q:\n            o = o + 1\n        elif '0' in q:\n            z = z + 1\n    if f == 1:\n        print('NO')\n    else:\n        q = k // 2\n        if z > q or o > q:\n            print('NO')\n        else:\n            print('YES')", "for k in range(int(input())):\n    l = [int(x) for x in input('').split()]\n    n = l[0]\n    k = l[1]\n    s = list(input(''))\n    ls = []\n    b = ''\n    for i in range(k):\n        if s[i] == '?':\n            for j in range(i + k, n, k):\n                if s[j] != '?':\n                    s[i] = s[j]\n                    break\n    for i in range(k):\n        if s[i] != '?':\n            for j in range(i + k, n, k):\n                if s[j] == '?':\n                    s[j] = s[i]\n                elif s[j] != s[i]:\n                    print('NO')\n                    b = 'n'\n                    break\n            if b == 'n':\n                break\n    else:\n        c1 = s[:k].count('1')\n        c0 = s[:k].count('0')\n        if c1 <= int(k // 2) and c0 <= int(k // 2):\n            print('YES')\n        else:\n            print('NO')", "def custsubs(list, n, k):\n    l = []\n    a = 0\n    for a in range(n):\n        l.append(list[a:a + k])\n        if a + k >= n:\n            return l\n\ndef count(list, ch):\n    cnt = 0\n    for i in list:\n        if ch == i:\n            cnt += 1\n    return cnt\nT = int(input())\nfor t in range(T):\n    (n, k) = map(int, input().split())\n    s = str(input())\n    s = list(s)\n    if k % 2 != 0:\n        print('NO')\n    else:\n        ans = 0\n        for a in range(k):\n            for i in range(k + a, n, k):\n                if s[a] != '?' and s[i] != '?' and (s[i] != s[a]):\n                    ans = -1\n                    print('NO')\n                    break\n                if s[a] == '?' and s[i] != '?':\n                    s[a] = s[i]\n        if ans == 0:\n            if count(s[:k], '1') > int(k / 2) or count(s[:k], '0') > int(k / 2):\n                print('NO')\n            else:\n                print('YES')", "from sys import stdin\n\nclass Problem:\n\n    def __init__(self, n, k, s):\n        self.n = n\n        self.k = k\n        self.a = list(s)\n\n    def solve(self):\n        le = 0\n        ri = 0\n        count = {'0': 0, '1': 0, '?': 0}\n        while ri < k:\n            count[self.a[ri]] += 1\n            ri += 1\n        while le <= n - k:\n            if count['0'] * 2 > k:\n                return 'NO'\n            if count['1'] * 2 > k:\n                return 'NO'\n            if ri < n and self.a[le] != self.a[ri]:\n                count[self.a[le]] -= 1\n                if self.a[ri] == '?':\n                    self.a[ri] = self.a[le]\n                elif self.a[le] != '?':\n                    return 'NO'\n                count[self.a[ri]] += 1\n            ri += 1\n            le += 1\n        return 'YES'\ncases = int(stdin.readline())\nfor test in range(cases):\n    (n, k) = list(map(int, stdin.readline().split()))\n    a = stdin.readline().strip()\n    ans = Problem(n, k, a).solve()\n    print(ans)", "import sys\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    cnt0 = 0\n    cnt1 = 0\n    f = 0\n    for i in range(k):\n        S = set()\n        for j in range(i, n, k):\n            if s[j] == '?':\n                continue\n            S.add(s[j])\n        if len(S) > 1:\n            f = 1\n            print('NO')\n            break\n        if '1' in S:\n            cnt1 += 1\n        elif '0' in S:\n            cnt0 += 1\n    if not f:\n        if cnt0 > k // 2:\n            print('NO')\n        elif cnt1 > k // 2:\n            print('NO')\n        else:\n            print('YES')", "for _ in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    a = input()\n    x = 0\n    y = 0\n    z = 0\n    flag = 0\n    for i in range(k):\n        c = 0\n        d = 0\n        for j in range(i, n, k):\n            if a[j] == '0':\n                c += 1\n            elif a[j] == '1':\n                d += 1\n        if c > 0 and d > 0:\n            flag = 1\n            break\n        elif c > 0:\n            x += 1\n        elif d > 0:\n            y += 1\n        else:\n            z += 1\n    for i in range(z):\n        if x < k // 2:\n            x += 1\n        else:\n            y += 1\n    if x != y:\n        flag = 1\n    if flag:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    s = input()\n    on = [False for i in range(n)]\n    off = [False for i in range(n)]\n    for i in range(n):\n        if s[i] == '1':\n            on[i % k] = True\n        if s[i] == '0':\n            off[i % k] = True\n    check = True\n    for i in range(k):\n        if on[i] and off[i]:\n            check = False\n    onCnt = offCnt = 0\n    for i in range(k):\n        if on[i]:\n            onCnt += 1\n        elif off[i]:\n            offCnt += 1\n    if onCnt * 2 > k or offCnt * 2 > k:\n        check = False\n    if check:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    bitstring = input()\n    balanced = ['?'] * k\n    answer = True\n    for j in range(k):\n        if not answer:\n            break\n        for i in range(j, n, k):\n            if bitstring[i] != '?':\n                if balanced[j] != '?':\n                    if balanced[j] != bitstring[i]:\n                        answer = False\n                        break\n                else:\n                    balanced[j] = bitstring[i]\n    if answer:\n        q = balanced.count('?')\n        z = balanced.count('0')\n        o = balanced.count('1')\n        r = k // 2 - o\n        answer = r >= 0 and q >= r\n    print('YES' if answer else 'NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    j = 0\n    flag = True\n    while j < k:\n        sett = set()\n        for i in range(j, n, k):\n            sett.add(s[i])\n        if '0' in sett and '1' in sett:\n            flag = False\n            break\n        elif '0' in sett:\n            s[j] = '0'\n        elif '1' in sett:\n            s[j] = '1'\n        j += 1\n    if flag:\n        one = zero = q = 0\n        for x in range(k):\n            if s[x] == '1':\n                one += 1\n            elif s[x] == '0':\n                zero += 1\n            else:\n                q += 1\n        if abs(one - zero) > q:\n            flag = False\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    bitstring = input()\n    zero = 0\n    one = 0\n    answer = True\n    for j in range(k):\n        balanced = '?'\n        for i in range(j, n, k):\n            if bitstring[i] != '?':\n                if balanced != '?':\n                    if balanced != bitstring[i]:\n                        answer = False\n                        break\n                else:\n                    balanced = bitstring[i]\n        if not answer:\n            break\n        if balanced == '1':\n            one += 1\n        elif balanced == '0':\n            zero += 1\n    if answer:\n        answer = max(one, zero) <= k // 2\n    print('YES' if answer else 'NO')", "def f(l):\n    for i in range(k):\n        m = []\n        for it in range(i, n, k):\n            m.append(l[it])\n        if m.count('0') > 0 and m.count('1') > 0:\n            return 0\n        elif m.count('1') > 0:\n            l[i] = '1'\n        elif m.count('0') > 0:\n            l[i] = '0'\n    return l\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    l = []\n    for i in s:\n        l.append(i)\n    x = f(l)\n    if x == 0:\n        print('NO')\n        continue\n    z = 0\n    o = 0\n    q = 0\n    for i in range(k):\n        if x[i] == '0':\n            z += 1\n        elif x[i] == '1':\n            o += 1\n        else:\n            q += 1\n    if z > k / 2 or o > k / 2:\n        print('NO')\n    else:\n        print('YES')", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = [i for i in input()]\n    if k % 2 == 1:\n        print('NO')\n        continue\n    a = 0\n    b = 0\n    y = 1\n    t = math.ceil(n / k)\n    m = l[:k]\n    for i in l:\n        j = m[a % k]\n        if i == '1' and j == '0' or (i == '0' and j == '1'):\n            b = 1\n            break\n        elif (i == '1' or i == '0') and i != j:\n            m[a % k] = i\n        a += 1\n    if b:\n        print('NO')\n        continue\n    (u, v, w) = (0, 0, 0)\n    for i in m:\n        if i == '1':\n            u += 1\n        elif i == '0':\n            v += 1\n        else:\n            w += 1\n    if u == v and w % 2 == 0:\n        y = 1\n    elif abs(u - v) == w:\n        y = 1\n    elif w == n:\n        y = 1\n    elif abs(u - v) < w and (w - abs(u - v)) % 2 == 0:\n        y = 1\n    else:\n        y = 0\n    if y:\n        print('YES')\n    else:\n        print('NO')", "import math as mt\nimport collections as cc\nimport sys\nI = lambda : list(map(int, input().split()))\nfor tc in range(int(input())):\n    (n, k) = I()\n    s = input()\n    tf = 1\n    ch = [-1] * k\n    le = 0\n    re = 0\n    for i in range(n):\n        if s[i] in ['0', '1']:\n            now = i % k\n            if ch[now] == -1:\n                if s[i] == '1':\n                    ch[now] = 1\n                    le += 1\n                else:\n                    ch[now] = 0\n                    re += 1\n            elif ch[now] != int(s[i]):\n                tf = 0\n                break\n    if not tf or le > k // 2 or re > k // 2:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split(' ')))\n    st = input()\n    if k % 2 == 1:\n        print('NO')\n        continue\n    (zero, one) = (0, 0)\n    flag = True\n    for i in range(k):\n        tmp = None\n        for j in range(i, n, k):\n            if st[j] != '?':\n                if tmp is not None and st[j] != tmp:\n                    flag = False\n                    break\n                tmp = st[j]\n        if not flag:\n            break\n        if tmp == '0':\n            zero += 1\n        elif tmp == '1':\n            one += 1\n    if max(one, zero) > k // 2:\n        flag = False\n    print('YES' if flag else 'NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    i = 0\n    f = 0\n    for g in range(k):\n        i = g\n        val = -1\n        while i < len(s):\n            if s[i] != '?':\n                val = s[i]\n                break\n            i += k\n        if val != -1:\n            i = g\n            while i < len(s):\n                if s[i] == '?':\n                    s[i] = val\n                if s[i] != val:\n                    f = 1\n                    break\n                i += k\n        if f == 1:\n            break\n    ck = s[:k]\n    if ck.count('1') <= k // 2 and ck.count('0') <= k // 2:\n        pass\n    else:\n        f = 1\n    if f == 1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(input())\n    flag = 0\n    bal = 0\n    ques = 0\n    for i in range(k):\n        s = set()\n        s.add(arr[i])\n        for j in range(i, n, k):\n            s.add(arr[j])\n        if '1' in s and '0' in s:\n            flag = 1\n            break\n        elif '0' in s and '?' in s:\n            bal -= 1\n        elif '1' in s and '?' in s:\n            bal += 1\n        elif '1' in s:\n            bal += 1\n        elif '0' in s:\n            bal -= 1\n        elif '?' in s:\n            ques += 1\n    if bal == 0 and ques == 0:\n        pass\n    elif bal != 0 and ques == 0:\n        flag = 1\n    elif bal == 0 and ques != 0:\n        if ques % 2 != 0:\n            flag = 1\n    elif ques % 2 == 0:\n        if bal % 2 == 0 and abs(bal) <= ques:\n            pass\n        else:\n            flag = 1\n    elif bal % 2 != 0 and abs(bal) <= ques:\n        pass\n    else:\n        flag = 1\n    if flag:\n        print('NO')\n    else:\n        print('YES')", "from collections import Counter\n\ndef main():\n    (n, k) = map(int, input().split())\n    s = list(input())\n    for start in range(k):\n        c = None\n        for i in range(start, len(s), k):\n            if s[i] == '?':\n                continue\n            if c is None:\n                c = s[i]\n                continue\n            if c != s[i]:\n                print('NO')\n                return\n        if c is None:\n            continue\n        for i in range(start, len(s), k):\n            s[i] = c\n    cnt = Counter(s[:k])\n    if cnt['0'] == cnt['1']:\n        print('YES')\n        return\n    if max(cnt['0'], cnt['1']) - min(cnt['0'], cnt['1']) > cnt['?']:\n        print('NO')\n        return\n    print('YES')\nt = int(input())\nfor _ in range(t):\n    main()", "def solve():\n    (n, k) = [int(x) for x in input().split()]\n    s = input()\n    sk = ['?'] * k\n    for (i, c) in enumerate(s):\n        if c != '?':\n            if sk[i % k] != '?' and sk[i % k] != c:\n                return 'NO'\n            if sk[i % k] == '?':\n                sk[i % k] = c\n    (c1, c0, cq) = (0, 0, 0)\n    for (i, c) in enumerate(sk):\n        if c == '1':\n            c1 += 1\n        elif c == '0':\n            c0 += 1\n        else:\n            cq += 1\n    for i in range(cq + 1):\n        if c1 + i == c0 + cq - i:\n            return 'YES'\n    return 'NO'\nT = int(input())\nfor case in range(T):\n    print(solve())", "def algo(n, k, arr):\n    c0 = arr[:k].count('0')\n    c1 = arr[:k].count('1')\n    cq = arr[:k].count('?')\n    if c0 > k // 2:\n        return 'NO'\n    if c1 > k // 2:\n        return 'NO'\n    res = [None] * k\n    for i in range(k):\n        a = 0\n        t = [0, 0, 0]\n        while i + a * k < n:\n            idx = i + a * k\n            if arr[idx] == '0':\n                t[0] += 1\n            elif arr[idx] == '1':\n                t[1] += 1\n            else:\n                t[2] += 1\n            a += 1\n        if t[0] != 0 and t[1] != 0:\n            return 'NO'\n        if t[0]:\n            res[i] = '0'\n        elif t[1]:\n            res[i] = '1'\n    c0 = res.count('0')\n    c1 = res.count('1')\n    cq = res.count('?')\n    if c0 > k // 2:\n        return 'NO'\n    if c1 > k // 2:\n        return 'NO'\n    return 'YES'\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(input())\n    ans = algo(n, k, arr)\n    print(ans)", "from collections import Counter\nt = int(input())\nfor test in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    s = list(input())\n    result = True\n    for i in range(k, n):\n        if s[i] != '?':\n            if s[i % k] == '?':\n                s[i % k] = s[i]\n            elif s[i % k] != s[i]:\n                result = False\n                break\n    if result:\n        count = Counter(s[:k])\n        print('YES' if all((count[t] <= k // 2 for t in '01')) else 'NO')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    (s, l) = (input(), [''] * k)\n    for i in range(n):\n        tmp = l[i % k]\n        l[i % k] = None\n        tmp += s[i]\n        l[i % k] = tmp\n    (ans, c1, c2) = (True, 0, 0)\n    for i in range(k):\n        c1 += 1 if '1' in l[i] else -1\n        c2 += -1 if '0' in l[i] else 1\n        ans &= not ('0' in l[i] and '1' in l[i])\n    ans &= c1 <= 0 and 0 <= c2\n    print('YES' if ans else 'NO')", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = input().strip()\n    p = []\n    f = 0\n    z = 0\n    o = 0\n    for j in range(k):\n        p.append(['?'])\n    for j in range(n):\n        p[j % k].append(a[j])\n    for j in range(k):\n        q = set(p[j])\n        if len(q) > 2:\n            f = 1\n        elif '1' in q:\n            o = o + 1\n        elif '0' in q:\n            z = z + 1\n    if f == 1:\n        print('NO')\n    else:\n        q = k // 2\n        if z > q or o > q:\n            print('NO')\n        else:\n            print('YES')", "from collections import Counter\nt = int(input())\nfor test in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    s = list(input())\n    result = True\n    for i in range(k, n):\n        if s[i] != '?':\n            if s[i % k] == '?':\n                s[i % k] = s[i]\n            elif s[i % k] != s[i]:\n                result = False\n                break\n    if result:\n        count = Counter(s[:k])\n        print('YES' if all((count[t] <= k // 2 for t in '01')) else 'NO')\n    else:\n        print('NO')", "T = int(input().strip())\nfor t in range(T):\n    (N, K) = list(map(int, input().strip().split()))\n    content = [a for a in input().strip()]\n    if K % 2 == 1:\n        print('NO')\n        continue\n    left = 0\n    right = K\n    worked = True\n    while right < N:\n        left_val = content[left]\n        right_val = content[right]\n        if right_val == '?':\n            content[right] = left_val\n            right_val = left_val\n        if left_val == '?' and right_val != '?':\n            content[left] = right_val\n            left_val = right_val\n            tmp = left - K\n            while tmp >= 0:\n                content[tmp] = right_val\n                tmp -= K\n        if left_val != right_val:\n            print('NO')\n            worked = False\n            break\n        left += 1\n        right += 1\n    if worked:\n        ones = 0\n        zeros = 0\n        haha = 0\n        for i in range(K):\n            if content[i] == '1':\n                ones += 1\n            elif content[i] == '0':\n                zeros += 1\n            else:\n                haha += 1\n        if haha == 0 and ones != zeros:\n            print('NO')\n            continue\n        if ones + haha < zeros or zeros + haha < ones:\n            print('NO')\n            continue\n        print('YES')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(input())\n    flag = False\n    dic = [-1 for i in range(k)]\n    for i in range(n):\n        if a[i] == '1' and dic[i % k] != 0:\n            dic[i % k] = 1\n        elif a[i] == '0' and dic[i % k] != 1:\n            dic[i % k] = 0\n        elif a[i] == '?':\n            if dic[i % k] != -1:\n                continue\n            else:\n                dic[i % k] = '?'\n        else:\n            flag = True\n            break\n    if flag:\n        print('NO')\n    else:\n        s = count = 0\n        for i in dic:\n            if i == '?':\n                count += 1\n            elif i == 1:\n                s += 1\n        if s > k // 2 or (s < k // 2 and count == 0):\n            print('NO')\n        elif s == k // 2 and count == 0:\n            print('YES')\n        elif count != 0:\n            if s == k // 2:\n                print('YES')\n            elif k // 2 - s <= count:\n                print('YES')\n            else:\n                print('NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    d = {}\n    for i in range(k):\n        d[i] = set()\n    for i in range(n):\n        d[i % k].add(s[i])\n    cond = True\n    for i in range(k):\n        if '0' in d[i] and '1' in d[i]:\n            cond = False\n            break\n    if cond == False:\n        print('NO')\n        continue\n    p = ''\n    for i in range(k):\n        if '0' in d[i]:\n            p += '0'\n        elif '1' in d[i]:\n            p += '1'\n        else:\n            p += '?'\n    (zero, one) = (0, 0)\n    for ele in p:\n        if ele == '0':\n            zero += 1\n        elif ele == '1':\n            one += 1\n    if zero <= k // 2 and one <= k // 2:\n        print('YES')\n        continue\n    print('NO')", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    (n, k) = map(int, stdin.readline().split())\n    p = stdin.readline().strip()\n    s = []\n    for ele in p:\n        s.append(ele)\n    pos = []\n    for i in range(n):\n        if s[i] != '?':\n            pos.append(i)\n    if len(pos) == 0:\n        print('YES')\n        continue\n    d = {}\n    for i in range(k):\n        d[i] = set()\n    for i in range(n):\n        d[i % k].add(s[i])\n    cond = True\n    for i in range(k):\n        if '0' in d[i] and '1' in d[i]:\n            cond = False\n            break\n    if cond == False:\n        print('NO')\n    else:\n        p = ''\n        for i in range(k):\n            if '0' in d[i]:\n                p += '0'\n            elif '1' in d[i]:\n                p += '1'\n            else:\n                p += '?'\n        (zero, one) = (0, 0)\n        for ele in p:\n            if ele == '0':\n                zero += 1\n            elif ele == '1':\n                one += 1\n        if zero <= k // 2 and one <= k // 2:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(map(str, input()))\n    flag = True\n    for i in range(k):\n        if s[i] == '?':\n            for j in range(i + k, n, k):\n                if s[j] != '?':\n                    s[i] = s[j]\n    for i in range(k):\n        if s[i] != '?':\n            for j in range(i + k, n, k):\n                if s[j] == '?':\n                    s[j] = s[i]\n                elif s[i] != s[j]:\n                    flag = False\n                    break\n        if not flag:\n            break\n    if flag:\n        if s[:k].count('1') <= k // 2 and s[:k].count('0') <= k // 2:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    s = list(input())\n    s1 = ['?'] * k\n    f = 0\n    i = 0\n    while i < k:\n        j = i\n        while j < n:\n            if s[j] == '0':\n                if s1[j % k] == '1':\n                    f = 1\n                    break\n                else:\n                    s1[j % k] = '0'\n            elif s[j] == '1':\n                if s1[j % k] == '0':\n                    f = 1\n                    break\n                else:\n                    s1[j % k] = '1'\n            j = j + k\n        if f:\n            break\n        i = i + 1\n    if f:\n        print('NO')\n    elif s1.count('0') <= k // 2 and s1.count('1') <= k // 2:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = input().split()\n    (n, k) = (int(n), int(k))\n    s = input()\n    s = [c for c in s]\n    ans = True\n    for i in range(0, k):\n        chars = set()\n        for j in range(i, n, k):\n            chars.add(s[j])\n        if '1' in chars and '0' in chars:\n            ans = False\n            break\n        if '1' in chars:\n            s[i] = '1'\n        if '0' in chars:\n            s[i] = '0'\n    if not ans:\n        print('NO')\n        continue\n    (c0, c1, cq) = (0, 0, 0)\n    for i in range(0, k):\n        c0 += s[i] == '0'\n        c1 += s[i] == '1'\n        cq += s[i] == '?'\n    (m, n) = ((cq + c1 - c0) / 2, (cq - c1 + c0) / 2)\n    if m % 1 or n % 1:\n        print('NO')\n        continue\n    if m < 0 or n < 0:\n        print('NO')\n        continue\n    print('YES')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    g = []\n    l = 0\n    c = 0\n    for j in range(k):\n        one = 0\n        zero = 0\n        while j < n:\n            if s[j] == '1':\n                one = one + 1\n            elif s[j] == '0':\n                zero = zero + 1\n            j = j + k\n        if one > 0 and zero > 0:\n            c = c + 1\n        elif one > 0:\n            g.append(1)\n            l = l + 1\n        elif zero > 0:\n            g.append(0)\n            l = l + 1\n    one = 0\n    zero = 0\n    for j in range(l):\n        if g[j] == 0:\n            zero = zero + 1\n        else:\n            one = one + 1\n    if zero > k // 2 or one > k // 2:\n        c = c + 1\n    if c > 0:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, ws) = map(int, input().split())\n    st = input()\n    s = list(st)\n    res = ['?' for i in range(ws)]\n    f = 0\n    (zero, one) = (0, 0)\n    for i in range(ws):\n        cur = i\n        while cur < n:\n            if res[i] == '?':\n                res[i] = s[cur]\n                if s[cur] != '?':\n                    if s[cur] == '1':\n                        one += 1\n                    else:\n                        zero += 1\n            elif res[i] != '?':\n                if s[cur] != '?':\n                    if s[cur] != res[i]:\n                        f = 1\n                        break\n            cur += ws\n    if f == 1 or one > ws // 2 or zero > ws // 2:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor tt in range(t):\n    (n, k) = map(int, input().split())\n    s = input().strip()\n    zero = 0\n    one = 0\n    flag = True\n    for i in range(k):\n        rem = -1\n        for j in range(i, n, k):\n            if s[j] != '?':\n                if rem != -1 and int(s[j]) != rem:\n                    flag = False\n                    break\n                rem = int(s[j])\n        if not flag:\n            break\n        if rem != -1:\n            if rem == 0:\n                zero += 1\n            else:\n                one += 1\n    if max(zero, one) > k / 2:\n        flag = False\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    [n, k] = input().split()\n    status = 0\n    n = int(n)\n    k = int(k)\n    s = input()\n    a = [-1] * k\n    for i in range(0, n):\n        q = i % k\n        if s[i] == '?':\n            pass\n        elif a[q] == -1:\n            a[q] = int(s[i])\n        elif a[q] != int(s[i]):\n            status = 1\n            break\n        else:\n            pass\n    if status == 1:\n        print('NO')\n    else:\n        count1 = 0\n        count2 = 0\n        for i in a:\n            if i == 0:\n                count1 += 1\n            if i == 1:\n                count2 += 1\n        if (count1 <= k / 2) & (count2 <= k / 2):\n            print('YES')\n        else:\n            print('NO')", "import math, queue, heapq\nimport sys\nsys.setrecursionlimit(10 ** 6)\nfastinput = sys.stdin.readline\nfastout = sys.stdout.write\nt = int(fastinput())\nwhile t:\n    t -= 1\n    (n, k) = map(int, fastinput().split())\n    s = input()\n    count1 = [0] * k\n    count2 = [0] * k\n    count0 = 0\n    count4 = 0\n    count3 = 0\n    ans = True\n    for j in range(k):\n        v = 0\n        for i in range(j, n, k):\n            v += 1\n            if s[i] == '0':\n                count1[j] += 1\n            elif s[i] == '?':\n                count2[j] += 1\n        if count2[j] == v:\n            count3 += 1\n        elif count1[j] > 0 and count1[j] + count2[j] == v:\n            count0 += 1\n        elif count1[j] > 0:\n            ans = False\n            break\n        else:\n            count4 += 1\n    if not ans:\n        print('NO')\n    elif count0 + count3 + count4 == k and count0 <= k // 2 and (count4 <= k // 2):\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = [i for i in input()]\n    (zero, one, que) = (0, 0, 0)\n    c = 1\n    for i in range(n - k):\n        if s[i] == '1':\n            if s[i + k] == '?':\n                s[i + k] = '1'\n            elif s[i + k] == '0':\n                c = 0\n        elif s[i] == '0':\n            if s[i + k] == '?':\n                s[i + k] = '0'\n            elif s[i + k] == '1':\n                c = 0\n        elif s[i + k] == '1':\n            s[i] = '1'\n        elif s[i + k] == '0':\n            s[i] = '0'\n    for i in range(k):\n        if s[i] == '1':\n            one += 1\n        elif s[i] == '0':\n            zero += 1\n    if zero > k // 2 or one > k // 2:\n        c = 0\n    for i in range(k, n - k + 1):\n        if s[i - k] == '1':\n            one -= 1\n        elif s[i - k] == '0':\n            zero -= 1\n        if s[i] == '1':\n            one += 1\n        elif s[i] == '0':\n            zero += 1\n        if zero > k // 2 or one > k // 2:\n            c = 0\n    if c:\n        print('YES')\n    else:\n        print('NO')", "for ad in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    s = list(input())\n    l = []\n    for i in range(1, n // k + 1):\n        l.append(s[k * (i - 1):k * i])\n    l.append(s[n // k * k:])\n    a = l[0]\n    t = 0\n    for i in l:\n        if t == 1:\n            break\n        for j in range(len(i)):\n            if a[j] == i[j]:\n                continue\n            elif i[j] == '?':\n                continue\n            elif a[j] == '?':\n                a[j] = i[j]\n            else:\n                t = 1\n                break\n    if t == 1:\n        print('NO')\n    elif abs(a.count('0') - a.count('1')) <= a.count('?'):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    s = list(s)\n    f = 1\n    one = 0\n    zero = 0\n    for i in range(0, k):\n        temp = -1\n        for j in range(i, n, k):\n            if s[j] != '?':\n                if temp != -1 and temp != ord(s[j]):\n                    f = 0\n                    break\n                temp = ord(s[j])\n        if temp != -1:\n            if temp == ord('1'):\n                one += 1\n            elif temp == ord('0'):\n                zero += 1\n    if one > k // 2 or zero > k // 2:\n        print('NO')\n        continue\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')", "def xint(x):\n    if x == '?':\n        return None\n    else:\n        return int(x)\nT = int(input())\nfor t in range(T):\n    (n, k) = list(map(lambda x: int(x), input().split(' ')))\n    s = list(map(lambda x: xint(x), input()))\n    d = [None] * k\n    result = True\n    for i in range(n):\n        if d[i % k] == None:\n            d[i % k] = s[i]\n        elif d[i % k] != s[i] and s[i] != None:\n            result = False\n            break\n    one = 0\n    zero = 0\n    for x in d:\n        if x == 0:\n            zero += 1\n        elif x == 1:\n            one += 1\n    if one > k / 2 or zero > k / 2:\n        result = False\n    if result == True:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = tuple(map(int, input().split()))\n    s = list(input())\n    p = s[:k]\n    (e, q) = (0, 0)\n    for i in p:\n        if i == '1':\n            e += 1\n        elif i == '?':\n            q += 1\n    if e > k // 2 or e + q < k // 2:\n        print('NO')\n        continue\n    if e == k // 2:\n        for i in range(k):\n            if p[i] == '?':\n                p[i] = '0'\n    if e + q == k // 2:\n        for i in range(k):\n            if p[i] == '?':\n                p[i] = '1'\n    (i, b) = (1, False)\n    while i < n // k + int(n % k) and (not b):\n        for j in range(i * k, min(i * k + k, len(s))):\n            if s[j] == p[j % k] or s[j] == '?':\n                continue\n            elif p[j % k] == '?':\n                p[j % k] = s[j]\n            else:\n                b = True\n                break\n        i += 1\n    (e, q) = (0, 0)\n    for i in p:\n        if i == '1':\n            e += 1\n        elif i == '?':\n            q += 1\n    if e > k // 2 or e + q < k // 2:\n        b = True\n    if not b:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    (n, k) = [int(i) for i in input().split()]\n    s = input()\n    ans = [''] * n\n    flag = False\n    helper = []\n    for i in range(k):\n        curr = None\n        ques = set()\n        for j in range(i, n, k):\n            if s[j] != '?':\n                if curr == None:\n                    curr = s[j]\n                elif s[j] != curr:\n                    flag = True\n                ans[j] = s[j]\n            else:\n                ques.add(j)\n        if flag:\n            break\n        if curr is not None:\n            for index in ques:\n                ans[index] = curr\n        helper.append(curr)\n    if flag:\n        print('NO')\n    else:\n        ques = 0\n        ones = 0\n        zer = 0\n        for i in range(k):\n            if helper[i] == '1':\n                ones += 1\n            if helper[i] == '0':\n                zer += 1\n            if helper[i] == None:\n                ques += 1\n        ques -= max(ones, zer) - min(ones, zer)\n        if ques < 0:\n            print('NO')\n        elif ques % 2 == 0:\n            print('YES')\n        else:\n            print('NO')\n    t -= 1", "import math\ntests = int(input())\nfor _ in range(tests):\n    [n, k] = list(map(int, input().split()))\n    vals = list(input())\n    zeros = 0\n    ones = 0\n    qs = 0\n    balance = k // 2\n    template = [None for _ in range(k)]\n    for i in range(k):\n        if vals[i] == '1':\n            ones += 1\n            template[i] = 1\n        elif vals[i] == '0':\n            zeros += 1\n            template[i] = 0\n        else:\n            qs += 1\n    breakout = False\n    if zeros > balance or ones > balance:\n        breakout = True\n        print('NO')\n    else:\n        for it in range(1, math.ceil(n / k)):\n            if breakout:\n                break\n            ind = it * k\n            while ind < n and ind < (it + 1) * k:\n                actual = ind % k\n                if vals[ind] == '1':\n                    if template[actual] == 0:\n                        breakout = True\n                        print('NO')\n                        break\n                    elif template[actual] is None:\n                        template[actual] = 1\n                        qs -= 1\n                        ones += 1\n                elif vals[ind] == '0':\n                    if template[actual] == 1:\n                        breakout = True\n                        print('NO')\n                        break\n                    elif template[actual] is None:\n                        template[actual] = 0\n                        qs -= 1\n                        zeros += 1\n                if zeros > balance or ones > balance:\n                    breakout = True\n                    print('NO')\n                    break\n                ind += 1\n    if not breakout:\n        print('YES')", "t = int(input())\nwhile t != 0:\n    (n, k) = map(int, input().split())\n    s = list(input())\n    d = {}\n    for i in range(k):\n        d[i] = []\n    for i in range(k):\n        j = i\n        while j < n:\n            d[i].append(s[j])\n            j += k\n    f = 0\n    for i in d.keys():\n        d[i] = list(set(d[i]))\n        d[i].sort()\n        if '1' in d[i]:\n            if '0' in d[i]:\n                print('NO')\n                f = 1\n                break\n        if f == 1:\n            break\n    if f == 1:\n        t -= 1\n        continue\n    (z, o, que) = (0, 0, 0)\n    for i in d.keys():\n        if d[i][0] == '1':\n            o += 1\n        if d[i][0] == '0':\n            z += 1\n        if d[i][0] == '?':\n            que += 1\n    if z == o:\n        print('YES')\n    elif que > 0 and que >= abs(z - o):\n        print('YES')\n    else:\n        print('NO')\n    t -= 1"]