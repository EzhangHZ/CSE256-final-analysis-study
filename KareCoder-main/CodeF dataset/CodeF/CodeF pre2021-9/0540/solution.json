["from collections import deque\nT = int(input())\nfor _ in range(T):\n    (N, M, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    arr = []\n    for (a, b) in zip(A, A[N - M:]):\n        arr.append(max(a, b))\n    w = len(arr) - K\n    if w <= 1:\n        print(max(arr))\n        continue\n    qmin = deque()\n    ans = 0\n    for (i, a) in enumerate(arr):\n        while qmin and qmin[-1] > a:\n            qmin.pop()\n        qmin.append(a)\n        if i - w >= 0 and arr[i - w] == qmin[0]:\n            qmin.popleft()\n        if i >= w - 1:\n            ans = max(ans, qmin[0])\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m, k) = map(int, input().split())\n    k = min(k, m - 1)\n    a = list(map(int, input().split()))\n    b = []\n    for i in range(m):\n        b.append(max(a[i], a[i + n - m]))\n    sz = m - k\n    ans = 0\n    j = 0\n    q = []\n    for i in range(k + 1):\n        while q and q[0] < i:\n            q.pop(0)\n        while j < i + sz:\n            while q and b[q[-1]] >= b[j]:\n                q.pop()\n            q.append(j)\n            j += 1\n        ans = max(ans, b[q[0]])\n    print(ans)", "from collections import deque\nt = int(input())\nfor _ in range(t):\n    (n, m, k) = map(int, input().split())\n    k = min(m - 1, k)\n    a = list(map(int, input().split()))\n    a2 = [a[i] if a[i] > a[j] else a[j] for (i, j) in zip(range(n), range(n - m, n))]\n    (front, back) = (deque([(a2[0], a2[0])]), deque())\n    for i in range(1, m - k):\n        front.appendleft((a2[i], min(a2[i], front[0][1])))\n    ans = front[0][1]\n    inf = 10 ** 9\n    for i in range(m - k, m):\n        front.appendleft((a2[i], min(front[0][1], a2[i]) if front else a2[i]))\n        if not back:\n            while front:\n                x = front.popleft()[0]\n                back.appendleft((x, min(x, back[0][1]) if back else x))\n        back.popleft()\n        ans = max(ans, min(front[0][1] if front else inf, back[0][1] if back else inf))\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m, k) = map(int, input().split())\n    k = min(m - 1, k)\n    a = list(map(int, input().split()))\n    a2 = [a[i] if a[i] > a[j] else a[j] for (i, j) in zip(range(n), range(n - m, n))]\n    (front, back) = ([(a2[0], a2[0])], [])\n    for i in range(1, m - k):\n        front.append((a2[i], min(a2[i], front[-1][1])))\n    ans = front[-1][1]\n    inf = 10 ** 9\n    for i in range(m - k, m):\n        front.append((a2[i], min(front[-1][1], a2[i]) if front else a2[i]))\n        if not back:\n            while front:\n                x = front.pop()[0]\n                back.append((x, min(x, back[-1][1]) if back else x))\n        back.pop()\n        ans = max(ans, min(front[-1][1] if front else inf, back[-1][1] if back else inf))\n    print(ans)", "for i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    k = min(k, m - 1)\n    a = list(map(int, input().split()))\n    b = [max(a[i], a[i + n - m]) for i in range(0, m)]\n    x = max((min(b[i:i + (m - k)]) for i in range(k + 1)))\n    print(x)", "import sys, heapq\nfrom collections import *\nfrom functools import lru_cache\nsys.setrecursionlimit(10 ** 6)\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        (n, m, k) = map(int, input().split(' '))\n        arr = list(map(int, input().split(' ')))\n        q = deque()\n        k = min(k, m - 1)\n        res = -float('inf')\n        for i in range(m):\n            cur = max(arr[i], arr[i + n - m])\n            while q and i - q[0][1] > m - 1 - k:\n                q.popleft()\n            while q and q[-1][0] > cur:\n                q.pop()\n            q.append((cur, i))\n            if i >= m - 1 - k:\n                res = max(res, q[0][0])\n        print(res)\nmain()", "import math\nt = int(input())\nfor _ in range(t):\n    (n, m, k) = map(int, input().split())\n    a = [int(c) for c in input().split()]\n    m = m - 1\n    k = min(k, m)\n    R = 0\n    T = [max(a[i], a[i + n - 1 - m]) for i in range(m + 1)]\n    if k >= m:\n        print(max(T))\n    elif k == 0:\n        print(min(T))\n    else:\n        R = [min(T[j:m + 1 - k + j]) for j in range(k + 1)]\n        print(max(R))", "t = int(input().rstrip())\nfor i in range(t):\n    (n, m, k) = map(int, input().rstrip().split())\n    k = min(k, m - 1)\n    nums = list(map(int, input().rstrip().split()))\n    pk = tuple((max(nums[i], nums[i + (n - m)]) for i in range(m)))\n    best = 0\n    for j in range(k + 1):\n        best = max(best, min(pk[j:j + m - k]))\n    print(best)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    pre = a[:m]\n    suf = a[-1:-m - 1:-1]\n    l = [max(pre[i], suf[m - i - 1]) for i in range(m)]\n    if k >= m - 1:\n        ans = max(l)\n    elif k != 0:\n        kmin = [min(l[i:m - k + i]) for i in range(k + 1)]\n        ans = max(kmin)\n    else:\n        ans = min(l)\n    print(ans)", "for i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    k = min(k, m - 1)\n    a = list(map(int, input().split()))\n    b = [max(a[i], a[i + n - m]) for i in range(0, m)]\n    x = max((min(b[i:i + (m - k)]) for i in range(k + 1)))\n    print(x)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    v = [0] * m\n    for i in range(m):\n        v[i] = max(a[i], a[i - m])\n    if k >= m - 1:\n        print(max(v))\n    elif k == 0:\n        print(min(v))\n    else:\n        w = [0] * (k + 1)\n        for j in range(k + 1):\n            w[j] = min(v[j:m - k + j])\n        print(max(w))", "test = int(input().rstrip())\nfor i in range(test):\n    (n, m, k) = map(int, input().rstrip().split())\n    k = min(k, m - 1)\n    nums = list(map(int, input().rstrip().split()))\n    pk = tuple((max(nums[i], nums[i + (n - m)]) for i in range(m)))\n    best = 0\n    for j in range(k + 1):\n        best = max(best, min(pk[j:j + m - k]))\n    print(best)", "T = int(input())\nfor i in range(T):\n    (n, m, k) = map(int, input().split())\n    k = min(k, m - 1)\n    a = list(map(int, input().split()))\n    b = [max(a[i], a[i + n - m]) for i in range(0, m)]\n    x = max((min(b[i:i + (m - k)]) for i in range(k + 1)))\n    print(x)", "t = int(input())\nfor _ in range(t):\n    (n, m, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    before = m - 1\n    k = min(k, m)\n    temp = [max(a[i], a[n + i - 1 - before]) for i in range(before + 1)]\n    if k >= before:\n        print(max(temp))\n    elif k == 0:\n        print(min(temp))\n    else:\n        temp2 = [min(temp[j:before + 1 - k + j]) for j in range(k + 1)]\n        print(max(temp2))", "for x in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    k = min(k, m - 1)\n    b = [max(a[i], a[n + i - m]) for i in range(m)]\n    x = max((min(b[i:i + m - k]) for i in range(k + 1)))\n    print(x)", "t = int(input())\nwhile t != 0:\n    (n, m, k) = map(int, input().split())\n    list1 = list(map(int, input().split()))\n    mini = pow(10, 9) + 7\n    u = 0\n    list2 = list()\n    k = min(k, m - 1)\n    for i in range(m - 1, -1, -1):\n        p = max(list1[i], list1[len(list1) - 1 - u])\n        list2.append(p)\n        u += 1\n    temp = list()\n    for i in range(k + 1):\n        temp.append(min(list2[i:i + m - k]))\n    print(max(temp))\n    t -= 1", "(V, IDX) = ([0] * 3501, [0] * 3501)\n\ndef solve(A, n, m, k):\n    d = n - m\n    B = [0] * m\n    for i in range(m):\n        B[i] = max(A[i], A[i + d])\n    w = max(1, m - k)\n    res = 0\n    l = r = 0\n    for i in range(m):\n        while r > l and V[r - 1] >= B[i]:\n            r -= 1\n        (V[r], IDX[r]) = (B[i], i)\n        r += 1\n        if IDX[l] == i - w:\n            l += 1\n        if i >= w - 1:\n            res = max(res, V[l])\n    return res\nn = int(input())\nfor i in range(n):\n    (n, m, k) = map(int, input().split())\n    A = list(map(int, input().strip().split()))\n    print(solve(A, n, m, k))", "t = int(input())\nimport math\nMAX_A = 1000000002\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    s = list(map(int, input().split()))\n    if m <= k:\n        print(max(max(s[:m]), max(s[-m:])))\n    else:\n        D = [0] * m\n        for j in range(m):\n            a = max(s[j], s[-(m - j)])\n            D[j] = a\n        a = math.sqrt(len(D))\n        a = math.floor(a)\n        B = []\n        c = 0\n        A = MAX_A\n        for j in range(len(D)):\n            if D[j] < A:\n                A = D[j]\n            c += 1\n            if c == a or j == m - 1:\n                B.append(A)\n                A = MAX_A\n                c = 0\n        E = []\n        for j in range(k + 1):\n            l1 = j\n            r1 = j + m - k\n            M = []\n            for x in range(len(B)):\n                l = x * a\n                r = a * (x + 1)\n                if r > m:\n                    r = m\n                if l1 <= l and r <= r1:\n                    M.append(B[x])\n                elif r <= l1 or l >= r1:\n                    continue\n                else:\n                    M.append(min(D[max(l1, l):min(r1, r)]))\n            E.append(min(M))\n        print(max(E))", "import math, string, itertools, fractions, heapq, collections, re, array, bisect, copy, sys\nfrom sys import stdin, stdout\n\ndef modinv(n, p):\n    return pow(n, p - 2, p)\n\ndef nc():\n    return map(int, ns().split())\n\ndef narr():\n    return list(map(int, ns().split()))\n\ndef ns():\n    return input()\n\ndef ni():\n    return int(input())\nt = ni()\nfor _ in range(t):\n    (n, m, k) = narr()\n    a = narr()\n    ans = 0\n    if m <= k or m == 1:\n        for i in range(m):\n            ans = max(ans, a[i])\n            ans = max(ans, a[n - i - 1])\n    else:\n        w = n - m\n        best = [1000000001 for i in range(n - w)]\n        for j in range(n - w):\n            l = a[j]\n            r = a[j + w]\n            best[j] = max(l, r)\n        limit = max(m - k, 0)\n        for i in range(len(best) - limit + 1):\n            b = best[i:i + limit]\n            worst = min(b)\n            ans = max(ans, worst)\n    print(ans)", "def solve(n, m, k, a):\n    prior_selections = m - 1\n    forced = min(k, prior_selections)\n    free_choice = prior_selections - forced\n    best_selection = [0] * (prior_selections + 1)\n    for selected_first in range(prior_selections + 1):\n        first_element = a[selected_first]\n        selected_last = m - 1 - selected_first\n        last_element = a[-(selected_last + 1)]\n        selection = max(first_element, last_element)\n        best_selection[selected_first] = selection\n    best_of_worst = None\n    for forced_first in range(forced + 1):\n        worst_selection = None\n        for picked_first in range(free_choice + 1):\n            selected_first = forced_first + picked_first\n            selection = best_selection[selected_first]\n            if worst_selection is None or selection < worst_selection:\n                worst_selection = selection\n        if best_of_worst is None or worst_selection > best_of_worst:\n            best_of_worst = worst_selection\n    return best_of_worst\nfor T in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    print(solve(n, m, k, list(map(int, input().split()))))", "def solve(n, m, k, a):\n    prior_selections = m - 1\n    forced_choice = min(k, prior_selections)\n    free_choice = prior_selections - forced_choice\n    best_selection = [0] * (prior_selections + 1)\n    for selected_first in range(prior_selections + 1):\n        first_element = a[selected_first]\n        selected_last = prior_selections - selected_first\n        last_element = a[-(selected_last + 1)]\n        best_selection[selected_first] = max(first_element, last_element)\n    return max((min((best_selection[forced_first + picked_first] for picked_first in range(free_choice + 1))) for forced_first in range(forced_choice + 1)))\nfor T in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    print(solve(n, m, k, list(map(int, input().split()))))"]