["from math import comb\n\ndef ball(am, bm, a, b, k):\n    cnta = [0] * (am + 1)\n    cntb = [0] * (bm + 1)\n    for i in a:\n        cnta[i] += 1\n    for i in b:\n        cntb[i] += 1\n    (difa, difb) = (0, 0)\n    for i in cnta:\n        if i > 1:\n            difa += comb(i, 2)\n    for i in cntb:\n        if i > 1:\n            difb += comb(i, 2)\n    return comb(k, 2) - difa - difb\nfor i in range(int(input())):\n    (a, b, c) = map(int, input().strip().split())\n    lst1 = list(map(int, input().strip().split()))\n    lst2 = list(map(int, input().strip().split()))\n    print(ball(a, b, lst1, lst2, c))", "from collections import defaultdict, Counter\nres = []\nfor test in range(int(input())):\n    (a, b, k) = map(int, input().split())\n    al = list(map(int, input().split()))\n    bl = list(map(int, input().split()))\n    cnta = Counter(al)\n    cntb = Counter(bl)\n    n = k * (k - 1) // 2\n    s = 0\n    for (i, c) in cnta.items():\n        if c > 1:\n            s += c * (c - 1) // 2\n    for (i, c) in cntb.items():\n        if c > 1:\n            s += c * (c - 1) // 2\n    res.append(n - s)\nfor ans in res:\n    print(ans)", "from math import comb\n\ndef ball(am, bm, a, b, k):\n    cnta = [0] * (am + 1)\n    cntb = [0] * (bm + 1)\n    for i in a:\n        cnta[i] += 1\n    for i in b:\n        cntb[i] += 1\n    (difa, difb) = (0, 0)\n    for i in cnta:\n        if i > 1:\n            difa += comb(i, 2)\n    for i in cntb:\n        if i > 1:\n            difb += comb(i, 2)\n    return comb(k, 2) - difa - difb\nfor i in range(int(input())):\n    (a, b, c) = map(int, input().strip().split())\n    lst1 = list(map(int, input().strip().split()))\n    lst2 = list(map(int, input().strip().split()))\n    print(ball(a, b, lst1, lst2, c))", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (a, b, k) = map(int, input().split())\n    all = k * (k - 1) // 2\n    aa = [0] * (a + 1)\n    bb = [0] * (b + 1)\n    for i in map(int, input().split()):\n        aa[i] += 1\n    for i in map(int, input().split()):\n        bb[i] += 1\n    for i in range(1, a + 1):\n        all -= aa[i] * (aa[i] - 1) // 2\n    for i in range(1, b + 1):\n        all -= bb[i] * (bb[i] - 1) // 2\n    print(all)\nfor i in range(int(input())):\n    solve()", "__version__ = '1.0'\n__date__ = '2021-03-15'\nimport sys\nfrom math import comb\nfrom collections import Counter\n\ndef solve(a, b, k, aa, bb):\n    answer = comb(k, 2)\n    for c in Counter(aa).values():\n        if c > 1:\n            answer = answer - comb(c, 2)\n    for c in Counter(bb).values():\n        if c > 1:\n            answer = answer - comb(c, 2)\n    return answer\n\ndef main(argv=None):\n    t = int(input())\n    for _ in range(t):\n        (a, b, k) = map(int, input().split())\n        aa = list(map(int, input().split()))\n        bb = list(map(int, input().split()))\n        print(solve(a, b, k, aa, bb))\n    return 0\nSTATUS = main()\nsys.exit(STATUS)", "t = int(input())\nres = []\nfor i in range(t):\n    cnt = 0\n    l = []\n    (a, b, k) = map(int, input().split())\n    boys = list(map(int, input().split()))\n    girls = list(map(int, input().split()))\n    if k == 1:\n        res.append(0)\n    else:\n        bl = [0] * (a + 1)\n        gl = [0] * (b + 1)\n        for i in range(k):\n            bl[boys[i]] += 1\n            gl[girls[i]] += 1\n        for i in range(k):\n            cnt += k - bl[boys[i]] - gl[girls[i]] + 1\n        res.append(cnt)\nfor i in res:\n    print(i // 2)", "import math\nfrom collections import Counter\n\ndef pairs(num, boys, girls):\n    possible = num * (num - 1) // 2\n    countB = Counter(boys)\n    countG = Counter(girls)\n    for (key, val) in countB.items():\n        if val > 1:\n            possible -= val * (val - 1) // 2\n    for (key, val) in countG.items():\n        if val > 1:\n            possible -= val * (val - 1) // 2\n    return possible\nnum_tests = int(input())\nfor i in range(num_tests):\n    (a, b, k) = input().split()\n    boys = input().split()\n    girls = input().split()\n    print(pairs(int(k), boys, girls))", "import sys\nfrom collections import Counter\ninput = sys.stdin.readline\n\ndef solution(a, b, k, boys, girls):\n    c_boys = Counter(boys)\n    c_girls = Counter(girls)\n    sol = 0\n    for (b, g) in zip(boys, girls):\n        sol += k - c_boys[b] - c_girls[g] + 1\n    sol = sol // 2\n    print(sol)\nT = int(input())\nfor t in range(T):\n    (a, b, k) = map(int, input().split())\n    boys = list(map(int, input().split()))\n    girls = list(map(int, input().split()))\n    solution(a, b, k, boys, girls)", "import sys\n\ndef main():\n    test_cases = int(sys.stdin.readline())\n    for _ in range(test_cases):\n        (boy_count, girl_count, pair_count) = (int(i) for i in sys.stdin.readline().split())\n        boys = [int(i) for i in sys.stdin.readline().split()]\n        girls = [int(i) for i in sys.stdin.readline().split()]\n        boys_partners = [0 for _ in range(boy_count + 1)]\n        girls_partners = [0 for _ in range(girl_count + 1)]\n        for (b, g) in zip(boys, girls):\n            boys_partners[b] += 1\n            girls_partners[g] += 1\n        soln = 0\n        for (b, g) in zip(boys, girls):\n            soln += pair_count - girls_partners[g] - boys_partners[b] + 1\n        print(soln // 2)\nmain()", "from collections import *\nR = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n    (*_, k) = R()\n    print(k * k + k - sum((x * x for c in (R(), R()) for x in Counter(c).values())) >> 1)", "from collections import *\nR = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n    (*a, k) = R()\n    print(k * k + k - sum((x * x for _ in a for x in Counter(R()).values())) >> 1)", "def main():\n    for _ in range(int(input())):\n        (a, b, k) = map(int, input().split())\n        (ca, cb) = ([0] * (a + 1), [0] * (b + 1))\n        r = le = 0\n        for (a, b) in zip(map(int, input().split()), map(int, input().split())):\n            r += le - ca[a] - cb[b]\n            ca[a] += 1\n            cb[b] += 1\n            le += 1\n        print(r)\nmain()", "def C(u, d):\n    a = b = 1\n    for i in range(1, d + 1):\n        a *= u - i + 1\n        b *= i\n    return a // b\nn = int(input())\ninlist = []\nboy = []\ngirl = []\nboylist = []\ngirllist = []\nk = []\nfor i in range(n):\n    inlist = [int(num) for num in input().split()]\n    boy = [int(num) for num in input().split()]\n    girl = [int(num) for num in input().split()]\n    a = [0] * (inlist[0] + 1)\n    b = [0] * (inlist[1] + 1)\n    k.append(inlist[2])\n    for j in boy:\n        a[j] += 1\n    boylist.append(a)\n    for j in girl:\n        b[j] += 1\n    girllist.append(b)\nans = []\nfor (i, j, l) in zip(boylist, girllist, k):\n    sumnum = C(l, 2)\n    mine = 0\n    for a in i:\n        if a > 1:\n            mine += C(a, 2)\n    for b in j:\n        if b > 1:\n            mine += C(b, 2)\n    ans.append(sumnum - mine)\nfor i in ans:\n    print(i)", "from collections import *\nR = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n    (*_, k) = R()\n    print(k * k + k - sum((x * x for _ in (0, 0) for x in Counter(R()).values())) >> 1)", "from collections import Counter\nremaing_test_cases = int(input())\nwhile remaing_test_cases > 0:\n    (A, B, K) = map(int, input().split())\n    boys_pair = list(map(int, input().split()))\n    girls_pair = list(map(int, input().split()))\n    if K < 2:\n        print('0')\n    else:\n        nc2 = K * (K - 1) // 2\n        a = Counter(boys_pair)\n        for i in a.keys():\n            if a[i] > 1:\n                k1 = a[i]\n                nc2 = nc2 - k1 * (k1 - 1) // 2\n        a2 = Counter(girls_pair)\n        for i in a2.keys():\n            if a2[i] > 1:\n                k1 = a2[i]\n                nc2 = nc2 - k1 * (k1 - 1) // 2\n        print(nc2)\n    remaing_test_cases = remaing_test_cases - 1", "def main():\n    for _ in range(int(input())):\n        (a, b, k) = map(int, input().split())\n        (ca, cb, r) = ([0] * (a + 1), [0] * (b + 1), 0)\n        for (i, a, b) in zip(range(k), map(int, input().split()), map(int, input().split())):\n            r += i - ca[a] - cb[b]\n            ca[a] += 1\n            cb[b] += 1\n        print(r)\nmain()", "from collections import Counter\nimport operator as op\nfrom functools import reduce\n\ndef ncr(n, r):\n    r = min(r, n - r)\n    numer = reduce(op.mul, range(n, n - r, -1), 1)\n    denom = reduce(op.mul, range(1, r + 1), 1)\n    return numer // denom\n\ndef fun(A, B):\n    if len(A) < 2:\n        print(0)\n        return\n    p = Counter(A)\n    q = Counter(B)\n    Ans = ncr(len(A), 2)\n    for i in p:\n        if p[i] > 1:\n            Ans -= ncr(p[i], 2)\n    for i in q:\n        if q[i] > 1:\n            Ans -= ncr(q[i], 2)\n    print(Ans)\nfor _ in range(int(input())):\n    (a, b, k) = map(int, input().split())\n    boys = list(map(int, input().split()))\n    girls = list(map(int, input().split()))\n    fun(boys, girls)", "def solve():\n    (a, b, k) = map(int, input().split())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    bd = {}\n    gd = {}\n    for i in range(k):\n        (dil, dol) = (x[i], y[i])\n        if dil in bd:\n            bd[dil] += 1\n        else:\n            bd[dil] = 1\n        if dol in gd:\n            gd[dol] += 1\n        else:\n            gd[dol] = 1\n    res = k * k\n    for i in range(k):\n        res -= bd[x[i]] + gd[y[i]] - 1\n    return res // 2\n\ndef main():\n    for _ in range(int(input())):\n        print(solve())\nmain()", "import math\nfrom collections import Counter\nfor _ in range(int(input())):\n    (a, b, k) = map(int, input().split())\n    boy = list(map(int, input().split()))\n    girl = list(map(int, input().split()))\n    cnt = k * (k - 1) // 2\n    boy = Counter(boy)\n    girl = Counter(girl)\n    for i in boy:\n        if boy[i] > 1:\n            k = boy[i]\n            cnt -= k * (k - 1) // 2\n    for i in girl:\n        if girl[i] > 1:\n            k = girl[i]\n            cnt -= k * (k - 1) // 2\n    print(cnt)", "import sys\n\ndef readnum():\n    input = sys.stdin.readline\n    a = list(map(int, input().split()))\n    return a\n\ndef printf(val):\n    sys.stdout.write(str(val) + '\\n')\n\ndef power(a, b, mod):\n    if b == 1:\n        return a\n    if b == 0:\n        return 1\n    ans = power(a, b // 2, mod)\n    ans *= ans\n    if b % 2:\n        ans *= a\n    ans = ans % mod\n    return ans\nt = readnum()[0]\n\ndef factorial(n, start, skip, mod):\n    res = start\n    for i in range(1, n + 1):\n        if i == skip:\n            continue\n        res *= i\n        res = res % mod\n    return res\n\ndef make_deg(l):\n    deg = {}\n    for i in l:\n        if not i in deg:\n            deg[i] = 0\n        deg[i] += 1\n    return deg\nfor _ in range(t):\n    (a, b, k) = readnum()\n    boys = readnum()\n    girls = readnum()\n    (boys_deg, girls_deg) = (make_deg(boys), make_deg(girls))\n    res = 0\n    for i in range(k):\n        res += k - boys_deg.get(boys[i]) - girls_deg.get(girls[i]) + 1\n    print(res // 2)", "import sys\n\ndef comb(num):\n    if num == 1:\n        return 0\n    else:\n        return num * (num - 1) // 2\nfor i in range(int(sys.stdin.readline())):\n    (a, b, k) = map(int, sys.stdin.readline().split())\n    dica = {}\n    dicb = {}\n    for j in map(int, sys.stdin.readline().split()):\n        if j not in dica:\n            dica[j] = 1\n        else:\n            dica[j] += 1\n    for j in map(int, sys.stdin.readline().split()):\n        if j not in dicb:\n            dicb[j] = 1\n        else:\n            dicb[j] += 1\n    s = 0\n    for j in dica:\n        s += comb(dica[j])\n    for j in dicb:\n        s += comb(dicb[j])\n    print(comb(k) - s)", "from math import comb\nfrom collections import Counter\n\ndef pairs(size, arr1, arr2):\n    cmb = comb(size, 2)\n    (dct1, dct2) = (Counter(arr1), Counter(arr2))\n    for i in list(dct1):\n        if dct1[i] > 1:\n            cmb -= comb(dct1[i], 2)\n    for j in list(dct2):\n        if dct2[j] > 1:\n            cmb -= comb(dct2[j], 2)\n    return cmb\nfor test in range(int(input())):\n    (a, b, k) = map(int, input().split())\n    boys = list(map(int, input().split()))\n    girls = list(map(int, input().split()))\n    print(pairs(k, boys, girls))", "import math\nimport sys\nfrom collections import *\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nt = inp()\nans = []\nfor i in range(t):\n    (bn, gn, k) = inlt()\n    b = inlt()\n    g = inlt()\n    bs = Counter(b)\n    gs = Counter(g)\n    ret = 0\n    for i in range(k):\n        ret += k - bs[b[i]] - gs[g[i]] + 1\n    ans.append(ret)\nfor r in ans:\n    print(r // 2)", "import sys, io, os, time\nfrom collections import defaultdict\nfrom collections import Counter\nfrom collections import deque\nfrom itertools import combinations\nfrom itertools import permutations\nimport bisect, math, heapq\nalphabet = 'abcdefghijklmnopqrstuvwxyz'\ninput = sys.stdin.readline\nfor ii in range(int(input())):\n    (an, bn, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ca = Counter(a)\n    cb = Counter(b)\n    ans = 0\n    for i in range(k):\n        ans += k - ca[a[i]] - cb[b[i]] + 1\n    print(ans // 2)", "import math\nq = int(input())\nlinea1 = []\nlinea2 = []\nlinea3 = []\nfor i in range(0, q):\n    linea1.append(input())\n    linea2.append(input())\n    linea3.append(input())\nfor i in range(0, q):\n    valores = list(map(int, linea1[i].split()))\n    boys = list(map(int, linea2[i].split()))\n    girls = list(map(int, linea3[i].split()))\n    k = valores[2]\n    conex_boy = [0] * valores[0]\n    conex_girl = [0] * valores[1]\n    result = 0\n    for i in range(0, k):\n        conex_boy[boys[i] - 1] += 1\n        conex_girl[girls[i] - 1] += 1\n    for i in range(0, k):\n        result += k - conex_boy[boys[i] - 1] - conex_girl[girls[i] - 1] + 1\n    print(result // 2)", "import math, string, itertools, fractions, heapq, collections, re, array, bisect, sys, random, time\nsys.setrecursionlimit(5 * 10 ** 5)\ninf = 10 ** 20\nmod = 10 ** 9 + 7\n\ndef LI():\n    return list(map(int, input().split()))\n\ndef II():\n    return int(input())\n\ndef LS():\n    return list(input().split())\n\ndef S():\n    return input()\n\ndef solve():\n    ans = 0\n    (a, b, k) = LI()\n    x_list = LI()\n    y_list = LI()\n    a_num = [0 for _ in range(a)]\n    b_num = [0 for _ in range(b)]\n    for x in x_list:\n        x -= 1\n        a_num[x] += 1\n    for y in y_list:\n        y -= 1\n        b_num[y] += 1\n    for i in range(k):\n        x = x_list[i] - 1\n        y = y_list[i] - 1\n        ans += k + 1 - a_num[x] - b_num[y]\n    ans //= 2\n    return ans\n\ndef main():\n    t = II()\n    res = list()\n    for _ in range(t):\n        res.append(solve())\n    for ans in res:\n        print(ans)\n    return 0\nmain()", "for _ in range(int(input())):\n    (a, b, k) = map(int, input().split())\n    pairs1 = list(map(int, input().split()))\n    pairs2 = list(map(int, input().split()))\n    deg1 = [0] * (a + 1)\n    deg2 = [0] * (b + 1)\n    for x in pairs1:\n        deg1[x] += 1\n    for x in pairs2:\n        deg2[x] += 1\n    result = 0\n    for i in range(k):\n        result += k - deg1[pairs1[i]] - deg2[pairs2[i]] + 1\n    print(result // 2)", "list_ans = []\nfor _ in range(int(input())):\n    (a, b, k) = map(int, input().split())\n    ans = 0\n    dictb = {}\n    dictg = {}\n    listb = list(map(int, input().split()))\n    listg = list(map(int, input().split()))\n    for b in listb:\n        dictb[b] = dictb.get(b, 0) + 1\n    for g in listg:\n        dictg[g] = dictg.get(g, 0) + 1\n    for i in range(k):\n        b = listb[i]\n        g = listg[i]\n        ans += k - dictb[b] - dictg[g] + 1\n    list_ans.append(ans // 2)\nprint(*list_ans, sep='\\n')", "t = int(input())\nfor i in range(t):\n    (a, b, k) = map(int, input().split())\n    a1 = list(map(int, input().split()))\n    b1 = list(map(int, input().split()))\n    degA = [0 for i in range(a + 1)]\n    degB = [0 for i in range(b + 1)]\n    for i in a1:\n        degA[i] += 1\n    for j in b1:\n        degB[j] += 1\n    ans = 0\n    for i in range(k):\n        ans += k - degA[a1[i]] - degB[b1[i]] + 1\n    print(ans // 2)", "t = int(input())\nfor _ in range(t):\n    (a, b, k) = tuple(map(int, input().split()))\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    dct = {}\n    dct1 = {}\n    for i in range(k):\n        if l1[i] in dct:\n            dct[l1[i]] += 1\n        else:\n            dct[l1[i]] = 1\n        if l2[i] in dct1:\n            dct1[l2[i]] += 1\n        else:\n            dct1[l2[i]] = 1\n    total = k * (k - 1) // 2\n    count = 0\n    count1 = 0\n    for val in dct.values():\n        count += val * (val - 1) // 2\n    for val in dct1.values():\n        count1 += val * (val - 1) // 2\n    print(total - (count + count1))", "t = int(input())\nfor _ in range(t):\n    (a, b, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    brr = list(map(int, input().split()))\n    c1 = [0] * a\n    c2 = [0] * b\n    for i in arr:\n        c1[i - 1] += 1\n    for i in brr:\n        c2[i - 1] += 1\n    ans = k * (k - 1) // 2\n    for i in c1:\n        ans -= i * (i - 1) // 2\n    for i in c2:\n        ans -= i * (i - 1) // 2\n    print(ans)", "T = int(input())\nfor case in range(T):\n    (a, b, k) = map(int, input().split())\n    boy = list(map(int, input().split()))\n    girl = list(map(int, input().split()))\n    cnt1 = {}\n    cnt2 = {}\n    for ele in boy:\n        if ele not in cnt1:\n            cnt1[ele] = 1\n        else:\n            cnt1[ele] += 1\n    for ele in girl:\n        if ele not in cnt2:\n            cnt2[ele] = 1\n        else:\n            cnt2[ele] += 1\n    ans = 0\n    for i in range(k):\n        ans += k - (cnt1[boy[i]] + cnt2[girl[i]]) + 1\n    print(ans // 2)", "import math\nfor t in range(int(input())):\n    (a, b, k) = map(int, input().split())\n    A = [int(i) for i in input().split()]\n    B = [int(i) for i in input().split()]\n    store1 = [0 for i in range(a + 1)]\n    store2 = [0 for i in range(b + 1)]\n    for i in A:\n        store1[i] += 1\n    for i in B:\n        store2[i] += 1\n    ans = k * (k - 1) // 2\n    for i in store1:\n        ans -= i * (i - 1) // 2\n    for i in store2:\n        ans -= i * (i - 1) // 2\n    print(ans)", "from collections import Counter\nfrom sys import stderr\n\ndef dbp(*args, **kwargs):\n    print(*args, file=stderr, **kwargs)\n\ndef get_int_list():\n    return [int(i) for i in input().strip().split()]\n\ndef do_thing():\n    (a, b, k) = get_int_list()\n    alist = get_int_list()\n    blist = get_int_list()\n    ac = Counter(alist)\n    bc = Counter(blist)\n    allk = k * (k - 1)\n    for i in range(k):\n        allk -= ac[alist[i]] + bc[blist[i]] - 2\n    return allk // 2\nmaxcc = int(input().strip())\nfor cc in range(maxcc):\n    print(do_thing())", "for t in range(0, int(input())):\n    (a, b, k) = tuple(map(int, input().split()))\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    if a == 1 or b == 1:\n        print(0)\n    else:\n        ans = 0\n        (x1, y1) = ({}, {})\n        for (i, j) in zip(x, y):\n            if i not in x1:\n                x1[i] = 1\n            else:\n                x1[i] += 1\n            if j not in y1:\n                y1[j] = 1\n            else:\n                y1[j] += 1\n        for (i, j) in zip(x, y):\n            ans = ans + k - x1[i] - y1[j]\n        ans += k\n        print(ans // 2)", "import sys\nimport array\n\ndef solve(a: int, b: int, k: int, boy_indices: list, girl_indices: list) -> int:\n    ans = 0\n    boy_connections = array.array('i', [0 for i in range(a)])\n    girl_connections = array.array('i', [0 for i in range(b)])\n    for i in range(k):\n        boy_connections[boy_indices[i] - 1] += 1\n        girl_connections[girl_indices[i] - 1] += 1\n    for i in range(k):\n        boy_index = boy_indices[i] - 1\n        girl_index = girl_indices[i] - 1\n        ans += -boy_connections[boy_index] - girl_connections[girl_index] + 1 + k\n    ans = int(ans / 2)\n    return ans\nt = int(sys.stdin.readline())\nfor i in range(t):\n    line = sys.stdin.readline()\n    data = line.split(' ')\n    a = int(data[0])\n    b = int(data[1])\n    k = int(data[2])\n    boys = [int(x) for x in sys.stdin.readline().split()]\n    girls = [int(x) for x in sys.stdin.readline().split()]\n    print(solve(a, b, k, boys, girls))", "def distinct_pairs(boys, girls, k):\n    hash_map_boys = {}\n    hash_map_girls = {}\n    for i in range(k):\n        if boys[i] in hash_map_boys:\n            hash_map_boys[boys[i]] += 1\n        else:\n            hash_map_boys[boys[i]] = 1\n        if girls[i] in hash_map_girls:\n            hash_map_girls[girls[i]] += 1\n        else:\n            hash_map_girls[girls[i]] = 1\n    count = 0\n    for i in range(k):\n        count += k - (hash_map_boys[boys[i]] + hash_map_girls[girls[i]]) + 1\n    return count // 2\nT = int(input())\nfor _ in range(T):\n    (a, b, k) = map(int, input().split())\n    boys = list(map(int, input().split()))\n    girls = list(map(int, input().split()))\n    count = distinct_pairs(boys, girls, k)\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (a, b, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    brr = list(map(int, input().split()))\n    c1 = [0] * a\n    c2 = [0] * b\n    for i in arr:\n        c1[i - 1] += 1\n    for i in brr:\n        c2[i - 1] += 1\n    ans = k * (k - 1) // 2\n    for i in c1:\n        ans -= i * (i - 1) // 2\n    for i in c2:\n        ans -= i * (i - 1) // 2\n    print(ans)", "from collections import *\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        (a, b, k) = map(int, input().split())\n        boys = list(map(int, input().split()))\n        girls = list(map(int, input().split()))\n        cntBoys = Counter(boys)\n        cntGirls = Counter(girls)\n        ans = 0\n        for i in range(k):\n            ans += k - cntBoys[boys[i]] - cntGirls[girls[i]] + 1\n        print(ans // 2)\nmain()", "for i in range(int(input().strip())):\n    (a, b, k) = map(int, input().strip().split())\n    boy = list(map(int, input().strip().split()))\n    girl = list(map(int, input().strip().split()))\n    pairs = []\n    cntg = [0] * (b + 1)\n    cntb = [0] * (a + 1)\n    for i in range(k):\n        cntg[girl[i]] += 1\n        cntb[boy[i]] += 1\n    ans = 0\n    for i in range(k):\n        ans += k - (cntb[boy[i]] + cntg[girl[i]]) + 1\n    ans = ans // 2\n    print(ans)", "for _ in range(int(input())):\n    (A, B, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = [(i, j) for (i, j) in zip(a, b)]\n    ans = k * (k - 1) // 2\n    acnt = {}\n    bcnt = {}\n    for i in range(k):\n        if a[i] in acnt:\n            acnt[a[i]] += 1\n        else:\n            acnt[a[i]] = 1\n    for i in range(k):\n        if b[i] in bcnt:\n            bcnt[b[i]] += 1\n        else:\n            bcnt[b[i]] = 1\n    for i in acnt:\n        if acnt[i] > 1:\n            ans -= acnt[i] * (acnt[i] - 1) // 2\n    for i in bcnt:\n        if bcnt[i] > 1:\n            ans -= bcnt[i] * (bcnt[i] - 1) // 2\n    print(ans)", "t = int(input())\nwhile t > 0:\n    (a, b, k) = map(int, input().split())\n    boy = list(map(int, input().split()))\n    girl = list(map(int, input().split()))\n    c_boy = [0] * (a + 1)\n    c_girl = [0] * (b + 1)\n    for i in range(k):\n        c_boy[boy[i]] += 1\n        c_girl[girl[i]] += 1\n    ans = 0\n    for i in range(k):\n        ans = ans - c_boy[boy[i]] - c_girl[girl[i]] + k + 1\n    print(int(ans / 2))\n    t -= 1", "from collections import Counter\n\ndef ballInBerland():\n    for i in range(int(input())):\n        (a, b, k) = list(map(int, input().split()))\n        boys = list(map(int, input().split()))\n        girls = list(map(int, input().split()))\n        countBoys = Counter(boys)\n        countGirls = Counter(girls)\n        ans = 0\n        for i in range(k):\n            ans += k - countBoys[boys[i]] - countGirls[girls[i]] + 1\n        print(ans // 2)\nballInBerland()", "for _ in range(int(input())):\n    (a, b, k) = map(int, input().split())\n    A = [0] * (a + 1)\n    B = [0] * (b + 1)\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    for i in x:\n        A[i] += 1\n    for j in y:\n        B[j] += 1\n    ans = 0\n    for i in range(k):\n        ans += k - A[x[i]] - B[y[i]] + 1\n    print(ans // 2)", "import math\n\ndef col(m):\n    return m * (m - 1) // 2\nfor _ in range(int(input())):\n    [a, b, k] = list(map(int, input().strip().split()))\n    boys = list(map(int, input().strip().split()))\n    girls = list(map(int, input().strip().split()))\n    dict_b = {}\n    dict_g = {}\n    for (ind, item) in enumerate(boys):\n        dict_b[item] = dict_b.get(item, 0) + 1\n    for (ind, item) in enumerate(girls):\n        dict_g[item] = dict_g.get(item, 0) + 1\n    total = col(k)\n    boys_rem = 0\n    girls_rem = 0\n    for key in dict_b:\n        if dict_b[key] > 1:\n            boys_rem = boys_rem + col(dict_b[key])\n    for key in dict_g:\n        if dict_g[key] > 1:\n            girls_rem = girls_rem + col(dict_g[key])\n    print(total - boys_rem - girls_rem)", "def solve():\n    (A, B, K) = map(int, input().split())\n    par = list(map(int, input().split()))\n    per = list(map(int, input().split()))\n    edges = []\n    a = [0] * A\n    b = [0] * B\n    for i in range(K):\n        edges.append((par[i], per[i]))\n    for (x, y) in edges:\n        x -= 1\n        a[x] += 1\n        y -= 1\n        b[y] += 1\n    ans = 0\n    for (x, y) in edges:\n        ans += K - a[x - 1] - b[y - 1] + 1\n    print(ans // 2)\nfor _ in range(int(input())):\n    solve()", "from collections import defaultdict\n\ndef count_pairs(pairs):\n    pairs_length = len(pairs)\n    man_pairs = defaultdict(lambda : 0)\n    woman_pairs = defaultdict(lambda : 0)\n    count = 0\n    for (man, woman) in pairs:\n        man_pairs[man] += 1\n        woman_pairs[woman] += 1\n    for (man, woman) in pairs:\n        suitable_pairs = pairs_length - man_pairs[man] - woman_pairs[woman] + 1\n        count += suitable_pairs\n    return count // 2\nresults = []\nfor _ in range(int(input())):\n    (man_n, woman_n, _) = [int(s) for s in input().split(' ')]\n    man = [int(s) for s in input().split(' ')]\n    woman = [int(s) for s in input().split(' ')]\n    pairs = list(zip(man, woman))\n    results.append(str(count_pairs(pairs)))\nprint('\\n'.join(results))", "for _ in range(int(input())):\n    infos = list(map(int, input().strip().split(' ')))\n    boys = infos[0]\n    girls = infos[1]\n    pairs = infos[2]\n    b_n = list(map(int, input().strip().split(' ')))\n    g_n = list(map(int, input().strip().split(' ')))\n    b_record = [0] * (boys + 1)\n    g_record = [0] * (girls + 1)\n    for i in range(pairs):\n        b_record[b_n[i]] += 1\n        g_record[g_n[i]] += 1\n    count = 0\n    for i in range(pairs):\n        count += pairs - b_record[b_n[i]] - g_record[g_n[i]] + 1\n    print(int(count / 2))", "answers = []\n\ndef solve(arr1, arr2):\n    store1 = {}\n    store2 = {}\n    for ele in arr1:\n        if ele not in store1:\n            store1[ele] = 1\n        else:\n            store1[ele] += 1\n    for ele in arr2:\n        if ele not in store2:\n            store2[ele] = 1\n        else:\n            store2[ele] += 1\n    total = 0\n    length = len(arr1)\n    for i in range(length):\n        temp = store2[arr2[i]] + store1[arr1[i]] - 2\n        store2[arr2[i]] -= 1\n        store1[arr1[i]] -= 1\n        ans = length - 1 - i - temp\n        if ans > 0:\n            total += ans\n    answers.append(total)\nt = int(input())\nwhile t:\n    (a, b, k) = [int(x) for x in input().split()]\n    arr1 = [int(x) for x in input().split()]\n    arr2 = [int(x) for x in input().split()]\n    solve(arr1, arr2)\n    t -= 1\nfor ans in answers:\n    print(ans)", "import math\n\ndef col(m):\n    return m * (m - 1) // 2\nt = int(input().strip())\nfor _ in range(t):\n    [a, b, k] = list(map(int, input().strip().split()))\n    boys = list(map(int, input().strip().split()))\n    girls = list(map(int, input().strip().split()))\n    dick_boys = {}\n    pussy_girls = {}\n    for (ind, item) in enumerate(boys):\n        dick_boys[item] = dick_boys.get(item, 0) + 1\n    for (ind, item) in enumerate(girls):\n        pussy_girls[item] = pussy_girls.get(item, 0) + 1\n    total = col(k)\n    boys_rem = 0\n    girls_rem = 0\n    for key in dick_boys:\n        if dick_boys[key] > 1:\n            boys_rem = boys_rem + col(dick_boys[key])\n    for key in pussy_girls:\n        if pussy_girls[key] > 1:\n            girls_rem = girls_rem + col(pussy_girls[key])\n    print(total - boys_rem - girls_rem)", "from math import comb\nfrom collections import Counter\n\ndef pairs(size, arr1, arr2):\n    cmb = comb(size, 2)\n    (dct1, dct2) = (Counter(arr1), Counter(arr2))\n    for i in list(dct1):\n        if dct1[i] > 1:\n            cmb -= comb(dct1[i], 2)\n    for j in list(dct2):\n        if dct2[j] > 1:\n            cmb -= comb(dct2[j], 2)\n    return cmb\nfor test in range(int(input())):\n    (a, b, k) = map(int, input().split())\n    boys = list(map(int, input().split()))\n    girls = list(map(int, input().split()))\n    print(pairs(k, boys, girls))", "for _ in range(int(input())):\n    (a, b, k) = map(int, input().split())\n    m = list(map(int, input().split()))\n    n = list(map(int, input().split()))\n    p = [0] * a\n    q = [0] * b\n    for i in m:\n        p[i - 1] += 1\n    for i in n:\n        q[i - 1] += 1\n    ans = k * (k - 1) // 2\n    for i in p:\n        ans -= i * (i - 1) // 2\n    for i in q:\n        ans -= i * (i - 1) // 2\n    print(ans)", "def solve():\n    (a, b, k) = map(int, input().split())\n    res = 0\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    degA = [0] * a\n    degB = [0] * b\n    for i in range(k):\n        degA[l1[i] - 1] += 1\n        degB[l2[i] - 1] += 1\n    poss = 0\n    for i in range(k):\n        deg1 = degA[l1[i] - 1]\n        deg2 = degB[l2[i] - 1]\n        poss += k - deg1 - deg2 + 1\n    print(poss // 2)\n    return\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    (a, b, k) = [int(x) for x in input().split()]\n    boy = [int(x) for x in input().split()]\n    girl = [int(x) for x in input().split()]\n    boy_dict = {}\n    girl_dict = {}\n    for i in boy:\n        boy_dict[i] = boy_dict.get(i, 0) + 1\n    for i in girl:\n        girl_dict[i] = girl_dict.get(i, 0) + 1\n    ans = k * (k - 1) // 2\n    for (key, value) in boy_dict.items():\n        ans -= value * (value - 1) // 2\n    for (key, value) in girl_dict.items():\n        ans -= value * (value - 1) // 2\n    print(ans)", "def solve():\n    (n, m, no_pairs) = input().split()\n    n = int(n)\n    m = int(m)\n    no_pairs = int(no_pairs)\n    male = input().split()\n    female = input().split()\n    male_pair = [0] * n\n    female_pair = [0] * m\n    res = 0\n    for i in male:\n        male_pair[int(i) - 1] += 1\n    for j in female:\n        female_pair[int(j) - 1] += 1\n    for i in range(len(male)):\n        index_male = int(male[i])\n        index_fmale = int(female[i])\n        res += len(male) - male_pair[index_male - 1] - female_pair[index_fmale - 1] + 1\n    return int(res / 2)\nno_tests = int(input())\nresults = []\nfor i in range(no_tests):\n    results.append(solve())\nfor result in results:\n    print(result)", "t = int(input())\nboys = {}\ngirls = {}\nfor _ in range(t):\n    (boys, girls) = ({}, {})\n    (a, b, k) = map(int, input().rsplit())\n    a_all = list(map(int, input().rsplit()))\n    for a_i in a_all:\n        if a_i in boys:\n            boys[a_i] += 1\n        else:\n            boys[a_i] = 1\n    b_all = list(map(int, input().rsplit()))\n    for b_i in b_all:\n        if b_i in girls:\n            girls[b_i] += 1\n        else:\n            girls[b_i] = 1\n    res = 0\n    for i in range(k):\n        res += boys[a_all[i]] + girls[b_all[i]]\n    print(k * (k - 1) // 2 + k - res // 2)", "def solv(pair, m_r, w_r, m, w):\n    sa = [0] * (m + 1)\n    sb = [0] * (w + 1)\n    for i in range(pair):\n        sa[m_r[i]] += 1\n        sb[w_r[i]] += 1\n    summ = 0\n    for i in range(pair):\n        summ += k - sa[m_r[i]] - sb[w_r[i]] + 1\n    return summ // 2\nfor i in range(int(input())):\n    (m, w, k) = map(int, input().split())\n    m_r = list(map(int, input().split()))\n    w_r = list(map(int, input().split()))\n    print(solv(k, m_r, w_r, m, w))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    cntB = [0] * n\n    cntG = [0] * m\n    u = list(map(int, input().split()))\n    v = list(map(int, input().split()))\n    for i in u:\n        cntB[i - 1] += 1\n    for i in v:\n        cntG[i - 1] += 1\n    res = 0\n    for i in range(k):\n        res += k - cntB[u[i] - 1] - cntG[v[i] - 1] + 1\n    print(res // 2)", "def solve():\n    (A, B, K) = map(int, input().split())\n    par = list(map(int, input().split()))\n    per = list(map(int, input().split()))\n    edges = []\n    a = [0] * (A + 1)\n    b = [0] * (B + 1)\n    for i in range(K):\n        edges.append((par[i], per[i]))\n    for (x, y) in edges:\n        a[x] += 1\n        b[y] += 1\n    ans = 0\n    for (x, y) in edges:\n        ans += K - a[x] - b[y] + 1\n    print(ans // 2)\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nfor _ in range(t):\n    (a, b, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    brr = list(map(int, input().split()))\n    c1 = [0] * a\n    c2 = [0] * b\n    for i in arr:\n        c1[i - 1] += 1\n    for i in brr:\n        c2[i - 1] += 1\n    ans = k * (k - 1) // 2\n    for i in c1:\n        ans -= i * (i - 1) // 2\n    for i in c2:\n        ans -= i * (i - 1) // 2\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (a, b, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    brr = list(map(int, input().split()))\n    c1 = [0] * a\n    c2 = [0] * b\n    for i in arr:\n        c1[i - 1] += 1\n    for i in brr:\n        c2[i - 1] += 1\n    ans = k * (k - 1) // 2\n    for i in c1:\n        ans -= i * (i - 1) // 2\n    for i in c2:\n        ans -= i * (i - 1) // 2\n    print(ans)", "def nCr(n, r):\n    return fact(n) / (fact(r) * fact(n - r))\n\ndef fact(n):\n    res = 1\n    for i in range(2, n + 1):\n        res = res * i\n    return res\nt = int(input())\nfor _ in range(t):\n    (a, b, k) = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    (d, p) = ({}, {})\n    for i in A:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for i in B:\n        if i in p:\n            p[i] += 1\n        else:\n            p[i] = 1\n    total = 0\n    for i in range(k):\n        total += k - 1 - (d[A[i]] - 1) - (p[B[i]] - 1)\n    print(int(total / 2))", "for T in range(int(input())):\n    (a, b, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    m = list(map(int, input().split()))\n    p = [0] * (a + 1)\n    q = [0] * (b + 1)\n    for i in l:\n        p[i] += 1\n    for i in m:\n        q[i] += 1\n    s = 0\n    for i in range(k):\n        s += k - p[l[i]] - q[m[i]] + 1\n    print(s // 2)", "from typing import List\nfrom collections import defaultdict\n\ndef solve(inp, a, b, k):\n    deg_a = [0] * (a + 1)\n    deg_b = [0] * (b + 1)\n    for (x, y) in inp:\n        deg_a[x] += 1\n        deg_b[y] += 1\n    total = 0\n    for (x, y) in inp:\n        total += k - deg_a[x] - deg_b[y] + 1\n    return total // 2\n\ndef main():\n    t = int(input())\n    for testcase in range(t):\n        (a, b, k) = list(map(int, input().strip().split(' ')))\n        a_list = list(map(int, input().strip().split(' ')))\n        b_list = list(map(int, input().strip().split(' ')))\n        a_b_pair = list(zip(a_list, b_list))\n        answer = solve(a_b_pair, a, b, k)\n        print(answer)\nmain()", "from collections import Counter\nt = int(input())\nresult = []\nfor _ in range(t):\n    (a, b, k) = (int(n) for n in input().split())\n    boys = [int(n) for n in input().split()]\n    girls = [int(n) for n in input().split()]\n    all_pairs = zip(boys, girls)\n    boys_cnt = Counter(boys)\n    girls_cnt = Counter(girls)\n    res = 0\n    for (i, pair) in enumerate(all_pairs):\n        the_boy = pair[0]\n        the_girl = pair[1]\n        res += k - 1 - (boys_cnt[the_boy] - 1) - (girls_cnt[the_girl] - 1)\n    result.append(int(res / 2))\nfor n in result:\n    print(n)", "t = int(input())\nfrom collections import defaultdict\nfor i in range(0, t):\n    (a, b, k) = map(int, input().split())\n    lis1 = list(map(int, input().split()))\n    lis2 = list(map(int, input().split()))\n    dic1 = defaultdict(int)\n    dic2 = defaultdict(int)\n    ans = 0\n    for j in range(0, k):\n        dic1[lis1[j]] = dic1[lis1[j]] + 1\n        dic2[lis2[j]] = dic2[lis2[j]] + 1\n    ans = k * (k - 1) // 2\n    for j in dic1:\n        if dic1[j] > 1:\n            ans = ans - dic1[j] * (dic1[j] - 1) // 2\n    for j in dic2:\n        if dic2[j] > 1:\n            ans = ans - dic2[j] * (dic2[j] - 1) // 2\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (a, b, k) = map(int, input().split())\n    a_i = [0] * a\n    b_i = [0] * b\n    cur_a = list(map(int, input().split()))\n    for j in cur_a:\n        a_i[j - 1] += 1\n    cur_b = list(map(int, input().split()))\n    for j in cur_b:\n        b_i[j - 1] += 1\n    ans = k * (k - 1) // 2\n    for j in a_i:\n        ans -= j * (j - 1) // 2\n    for j in b_i:\n        ans -= j * (j - 1) // 2\n    print(ans)", "import sys\ninput = sys.stdin.readline\ng = int(input())\nfor i in range(g):\n    (a, b, k) = list(map(int, input().split()))\n    (n, m) = ([0] * (a + 1), [0] * (b + 1))\n    list1 = list(map(int, input().split()))\n    list2 = list(map(int, input().split()))\n    for i in range(k):\n        n[list1[i]] += 1\n    for i in range(k):\n        m[list2[i]] += 1\n    (i, res) = (0, 0)\n    while i < k:\n        res += k - 1 - (n[list1[i]] - 1) - (m[list2[i]] - 1)\n        i += 1\n    print(res // 2)", "import sys\ninput = sys.stdin.readline\nfor i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    b = list(map(int, input().split()))\n    g = list(map(int, input().split()))\n    (bo, gi) = (dict(), dict())\n    for j in range(k):\n        if b[j] in bo:\n            bo[b[j]] += 1\n        else:\n            bo[b[j]] = 1\n        if g[j] in gi:\n            gi[g[j]] += 1\n        else:\n            gi[g[j]] = 1\n    ans = 0\n    for j in range(k):\n        ans += k - bo[b[j]] - gi[g[j]] + 1\n    print(ans // 2)", "for _ in range(int(input())):\n    (a, b, k) = input().split()\n    (a, b, k) = (int(a), int(b), int(k))\n    a1 = list(map(int, input().split()))\n    b1 = list(map(int, input().split()))\n    boy = {}\n    girl = {}\n    ans = 0\n    for i in a1:\n        if i in boy:\n            boy[i] += 1\n        else:\n            boy[i] = 1\n    for i in b1:\n        if i in girl:\n            girl[i] += 1\n        else:\n            girl[i] = 1\n    for i in range(k):\n        ans += k - 1 - (boy[a1[i]] - 1) - (girl[b1[i]] - 1)\n    print(ans // 2)", "t = int(input())\nfor t in range(t):\n    (a, b, k) = input().split(' ')\n    a = int(a)\n    b = int(b)\n    k = int(k)\n    aux_boys = [int(x) for x in input().split(' ')]\n    aux_girls = [int(x) for x in input().split(' ')]\n    boys = [0] * a\n    girls = [0] * b\n    sol = 0\n    for i in range(k):\n        boys[aux_boys[i] - 1] += 1\n        girls[aux_girls[i] - 1] += 1\n    for i in range(k):\n        sol += k - boys[aux_boys[i] - 1] - girls[aux_girls[i] - 1] + 1\n    print(f'{int(sol / 2)}')", "for _ in range(int(input())):\n    (a, b, k) = map(int, input().split())\n    bs = [int(x) for x in input().split()]\n    gs = [int(x) for x in input().split()]\n    b_pair_count = {}\n    g_pair_count = {}\n    for bi in bs:\n        b_pair_count[bi] = b_pair_count.get(bi, 0) + 1\n    for gi in gs:\n        g_pair_count[gi] = g_pair_count.get(gi, 0) + 1\n    total = 0\n    for i in range(k):\n        delta = k - (b_pair_count[bs[i]] + g_pair_count[gs[i]] - 1)\n        total += delta\n    print(total // 2)", "import sys\nfrom collections import Counter\n\ndef rl():\n    return sys.stdin.readline().strip()\n\ndef rl_types(types):\n    str_list = [x for x in sys.stdin.readline().strip().split(' ')]\n    return [types[i](str_list[i]) for i in range(len(str_list))]\n\ndef pr(something):\n    sys.stdout.write(str(something) + '\\n')\n\ndef pra(array):\n    sys.stdout.write(' '.join([str(x) for x in array]) + '\\n')\n\ndef solve(array):\n    return array\nNT = int(rl())\nfor ti in range(NT):\n    (a, b, k) = [int(x) for x in rl().split(' ')]\n    ainds = [int(x) for x in rl().split(' ')]\n    binds = [int(x) for x in rl().split(' ')]\n    afreq = Counter(ainds)\n    bfreq = Counter(binds)\n    total_pairs = 0\n    for i in range(k):\n        (ai, bi) = (ainds[i], binds[i])\n        total_pairs += k - afreq[ai] - bfreq[bi] + 1\n    pr(total_pairs // 2)", "for _ in range(int(input())):\n    (a, b, k) = map(int, input().split())\n    counta = [0 for _ in range(a)]\n    countb = [0 for _ in range(b)]\n    arra = list(map(int, input().split()))\n    arrb = list(map(int, input().split()))\n    for x in range(k):\n        counta[arra[x] - 1] += 1\n    for y in range(k):\n        countb[arrb[y] - 1] += 1\n    count = k * (k - 1)\n    for x in counta:\n        count -= x * (x - 1)\n    for y in countb:\n        count -= y * (y - 1)\n    print(count // 2)", "def main():\n    (a, b, k) = map(int, input().split(' '))\n    m1 = dict()\n    m2 = dict()\n    boys = input().split(' ')\n    girls = input().split(' ')\n    for i in range(k):\n        boys[i] = int(boys[i])\n        girls[i] = int(girls[i])\n        if boys[i] in m1:\n            m1[boys[i]] += 1\n        else:\n            m1[boys[i]] = 1\n        if girls[i] in m2:\n            m2[girls[i]] += 1\n        else:\n            m2[girls[i]] = 1\n    ans = 0\n    for i in range(k):\n        cnt = k - m1[boys[i]] - m2[girls[i]] + 1\n        ans += cnt\n    ans = ans / 2\n    ans = int(ans)\n    print(ans)\nt = int(input())\nfor i in range(t):\n    main()", "for _ in range(int(input())):\n    (a, b, k) = list(map(int, input().split()))\n    boy = list(map(int, input().split()))\n    girl = list(map(int, input().split()))\n    bb = [0] * (a + 1)\n    gg = [0] * (b + 1)\n    s = 0\n    for i in range(1, k):\n        bb[boy[i - 1]] += 1\n        gg[girl[i - 1]] += 1\n        s += i - bb[boy[i]] - gg[girl[i]]\n    print(s)", "for _ in range(int(input())):\n    (a, b, k) = list(map(int, input().split()))\n    boy = list(map(int, input().split()))\n    girl = list(map(int, input().split()))\n    bb = [0] * (a + 1)\n    gg = [0] * (b + 1)\n    s = 0\n    for i in range(1, k):\n        bb[boy[i - 1]] += 1\n        gg[girl[i - 1]] += 1\n        s += i - bb[boy[i]] - gg[girl[i]]\n    print(s)", "t = int(input())\nfor _ in range(t):\n    (a, b, k) = map(int, input().split())\n    boys = list(map(int, input().split()))\n    girls = list(map(int, input().split()))\n    degree_boys = [0] * (a + 1)\n    degree_girls = [0] * (b + 1)\n    for i in boys:\n        degree_boys[i] += 1\n    for i in girls:\n        degree_girls[i] += 1\n    total = 0\n    for i in range(k):\n        total += k - 1 - degree_boys[boys[i]] - degree_girls[girls[i]] + 2\n    print(total // 2)", "for _ in range(int(input())):\n    (a, b, k) = input().split()\n    (a, b, k) = (int(a), int(b), int(k))\n    a1 = list(map(int, input().split()))\n    b1 = list(map(int, input().split()))\n    boy = {}\n    girl = {}\n    ans = 0\n    for i in a1:\n        if i in boy:\n            boy[i] += 1\n        else:\n            boy[i] = 1\n    for i in b1:\n        if i in girl:\n            girl[i] += 1\n        else:\n            girl[i] = 1\n    for i in range(k):\n        ans += k - 1 - (boy[a1[i]] - 1) - (girl[b1[i]] - 1)\n    print(ans // 2)", "def main(b, g, k, X, Y):\n    B = [0 for i in range(b + 1)]\n    G = [0 for i in range(g + 1)]\n    for i in range(k):\n        B[X[i]] += 1\n    for i in range(k):\n        G[Y[i]] += 1\n    res = 0\n    for i in range(k):\n        res += k - 1 - (B[X[i]] - 1) - (G[Y[i]] - 1)\n    return int(res / 2)\nm = int(input())\nfor _ in range(m):\n    (b, g, k) = map(int, input().split())\n    X = list(map(int, input().strip().split()))\n    Y = list(map(int, input().strip().split()))\n    print(main(b, g, k, X, Y))", "from collections import Counter\nfor _ in range(int(input())):\n    (a, b, k) = map(int, input().split())\n    a1 = list(map(int, input().split()))\n    b1 = list(map(int, input().split()))\n    ac = Counter(a1)\n    bc = Counter(b1)\n    ans = 0\n    for i in range(k):\n        ans += k - ac[a1[i]] - bc[b1[i]] + 1\n    print(ans // 2)", "def solve(boy, girl, k, a, b):\n    count = 0\n    degBoy = [0 for i in range(a)]\n    degGirl = [0 for i in range(b)]\n    for x in boy:\n        degBoy[x - 1] += 1\n    for x in girl:\n        degGirl[x - 1] += 1\n    for i in range(k):\n        temp = k - degBoy[boy[i] - 1] - degGirl[girl[i] - 1] + 1\n        count += temp\n    return count // 2\nt = int(input())\nfor _ in range(t):\n    (a, b, k) = map(int, input().split())\n    boy = list(map(int, input().split()))\n    girl = list(map(int, input().split()))\n    print(solve(boy, girl, k, a, b))", "from collections import Counter\nfor _ in range(int(input())):\n    (a, b, k) = list(map(int, input().split()))\n    boys = list(map(int, input().split()))\n    girls = list(map(int, input().split()))\n    c_b = Counter(boys)\n    c_g = Counter(girls)\n    res = 0\n    for (x, y) in zip(boys, girls):\n        res += k - c_b[x] - c_g[y] + 1\n    print(res // 2)", "from collections import defaultdict, deque, Counter\nfor _ in range(int(input())):\n    (A, B, k) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    ac = Counter(a)\n    bc = Counter(b)\n    sm = 0\n    for i in range(k):\n        sm += k - ac[a[i]] - bc[b[i]] + 1\n    print(sm // 2)", "def cut(lst1, lst2):\n    d1 = {}\n    d2 = {}\n    for i in lst1:\n        try:\n            d1[i] += 1\n        except:\n            d1[i] = 1\n    for i in lst2:\n        try:\n            d2[i] += 1\n        except:\n            d2[i] = 1\n    s = 0\n    for i in range(len(lst1)):\n        a = lst1[i]\n        b = lst2[i]\n        s += len(lst1) - d1[a] - d2[b] + 1\n    print(s // 2)\nt = int(input())\nfor i in range(t):\n    input().split()\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    cut(l1, l2)", "from typing import List\nfrom collections import defaultdict\n\ndef count_pairs(boys: List[int], girls: List[int], candidates: int) -> int:\n    (degrees, counter) = (defaultdict(int), 0)\n    for (node_a, node_b) in zip(boys, girls):\n        degrees[node_a + 'B'] += 1\n        degrees[node_b + 'G'] += 1\n    for (node_a, node_b) in zip(boys, girls):\n        counter += candidates - (degrees[node_a + 'B'] + degrees[node_b + 'G'] - 1)\n    return counter // 2\n\ndef read_input(filename: str=None) -> None:\n    from sys import stdin\n    stdin = open(filename) if filename else stdin\n    cases = int(stdin.readline())\n    while cases:\n        cases = cases - 1\n        (_, _, candidates) = tuple(map(int, stdin.readline().split()))\n        boys = stdin.readline().split()\n        girls = stdin.readline().split()\n        print(count_pairs(boys, girls, candidates))\n\ndef main():\n    read_input()\nmain()", "for _ in range(int(input())):\n    (B, G, K) = [int(x) for x in input().split()]\n    Boys = [int(x) for x in input().split()]\n    Girl = [int(x) for x in input().split()]\n    BC = [0] * B\n    GC = [0] * G\n    for i in Boys:\n        BC[i - 1] += 1\n    for i in Girl:\n        GC[i - 1] += 1\n    cnt = lambda n: n * (n - 1) // 2\n    answer = cnt(K)\n    for i in BC:\n        answer -= cnt(i)\n    for i in GC:\n        answer -= cnt(i)\n    print(answer)", "import sys\nN = int(200000.0 + 5)\nsys.setrecursionlimit(N)\n\ndef charming():\n    (a, b, k) = map(int, input().split())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    pair = list(zip(arr1, arr2))\n    cnt_boy = [0] * (a + 1)\n    cnt_girl = [0] * (b + 1)\n    d = dict()\n    for (i, j) in pair:\n        if (i, j) not in d:\n            d[i, j] = 1\n        else:\n            d[i, j] += 1\n        cnt_boy[i] += 1\n        cnt_girl[j] += 1\n    res = 0\n    for (i, j) in pair:\n        res += k - cnt_boy[i] - cnt_girl[j]\n        if (i, j) in d:\n            res += d[i, j]\n    print(res // 2)\nfor t in range(int(input())):\n    charming()", "from collections import *\nR = lambda : map(int, input().split())\n(t,) = R()\nf = lambda c: sum((x * x for x in Counter(c).values()))\nfor _ in [0] * t:\n    (*_, k) = R()\n    a = (*R(),)\n    b = (*R(),)\n    print(k * k - f(a) - f(b) + f(zip(a, b)) >> 1)", "for _ in range(int(input())):\n    (a, b, k) = map(int, input().split())\n    cntb = [0] * (a + 1)\n    cntg = [0] * (b + 1)\n    for i in map(int, input().split()):\n        cntb[i] += 1\n    for j in map(int, input().split()):\n        cntg[j] += 1\n    ans = 0\n    s = sum(cntb)\n    for i in range(1, a + 1):\n        ans += cntb[i] * (s - cntb[i])\n    ans //= 2\n    for i in range(1, b + 1):\n        ans -= cntg[i] * (cntg[i] - 1) // 2\n    print(ans)", "from math import factorial\nfor _ in range(int(input())):\n    (a, b, k) = map(int, input().split())\n    boys = list(map(int, input().split()))\n    girls = list(map(int, input().split()))\n    boys_dict = dict()\n    girls_dict = dict()\n    for i in boys:\n        boys_dict[i] = boys_dict.get(i, 0) + 1\n    for i in girls:\n        girls_dict[i] = girls_dict.get(i, 0) + 1\n    res = 0\n    for (i, j) in zip(boys, girls):\n        res += k - boys_dict[i] - girls_dict[j] + 1\n    print(res // 2)", "import math as mt\nfor _ in range(int(input())):\n    (a, b, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    m = list(map(int, input().split()))\n    graphBoys = {}\n    graphGirls = {}\n    for i in l:\n        if graphBoys.get(i):\n            graphBoys[i] += 1\n        else:\n            graphBoys[i] = 1\n    for i in m:\n        if graphGirls.get(i):\n            graphGirls[i] += 1\n        else:\n            graphGirls[i] = 1\n    totality = sum(graphBoys.values())\n    cost = 0\n    for i in range(k):\n        thisSum = totality - graphBoys[l[i]]\n        thisSum = thisSum - (graphGirls[m[i]] - 1)\n        cost += thisSum\n    print(mt.ceil(cost / 2))", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    b = list(map(int, input().split()))\n    g = list(map(int, input().split()))\n    bb = [0] * (n + 1)\n    gg = [0] * (m + 1)\n    for i in range(k):\n        bb[b[i]] += 1\n        gg[g[i]] += 1\n    ans = 0\n    for i in range(k):\n        ans += k - bb[b[i]] - gg[g[i]] + 1\n    print(int(ans / 2))", "t = int(input())\nfor i in range(t):\n    (a, b, k) = map(int, input().split())\n    boy = list(map(int, input().split()))\n    girl = list(map(int, input().split()))\n    col = [0] * (b + 1)\n    row = [0] * (a + 1)\n    for j in range(k):\n        col[girl[j]] += 1\n        row[boy[j]] += 1\n    sum = 0\n    for m in range(k):\n        sum += k - row[boy[m]] - col[girl[m]] + 1\n    print(sum // 2)", "tc = int(input())\nfor _ in range(tc):\n    (a, b, k) = list(map(int, input().split()))\n    ak = list(map(int, input().split()))\n    bk = list(map(int, input().split()))\n    p = []\n    for i in zip(ak, bk):\n        p.append(i)\n    x = {}\n    y = {}\n    for i in p:\n        if i[0] in x:\n            x[i[0]] += 1\n        else:\n            x[i[0]] = 1\n        if i[1] in y:\n            y[i[1]] += 1\n        else:\n            y[i[1]] = 1\n    s = 0\n    for i in p:\n        s += k - (x[i[0]] + y[i[1]] - 1)\n    print(s // 2)", "t = int(input())\nfor _ in range(t):\n    (a, b, k) = map(int, input().split())\n    ad = {}\n    bd = {}\n    p = list(map(int, input().split()))\n    q = list(map(int, input().split()))\n    ans = k * (k - 1) // 2\n    for el in p:\n        if el in ad:\n            ad[el] += 1\n        else:\n            ad[el] = 1\n    for el in q:\n        if el in bd:\n            bd[el] += 1\n        else:\n            bd[el] = 1\n    s1 = 0\n    s2 = 0\n    for k in ad:\n        s1 += ad[k] * (ad[k] - 1) // 2\n    for k in bd:\n        s2 += bd[k] * (bd[k] - 1) // 2\n    print(max(0, ans - s1 - s2))", "def main():\n    t = int(input())\n    while t > 0:\n        t -= 1\n        (a, b, k) = map(int, input().split())\n        boys = list(map(int, input().split()))\n        girls = list(map(int, input().split()))\n        Di = {}\n        for i in boys:\n            Di[i] = Di.get(i, 0) + 1\n        gDi = {}\n        for g in girls:\n            gDi[g] = gDi.get(g, 0) + 1\n        pairs = [(boys[i], girls[i]) for i in range(k)]\n        count = 0\n        for i in pairs:\n            x = k - (Di[i[0]] + gDi[i[1]] - 1)\n            count += x\n        print(count // 2)\nmain()"]