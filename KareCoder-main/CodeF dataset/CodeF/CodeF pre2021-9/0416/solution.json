["t = int(input())\nres = ''\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    max_l = max(a)\n    second_l = n - max_l\n    k = 0\n    sub_res = ''\n    if max_l * second_l != 0:\n        left = set(a[:max_l])\n        right = set(a[max_l:])\n        if len(left) == max_l and max(left) == max_l and (max(right) == second_l) and (len(right) == second_l):\n            k = 1\n            sub_res = str(max_l) + ' ' + str(second_l) + '\\n'\n        left = set(a[:second_l])\n        right = set(a[second_l:])\n        if max_l != second_l and len(right) == max_l and (len(left) == second_l) and (max(left) == second_l) and (max(right) == max_l):\n            k += 1\n            sub_res += str(second_l) + ' ' + str(max_l) + '\\n'\n    res += str(k) + '\\n' + sub_res\nprint(res)", "def search(p1, p2, lp1, lp2):\n    used_1 = [True] + [False] * lp1\n    for ele in p1:\n        if ele > lp1:\n            return False\n        elif used_1[ele] == False:\n            used_1[ele] = True\n        else:\n            return False\n    used_2 = [True] + [False] * lp2\n    for ele in p2:\n        if ele > lp2:\n            return False\n        elif used_2[ele] == False:\n            used_2[ele] = True\n        else:\n            return False\n    return True\n\ndef solve(ans1, ans2):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    ma = max(a)\n    count = 0\n    p1 = a[0:ma:1]\n    p2 = a[ma:]\n    stm1 = search(p1, p2, ma, n - ma)\n    if stm1:\n        count += 1\n        ans2.append([ma, n - ma])\n    if ma == n - ma:\n        ans1.append(count)\n        return\n    p1 = a[0:n - ma:1]\n    p2 = a[n - ma:]\n    stm2 = search(p1, p2, n - ma, ma)\n    if stm2:\n        count += 1\n        ans2.append([n - ma, ma])\n    ans1.append(count)\n    return\nn = int(input())\nans1 = []\nans2 = []\nfor i in range(n):\n    solve(ans1, ans2)\nfor ele in ans1:\n    print(ele)\n    for i in range(ele):\n        print(*ans2[0])\n        ans2.pop(0)", "from sys import stdin\ninput = stdin.readline\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    A = [int(j) for j in input().strip().split()]\n    maxi = max(A)\n    x = n - maxi\n    a = maxi * (maxi + 1) // 2\n    b = x * (x + 1) // 2\n    if sum(A) != a + b or maxi >= n:\n        print(0)\n        continue\n    pk = []\n    if sum(set(A[:x])) == b and sum(set(A[x:])) == a:\n        pk.append((x, maxi))\n    if x != maxi and sum(set(A[:maxi])) == a and (sum(set(A[maxi:])) == b):\n        pk.append((maxi, x))\n    print(len(pk))\n    for j in pk:\n        print(j[0], j[1])", "from sys import stdin, stdout\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    arr = list(map(int, stdin.readline().split()))\n    a = len(set(arr))\n    if a == n:\n        print(2)\n        print(n, 0)\n        print(0, n)\n    else:\n        ans = []\n        c = 0\n        for t in range(2):\n            if set(arr[:a]) == set(range(1, a + 1)) and set(arr[a:]) == set(range(1, n - a + 1)):\n                c += 1\n                ans.extend([a, n - a])\n            if a == n - a:\n                break\n            a = n - a\n        print(c)\n        for t in range(0, len(ans), 2):\n            print(ans[t], ans[t + 1])", "from collections import Counter\nfrom sys import stdin, stdout\nfor t in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    m1 = max(a)\n    m2 = n - m1\n    f1 = f2 = f3 = f4 = 1\n    s1 = set(a[:m1])\n    s2 = set(a[m1:])\n    s3 = set(a[:m2])\n    s4 = set(a[m2:])\n    for v in range(1, m1 + 1):\n        if f1 and v not in s1:\n            f1 = 0\n        if f4 and v not in s4:\n            f4 = 0\n    for v in range(1, m2 + 1):\n        if f2 and v not in s2:\n            f2 = 0\n        if f3 and v not in s3:\n            f3 = 0\n    if f1 and f2 and f3 and f4:\n        if m1 == m2:\n            print(1)\n            print(m1, m2)\n        else:\n            print(2)\n            print(m1, m2)\n            print(m2, m1)\n    elif f1 and f2:\n        print(1)\n        print(m1, m2)\n    elif f3 and f4:\n        print(1)\n        print(m2, m1)\n    else:\n        print(0)", "def dreammoonLikesPermutations(n, array):\n    d = {}\n    for x in array:\n        if x in d:\n            d[x] += 1\n            if d[x] >= 3:\n                return (0, [])\n        else:\n            d[x] = 1\n    for x in range(1, len(d)):\n        if not (x in d and x + 1 in d):\n            return (0, [])\n        if d[x + 1] > d[x]:\n            return (0, [])\n    s = set()\n    for x in range(1, len(d) + 1):\n        if d[x] == 2:\n            s.add(x)\n        else:\n            break\n    if not s:\n        return (0, [])\n    v = set()\n    ans = []\n    for x in range(len(s)):\n        v.add(array[x])\n    if v == s:\n        ans.append([x + 1, n - x - 1])\n        if x + 1 == n - x - 1:\n            return (len(ans), ans)\n    v = set()\n    for x in range(n - len(s), n):\n        v.add(array[x])\n    if v == s:\n        ans.append([n - len(s), len(s)])\n    return (len(ans), ans)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (a, ans) = dreammoonLikesPermutations(n, l)\n    if a == 0:\n        print(a)\n    else:\n        print(a)\n        for x in ans:\n            print(x[0], x[1])", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = max(l)\n    s = set(l)\n    if m == len(s):\n        a1 = l[:n - m]\n        a2 = l[n - m:]\n        a3 = l[:m]\n        a4 = l[m:]\n        s1 = set(a1)\n        s2 = set(a2)\n        s3 = set(a3)\n        s4 = set(a4)\n        f1 = False\n        f2 = False\n        if len(s1) == max(a1) and len(s2) == max(a2) and (max(a1) == n - m) and (max(a2) == m):\n            f1 = True\n        if len(s3) == max(a3) and len(s4) == max(a4) and (max(a3) == m) and (max(a4) == n - m):\n            f2 = True\n        if f1 == True and f2 == True:\n            if n - m != m:\n                print(2)\n                print(n - m, m)\n                print(m, n - m)\n            else:\n                print(1)\n                print(n - m, m)\n        elif f1 == True:\n            print(1)\n            print(n - m, m)\n        elif f2 == True:\n            print(1)\n            print(m, n - m)\n        else:\n            print(0)\n    else:\n        print(0)", "testCases = int(input())\nfor _ in range(testCases):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mx = max(a)\n    mx_ = n - mx\n    range1 = set(range(1, mx + 1))\n    range2 = set(range(1, mx_ + 1))\n    d = set()\n    if set(a[:mx]) == range1 and set(a[mx:]) == range2:\n        d.add(mx)\n    if set(a[:mx_]) == range2 and set(a[mx_:]) == range1:\n        d.add(mx_)\n    print(len(d))\n    for x in d:\n        print(x, n - x)", "def check(sublist, length):\n    if len(set(sublist)) != length:\n        return False\n    if max(sublist) > length:\n        return False\n    return True\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    result = ''\n    for i in {max(a), n - max(a)}:\n        if check(a[:i], i):\n            if check(a[i:], n - i):\n                count += 1\n                result += f'{i} {n - i}\\n'\n    print(count)\n    if result:\n        result = result[:-1]\n        print(result)", "import sys\nimport math\n\ndef fn(n, a):\n    l2 = max(a)\n    l1 = n - l2\n    m2 = []\n    if l2 >= n:\n        print(0)\n        return 0\n    for i in range(1, l2 + 1):\n        m2.append(i)\n    m1 = []\n    for i in range(1, l1 + 1):\n        m1.append(i)\n    a1 = a[:l2]\n    a2 = a[l2:]\n    b1 = a[:l1]\n    b2 = a[l1:]\n    a1.sort()\n    a2.sort()\n    b1.sort()\n    b2.sort()\n    flag = 0\n    c = 0\n    if m2 == a1 and m1 == a2:\n        flag = 1\n        c = c + 1\n    if m1 == b1 and m2 == b2:\n        flag = 2\n        c = c + 1\n    if l1 == l2 and c == 2:\n        print(1)\n        print(l1, l2)\n        return 0\n    if c == 0:\n        print(0)\n    elif c == 2:\n        print(2)\n        print(l1, l2)\n        print(l2, l1)\n        return 0\n    elif c == 1:\n        print(1)\n        if flag == 1:\n            print(l2, l1)\n        else:\n            print(l1, l2)\n        return 0\ninput = sys.stdin.read()\ndata = list(map(int, input.split()))\nt = data[0]\nl = 0\nfor i in range(t):\n    n = data[l + 1]\n    a = data[l + 2:l + 2 + n]\n    l = l + 1 + n\n    fn(n, a)", "def check(sublist, length):\n    if len(set(sublist)) != length:\n        return False\n    if max(sublist) > length:\n        return False\n    return True\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    result = ''\n    for i in {max(a), n - max(a)}:\n        if check(a[:i], i):\n            if check(a[i:], n - i):\n                count += 1\n                result += f'{i} {n - i}\\n'\n    print(count)\n    if result:\n        result = result[:-1]\n        print(result)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    f = []\n    if m >= len(a):\n        print(0)\n        continue\n    else:\n        l1 = a[:m]\n        l2 = a[m:]\n        if max(l1) == m and len(l1) == len(set(l1)):\n            if max(l2) == n - m and len(l2) == len(set(l2)):\n                f.append([m, n - m])\n        l2 = a[:n - m]\n        l1 = a[n - m:]\n        if max(l1) == m and len(l1) == len(set(l1)):\n            if max(l2) == n - m and len(l2) == len(set(l2)):\n                f.append([n - m, m])\n        if len(f) == 2:\n            if f[0] != f[1]:\n                print(2)\n                print(*f[0])\n                print(*f[1])\n            else:\n                print(1)\n                print(*f[0])\n        else:\n            print(len(f))\n            for i in f:\n                print(*i)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    last = n - m\n    li = []\n    if m >= n:\n        print(0)\n    else:\n        left = set(a[:m])\n        right = set(a[m:])\n        if len(left) == m and max(left) == m and (len(right) == last) and (max(right) == last):\n            li.append([m, last])\n        left = set(a[:last])\n        right = set(a[last:])\n        if m != last and len(left) == last and (max(left) == last) and (len(right) == m) and (max(right) == m):\n            li.append([last, m])\n        if len(li) == 2:\n            print(2)\n            print(*li[0])\n            print(*li[1])\n        elif len(li) == 1:\n            print(1)\n            print(*li[0])\n        else:\n            print(0)", "I = input\npr = print\n\ndef main():\n    for _ in range(int(I())):\n        n = int(I())\n        ar = list(map(int, I().split()))\n        i = max(ar)\n        d = []\n        for c in range(2):\n            if set(ar[:i]) == set(range(1, i + 1)) and set(ar[i:]) == set(range(1, n - i + 1)):\n                d.append(i)\n            i = n - i\n        d = set(d)\n        pr(len(d))\n        for x in d:\n            pr(x, n - x)\nmain()", "I = input\npr = print\n\ndef main():\n    for _ in range(int(I())):\n        n = int(I())\n        ar = list(map(int, I().split()))\n        i = max(ar)\n        d = []\n        for c in range(2):\n            if set(ar[:i]) == set(range(1, i + 1)) and set(ar[i:]) == set(range(1, n - i + 1)):\n                d.append(i)\n            i = n - i\n        d = set(d)\n        pr(len(d))\n        for x in d:\n            pr(x, n - x)\nmain()", "T = int(input())\nn = [0] * T\nns = [0] * T\nfor t in range(T):\n    n[t] = int(input())\n    ns[t] = [int(i) for i in input().split(' ')]\n\ndef check(l):\n    if len(l) == len(set(l)) and min(l) == 1 and (max(l) == len(l)):\n        return True\n    return False\nfor t in range(T):\n    ans = []\n    n1 = len(set(ns[t]))\n    if check(ns[t][:n1]) and check(ns[t][n1:]):\n        ans.append((n1, n[t] - n1))\n    if check(ns[t][:n[t] - n1]) and check(ns[t][n[t] - n1:]):\n        ans.append((n[t] - n1, n1))\n    ans = set(ans)\n    print(len(ans))\n    for i in ans:\n        print(i[0], i[1])", "I = input\npr = print\n\ndef main():\n    for _ in range(int(I())):\n        n = int(I())\n        ar = list(map(int, I().split()))\n        i = max(ar)\n        d = []\n        for c in range(2):\n            if set(ar[:i]) == set(range(1, i + 1)) and set(ar[i:]) == set(range(1, n - i + 1)):\n                d.append(i)\n            i = n - i\n        d = set(d)\n        pr(len(d))\n        for x in d:\n            pr(x, n - x)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    mx = max(ar)\n    d = []\n    for c in range(2):\n        if set(ar[:mx]) == set(range(1, mx + 1)) and set(ar[mx:]) == set(range(1, n - mx + 1)):\n            d.append(mx)\n        mx = n - mx\n    d = set(d)\n    print(len(d))\n    for x in d:\n        print(x, n - x)", "for _ in [0] * int(input()):\n    a = int(input())\n    b = list(map(int, input().split()))\n    z = max(b)\n    d = []\n    for i in range(2):\n        if set(b[:z]) == set(range(1, z + 1)) and set(b[z:]) == set(range(1, a - z + 1)):\n            d.append(z)\n        z = a - z\n    d = set(d)\n    print(len(d))\n    for i in d:\n        print(i, a - i)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    f = 0\n    ans = []\n    m = max(A)\n    if m >= n:\n        print(0)\n    else:\n        p1a = A[:m]\n        p2a = A[m:]\n        p1b = A[:n - m]\n        p2b = A[n - m:]\n        if len(set(p1a)) == m == max(p1a) and len(set(p2a)) == n - m == max(p2a):\n            ans.append(m)\n        if len(set(p1b)) == n - m == max(p1b) and len(set(p2b)) == m == max(p2b) and (m != n - m):\n            ans.append(n - m)\n        print(len(ans))\n        for a in ans:\n            print(a, n - a)", "from collections import defaultdict\n\ndef check(arr):\n    arr.sort()\n    value = [i + 1 for i in range(len(arr))]\n    if arr == value:\n        return True\n    return False\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    high = max(l)\n    low = len(l) - high\n    ans = []\n    if check(l[:low]) == True and check(l[low:]) == True:\n        ans.append([low, high])\n    if low != high and check(l[:high]) == True and (check(l[high:]) == True):\n        ans.append([high, low])\n    print(len(ans))\n    for i in ans:\n        print(*i)", "import sys\nimport math\nget_string = lambda : sys.stdin.readline().strip()\nget_int_list = lambda : list(map(int, sys.stdin.readline().strip().split()))\nget_int = lambda : int(sys.stdin.readline())\nfor _ in range(get_int()):\n    n = get_int()\n    lst = get_int_list()\n    n1 = len(set(lst))\n    n2 = n - n1\n    ref1 = list(range(1, n1 + 1))\n    ref2 = list(range(1, n2 + 1))\n    result = []\n    flag = True\n    if sorted(lst[:n1]) == ref1 and sorted(lst[n1:]) == ref2:\n        result.append([n1, n2])\n        if n1 == n2:\n            flag = False\n    if flag and sorted(lst[:n2]) == ref2 and (sorted(lst[n2:]) == ref1):\n        result.append([n2, n1])\n    print(len(result))\n    for row in result:\n        print(row[0], row[1])", "tc = int(input())\nfor _ in range(int(tc)):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mx = max(a)\n    d = []\n    if set(a[:mx]) == set(range(1, mx + 1)) and set(a[mx:n]) == set(range(1, n - mx + 1)):\n        d.append(mx)\n    if set(a[:n - mx]) == set(range(1, n - mx + 1)) and set(a[n - mx:n]) == set(range(1, mx + 1)):\n        d.append(n - mx)\n    d = set(d)\n    print(len(d))\n    for i in d:\n        print(i, n - i)", "for _ in [0] * int(input()):\n    a = int(input())\n    b = list(map(int, input().split()))\n    z = max(b)\n    d = []\n    for i in range(2):\n        if set(b[:z]) == set(range(1, z + 1)) and set(b[z:]) == set(range(1, a - z + 1)):\n            d.append(z)\n        z = a - z\n    d = set(d)\n    print(len(d))\n    for i in d:\n        print(i, a - i)", "I = input\npr = print\n\ndef main():\n    for _ in range(int(I())):\n        n = int(I())\n        ar = list(map(int, I().split()))\n        i = max(ar)\n        d = []\n        for c in range(2):\n            if set(ar[:i]) == set(range(1, i + 1)) and set(ar[i:]) == set(range(1, n - i + 1)):\n                d.append(i)\n            i = n - i\n        d = set(d)\n        pr(len(d))\n        for x in d:\n            pr(x, n - x)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    l1 = max(arr)\n    ans = []\n    for j in range(2):\n        if set(arr[:l1]) == set(range(1, l1 + 1)) and set(arr[l1:]) == set(range(1, n - l1 + 1)):\n            ans.append(l1)\n        l1 = n - l1\n    ans = set(ans)\n    print(len(ans))\n    for i in ans:\n        print(i, n - i)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    ans = set()\n    mx = max(a)\n    for x in range(2):\n        if set(a[:mx]) == set(range(1, mx + 1)) and set(a[mx:]) == set(range(1, n - mx + 1)):\n            ans.add(mx)\n        mx = n - mx\n    print(len(ans))\n    for x in ans:\n        print(x, n - x)", "def check(a1, a2):\n    (o1, o2) = (True, True)\n    for i in range(len(a1)):\n        if a1[i] != i + 1:\n            o1 = False\n    for i in range(len(a2)):\n        if a2[i] != i + 1:\n            o2 = False\n    if o1 and o2:\n        return True\n    return False\nfor _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    div = n - max(A)\n    m = max(A)\n    b1 = A.copy()\n    b11 = sorted(b1[:m])\n    b12 = sorted(b1[m:])\n    (o1, o2) = (False, False)\n    if check(b11, b12):\n        o1 = True\n    b2 = A.copy()\n    b21 = sorted(b2[:div])\n    b22 = sorted(b2[div:])\n    if check(b21, b22):\n        o2 = True\n    if o1 and o2:\n        if div != m:\n            print(2)\n            print(m, div)\n            print(div, m)\n        else:\n            print(1)\n            print(m, div)\n    elif o1:\n        print(1)\n        print(m, div)\n    elif o2:\n        print(1)\n        print(div, m)\n    else:\n        print(0)", "t = int(input())\nfor i in range(t):\n    good = []\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    s = set(a[0:m])\n    sc = set(a[m:n])\n    if len(s) == m and max(sc) == n - m and (len(sc) == n - m):\n        good.append(str(m) + ' ' + str(n - m))\n    p = set(a[-m:n])\n    pc = set(a[0:-m])\n    if len(p) == m and max(pc) == n - m and (len(pc) == n - m):\n        good.append(str(n - m) + ' ' + str(m))\n    if len(good) == 1:\n        print(1)\n        print(good[0])\n    elif len(good) == 2 and m * 2 != n:\n        print(2)\n        print(good[0])\n        print(good[1])\n    elif len(good) == 2 and m * 2 == n:\n        print(1)\n        print(good[0])\n    else:\n        print(0)", "for i in range(int(input())):\n    n = int(input())\n    lic = list(map(int, input().split()))\n    out = []\n    ans = [i for i in range(1, n + 1)]\n    ma = max(lic)\n    (lic1, lic2, lic3, lic4) = (lic[:ma], lic[ma:], lic[-ma:], lic[:-ma])\n    if sorted(lic1) == ans[:ma] and sorted(lic2) == ans[:n - ma]:\n        out.append(len(lic1))\n    if sorted(lic3) == ans[:ma] and sorted(lic4) == ans[:n - ma] and (len(lic4) not in out):\n        out.append(len(lic4))\n    print(len(out))\n    for i in out:\n        print(i, n - i)", "def naive():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        val = 0\n        case = []\n        for l1 in range(1, n):\n            string_1 = sorted(a[0:l1])\n            string_2 = sorted(a[l1:])\n            if [x for x in range(1, l1 + 1)] == string_1:\n                if string_2 == [x for x in range(1, n - l1 + 1)]:\n                    val += 1\n                    case.append((l1, n - l1))\n        print(val)\n        for c in case:\n            print(c[0], c[1])\n\ndef fast():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        m = max(a)\n        if n == m:\n            print(0)\n        else:\n            l1 = [m, n - m]\n            case = set()\n            for i in l1:\n                if sorted(a[:i]) == [x for x in range(1, i + 1)]:\n                    if sorted(a[i:]) == [x for x in range(1, n - i + 1)]:\n                        case.add((i, n - i))\n            print(len(case))\n            for c in case:\n                print(c[0], c[1])\nfast()", "for t in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    mx = max(ar)\n    d = []\n    for c in range(2):\n        if set(ar[:mx]) == set(range(1, mx + 1)) and set(ar[mx:]) == set(range(1, n - mx + 1)):\n            d.append(mx)\n        mx = n - mx\n    d = set(d)\n    print(len(d))\n    for x in d:\n        print(x, n - x)", "t = int(int(input()))\nfor x in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ma = max(a)\n    List = []\n    if set(range(1, ma + 1)) == set(a[:ma]) and set(range(1, n - ma + 1)) == set(a[ma:]):\n        List.append([ma, n - ma])\n    if ma != n - ma:\n        if set(range(1, n - ma + 1)) == set(a[:n - ma]) and set(range(1, ma + 1)) == set(a[n - ma:]):\n            List.append([n - ma, ma])\n    print(len(List))\n    if len(List):\n        for item in List:\n            print(*item)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    x = 0\n    k = 0\n    l1 = max(a)\n    l2 = n - l1\n    if l1 == n:\n        print(0)\n    else:\n        p = sorted(a[:l1])\n        q = sorted(a[l1:])\n        r = sorted(a[:l2])\n        s = sorted(a[l2:])\n        A = [i for i in range(1, l1 + 1)]\n        B = [i for i in range(1, l2 + 1)]\n        if p == A and q == B:\n            x += 1\n            k = l1\n        if r == B and s == A:\n            x += 1\n            k = l2\n        if l1 == l2 and x > 0:\n            x = 1\n        print(x)\n        if x == 1:\n            print(k, n - k)\n        elif x == 2:\n            print(l1, l2)\n            print(l2, l1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    maxi = max(arr)\n    li = []\n    for k in range(2):\n        if set(arr[:maxi]) == set(range(1, maxi + 1)) and set(arr[maxi:]) == set(range(1, n - maxi + 1)):\n            li.append(maxi)\n        maxi = n - maxi\n    li = set(li)\n    print(len(li))\n    for i in li:\n        print(i, n - i)", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    p = max(list1)\n    p1 = set(list1[:p])\n    ans = list()\n    if p1 == set(range(1, p + 1)):\n        q1 = set(list1[p:])\n        if q1 == set(range(1, n - p + 1)):\n            ans.append(p)\n    p2 = set(list1[:n - p])\n    if p2 == set(range(1, n - p + 1)):\n        q2 = set(list1[n - p:])\n        if q2 == set(range(1, p + 1)):\n            ans.append(n - p)\n    ans = set(ans)\n    print(len(ans))\n    for i in ans:\n        print(i, n - i)\n    t -= 1", "T = int(input())\n\ndef check_permute(x):\n    w = len(x)\n    return set(x) == set([i for i in range(1, w + 1)])\nfor t in range(T):\n    n = int(input())\n    A = [int(i) for i in input().split()]\n    max_A = max(A)\n    ans_count = 0\n    case1 = False\n    case2 = False\n    if check_permute(A[:max_A]) and check_permute(A[max_A:]):\n        case1 = True\n        ans_count += 1\n    if check_permute(A[:n - max_A]) and check_permute(A[n - max_A:]):\n        case2 = True\n        ans_count += 1\n    if case1 and case2 and ((max_A, n - max_A) == (n - max_A, max_A)):\n        print(1)\n        print(max_A, n - max_A)\n    else:\n        print(ans_count)\n        if case1:\n            print(max_A, n - max_A)\n        if case2:\n            print(n - max_A, max_A)", "def main_function():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        A = list(map(int, input().split(' ')))\n        l1 = max(A)\n        l2 = n - l1\n        k = 0\n        ans = []\n        if l1 == l2:\n            if l1 == len(set(A[:n // 2])) == len(set(A[n // 2:])) and sum(list(range(l1 + 1))) == sum(set(A[:n // 2])) == sum(set(A[n // 2:])):\n                print(1)\n                print(l1, l1)\n            else:\n                print(0)\n        else:\n            if l1 == len(set(A[:l1])) and l2 == len(set(A[l1:])) and (sum(list(range(l1 + 1))) == sum(set(A[:l1]))) and (sum(list(range(l2 + 1))) == sum(set(A[l1:]))):\n                k += 1\n                ans.append(l1)\n                ans.append(l2)\n            if l2 == len(set(A[:l2])) and l1 == len(set(A[l2:])) and (sum(list(range(l2 + 1))) == sum(set(A[:l2]))) and (sum(list(range(l1 + 1))) == sum(set(A[l2:]))):\n                k += 1\n                ans.append(l2)\n                ans.append(l1)\n            print(k)\n            for j in range(0, len(ans), 2):\n                print(ans[j], ans[j + 1])\nmain_function()", "I = input\nfor _ in [0] * int(I()):\n    n = int(I())\n    a = (*map(int, I().split()),)\n    m = max(a)\n    r = [(k, n - k) for k in {m, n - m} if sorted(a[:k]) + sorted(a[k:]) == [*range(1, k + 1), *range(1, n - k + 1)]]\n    print(len(r))\n    for x in r:\n        print(*x)", "import math\nfrom collections import Counter\nL = lambda : list(map(int, input().split()))\nM = lambda : map(int, input().split())\nI = lambda : int(input())\nIN = lambda : input()\n\ndef s(a):\n    print(''.join(list(map(str, a))))\nt = I()\nfor i in range(t):\n    n = I()\n    a = L()\n    x = 0\n    k = 0\n    l1 = max(a)\n    l2 = n - l1\n    if l1 == n:\n        print(0)\n    else:\n        p = sorted(a[:l1])\n        q = sorted(a[l1:])\n        r = sorted(a[:l2])\n        s = sorted(a[l2:])\n        A = [i for i in range(1, l1 + 1)]\n        B = [i for i in range(1, l2 + 1)]\n        if p == A and q == B:\n            x += 1\n            k = l1\n        if r == B and s == A:\n            x += 1\n            k = l2\n        if l1 == l2 and x > 0:\n            x = 1\n        print(x)\n        if x == 1:\n            print(k, n - k)\n        elif x == 2:\n            print(l1, l2)\n            print(l2, l1)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    ma = max(array)\n    x = 0\n    res = []\n    if set(array[:ma]) == set(range(1, ma + 1)) and set(array[ma:]) == set(range(1, n - ma + 1)):\n        x += 1\n        res.append((ma, n - ma))\n    if ma * 2 != n:\n        if set(array[:n - ma]) == set(range(1, n - ma + 1)) and set(array[-ma:]) == set(range(1, ma + 1)):\n            x += 1\n            res.append((n - ma, ma))\n    if x == 0:\n        print(0)\n    else:\n        print(x)\n        for r in res:\n            print(*r)", "for t in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    mx = max(ar)\n    d = []\n    for c in range(2):\n        if set(ar[:mx]) == set(range(1, mx + 1)) and set(ar[mx:]) == set(range(1, n - mx + 1)):\n            d.append(mx)\n        mx = n - mx\n    d = set(d)\n    print(len(d))\n    for x in d:\n        print(x, n - x)", "for _ in range(int(input())):\n    n = int(input())\n    v = list(map(int, input().split()))\n    sup = max(v)\n    num = 0\n    res = []\n    if set(v[:sup]) == set(range(1, sup + 1)) and set(v[sup:]) == set(range(1, n - sup + 1)):\n        num += 1\n        res.append((sup, n - sup))\n    if 2 * sup != n:\n        if set(v[:n - sup]) == set(range(1, n - sup + 1)) and set(v[-sup:]) == set(range(1, sup + 1)):\n            num += 1\n            res.append((n - sup, sup))\n    if num == 0:\n        print(0)\n    else:\n        print(num)\n        for i in res:\n            print(*i)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ', n - 1)))\n    ma = int(max(a))\n    i = 0\n    logic1 = sorted(a[:ma]) == [k for k in range(1, ma + 1)] and sorted(a[ma:]) == [j for j in range(1, n - ma + 1)]\n    logic2 = sorted(a[:n - ma]) == [p for p in range(1, n - ma + 1)] and sorted(a[n - ma:]) == [q for q in range(1, ma + 1)]\n    if logic1:\n        i = i + 1\n    if ma == n - ma:\n        logic2 = False\n    if logic2:\n        i = i + 1\n    print(i)\n    if logic1:\n        print(ma, n - ma)\n    if logic2:\n        print(n - ma, ma)", "import sys\nimport math\nimport collections\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\nfor t in range(int(input())):\n    n = int(input())\n    A = get_list()\n    count = 0\n    ans = []\n    m = max(A)\n    if m >= n:\n        print(0)\n    else:\n        p1a = A[:m]\n        p2a = A[m:]\n        p1b = A[:n - m]\n        p2b = A[n - m:]\n        if len(set(p1a)) == m == max(p1a) and len(set(p2a)) == n - m == max(p2a):\n            ans.append(m)\n            count += 1\n        if len(set(p1b)) == n - m == max(p1b) and len(set(p2b)) == m == max(p2b) and (m != n - m):\n            ans.append(n - m)\n            count += 1\n        print(count)\n        for i in ans:\n            print(i, n - i)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    f = 0\n    ans = []\n    m = max(A)\n    if m >= n:\n        print(0)\n    else:\n        p1a = A[:m]\n        p2a = A[m:]\n        p1b = A[:n - m]\n        p2b = A[n - m:]\n        if len(set(p1a)) == m == max(p1a) and len(set(p2a)) == n - m == max(p2a):\n            ans.append(m)\n        if len(set(p1b)) == n - m == max(p1b) and len(set(p2b)) == m == max(p2b) and (m != n - m):\n            ans.append(n - m)\n        print(len(ans))\n        for a in ans:\n            print(a, n - a)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    ans = 0\n    l1 = max(a)\n    l2 = n - l1\n    if l1 == n:\n        print(0)\n    else:\n        p11 = sorted(a[:l1])\n        p21 = sorted(a[l1:])\n        p12 = sorted(a[:l2])\n        p22 = sorted(a[l2:])\n        p1 = [i + 1 for i in range(l1)]\n        p2 = [j + 1 for j in range(l2)]\n        k = 0\n        if p11 == p1 and p21 == p2:\n            ans += 1\n            k = l1\n        if p12 == p2 and p22 == p1:\n            ans += 1\n            k = l2\n        if l1 == l2 and ans > 0:\n            ans = 1\n        print(ans)\n        if ans == 1:\n            print(k, n - k)\n        if ans == 2:\n            print(l1, l2)\n            print(l2, l1)", "def linput():\n    return [int(i) for i in input().split()]\nq = int(input())\nfor ______ in range(q):\n    n = int(input())\n    a = linput()\n    s = []\n    m = max(a)\n    if a.count(m) < 3:\n        if sorted(a[:m]) == [i + 1 for i in range(m)]:\n            if sorted(a[m:]) == [i + 1 for i in range(n - m)]:\n                b = [m, n - m]\n                if b not in s:\n                    s.append([m, n - m])\n        if sorted(a[:n - m]) == [i + 1 for i in range(n - m)]:\n            if sorted(a[n - m:]) == [i + 1 for i in range(m)]:\n                b = [n - m, m]\n                if b not in s:\n                    s.append([n - m, m])\n    if len(s) == 0:\n        print(0)\n    else:\n        print(len(s))\n        for i in s:\n            print(*i)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    ans = 0\n    l1 = max(a)\n    l2 = n - l1\n    if l1 == n:\n        print(0)\n    else:\n        p11 = sorted(a[:l1])\n        p21 = sorted(a[l1:])\n        p12 = sorted(a[:l2])\n        p22 = sorted(a[l2:])\n        p1 = [i + 1 for i in range(l1)]\n        p2 = [j + 1 for j in range(l2)]\n        k = 0\n        if p11 == p1 and p21 == p2:\n            ans += 1\n            k = l1\n        if p12 == p2 and p22 == p1:\n            ans += 1\n            k = l2\n        if l1 == l2 and ans > 0:\n            ans = 1\n        print(ans)\n        if ans == 1:\n            print(k, n - k)\n        if ans == 2:\n            print(l1, l2)\n            print(l2, l1)", "def check(arr):\n    arr.sort()\n    for i in range(0, len(arr)):\n        if arr[i] != i + 1:\n            return False\n    return True\nfor _ in range(int(input())):\n    w = int(input())\n    data = list(map(int, input().split()))\n    indexOfMax = max(data)\n    flag1 = 0\n    flag2 = 0\n    if check(data[:indexOfMax]) and check(data[indexOfMax:]):\n        flag1 = 1\n    if check(data[:w - indexOfMax]) and check(data[w - indexOfMax:]):\n        if indexOfMax != w - indexOfMax:\n            flag2 = 1\n    print(flag2 + flag1)\n    if flag1 == 1:\n        print(indexOfMax, w - indexOfMax)\n    if flag2 == 1:\n        print(w - indexOfMax, indexOfMax)", "def isPermutation(l):\n    if len(l) == 1:\n        if l[0] == 1:\n            return True\n        else:\n            return False\n    r = list(range(1, len(l) + 1))\n    l1 = l[:]\n    l1.sort()\n    if l1 == r:\n        return True\n    else:\n        return False\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    counter = 0\n    pr = []\n    maxval = max(l)\n    l1 = l[:n - maxval]\n    l2 = l[n - maxval:]\n    if isPermutation(l1) and isPermutation(l2):\n        counter += 1\n        pr.append(n - maxval)\n    l1 = l[:maxval]\n    l2 = l[maxval:]\n    if isPermutation(l1) and isPermutation(l2) and (n - maxval != maxval):\n        counter += 1\n        pr.append(maxval)\n    print(counter)\n    for i in range(len(pr)):\n        print(pr[i], n - pr[i])", "def solve(n):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    Max = max(arr)\n    (np, ans) = (0, [])\n    l1 = sorted(arr[:Max])\n    l2 = sorted(arr[Max:])\n    if l1 == list(range(1, Max + 1)) and l2 == list(range(1, n - Max + 1)):\n        np += 1\n        ans.append((Max, n - Max))\n    l1 = sorted(arr[:n - Max])\n    l2 = sorted(arr[n - Max:])\n    if l1 == list(range(1, n - Max + 1)) and l2 == list(range(1, Max + 1)):\n        np += 1\n        ans.append((n - Max, Max))\n    print(len(set(ans)))\n    for (i, j) in list(set(ans)):\n        print(i, j)\nt = int(input())\nfor i in range(t):\n    solve(i)", "from collections import Counter\nfor _ in range(int(input())):\n    _ = input()\n    a = list(map(int, input().split()))\n    ma = max(a)\n    mai = len(a) - ma\n    ans = []\n    if set(a[:ma]) == set(range(1, ma + 1)) and set(a[ma:]) == set(range(1, mai + 1)):\n        ans.append([ma, mai])\n    if set(a[:mai]) == set(range(1, mai + 1)) and set(a[mai:]) == set(range(1, ma + 1)) and (ma != mai):\n        ans.append([mai, ma])\n    print(len(ans))\n    for i in ans:\n        print(' '.join(list(map(str, i))))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    l1 = max(a)\n    l2 = n - l1\n    if l1 == n:\n        print(0)\n    else:\n        p11 = sorted(a[:l1])\n        p21 = sorted(a[l1:])\n        p12 = sorted(a[:l2])\n        p22 = sorted(a[l2:])\n        p1 = [i + 1 for i in range(l1)]\n        p2 = [j + 1 for j in range(l2)]\n        k = 0\n        if p11 == p1 and p21 == p2:\n            ans += 1\n            k = l1\n        if p12 == p2 and p22 == p1:\n            ans += 1\n            k = l2\n        if l1 == l2 and ans > 0:\n            ans = 1\n        print(ans)\n        if ans == 1:\n            print(k, n - k)\n        if ans == 2:\n            print(l1, l2)\n            print(l2, l1)", "for t in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    mx = max(ar)\n    d = []\n    for c in range(2):\n        if set(ar[:mx]) == set(range(1, mx + 1)) and set(ar[mx:]) == set(range(1, n - mx + 1)):\n            d.append(mx)\n        mx = n - mx\n    p = set(d)\n    print(len(p))\n    for x in p:\n        print(x, n - x)", "t = int(input())\nfor i in range(t):\n    l = int(input())\n    data = list(map(int, input().split()))\n    m = max(data)\n    a = sorted(data[:m])\n    b = sorted(data[m:])\n    c = sorted(data[:l - m])\n    d = sorted(data[l - m:])\n    e = [i for i in range(1, m + 1)]\n    f = [i for i in range(1, l - m + 1)]\n    if m != l / 2:\n        if (a == e and b == f) and (c == f and d == e):\n            print(2)\n            print(m, l - m)\n            print(l - m, m)\n        elif (a == e and b == f) and (c != f or d != e):\n            print(1)\n            print(m, l - m)\n        elif (a != e or b != f) and (c == f and d == e):\n            print(1)\n            print(l - m, m)\n        else:\n            print(0)\n    elif a == e and b == f or (c == f and d == e):\n        print(1)\n        print(m, m)\n    else:\n        print(0)", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    i = max(ar)\n    d = []\n    for c in range(2):\n        if set(ar[:i]) == set(range(1, i + 1)) and set(ar[i:]) == set(range(1, n - i + 1)):\n            d.append(i)\n        i = n - i\n    d = set(d)\n    print(len(d))\n    for x in d:\n        print(x, n - x)", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    l1 = max(ar)\n    l2 = n - l1\n    se1 = set({})\n    se2 = set({})\n    for i in range(1, l1 + 1):\n        se1.add(i)\n    for j in range(1, n - l1 + 1):\n        se2.add(j)\n    k = 0\n    li = []\n    if se1 == set(ar[:l1]) and se2 == set(ar[l1:]):\n        k += 1\n        li.append([l1, l2])\n    if se1 == set(ar[-l1:]) and se2 == set(ar[:-l1]):\n        if l1 != l2:\n            k += 1\n            li.append([l2, l1])\n    print(k)\n    for z in range(k):\n        print(*li[z])", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    ans = 0\n    l1 = max(a)\n    l2 = n - l1\n    if l1 == n:\n        print(0)\n    else:\n        p11 = sorted(a[:l1])\n        p21 = sorted(a[l1:])\n        p12 = sorted(a[:l2])\n        p22 = sorted(a[l2:])\n        p1 = [i + 1 for i in range(l1)]\n        p2 = [j + 1 for j in range(l2)]\n        k = 0\n        if p11 == p1 and p21 == p2:\n            ans += 1\n            k = l1\n        if p12 == p2 and p22 == p1:\n            ans += 1\n            k = l2\n        if l1 == l2 and ans > 0:\n            ans = 1\n        print(ans)\n        if ans == 1:\n            print(k, n - k)\n        if ans == 2:\n            print(l1, l2)\n            print(l2, l1)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    k = int(input())\n    a = list(map(int, input().split()))\n    a_c = [0] * (max(a) + 1)\n    for i in range(k):\n        a_c[a[i]] += 1\n    if a_c[1] != 2:\n        print(0)\n        continue\n    flag = True\n    u = int(100000000.0)\n    for i in range(2, len(a_c)):\n        if a_c[i] == 2 and a_c[i - 1] >= a_c[i]:\n            pass\n        elif a_c[i] == 1 and a_c[i - 1] >= a_c[i]:\n            u = min(u, i)\n        else:\n            flag = False\n    if not flag:\n        print(0)\n        continue\n    elif a_c[-1] == 2:\n        if len(a_c) - 1 == len(set(a[0:len(a_c) - 1])):\n            print(1)\n            print(len(a_c) - 1, len(a_c) - 1)\n        else:\n            print(0)\n    else:\n        ans_l = []\n        if u - 1 == max(a[0:u - 1]) and len(set(a[0:u - 1])) == u - 1:\n            ans_l.append([u - 1, k - u + 1])\n        if u - 1 == max(a[k - u + 1:]) and len(set(a[k - u + 1:])) == u - 1:\n            ans_l.append([k - u + 1, u - 1])\n        print(len(ans_l))\n        for i in range(len(ans_l)):\n            print(*ans_l[i])", "import sys\nfrom math import sqrt, floor\nfrom collections import deque, Counter\ninp = sys.stdin.readline\nread = lambda : list(map(int, inp().split()))\n\ndef a():\n    ans = ''\n    for _ in range(int(inp())):\n        (n, x) = read()\n        arr = sorted(list(set(read())))\n        n = len(arr)\n        i = 0\n        while i < n and arr[i] <= x + 1:\n            x += 1\n            i += 1\n        ans += str(x) + '\\n'\n    print(ans)\n\ndef b():\n    ans = ''\n    for _ in range(int(inp())):\n        n = int(inp())\n        arr = read()\n        total = sum(arr)\n        s1 = 0\n        ans_lis = []\n        for i in range(n):\n            s1 += arr[i]\n            total -= arr[i]\n            (p1, p2) = (i + 1, n - i - 1)\n            if s1 == p1 * (p1 + 1) // 2 and total == p2 * (p2 + 1) // 2 and (len(set(arr[:p1])) == p1) and (len(set(arr[p1:])) == p2):\n                ans_lis.append(str(p1) + ' ' + str(p2))\n        ans += str(len(ans_lis)) + '\\n'\n        for i in ans_lis:\n            ans += str(i) + '\\n'\n    print(ans)\nb()", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    ans = 0\n    l1 = max(a)\n    l2 = n - l1\n    if l1 == n:\n        print(0)\n    else:\n        p11 = sorted(a[:l1])\n        p21 = sorted(a[l1:])\n        p12 = sorted(a[:l2])\n        p22 = sorted(a[l2:])\n        p1 = [i + 1 for i in range(l1)]\n        p2 = [j + 1 for j in range(l2)]\n        k = 0\n        if p11 == p1 and p21 == p2:\n            ans += 1\n            k = l1\n        if p12 == p2 and p22 == p1:\n            ans += 1\n            k = l2\n        if l1 == l2 and ans > 0:\n            ans = 1\n        print(ans)\n        if ans == 1:\n            print(k, n - k)\n        if ans == 2:\n            print(l1, l2)\n            print(l2, l1)", "def check(array, index):\n    new_array = array[:index]\n    new_array.sort()\n    for i in range(index):\n        if i + 1 != new_array[i]:\n            return False\n    new_array = array[index:]\n    new_array.sort()\n    for i in range(len(array) - index):\n        if i + 1 != new_array[i]:\n            return False\n    return True\nt = int(input())\nwhile t:\n    n = int(input())\n    perm = list(map(int, input().split()))\n    maxPerm = -1\n    for x in perm:\n        if x > maxPerm:\n            maxPerm = x\n    forward = check(perm, maxPerm)\n    reverse = check(perm[::-1], maxPerm)\n    if maxPerm == n - maxPerm:\n        reverse = False\n    if forward and reverse:\n        print('2')\n        print(maxPerm, n - maxPerm)\n        print(n - maxPerm, maxPerm)\n    elif forward:\n        print('1')\n        print(maxPerm, n - maxPerm)\n    elif reverse:\n        print('1')\n        print(n - maxPerm, maxPerm)\n    else:\n        print('0')\n    t -= 1", "def check(a):\n    a.sort()\n    b = [i + 1 for i in range(len(a))]\n    if b == a:\n        return 1\n    else:\n        return 0\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = max(a)\n    c = []\n    if check(a[:b]) and check(a[b:]):\n        c.append((b, n - b))\n    if check(a[:n - b]) and check(a[n - b:]):\n        c.append((n - b, b))\n    c = list(set(c))\n    print(len(c))\n    for i in range(len(c)):\n        print(*c[i])", "def check(arr, n):\n    f = arr[0:n]\n    l = arr[n:]\n    freqf = [False] * n\n    freql = [False] * (len(arr) - n)\n    for i in f:\n        try:\n            freqf[i - 1] = True\n        except:\n            pass\n    for i in l:\n        try:\n            freql[i - 1] = True\n        except:\n            pass\n    for i in freqf:\n        if not i:\n            return False\n    for i in freql:\n        if not i:\n            return False\n    return True\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(s) for s in input().split()]\n    max = 0\n    for i in arr:\n        if i > max:\n            max = i\n    count = 0\n    ans = ''\n    if check(arr, max):\n        count += 1\n        ans += str(max) + ' ' + str(n - max) + '\\n'\n    if max != n - max and check(arr, n - max):\n        count += 1\n        ans += str(n - max) + ' ' + str(max) + '\\n'\n    print(count)\n    print(ans, end='')", "t = int(input())\nfor i in range(t):\n    T = True\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = max(a)\n    c = a[:b].copy()\n    e = a[b:].copy()\n    d = a[n - b:].copy()\n    f = a[:n - b].copy()\n    m = 0\n    c.sort()\n    e.sort()\n    d.sort()\n    f.sort()\n    if b == n / 2:\n        if c == list(range(1, max(c) + 1)) and e == list(range(1, max(e) + 1)):\n            m += 1\n    else:\n        if c == list(range(1, max(c) + 1)) and e == list(range(1, max(e) + 1)):\n            m += 1\n        if d == list(range(1, max(d) + 1)) and f == list(range(1, max(f) + 1)):\n            m += 1\n            T = False\n    print(m)\n    if m == 2:\n        print(len(c), len(e))\n        print(len(f), len(d))\n    elif m == 1 and T == True:\n        print(len(c), len(e))\n    elif m == 1 and T == False:\n        print(len(f), len(d))", "def check(array, index):\n    new_array = array[:index]\n    new_array.sort()\n    for i in range(index):\n        if i + 1 != new_array[i]:\n            return False\n    new_array = array[index:]\n    new_array.sort()\n    for i in range(len(array) - index):\n        if i + 1 != new_array[i]:\n            return False\n    return True\nt = int(input())\nwhile t:\n    n = int(input())\n    perm = list(map(int, input().split()))\n    maxPerm = -1\n    for x in perm:\n        if x > maxPerm:\n            maxPerm = x\n    forward = check(perm, maxPerm)\n    reverse = check(perm[::-1], maxPerm)\n    if maxPerm == n - maxPerm:\n        reverse = False\n    if forward and reverse:\n        print('2')\n        print(maxPerm, n - maxPerm)\n        print(n - maxPerm, maxPerm)\n    elif forward:\n        print('1')\n        print(maxPerm, n - maxPerm)\n    elif reverse:\n        print('1')\n        print(n - maxPerm, maxPerm)\n    else:\n        print('0')\n    t -= 1", "testCases = int(input())\nfor _ in range(testCases):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mx = max(a)\n    d = set()\n    for c in range(2):\n        if set(a[:mx]) == set(range(1, mx + 1)) and set(a[mx:]) == set(range(1, n - mx + 1)):\n            d.add(mx)\n        mx = n - mx\n    print(len(d))\n    for x in d:\n        print(x, n - x)", "def fun(lst, ele, n):\n    dic1 = {}\n    for j in range(1, ele + 1):\n        dic1[j] = 0\n    e = 0\n    for j in range(ele):\n        if lst[j] not in dic1:\n            e += 1\n            break\n        else:\n            dic1[lst[j]] += 1\n    for j in dic1.keys():\n        if dic1[j] != 1:\n            e += 1\n            break\n    dic1 = {}\n    for j in range(1, n - ele + 1):\n        dic1[j] = 0\n    for j in range(ele, n):\n        if lst[j] not in dic1:\n            e += 1\n            break\n        else:\n            dic1[lst[j]] += 1\n    for j in dic1.keys():\n        if dic1[j] != 1:\n            e += 1\n            break\n    if e == 0:\n        return 1\n    return 0\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    ma = max(lst)\n    s = set()\n    if fun(lst, ma, n) == 1:\n        s.add((ma, n - ma))\n    if fun(lst, n - ma, n) == 1:\n        s.add((n - ma, ma))\n    l = len(s)\n    print(l)\n    for j in s:\n        print(j[0], j[1])", "R = lambda : map(int, input().split())\nt = int(input())\n\ndef check(a):\n    n = len(a)\n    b = [0] * (n + 1)\n    for x in a:\n        if x > n or 1 > x:\n            return False\n        b[x] = 1\n    return sum(b) == n\n\ndef solve(a, n):\n    b = [0] * n\n    for x in a:\n        b[x] += 1\n    if 2 not in b:\n        print(0)\n        return\n    if 1 not in b:\n        if n % 2:\n            print(0)\n            return\n        elif b[1:n // 2 + 1] != [2] * (n // 2):\n            print(0)\n            return\n        else:\n            z1 = check(a[:n // 2])\n            z2 = check(a[n // 2:])\n            print(int(z1 and z2))\n            if z1 and z2:\n                print(n // 2, n // 2)\n            return\n    first = b.index(1)\n    if first < 2:\n        print(0)\n        return\n    if b[1:first] != [2] * (first - 1) or b[first:n - first + 2] != [1] * (n - 2 * first + 2):\n        print(0)\n        return\n    z1 = check(a[:first - 1]) and check(a[first - 1:])\n    z2 = check(a[1 - first:]) and check(a[1 - first:])\n    print(int(z1) + int(z2))\n    if z1:\n        print(first - 1, n - first + 1)\n    if z2:\n        print(n - first + 1, first - 1)\nfor _ in range(t):\n    n = int(input())\n    a = list(R())\n    solve(a, n)", "t = int(input())\n\ndef pmok(aa):\n    seen = set()\n    cursum = 0\n    ret = []\n    for (i, a) in enumerate(aa, 1):\n        if a in seen:\n            break\n        seen.add(a)\n        cursum += a\n        if cursum == i * (i + 1) // 2:\n            ret.append(i)\n    return ret\nanss = []\nfor _ in range(t):\n    n = int(input())\n    aa = list(map(int, input().split()))\n    ans = []\n    sl2 = set(pmok(reversed(aa[1:])))\n    for l1 in pmok(aa[:-1]):\n        if n - l1 in sl2:\n            ans.append(f'{l1} {n - l1}')\n    anss.append(str(len(ans)))\n    if ans:\n        anss.append('\\n'.join(ans))\nprint('\\n'.join(anss))", "def check(l, i, j):\n    r = [0] * (j - i + 1)\n    try:\n        for x in range(j - i + 1):\n            if r[l[x + i] - 1] == 0:\n                r[l[x + i] - 1] = l[x + i]\n            else:\n                return False\n    except:\n        return False\n    return True\n\ndef sol(l):\n    M = max(l)\n    m = len(l) - M\n    r = 0\n    if check(l, 0, m - 1) and check(l, m, len(l) - 1):\n        r += 1\n    if check(l, 0, M - 1) and check(l, M, len(l) - 1):\n        r += 2\n    if r == 0:\n        print(0)\n    elif r == 1:\n        print(1)\n        print(m, M)\n    elif r == 2:\n        print(1)\n        print(M, m)\n    elif r == 3:\n        if m != M:\n            print(2)\n            print(m, M)\n            print(M, m)\n        else:\n            print(1)\n            print(m, M)\nt = int(input())\nfor _ in range(t):\n    length = int(input())\n    l = list(map(int, input().split()))\n    sol(l)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    c = 0\n    m1 = max(a)\n    tem = []\n    for j in range(1, m1 + 1):\n        tem.append(j)\n    p11 = a[:m1]\n    p12 = a[m1:]\n    p21 = a[:n - m1]\n    p22 = a[n - m1:]\n    solutions = []\n    if sorted(p11) == tem[:m1] and sorted(p12) == tem[:n - m1] and (n != m1):\n        c += 1\n        solutions.append([m1, n - m1])\n    if sorted(p21) == tem[:n - m1] and sorted(p22) == tem[:m1] and (n != m1) and (m1 != n - m1):\n        c += 1\n        solutions.append([n - m1, m1])\n    print(c)\n    for j in solutions:\n        print(j[0], end=' ')\n        print(j[1])", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    aa = [int(i) for i in input().split()]\n    maxi = max(aa)\n    ans = []\n    if sorted(aa[:maxi]) == [int(i) for i in range(1, maxi + 1)] and sorted(aa[maxi:]) == [int(i) for i in range(1, n - maxi + 1)]:\n        ans.append((maxi, n - maxi))\n    aa = aa[::-1]\n    if sorted(aa[:maxi]) == [int(i) for i in range(1, maxi + 1)] and sorted(aa[maxi:]) == [int(i) for i in range(1, n - maxi + 1)] and (len(aa) != 2 * maxi):\n        ans.append((n - maxi, maxi))\n    if len(ans):\n        print(len(ans))\n        for i in ans:\n            print(*i)\n    else:\n        print(0)", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    aa = [int(i) for i in input().split()]\n    maxi = max(aa)\n    ans = []\n    if sorted(aa[:maxi]) == [int(i) for i in range(1, maxi + 1)] and sorted(aa[maxi:]) == [int(i) for i in range(1, n - maxi + 1)]:\n        ans.append((maxi, n - maxi))\n    aa = aa[::-1]\n    if sorted(aa[:maxi]) == [int(i) for i in range(1, maxi + 1)] and sorted(aa[maxi:]) == [int(i) for i in range(1, n - maxi + 1)]:\n        ans.append((n - maxi, maxi))\n    ans = set(ans)\n    if len(ans):\n        print(len(ans))\n        for i in ans:\n            print(*i)\n    else:\n        print(0)", "check = lambda s, n: all((i + 1 in s for i in range(max(n, 1))))\nfor _ in range(int(input())):\n    a = [list(map(int, input().split())) for i in '..'][1]\n    (mx, n, res) = (max(a), len(a), set())\n    if check(set(a[:mx]), mx) and check(set(a[mx:]), n - mx):\n        res.add((mx, n - mx))\n    if check(set(a[:n - mx]), n - mx) and check(set(a[n - mx:]), mx):\n        res.add((n - mx, mx))\n    print(len(res))\n    for r in res:\n        print(*r)", "def check(lst):\n    lst.sort()\n    return len(lst) > 0 and all((i + 1 == lst[i] for i in range(len(lst))))\nfor j in range(int(input())):\n    n = int(input())\n    lsta = list(map(int, input().split()))\n    if lsta.count(1) == 2:\n        result = set()\n        mx = max(lsta)\n        if check(lsta[:mx]) and check(lsta[mx:]):\n            result.add((mx, n - mx))\n        if check(lsta[:n - mx]) and check(lsta[n - mx:]):\n            result.add((n - mx, mx))\n        print(len(result))\n        for i in result:\n            print(*i)\n    else:\n        print(0)", "for _ in range(int(input())):\n    n = int(input())\n    a = input().split(' ')\n    for i in range(n):\n        a[i] = int(a[i])\n    l1 = max(a)\n    d = []\n    for j in range(2):\n        if set(a[:l1]) == set(range(1, l1 + 1)) and set(a[l1:]) == set(range(1, n - l1 + 1)):\n            d.append(l1)\n        l1 = n - l1\n    d = set(d)\n    print(len(d))\n    if len(d) > 0:\n        for i in d:\n            print(i, n - i)", "def _check_permutation(array):\n    return set(range(1, len(array) + 1)) == set(array)\n\ndef _split_perm(array):\n    viewed_numbers = set()\n    for (index, number) in enumerate(array):\n        if number in viewed_numbers:\n            if _check_permutation(array[:index]) and _check_permutation(array[index:]):\n                return index\n            else:\n                return -1\n        viewed_numbers.add(number)\n    return -1\ntask_number = int(input())\nfor _ in range(task_number):\n    n = int(input())\n    array = [int(i) for i in input().split()]\n    forward = _split_perm(array)\n    array.reverse()\n    backward = _split_perm(array)\n    ans = []\n    if forward > 0:\n        ans.append((forward, n - forward))\n    if backward > 0:\n        ans.append((n - backward, backward))\n    ans = set(ans)\n    print(len(ans))\n    for (l1, l2) in ans:\n        print(l1, l2)", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        (x1, x2, k) = (sum(a), 0, 0)\n        l = []\n        s1 = set()\n        s2 = set(a)\n        for i in range(n):\n            if x1 - a[i] == (n - i - 1) * (n - i) // 2 and x2 + a[i] == (i + 1) * (i + 2) // 2 and (i != n - 1) and (set(a[:i + 1]).__len__() == i + 1) and (set(a[i + 1:]).__len__() == n - i - 1):\n                l.append([i + 1, n - i - 1])\n                k += 1\n            x1 -= a[i]\n            x2 += a[i]\n        print(k)\n        for i in range(k):\n            print(l[i][0], l[i][1])\nmain()", "from collections import Counter\n\ndef solve():\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    d = Counter(l1)\n    v1 = list(d.keys())\n    c = 0\n    sum1 = sum(l1)\n    kk = []\n    xx = 0\n    for i in range(len(v1)):\n        if d[v1[i]] == 2:\n            c = c + 1\n    s2 = len(d)\n    f1 = (c + 1) * c // 2\n    f2 = (s2 + 1) * s2 // 2\n    a = sum(l1[0:c])\n    b = sum1 - a\n    if f1 == a and f2 == b and (a + b == sum1) and (c + s2 == n):\n        xx += 1\n        kk.append(c)\n        kk.append(s2)\n    a1 = sum(l1[0:s2])\n    b1 = sum1 - a1\n    if a1 == f2 and b1 == f1 and (a + b == sum1) and (c + s2 == n):\n        xx = xx + 1\n        kk.append(s2)\n        kk.append(c)\n    if s2 == c:\n        if xx > 0:\n            xx = xx - 1\n            kk.pop()\n            kk.pop()\n    print(xx)\n    for i in range(0, len(kk), 2):\n        print(kk[i], kk[i + 1])\nfor _ in range(int(input())):\n    solve()", "def check1(l):\n    l = sorted(l)\n    for i in range(len(l)):\n        if l[i] != i + 1:\n            return False\n    return True\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    an = list(map(int, input().split()))\n    mm = an.index(max(an))\n    maxx = max(an)\n    works1 = 0\n    works2 = 0\n    if check1(an[:maxx]) and check1(an[maxx:]):\n        works1 = 1\n    if check1(an[:len(an) - maxx]) and check1(an[len(an) - maxx:]) and (not len(an) == maxx * 2):\n        works2 = 1\n    print(works1 + works2)\n    if works1 == 1:\n        print(maxx, len(an) - maxx)\n    if works2 == 1:\n        print(len(an) - maxx, maxx)", "import sys\ninp = sys.stdin.readline\nread = lambda : list(map(int, inp().split()))\nans = ''\nfor _ in range(int(inp())):\n    n = int(inp())\n    arr = read()\n    total = sum(arr)\n    s1 = 0\n    ans_lis = []\n    for i in range(n):\n        s1 += arr[i]\n        total -= arr[i]\n        (p1, p2) = (i + 1, n - i - 1)\n        if s1 == p1 * (p1 + 1) // 2 and total == p2 * (p2 + 1) // 2 and (len(set(arr[:p1])) == p1) and (len(set(arr[p1:])) == p2):\n            ans_lis.append(str(p1) + ' ' + str(p2))\n    ans += str(len(ans_lis)) + '\\n'\n    for i in ans_lis:\n        ans += str(i) + '\\n'\nprint(ans)", "def check(l):\n    l.sort()\n    return all((i + 1 == l[i] for i in range(len(l))))\nfor _ in range(int(input())):\n    a = [list(map(int, input().split())) for i in '..'][1]\n    (mx, n) = (max(a), len(a))\n    if mx >= n:\n        print(0)\n    (f1, f2) = (check(a[:mx]), check(a[:n - mx]))\n    (b1, b2) = (check(a[mx:]), check(a[n - mx:]))\n    (cnt, res) = (0, set())\n    if f1 and b1:\n        res.add((mx, n - mx))\n    if f2 and b2:\n        res.add((n - mx, mx))\n    print(len(res))\n    for r in res:\n        print(*r)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = max(l)\n    k = n - x\n    c = 0\n    a = []\n    p = [0] * (n - x)\n    q = [0] * x\n    for i in range(n):\n        try:\n            if i < n - x:\n                p[l[i] - 1] = 1\n            else:\n                q[l[i] - 1] = 1\n        except:\n            break\n    if sum(p) == n - x and sum(q) == x:\n        c += 1\n        a += [n - x, x]\n    p = [0] * x\n    q = [0] * (n - x)\n    for i in range(n):\n        try:\n            if i < x:\n                p[l[i] - 1] = 1\n            else:\n                q[l[i] - 1] = 1\n        except:\n            break\n    if sum(p) == x and sum(q) == n - x:\n        c += 1\n        a += [x, n - x]\n    print(c if c < 2 else c - int(a[0] == a[2]))\n    if a != []:\n        print(a[0], a[1])\n        if len(a) == 4 and a[0] != a[2]:\n            print(a[2], a[3])", "def is_permutation(xs):\n    xs.sort()\n    for (i, x) in enumerate(xs):\n        if i != x:\n            return False\n    return True\n\ndef ways_to_split(xs):\n    x_counts = {}\n    x_double_max = -1\n    for x in xs:\n        x_count = x_counts[x] = 1 + x_counts.get(x, 0)\n        if x_count == 2:\n            if x > x_double_max:\n                x_double_max = x\n        elif x_count == 3:\n            return []\n    if x_double_max == -1:\n        raise ValueError('\u0422\u0430\u043a\u043e\u0433\u043e \u0431\u044b\u0442\u044c \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u043f\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u044e!')\n    l_smaller_perm = x_double_max + 1\n    ways = set()\n    if is_permutation(xs[:l_smaller_perm]) and is_permutation(xs[l_smaller_perm:]):\n        ways.add((l_smaller_perm, len(xs) - l_smaller_perm))\n    if is_permutation(xs[-l_smaller_perm:]) and is_permutation(xs[:-l_smaller_perm]):\n        ways.add((len(xs) - l_smaller_perm, l_smaller_perm))\n    return ways\nfor _ in range(int(input())):\n    input()\n    ways = ways_to_split([int(x) - 1 for x in input().split(' ')])\n    print(len(ways))\n    for (a, b) in ways:\n        print(a, b)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = max(l)\n    s1 = list(set(l))\n    if l.count(1) != 2:\n        print(0)\n    elif m == n:\n        print(0)\n    else:\n        count = 0\n        max1 = max(l)\n        max2 = n - max1\n        l1 = l[0:max1]\n        l1.sort()\n        l2 = l[max1:]\n        l2.sort()\n        l3 = l[0:max2]\n        l3.sort()\n        l4 = l[max2:]\n        l4.sort()\n        p1 = list((i for i in range(1, max1 + 1)))\n        p2 = list((j for j in range(1, max2 + 1)))\n        if l1 == p1 and l2 == p2:\n            count += 1\n            k = max1\n        if l3 == p2 and l4 == p1:\n            count += 1\n            k = max2\n        if p1 == p2 and count > 0:\n            count = 1\n        print(count)\n        if count == 1:\n            print(k, n - k)\n        if count == 2:\n            print(max1, max2)\n            print(max2, max1)\n            l", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = max(l)\n    b = n - a\n    l1 = l[:b]\n    flag1 = 1\n    flag2 = 0\n    l1.sort()\n    for i in range(b):\n        if l1[i] != i + 1:\n            flag1 = 0\n            break\n    if flag1 != 0:\n        l2 = l[b:]\n        l2.sort()\n        for i in range(n - b):\n            if l2[i] != i + 1:\n                flag1 = 0\n                break\n    if 2 * b != n:\n        flag2 = 1\n        b = n - b\n        l1 = l[:b]\n        l1.sort()\n        for i in range(b):\n            if l1[i] != i + 1:\n                flag2 = 0\n                break\n        if flag2 != 0:\n            l2 = l[b:]\n            l2.sort()\n            for i in range(n - b):\n                if l2[i] != i + 1:\n                    flag2 = 0\n                    break\n    if flag1 == 1 and flag2 == 1 and (b != 0) and (n - b != 0):\n        print(2)\n        print(*[b, n - b])\n        print(*[n - b, b])\n    elif flag1 == 1 and flag2 == 0 and (b != 0) and (n - b != 0):\n        print(1)\n        print(*[n - b, b])\n    elif flag2 == 1 and flag1 == 0 and (b != 0) and (n - b != 0):\n        print(1)\n        print(*[b, n - b])\n    else:\n        print(0)", "def check(l):\n    l.sort()\n    return len(l) > 0 and all((i + 1 == l[i] for i in range(len(l))))\nfor _ in range(int(input())):\n    a = [list(map(int, input().split())) for i in '..'][1]\n    (mx, n) = (max(a), len(a))\n    res = set()\n    if check(a[:mx]) and check(a[mx:]):\n        res.add((mx, n - mx))\n    if check(a[:n - mx]) and check(a[n - mx:]):\n        res.add((n - mx, mx))\n    print(len(res))\n    for r in res:\n        print(*r)", "import math\nfor ii in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    a = max(l)\n    if a >= len(l):\n        print(0)\n    else:\n        x = l[0:a]\n        y = l[a:]\n        ans = []\n        count = 0\n        if sorted(x) == [int(i + 1) for i in range(len(x))] and sorted(y) == [int(i + 1) for i in range(len(y))]:\n            count += 1\n            ans.append([a, n - a])\n        x = l[0:n - a]\n        y = l[n - a:n]\n        if sorted(x) == [int(i + 1) for i in range(len(x))] and sorted(y) == [int(i + 1) for i in range(len(y))]:\n            count += 1\n            ans.append([n - a, a])\n        if a == n // 2 + n % 2 / 2 and count == 2:\n            print(1)\n            print(*ans[0])\n        else:\n            print(count)\n            for i in ans:\n                print(*i)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    m = max(a)\n    r = 1\n    r1 = 1\n    l = sorted(a[:n - m])\n    e = sorted(a[n - m:])\n    l1 = sorted(a[:m])\n    e1 = sorted(a[m:])\n    for i in range(len(l)):\n        if l[i] != i + 1:\n            r = 0\n            break\n    for i in range(len(e)):\n        if e[i] != i + 1:\n            r = 0\n            break\n    for i in range(len(l1)):\n        if l1[i] != i + 1:\n            r1 = 0\n            break\n    for i in range(len(e1)):\n        if e1[i] != i + 1:\n            r1 = 0\n            break\n    if r == 0 and r1 == 0:\n        print(0)\n    elif r == 1 and r1 == 1:\n        if n - m == m:\n            print(1)\n            print(n - m, m)\n        else:\n            print(2)\n            print(n - m, m)\n            print(m, n - m)\n    elif r == 1:\n        print(1)\n        print(n - m, m)\n    else:\n        print(1)\n        print(m, n - m)", "def disp(a):\n    for i in range(len(a)):\n        print(a[i], end=' ')\n    print()\nt = int(input())\nfor k in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    setf = set(a)\n    count = 0\n    ans = [[]]\n    eh = max(a)\n    he = len(a) - len(setf)\n    for i in range(1, n):\n        if i != eh and i != he:\n            continue\n        temp = a[:i]\n        temp2 = a[i:]\n        set1 = set(temp)\n        set2 = set(temp2)\n        if len(set1) != len(temp) or len(set2) != len(temp2):\n            continue\n        if max(temp) == i and max(temp2) == n - i:\n            count += 1\n            ans.append([len(temp), len(temp2)])\n    print(count)\n    num = 0\n    for i in ans:\n        if num > 0:\n            print(i[0], end=' ')\n            print(i[1])\n        num += 1", "def check(l):\n    l.sort()\n    return all((i + 1 == l[i] for i in range(len(l))))\nfor _ in range(int(input())):\n    a = [list(map(int, input().split())) for i in '..'][1]\n    (mx, n) = (max(a), len(a))\n    if mx >= n:\n        print(0)\n    (f1, f2) = (check(a[:mx]), check(a[:n - mx]))\n    (b1, b2) = (check(a[mx:]), check(a[n - mx:]))\n    (cnt, res) = (0, set())\n    if f1 and b1:\n        res.add((mx, n - mx))\n    if f2 and b2:\n        res.add((n - mx, mx))\n    print(len(res))\n    for r in res:\n        print(*r)", "import sys\nimport collections\ninput = sys.stdin.readline\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        N = int(input())\n        A = [int(x) for x in input().split()]\n        before = [0] * (N + 1)\n        beforeset = set()\n        ma = 0\n        f = False\n        for (i, a) in enumerate(A):\n            if a == 1:\n                f = True\n            ma = max(a, ma)\n            beforeset.add(a)\n            if ma == i + 1 and f and (len(beforeset) == i + 1):\n                before[i + 1] = 1\n        after = [0] * (N + 1)\n        afterset = set()\n        ma = 0\n        f = False\n        for (i, a) in enumerate(A[::-1]):\n            if a == 1:\n                f = True\n            ma = max(a, ma)\n            afterset.add(a)\n            if ma == i + 1 and f and (len(afterset) == i + 1):\n                after[N - i] = 1\n        ans = 0\n        lans = []\n        for i in range(1, N):\n            if before[i] == 1 and after[i + 1] == 1:\n                ans += 1\n                lans.append([i, N - i])\n        if ans == 0:\n            print(0)\n        else:\n            print(ans)\n            for a in lans:\n                print(*a)\nmain()"]