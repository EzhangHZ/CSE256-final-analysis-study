["import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    b = list(map(int, sys.stdin.readline().split()))\n    min_a = min(a)\n    min_b = min(b)\n    count = 0\n    for i in range(n):\n        count += max(a[i] - min_a, b[i] - min_b)\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ma = min(a)\n    mb = min(b)\n    ans = 0\n    for p in zip(a, b):\n        ans += max(p[0] - ma, p[1] - mb)\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    lst1 = list(map(int, input().split(' ')))\n    lst2 = list(map(int, input().split(' ')))\n    a = min(lst1)\n    b = min(lst2)\n    sum = 0\n    for i in range(n):\n        sum += max(lst1[i] - a, lst2[i] - b)\n    print(sum)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr1 = list(map(int, input().strip().split()))\n    arr2 = list(map(int, input().strip().split()))\n    min1 = min(arr1)\n    min2 = min(arr2)\n    c = 0\n    for i in range(n):\n        c += max(arr1[i] - min1, arr2[i] - min2)\n    print(c)\n    t -= 1", "z = int(input())\nfor j in range(z):\n    n = int(input())\n    str1 = input()\n    str2 = input()\n    l1 = [int(x) for x in str1.split()]\n    l2 = [int(x) for x in str2.split()]\n    buff_l1 = 0\n    buff_l2 = 0\n    kol = 0\n    min_l1 = min(l1)\n    min_l2 = min(l2)\n    for i in range(n):\n        buff_l1 = l1[i] - min_l1\n        buff_l2 = l2[i] - min_l2\n        kol = kol + max(buff_l1, buff_l2)\n    print(kol)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    mna = min(a)\n    mnb = min(b)\n    c = 0\n    for j in range(n):\n        c += max(a[j] - mna, b[j] - mnb)\n    print(c)", "def solve(a, b, n):\n    (x1, x2) = (min(a), min(b))\n    z = min(x1, x2)\n    ans = 0\n    for i in range(n):\n        if a[i] > z and b[i] > z:\n            m = min(a[i] - z, b[i] - z)\n            ans += m\n            a[i] = a[i] - m\n            b[i] = b[i] - m\n        if a[i] > x1:\n            ans += a[i] - x1\n        if b[i] > x2:\n            ans += b[i] - x2\n    return ans\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n        ans = solve(a, b, n)\n        print(ans)\nmain()", "for i in range(int(input())):\n    n = int(input())\n    h = 0\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ap = min(b)\n    sw = min(a)\n    for i in range(n):\n        h += max(b[i] - ap, a[i] - sw)\n    print(h)", "def ip():\n    return int(input())\n\ndef sip():\n    return input()\n\ndef mip():\n    return map(int, input().split())\n\ndef lip():\n    return list(map(int, input().split()))\n\ndef matip(n, m):\n    lst = []\n    for i in range(n):\n        arr = lip()\n        lst.append(arr)\n    return lst\nt = ip()\nwhile t:\n    t -= 1\n    n = ip()\n    arr = lip()\n    lst = lip()\n    a = min(arr)\n    b = min(lst)\n    count = 0\n    for i in range(n):\n        count += max(arr[i] - a, lst[i] - b)\n    print(count)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    aList = list(map(int, input().split()))\n    bList = list(map(int, input().split()))\n    minA = min(aList)\n    minB = min(bList)\n    counter = 0\n    for i in range(n):\n        counter += max(aList[i] - minA, bList[i] - minB)\n    print(counter)", "def ip():\n    return int(input())\n\ndef sip():\n    return input()\n\ndef mip():\n    return map(int, input().split())\n\ndef lip():\n    return list(map(int, input().split()))\n\ndef matip(n, m):\n    lst = []\n    for i in range(n):\n        arr = lip()\n        lst.append(arr)\n    return lst\nt = ip()\nwhile t:\n    t -= 1\n    n = ip()\n    arr = lip()\n    lst = lip()\n    a = min(arr)\n    b = min(lst)\n    count = 0\n    for i in range(n):\n        count += max(arr[i] - a, lst[i] - b)\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    ans = 0\n    (mia, mib) = (min(a), min(b))\n    for i in range(n):\n        ans += max(a[i] - mia, b[i] - mib)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    candy = list(map(int, input().split()))\n    orange = list(map(int, input().split()))\n    cmin = min(candy)\n    omin = min(orange)\n    tot = 0\n    for i in range(n):\n        tot += max(candy[i] - cmin, orange[i] - omin)\n    print(tot)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    candy = list(map(int, input().split()))\n    orange = list(map(int, input().split()))\n    cmin = min(candy)\n    omin = min(orange)\n    tot = 0\n    for i in range(n):\n        tot += max(candy[i] - cmin, orange[i] - omin)\n    print(tot)", "def ip():\n    return int(input())\n\ndef sip():\n    return input()\n\ndef mip():\n    return map(int, input().split())\n\ndef lip():\n    return list(map(int, input().split()))\n\ndef matip(n, m):\n    lst = []\n    for i in range(n):\n        arr = lip()\n        lst.append(arr)\n    return lst\nt = ip()\nwhile t:\n    t -= 1\n    n = ip()\n    arr = lip()\n    lst = lip()\n    a = min(arr)\n    b = min(lst)\n    count = 0\n    for i in range(n):\n        count += max(arr[i] - a, lst[i] - b)\n    print(count)", "for i in range(int(input())):\n    n = int(input())\n    apple = [int(x) for x in input().split()]\n    orange = [int(x) for x in input().split()]\n    min_apple = min(apple)\n    min_orng = min(orange)\n    moves = 0\n    for j in range(n):\n        org = orange[j] - min_orng\n        app = apple[j] - min_apple\n        moves += max(org, app)\n    print(moves)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    g = min(a)\n    h = min(b)\n    l = [0] * n\n    for i in range(n):\n        l[i] = max(a[i] - g, b[i] - h)\n    print(sum(l))", "t = int(input(''))\nfor i in range(t):\n    n = int(input(''))\n    a = list(map(int, input('').split()))\n    b = list(map(int, input('').split()))\n    a1 = min(a)\n    b1 = min(b)\n    t = 0\n    for i in range(len(a)):\n        t += max(a[i] - a1, b[i] - b1)\n    print(t)", "for t in range(int(input())):\n    n = int(input())\n    arr1 = list(map(int, input().strip().split()))\n    arr2 = list(map(int, input().strip().split()))\n    m1 = min(arr1)\n    m2 = min(arr2)\n    ans = 0\n    for i in range(n):\n        ans += max(arr1[i] - m1, arr2[i] - m2)\n    print(ans)", "def ip():\n    return int(input())\n\ndef sip():\n    return input()\n\ndef mip():\n    return map(int, input().split())\n\ndef lip():\n    return list(map(int, input().split()))\n\ndef matip(n, m):\n    lst = []\n    for i in range(n):\n        arr = lip()\n        lst.append(arr)\n    return lst\nt = ip()\nwhile t:\n    t -= 1\n    n = ip()\n    arr = lip()\n    lst = lip()\n    a = min(arr)\n    b = min(lst)\n    count = 0\n    for i in range(n):\n        count += max(arr[i] - a, lst[i] - b)\n    print(count)", "t = int(input())\nwhile t > 0:\n    (n, a, b) = (int(input()), list(map(int, input().split())), list(map(int, input().split())))\n    (min_a, min_b) = (min(a), min(b))\n    print(sum((max(a[i] - min_a, b[i] - min_b) for i in range(n))))\n    t -= 1", "def test_case():\n    n = int(input())\n    oranges = list(map(int, input().split()))\n    candies = list(map(int, input().split()))\n    mo = min(oranges)\n    mc = min(candies)\n    counter = 0\n    for i in range(n):\n        counter += max(oranges[i] - mo, candies[i] - mc)\n    print(counter)\nfor i in range(int(input())):\n    test_case()", "t = int(input())\nwhile t:\n    n = int(input())\n    lista = list(map(int, input().strip().split()))[:n]\n    listb = list(map(int, input().strip().split()))[:n]\n    mina = min(lista)\n    minb = min(listb)\n    sum = int()\n    for i in range(0, n):\n        if lista[i] - mina >= listb[i] - minb:\n            sum += lista[i] - mina\n        else:\n            sum += listb[i] - minb\n    print(sum)\n    t -= 1", "def ip():\n    return int(input())\n\ndef lip():\n    return list(map(int, input().split()))\nt = ip()\nwhile t:\n    t -= 1\n    n = ip()\n    arr = lip()\n    lst = lip()\n    a = min(arr)\n    b = min(lst)\n    count = 0\n    for i in range(n):\n        count += max(arr[i] - a, lst[i] - b)\n    print(count)", "import math\n\ndef intlist():\n    return [int(i) for i in input().split(' ')]\n\ndef stringlsit():\n    return input().split(' ')\n\ndef solve():\n    n = int(input())\n    c = intlist()\n    o = intlist()\n    mc = min(c)\n    mo = min(o)\n    ans = 0\n    for i in range(n):\n        cn = c[i] - mc\n        on = o[i] - mo\n        ans += max(cn, on)\n    return ans\nt = input()\nfor tt in range(int(t)):\n    print(solve())", "tests = int(input())\nfor _ in range(tests):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    (ma, mb) = (min(a), min(b))\n    res = [max(a[i] - ma, b[i] - mb) for i in range(n)]\n    print(sum(res))", "for i in range(int(input())):\n    a = int(input())\n    Candy = input().split()\n    Oranges = input().split()\n    Candy = [int(x) for x in Candy]\n    Oranges = [int(x) for x in Oranges]\n    BaseCandy = min(Candy[:])\n    BaseOranges = min(Oranges[:])\n    MaxMoves = sum(Candy) - BaseCandy * a + (sum(Oranges) - BaseOranges * a)\n    Candy = [x - BaseCandy for x in Candy]\n    Oranges = [x - BaseOranges for x in Oranges]\n    counter = 0\n    for i in range(a):\n        if Candy[i] > 0 and Oranges[i] > 0:\n            counter += min(Candy[i], Oranges[i])\n        else:\n            continue\n    print(MaxMoves - counter)", "t = int(input())\nfor i in range(t):\n    steps = 0\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    (a_min, b_min) = (min(a), min(b))\n    for ith in range(n):\n        dif = [a[ith] - a_min, b[ith] - b_min]\n        steps += max(dif)\n    print(steps)", "output_list = []\ncases = int(input())\nfor i in range(cases):\n    garbage = int(input())\n    sum = 0\n    candiA = [int(x) for x in input().split(' ')]\n    candiB = [int(x) for x in input().split(' ')]\n    AerGoal = min(candiA)\n    BerGoal = min(candiB)\n    for i in range(garbage):\n        differen1 = candiA[i] - AerGoal\n        differen2 = candiB[i] - BerGoal\n        sum += max(differen1, differen2)\n    output_list.append(sum)\nprint('\\n'.join((str(x) for x in output_list)))", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    l = [0] * n\n    mina = min(l1)\n    minb = min(l2)\n    for i in range(n):\n        a = l1[i] - mina\n        b = l2[i] - minb\n        l[i] = max(a, b)\n    print(sum(l))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    br = list(map(int, input().split()))\n    a = min(ar)\n    b = min(br)\n    s = 0\n    for i in range(n):\n        s += max(ar[i] - a, br[i] - b)\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ma = min(a)\n    mb = min(b)\n    ans = 0\n    for i in range(n):\n        if a[i] - ma == b[i] - mb:\n            ans += a[i] - ma\n        elif a[i] - ma > b[i] - mb:\n            ans += b[i] - mb\n            ans += a[i] - ma - b[i] + mb\n        else:\n            ans += a[i] - ma\n            ans += b[i] - mb - a[i] + ma\n    print(ans)", "def solve():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    (ans, mna, mnb) = (0, min(a), min(b))\n    for i in range(n):\n        ans += max(a[i] - mna, b[i] - mnb)\n    print(ans)\nt = int(input())\nwhile t:\n    t -= 1\n    solve()", "task_num = int(input().strip())\nfor task_id in range(task_num):\n    gift_num = int(input().strip())\n    candies = list(map(int, input().strip().split(' ')))\n    oranges = list(map(int, input().strip().split(' ')))\n    min_candy = min(candies)\n    min_orange = min(oranges)\n    moves = 0\n    for (candy, orange) in zip(candies, oranges):\n        moves += max(candy - min_candy, orange - min_orange)\n    print(moves)", "def ip():\n    return int(input())\n\ndef sip():\n    return input()\n\ndef mip():\n    return map(int, input().split())\n\ndef lip():\n    return list(map(int, input().split()))\n\ndef matip(n, m):\n    lst = []\n    for i in range(n):\n        arr = lip()\n        lst.append(arr)\n    return lst\nt = ip()\nwhile t:\n    t -= 1\n    n = ip()\n    arr = lip()\n    lst = lip()\n    a = min(arr)\n    b = min(lst)\n    count = 0\n    for i in range(n):\n        count += max(arr[i] - a, lst[i] - b)\n    print(count)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    br = list(map(int, input().split()))\n    a = min(ar)\n    b = min(br)\n    s = 0\n    for i in range(n):\n        s += max(ar[i] - a, br[i] - b)\n    print(s)", "for j in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    am = min(a)\n    bm = min(b)\n    cout = 0\n    for i in range(n):\n        cout += max(a[i] - am, b[i] - bm)\n    print(cout)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ma = min(a)\n    mb = min(b)\n    c = 0\n    for i in range(n):\n        c += max(a[i] - ma, b[i] - mb)\n    print(c)", "for _ in [0] * int(input()):\n    (n, a, b) = (int(input()), [*map(int, input().split())], [*map(int, input().split())])\n    (min_a, min_b) = (min(a), min(b))\n    oper = 0\n    for i in range(n):\n        oper += max(a[i] - min_a, b[i] - min_b)\n    print(oper)", "n = int(input())\nfor i in range(0, n):\n    count = 0\n    a = int(input())\n    l1 = [int(x) for x in input().split()]\n    l2 = [int(x) for x in input().split()]\n    m1 = min(l1)\n    m2 = min(l2)\n    for j in range(0, a):\n        count += max(l1[j] - m1, l2[j] - m2)\n    print(count)", "t = int(input())\nfor i in range(t):\n    s = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    (m, n, c) = (min(a), min(b), 0)\n    for x in range(s):\n        c += max(a[x] - m, b[x] - n)\n    print(c)", "def format_input():\n    s_input = input()\n    return list(map(int, s_input.split()))\n\ndef get_min_elem(a, b):\n    return (min(a), min(b))\n\ndef calculate_moves():\n    n = format_input()[0]\n    a_list = format_input()\n    b_list = format_input()\n    (a_min, b_min) = get_min_elem(a_list, b_list)\n    ans = 0\n    for i in range(n):\n        a_diff = a_list[i] - a_min\n        b_diff = b_list[i] - b_min\n        ans += max(a_diff, b_diff)\n    return ans\n\ndef main():\n    t = format_input()[0]\n    for j in range(t):\n        moves = calculate_moves()\n        print(moves)\n    return\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    list2 = list(map(int, input().split()))\n    a = min(list1)\n    b = min(list2)\n    res = 0\n    for i in range(n):\n        c = list1[i] - a\n        o = list2[i] - b\n        if c == 0:\n            res += o\n        elif o == 0:\n            res += c\n        elif o <= c:\n            res += c - o\n            res += o\n        else:\n            res += o - c\n            res += c\n    print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    candy = [int(i) for i in input().split()]\n    orange = [int(i) for i in input().split()]\n    minCandy = min(candy)\n    minOrange = min(orange)\n    count = 0\n    for i in range(n):\n        o = 0\n        c = 0\n        if candy[i] > minCandy:\n            o = candy[i] - minCandy\n        if orange[i] > minOrange:\n            c = orange[i] - minOrange\n        if c >= o:\n            count = count + c\n        else:\n            count = count + o\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    t1 = min(a)\n    t2 = min(b)\n    moves = 0\n    for i in range(n):\n        a1 = a[i] - t1\n        b1 = b[i] - t2\n        moves = moves + max(a1, b1)\n    print(moves)", "t = int(input())\nnum = [0, 1, 3, 6, 10]\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    mina = min(a)\n    minb = min(b)\n    r = 0\n    for i in range(n):\n        r += max(a[i] - mina, b[i] - minb)\n    print(r)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    k = min(a)\n    m = min(b)\n    s = 0\n    for i in range(n):\n        s += max(a[i] - k, b[i] - m)\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    o = list(map(int, input().strip().split()))\n    keya = min(a)\n    keyo = min(o)\n    res = 0\n    for (i, j) in zip(a, o):\n        res += max(i - keya, j - keyo)\n    print(res)", "def ip():\n    return int(input())\n\ndef sip():\n    return input()\n\ndef mip():\n    return map(int, input().split())\n\ndef lip():\n    return list(map(int, input().split()))\n\ndef matip(n, m):\n    lst = []\n    for i in range(n):\n        arr = lip()\n        lst.append(arr)\n    return lst\nt = ip()\nwhile t:\n    t -= 1\n    n = ip()\n    arr = lip()\n    lst = lip()\n    a = min(arr)\n    b = min(lst)\n    count = 0\n    for i in range(n):\n        count += max(arr[i] - a, lst[i] - b)\n    print(count)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 0\n    ma = min(a)\n    mb = min(b)\n    for i in range(n):\n        ans += max(a[i] - ma, b[i] - mb)\n    print(ans)", "num = int(input())\nfor i in range(num):\n    lenz = int(input())\n    arr = input()\n    arr = arr.split(' ')\n    arr = [int(x) for x in arr]\n    minn = min(arr)\n    arr2 = input()\n    arr2 = arr2.split(' ')\n    arr2 = [int(x) for x in arr2]\n    minn2 = min(arr2)\n    move = 0\n    for j in range(lenz):\n        move += max(arr[j] - minn, arr2[j] - minn2)\n    print(move)", "cases = int(input())\nfor i in range(cases):\n    size = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    p = min(a)\n    q = min(b)\n    ans = 0\n    for j in range(size):\n        ans += max(a[j] - p, b[j] - q)\n    print(ans)", "from subprocess import CalledProcessError\n\ndef main():\n    testcases = int(input())\n    for i in range(testcases):\n        lang = int(input())\n        a = input()\n        aa = []\n        aa = a.split()\n        aa[:] = list(map(int, aa))\n        b = input()\n        bb = []\n        bb = b.split()\n        bb[:] = list(map(int, bb))\n        gifts(aa, bb, lang)\n\ndef gifts(a, b, lang):\n    counter = 0\n    mina = min(a)\n    minb = min(b)\n    for i in range(lang):\n        if a[i] > mina or b[i] > minb:\n            counter += max(a[i] - mina, b[i] - minb)\n    print(counter)\nmain()", "def solve():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    (mina, minb) = (min(a), min(b))\n    ans = 0\n    for i in range(n):\n        if a[i] == mina and b[i] == minb:\n            continue\n        if a[i] == mina and b[i] != minb or (a[i] != mina and b[i] == minb):\n            ans += a[i] - mina + (b[i] - minb)\n        else:\n            r = min(a[i] - mina, b[i] - minb)\n            ans += r\n            ans += a[i] - mina - r + b[i] - minb - r\n    return ans\nt = int(input())\nans = []\nwhile t:\n    ans.append(str(solve()))\n    t -= 1\nprint('\\n'.join(ans))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    (x, y) = (min(a), min(b))\n    count = 0\n    for i in range(n):\n        count += max(a[i] - x, b[i] - y)\n    print(count)", "for i in range(int(input())):\n    l = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a1 = min(a)\n    b1 = min(b)\n    t = 0\n    for j in range(l):\n        t += max([a[j] - a1, b[j] - b1])\n    print(t)", "num_cases = int(input())\nfor x in range(num_cases):\n    move_counter = 0\n    n = int(input())\n    candies = list(map(int, input().split()))\n    oranges = list(map(int, input().split()))\n    min_candy = min(candies)\n    min_orange = min(oranges)\n    for gift_num in range(n):\n        diff_candies = candies[gift_num] - min_candy\n        diff_oranges = oranges[gift_num] - min_orange\n        if diff_candies > diff_oranges:\n            move_counter += diff_candies\n        elif diff_oranges > diff_candies:\n            move_counter += diff_oranges\n        else:\n            move_counter += diff_candies\n    print(move_counter)", "num_cases = int(input())\nfor x in range(num_cases):\n    move_counter = 0\n    n = int(input())\n    candies = list(map(int, input().split()))\n    oranges = list(map(int, input().split()))\n    min_candy = min(candies)\n    min_orange = min(oranges)\n    for gift_num in range(n):\n        diff_candies = candies[gift_num] - min_candy\n        diff_oranges = oranges[gift_num] - min_orange\n        move_counter += max(diff_candies, diff_oranges)\n    print(move_counter)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    a_target = min(a)\n    b_target = min(b)\n    ans = 0\n    for i in range(n):\n        ans += max(a[i] - a_target, b[i] - b_target)\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    x1 = min(x)\n    y1 = min(y)\n    count = 0\n    for j in range(n):\n        x2 = x[j] - x1\n        y2 = y[j] - y1\n        if abs(y2) != y2 and abs(x2) != x2:\n            continue\n        elif x2 > 0 and y2 > 0:\n            count += max(x2, y2)\n        else:\n            count += max(x2, y2)\n    print(count)", "def solve(c, o, n):\n    c_min = min(c)\n    o_min = min(o)\n    count = 0\n    for i in range(n):\n        count += max(c[i] - c_min, o[i] - o_min)\n    print(count)\nfor _ in range(int(input())):\n    n = int(input())\n    candies = list(map(int, input().split()))\n    orange = list(map(int, input().split()))\n    solve(candies, orange, n)", "for i in range(int(input())):\n    x = int(input())\n    c = list(map(int, input().split()))\n    o = list(map(int, input().split()))\n    steps = 0\n    c_min = min(c)\n    o_min = min(o)\n    for i in range(x):\n        steps += max(c[i] - c_min, o[i] - o_min)\n    print(steps)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a_min = min(a)\n    b_min = min(b)\n    res = 0\n    for i in range(n):\n        dif_a = a[i] - a_min\n        dif_b = b[i] - b_min\n        res += min(dif_a, dif_b) + abs(dif_a - dif_b)\n    print(res)", "t = int(input())\no = [0 for i in range(t + 1)]\nfor k in range(1, t + 1):\n    n = int(input())\n    a = [int(j) for j in input().split()]\n    b = [int(j) for j in input().split()]\n    mina = min(a)\n    minb = min(b)\n    for i in range(0, n):\n        a[i] = a[i] - mina\n        b[i] = b[i] - minb\n        o[k] = o[k] + abs(a[i] - b[i]) + (a[i] + b[i] - abs(a[i] - b[i])) // 2\nfor i in range(1, t + 1):\n    print(o[i])", "n = int(input())\nans = []\nfor i in range(n):\n    m = int(input())\n    orange = [int(a) for a in input().split()]\n    present = [int(a) for a in input().split()]\n    mo = min(orange)\n    mp = min(present)\n    I = 0\n    ctn = 0\n    while I < m:\n        ctn += max(orange[I] - mo, present[I] - mp)\n        I += 1\n    ans.append(ctn)\nfor i in ans:\n    print(i)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ma = min(a)\n    mb = min(b)\n    k = 0\n    for i in range(n):\n        k += max(a[i] - ma, b[i] - mb)\n    print(k)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    moves = []\n    min_a = min(a)\n    min_b = min(b)\n    i = 0\n    while i < n:\n        moves.append(max(a[i] - min_a, b[i] - min_b))\n        i += 1\n    print(sum(moves))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    moves = 0\n    min_a = min(a)\n    min_b = min(b)\n    i = 0\n    while i < n:\n        moves += max(a[i] - min_a, b[i] - min_b)\n        i += 1\n    print(moves)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    mn_candies = min(a)\n    mn_oranges = min(b)\n    res = 0\n    for i in range(n):\n        res += max(a[i] - mn_candies, b[i] - mn_oranges)\n    print(res)", "x = int(input())\nfor i in range(x):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    min_a = min(a)\n    min_b = min(b)\n    s_a = 0\n    s_b = 0\n    s = 0\n    j = 0\n    while j < n:\n        s_a = a[j] - min_a\n        s_b = b[j] - min_b\n        s += max(s_a, s_b)\n        j += 1\n    print(s)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    c = 0\n    d = min(l1)\n    e = min(l2)\n    for j in range(n):\n        a = l1[j] - d\n        b = l2[j] - e\n        c = c + max(a, b)\n    print(c)", "n = int(input())\nfor i in range(n):\n    s = 0\n    a = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    p = min(x)\n    q = min(y)\n    for i in range(a):\n        if x[i] > p or y[i] > q:\n            s = s + max(x[i] - p, y[i] - q)\n    print(s)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    ma = min(a)\n    mb = min(b)\n    res = 0\n    for i in range(n):\n        res += max(a[i] - ma, b[i] - mb)\n    print(res)", "for i in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    (x, y) = (min(a), min(b))\n    d = 0\n    for j in range(n):\n        d += max(abs(a[j] - x), abs(b[j] - y))\n    print(d)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    move = []\n    min_a = min(a)\n    min_b = min(b)\n    i = 0\n    while i < n:\n        move.append(max(a[i] - min_a, b[i] - min_b))\n        i += 1\n    print(sum(move))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ma = min(a)\n    mb = min(b)\n    answer = sum((max(a[i] - ma, b[i] - mb) for i in range(n)))\n    print(answer)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ma = min(a)\n    mb = min(b)\n    ans = 0\n    for j in range(n):\n        ans = ans + max(a[j] - ma, b[j] - mb)\n    print(ans)", "for _ in range(int(input())):\n    length = int(input())\n    a = tuple((int(i) for i in input().split()))\n    b = tuple((int(i) for i in input().split()))\n    min_a = min(a)\n    min_b = min(b)\n    total = 0\n    for i in range(length):\n        x = a[i] - min_a\n        y = b[i] - min_b\n        total += max(x, y)\n    print(total)", "def hod():\n    n = int(input())\n    konfet = [int(a) for a in input().split()]\n    apelsin = [int(a) for a in input().split()]\n    mink = min(konfet)\n    mina = min(apelsin)\n    h = 0\n    for i in range(n):\n        k1 = konfet[i]\n        a1 = apelsin[i]\n        h += max(k1 - mink, a1 - mina)\n    print(h)\nfor i in range(int(input())):\n    hod()", "def hod(k, m):\n    h = 0\n    min_k = min(k)\n    min_m = min(m)\n    for n in range(a):\n        f = k[n] - min_k\n        c = m[n] - min_m\n        h += max(f, c)\n    print(h)\nt = int(input())\nfor i in range(t):\n    a = int(input())\n    k = [int(j) for j in input().split()]\n    m = [int(j) for j in input().split()]\n    hod(k, m)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a_m = min(a)\n    b_m = min(b)\n    a = [x - a_m for x in a]\n    b = [x - b_m for x in b]\n    result = 0\n    for (x, y) in zip(a, b):\n        result += x + y - min(x, y)\n    print(result)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    m1 = min(l1)\n    m2 = min(l2)\n    moves = 0\n    for j in range(n):\n        if l1[j] - m1 > l2[j] - m2:\n            moves += l1[j] - m1\n        elif l1[j] - m1 < l2[j] - m2:\n            moves += l2[j] - m2\n        else:\n            moves += l1[j] - m1\n    print(moves)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    min_a = min(a)\n    min_b = min(b)\n    steps_a = 0\n    steps_b = 0\n    steps = 0\n    i = 0\n    while i < n:\n        steps_a = a[i] - min_a\n        steps_b = b[i] - min_b\n        steps += max(steps_a, steps_b)\n        i += 1\n    print(steps)", "def anpassung(liste_a, liste_b):\n    min_a = min(liste_a)\n    min_b = min(liste_b)\n    schritte_a = [liste_a[i] - min_a for i in range(len(liste_a))]\n    schritte_b = [liste_b[i] - min_b for i in range(len(liste_b))]\n    schritte = [max(schritte_a[i], schritte_b[i]) for i in range(len(liste_a))]\n    print(sum(schritte))\ntests = int(input())\nfor i in range(tests):\n    length = int(input())\n    anpassung(list(map(int, input().split(' '))), list(map(int, input().split(' '))))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    lowestNumA = min(a)\n    lowestNumB = min(b)\n    a = [i - lowestNumA for i in a]\n    b = [i - lowestNumB for i in b]\n    answer = 0\n    for j in range(n):\n        answer += max(a[j], b[j])\n    print(answer)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    b = list(map(int, input().split(' ')))\n    a_min = min(a)\n    b_min = min(b)\n    cnt = 0\n    for j in range(n):\n        cnt += max(a[j] - a_min, b[j] - b_min)\n    print(cnt)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = 0\n    m1 = min(a)\n    m2 = min(b)\n    for i in range(n):\n        d1 = a[i] - m1\n        d2 = b[i] - m2\n        if d1 == 0 and d2 != 0:\n            c += d2\n        elif d1 != 0 and d2 == 0:\n            c += d1\n        else:\n            c += min(d1, d2)\n            c += abs(d1 - d2)\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    candyLeast = min(a)\n    orangeLeast = min(b)\n    moves = 0\n    i = 0\n    while i < n:\n        candy = a[i] - candyLeast\n        orange = b[i] - orangeLeast\n        moves += abs(candy - orange) + min(candy, orange)\n        i += 1\n    print(moves)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = min(a)\n    y = min(b)\n    c = 0\n    for i in range(n):\n        c += max(a[i] - x, b[i] - y)\n    print(c)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ma = min(a)\n    mb = min(b)\n    c = 0\n    for i in range(n):\n        d1 = a[i] - ma\n        d2 = b[i] - mb\n        c += max(d1, d2)\n    print(c)", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ma = min(a)\n    mb = min(b)\n    count = 0\n    for i in range(n):\n        d1 = a[i] - ma\n        d2 = b[i] - mb\n        sf = min(d2, d1)\n        count += sf\n        d1 -= sf\n        d2 -= sf\n        count += d1 + d2\n    print(count)", "try:\n    t = int(input())\n    while t:\n        counter = 0\n        length = int(input())\n        candies = list(map(int, input().split()))\n        oranges = list(map(int, input().split()))\n        min_candies = min(candies)\n        min_oranges = min(oranges)\n        for i in range(length):\n            if candies[i] - min_candies == oranges[i] - min_oranges:\n                counter += candies[i] - min_candies\n            else:\n                counter += max(candies[i] - min_candies, oranges[i] - min_oranges)\n        print(counter)\n        t -= 1\nexcept EOFError:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    min_a = min(a)\n    min_b = min(b)\n    d1 = 0\n    d2 = 0\n    total = 0\n    for i in range(n):\n        d1 = a[i] - min_a\n        d2 = b[i] - min_b\n        total += max(d1, d2)\n    print(total)", "s = input()\nwhile True:\n    try:\n        t = int(input())\n        t1 = list(map(int, input().split(' ')))\n        t2 = list(map(int, input().split(' ')))\n        m1 = min(t1)\n        m2 = min(t2)\n        l = 0\n        for i in range(t):\n            if t1[i] > m1 and t2[i] > m2:\n                c1 = t1[i] - m1\n                c2 = t2[i] - m2\n                l += min(c1, c2) + abs(c1 - c2)\n            elif t1[i] > m1:\n                l += t1[i] - m1\n            elif t2[i] > m2:\n                l += t2[i] - m2\n        print(l)\n    except:\n        break", "import sys\nT = int(sys.stdin.readline())\nfor i in range(T):\n    N = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    b = list(map(int, sys.stdin.readline().split()))\n    test_a = []\n    test_b = []\n    a_min = min(a)\n    b_min = min(b)\n    count = 0\n    for j in range(N):\n        test_a.append(a[j] - a_min)\n        test_b.append(b[j] - b_min)\n    for k in zip(test_a, test_b):\n        if min(k) == 0:\n            count += max(k)\n        else:\n            count += max(k)\n    print(count)", "import sys\nT = int(sys.stdin.readline())\nfor i in range(T):\n    N = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    b = list(map(int, sys.stdin.readline().split()))\n    test_a = []\n    test_b = []\n    a_min = min(a)\n    b_min = min(b)\n    count = 0\n    for j in range(N):\n        test_a.append(a[j] - a_min)\n        test_b.append(b[j] - b_min)\n    for k in zip(test_a, test_b):\n        count += max(k)\n    print(count)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    min_a = min(a)\n    min_b = min(b)\n    count = 0\n    for j in range(n):\n        count += max(a[j] - min_a, b[j] - min_b)\n    print(count)", "t = int(input())\nans = 0\nfor i in range(t):\n    n = int(input())\n    a = [int(j) for j in input().split()]\n    b = [int(j) for j in input().split()]\n    ma = min(a)\n    mb = min(b)\n    for k in range(n):\n        if a[k] > ma and b[k] > mb:\n            mx = max(a[k] - ma, b[k] - mb)\n            ans += mx\n        elif a[k] > ma:\n            ans += a[k] - ma\n        elif b[k] > mb:\n            ans += b[k] - mb\n    print(ans)\n    ans = 0", "n = int(input())\nfor _ in range(n):\n    n1 = int(input())\n    nums1 = list(map(int, input().split()))\n    nums2 = list(map(int, input().split()))\n    min1 = min(nums1)\n    min2 = min(nums2)\n    res = 0\n    for i in range(n1):\n        res += min(min1 - nums1[i], min2 - nums2[i])\n    print(-res)", "t = int(input())\n\ndef calc(A, B):\n    min_a = min(A)\n    min_b = min(B)\n    c = 0\n    for i in range(len(A)):\n        (a, b) = (A[i], B[i])\n        (dif_a, dif_b) = (a - min_a, b - min_b)\n        c += max(dif_a, dif_b)\n    return c\nfor i in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    print(calc(A, B))"]