["import string\nlett = string.ascii_lowercase\n\ndef isAlf(ss):\n    start = ss.find('a')\n    if start == -1:\n        return False\n    n = len(ss)\n    if n == 1:\n        return True\n    l = start - 1\n    r = start + 1\n    ll = 1\n    for i in range(1, 26):\n        if l < 0 and r >= n:\n            break\n        if l >= 0 and lett[ll] == ss[l]:\n            l -= 1\n            ll += 1\n            continue\n        if r < n and lett[ll] == ss[r]:\n            r += 1\n            ll += 1\n            continue\n        return False\n    return True\n\ndef main(input, print):\n    toPrint = []\n    t = int(input())\n    for i in range(t):\n        ss = input().strip()\n        r = isAlf(ss)\n        if r:\n            toPrint.append('YES')\n        else:\n            toPrint.append('NO')\n    print('\\n'.join(toPrint))\nmain(input, print)", "import sys\n\ndef yes():\n    print('YES')\n\ndef no():\n    print('NO')\n\ndef isinc(string):\n    t = list(string)\n    if t == sorted(t):\n        return True\n    return False\n\ndef isdec(string):\n    t = list(string)\n    if t == sorted(t, reverse=True):\n        return True\n    return False\nL = 'abcdefghijklmnopqrstuvwxyz'\nfor _ in range(int(input())):\n    s = sys.stdin.readline().strip()\n    if set(list(s)) != set(list(L[:len(s)])):\n        no()\n        continue\n    y = s.index('a')\n    if y == 0:\n        if isinc(s[1:]):\n            yes()\n            continue\n        else:\n            no()\n            continue\n    elif y == len(s) - 1:\n        if isdec(s[:-1]):\n            yes()\n            continue\n        else:\n            no()\n            continue\n    else:\n        s1 = s[:y]\n        s2 = s[y + 1:]\n        if not isinc(s2):\n            no()\n            continue\n        if not isdec(s1):\n            no()\n            continue\n        yes()\n        continue", "from sys import *\ninput = lambda : stdin.readline()\nint_arr = lambda : list(map(int, stdin.readline().strip().split()))\nstr_arr = lambda : list(map(str, stdin.readline().split()))\nget_str = lambda : map(str, stdin.readline().strip().split())\nget_int = lambda : map(int, stdin.readline().strip().split())\nget_float = lambda : map(float, stdin.readline().strip().split())\nmod = 1000000007\nsetrecursionlimit(1000)\nlst = list('abcdefghijklmnopqrstuvwxyz')\n\ndef ans(s):\n    ind = {}\n    n = len(s)\n    for i in range(n):\n        ind[s[i]] = i\n    if n == 1 and s[0] == 'a':\n        print('YES')\n        return\n    arr = lst[:n]\n    if 'a' in s:\n        (l, r) = (ind[arr[0]] - 1, ind[arr[0]] + 1)\n        for i in arr[1:]:\n            if i in ind:\n                if ind[i] == l:\n                    l -= 1\n                elif ind[i] == r:\n                    r += 1\n                else:\n                    print('NO')\n                    return\n            else:\n                print('NO')\n                return\n        print('YES')\n        return\n    else:\n        print('NO')\n        return\nfor _ in range(int(input())):\n    s = str(input())[:-1]\n    ans(s)", "def letter_for(i):\n    return chr(i + ord('a'))\n\ndef solve(s: str) -> bool:\n    start = 0\n    end = len(s) - 1\n    looking_for = len(s) - 1\n    target = letter_for(looking_for)\n    while start <= end:\n        if start == end and s[start] == target == 'a':\n            return 'YES'\n        if s[start] == target:\n            looking_for -= 1\n            target = letter_for(looking_for)\n            start += 1\n        elif s[end] == target:\n            looking_for -= 1\n            target = letter_for(looking_for)\n            end -= 1\n        else:\n            return 'NO'\n    return 'NO'\n\ndef main():\n    import sys\n    test_cases = int(sys.stdin.readline().strip())\n    for _ in range(test_cases):\n        line = sys.stdin.readline().strip()\n        print(solve(line))\nmain()", "from sys import stdin\n\ndef main():\n    cases = int(stdin.readline().strip())\n    for _ in range(cases):\n        S = stdin.readline().strip()\n        N = len(S)\n        ans = True\n        a = 0\n        while a < N and S[a] != 'a':\n            a += 1\n        if a == N:\n            ans = False\n        (l, r, char) = (a - 1, a + 1, 98)\n        while ans and (l >= 0 or r < N):\n            if l >= 0 and S[l] == chr(char):\n                l -= 1\n            elif r < N and S[r] == chr(char):\n                r += 1\n            else:\n                ans = False\n            char += 1\n        print('YES' if ans else 'NO')\nmain()", "import sys\nfrom string import ascii_lowercase as alph\ninput = sys.stdin.readline\n\ndef print(*args, end='\\n', sep=' '):\n    sys.stdout.write(sep.join(map(str, args)) + end)\n\ndef solve():\n    s = input().strip()\n    i = len(s) - 1\n    right = i\n    left = 0\n    while i >= 0:\n        if alph[i] == s[left]:\n            left += 1\n        elif alph[i] == s[right]:\n            right -= 1\n        else:\n            print('NO')\n            break\n        i -= 1\n    else:\n        print('YES')\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "import math, string, itertools, fractions, heapq, collections, re, array, bisect, sys, random, time\ninf = 10 ** 20\nmod = 10 ** 9 + 7\n\ndef LI():\n    return list(map(int, input().split()))\n\ndef II():\n    return int(input())\n\ndef LS():\n    return list(input().split())\n\ndef S():\n    return input()\n\ndef solve():\n    s = S()\n    ans = 'YES'\n    n = len(s)\n    l = 0\n    r = n - 1\n    a2x = string.ascii_lowercase[:n]\n    for c in a2x[::-1]:\n        if s[l] == c:\n            l += 1\n        elif s[r] == c:\n            r -= 1\n        else:\n            return 'NO'\n    return ans\n\ndef main():\n    t = II()\n    res = list()\n    for _ in range(t):\n        res.append(solve())\n    for ans in res:\n        print(ans)\n    return 0\nmain()", "for j in range(0, int(input())):\n    s = input()\n    ans = 'YES'\n    l = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n    l1 = list(s)\n    l1.sort()\n    if l[0:len(s)] != l1:\n        ans = 'NO'\n    else:\n        for i in range(0, s.index('a') - 1):\n            if s[i] < s[i + 1]:\n                ans = 'NO'\n                break\n        for x in range(s.index('a') + 1, len(s) - 1):\n            if s[x] > s[x + 1]:\n                ans = 'NO'\n                break\n    print(ans)", "import sys\ninput = lambda : sys.stdin.readline()\nmod = 1000000007\n\ndef solve(s):\n    if len(set(s)) != len(s):\n        print('NO')\n        return\n    n = len(s)\n    al = 'abcdefghijklmnopqrstuvwxyz'\n    d = {}\n    for i in range(len(s)):\n        d[s[i]] = i\n    if n == 1 and s[0] == 'a':\n        print('YES')\n        return\n    ss = al[:len(s)]\n    if 'a' in s:\n        (left, right) = (d[ss[0]] - 1, d[ss[0]] + 1)\n        for i in ss[1:]:\n            if i in d:\n                if d[i] == left:\n                    left -= 1\n                elif d[i] == right:\n                    right += 1\n                else:\n                    print('NO')\n                    return\n            else:\n                print('NO')\n                return\n        print('YES')\n        return\n    else:\n        print('NO')\n        return\nfor _ in range(int(input())):\n    s = str(input())[:-1]\n    solve(s)", "import string\nt = int(input())\nfor _ in range(t):\n    s = input()\n    res = ''.join(sorted(s)) == string.ascii_lowercase[:len(s)]\n    if res:\n        (left, right) = s.split('a')\n        res = [*left] == sorted(left, reverse=True) and [*right] == sorted(right)\n    res = 'YES' if res else 'NO'\n    print(res)", "for _ in [0] * int(input()):\n    s = list(input())\n    if 'a' not in s or len(s) != len(set(s)) or ord(max(s)) - 96 != len(s):\n        print('NO')\n    else:\n        index = s.index('a')\n        k = len(s)\n        print('NYOE S'[s[:index] == sorted(s[:index], reverse=True) and s[index:] == sorted(s[index:])::2])", "def exe():\n    n = len(s)\n    if 'a' not in s:\n        return 'NO'\n    ia = s.index('a')\n    i = ia - 1\n    j = ia + 1\n    p = ord('a')\n    flag = 0\n    while i != -1 or j != n:\n        p += 1\n        if i != -1 and s[i] == chr(p):\n            i -= 1\n        elif j != n and s[j] == chr(p):\n            j += 1\n        else:\n            flag = 1\n            break\n    if flag == 0:\n        return 'YES'\n    else:\n        return 'NO'\nfor i in range(int(input())):\n    s = input()\n    print(exe())", "import string\nt = int(input())\nfor _ in range(t):\n    s = input()\n    res = ''.join(sorted(s)) == string.ascii_lowercase[:len(s)]\n    if res:\n        (left, right) = s.split('a')\n        res = [*left] == sorted(left, reverse=True) and [*right] == sorted(right)\n    res = 'YES' if res else 'NO'\n    print(res)", "def solution(s):\n    l = s.find('a')\n    if l == -1:\n        return 'NO'\n    (l, r) = (l - 1, l + 1)\n    curr = ord('a')\n    while l > -1 or r < len(s):\n        curr += 1\n        if l > -1 and curr == ord(s[l]):\n            l -= 1\n        elif r < len(s) and curr == ord(s[r]):\n            r += 1\n        else:\n            return 'NO'\n    return 'YES'\nn = int(input())\nfor i in range(n):\n    s = input()\n    print(solution(s))", "alph = 'abcdefghijklmnopqrstuvwxyz'\nt = int(input())\nS = [''] * t\nA = ['NO'] * t\nfor i in range(t):\n    S[i] = input()\nfor i in range(t):\n    is_alph = True\n    s = S[i]\n    for j in reversed(range(len(s))):\n        if s[0] == alph[j]:\n            s = s[1:]\n        elif s[-1] == alph[j]:\n            s = s[:-1]\n        else:\n            is_alph = False\n    if is_alph:\n        A[i] = 'YES'\nfor i in range(t):\n    print(A[i])", "def main():\n    import sys\n    input = sys.stdin.readline\n    M = int(1000000000.0 + 7)\n    for _ in range(int(input())):\n        q = input().strip()\n        s = list(q)\n        l = len(s)\n        f = 0\n        i = 0\n        while len(s) > 0:\n            x = chr(96 + l - i)\n            if s[0] != x and s[-1] != x:\n                f = 1\n                break\n            elif s[0] == x:\n                s.pop(0)\n            else:\n                s.pop()\n            i += 1\n        if f:\n            print('NO')\n        else:\n            print('YES')\nmain()", "alpha = 'abcdefghijklmnopqrstuvwxyz'\n\ndef solve(s):\n    n = len(s)\n    if n == 1:\n        return s[0] == 'a'\n    st = -1\n    for i in range(n):\n        if s[i] == 'a':\n            st = i\n            break\n    if st == -1:\n        return False\n    (i, j) = (st - 1, st + 1)\n    k = 1\n    while True:\n        if i >= 0 and s[i] == alpha[k]:\n            i = i - 1\n        elif j <= n - 1 and s[j] == alpha[k]:\n            j = j + 1\n        else:\n            if i < 0 and j >= n:\n                return True\n            return False\n        k = k + 1\nfor _ in range(int(input())):\n    s = input()\n    if solve(s):\n        print('YES')\n    else:\n        print('NO')", "def solve():\n    k = 'bcdefghijklmnopqrstuvwxyz'\n    a = input()\n    n = len(a)\n    m = -1\n    for i in range(n):\n        if a[i] == 'a':\n            m = i\n            break\n    if m == -1:\n        print('NO')\n        return\n    (l, r) = (m - 1, m + 1)\n    for i in k:\n        if l >= 0 and a[l] == i:\n            l -= 1\n        elif r < n and a[r] == i:\n            r += 1\n        elif l == -1 and r == n:\n            print('YES')\n            return\n        else:\n            print('NO')\n            return\n    print('YES')\nt = int(input())\nwhile t:\n    solve()\n    t -= 1", "def alpha(st):\n    a1 = -1\n    for i in range(len(st)):\n        if st[i] == 'a':\n            a1 = i\n    if a1 == -1:\n        return 'NO'\n    x = a1 + 1\n    y = a1 - 1\n    for i in range(len(st) - 1):\n        if x <= len(st) - 1 and ord(st[x]) == 98 + i:\n            x += 1\n        elif y >= 0 and ord(st[y]) == 98 + i:\n            y = y - 1\n        else:\n            return 'NO'\n    return 'YES'\narr = []\nfor i in range(int(input())):\n    arr.append(alpha(input()))\nfor i in arr:\n    print(i)", "import sys\nfrom collections import deque\ninput = sys.stdin.readline\nalpha = [chr(i) for i in range(97, 123)]\nt = int(input())\nresults = []\nwhile t > 0:\n    t -= 1\n    input_s = input().rstrip()\n    string = deque([])\n    flag = True\n    for i in input_s:\n        string.append(i)\n    for i in range(len(input_s) - 1, -1, -1):\n        if string[0] == alpha[i]:\n            temp = string.popleft()\n        elif string[-1] == alpha[i]:\n            temp = string.pop()\n        else:\n            flag = False\n            break\n    if flag:\n        results.append('YES')\n    else:\n        results.append('NO')\nfor i in results:\n    print(i)", "def main():\n    for _ in range(int(input())):\n        s = input()\n        l = len(s)\n        fi = 0\n        se = l - 1\n        flag = 0\n        for i in range(l, 0, -1):\n            if chr(i + 96) == s[fi]:\n                fi += 1\n            elif chr(i + 96) == s[se]:\n                se -= 1\n            else:\n                flag = 1\n                break\n        print('NO' if flag == 1 else 'YES')\nmain()", "t = int(input())\nans = []\nabc = 'abcdefghijklmnopqrstuvwxyz'\nfor _ in range(t):\n    s = input()\n    n = len(s)\n    abc1 = abc[:n][::-1]\n    for i in range(n):\n        if s[0] == abc1[i]:\n            s = s[1:]\n        elif s[-1] == abc1[i]:\n            s = s[:-1]\n        else:\n            ans.append('NO')\n            break\n    else:\n        ans.append('YES')\nfor i in ans:\n    print(i)", "alpha = 'abcdefghijklmnopqrstuvwxyz'\n\ndef solve(s):\n    n = len(s)\n    if n == 1:\n        return s[0] == 'a'\n    st = -1\n    for i in range(n):\n        if s[i] == 'a':\n            st = i\n            break\n    if st == -1:\n        return False\n    (i, j) = (st - 1, st + 1)\n    k = 1\n    while True:\n        if i >= 0 and s[i] == alpha[k]:\n            i = i - 1\n        elif j <= n - 1 and s[j] == alpha[k]:\n            j = j + 1\n        else:\n            if i < 0 and j >= n:\n                return True\n            return False\n        k = k + 1\nfor _ in range(int(input())):\n    s = input()\n    if solve(s):\n        print('YES')\n    else:\n        print('NO')", "def ans():\n    s = input()\n    i = 0\n    j = len(s) - 1\n    for x in range(len(s) - 1, -1, -1):\n        c = chr(x + 97)\n        if c == s[i]:\n            i += 1\n            continue\n        if c == s[j]:\n            j -= 1\n            continue\n        print('NO')\n        return\n    print('YES')\nt = int(input())\nfor i in range(t):\n    ans()", "def check_string(s):\n    l = len(s)\n    max_char_ord = chr(ord('a') + l - 1)\n    present_chars = set()\n    prev_char = s[0]\n    up = False\n    for char in s:\n        if char > max_char_ord or char in present_chars or (char < prev_char and up):\n            return 'NO'\n        if char > prev_char:\n            up = True\n        present_chars.add(char)\n        prev_char = char\n    return 'YES'\nn_tests = int(input())\nfor _ in range(n_tests):\n    s = input().strip()\n    print(check_string(s))", "def main():\n    import sys\n    input = sys.stdin.readline\n    M = int(1000000000.0 + 7)\n    for _ in range(int(input())):\n        q = input().strip()\n        s = list(q)\n        l = len(s)\n        f = 0\n        i = 0\n        while len(s) > 0:\n            x = chr(96 + l - i)\n            if s[0] != x and s[-1] != x:\n                f = 1\n                break\n            elif s[0] == x:\n                s.pop(0)\n            else:\n                s.pop()\n            i += 1\n        if f:\n            print('NO')\n        else:\n            print('YES')\nmain()", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    s = sys.stdin.readline()\n    s = s.replace('\\n', '')\n    arr = [c for c in s]\n    alphabet = '_abcdefghijklmnopqrstuvwxyz'\n    j = len(s)\n    flag = True\n    while j >= 1:\n        if arr[0] == alphabet[j]:\n            arr.pop(0)\n            j -= 1\n            continue\n        elif arr[-1] == alphabet[j]:\n            arr.pop(-1)\n            j -= 1\n            continue\n        else:\n            flag = False\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "def main():\n    import sys\n    input = sys.stdin.readline\n    M = int(1000000000.0 + 7)\n    for _ in range(int(input())):\n        q = input().strip()\n        s = list(q)\n        l = len(s)\n        f = 0\n        i = 0\n        while len(s) > 0:\n            x = chr(96 + l - i)\n            if s[0] != x and s[-1] != x:\n                f = 1\n                break\n            elif s[0] == x:\n                s.pop(0)\n            else:\n                s.pop()\n            i += 1\n        if f:\n            print('NO')\n        else:\n            print('YES')\nmain()", "def isalpha(s):\n    start = 0\n    end = len(s) - 1\n    t = len(s) + 96\n    while start <= end:\n        if s[start] == chr(t):\n            start += 1\n            t -= 1\n        elif s[end] == chr(t):\n            end -= 1\n            t -= 1\n        else:\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor i in range(t):\n    s = input()\n    print(isalpha(s))", "n = int(input())\n\ndef alg(s):\n    length = len(s)\n    ch_id = 97\n    f = False\n    for i in range(length):\n        if s[i] == chr(ch_id):\n            l = i - 1\n            r = i + 1\n            f = True\n            break\n    if not f:\n        return False\n    for i in range(length):\n        ch_id += 1\n        if l >= 0 and s[l] == chr(ch_id):\n            l -= 1\n            continue\n        if r < length and s[r] == chr(ch_id):\n            r += 1\n            continue\n        if l < 0 and r == length:\n            return True\n        return False\nfor i in range(n):\n    s = input()\n    print('YES' if alg(s) else 'NO')\na = 13.54", "def solve():\n    s = input()\n    n = len(s)\n    (l, r) = (0, n - 1)\n    flag = False\n    for i in range(n, 0, -1):\n        if chr(i + 96) == s[l]:\n            l += 1\n        elif chr(i + 96) == s[r]:\n            r -= 1\n        else:\n            flag = True\n    if not flag:\n        return 'YES'\n    else:\n        return 'NO'\nt = int(input())\nwhile t:\n    print(solve())\n    t -= 1", "def solve(s, n):\n    idx = -1\n    for i in range(n):\n        if s[i] == 'a':\n            idx = i\n            break\n    if idx == -1:\n        print('NO')\n        return\n    L = idx\n    R = idx\n    ch = 'b'\n    while L != 0 or R != n - 1:\n        if L > 0 and s[L - 1] == ch:\n            L -= 1\n        elif R < n - 1 and s[R + 1] == ch:\n            R += 1\n        else:\n            break\n        ch = chr(ord(ch) + 1)\n    if L == 0 and R == n - 1:\n        print('YES')\n    else:\n        print('NO')\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    solve(s, n)", "(YES, NO) = ('YES', 'NO')\n\ndef solve(s):\n    if 'a' not in s:\n        return NO\n    sl = list(s)\n    (l, r) = (sl.index('a') - 1, sl.index('a') + 1)\n    i = 'b'\n    while l >= 0 and r < len(sl):\n        if sl[l] == i:\n            l -= 1\n            i = chr(ord(i) + 1)\n        elif sl[r] == i:\n            r += 1\n            i = chr(ord(i) + 1)\n        else:\n            return NO\n    if ord(i) > ord('z'):\n        return YES\n    while l >= 0:\n        if sl[l] != i:\n            return NO\n        else:\n            i = chr(ord(i) + 1)\n            l -= 1\n    while r < len(sl):\n        if sl[r] != i:\n            return NO\n        else:\n            i = chr(ord(i) + 1)\n            r += 1\n    return YES\ntc = int(input())\nfor _ in range(tc):\n    s = input()\n    print(solve(s))", "for s in [*open(0)][1:]:\n    i = 0\n    j = len(s)\n    while (j := (j - 1)) and (c := chr(96 + j)) in (s[i], s[i + j - 1]):\n        i += c == s[i]\n    print('YNEOS'[j > 0::2])", "def main():\n    for _ in range(int(input())):\n        a = input()\n        n = len(a)\n        if 'a' in a:\n            i = a.find('a')\n            (l, r) = (i - 1, i + 1)\n            nexte = 'b'\n            f = True\n            while l >= 0 and r < n:\n                if l >= 0 and a[l] == nexte:\n                    nexte = chr(1 + ord(nexte))\n                    l -= 1\n                elif r < n and a[r] == nexte:\n                    nexte = chr(1 + ord(nexte))\n                    r += 1\n                else:\n                    f = False\n                    break\n            while l >= 0:\n                if l >= 0 and a[l] == nexte:\n                    nexte = chr(1 + ord(nexte))\n                    l -= 1\n                else:\n                    f = False\n                    break\n            while r < n:\n                if r < n and a[r] == nexte:\n                    nexte = chr(1 + ord(nexte))\n                    r += 1\n                else:\n                    f = False\n                    break\n            if f:\n                print('YES')\n            else:\n                print('NO')\n        else:\n            print('NO')\nmain()", "from collections import deque\nimport sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    s = deque(input().rstrip())\n    n = len(s)\n    flg = True\n    for i in range(n - 1, -1, -1):\n        temp = chr(i + ord('a'))\n        if s[0] == temp:\n            s.popleft()\n        elif s[-1] == temp:\n            s.pop()\n        else:\n            flg = False\n            break\n    if flg:\n        print('YES')\n    else:\n        print('NO')", "def is_alphabetical(s):\n    pos_a = s.find('a')\n    if pos_a == -1:\n        return 'NO'\n    left_cursor = pos_a - 1\n    right_cursor = pos_a + 1\n    for i in range(1, len(s)):\n        target = chr(97 + i)\n        if left_cursor >= 0 and s[left_cursor] == target:\n            left_cursor -= 1\n            continue\n        if right_cursor < len(s) and s[right_cursor] == target:\n            right_cursor += 1\n            continue\n        return 'NO'\n    return 'YES'\nimport sys\nT = int(input())\nwhile T:\n    s = input()\n    print(is_alphabetical(s))\n    T -= 1", "t = int(input())\nfor _ in range(t):\n    s = [i for i in input()]\n    flag = True\n    letters = [chr(i) for i in range(len(s) + 96, 96, -1)]\n    for i in range(len(letters)):\n        if letters[i] == s[0]:\n            s.pop(0)\n            continue\n        if letters[i] == s[-1]:\n            s.pop()\n            continue\n        else:\n            flag = False\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    string = input().strip()\n    alphabets = 'abcdefghijklmnopqrstuvwxyz'\n    x = len(string)\n    i = 0\n    j = x - 1\n    k = x - 1\n    flag = 1\n    while i <= j and k >= 0:\n        if string[i] == alphabets[k]:\n            i += 1\n        elif string[j] == alphabets[k]:\n            j -= 1\n        else:\n            flag = 0\n            break\n        k -= 1\n    print('YES' if flag == 1 else 'NO')", "for _ in range(int(input())):\n    s = str(input())\n    lst = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n    p = len(s)\n    s = list(s)\n    ans = 'YES'\n    for i in range(p - 1, -1, -1):\n        if s[0] == lst[i]:\n            s = s[1:]\n        elif s[-1] == lst[i]:\n            s = s[:-1]\n        else:\n            ans = 'NO'\n            break\n    print(ans)", "for s in [*open(0)][1:]:\n    i = 0\n    j = len(s)\n    while (j := (j - 1)) and (c := chr(96 + j)) in (s[i], s[i + j - 1]):\n        i += c == s[i]\n    print('YNEOS'[j > 0::2])", "for _ in range(int(input())):\n    s = list(input())\n    a = [chr(97 + i) for i in range(len(s))]\n    sol = 'YES'\n    for i in a[::-1]:\n        if s[0] == i:\n            s.pop(0)\n        elif s[-1] == i:\n            s.pop()\n        else:\n            sol = 'NO'\n    print(sol)", "alph = 'abcdefghijklmnopqrstuvwxyz'\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    sti = n - 1\n    flg = 0\n    while len(s) > 0:\n        if s[0] == alph[sti]:\n            s = s[1:]\n            sti -= 1\n        elif s[-1] == alph[sti]:\n            s = s[:-1]\n            sti -= 1\n        else:\n            flg = 1\n            break\n    if flg == 0:\n        print('YES')\n    else:\n        print('NO')", "def f(s):\n    alph = 'abcdefghijklmnopqrstuvwxyz'\n    if 'a' not in s:\n        return 'NO'\n    else:\n        pivot = s.find('a')\n        l = pivot - 1\n        r = pivot + 1\n        i = 1\n        while i <= len(s) - 1:\n            k = 0\n            if s[l] == alph[i] and l > -1:\n                k = 1\n                l -= 1\n                i += 1\n            elif s[r % len(s)] == alph[i] and r < len(s):\n                k = 1\n                r += 1\n                i += 1\n            if k == 0:\n                return 'NO'\n        return 'YES'\nn = int(input())\nfor i in range(n):\n    s = input()\n    print(f(s))", "for s in [*open(0)][1:]:\n    i = 0\n    j = len(s)\n    while (j := (j - 1)) and (c := chr(96 + j)) in (s[i], s[i + j - 1]):\n        i += c == s[i]\n    print('YNEOS'[j > 0::2])", "for i in range(int(input())):\n    a = input()\n    (m, n, z) = (0, len(a) - 1, 0)\n    for j in range(len(a) + 96, 96, -1):\n        if a[m] == chr(j):\n            m += 1\n        elif a[n] == chr(j):\n            n -= 1\n        else:\n            z = 1\n    print('YNEOS'[z::2])", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    string = sys.stdin.readline().rstrip()\n    n = len(string)\n    st = -1\n    answer = 'NO'\n    for i in range(n):\n        if string[i] == 'a':\n            st = i\n            break\n    if st != -1:\n        answer = 'YES'\n        (l, r) = (st - 1, st + 1)\n        alpha = ord('b')\n        for _ in range(n - 1):\n            if l >= 0:\n                if string[l] == chr(alpha):\n                    l -= 1\n                    alpha += 1\n                elif r < n:\n                    if string[r] == chr(alpha):\n                        r += 1\n                        alpha += 1\n                    else:\n                        answer = 'NO'\n                else:\n                    answer = 'NO'\n            elif r < n:\n                if string[r] == chr(alpha):\n                    r += 1\n                    alpha += 1\n                else:\n                    answer = 'NO'\n            else:\n                answer = 'NO'\n    print(answer)", "def calc():\n    s = input()\n    n = len(s)\n    a_pos = -1\n    for i in range(n):\n        if s[i] == 'a':\n            a_pos = i\n            break\n    if a_pos == -1:\n        print('NO')\n        return\n    l = a_pos - 1\n    r = a_pos + 1\n    while l >= 0 or r < n:\n        if l >= 0 and ord(s[l]) == ord(s[a_pos]) + 1:\n            a_pos = l\n            l -= 1\n        elif r < n and ord(s[r]) == ord(s[a_pos]) + 1:\n            a_pos = r\n            r += 1\n        elif l == -1 and r == n:\n            print('YES')\n            return\n        else:\n            print('NO')\n            return\n    print('YES')\nt = int(input())\nfor _i in range(t):\n    calc()", "from string import ascii_lowercase\nt = int(input())\nfor i in range(t):\n    s = input().rstrip()\n    (l, r) = (0, len(s) - 1)\n    ok = True\n    for c in ascii_lowercase[:len(s)][::-1]:\n        if s[l] == c:\n            l += 1\n        elif s[r] == c:\n            r -= 1\n        else:\n            ok = False\n            break\n    if ok:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    s = input()\n    x = 97\n    c = 0\n    for i in range(len(s)):\n        if chr(x) in s:\n            c = c + 1\n            x = x + 1\n    if c == len(s):\n        y = s.index('a')\n        p = list(s[:y])\n        l = list(s[y + 1:])\n        p = p[::-1]\n        if len(p) == 0 and len(l) == 0:\n            print('YES')\n        elif len(p) == 0 and len(l) > 0:\n            if l == sorted(l):\n                print('YES')\n            else:\n                print('NO')\n        elif len(p) >= 0 and len(l) == 0:\n            if p == sorted(p):\n                print('YES')\n            else:\n                print('NO')\n        elif p == sorted(p) and l == sorted(l):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = input()\n    c = s[:]\n    s = ''.join(sorted(s))\n    if 'abcdefghijklmnopqrstuvwxyz'[:len(s)] == s:\n        d = c.index('a')\n        l = d - 1\n        j = d + 1\n        flag = True\n        for i in 'bcdefghijklmnopqrstuvwxyz'[:len(s) - 1]:\n            if l >= 0 and i == c[l]:\n                l -= 1\n            elif j < len(s) and i == c[j]:\n                j += 1\n            else:\n                flag = False\n                print('NO')\n                break\n        if flag:\n            print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = input()\n    l = list(s)\n    a = len(l)\n    for i in range(a, 0, -1):\n        if chr(i + 96) == l[0]:\n            l.pop(0)\n        elif chr(i + 96) == l[-1]:\n            l.pop()\n        else:\n            break\n    if len(l) > 0:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    s = list(input())\n    start = 0\n    end = len(s) - 1\n    flag = 0\n    for i in range(len(s), 0, -1):\n        z = chr(i + 96)\n        if z == s[start]:\n            start += 1\n        elif z == s[end]:\n            end -= 1\n        else:\n            flag = 1\n            break\n    if flag == 0:\n        print('YES')\n    else:\n        print('NO')", "for s in [*open(0)][1:]:\n    i = 0\n    j = k = len(s) - 1\n    while k and (c := chr(96 + k)) in (s[i], s[j - 1]):\n        if c == s[i]:\n            i += 1\n        else:\n            j -= 1\n        k -= 1\n    print('YNEOS'[k > 0::2])", "def alpha(s):\n    if 'a' not in s:\n        return 'NO'\n    else:\n        l = s.index('a')\n    r = l\n    for i in range(1, len(s)):\n        if l >= 1 and s[l - 1] == chr(ord('a') + i):\n            l -= 1\n        elif r <= len(s) - 2 and s[r + 1] == chr(ord('a') + i):\n            r += 1\n        else:\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor _ in range(t):\n    s = input()\n    print(alpha(s))", "for _ in range(int(input())):\n    s = input().strip()\n    n = len(s)\n\n    def f():\n        i = -1\n        if n > 26:\n            return -1\n        for j in range(n):\n            if s[j] == 'a':\n                i = j\n                break\n        if i == -1:\n            return -1\n        j = i + 1\n        i = i - 1\n        t = 1\n        while i >= 0 or j < n:\n            if i >= 0:\n                if ord(s[i]) - ord('a') == t:\n                    i -= 1\n                    t += 1\n                    continue\n            if j < n:\n                if ord(s[j]) - ord('a') == t:\n                    j += 1\n                    t += 1\n                    continue\n            return -1\n        return 1\n    if f() == -1:\n        print('NO')\n    else:\n        print('YES')", "def solve():\n    s = [ord(x) - ord('a') for x in input()]\n    n = len(s) - 1\n    while s:\n        if s[0] == n:\n            s = s[1:]\n        elif s[-1] == n:\n            s = s[:-1]\n        else:\n            return False\n        n -= 1\n    return True\nfor _ in ' ' * int(input()):\n    print(('NO', 'YES')[solve()])", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    l = 0\n    r = n - 1\n    ans = 'YES'\n    for i in range(96 + n, 96, -1):\n        if chr(i) == s[l]:\n            l += 1\n        elif chr(i) == s[r]:\n            r -= 1\n        else:\n            ans = 'NO'\n            break\n    print(ans)", "import string\n\ndef solve(strng):\n    if 'a' not in strng:\n        return 'NO'\n    if len(strng) > 26:\n        return 'NO'\n    alphabet_string = string.ascii_lowercase\n    sorted_char = sorted(strng)\n    sortedstrng = ''.join(sorted_char)\n    if sortedstrng not in alphabet_string:\n        return 'NO'\n    increasing = False\n    for i in range(len(strng) - 1):\n        if strng[i] == 'a':\n            increasing = True\n        if increasing and strng[i] >= strng[i + 1]:\n            return 'NO'\n        elif not increasing and strng[i] <= strng[i + 1]:\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor m in range(t):\n    strng = input()\n    print(solve(strng))", "from sys import stdin\n\ndef main():\n    cases = int(stdin.readline().strip())\n    for i in range(cases):\n        S = stdin.readline().strip()\n        id_ = 0\n        find = 0\n        for i in range(len(S)):\n            if S[i] == 'a':\n                id_ = i\n                find = 1\n        (i, j) = (id_, id_)\n        ok = False\n        if find == 1:\n            ok = True\n        while ok and find < len(S):\n            if i - 1 >= 0 and S[i - 1] == chr(97 + find):\n                find += 1\n                i -= 1\n            elif j + 1 < len(S) and S[j + 1] == chr(97 + find):\n                find += 1\n                j += 1\n            else:\n                ok = False\n        if ok:\n            print('YES')\n        else:\n            print('NO')\nmain()", "for i in range(int(input())):\n    s = input()\n    l = len(s)\n    if s.count('a') == 0:\n        print('NO')\n        continue\n    a = s.index('a')\n    le = a\n    ri = a + 1\n    alp = 'abcdefghijklmnopqrstuvwxyz'\n    FL = True\n    for i in range(l):\n        if le >= 0 and s[le] == alp[i]:\n            le -= 1\n        elif ri < l and s[ri] == alp[i]:\n            ri += 1\n        else:\n            FL = False\n            break\n    print('YES' if FL else 'NO')", "for i in range(int(input())):\n    a = input()\n    (m, n, z) = (0, len(a) - 1, 0)\n    for j in range(len(a) + 96, 96, -1):\n        if a[m] == chr(j):\n            m += 1\n        elif a[n] == chr(j):\n            n -= 1\n        else:\n            z = 1\n    print('YNEOS'[z::2])", "for s in [*open(0)][1:]:\n    i = 0\n    j = len(s)\n    while (j := (j - 1)) and (c := chr(96 + j)) in (s[i], s[i + j - 1]):\n        i += c == s[i]\n    print('YNEOS'[j > 0::2])", "import string\n\ndef func(n, words_list):\n    letters_string = string.ascii_lowercase\n    target_list = []\n    for i in range(0, n, 1):\n        s = ''\n        s_right = ''\n        s_left = ''\n        target = 0\n        for j in range(0, len(letters_string), 1):\n            s_right = s + letters_string[j]\n            s_left = letters_string[j] + s\n            if s_right in words_list[i]:\n                s = s_right\n            elif s_left in words_list[i]:\n                s = s_left\n            else:\n                target = 'NO'\n                target_list.append(target)\n                break\n            if s == words_list[i]:\n                target = 'YES'\n                target_list.append(target)\n                break\n    return target_list\n\ndef main():\n    n = int(input())\n    words_list = []\n    for i in range(0, n, 1):\n        c = input()\n        words_list.append(c)\n    var = func(n, words_list)\n    for i in var:\n        print(i)\nmain()", "import math\nt = int(input())\nwhile t:\n    s = input()\n    l = len(s)\n    res = ''\n    flag = 0\n    m = ord('a') + l - 1\n    ch = chr(m)\n    i = 0\n    j = l - 1\n    while i <= j:\n        if s[i] == ch:\n            flag = 1\n            i += 1\n            m -= 1\n            ch = chr(m)\n        elif s[j] == ch:\n            flag = 1\n            j -= 1\n            m -= 1\n            ch = chr(m)\n        else:\n            flag = 0\n            break\n    if flag == 1 or (l == 1 and s == 'a'):\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "def check(s):\n    if len(s) != len(set(s)):\n        return False\n    n = len(s)\n    (i, j) = (0, n - 1)\n    cur = chr(97 + n - 1)\n    for _ in range(n):\n        if s[i] == cur:\n            i += 1\n        elif s[j] == cur:\n            j -= 1\n        else:\n            return False\n        cur = chr(ord(cur) - 1)\n    return True\nt = int(input())\nfor _ in range(t):\n    s = input()\n    print('YES' if check(s) else 'NO')", "def solve():\n    s = input()\n    while len(s) > 0:\n        if s[0] == chr(97 + len(s) - 1):\n            s = s[1:]\n            continue\n        if s[-1] == chr(97 + len(s) - 1):\n            s = s[:-1]\n            continue\n        print('NO')\n        return\n    print('YES')\nt = int(input())\nwhile t > 0:\n    solve()\n    t -= 1", "t = int(input())\nfor i in range(t):\n    s = input()\n    indl = 0\n    indr = len(s) - 1\n    f = True\n    for let in range(len(s) + ord('a') - 1, ord('a') - 1, -1):\n        if indl > indr:\n            f = False\n            break\n        elif s[indl] == chr(let):\n            indl += 1\n        elif s[indr] == chr(let):\n            indr -= 1\n        else:\n            f = False\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter as count\nfrom bisect import bisect\nimport sys\nfrom math import ceil, gcd\nfrom itertools import groupby\ninput = lambda : sys.stdin.readline().rstrip('\\r\\n')\nfor i in range(int(input())):\n    s = input()\n    a = s.find('a')\n    if a < 0 or len(s) > 26:\n        print('NO')\n        continue\n    i = j = a\n    i -= 1\n    j += 1\n    n = len(s)\n    k = 1\n    al = 'abcdefghijklmnopqrstuvwxyz'\n    while (i >= 0 or j < n) and k < n:\n        if i >= 0 and s[i] == al[k]:\n            i -= 1\n            k += 1\n        elif j < n and s[j] == al[k]:\n            j += 1\n            k += 1\n        else:\n            print('NO')\n            break\n    else:\n        print('YES')", "t = int(input())\nresults = []\nfor i in range(t):\n    s = input().lower()\n    if len(s) == 0:\n        results.append('YES')\n        continue\n    start = s.find('a')\n    if start == -1:\n        results.append('NO')\n        continue\n    current_before = start - 1\n    current_after = start + 1\n    for j in range(len(s) - 1):\n        index = s.find(chr(ord('a') + j + 1))\n        if index == -1:\n            results.append('NO')\n            break\n        if index == current_before:\n            current_before -= 1\n        elif index == current_after:\n            current_after += 1\n        else:\n            results.append('NO')\n            break\n    else:\n        results.append('YES')\nfor i in range(t):\n    print(results[i])", "def check(s):\n    letters = 'abcdefghijklmnopqrstuvwxyz'\n    l = []\n    if s.find(letters[0]) == -1:\n        return False\n    else:\n        l = [s.find(letters[0]), s.find(letters[0])]\n    for i in range(1, len(s)):\n        letter = letters[i]\n        if l[0] == 0:\n            if s[l[1] + 1] == letter:\n                l[1] += 1\n                continue\n            return False\n        elif l[1] == len(s) - 1:\n            if s[l[0] - 1] == letter:\n                l[0] -= 1\n                continue\n            return False\n        else:\n            if s[l[1] + 1] == letter:\n                l[1] += 1\n                continue\n            if s[l[0] - 1] == letter:\n                l[0] -= 1\n                continue\n            return False\n    return True\nn = int(input())\nfor i in range(n):\n    s = input()\n    print('YES' if check(s) else 'NO')", "t = int(input())\n\ndef solve(string):\n    n = len(string)\n    uniques = set(string)\n    if len(uniques) != n:\n        return False\n    alpha_pos = [ord(char) - ord('a') + 1 for char in string]\n    if max(alpha_pos) != n or min(alpha_pos) != 1:\n        return False\n    start_index = alpha_pos.index(1)\n    right_arr = alpha_pos[start_index:]\n    left_arr = alpha_pos[:start_index]\n    if sorted(right_arr) != right_arr or sorted(left_arr, reverse=True) != left_arr:\n        return False\n    return True\nfor _ in range(t):\n    string = input()\n    ans = solve(string)\n    print('YES' if ans else 'NO')", "t = int(input())\noutput = []\nfor i in range(t):\n    s = input()\n    if len(s) == 1:\n        if s == 'a':\n            output.append('YES')\n        else:\n            output.append('NO')\n    else:\n        right = len(s) - 1\n        left = 0\n        if ord(s[0]) > ord(s[-1]):\n            curr = 0\n        else:\n            curr = len(s) - 1\n        alph = True\n        while left <= right:\n            if left == right and s[curr] == 'a':\n                break\n            if curr == right:\n                if ord(s[curr]) == ord(s[right - 1]) + 1:\n                    curr = right - 1\n                elif ord(s[curr]) == ord(s[left]) + 1:\n                    curr = left\n                else:\n                    alph = False\n                    break\n                right = right - 1\n            else:\n                if ord(s[curr]) == ord(s[left + 1]) + 1:\n                    curr = left + 1\n                elif ord(s[curr]) == ord(s[right]) + 1:\n                    curr = right\n                else:\n                    alph = False\n                    break\n                left = left + 1\n        if alph:\n            output.append('YES')\n        else:\n            output.append('NO')\nfor out in output:\n    print(out)", "import sys\nt = int(input())\n\ndef ostacle(a, b, f):\n    if a[0] == b[0] or a[1] == b[1]:\n        if a[0] == b[0]:\n            check_index = 1\n        else:\n            check_index = 0\n        return f[1 - check_index] == a[1 - check_index] and (f[check_index] < a[check_index] and f[check_index] > b[check_index] or (f[check_index] > a[check_index] and f[check_index] < b[check_index]))\n    return False\nfor z in range(t):\n    try:\n        s = input()\n        l = len(s)\n        index = s.find('a')\n        if index != -1:\n            f = 1\n            r_index = index + 1\n            l_index = index - 1\n            for i in range(1, l):\n                if r_index < l and ord(s[r_index]) == 97 + i:\n                    r_index += 1\n                elif l_index >= 0 and ord(s[l_index]) == 97 + i:\n                    l_index -= 1\n                else:\n                    f = 0\n                    break\n            if f:\n                print('YES')\n            else:\n                print('NO')\n        else:\n            print('NO')\n    except ValueError as e:\n        pass", "def crawlArray(n, index, inc):\n    return ((index + inc) % n + n) % n\n\ndef solve(s):\n    n = len(s)\n    start = s.find('a')\n    if start == -1:\n        return False\n    cnt = 1\n    next_letter_to_check = 'b'\n    i = start\n    head = start\n    tail = start\n    while cnt < n:\n        new_head = head + 1\n        new_tail = tail - 1\n        if 0 <= new_head < n and s[new_head] == next_letter_to_check:\n            i = new_head\n            head += 1\n        elif 0 <= new_tail < n and s[new_tail] == next_letter_to_check:\n            i = new_tail\n            tail -= 1\n        else:\n            return False\n        next_letter_to_check = chr(ord(next_letter_to_check) + 1)\n        cnt += 1\n    return True\nt = int(input())\nfor _ in range(t):\n    s = input()\n    res = solve(s)\n    print('YES' if res else 'NO')", "al = 'abcdefghijklmnopqrstuvwxyz'\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    if 'a' in s:\n        p = q = s.index('a')\n    else:\n        print('NO')\n        continue\n    p = p - 1\n    q = q + 1\n    if p < 0:\n        p = 0\n    if q > n - 1:\n        q = n - 1\n    flag = True\n    for i in range(1, n):\n        if p >= 0 and s[p] == al[i]:\n            p = p - 1\n        elif q < n and s[q] == al[i]:\n            q = q + 1\n        else:\n            flag = False\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "for s in [*open(0)][1:]:\n    i = 0\n    j = len(s) - 1\n    while j and (c := chr(96 + j)) in (s[i], s[i + j - 1]):\n        i += c == s[i]\n        j -= 1\n    print('YNEOS'[j > 0::2])", "def F(s):\n    n = len(s)\n    L = 'abcdefghijklmnopqrstuvwxyz'\n    q = ''\n    Q = ''\n    for i in range(n):\n        q = q + L[i]\n        if q in s:\n            Q = Q + L[i]\n        else:\n            Q = L[i] + Q\n        q = Q\n    print('YES' if Q == s else 'NO')\nfor _ in range(int(input())):\n    s = input('')\n    F(s)", "for _ in range(int(input())):\n    s = input()\n    if sorted(s) != [chr(i + 97) for i in range(len(s))]:\n        print('NO')\n    elif sorted(s[s.index('a'):]) != list(s[s.index('a'):]) or sorted(s[:s.index('a')][::-1]) != list(s[:s.index('a')][::-1]):\n        print('NO')\n    else:\n        print('YES')", "def res():\n    st = input()\n    fin = st.find('a')\n    if fin == -1:\n        return 'NO'\n    else:\n        le = len(st)\n        i = 0\n        lp = fin\n        rp = fin\n        while i < le - 1:\n            qw = chr(98 + i)\n            if rp + 1 < le and st[rp + 1] == qw:\n                rp += 1\n            elif lp - 1 >= 0 and st[lp - 1] == qw:\n                lp -= 1\n            else:\n                return 'NO'\n                break\n            i += 1\n        return 'YES'\nfor i in range(int(input())):\n    print(res())", "def main():\n    s = 'abcdefghijklmnopqrstuvwxyz'\n    for _ in range(int(input())):\n        flag = False\n        a = [x for x in input()]\n        n = len(a) - 1\n        for i in reversed(range(n + 1)):\n            if s[i] == a[len(a) - 1]:\n                t = a.pop()\n            elif s[i] == a[0]:\n                t = a.pop(0)\n            else:\n                print('NO')\n                flag = True\n                break\n        if not flag:\n            if len(a) > 0:\n                print('NO')\n            else:\n                print('YES')\nmain()", "n = int(input())\nfull = 'abcdefghijklmnopqrstuvwxyz'\n\ndef is_alphabetical(s):\n    subs = ''\n    result = 'YES'\n    for i in range(0, len(s)):\n        s1 = subs + full[i]\n        s2 = full[i] + subs\n        if s1 in s:\n            subs = s1\n            continue\n        elif s2 in s:\n            subs = s2\n            continue\n        else:\n            result = 'NO'\n            break\n    return result\nfor i in range(n):\n    s = str(input())\n    print(is_alphabetical(s))", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    (l, r) = (n - 1, 0)\n    f = 0\n    for i in range(n, 0, -1):\n        if chr(i + 96) == s[l]:\n            l -= 1\n        elif chr(i + 96) == s[r]:\n            r += 1\n        else:\n            f = 1\n    if f == 0:\n        print('YES')\n    else:\n        print('NO')", "total = int(input())\nalpha = 'abcdefghijklmnopqrstuvwxyz'\nfor t in range(total):\n    string = input()\n    for i in range(len(string) - 1, -1, -1):\n        if string[0] == alpha[i]:\n            string = string[1:]\n        elif string[-1] == alpha[i]:\n            string = string[:-1]\n        else:\n            break\n    if len(string) == 0:\n        print('YES')\n    else:\n        print('NO')"]