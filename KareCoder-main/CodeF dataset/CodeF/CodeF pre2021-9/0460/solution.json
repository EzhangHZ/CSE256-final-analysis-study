["def check_cou(s, x, dx1, dx2):\n    if (n := len(s)) - x >= x + 1:\n        if s[x - 1] != s[n - x - 1]:\n            return True\n        elif x - dx1 >= dx2 and dx1 <= n - x + dx2:\n            return True\n        else:\n            return False\n    else:\n        return False\n\ndef cou(s):\n    x = int((len(s) - 1) / 2)\n    j = x - 1\n    while j > 0 and s[j] == s[x - 1]:\n        j -= 1\n    dx1 = x - 1 - j\n    j = n - x - 1\n    while j < n - 1 and s[j] == s[n - x - 1]:\n        j += 1\n    dx2 = j - n + x + 1\n    while not check_cou(s, x, dx1, dx2) and x > 0:\n        x -= 1\n        dx1 -= 1\n        dx2 -= 1\n    return (x, n - x - 1)\n\ndef fu():\n    return map(int, input().split(' '))\nn = int(input())\ns = sorted(list(fu()))\nc = cou(s)\np = c[0]\nd = c[1]\ns1 = s[:p]\nsost = s[p:d]\ns2 = s[d:]\nA = ''\nfor i in range(p):\n    A += str(s2[i]) + ' ' + str(s1[i]) + ' '\nfor i in range(p, len(s2)):\n    A += str(s2[i]) + ' '\nfor i in range(len(sost)):\n    A += str(sost[i]) + ' '\nprint(p)\nprint(A[:-1])", "import math\nN = int(input())\narr = [int(i) for i in input().split(' ')]\n\ndef win(arr):\n    if len(arr) <= 2:\n        print(0)\n        print(' '.join([str(i) for i in arr]))\n        return\n    arr.sort()\n    maxPossible = math.ceil(len(arr) / 2) - 1\n    minArr = arr[:maxPossible]\n    maxArr = arr[maxPossible:]\n    j = 0\n    ans = [maxArr[0]]\n    count = 0\n    for i in range(1, len(maxArr)):\n        if minArr[j] < maxArr[i - 1] and minArr[j] < maxArr[i]:\n            count += 1\n            ans.append(minArr[j])\n            j += 1\n        ans.append(maxArr[i])\n        if j == len(minArr):\n            ans += maxArr[i + 1:]\n            break\n    if j < len(minArr):\n        ans += minArr[j:]\n    print(count)\n    print(' '.join([str(i) for i in ans]))\nwin(arr)", "n = int(input())\na = list(map(int, input().split()))\na.sort()\ng = []\nh = []\nfor j in range(n // 2):\n    g.append(a[j])\nfor j in range(n // 2, n):\n    h.append(a[j])\ngx = len(g)\nhx = len(h)\ngy = 0\nhy = 0\nc = 0\nk = []\nwhile gy < gx or hy < hx:\n    if gy < gx and hy < hx:\n        if g[gy] < h[hy]:\n            k.append(h[hy])\n            k.append(g[gy])\n            hy = hy + 1\n            gy = gy + 1\n            if hy < hx:\n                c = c + 1\n        elif g[gy] == h[hy]:\n            k.append(h[hy])\n            hy = hy + 1\n    elif gy == gx:\n        k.append(h[hy])\n        hy = hy + 1\n    else:\n        k.append(g[gy])\n        gy = gy + 1\nprint(c)\nprint(' '.join(map(str, k)))", "n = int(input())\nL = [int(x) for x in input().split()]\nmyLen = len(L)\nif myLen <= 2:\n    print(0)\n    print(' '.join([str(e) for e in L]))\n    quit()\nL.sort()\ngr = myLen // 2\ncnt = gr if myLen % 2 else gr - 1\nv = L[0]\nfor i in range(gr, myLen - 1):\n    if L[i] > v < L[i + 1]:\n        k = i\n        break\nelse:\n    print(0)\n    print(s)\n    quit()\nshift = k - gr\nL1 = []\nfor i in range(gr, gr + shift):\n    L1.append(L[i])\nnn = cnt - shift\nfor i in range(nn):\n    L1.append(L[k + i])\n    L1.append(L[i])\nL1.append(L[-1])\nfor i in range(shift):\n    L1.append(L[i + nn])\nif not myLen % 2:\n    L1.append(L[cnt])\nnSales = 0\nlen_L1 = len(L1)\nfor i in range(1, len_L1, 2):\n    if i + 1 < len_L1 and L1[i - 1] > L1[i] < L1[i + 1]:\n        nSales += 1\nprint(nSales)\nprint(' '.join([str(e) for e in L1]))", "n = input()\np = [int(x) for x in input().strip().split(' ')]\nif len(p) <= 2:\n    print(0)\n    print(' '.join([str(x) for x in p]))\n    exit()\np.sort()\nres_list = []\nif len(p) % 2 == 0:\n    index = int(len(p) / 2)\n    if p[index - 1] == p[index - 2]:\n        res_list.append(p[index - 1])\n        del p[index - 1]\n    else:\n        res_list.append(p[index])\n        del p[index]\nres = 0\ngap = int((len(p) + 1) / 2)\nres_list.append(p[gap - 1])\nfor i in range(gap - 1):\n    if p[i] < res_list[-1] and p[i] < p[i + gap]:\n        res += 1\n    res_list.append(p[i])\n    res_list.append(p[i + gap])\nprint(res)\nprint(' '.join([str(x) for x in res_list]))", "n = int(input())\ndata = list(map(int, input().split()))\n\ndef cal(data, n):\n    data.sort()\n    res = [0] * n\n    m = n // 2\n    res[0::2] = data[m:]\n    res[1::2] = data[:m]\n    ans = 0\n    for i in range(1, n, 2):\n        if i == n - 1:\n            break\n        if res[i - 1] > res[i] and res[i] < res[i + 1]:\n            ans += 1\n    print(ans)\n    s = ' '.join(list(map(str, res)))\n    print(s)\ncal(data, n)", "n = int(input())\na = [int(x) for x in input().split()]\na.sort()\nans = 0\nansarr = []\nif n < 3:\n    print(0)\n    print(' '.join([str(x) for x in a]))\nelif n % 2 == 0:\n    for i in range(n // 2):\n        ansarr.append(a[n // 2 + i])\n        ansarr.append(a[i])\n    for i in range(1, len(a) - 1, 2):\n        if ansarr[i] < ansarr[i - 1] and ansarr[i] < ansarr[i + 1]:\n            ans += 1\n    print(ans)\n    print(' '.join([str(x) for x in ansarr]))\nelse:\n    for i in range(n // 2):\n        ansarr.append(a[n // 2 + i])\n        ansarr.append(a[i])\n    ansarr.append(a[len(a) - 1])\n    for i in range(1, len(a), 2):\n        if ansarr[i] < ansarr[i - 1] and ansarr[i] < ansarr[i + 1]:\n            ans += 1\n    print(ans)\n    print(' '.join([str(x) for x in ansarr]))", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nd = [0 for i in range(n)]\ni = 0\nj = n // 2\nfor z in range(0, n // 2):\n    d[2 * i] = a[j]\n    d[2 * i + 1] = a[i]\n    i += 1\n    j += 1\nif j == n - 1:\n    d[n - 1] = a[n - 1]\nk = 0\nfor i in range(1, n - 1):\n    if d[i] < d[i - 1] and d[i] < d[i + 1]:\n        k += 1\nprint(k)\nprint(' '.join(list(map(str, d))))", "import sys\nimport math\ninput = sys.stdin.readline\nN = int(input())\nA = list(map(int, input().split(' ')))\nA.sort()\nX = N // 2\nit1 = iter(A[:X])\nit2 = iter(A[X:])\nx = True\ny = True\nans = []\nwhile x or y:\n    try:\n        ans.append(next(it2))\n    except StopIteration:\n        x = False\n    try:\n        ans.append(next(it1))\n    except StopIteration:\n        y = False\ncount = 0\nfor i in range(1, N - 1):\n    if ans[i] < ans[i - 1] and ans[i] < ans[i + 1]:\n        count += 1\nprint(count)\nprint(' '.join(map(str, ans)))", "t = int(input())\nice = list(map(int, input().split()))\nnew_ice = []\ncount = 0\nice.sort()\nif len(ice) % 2 != 0:\n    for i in range(0, len(ice) // 2 + 1):\n        new_ice.append(ice[len(ice) // 2 + i])\n        new_ice.append(ice[i])\n    del new_ice[-1]\nelif len(ice) <= 2:\n    for i in range(len(ice)):\n        new_ice.append(ice[i])\nelse:\n    for i in range(0, len(ice) // 2):\n        new_ice.append(ice[len(ice) // 2 + i])\n        new_ice.append(ice[i])\nfor i in range(1, len(new_ice) - 1, 1):\n    if new_ice[i] < new_ice[i - 1] and new_ice[i] < new_ice[i + 1]:\n        count += 1\nprint(count)\nprint(' '.join(map(str, new_ice)))", "import math\ncount = math.ceil(int(input()) / 2) - 1\na = sorted(list(map(int, input().split())))\na1 = a[:count]\na2 = a[-count - 1:]\nb = count\nc = ''\nfor (x, y) in zip(a1, a2):\n    if x == y:\n        count -= 1\n    c += str(y) + ' ' + str(x) + ' '\nc += str(a[-1]) + ' '\nfor i in a[b:-b - 1]:\n    c += str(i)\nprint(count)\nprint(c)", "import sys\nn = int(sys.stdin.readline())\npricelist = [int(v) for v in sys.stdin.readline().strip().split(' ')]\npricelist.sort()\nnewlist = [0 for i in range(0, n)]\nstart = int(n / 2)\nfor i in range(0, start):\n    newlist[i * 2] = pricelist[i + start]\n    newlist[i * 2 + 1] = pricelist[i]\nif n % 2 == 1:\n    newlist[n - 1] = pricelist[n - 1]\ntotal = 0\nfor i in range(1, n - 1, 2):\n    if newlist[i] < newlist[i - 1] and newlist[i] < newlist[i + 1]:\n        total += 1\nprint(total)\nprint(' '.join((str(v) for v in newlist)))", "import sys\nn = int(sys.stdin.readline())\nprice = [int(v) for v in sys.stdin.readline().strip().split(' ')]\nprice.sort()\nresult = []\nstart = int(n / 2)\nfor i in range(0, start):\n    result.append(price[i + start])\n    result.append(price[i])\nif n % 2 == 1:\n    result.append(price[n - 1])\nnum = 0\nfor i in range(1, n - 1, 2):\n    if result[i] < result[i - 1] and result[i] < result[i + 1]:\n        num += 1\nprint(num)\nprint(' '.join((str(v) for v in result)))", "from math import ceil\nn = int(input())\na = list(map(int, input().split()))\na.sort()\ni = 1\ncur = 0\nres = [0 for i in range(n)]\nwhile i < len(a):\n    res[i] = a[cur]\n    i += 2\n    cur += 1\ni = 0\nwhile i < len(a):\n    res[i] = a[cur]\n    cur += 1\n    i += 2\nw = 0\nfor i in range(1, n - 1):\n    if res[i] < res[i - 1] and res[i] < res[i + 1]:\n        w += 1\nprint(w)\nprint(' '.join([str(x) for x in res]))", "import math\nfrom heapq import heappush, heappop, heapify\nimport random\nimport string\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right, insort\nimport sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nH = 1000000000 + 7\nn = I()\nl = L()\nl.sort()\nb = [0] * n\n(b[::2], b[1::2]) = (l[n // 2:], l[:n // 2])\nprint(sum((b[i - 1] > b[i] < b[i + 1] for i in range(1, n - 1))))\nprint(*b)", "n = int(input())\nmas = list(map(int, input().split()))\nmas = sorted(mas)\nmiddle = n // 2\nmasans = []\nans = 0\nif n > 1:\n    for i in range(n // 2):\n        if mas[i] < mas[i + middle]:\n            ans += 1\n        masans.append(mas[i + middle])\n        masans.append(mas[i])\n    if n % 2 != 0:\n        masans.append(mas[n - 1])\n    if n % 2 == 0:\n        if masans[-1] < masans[-2]:\n            ans -= 1\nelse:\n    ans = 0\n    masans = [mas[0]]\nprint(ans)\nfor x in masans:\n    print(x, end=' ')", "n = int(input())\narray = list(map(int, input().split()))\narray.sort()\noutput = []\narray1 = array[0:n // 2]\narray2 = array[n // 2:]\ni = 0\nj = 0\ncount = 0\nwhile i < n // 2 and j < (n - 1) // 2:\n    b = array2[j]\n    a = array1[i]\n    output.append(b)\n    output.append(a)\n    if b > a:\n        count += 1\n    i += 1\n    j += 1\nif n % 2 != 0:\n    output.append(array2[-1])\nelse:\n    output.append(array2[-1])\n    output.append(array1[-1])\nprint(count)\nprint(' '.join(map(str, output)))", "from sys import stdin, stdout\nimport math\nt = int(stdin.readline())\narr = list(map(int, stdin.readline().split()))\narr.sort()\nk = 0\nres = []\ncount = 0\nif t % 2 != 0:\n    k = (t + 1) // 2\n    i = 0\n    while i < k - 1:\n        if arr[i] < arr[i + k - 1]:\n            count += 1\n        if i == 0:\n            res.append(arr[i + k - 1])\n        res.append(arr[i])\n        res.append(arr[i + k])\n        i += 1\nelse:\n    k = t // 2\n    i = 0\n    while i < k - 1:\n        if arr[i] < arr[i + k - 1] or (i == k - 2 and arr[i] < arr[i + k]):\n            count += 1\n        if arr[i] >= arr[i + k - 1] and (i == k - 2 and arr[i] < arr[i + k]):\n            if i == 0:\n                res.append(arr[i + k - 1])\n            res.append(arr[i + k])\n            res.append(arr[i])\n            res.append(arr[i + k + 1])\n        else:\n            if i == 0:\n                res.append(arr[i + k - 1])\n            res.append(arr[i])\n            res.append(arr[i + k])\n            if i == k - 2:\n                res.append(arr[i + k + 1])\n        i += 1\nprint(count)\nif count == 0:\n    print(' '.join((str(i) for i in arr)))\nelse:\n    print(' '.join((str(i) for i in res)))", "import sys\nn = int(sys.stdin.readline())\npricelist = [int(v) for v in sys.stdin.readline().strip().split(' ')]\npricelist.sort(reverse=True)\nnewlist = [0 for i in range(0, n)]\nstart = int((n + 1) / 2)\nfor i in range(0, start):\n    newlist[i * 2] = pricelist[i]\nwaitlist = []\npt = 1\ntotal = 0\nfor i in range(start, n):\n    if pt < n - 1 and pricelist[i] < newlist[pt - 1] and (pricelist[i] < newlist[pt + 1]):\n        newlist[pt] = pricelist[i]\n        total += 1\n        pt += 2\n    else:\n        waitlist.append(pricelist[i])\nfor v in waitlist:\n    newlist[pt] = v\n    pt += 2\nprint(total)\nprint(' '.join((str(v) for v in newlist)))", "import sys\nn = int(sys.stdin.readline())\nprice = [int(v) for v in sys.stdin.readline().strip().split(' ')]\nprice.sort()\nresult = []\nstart = int(n / 2)\nfor i in range(0, start):\n    result.append(price[i + start])\n    result.append(price[i])\nif n % 2 == 1:\n    result.append(price[n - 1])\nnum = 0\nfor i in range(1, n - 1, 2):\n    if result[i] < result[i - 1] and result[i] < result[i + 1]:\n        num += 1\nprint(num)\nprint(' '.join((str(v) for v in result)))", "from sys import stdin, stdout\nfrom math import *\ntesting = True\n\ndef tp(s='\\n'):\n    if testing:\n        stdout.write(s)\n\ndef main():\n    n = int(stdin.readline())\n    arr = [int(i) for i in stdin.readline().split()]\n    arr.sort()\n    out = [0] * n\n    for i in range(floor(n / 2)):\n        out[2 * i + 1] = arr[i]\n    for i in range(ceil(n / 2)):\n        out[2 * i] = arr[i + floor(n / 2)]\n    count = 0\n    for i in range(1, n - 1):\n        if out[i] < out[i + 1] and out[i] < out[i - 1]:\n            count += 1\n    print(count)\n    print(' '.join([str(i) for i in out]))\nmain()", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nb = [0] * n\nk = 0\nfor j in range(1, n, 2):\n    b[j] = a[k]\n    k = k + 1\nfor j in range(0, n, 2):\n    b[j] = a[k]\n    k = k + 1\nm = 0\nfor j in range(1, n - 1, 2):\n    if b[j] != b[j - 1] and b[j] != b[j + 1]:\n        m = m + 1\nprint(m)\nprint(' '.join(map(str, b)))", "n = int(input())\na = list(map(int, input().split()))\nif n <= 2:\n    print(0)\n    print(' '.join(map(str, a)))\nelse:\n    a.sort()\n    b = [0] * n\n    j = 0\n    for i in range(1, n, 2):\n        b[i] = a[j]\n        j += 1\n    for i in range(0, n, 2):\n        b[i] = a[j]\n        j += 1\n    c = 0\n    for i in range(1, n - 1, 2):\n        if b[i - 1] > b[i] < b[i + 1]:\n            c += 1\n    print(c)\n    print(' '.join(map(str, b)))", "from sys import *\nfrom collections import deque\nn = int(stdin.readline().strip())\nthings = sorted([int(x) for x in stdin.readline().strip().split(' ')])\ncount = 0\nfinal = []\nbig = deque(things[n // 2:])\nsmall = deque(things[:n // 2])\nfor i in range(len(small)):\n    left = big.popleft()\n    if big and left > small[0] and (big[0] > small[0]):\n        count += 1\n        final.append(left)\n        final.append(small.popleft())\n    else:\n        final.append(left)\n        final.append(small.pop())\nif big:\n    final.append(big.pop())\nprint(count)\nprint(' '.join(map(str, final)))", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nans = [None for _ in range(n)]\ni = 0\nj = 1\nwhile j < n:\n    ans[j] = a[i]\n    i += 1\n    j += 2\nk = i\nj = 0\nwhile k < n and j < n:\n    ans[j] = a[k]\n    k += 1\n    j += 2\ncount = 0\nfor i in range(1, n - 1):\n    if ans[i] < ans[i + 1] and ans[i] < ans[i - 1]:\n        count += 1\nprint(count)\nprint(' '.join(map(str, ans)))", "n = int(input())\narr = list(map(int, input().split()))\narr.sort()\nresArr = [0] * n\ncount = 0\nj = 0\nfor i in range(1, n, 2):\n    resArr[i] = arr[j]\n    j += 1\nfor i in range(0, n, 2):\n    resArr[i] = arr[j]\n    j += 1\nfor i in range(1, n - 1):\n    if resArr[i] < resArr[i - 1] and resArr[i] < resArr[i + 1]:\n        count += 1\nprint(count)\nprint(' '.join(map(str, resArr)))", "n = int(input())\ns = input()\nL = s.split()\nfor i in range(len(L)):\n    L[i] = int(L[i])\nmyLen = len(L)\nif myLen <= 2:\n    print(0)\n    print(s)\n    quit()\nL.sort()\ngr = myLen // 2\ncnt = gr if myLen % 2 else gr - 1\nv = L[0]\nfor i in range(gr, myLen - 1):\n    if L[i] > v < L[i + 1]:\n        k = i\n        break\nelse:\n    print(0)\n    print(s)\n    quit()\nshift = k - gr\nL1 = []\nfor i in range(gr, gr + shift):\n    L1.append(L[i])\nnn = cnt - shift\nfor i in range(nn):\n    L1.append(L[k + i])\n    L1.append(L[i])\nL1.append(L[-1])\nfor i in range(shift):\n    L1.append(L[i + nn])\nif not myLen % 2:\n    L1.append(L[cnt])\nnSales = 0\nfor i in range(1, len(L1), 2):\n    if i + 1 < len(L1) and L1[i - 1] > L1[i] < L1[i + 1]:\n        nSales += 1\nprint(nSales)\nL1 = [str(e) for e in L1]\nprint(' '.join(L1))", "n = int(input())\ns = input()\nL = s.split()\nfor i in range(len(L)):\n    L[i] = int(L[i])\nmyLen = len(L)\nif myLen <= 2:\n    print(0)\n    print(s)\n    quit()\nL.sort()\ngr = myLen // 2\ncnt = gr if myLen % 2 else gr - 1\nv = L[0]\nfor i in range(gr, myLen - 1):\n    if L[i] > v < L[i + 1]:\n        k = i\n        break\nelse:\n    print(0)\n    print(s)\n    quit()\nshift = k - gr\nL1 = []\nfor i in range(gr, gr + shift):\n    L1.append(L[i])\nnn = -shift + cnt\nfor i in range(nn):\n    L1.append(L[k + i])\n    L1.append(L[i])\nL1.append(L[-1])\nfor i in range(shift):\n    L1.append(L[i + nn])\nif not myLen % 2:\n    L1.append(L[cnt])\nnSales = 0\nfor i in range(1, len(L1), 2):\n    if i + 1 < len(L1) and L1[i - 1] > L1[i] < L1[i + 1]:\n        nSales += 1\nprint(nSales)\nL1 = [str(e) for e in L1]\nprint(' '.join(L1))", "n = int(input())\ns = input()\nL = s.split()\nfor i in range(len(L)):\n    L[i] = int(L[i])\nmyLen = len(L)\nif myLen <= 2:\n    print(0)\n    print(s)\n    quit()\nL.sort()\ngr = myLen // 2\ncnt = gr if myLen % 2 else gr - 1\nv = L[0]\nfor i in range(gr, myLen - 1):\n    if L[i] > v < L[i + 1]:\n        k = i\n        break\nelse:\n    print(0)\n    print(s)\n    quit()\nshift = k - gr\nL1 = []\nfor i in range(gr, gr + shift):\n    L1.append(L[i])\nnn = cnt - shift\nfor i in range(nn):\n    L1.append(L[k + i])\n    L1.append(L[i])\nL1.append(L[-1])\nfor i in range(shift):\n    L1.append(L[i + nn])\nif not myLen % 2:\n    L1.append(L[cnt])\nnSales = 0\nfor i in range(1, len(L1), 2):\n    if i + 1 < len(L1) and L1[i - 1] > L1[i] < L1[i + 1]:\n        nSales += 1\nprint(nSales)\nprint(' '.join([str(e) for e in L1]))", "import sys\nn = int(sys.stdin.readline())\npricelist = [int(v) for v in sys.stdin.readline().strip().split(' ')]\npricelist.sort(reverse=True)\nnewlist = [0 for i in range(0, n)]\nstart = int((n + 1) / 2)\nfor i in range(0, start):\n    newlist[i * 2] = pricelist[i]\nwaitlist = []\npt = 1\ntotal = 0\nfor i in range(start, n):\n    if pt < n - 1 and pricelist[i] < newlist[pt - 1] and (pricelist[i] < newlist[pt + 1]):\n        newlist[pt] = pricelist[i]\n        total += 1\n        pt += 2\n    else:\n        waitlist.append(pricelist[i])\nfor v in waitlist:\n    newlist[pt] = v\n    pt += 2\nprint(total)\nprint(' '.join((str(v) for v in newlist)))", "import sys\nn = int(sys.stdin.readline())\npricelist = [int(v) for v in sys.stdin.readline().strip().split(' ')]\npricelist.sort()\nnewlist = [0 for i in range(0, n)]\nstart = int(n / 2)\nfor i in range(0, start):\n    newlist[i * 2] = pricelist[i + start]\n    newlist[i * 2 + 1] = pricelist[i]\nif n % 2 == 1:\n    newlist[n - 1] = pricelist[n - 1]\ntotal = 0\nfor i in range(1, n - 1, 2):\n    if newlist[i] < newlist[i - 1] and newlist[i] < newlist[i + 1]:\n        total += 1\nprint(total)\nprint(' '.join((str(v) for v in newlist)))", "n = int(input())\nl = list(map(int, input().split()))\nl.sort(reverse=True)\nans = [0] * n\nfor i in range(1, n, 2):\n    ans[i] = l.pop()\nfor i in range(0, n, 2):\n    ans[i] = l.pop()\ncount = 0\nfor i in range(1, n - 1):\n    if ans[i - 1] > ans[i] and ans[i] < ans[i + 1]:\n        count += 1\nprint(count)\nprint(*ans)", "n = int(input())\narr = [int(x) for x in input().split()]\narr.sort()\narr1 = arr[0:n // 2]\narr2 = arr[n // 2:]\narr3 = []\nfor i in range(n // 2):\n    arr3.append(arr2[i])\n    arr3.append(arr1[i])\nif n % 2 != 0:\n    arr3.append(arr2[-1])\ncnt = 0\nfor i in range(1, n - 1):\n    if arr3[i - 1] > arr3[i] < arr3[i + 1]:\n        cnt += 1\nprint(cnt)\nprint(*arr3)", "n = int(input())\narr = list(map(int, input().split(' ')))\narr = list(sorted(arr))\np = n // 2\nresultarr = []\ni = 0\nwhile p < n:\n    resultarr.append(arr[p])\n    if i < n // 2:\n        resultarr.append(arr[i])\n    i += 1\n    p += 1\nresult = 0\nfor i in range(1, len(arr) - 1):\n    if resultarr[i - 1] > resultarr[i] and resultarr[i + 1] > resultarr[i]:\n        result += 1\nprint(result)\nprint(' '.join(list(map(str, resultarr))))", "n = int(input())\ns = input()\nL = s.split()\nfor i in range(len(L)):\n    L[i] = int(L[i])\nmyLen = len(L)\nif myLen <= 2:\n    print(0)\n    print(s)\n    quit()\nL.sort()\ngr = myLen // 2\ncnt = gr if myLen % 2 else gr - 1\nv = L[0]\nfor i in range(gr, myLen - 1):\n    if L[i] > v < L[i + 1]:\n        k = i\n        break\nelse:\n    print(0)\n    print(s)\n    quit()\nshift = k - gr\nL1 = []\nfor i in range(gr, gr + shift):\n    L1.append(L[i])\nnn = cnt - shift\nfor i in range(nn):\n    L1.append(L[k + i])\n    L1.append(L[i])\nL1.append(L[-1])\nfor i in range(shift):\n    L1.append(L[i + nn])\nif not myLen % 2:\n    L1.append(L[cnt])\nnSales = 0\nlen_L1 = len(L1)\nfor i in range(1, len_L1, 2):\n    if i + 1 < len_L1 and L1[i - 1] > L1[i] < L1[i + 1]:\n        nSales += 1\nprint(nSales)\nprint(' '.join([str(e) for e in L1]))", "n = int(input())\nesferas = list(map(int, input().split(' ')))\nesferas.sort()\nlimite = int(n / 2)\nmenores = esferas[:limite]\nmaiores = esferas[limite:]\nindice = 0\nreordenadas = []\ncompras = 0\nesquerda = False\nfor i in range(n):\n    if i % 2 == 0:\n        reordenadas.append(maiores[int(i / 2)])\n        if esquerda and maiores[int(i / 2)] > reordenadas[i - 1]:\n            compras += 1\n            esquerda = False\n    else:\n        reordenadas.append(menores[indice])\n        if menores[indice] < reordenadas[i - 1]:\n            esquerda = True\n        else:\n            esquerda = False\n        indice += 1\nprint(compras)\nreordenadas = [str(int) for int in reordenadas]\nprint(' '.join(reordenadas))", "n = int(input())\nspheres = list(map(int, input().split(' ')))\nspheres = sorted(spheres)\nret = [-1 for _ in range(n)]\n(l, r) = (0, n - 1)\ncnt = 0\nblock_n = n // 2 + n % 2\ninner_n = n - block_n\ninners = spheres[:inner_n]\nblocks = spheres[inner_n:n]\nst = 0\nif n % 2 == 0:\n    ret[0] = inners.pop()\n    st = 1\nfor i in range(st, n):\n    if i % 2 == st:\n        ret[i] = blocks.pop()\n    else:\n        ret[i] = inners.pop()\n    if i > 1 and ret[i - 1] < ret[i - 2] and (ret[i - 1] < ret[i]):\n        cnt += 1\nprint(cnt)\nprint(' '.join(list(map(str, ret))))", "n = int(input())\nspheres = list(map(int, input().split(' ')))\nspheres = sorted(spheres)\nret = [-1 for _ in range(n)]\ncnt = 0\nblock_n = n // 2 + n % 2\ninner_n = n - block_n\ninners = spheres[:inner_n]\nblocks = spheres[inner_n:n]\n(l, r) = (0, 0)\nfor i in range(n):\n    if i % 2 == 0:\n        ret[i] = blocks[l]\n        l += 1\n    else:\n        ret[i] = inners[r]\n        r += 1\n    if i > 1 and ret[i - 1] < ret[i - 2] and (ret[i - 1] < ret[i]):\n        cnt += 1\nprint(cnt)\nprint(' '.join(list(map(str, ret))))", "n = int(input())\na = [int(i) for i in input().split()]\na.sort()\nres = [0] * n\nres[::2] = a[n // 2:]\nres[1::2] = a[:n // 2]\nans = 0\nfor i in range(1, n - 1):\n    ans += res[i - 1] > res[i] < res[i + 1]\nprint(ans)\nprint(*res)", "n = int(input())\na = list(map(int, input().split()))\na.sort()\ncur = 0\ni = 1\nres = [0] * n\nwhile i < n:\n    res[i] = a[cur]\n    i += 2\n    cur += 1\ni = 0\nwhile i < n:\n    res[i] = a[cur]\n    i += 2\n    cur += 1\nans = 0\nfor i in range(1, n - 1):\n    if res[i - 1] > res[i] and res[i] < res[i + 1]:\n        ans += 1\nprint(ans)\nprint(*res)", "n = int(input())\narr = [int(num) for num in input().split()]\narr.sort()\narr0 = arr[:n // 2]\narr1 = arr[n // 2:]\np0 = 0\np1 = 0\nans = []\nwhile p0 < len(arr0) and p1 < len(arr1):\n    ans.append(arr1[p1])\n    ans.append(arr0[p0])\n    p0 += 1\n    p1 += 1\nif n % 2:\n    ans.append(arr1[-1])\nans_num = 0\nfor ind in range(1, n - 1):\n    if ans[ind - 1] > ans[ind] < ans[ind + 1]:\n        ans_num += 1\nprint(ans_num)\nprint(*ans)", "def inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n(n, l) = (inp(), inlt())\nres = []\nl.sort()\nfor i in range(n // 2):\n    if i + n // 2 < n:\n        res.append(l[i + n // 2])\n        res.append(l[i])\nif n % 2:\n    res.append(l[-1])\ncnt = 0\nfor i in range(1, len(res) - 1):\n    if res[i - 1] > res[i] < res[i + 1]:\n        cnt += 1\nprint(cnt)\nprint(' '.join([str(x) for x in res]))", "n = int(input())\narray = list(map(int, input().split(' ')))\narray.sort()\nmenores = array[:int(n / 2)]\nmaiores = array[int(n / 2):]\nindex = 0\nsolucao = []\nqtd = 0\nflag_left = False\nfor i in range(n):\n    if i % 2 != 0:\n        solucao.append(menores[index])\n        if menores[index] < solucao[i - 1]:\n            flag_left = True\n        else:\n            flag_left = False\n        index += 1\n    else:\n        solucao.append(maiores[int(i / 2)])\n        if flag_left and maiores[int(i / 2)] > solucao[i - 1]:\n            qtd += 1\n            flag_left = False\nprint(qtd)\nsolucao = [str(int) for int in solucao]\nprint(' '.join(solucao))", "n = int(input())\nl = list(map(int, input().split()))\nl = sorted(l)\nans = [0 for _ in range(n)]\nt = n - 1\nx = 0\nif n % 2 == 0:\n    x = 1\nfor i in range(n - 1 - x, -1, -2):\n    ans[i] = l[t]\n    t -= 1\nt = 0\nfor i in range(1, n, 2):\n    ans[i] = l[t]\n    t += 1\nt = 0\nfor i in range(1, n - 1):\n    if ans[i] < ans[i - 1] and ans[i] < ans[i + 1]:\n        t += 1\nprint(t)\nprint(*ans)", "def main():\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst = sorted(lst)\n    new_lst = []\n    for i in range(n // 2):\n        new_lst.append(lst[n // 2 + i])\n        new_lst.append(lst[i])\n    if n % 2 == 1:\n        new_lst.append(lst[n - 1])\n    cnt = 0\n    for i in range(1, n - 1):\n        if new_lst[i] < new_lst[i - 1] and new_lst[i] < new_lst[i + 1]:\n            cnt += 1\n    print(cnt)\n    line = ''\n    for i in new_lst:\n        line += str(i) + ' '\n    print(line)\nt = 1\nfor i in range(t):\n    main()", "n = int(input())\narr = list(map(int, input().strip().split()))\nif n % 2 == 0:\n    ans = n // 2 - 1\nelse:\n    ans = n // 2\narr.sort()\nlow = arr[:n // 2]\nhi = arr[n // 2:]\narr[::2] = hi\narr[1::2] = low\nfor i in range(1, n - 1, 2):\n    if arr[i] == arr[i - 1] or arr[i] == arr[i + 1]:\n        ans -= 1\nprint(ans)\nprint(*arr, sep=' ')", "n = int(input())\na = sorted(map(int, input().split()))\nb = [0] * n\n(b[1::2], b[::2]) = (a[:n // 2], a[n // 2:])\nprint(sum((b[i - 1] > b[i] < b[i + 1] for i in range(1, n - 1))))\nprint(*b)", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nans = [0] * n\n(ans[1::2], ans[::2]) = (a[:n // 2], a[n // 2:])\nprint(sum((ans[i - 1] > ans[i] < ans[i + 1] for i in range(1, n - 1))))\nprint(*ans)", "n = int(input())\na = input().split(' ')\nif n <= 2:\n    print(0)\n    print(' '.join(a))\n    exit(0)\na = [int(s) for s in a]\na = sorted(a)\nb = [0] * n\nstepb = 1\nfor i in range(0, n):\n    b[stepb] = a[i]\n    stepb += 2\n    if stepb >= n:\n        stepb = 0\ncnt = 0\nfor i in range(1, n - 1):\n    if b[i] < b[i - 1] and b[i] < b[i + 1]:\n        cnt += 1\nprint(cnt)\nprint(' '.join([str(s) for s in b]))", "n = int(input())\na = sorted(map(int, input().split()))\nb = [0] * n\n(b[1::2], b[::2]) = (a[:n // 2], a[n // 2:])\nprint(sum((b[i - 1] > b[i] < b[i + 1] for i in range(1, n - 1))))\nprint(*b)", "def main():\n    n = int(input())\n    a = map(int, input().split())\n    a = sorted(a)\n    result = [-1] * n\n    i = 0\n    j = n - 1 - 1\n    l = 0\n    r = n - 1\n    if n % 2 == 0:\n        i += 1\n    while j > 0:\n        result[i] = a[r]\n        result[j] = a[l]\n        i += 2\n        j -= 2\n        r -= 1\n        l += 1\n    if i < n:\n        result[i] = a[r]\n    if j >= 0:\n        result[j] = a[l]\n    cnt = 0\n    for r in range(1, len(result) - 1):\n        if result[r - 1] > result[r] and result[r] < result[r + 1]:\n            cnt += 1\n    print(cnt)\n    print(*result)\nmain()", "n = int(input())\na = sorted(map(int, input().split()))\nm = (n - 1) // 2\n(i, j) = (0, m + 1)\nans = 0\ntemp = a[m]\nif n < 3:\n    print(ans)\n    for i in a:\n        print(i, end=' ')\nelse:\n    z = n * [0]\n    z[::2] = a[n // 2:]\n    z[1::2] = a[:n // 2]\n    for i in range(m):\n        if z[2 * i + 1] < z[2 * i] and z[2 * i + 1] < z[2 * i + 2]:\n            ans += 1\n    print(ans)\n    for i in z:\n        print(i, end=' ')", "n = int(input())\narr = [int(x) for x in input().split()]\narr.sort()\narr1 = arr[0:n // 2]\narr2 = arr[n // 2:]\narr3 = []\nfor i in range(n // 2):\n    arr3.append(arr2[i])\n    arr3.append(arr1[i])\nif n % 2 != 0:\n    arr3.append(arr2[-1])\ncnt = 0\nfor i in range(1, n - 1):\n    if arr3[i - 1] > arr3[i] < arr3[i + 1]:\n        cnt += 1\nprint(cnt)\nprint(*arr3)", "x = int(input())\narr = list(map(int, input().split()))\narr.sort()\ntemp = []\nn = 0\nif x % 2 != 0:\n    mid = x // 2\n    arr1 = arr[:mid]\n    arr2 = arr[mid:]\n    for i in range(mid):\n        temp.append(arr2[i])\n        temp.append(arr1[i])\n    temp.append(arr[-1])\n    for i in range(1, x, 2):\n        if temp[i] < temp[i - 1] and temp[i] < temp[i + 1]:\n            n += 1\n    print(n)\n    print(*temp)\nelse:\n    mid = x // 2\n    arr1 = arr[:mid]\n    arr2 = arr[mid:]\n    for i in range(mid):\n        temp.append(arr2[i])\n        temp.append(arr1[i])\n    for i in range(1, x - 1, 2):\n        if temp[i] < temp[i - 1] and temp[i] < temp[i + 1]:\n            n += 1\n    print(n)\n    print(*temp)", "R = lambda : map(int, input().split())\nn = int(input())\narr = sorted(R(), reverse=True)\nvst = [0] * n\nres = []\nj = 0\nk = (n + 1) // 2\ncnt = 0\nfor i in range(n):\n    if not vst[i]:\n        res.append(arr[i])\n        j = max(j, i + 1)\n        while j < n and vst[j]:\n            j += 1\n        k = max(k, j + 1)\n        while k < n and (vst[k] or arr[k] >= arr[j]):\n            k += 1\n        if k < n:\n            res.append(arr[k])\n            vst[k] = 1\n            cnt += 1\nprint(cnt)\nprint(' '.join(map(str, res)))", "n = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\nans = [-1] * n\nj = 0\nfor i in range(0, n, 2):\n    ans[i] = a[j]\n    j += 1\nansl = 0\ncheck = False\nfor i in range(1, n, 2):\n    ans[i] = a[j]\n    if i < n - 1 and ans[i - 1] > ans[i] < ans[i + 1]:\n        ansl += 1\n    elif i == n - 1:\n        check = True\n    j += 1\nif check:\n    for i in range(1, n - 1, 2):\n        if not ans[i - 1] > ans[i] < ans[i + 1] and ans[i - 1] > ans[-1] < ans[i + 1]:\n            ansl += 1\n            (ans[i], ans[-1]) = (ans[-1], ans[i])\n            break\nprint(ansl)\nprint(*ans)", "n = int(input())\na = [int(i) for i in input().split()]\na.sort()\na1 = [0] * n\ncnt = 0\na1[0] = a[n // 2]\nif n % 2 != 0:\n    for i in range(0, n // 2):\n        a1[i * 2 + 1] = a[i]\n        a1[i * 2 + 2] = a[n // 2 + i + 1]\nelse:\n    for i in range(0, n // 2 - 1):\n        a1[1 + i * 2] = a[i]\n        a1[i * 2 + 2] = a[n // 2 + i + 1]\n    a1[n - 1] = a[n // 2 - 1]\nif n == 1:\n    print(0)\n    print(a1[0])\nelse:\n    s = str(a1[0]) + ' '\n    for i in range(1, n - 1):\n        s += str(a1[i]) + ' '\n        if a1[i] < a1[i + 1] and a1[i] < a1[i - 1]:\n            cnt += 1\n    s += str(a1[n - 1])\n    print(cnt)\n    print(s)", "n = int(input())\nbolas = []\nvalores = input().split()\ncont = 0\nfor e in range(n):\n    bolas.append(int(valores[e]))\nbolas.sort()\nv1 = bolas[0:n // 2]\nv2 = bolas[n // 2:]\nv3 = []\nfor e in range(n // 2):\n    v3.append(v2[e])\n    v3.append(v1[e])\nif n % 2 != 0:\n    v3.append(v2[-1])\nfor e in range(1, n - 1):\n    if v3[e - 1] > v3[e] and v3[e] < v3[e + 1]:\n        cont += 1\nprint(cont)\nfor e in v3:\n    print(e, end=' ')", "n = int(input())\na = sorted(map(int, input().split()))\nb = [0] * n\n(b[1::2], b[::2]) = (a[:n // 2], a[n // 2:])\nprint(sum((b[i - 1] > b[i] < b[i + 1] for i in range(1, n - 1))))\nprint(*b)", "def do(l, n):\n    o = l[0:n // 2]\n    k = l[n // 2:n]\n    nlist = []\n    for i in range(n // 2):\n        nlist.append(str(k[i]))\n        nlist.append(str(o[i]))\n    if n % 2 == 1:\n        nlist.append(str(k[n // 2]))\n    return nlist\nnum = int(input())\nl = list(map(int, input().split()))\nl.sort()\na = do(l, num)\ncnt = 0\nfor i in range(1, num - 1):\n    if int(a[i - 1]) > int(a[i]) and int(a[i + 1]) > int(a[i]):\n        cnt += 1\nprint(cnt)\nprint(' '.join(a))", "n = int(input())\narr = [int(x) for x in input().split()]\narr.sort()\n(arr[0::2], arr[1::2]) = (arr[n // 2:], arr[:n // 2])\nans = 0\nfor i in range(1, n - 1):\n    if arr[i] < arr[i - 1] and arr[i] < arr[i + 1]:\n        ans += 1\nprint(ans)\nprint(*arr)", "n = int(input())\na = list(map(int, input().split()))\na.sort()\ni = 0\nj = 0\na1 = a[:n // 2]\na2 = a[n // 2:]\nans = []\nwhile i < len(a1) and j < len(a2):\n    ans.append(a2[j])\n    j += 1\n    ans.append(a1[i])\n    i += 1\nwhile i < len(a1):\n    ans.append(a1[i])\n    i += 1\nwhile j < len(a2):\n    ans.append(a2[j])\n    j += 1\nc = 0\nfor i in range(1, len(ans) - 1):\n    if ans[i] < ans[i - 1] and ans[i] < ans[i + 1]:\n        c += 1\nprint(c)\nprint(*ans)", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nb = n // 2\nc = []\ni = 0\nwhile len(c) < n:\n    c.append(a[b])\n    if len(c) == n:\n        break\n    c.append(a[i])\n    i += 1\n    b += 1\nans = 0\ni = 0\nwhile i < n - 1:\n    if c[i] > c[i + 1]:\n        ans += 1\n    i += 2\nif n % 2 == 0 and c[-1] != c[-2]:\n    ans -= 1\nprint(ans)\nprint(' '.join((str(x) for x in c)))", "a = int(input())\nb = [int(x) for x in input().split()]\nb.sort()\nc = []\nd = []\nresult = [0] * a\nans = 0\nk = -1\nl = 0\nm = 0\nif a == 1:\n    print(0)\n    print(*b)\nelse:\n    for i in range(a // 2):\n        c.append(b[i])\n    for j in range(i + 1, a):\n        d.append(b[j])\n    while k + 1 != a:\n        k += 1\n        if (k + 1) % 2 != 0:\n            result[k] = d[l]\n            l += 1\n        else:\n            result[k] = c[m]\n            m += 1\n    for n in range(1, a - 1):\n        if result[n] < result[n - 1] and result[n] < result[n + 1]:\n            ans += 1\n    print(ans)\n    print(*result)", "def solve():\n    n = int(input().strip())\n    a = list(map(int, input().strip().split()))\n    a.sort()\n    a1 = a[:n // 2]\n    a2 = a[n // 2:]\n    flag = True\n    cursor1 = 0\n    cursor2 = 0\n    prevPrice = -100\n    ans = 0\n    for i in range(len(a2)):\n        if i + 1 < len(a2):\n            ans += 1 if a2[i] > a1[i] and a1[i] < a2[i + 1] else 0\n    print(ans)\n    for i in range(n):\n        if not flag:\n            print(a1[cursor1], end=' ')\n            cursor1 += 1\n        else:\n            print(a2[cursor2], end=' ')\n            cursor2 += 1\n        flag = not flag\nt = 1\nfor _ in range(t):\n    solve()", "def solve():\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n <= 2:\n        print(0)\n        print(*p)\n        return\n    p.sort()\n    a = [0] * n\n    l = 0\n    k = n\n    if n % 2 == 0:\n        k -= 1\n    for i in range(1, k, 2):\n        a[i] = p[l]\n        l += 1\n    l = n - 1\n    for i in range(k - 1, -1, -2):\n        a[i] = p[l]\n        l -= 1\n    if n % 2 == 0:\n        a[-1] = p[l]\n    cnt = 0\n    for i in range(1, n - 1):\n        if a[i] < a[i - 1] and a[i] < a[i + 1]:\n            cnt += 1\n    print(cnt)\n    print(*a)\n    return\n\ndef main():\n    t = 1\n    for _ in range(t):\n        solve()\nmain()", "n = int(input(''))\narr = list(map(int, input().split()))\narr.sort()\ni = 0\nsol = [0] * n\nfor j in range(1, n, 2):\n    sol[j] = arr[i]\n    i += 1\nfor j in range(0, n, 2):\n    sol[j] = arr[i]\n    i += 1\ncnt = 0\nfor j in range(1, n - 1):\n    if sol[j] < sol[j - 1] and sol[j] < sol[j + 1]:\n        cnt += 1\nprint(cnt)\nprint(*sol)", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nb = [0] * n\nk = 0\nfor j in range(1, n, 2):\n    b[j] = a[k]\n    k = k + 1\nfor j in range(0, n, 2):\n    b[j] = a[k]\n    k = k + 1\nm = 0\nfor j in range(1, n - 1, 2):\n    if b[j] != b[j - 1] and b[j] != b[j + 1]:\n        m = m + 1\nprint(m)\nprint(*b)", "def winner(nums, n):\n    nums = sorted(nums)\n    ans = []\n    i = 0\n    j = n // 2\n    count = 0\n    while j < n:\n        ans.append(nums[j])\n        if i < n // 2:\n            ans.append(nums[i])\n            if j != n - 1 and nums[i] != nums[j]:\n                count += 1\n        j += 1\n        i += 1\n    return (ans, count)\nn = int(input())\n(nums, count) = winner([int(i) for i in input().split()], n)\nprint(count)\nfor num in nums:\n    print(num, end=' ')", "n = int(input())\nl = [int(i) for i in input().split()]\nl.sort()\np = 0\nnew = []\nfor i in range(n // 2, n):\n    new.append(l[i])\n    if p < n // 2:\n        new.append(l[p])\n        p += 1\nx = 0\nfor i in range(1, n - 1):\n    if new[i] < new[i - 1] and new[i] < new[i + 1]:\n        x += 1\nprint(x)\nprint(*new)", "def solve(n, A):\n    A.sort()\n    v = [0] * n\n    j = 0\n    for i in range(1, n, 2):\n        v[i] = A[j]\n        j += 1\n    for i in range(0, n, 2):\n        v[i] = A[j]\n        j += 1\n    count = 0\n    for i in range(1, n - 1):\n        pre = i - 1\n        cur = i\n        next = i + 1\n        if v[pre] > v[cur] and v[next] > v[cur]:\n            count += 1\n    print(count)\n    return v\nres = []\nn = int(input())\nin_ = map(int, input().split(' '))\nfor c in in_:\n    res.append(int(c))\nprint(*solve(n, res))", "n = int(input())\nl = list(map(int, input().split()))\nlena = len(l)\nl.sort()\nleft = l[:lena // 2]\nright = l[lena // 2:]\nleft.sort()\nright.sort()\nanswer = []\ncount = 0\nfor i in range(len(right)):\n    answer.append(right[i])\n    if i < len(left):\n        answer.append(left[i])\n        if answer[-1] < answer[-2] and i < len(right) - 1:\n            count += 1\nprint(count)\nprint(*answer)", "for _ in range(1):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if len(l) == 1:\n        print(0)\n        print(l[0])\n    else:\n        l.sort()\n        m = [0] * n\n        ind = 0\n        for i in range(1, n, 2):\n            m[i] = l[ind]\n            ind += 1\n        for i in range(0, n, 2):\n            m[i] = l[ind]\n            ind += 1\n        ans = 0\n        for i in range(1, len(m) - 1):\n            if m[i - 1] > m[i] and m[i] < m[i + 1]:\n                ans += 1\n        m1 = [0] * n\n        ind = 0\n        for i in range(1, n, 2):\n            m1[i] = l[ind]\n            ind += 1\n        ind = n - 1\n        for i in range(0, n, 2):\n            m1[i] = l[ind]\n            ind -= 1\n        ans1 = 0\n        for i in range(1, len(m) - 1):\n            if m1[i - 1] > m1[i] and m1[i] < m1[i + 1]:\n                ans1 += 1\n        if ans > ans1:\n            print(ans)\n            print(' '.join((str(x) for x in m)))\n        else:\n            print(ans1)\n            print(' '.join((str(x) for x in m1)))", "n = int(input())\nar = list(map(int, input().split()))\nar = sorted(ar)\nans = [0] * n\nj = 0\nfor i in range(1, n, 2):\n    ans[i] = ar[j]\n    j += 1\nj = n // 2\nfor i in range(0, n, 2):\n    ans[i] = ar[j]\n    j += 1\ncnt = 0\nfor i in range(1, n - 1):\n    if ans[i] < ans[i - 1] and ans[i] < ans[i + 1]:\n        cnt += 1\nprint(cnt)\nprint(*ans)", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nans = []\ncount = 0\nc = 0\nfor i in range(n // 2, n):\n    ans.append(a[i])\n    if c < n // 2:\n        ans.append(a[c])\n        c = c + 1\nfor i in range(1, n, 2):\n    if i + 1 < n:\n        if ans[i] < ans[i - 1] and ans[i] < ans[i + 1]:\n            count = count + 1\nprint(count)\nprint(*ans)", "n = int(input())\narr = list(map(int, input().split()))\nflag = 1\nif n <= 2:\n    print(0)\n    print(*arr)\n    flag = 0\narr.sort(reverse=True)\nfinal = ['0']\npair = 0\nif flag == 1:\n    k = 0\n    j = 1\n    if n % 2 != 0:\n        temp1 = arr[:n // 2 + 1]\n        temp2 = arr[n // 2 + 1:]\n    else:\n        temp1 = arr[:n // 2]\n        temp2 = arr[n // 2:]\n        rem_val = temp2.pop(0)\n    for i in range(0, len(temp2)):\n        if temp1[k] == temp2[i] or temp1[j] == temp2[i]:\n            pass\n        else:\n            pair += 1\n        final.pop(-1)\n        final.append(temp1[k])\n        final.append(temp2[i])\n        final.append(temp1[j])\n        k += 1\n        j += 1\n    if n % 2 == 0:\n        final.append(rem_val)\nif flag == 1:\n    print(pair)\n    print(*final)", "n = int(input())\narr = [int(x) for x in input().split()]\narr.sort()\narr1 = arr[0:n // 2]\narr2 = arr[n // 2:]\narr3 = []\nfor i in range(n // 2):\n    arr3.append(arr2[i])\n    arr3.append(arr1[i])\nif n % 2 != 0:\n    arr3.append(arr2[-1])\nans = 0\nfor i in range(1, n - 1):\n    if arr3[i - 1] > arr3[i] and arr3[i + 1] > arr3[i]:\n        ans += 1\nprint(ans)\nprint(*arr3)", "n = int(input())\nl = list(map(int, input().split()))\nl.sort()\nj = 0\nmid = len(l) // 2\na = [0] * (n + 2)\nfor i in range(mid):\n    (a[i + j], a[i + 1 + j]) = (l[mid + i], l[i])\n    j += 1\nif n % 2 != 0:\n    a[n - 1] = l[n - 1]\np = 0\nfor i in range(1, n):\n    if a[i - 1] > a[i] and a[i] < a[i + 1]:\n        p += 1\nprint(p)\na = a[:n]\ns = ' '.join(map(str, a))\nprint(s)", "n = int(input())\na = sorted(list(map(int, input().split())))\narr = [0] * n\ni = 0\nfor j in range(n // 2, n):\n    arr[i] = a[j]\n    i += 2\ni = 1\nfor j in range(n // 2):\n    arr[i] = a[j]\n    i += 2\ncnt = 0\nfor i in range(1, n - 1):\n    if arr[i - 1] > arr[i] < arr[i + 1]:\n        cnt += 1\nprint(cnt)\nprint(*arr)", "n = int(input())\nls = list(map(int, input().split()))\nls.sort()\nReturnLs = []\ni = 0\nfor j in range(n // 2, n):\n    ReturnLs.append(ls[j])\n    if i != n // 2:\n        ReturnLs.append(ls[i])\n    i += 1\ncount = 0\nfor i in range(1, n - 1, 2):\n    if ReturnLs[i] < ReturnLs[i + 1] and ReturnLs[i - 1] > ReturnLs[i]:\n        count += 1\nprint(count)\nprint(*ReturnLs)", "n = int(input())\naaa = list(map(int, input().split()))\naaa.sort()\nm0 = (n - 1) // 2\nm1 = n // 2\nans = 0\norder = [0] * n\nfor i in range(m1, n):\n    order[2 * (i - m1)] = aaa[i]\nfor i in range(m1):\n    order[2 * i + 1] = aaa[i]\n    if order[2 * i] > order[2 * i + 1]:\n        ans += 1\nif n % 2 == 0 and order[-2] > order[-1]:\n    ans -= 1\nprint(ans)\nprint(*order)", "n = int(input())\na = list(sorted(list(map(int, input().split()))))\nk = n // 2\nb = []\nj = k\nl = 0\nfor i in range(n):\n    if i % 2 == 0:\n        b.append(a[j])\n        j += 1\n    else:\n        b.append(a[l])\n        l += 1\nc = 0\nfor i in range(1, n - 1, 2):\n    if b[i] < b[i + 1] and b[i] < b[i - 1]:\n        c += 1\nprint(c)\nprint(*b, sep=' ')", "n = int(input())\nl = list(map(int, input().split()))[:n]\nf = [0] * n\nl.sort(reverse=True)\ncnt = 0\nfor i in range(n):\n    if i % 2 == 1:\n        f[i] = l.pop()\nfor i in range(n):\n    if f[i] == 0:\n        f[i] = l.pop()\nif n % 2 == 0:\n    for i in range(1, n - 2, 2):\n        if f[i] < f[i - 1] and f[i] < f[i + 1]:\n            cnt += 1\nelse:\n    for i in range(1, n - 1, 2):\n        if f[i] < f[i - 1] and f[i] < f[i + 1]:\n            cnt += 1\nprint(cnt)\nprint(*f)", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nind = 0\nans = [0] * n\ncnt = 0\nfor i in range(1, n, 2):\n    ans[i] = a[ind]\n    ind += 1\nfor i in range(0, n, 2):\n    ans[i] = a[ind]\n    ind += 1\nfor i in range(1, n - 1):\n    if ans[i] < ans[i - 1] and ans[i] < ans[i + 1]:\n        cnt += 1\nprint(cnt)\nprint(*ans)", "n = int(input())\nl = list(map(int, input().split()))\nans = 0\nl.sort()\nla = l[-1]\nk = []\nif n < 3:\n    print(0)\n    print(*l)\nelif n % 2 != 0:\n    ans = 0\n    l1 = l[0:n // 2]\n    l2 = l[n // 2:]\n    k.append(l[n // 2])\n    for i in range(n // 2, n - 1):\n        ma1 = l[i]\n        ma2 = l[i + 1]\n        if l[i - n // 2] < ma1 and l[i - n // 2] < ma2:\n            k.append(l[i - n // 2])\n            k.append(ma2)\n            ans += 1\n        else:\n            k.append(l[i - n // 2])\n            k.append(ma2)\n    print(ans)\n    print(*k)\nelse:\n    ans = 0\n    l1 = l[0:n // 2 - 1]\n    l2 = l[n // 2 - 1:]\n    k.append(l[n // 2])\n    for i in range(n // 2, n - 1):\n        ma1 = l[i]\n        ma2 = l[i + 1]\n        if l[i - n // 2] < ma1 and l[i - n // 2] < ma2:\n            k.append(l[i - n // 2])\n            k.append(ma2)\n            ans += 1\n        else:\n            k.append(l[i - n // 2])\n            k.append(ma2)\n    k.append(l[n // 2 - 1])\n    print(ans)\n    print(*k)", "n = int(input())\nl = list(map(int, input().split()))\nl.sort()\nif n < 3:\n    print(0)\n    print(*l)\nelse:\n    arr = [0] * n\n    j = 0\n    for i in range(1, n, 2):\n        arr[i] = l[j]\n        j += 1\n    for i in range(0, n, 2):\n        arr[i] = l[j]\n        j += 1\n    ans = 0\n    for i in range(1, n - 1):\n        if arr[i - 1] > arr[i] and arr[i + 1]:\n            ans += 1\n    print(ans)\n    print(*arr)", "n = int(input())\nA = list(map(int, input().split()))\nA = sorted(A)\nB = A[0:n // 2]\nC = A[n // 2:]\na = []\nfor i in range(len(B)):\n    a.append(C[i])\n    a.append(B[i])\nif n % 2 != 0:\n    a.append(C[-1])\nans = 0\nfor i in range(1, n - 1):\n    if a[i] < a[i - 1] and a[i] < a[i + 1]:\n        ans += 1\nprint(ans)\nfor x in a:\n    print(x, end=' ')\nprint()", "n = int(input())\na = list(map(int, input().split()))\na.sort()\narr = [0 for i in range(n)]\nind = 0\nfor i in range(1, n, 2):\n    arr[i] = a[ind]\n    ind += 1\nfor i in range(0, n, 2):\n    arr[i] = a[ind]\n    ind += 1\ncount = 0\nfor i in range(1, n - 1):\n    if arr[i] < arr[i - 1] and arr[i] < arr[i + 1]:\n        count += 1\nprint(count)\nprint(*arr)", "import sys\ninput = sys.stdin.readline\nins = lambda : input().rstrip()\nini = lambda : int(input().rstrip())\ninm = lambda : map(int, input().rstrip().split())\ninl = lambda : list(map(int, input().split()))\nout = lambda x, s='\\n': print(s.join(map(str, x)))\nn = ini()\na = sorted(inl())\nans = []\ncount = 0\nfor i in range(n // 2):\n    ans.append(a[i + n // 2])\n    ans.append(a[i])\nif n % 2:\n    ans.append(a[-1])\nfor i in range(1, n - 1):\n    count += 1 if ans[i] < ans[i - 1] and ans[i] < ans[i + 1] else 0\nprint(count)\nprint(*ans)", "n = int(input())\nlist1 = list(map(int, input().split()))\nlist1.sort()\nif n <= 2:\n    print(0)\n    print(*list1)\nelse:\n    temp = [-1] * len(list1)\n    count = 0\n    for i in range(1, len(list1), 2):\n        temp[i] = list1[count]\n        count += 1\n    for i in range(0, len(list1), 2):\n        temp[i] = list1[count]\n        count += 1\n    s = 0\n    for i in range(1, len(list1) - 1):\n        if temp[i] < temp[i - 1] and temp[i] < temp[i + 1]:\n            s += 1\n    print(s)\n    print(*temp)", "import math\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nfirstPart = []\nsecondPart = []\nfirstPartLength = math.floor((n - 1) / 2)\nsecondPartLength = n - firstPartLength\nfor i in range(firstPartLength):\n    firstPart.append(a[i])\nfor i in range(firstPartLength, n):\n    secondPart.append(a[i])\nc = []\nsecondPartPointer = 0\nans = 0\nsecondPart.reverse()\nfirstPart.reverse()\nfor i in range(firstPartLength):\n    before = secondPart[secondPartPointer]\n    c.append(before)\n    secondPartPointer += 1\n    main = firstPart[i]\n    c.append(main)\n    after = secondPart[secondPartPointer]\n    if main < after and main < before:\n        ans += 1\nfor i in range(secondPartPointer, secondPartLength):\n    c.append(secondPart[i])\nprint(ans)\nfor i in range(n - 1):\n    print(c[i], end=' ')\nprint(c[n - 1])", "n = int(input())\nnums = list(map(int, input().split()))\nnums.sort(reverse=True)\nres = [None] * n\nb = (n - 1) // 2\nfor i in range(1, n, 2):\n    res[i] = nums.pop()\nfor i in range(0, n, 2):\n    res[i] = nums.pop()\nb = 0\nfor i in range(1, n - 1):\n    if res[i - 1] > res[i] and res[i] < res[i + 1]:\n        b += 1\nprint(b)\nfor x in res:\n    print(x, end=' ')\nprint()", "from math import ceil\nn = int(input())\nl = list(map(int, input().split()))\nl.sort()\nif len(l) == 1:\n    print(0)\n    print(*l)\n    exit()\nans = [0] * n\nc = 0\nfor i in range(1, n, 2):\n    ans[i] = l[c]\n    c += 1\nfor i in range(0, n, 2):\n    ans[i] = l[c]\n    c += 1\nfinal = 0\nfor i in range(1, n - 1):\n    if ans[i] < ans[i - 1] and ans[i] < ans[i + 1]:\n        final += 1\nprint(final)\nprint(*ans)", "n = int(input())\na = [int(x) for x in input().split()]\nb = [0] * n\na.sort()\nk = 0\nc = 0\nfor i in range(1, n, 2):\n    b[i] = a[k]\n    k += 1\nfor i in range(0, n, 2):\n    b[i] = a[k]\n    k += 1\nfor i in range(1, n - 1):\n    if b[i] < b[i - 1] and b[i] < b[i + 1]:\n        c += 1\nprint(c)\nprint(*b)", "n = int(input())\na = [int(inp) for inp in input().split()]\na.sort()\ni = 0\nj = len(a) // 2\nb = []\nsw = 1\nwhile j < len(a) or i < len(a) // 2:\n    if sw:\n        b.append(a[j])\n        j += 1\n    else:\n        b.append(a[i])\n        i += 1\n    sw = 1 - sw\nres = 0\ni = 1\nwhile i < len(b) - 1:\n    if b[i] < b[i - 1] and b[i] < b[i + 1]:\n        res += 1\n        i += 1\n    i += 1\nprint(res)\nprint(*b, sep=' ')", "n = int(input())\na = [int(i) for i in input().split()]\na.sort()\nans = []\np = 0\nif n % 2:\n    for i in range(n // 2, n):\n        ans.append(a[i])\n        if i < n - 1:\n            ans.append(a[p])\n            p += 1\nelse:\n    for i in range(n // 2, n):\n        ans.append(a[i])\n        ans.append(a[p])\n        p += 1\ncnt = 0\nfor i in range(1, n - 1):\n    if ans[i] < ans[i - 1] and ans[i] < ans[i + 1]:\n        cnt += 1\nprint(cnt)\nprint(*ans)", "import sys\nn = int(input())\nlst1 = list(map(int, input().split()))\na = [None] * n\nlst1.sort()\nindex = ans = 0\nfor i in range(1, n, 2):\n    a[i] = lst1[index]\n    index += 1\nfor i in range(0, n, 2):\n    a[i] = lst1[index]\n    index += 1\nfor i in range(1, n - 1, 2):\n    if a[i] < a[i - 1] and a[i] < a[i + 1]:\n        ans += 1\nprint(ans)\nprint(*a)"]