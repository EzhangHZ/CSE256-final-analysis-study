["def solv(a, b):\n    c = 0\n    if b == 1:\n        b += 1\n        c += 1\n    while a:\n        a = a // b\n        c += 1\n    return c\nfor test in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = 0\n    ans = []\n    for i in range(31):\n        ans.append(solv(a, b + i) + i)\n    print(min(ans))", "for i in range(int(input())):\n    input_ = input().split()\n    (a, b) = (int(input_[0]), int(input_[1]))\n    (prev, cur) = (9999999, 0)\n    i = 0\n    while True:\n        cur = i\n        y = a\n        x = b + i\n        while y != 0 and x > 1:\n            y = int(y / x)\n            cur += 1\n        if prev < cur:\n            print(prev)\n            break\n        if x > 1:\n            prev = cur\n        i += 1", "prevn = 50\n\ndef divide(a, b):\n    n = 0\n    while a != 0:\n        a = a // b\n        n += 1\n    return n\n\ndef operation(a, b):\n    localb = b\n    global prevn\n    prevn = 50\n    if localb == 1:\n        localb += 1\n    while True:\n        x = a\n        n = divide(x, localb)\n        if n + localb - b <= prevn:\n            prevn = n + localb - b\n            localb += 1\n        else:\n            return prevn\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        x = [int(j) for j in input().split()]\n        print(operation(x[0], x[1]))\nmain()", "def func(a, b, ops, x):\n    if b > a:\n        ops += 1\n        global fim\n        fim = ops\n        return\n    if a == b or b <= x:\n        ops += 1\n        b += 1\n        func(a, b, ops, x)\n        return\n    a = a // b\n    ops += 1\n    func(a, b, ops, x)\n    return\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    ops = 0\n    acu = 1\n    vals = []\n    while True:\n        func(a, b, ops, acu)\n        vals.append(fim)\n        if len(vals) > 10 or min(vals) == 1:\n            print(min(vals))\n            break\n        acu += 1", "MAX_OPS = 30\nfor _ in range(int(input())):\n    (a, b) = [int(x) for x in input().split()]\n    if b > a:\n        print(1)\n        continue\n    min_ops = a - b + 2\n    for i in range(0 if b > 1 else 1, MAX_OPS + 1):\n        current_b = b + i\n        current_ops = i\n        current_a = a\n        while current_a > 0:\n            current_a = current_a // current_b\n            current_ops += 1\n        min_ops = min(min_ops, current_ops)\n    print(min_ops)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    n = b\n    r = 99\n    while n - b < r:\n        m = a\n        i = 0\n        if n > 1:\n            while m:\n                i += 1\n                m //= n\n            r = min(r, n - b + i)\n        n += 1\n    print(r)", "def solve(a, b):\n    res = 32\n    for i in range(0, 8):\n        if b + i == 1:\n            continue\n        c = 0\n        tmp = a\n        while tmp > 0:\n            c += 1\n            tmp = tmp // (b + i)\n        res = min(res, i + c)\n    return res\nno_of_lines = int(input())\nwhile no_of_lines:\n    no_of_lines -= 1\n    (a, b) = input().split(' ')\n    print(solve(int(a), int(b)))", "def func(a, b):\n    c = 0\n    if b == 1:\n        return 10 ** 10\n    while a != 0:\n        a = a // b\n        c += 1\n    return c\nt = int(input())\nwhile t:\n    (a, b) = input().split()\n    (a, b) = (int(a), int(b))\n    ans = 0\n    while func(a, b) - func(a, b + 1) >= 1:\n        b += 1\n        ans += 1\n    print(ans + func(a, b))\n    t -= 1", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    m = 0\n    if b == 1:\n        b += 1\n        m += 1\n    initial_moves = m\n    low = 10000\n    ans = m\n    while ans <= low:\n        temp = a\n        ans = initial_moves\n        while temp != 0:\n            temp = temp // b\n            ans += 1\n        if ans <= low:\n            low = ans\n        b += 1\n        initial_moves += 1\n    print(low)", "t = int(input())\nfor p in range(0, t):\n    ab = input().split()\n    a = int(ab[0])\n    nota = a\n    b = int(ab[1])\n    notb = b\n    result = 0\n    all = []\n    for i in range(0, 20):\n        b = notb\n        a = nota\n        result = 0\n        result += i\n        b += i\n        if notb == 1:\n            b += 1\n            result += 1\n        while a > 0:\n            a = int(a / b)\n            result += 1\n        all.append(result)\n        if all[len(all) - 1] > all[len(all) - 2]:\n            print(all[len(all) - 2])\n            break", "from sys import stdin\nimport math\n\ndef main():\n    cases = int(stdin.readline().strip())\n    while cases:\n        (a, b) = map(int, stdin.readline().split())\n        if a == b:\n            print(2)\n        elif a < b:\n            print(1)\n        else:\n            i = b\n            res = float('inf')\n            aux = a\n            min_ = 0\n            r = 0\n            if b == 1:\n                r += 1\n                i += 1\n                b += 1\n            while i <= b + 29:\n                aux = a\n                min_ = 0\n                while aux >= 1:\n                    aux //= i\n                    min_ += 1\n                min_ += i - b + r\n                if min_ < res:\n                    res = min_\n                i += 1\n            print(res)\n        cases -= 1\nmain()", "for t in range(int(input())):\n    (a, b) = map(int, input().split())\n    smallest = 50000\n    for i in range(20):\n        erste_zahl = a\n        zweite_zahl = b + i\n        actions = i\n        if zweite_zahl <= 1:\n            zweite_zahl += 1\n            actions += 1\n        while erste_zahl > 0:\n            erste_zahl = erste_zahl // zweite_zahl\n            actions += 1\n        if actions < smallest:\n            smallest = actions\n    print(smallest)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    n = b\n    r = 99\n    while n - b < r:\n        m = a\n        i = 0\n        if n > 1:\n            while m:\n                i += 1\n                m //= n\n            r = min(r, n - b + i)\n        n += 1\n    print(r)", "t = int(input())\nfor t0 in range(t):\n    (a, b) = [int(i) for i in input().split()]\n    s = []\n    k = 0\n    if b == 1:\n        k += 1\n        b = 2\n    for i in range(30):\n        a0 = a\n        k0 = k + i\n        while a0 != 0:\n            a0 = a0 // (b + i)\n            k0 += 1\n        s.append(k0)\n    print(min(s))", "import sys\ninp = sys.stdin.readline\nfor _ in range(int(inp())):\n    (a, b) = map(int, inp().split())\n    ans = sys.maxsize\n    for i in range(40):\n        if b == 1 and i == 0:\n            continue\n        cnt = i\n        now = a\n        while now:\n            now //= b + i\n            cnt += 1\n        ans = min(ans, cnt)\n    print(ans)", "from collections import Counter, deque, defaultdict\nfrom itertools import accumulate, product, groupby\nimport operator\nimport math\nfrom functools import reduce\n\ndef solve():\n    (a, b) = [int(char) for char in input().split()]\n\n    def divideCount(nb):\n        if nb == 1:\n            return 10 ** 9\n        na = a\n        count = 0\n        while na != 0:\n            na //= nb\n            count += 1\n        return count\n    ans = 10 ** 9\n    for inc in range(31):\n        possible_b = b + inc\n        ans = min(ans, inc + divideCount(possible_b))\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "n = int(input())\na = 0\nb = 0\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    ans = float('inf')\n    for c in range(30):\n        if b + c == 1:\n            continue\n        res = c\n        x = a\n        while x > 0:\n            x = x // (b + c)\n            res += 1\n        ans = min(ans, res)\n    print(ans)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    n = b\n    r = 23\n    while n - b < r:\n        m = a\n        i = 0\n        if ~-n:\n            while m:\n                i += 1\n                m //= n\n            r = min(r, n - b + i)\n        n += 1\n    print(r)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    t = 100\n    for d in range(33):\n        if b + d > 1:\n            c = d\n            (x, y) = (a, b + d)\n            while x:\n                x //= y\n                c += 1\n            t = min(t, c)\n    print(t)", "from math import log\nt = int(input())\nfor _ in range(t):\n    (n, b) = map(int, input().split())\n    mxStep = 0\n    extra = 1\n    if b == 1:\n        b += 1\n        extra = 2\n    nn = n\n    while nn >= b:\n        nn //= b\n        mxStep += 1\n    mnMx = mxStep\n    for i in range(1, mxStep):\n        nn = n\n        bb = b + i\n        steps = 0\n        while steps < mxStep - i and nn >= bb:\n            nn //= bb\n            steps += 1\n        if steps + i < mnMx:\n            mnMx = steps + i\n    print(mnMx + extra)", "from math import log\nt = int(input())\nfor _ in range(t):\n    (n, b) = map(int, input().split())\n    mxStep = 0\n    extra = 1\n    if b == 1:\n        b += 1\n        extra = 2\n    nn = n\n    while nn >= b:\n        nn //= b\n        mxStep += 1\n    mnMx = mxStep\n    for i in range(1, mxStep):\n        nn = n\n        bb = b + i\n        steps = 0\n        while steps < mxStep - i and nn >= bb:\n            nn //= bb\n            steps += 1\n        if steps + i < mnMx:\n            mnMx = steps + i\n    print(mnMx + extra)", "import sys\ninput = sys.stdin.readline\n\ndef f(a, b):\n    c = 0\n    while b < 2:\n        b += 1\n        c += 1\n    while a > 0:\n        a //= b\n        c += 1\n    return c\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(min((i + f(a, b + i) for i in range(100))))", "def check(a, b):\n    outer_counter = 0\n    if b == 1:\n        outer_counter += 1\n        b += 1\n    result = 35\n    for i in range(31):\n        temp_b = b + i\n        zero = a\n        inner_counter = i\n        while zero != 0:\n            zero = zero // temp_b\n            inner_counter += 1\n        result = min(result, inner_counter + outer_counter)\n    print(result)\ncounter = int(input())\nfor i in range(counter):\n    input_info = [int(i) for i in input().split()]\n    a = input_info[0]\n    b = input_info[1]\n    check(a, b)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    n = b\n    r = 23\n    while n - b < r:\n        m = a\n        i = 0\n        if ~-n:\n            while m:\n                i += 1\n                m //= n\n            r = min(r, n - b + i)\n        n += 1\n    print(r)", "num_inp = lambda : int(input())\narr_inp = lambda : list(map(int, input().split()))\nsp_inp = lambda : map(int, input().split())\nstr_inp = lambda : input()\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    n = b\n    r = 99\n    while n - b < r:\n        m = a\n        i = 0\n        if n > 1:\n            while m:\n                i += 1\n                m //= n\n            r = min(r, n - b + i)\n        n += 1\n    print(r)", "for p in range(int(input())):\n    (a, b) = map(int, input().split())\n    (d, c) = (40, 0)\n    for j in range(30):\n        a1 = a\n        if b == 1:\n            b = b + 1\n            c = c + 1\n        f = 0\n        while a1 != 0:\n            a1 //= b\n            f += 1\n        d = min(d, f + c)\n        b = b + 1\n        c = c + 1\n    print(d)", "t = int(input())\nfor _ in range(t):\n    (a, b) = list(map(int, input().split()))\n    ans = 0\n    count = 0\n    temp = 0\n    while a != 0:\n        if a // b == 0:\n            if ans == 0:\n                ans += 1\n            break\n        if b == 1:\n            b += 1\n            count += 1\n        temp = 0\n        (c, d) = (a, b)\n        while c != 0:\n            temp += 1\n            c = c // d\n        if ans == 0:\n            ans = temp + count\n        elif temp + count > ans:\n            break\n        else:\n            ans = temp + count\n        b += 1\n        count += 1\n    print(ans)", "from _testcapi import INT_MAX\n\ndef solve():\n    (a, b) = map(int, input().split())\n    ans = INT_MAX\n    for i in range(30):\n        n = a\n        m = b + i\n        y = 0\n        if m == 1:\n            continue\n        while n != 0:\n            n //= m\n            y += 1\n        ans = min(ans, y + i)\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "for s in [*open(0)][1:]:\n    (ao, ob) = map(int, s.split())\n    solutions = []\n    for i in range(ob, ob + 10):\n        steps = i - ob\n        b = i\n        a = ao\n        while a != 0:\n            if a / b == a or a == b:\n                steps += 1\n                b += 1\n            else:\n                a = int(a / b)\n                steps += 1\n        solutions.append(steps)\n    print(min(solutions))", "def findM(a, b):\n    m = 0\n    if b == 1:\n        m += 1\n        b += 1\n    while a > 0:\n        a //= b\n        m += 1\n    return m\nfor _ in range(0, int(input())):\n    (a, b) = map(int, input().split())\n    pm = findM(a, b)\n    m = 1 + findM(a, b + 1)\n    if pm < m:\n        print(pm)\n    else:\n        s = 2\n        while m <= pm:\n            pm = m\n            m = s + findM(a, b + s)\n            s += 1\n        print(pm)", "t = int(input())\nresult = []\nfor i in range(t):\n    j = 0\n    (a, b) = list(map(int, input().split(' ')))\n    minimum = float('inf')\n    initialea = a\n    if b == 1:\n        count = [minimum]\n        j = 1\n    else:\n        count = []\n    while j <= minimum - 1:\n        a = initialea\n        countt = j\n        while a // (j + b) != 0:\n            countt += 1\n            a = a // (j + b)\n        countt += 1\n        if countt < minimum:\n            minimum = countt\n        count.append(minimum)\n        j += 1\n    result.append(minimum)\nfor i in result:\n    print(i)", "def main():\n    tests = int(input())\n    while tests > 0:\n        (a, b) = [int(x) for x in input().split(' ')]\n        result = 50\n        start = 1 if b == 1 else 0\n        for i in range(start, result):\n            b_aux = b + i\n            a_aux = a\n            movements = i\n            while a_aux > 0:\n                a_aux = int(a_aux / b_aux)\n                movements += 1\n                if movements > result:\n                    break\n            if movements < result:\n                result = movements\n        print(result)\n        tests -= 1\nmain()", "prevn = 50\n\ndef divide(a, b):\n    n = 0\n    while a != 0:\n        a = a // b\n        n += 1\n    return n\n\ndef operation(a, b):\n    localb = b\n    global prevn\n    prevn = 50\n    if localb == 1:\n        localb += 1\n    while True:\n        x = a\n        n = divide(x, localb)\n        if n + localb - b <= prevn:\n            prevn = n + localb - b\n            localb += 1\n        else:\n            return prevn\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        x = [int(j) for j in input().split()]\n        print(operation(x[0], x[1]))\nmain()", "def n_div(x, y):\n    count = 0\n    while x:\n        x //= y\n        count += 1\n    return count\nt = int(input())\nfor i in range(t):\n    [a, b] = list(map(int, input().split(' ')))\n    n_op = 0\n    if b == 1:\n        n_op = 1\n    n_ini = n_div(a, b + n_op) + n_op\n    temp = [n_ini]\n    temp += [n_div(a, b + n_op + x) + x + n_op for x in range(1, n_ini)]\n    print(min(temp))", "def find_min(a, b):\n    minimum = 0\n    if b == 1:\n        minimum += 1\n        b += 1\n    while a > 0:\n        a //= b\n        minimum += 1\n    return minimum\n\ndef main():\n    for _ in range(0, int(input())):\n        str_input = list(input().split(' '))\n        a = int(str_input[0])\n        b = int(str_input[1])\n        ret = find_min(a, b)\n        minimum = 1 + find_min(a, b + 1)\n        if ret < minimum:\n            print(ret)\n        else:\n            aux = 2\n            while minimum <= ret:\n                ret = minimum\n                minimum = aux + find_min(a, b + aux)\n                aux += 1\n            print(ret)\nmain()", "def func(a, b, ops, x):\n    if b > a:\n        ops += 1\n        global fim\n        fim = ops\n        return\n    if a == b or b <= x:\n        ops += 1\n        b += 1\n        func(a, b, ops, x)\n        return\n    a = a // b\n    ops += 1\n    func(a, b, ops, x)\n    return\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    ops = 0\n    acu = 1\n    vals = []\n    while True:\n        func(a, b, ops, acu)\n        vals.append(fim)\n        if len(vals) > 10 or min(vals) == 1:\n            print(min(vals))\n            break\n        acu += 1", "def verif(a, b):\n    c = 0\n    if b > a:\n        return 1\n    while a > 0:\n        a = a // b\n        c += 1\n    return c\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    count = 0\n    if b == 1:\n        b += 1\n        count += 1\n    while verif(a, b) > verif(a, b + 1):\n        count += 1\n        b += 1\n    print(verif(a, b) + count)", "def verif(a, b):\n    c = 0\n    if b > a:\n        return 1\n    while a > 0:\n        a = a // b\n        c += 1\n    return c\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    count = 0\n    if b == 1:\n        b += 1\n        count += 1\n    while verif(a, b) > verif(a, b + 1):\n        count += 1\n        b += 1\n    print(verif(a, b) + count)", "import math\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    operacoes = math.inf\n    for i in range(50):\n        if b + i <= 1:\n            continue\n        aux = i\n        c = a\n        while c != 0:\n            c = math.floor(c // (b + i))\n            aux += 1\n        if operacoes > aux:\n            operacoes = aux\n    print(operacoes)", "import math\ntests = int(input())\nfor i in range(tests):\n    (a, b) = map(int, input().split())\n    operations = 0\n    while a != 0:\n        operations += 1\n        if b == 1:\n            b += 1\n            continue\n        exp1 = math.log(a, b)\n        exp2 = math.log(a, b + 1) + 1\n        if exp1 < exp2:\n            a = a // b\n        else:\n            b += 1\n    print(operations)", "from math import log\nt = int(input())\nfor i in range(t):\n    total = 0\n    (a, b) = input().split()\n    (a, b) = (int(a), int(b))\n    if b == 1:\n        b += 1\n        total += 1\n    b0 = b\n    loga = log(a)\n    while True:\n        if loga // log(b) == loga // log(b + 1):\n            max = b\n            break\n        else:\n            b += 1\n    total += max - b0\n    while a != 0:\n        a //= b\n        total += 1\n    print(total)", "for _ in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    minimum = 0\n    done = False\n    counter_b = 0\n    if b == 1:\n        b += 1\n        counter_b += 1\n    while not done:\n        aux = a\n        counter = 0\n        while aux > 0:\n            counter += 1\n            aux //= b\n        counter += counter_b\n        b += 1\n        counter_b += 1\n        if minimum == 0:\n            minimum = counter\n        elif counter > minimum:\n            done = True\n        else:\n            minimum = counter\n    print(minimum)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = []\n    for i in range(7):\n        y = a\n        c = 0\n        if b == 1 and i == 0:\n            pass\n        else:\n            while y != 0:\n                y //= b + i\n                c += 1\n            l.append((c + i, b + i))\n    print(min(l)[0])", "import math\ncase = int(input())\nfor i in range(case):\n    (a, b) = map(int, input().split())\n    flag = False\n    ll = [-1]\n    s = b\n    while b < 10 ** 10 and (not flag):\n        count = 0\n        c = a\n        if b == 1:\n            b = 2\n        while not flag:\n            c //= b\n            count += 1\n            if c == 0:\n                break\n        ll.insert(-1, count + b - s)\n        b += 1\n        for t in range(len(ll) - 1):\n            if ll[t] < ll[t + 1]:\n                flag = True\n                break\n    ll.pop(-1)\n    print(min(ll))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    n = b\n    r = 23\n    while n - b < r:\n        m = a\n        i = 0\n        if ~-n:\n            while m:\n                i += 1\n                m //= n\n            r = min(r, n - b + i)\n        n += 1\n    print(r)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    n = b\n    r = 23\n    while n - b < r:\n        m = a\n        i = 0\n        if ~-n:\n            while m:\n                i += 1\n                m //= n\n            r = min(r, n - b + i)\n        n += 1\n    print(r)", "import math\nT = int(input())\nfor t in range(T):\n    (a, b) = [int(k) for k in input().split()]\n    ans = float('inf')\n    if b == 1:\n        init_cnt = 1\n        b += 1\n    else:\n        init_cnt = 0\n    for i in range(20):\n        tmp = a\n        cnt = init_cnt\n        while tmp > 0:\n            cnt += 1\n            tmp //= b + i\n        ans = min(ans, cnt + i)\n    print(ans)", "import math\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    ans = math.inf\n    c = 0\n    for i in range(0, 31):\n        if b == 1 and i == 0:\n            continue\n        c = i\n        tmp = a\n        while tmp != 0:\n            tmp //= b + i\n            c += 1\n        ans = min(ans, c)\n    print(ans)", "def calc(a, b):\n    if a == 1:\n        return 10000000000.0\n    i = 0\n    while b > 0:\n        b = b // a\n        i += 1\n    return i\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    ans = 0\n    while calc(b, a) - calc(b + 1, a) >= 1:\n        b += 1\n        ans += 1\n    print(ans + calc(b, a))", "import math\ncases = int(input())\nfor i in range(cases):\n    (a, b) = list(map(int, input().split()))\n    count = 0\n    while a:\n        if a // b == 0 or (b > 1 and math.log(a // b, b) <= math.log(a, b + 1)):\n            a //= b\n        else:\n            b += 1\n        count += 1\n    print(count)", "import math\nt = int(input())\nwhile t:\n    t = t - 1\n    (a, b) = map(int, input().split())\n    if b > a:\n        print(1)\n    else:\n        flag = False\n        if b == 1:\n            flag = True\n            b += 1\n        anss = 10000000000000\n        ans = 0\n        while True:\n            poww = 1\n            while math.floor(a / b ** poww) > 0:\n                poww += 1\n            if poww + ans <= anss:\n                anss = poww + ans\n                b += 1\n                ans += 1\n            else:\n                break\n        if flag:\n            print(anss + 1)\n        else:\n            print(anss)", "def getCount(a, b, ans):\n    while a != 0:\n        if a == b or b == 1:\n            b += 1\n        else:\n            a = a // b\n        ans += 1\n    return ans\nt = int(input())\nfor _ in range(t):\n    (a, b) = [int(s) for s in input().split(' ')]\n    if a < b:\n        print(1)\n    else:\n        a1 = getCount(a, b, 0)\n        a2 = 0\n        c = 0\n        while True:\n            c += 1\n            b += 1\n            a2 = getCount(a, b, c)\n            if a2 > a1:\n                break\n            else:\n                a1 = a2\n        print(a1)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    ans = 0\n    m = 9999999\n    while a != 0:\n        if b == 1:\n            b += 1\n            ans += 1\n        else:\n            temp = a\n            c = 0\n            while a != 0:\n                a //= b\n                c += 1\n            a = temp\n            if m < ans + c:\n                break\n            m = min(m, ans + c)\n            b += 1\n            ans += 1\n    print(m)", "for T in range(int(input())):\n    (a, b) = [int(p) for p in input().split()]\n    ans = 100000\n    if a < b:\n        print(1)\n    elif a == b:\n        print(2)\n    else:\n        running = True\n        best_yet = 10000000000\n        i = 0\n        if b == 1:\n            i = 1\n        while running:\n            curr_div = b + i\n            curr_ans = a\n            j = 0\n            while curr_ans > 0:\n                curr_ans = curr_ans // curr_div\n                j += 1\n            if i + j > best_yet:\n                running = False\n            if i + j < best_yet:\n                best_yet = i + j\n            i += 1\n        print(best_yet)", "def solve(a, b):\n    res = 32\n    for i in range(0, 6):\n        if b + i == 1:\n            continue\n        c = 0\n        tmp = a\n        while tmp > 0:\n            c += 1\n            tmp = tmp // (b + i)\n        res = min(res, i + c)\n    return res\nno_of_lines = int(input())\nwhile no_of_lines:\n    no_of_lines -= 1\n    (a, b) = input().split(' ')\n    print(solve(int(a), int(b)))", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split(' '))\n    if a < b:\n        print('1')\n    elif a == b:\n        print('2')\n    else:\n        min = 999999999\n        for i in range(0, 31):\n            (a_, b_) = (a, b)\n            if b_ == 1:\n                b_ += 1\n            cnt = 0 if b != 1 else 1\n            cnt += i\n            b_ += i\n            while a_ != 0:\n                a_ = a_ // b_\n                cnt += 1\n            if cnt < min:\n                min = cnt\n        print(min)", "def cou(a, b):\n    count = 0\n    while a > 0:\n        a = a // b\n        count += 1\n    return count\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    c = 0\n    if b == 1:\n        b += 1\n        c += 1\n    ans = []\n    for i in range(10):\n        ans.append(cou(a, b + i) + c + i)\n    print(min(ans))", "import math\ntrails = int(input())\nanswer_list = []\nfor x in range(trails):\n    numbers = input()\n    numbers = numbers.split()\n    a = int(numbers[0])\n    b = int(numbers[1])\n    answer = 0\n    if b == 1:\n        answer += 1\n        b += 1\n    while True:\n        y = int(math.log(a, b))\n        if (b + 1) ** (y - 1) > b ** y:\n            answer += 1\n            b += 1\n        else:\n            break\n    result = a\n    while result != 0:\n        result = result // b\n        answer += 1\n    answer_list.append(answer)\nfor s in answer_list:\n    print(s)", "inn = lambda : int(input())\ninm = lambda : map(int, input().split())\nins = lambda : str(input())\nina = lambda : list(map(int, input().split()))\n\ndef solve():\n    (a, b) = inm()\n    if a < b:\n        print(1)\n        return\n    ans = 10 ** 18\n    o = b == 1\n    for i in range(b + o, b + 11 + o):\n        moves = 0\n        aa = a\n        while aa // i > 1:\n            aa //= i\n            moves += 1\n        if aa > i:\n            moves += 1\n            aa //= i\n        moves += 1 + (aa == i)\n        ans = min(ans, moves + i - b)\n    print(ans)\n\ndef main():\n    t = 1\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    i = 0 if b >= 2 else 2 - b\n    res = a + 3\n    while i < res:\n        cont = i\n        x = a\n        d = b + i\n        while x:\n            x //= d\n            cont += 1\n        if cont < res:\n            res = cont\n        i += 1\n    print(res)", "def ii():\n    return int(input())\n\ndef mi():\n    return map(int, input().split())\nfor _ in range(ii()):\n    (a, b) = mi()\n    ans = 1000000000000\n    for i in range(0, 30):\n        temp = i\n        c = b + i\n        if c == 1:\n            continue\n        d = a\n        while d != 0:\n            d //= c\n            temp += 1\n        ans = min(ans, temp)\n    print(ans)", "def solve(a, b, m):\n    moves = m\n    while a != 0:\n        a //= b\n        moves += 1\n    return moves\nT = int(input())\nfor _ in range(T):\n    (a, b) = map(int, input().split())\n    base = b\n    decreasing = True\n    ans = 100000000000\n    while decreasing:\n        if b == 1:\n            b += 1\n        tmp = solve(a, b, b - base)\n        if tmp > ans:\n            decreasing = False\n            ans = min(ans, tmp)\n        else:\n            ans = tmp\n        b += 1\n    print(ans)", "import math\nimport sys\n\ndef getlist():\n    return [int(i) for i in input().split()]\n\ndef getmany():\n    return map(int, input().split())\n\ndef getstr():\n    return [str(i) for i in input().split()]\n\ndef solve():\n    (a, b) = getmany()\n    if a <= b:\n        print(1 + a // b)\n        return\n    if b > 32:\n        s = 0\n        while a != 0:\n            a //= b\n            s += 1\n        print(s)\n        return\n    if b == 1:\n        mins = sys.maxsize\n        for i in range(b + 1, 33):\n            x = a\n            s = i - b\n            while x != 0:\n                x //= i\n                s += 1\n            mins = min(mins, s)\n        print(mins)\n        return\n    if b <= 32:\n        mins = sys.maxsize\n        for i in range(b, 33):\n            x = a\n            s = i - b\n            while x != 0:\n                x //= i\n                s += 1\n            mins = min(mins, s)\n        print(mins)\n        return\nfor _ in range(int(input())):\n    solve()", "def func(a, b):\n    num_steps = 0\n    if a < b:\n        return 1\n    elif a == b:\n        return 2\n    else:\n        if b == 1:\n            b += 1\n            num_steps += 1\n        if b > 31622:\n            while root(a, b) > root(a, b + 1):\n                b += 1\n                num_steps += 1\n            return num_steps + root(a, b)\n        else:\n            while pwr(a, b) > pwr(a, b + 1):\n                b += 1\n                num_steps += 1\n            return num_steps + root(a, b)\n\ndef pwr(a, b):\n    for pwr in range(2, 31, 1):\n        if b ** pwr > a:\n            return pwr\n\ndef root(a, b):\n    for root in range(2, 31, 1):\n        if a ** (1.0 / root) < b:\n            return root\n\ndef main():\n    t = int(input())\n    a = [0] * t\n    b = [0] * t\n    for i in range(t):\n        (a[i], b[i]) = [int(i) for i in input().split()]\n    for i in range(t):\n        print(func(a[i], b[i]))\nmain()", "def func(a, b):\n    num_steps = 0\n    if a < b:\n        return 1\n    elif a == b:\n        return 2\n    else:\n        if b == 1:\n            b += 1\n            num_steps += 1\n        if b > 31622:\n            while pwr(a, b) > pwr(a, b + 1):\n                b += 1\n                num_steps += 1\n            return num_steps + root(a, b)\n        else:\n            while pwr(a, b) > pwr(a, b + 1):\n                b += 1\n                num_steps += 1\n            return num_steps + root(a, b)\n\ndef pwr(a, b):\n    for pwr in range(2, 31, 1):\n        if b ** pwr > a:\n            return pwr\n\ndef root(a, b):\n    for root in range(2, 31, 1):\n        if a ** (1.0 / root) < b:\n            return root\n\ndef main():\n    t = int(input())\n    a = [0] * t\n    b = [0] * t\n    for i in range(t):\n        (a[i], b[i]) = [int(i) for i in input().split()]\n    for i in range(t):\n        print(func(a[i], b[i]))\nmain()", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    ans = 2147483646\n    for i in range(35):\n        if b == 1 and i == 0:\n            continue\n        count = i\n        c = a\n        while c:\n            c = c // (b + i)\n            count += 1\n        ans = min(ans, count)\n    print(ans)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    op = 10 ** 9\n    for k in range(b, b + 15):\n        c = a\n        t = 0\n        if k == 1:\n            continue\n        while c:\n            c = c // k\n            t += 1\n        op = min(op, t + k - b)\n    print(op)", "import math\nn = int(input())\nfor x in range(n):\n    (a, b) = map(int, input().split())\n    res = 0\n    if b == 0:\n        res += 1\n        b += 1\n    if b == 1:\n        res += 1\n        b += 1\n    while math.log(a, b) - math.log(a, b + 1) > 1:\n        b += 1\n        res += 1\n    while a > 0:\n        a //= b\n        res += 1\n    print(res)", "import math\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    count = 0\n    min_ = 1000000\n    flag = 0\n    c = 0\n    b_init = b\n    while c < 100:\n        c += 1\n        if b != 1:\n            c1 = int(math.log(a, b))\n            count1 = c1 + (b - b_init) + 1\n            if pow(b, c1 + 1) == a:\n                count1 += 1\n            if min_ > count1:\n                min_ = count1\n        b += 1\n    print(min_)", "def f(a, b):\n    total = 0\n    while a > 0:\n        a //= b\n        total += 1\n    return total\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    best_ans = 10 ** 9\n    for test in range(max(2, b), b + 30):\n        best_ans = min(best_ans, test - b + f(a, test))\n    print(best_ans)", "import math\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = 0\n    l = a\n    g = []\n    if b == 1:\n        c = c + 1\n        b = b + 1\n    for j in range(int(math.sqrt(l)) + 1):\n        k = c\n        a = l\n        while a > 0:\n            a = a // (b + j)\n            k = k + 1\n        g.append(k + j)\n        if k < b + j - 1:\n            break\n    print(min(g))", "import math\n\ndef get_num_div(a, b):\n    result = 0\n    while a > 0:\n        a //= b\n        result += 1\n    return result\nT = int(input())\nfor t in range(T):\n    (a, b) = tuple([int(x) for x in input().split()])\n    num_operation = 0\n    if b == 1:\n        b += 1\n        num_operation += 1\n    min_new_op = a + 1\n    for num_plus in range(1000000):\n        new_b = b + num_plus\n        num_op_left = get_num_div(a, new_b)\n        cur_new_op = num_plus + num_op_left\n        if cur_new_op <= min_new_op:\n            min_new_op = cur_new_op\n        else:\n            break\n    num_operation += min_new_op\n    print(num_operation)", "def div(a, b):\n    s = 0\n    while a >= b:\n        a = a // b\n        s += 1\n    return s\n\ndef ad(a, b):\n    total = 0\n    if b == 1:\n        b += 1\n        total += 1\n    m = div(a, b)\n    mmm = div(a, b)\n    for i in range(b + 1, m + b):\n        if mmm > i - b + div(a, i):\n            mmm = i - b + div(a, i)\n    total += mmm + 1\n    return total\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    print(ad(a, b))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    m = 0\n    if b == 1:\n        b += 1\n        m += 1\n    ans = perm = m\n    temp = a\n    while temp != 0:\n        temp = temp // b\n        m += 1\n    low = m\n    while ans <= m:\n        temp = a\n        ans = perm\n        while temp != 0:\n            temp = temp // b\n            ans += 1\n        if ans <= low:\n            low = ans\n        perm += 1\n        b += 1\n    print(low)", "def v(a, b, c=0):\n    return c if a == 0 else v(a // b, b, c + 1)\nfor _ in range(int(input())):\n    k = 0\n    (a, b) = map(int, input().split())\n    if b == 1:\n        k += 1\n        b += 1\n    c = 1000000000\n    while 1 == 1:\n        _ = k + v(a, b)\n        if _ <= c:\n            c = _\n        else:\n            break\n        b += 1\n        k += 1\n    print(c)", "for _ in range(int(input())):\n    cnt = 0\n    (a, b) = map(int, input().split())\n    s = []\n    for i in range(0, 30):\n        cnt = 0\n        if b == 1 and i == 0:\n            continue\n        cnt = cnt + i\n        k = a\n        while k:\n            k //= b + i\n            cnt += 1\n        s.append(cnt)\n    print(min(s))", "def find():\n    (a, b) = map(int, input().split())\n    ans = 0\n    a_save = a\n    s = 0\n    s1 = 0\n    tmp = 0\n    while not ans or tmp <= ans:\n        ans = tmp\n        if b == 1:\n            b += 1\n            s1 += 1\n        while a > 0:\n            a //= b\n            s += 1\n        tmp = s + s1\n        b += 1\n        s1 += 1\n        s = 0\n        a = a_save\n    return ans\nfor i in range(int(input())):\n    print(find())", "import math\n\ndef min_counts(a, b):\n    count = 0\n    while a > 0:\n        if b == 1 or math.log(a, b) > 1 + math.log(a, b + 1):\n            b += 1\n            count += 1\n        else:\n            a = int(a / b)\n            count += 1\n    return count\nt = int(input())\nfor i in range(t):\n    (a, b) = [int(i) for i in input().split()]\n    print(min_counts(a, b))", "def solve(a, b):\n    b1 = b + (b == 1)\n    ans = None\n    while True:\n        k = 0\n        a1 = a\n        while a1:\n            a1 = a1 // b1\n            k += 1\n        if ans == None:\n            ans = k + b1 - b\n        elif ans >= k + b1 - b:\n            ans = k + b1 - b\n        else:\n            return ans\n        b1 += 1\nfor t in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(solve(a, b))", "def log(a, b):\n    logVal = 0\n    while a >= b:\n        a //= b\n        logVal += 1\n    return logVal\n\ndef solve(a, b):\n    if a < b:\n        return 1\n    if a == b:\n        return 2\n    if b == 1:\n        b += 1\n        startOpsCount = 1\n    else:\n        startOpsCount = 0\n    opsCount = startOpsCount + log(a, b) + 1\n    minOps = opsCount\n    while startOpsCount < minOps:\n        b += 1\n        startOpsCount += 1\n        opsCount = startOpsCount + log(a, b) + 1\n        minOps = min(opsCount, minOps)\n    return minOps\nt = int(input())\nfor tc in range(t):\n    (a, b) = map(int, input().split())\n    result = solve(a, b)\n    print(result)", "for x in range(int(input())):\n    (a, b) = map(int, input().split(' '))\n    steps = 0\n    counter = 0\n    if b == 1:\n        steps += 1\n        b += 1\n        counter += 1\n    arr = []\n    while True:\n        c = a\n        while c != 0:\n            c //= b\n            steps += 1\n        b += 1\n        counter += 1\n        arr.append(steps)\n        steps = counter\n        try:\n            if arr[-1] > arr[-2]:\n                break\n        except IndexError:\n            continue\n        if b <= a:\n            continue\n        else:\n            break\n    print(min(arr))", "def gen_solution(a, b):\n    steps = 0\n    if b == 1:\n        return float('inf')\n    while a > 0:\n        a = a // b\n        steps += 1\n    return steps\n\ndef solve(a, b):\n    s = 0\n    prevSolution = float('inf')\n    while True:\n        solution = gen_solution(a, b) + s\n        if solution > prevSolution:\n            return prevSolution\n        prevSolution = solution\n        s += 1\n        b += 1\nt = int(input())\nfor j in range(t):\n    (a, b) = [int(i) for i in input().split(' ')]\n    print(solve(a, b))", "T = int(input())\nfor t in range(T):\n    (a, b) = [int(i) for i in input().split()]\n    cnt = 0\n    if b == 1:\n        b += 1\n        cnt += 1\n    flag = 1\n    A = a\n    CNT = cnt\n    index = 0\n    B = b\n    ans = 1000000000000\n    while flag == 1:\n        cnt = CNT + index\n        a = A\n        b = B + index\n        while a > 0:\n            a = a // b\n            cnt += 1\n        if cnt <= ans:\n            ans = cnt\n            index += 1\n        else:\n            flag = 0\n    print(ans)", "for ii in range(int(input())):\n    (n, m) = map(int, input().split())\n    (x, y, c) = (10 ** 10, 0, 0)\n    f = False\n    if m == 1:\n        f = True\n        m += 1\n    while 1:\n        r = 1\n        while n // m ** r > 0:\n            r += 1\n        if r + y <= x:\n            x = r + y\n            m += 1\n            y += 1\n        else:\n            break\n    if f:\n        x += 1\n    print(x)", "t = int(input())\nfor z in range(t):\n    (m, n) = map(int, input().split())\n    k = n\n    ans = []\n    while 1:\n        i = 0\n        if k == 1:\n            k = k + 1\n        while k ** i <= m:\n            i = i + 1\n        if len(ans) == 0:\n            ans.append(i + k - n)\n        elif ans[-1] < i + k - n:\n            break\n        else:\n            ans.append(i + k - n)\n        k = k + 1\n    print(ans[-1])", "t = int(input())\nfor i in range(t):\n    (aa, bb) = [int(i) for i in input().split()]\n    minc = 0\n    b = bb\n    a = aa\n    while a > 0:\n        if a == b:\n            b = b + 1\n            minc = minc + 1\n        elif b == 1:\n            b = b + 1\n            minc = minc + 1\n        minc = minc + 1\n        a = int(a / b)\n    a = aa\n    b = bb\n    maxc = minc\n    ans = minc\n    c = 1\n    while c <= maxc:\n        b = bb + c\n        minc = c\n        a = aa\n        while a > 0:\n            if a == b:\n                b = b + 1\n                minc = minc + 1\n            elif b == 1:\n                b = b + 1\n                minc = minc + 1\n            minc = minc + 1\n            a = int(a / b)\n        if minc < ans:\n            ans = minc\n        c = c + 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    ans1 = 0\n    ans2 = 0\n    ans3 = 0\n    while True:\n        x = 0\n        y = 0\n        ans1 = ans3\n        ans2 = ans3\n        if b == 1:\n            b = 2\n            ans1 += 1\n            ans2 += 1\n            ans3 += 1\n        else:\n            b = b\n        while True:\n            if b ** x > a:\n                b += 1\n                ans2 += 1\n                ans3 += 1\n                break\n            else:\n                x += 1\n                ans1 += 1\n        while True:\n            if b ** y > a:\n                break\n            else:\n                y += 1\n                ans2 += 1\n        if ans1 < ans2:\n            ans = ans1\n            break\n        else:\n            continue\n    print(ans)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    ans = 0\n    ans2 = 99999999999999999\n    if b == 1:\n        b += 1\n        ans += 1\n    ans1 = ans\n    for i in range(20):\n        k = a\n        ans1 = ans\n        while k != 0:\n            ans1 += 1\n            k = k // (b + i)\n        ans2 = min(ans1 + i, ans2)\n    print(ans2)", "import math\n\ndef solution(a, b):\n    step_min = math.inf\n    if a < b:\n        return 1\n    for i in range(0, int(math.log(a + 1) / math.log(b + 1))):\n        a_bis = a\n        b_bis = b\n        step = 0\n        if b_bis == 1:\n            b_bis += 1\n            step += 1\n        b_bis += i\n        step += i\n        while a_bis != 0:\n            a_bis = a_bis // b_bis\n            step += 1\n        step_min = min(step, step_min)\n    return step_min\nfor i in range(int(input())):\n    (a, b) = map(int, input().split(' '))\n    print(solution(a, b))", "def get(a, b):\n    ans = 0\n    while a > 0:\n        a = a // b\n        ans += 1\n    return ans\nimport math\nt = 1\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (a, b) = map(int, input().split())\n    if a == 1 and b == 1:\n        print(2)\n    elif b == 1:\n        b += 1\n        ans = 1\n        while get(a, b) > get(a, b + 1):\n            ans += 1\n            b += 1\n        print(ans + min(get(a, b), get(a, b + 1) + 1))\n    else:\n        ans = 0\n        while get(a, b) > get(a, b + 1):\n            b += 1\n            ans += 1\n        print(ans + min(get(a, b), get(a, b + 1) + 1))", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nimport math\n\nclass Solution:\n\n    def solve(self, a, b):\n        count = 0\n        if b == 1:\n            b += 1\n            count += 1\n        ans = []\n        for i in range(10):\n            a_1 = a\n            b_1 = b\n            count1 = 0\n            count1 = max(count1, count)\n            for j in range(i):\n                b_1 += 1\n                count1 += 1\n            while a_1 != 0:\n                a_1 = math.floor(a_1 / b_1)\n                count1 += 1\n            ans.append(count1)\n        return min(ans)\nt = inp()\nA = Solution()\nfor i in range(t):\n    (a, b) = invr()\n    ans = A.solve(a, b)\n    print(ans)", "from math import log, ceil, floor\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    op = 0\n    l = []\n    m = 9999999\n    while n != 0:\n        if k == 1:\n            k += 1\n            op += 1\n        else:\n            temp = n\n            c = 0\n            while n != 0:\n                n //= k\n                c += 1\n            n = temp\n            if m < op + c:\n                break\n            m = min(m, op + c)\n            k += 1\n            op += 1\n    print(m)", "def solve(a, b):\n    steps = 0\n    while a > 0:\n        a = a // b\n        steps += 1\n    return steps\ntcs = int(input())\nfor i in range(tcs):\n    (a, b) = [int(x) for x in input().split()]\n    i = 0\n    if b > a:\n        print(1)\n        continue\n    if b == 1:\n        steps = 1\n        i += 1\n        b += 1\n    else:\n        steps = 0\n    steps = i + solve(a, b)\n    for i in range(i + 1, a - b):\n        b += 1\n        temp = i + solve(a, b)\n        if temp > steps:\n            break\n        steps = temp\n    print(steps)", "def solve():\n    (a, b) = list(map(int, input().split()))\n    if b > a:\n        print(1)\n        return\n    if b == a:\n        print(2)\n        return\n    dif = a - b\n    lol = 0\n    plus_b = 0\n    min_ans = 10 ** 9 + 10\n    if b == 1:\n        b += 1\n        plus_b += 1\n    while a // b > 0:\n        a1 = a\n        mem = 0\n        while a1 > 0:\n            a1 //= b\n            mem += 1\n        min_ans = min(min_ans, plus_b + mem)\n        b += 1\n        plus_b += 1\n        if min_ans <= plus_b:\n            break\n    print(min_ans)\nt = int(input())\nfor q in range(t):\n    solve()", "def div(a, b):\n    count = 0\n    while a > 0:\n        a = int(a / b)\n        count += 1\n    return count\nT = int(input())\nfor i in range(T):\n    nums = list(map(int, input().split()))\n    a = nums[0]\n    b = nums[1]\n    counter = 0\n    if b == 1:\n        b += 1\n        counter += 1\n    while 1:\n        if div(a, b) >= div(a, b + 1) + 1:\n            b += 1\n            counter += 1\n        else:\n            break\n    counter = counter + div(a, b)\n    print(counter)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    k = 0\n    if a < b or a == b:\n        if a < b:\n            k = k + 1\n        if a == b:\n            k = k + 2\n    else:\n        if b == 1:\n            k = k + 1\n            b = b + 1\n        b1 = b\n        suu = 0\n        su1 = 1\n        su2 = 2\n        su3 = 3\n        su4 = 4\n        su5 = 5\n        su6 = 6\n        while b1 <= a:\n            b1 = b1 * b\n            suu = suu + 1\n        b1 = b + 1\n        while b1 <= a:\n            b1 = b1 * (b + 1)\n            su1 = su1 + 1\n        b1 = b + 2\n        while b1 <= a:\n            b1 = b1 * (b + 2)\n            su2 = su2 + 1\n        b1 = b + 3\n        while b1 <= a:\n            b1 = b1 * (b + 3)\n            su3 = su3 + 1\n        b1 = b + 4\n        while b1 <= a:\n            b1 = b1 * (b + 4)\n            su4 = su4 + 1\n        b1 = b + 5\n        while b1 <= a:\n            b1 = b1 * (b + 5)\n            su5 = su5 + 1\n        b1 = b + 6\n        while b1 <= a:\n            b1 = b1 * (b + 6)\n            su6 = su6 + 1\n        k = k + min(suu, su1, su2, su3, su4, su5, su6)\n        k = k + 1\n    print(k)"]