["from sys import stdin\ninput = stdin.readline\n\ndef eat(arr):\n    s = 0\n    for i in arr:\n        s += i\n        if s <= 0:\n            return 'NO'\n    s = 0\n    for i in reversed(arr):\n        s += i\n        if s <= 0:\n            return 'NO'\n    return 'YES'\nfor test in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    print(eat(lst))", "from os import truncate\nfor s in [*open(0)][2::2]:\n    a = [*map(int, s.split())]\n    sz = len(a)\n    l = r = 0\n    for i in range(sz - 1):\n        l += a[i]\n        r += a[sz - i - 1]\n        if l < 1 or r < 1:\n            print('NO')\n            break\n    else:\n        print('YES')", "list_ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    list2 = []\n    list2.append(list1[0])\n    for i in range(1, n):\n        list2.append(list2[i - 1] + list1[i])\n    b = list2[-1]\n    for i in range(n - 1):\n        if list2[i] <= 0 or list2[i] >= b:\n            list_ans.append('NO')\n            break\n    else:\n        list_ans.append('YES')\nprint(*list_ans, sep='\\n')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 1\n    s = 0\n    for i in a[:-1]:\n        s += i\n        if s < 1:\n            f = 0\n            break\n    if f == 1:\n        s = 0\n        for i in a[n - 1:0:-1]:\n            s += i\n            if s < 1:\n                f = 0\n                break\n        if f == 1:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "from collections import deque, Counter\nfrom math import *\nimport sys\nimport random\nfrom bisect import *\nfrom functools import reduce\nfrom sys import stdin\nfrom heapq import *\nimport copy\ninput = lambda : sys.stdin.readline().rstrip()\n\ndef fin(arr):\n    s = 0\n    i = 0\n    while i < n:\n        s += arr[i]\n        if s <= 0:\n            return False\n        i += 1\n    i = len(arr) - 1\n    s = 0\n    while i >= 0:\n        s += arr[i]\n        if s <= 0:\n            return False\n        i -= 1\n    return True\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print('YES' if fin(arr) == True else 'NO')", "for _ in range(int(input())):\n    N = int(input())\n    inp = [int(x) for x in input().split()]\n    s = 0\n    happy = True\n    for x in inp:\n        s += x\n        if s <= 0:\n            happy = False\n            break\n    s = 0\n    if happy:\n        for x in reversed(inp):\n            s += x\n            if s <= 0:\n                happy = False\n                break\n    if happy:\n        print('YES')\n    else:\n        print('NO')", "def solve(n, arr):\n    s = 0\n    for x in arr:\n        s += x\n        if s <= 0:\n            return False\n    s = 0\n    for x in arr[::-1]:\n        s += x\n        if s <= 0:\n            return False\n    return True\nfor _ in range(int(input())):\n    n = input()\n    arr = list(map(int, input().split()))\n    if solve(n, arr):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = sum(l)\n    k = 0\n    f = True\n    for i in range(n - 1):\n        k = k + l[i]\n        if k <= 0 or k >= s:\n            f = False\n            print('NO')\n            break\n    if f:\n        print('YES')", "t = int(input())\nfor q in range(t):\n    flag = True\n    n = int(input())\n    s = 0\n    a = list(map(int, input().split()))\n    for i in range(n):\n        s += a[i]\n        if s <= 0:\n            flag = False\n    ss = 0\n    for i in range(n - 1, -1, -1):\n        ss += a[i]\n        if ss <= 0:\n            flag = False\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\n\ndef q(l, n):\n    l1 = []\n    v = 0\n    for i in range(n):\n        v += l[i]\n        l1.append(v)\n    A = l1[n - 1]\n    l2 = [A - l1[i] for i in range(0, n - 1)]\n    m1 = min(l1)\n    m2 = min(l2)\n    if m1 < 1 or m2 < 1:\n        return 'NO'\n    else:\n        return 'YES'\nfor i in range(t):\n    n = int(input())\n    a = input().split()\n    l = list(map(int, a))\n    print(q(l, n))", "def fun(l, i, j):\n    m = l[i]\n    p = 0\n    for i in range(i, j + 1):\n        p += l[i]\n        if p > m:\n            m = p\n        if p < 0:\n            p = 0\n    return m\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = sum(l)\n    m = max(fun(l, 0, n - 2), fun(l, 1, n - 1))\n    if c > m:\n        print('YES')\n    else:\n        print('NO')", "def solve(arr):\n    sum = 0\n    for x in arr:\n        sum = sum + x\n        if sum <= 0:\n            return 0\n    sum = 0\n    for x in reversed(arr):\n        sum = sum + x\n        if sum <= 0:\n            return 0\n    return 1\nt = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    sum = 0\n    if solve(arr):\n        print('YES')\n    else:\n        print('NO')", "def happy():\n    n = int(input())\n    l = list(map(int, input().split()))\n    sums = 0\n    for i in range(0, n):\n        sums += l[i]\n        if sums <= 0:\n            return 'NO'\n    sums = 0\n    for i in range(n - 1, -1, -1):\n        sums += l[i]\n        if sums <= 0:\n            return 'NO'\n    return 'YES'\nfor i in range(int(input())):\n    print(happy())", "from math import *\nfrom math import factorial as fact, comb as ncr\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom collections import Counter as ctr\nfrom collections import deque as dq\nfrom array import array\ninp = lambda : int(input())\nli = lambda : list(map(int, input().split()))\nlb = lambda : list(map(int, input()))\nls = lambda : list(input())\narr = lambda a: array('i', a)\nbi = lambda n: bin(n).replace('0b', '')\nyn = lambda f: print('NYOE S'[f::2])\n\ndef solve(__=1):\n    for _ in range(__):\n        n = inp()\n        a = li()\n        sf = sb = 0\n        f = True\n        for i in range(n):\n            sf += a[i]\n            sb += a[n - i - 1]\n            if sf < 1 or sb < 1:\n                f = False\n                break\n        yn(f)\nsolve(inp())", "t = int(input())\nwhile t:\n    t = t - 1\n    flag = 1\n    n = int(input())\n    r = list(map(int, input().split()))\n    sum = 0\n    for i in range(n):\n        sum = sum + r[i]\n        if sum <= 0:\n            flag = 0\n    s = 0\n    for i in range(n - 1, -1, -1):\n        s = s + r[i]\n        if s <= 0:\n            flag = 0\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "from os import truncate\nfor s in [*open(0)][2::2]:\n    a = [*map(int, s.split())]\n    sz = len(a)\n    sm = [0] * sz\n    cur_sm = 0\n    got = False\n    for (i, x) in enumerate(a):\n        cur_sm += x\n        if i == sz - 1:\n            break\n        if cur_sm <= 0:\n            print('NO')\n            got = True\n            break\n    if got:\n        continue\n    cur_sm = 0\n    for (i, x) in enumerate(a[::-1]):\n        cur_sm += x\n        if i == sz - 1:\n            break\n        if cur_sm <= 0:\n            print('NO')\n            got = True\n            break\n    if got:\n        continue\n    print('YES')", "import math\n\ndef main_function():\n    test_cases = range(int(input()))\n    for test_case in test_cases:\n        n = int(input())\n        a = [int(i) for i in input().split(' ')]\n        current_adel = 0\n        hist = []\n        is_cut = False\n        for i in range(len(a)):\n            current_adel += a[i]\n            if current_adel <= 0:\n                current_adel = 0\n                is_cut = True\n            hist.append(current_adel)\n        yasser = sum(a)\n        max_adel = max(hist)\n        if yasser > max_adel:\n            print('YES')\n        elif max_adel < yasser:\n            print('NO')\n        elif is_cut:\n            print('NO')\n        else:\n            hist.pop()\n            if max_adel == max(hist):\n                print('NO')\n            else:\n                print('YES')\nmain_function()", "def F(a, lst):\n    summ = sum(lst)\n    cur = 0\n    for i in range(a - 1):\n        cur += lst[i]\n        if cur <= 0 or summ - cur <= 0:\n            print('NO')\n            return 0\n    print('YES')\nn = int(input())\nfor i in range(n):\n    a = int(input())\n    lst = list(map(int, input().split()))\n    F(a, lst)", "t = int(input())\ncount = 0\ncount1 = 0\nc = 0\nfor i in range(t):\n    n = int(input())\n    m = list(map(int, input().split()))\n    leng = n - 1\n    for i in range(leng):\n        count += m[i]\n        count1 += m[leng - i]\n        if count < 1 or count1 < 1:\n            c += 1\n            break\n    if c != 1:\n        print('YES')\n    else:\n        print('NO')\n    count = 0\n    count1 = 0\n    c = 0", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().strip().split()))[:n]\n    a = []\n    l1 = 0\n    r = 0\n    f = 0\n    for i in range(len(l)):\n        l1 += l[i]\n        r += l[n - i - 1]\n        if l1 <= 0 or r <= 0:\n            f = 1\n            break\n    if f == 0:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "import itertools\nfor t in range(int(input())):\n    n = int(input())\n    a = list(itertools.accumulate(map(int, input().split())))\n    if min(a[:-1]) <= 0 or max(a[:-1]) >= a[-1]:\n        print('NO')\n    else:\n        print('YES')", "import itertools\nfor t in range(int(input())):\n    n = int(input())\n    a = list(itertools.accumulate(map(int, input().split())))\n    if min(a[:-1]) <= 0 or max(a[:-1]) >= a[-1]:\n        print('NO')\n    else:\n        print('YES')", "def solution(test):\n    sum = 0\n    for i in test:\n        sum += i\n        if sum <= 0:\n            print('NO')\n            return\n    sum = 0\n    for i in reversed(test):\n        sum += i\n        if sum <= 0:\n            print('NO')\n            return\n    print('YES')\ntest_case = int(input())\ntest_input = []\nfor i in range(test_case):\n    n = int(input())\n    ar = [int(x) for x in input().split()]\n    test_input.append(ar)\nfor test in test_input:\n    solution(test)", "def eatit(n, a):\n    yasser = sum(a)\n    cs = 0\n    ms = 0\n    l = 0\n    cl = 0\n    for i in range(n):\n        cs += a[i]\n        l += 1\n        if cs <= 0:\n            cs = 0\n            l = 0\n            continue\n        if cs > ms:\n            ms = cs\n            cl = l\n    if ms < yasser:\n        return 'YES'\n    elif cl != n:\n        return 'NO'\n    else:\n        return 'YES'\nt = int(input())\na = []\nfor i in range(t):\n    b = int(input())\n    c = list(map(int, input().split(' ')))\n    a.append([b, c])\nfor x in a:\n    print(eatit(*x))", "def eatit(n, a):\n    ysum = sum(a)\n    i = 1\n    asum = a[0]\n    if asum >= ysum:\n        return 'NO'\n    while i < n - 1:\n        asum = asum + a[i]\n        if asum >= ysum:\n            return 'NO'\n        i = i + 1\n    asum = a[-1]\n    if asum >= ysum:\n        return 'NO'\n    i = n - 2\n    while n >= 2 and i > 0:\n        asum = asum + a[i]\n        if asum >= ysum:\n            return 'NO'\n        i = i - 1\n    return 'YES'\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().rstrip().split()))\n    print(eatit(n, a))", "def solve(n, cakes):\n    total = 0\n    adelMaximum = None\n    temp = None\n    adelTakeAll = False\n    numElementsAdel = 0\n    for score in cakes:\n        total += score\n        if temp is None:\n            temp = score\n            numElementsAdel = 1\n        elif temp <= 0:\n            temp = score\n            numElementsAdel = 1\n        elif temp > 0:\n            temp += score\n            numElementsAdel += 1\n        if adelMaximum is None or temp > adelMaximum:\n            adelMaximum = temp\n            if numElementsAdel == n:\n                adelTakeAll = True\n    if adelTakeAll:\n        adelMaximum -= min(cakes[0], cakes[-1])\n    if total > adelMaximum:\n        return 'YES'\n    else:\n        return 'NO'\nfor i in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    print(solve(n, c))", "import sys\nt = int(sys.stdin.readline().rstrip())\nfor _ in range(t):\n    c = int(sys.stdin.readline().rstrip())\n    cupcakes = list(map(int, sys.stdin.readline().rstrip().split(' ')))\n    c_sum = [0]\n    s = sum(cupcakes)\n    maximum = 0\n    result = 0\n    b = True\n    for i in cupcakes:\n        result += i\n        c_sum.append(result)\n    maximum = 0\n    maximum_index = -1\n    minimum = 100000000\n    minimum_index = -1\n    for i in range(c + 1):\n        if c_sum[i] > maximum:\n            maximum = c_sum[i]\n            maximum_index = i\n        if c_sum[i] <= minimum:\n            minimum = c_sum[i]\n            minimum_index = i\n    if maximum_index == c and minimum_index == 0:\n        print('YES')\n    elif s > maximum - minimum:\n        print('YES')\n    else:\n        print('NO')", "from math import gcd\n\ndef f(a):\n    ans = [0, 0]\n    cur = 0\n    l = 0\n    for i in a:\n        cur += i\n        if cur <= 0:\n            l = 0\n            cur = 0\n        else:\n            l += 1\n        if ans[0] <= cur:\n            if ans[0] != cur:\n                ans[1] = l\n            ans[0] = cur\n    if ans[0] >= sum(a) and ans[1] < len(a):\n        return 'NO'\n    return 'YES'\nfor i in range(int(input())):\n    a = input()\n    lst = list(map(int, input().strip().split()))\n    print(f(lst))", "def solve(a):\n    mms = 0\n    ms = sum(a)\n    for i in range(len(a) - 1):\n        mms += a[i]\n        if mms <= 0 or mms >= ms:\n            return 'NO'\n    return 'YES'\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(a))", "for _ in range(int(input())):\n    i = int(input())\n    l = list(map(int, input().split()))\n    ans = 'YES'\n    c = 0\n    for x in l:\n        c += x\n        if c <= 0:\n            ans = 'NO'\n    c = 0\n    for x in l[::-1]:\n        c += x\n        if c <= 0:\n            ans = 'NO'\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = 0\n    prev = 0\n    res = 0\n    flag = True\n    for i in range(n):\n        el = a[i]\n        if i == 0:\n            prev = el\n            res = el\n        else:\n            prev += el\n            if i == n - 1 and flag:\n                res = max(res, prev - min(a[0], a[n - 1]))\n            else:\n                res = max(res, prev - m)\n                if m >= prev:\n                    m = prev\n                    flag = False\n    if prev > res:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    li = [int(i) for i in input().split()]\n    k = sum(li)\n    dp = [0] * n\n    (f, a) = (0, True)\n    for i in range(n):\n        f += li[i]\n        if f <= 0:\n            f = 0\n            dp[i] = 0\n            a = False\n        else:\n            dp[i] = f\n    ma = max(dp)\n    if a and ma == k:\n        dp.pop()\n        ma = max(dp)\n    if ma < k:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\n\ndef judge(a):\n    cur_max = last_max = a[0]\n    result_0 = a[0]\n    for i in range(1, t - 1):\n        if last_max + a[i] < a[i]:\n            cur_max = a[i]\n        else:\n            cur_max = last_max + a[i]\n        if result_0 < cur_max:\n            result_0 = cur_max\n        last_max = cur_max\n    cur_max_1 = last_max_1 = a[1]\n    result_1 = a[1]\n    for i in range(2, t):\n        if last_max_1 + a[i] < a[i]:\n            cur_max_1 = a[i]\n        else:\n            cur_max_1 = last_max_1 + a[i]\n        if result_1 < cur_max_1:\n            result_1 = cur_max_1\n        last_max_1 = cur_max_1\n    return max(result_0, result_1)\nfor i in range(n):\n    t = int(input())\n    a = list(map(int, input().split()))\n    b = sum(a)\n    result = judge(a)\n    if b > result:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a_list = list(map(int, input().split()))\n    min_val = 0\n    max_val = 0\n    yasser = 0\n    adel = a_list[0]\n    last_pos = -1\n    for j in range(n):\n        yasser += a_list[j]\n        if yasser > max_val and (not j - last_pos == n):\n            adel = max(adel, yasser - min_val)\n            max_val = yasser\n            continue\n        if yasser <= min_val:\n            min_val = yasser\n            max_val = yasser\n            last_pos = j\n    if yasser > adel:\n        print('YES')\n    else:\n        print('NO')", "def kadane(a, n):\n    dp1 = [a[0]]\n    for i in range(1, n - 1):\n        dp1.append(max(dp1[-1] + a[i], a[i]))\n    dp2 = [a[1]]\n    for i in range(2, n):\n        dp2.append(max(dp2[-1] + a[i], a[i]))\n    mx1 = max(dp1)\n    mx2 = max(dp2)\n    return max(mx1, mx2)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    s = sum(a)\n    val = kadane(a, n)\n    if s > val:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = sum(a)\n    y = -988998789897879\n    z = 1\n    i = 0\n    cnt = 0\n    while i < n:\n        if z == n:\n            cnt -= a[0]\n        cnt += a[i]\n        y = max(y, cnt)\n        i += 1\n        z += 1\n        if cnt <= 0:\n            z = i\n            cnt = 0\n    if x > y:\n        print('YES')\n    else:\n        print('NO')", "def solve(A):\n    s = sum(A)\n    l = 0\n    r = 0\n    curr = 0\n    gmax = float('-INF')\n    for i in range(len(A)):\n        if curr + A[i] > A[i]:\n            curr += A[i]\n        else:\n            l = i\n            curr = A[i]\n        if curr > gmax:\n            r = i\n        gmax = max(gmax, curr)\n    if s > gmax:\n        return 'YES'\n    if s == gmax:\n        if l == 0 and r == len(A) - 1:\n            return 'YES'\n        else:\n            return 'NO'\n    return 'NO'\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    print(solve(a))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = sum(l)\n    k = 0\n    f = True\n    for i in range(n - 1):\n        k = k + l[i]\n        if k <= 0 or k >= s:\n            f = False\n            print('NO')\n            break\n    if f:\n        print('YES')", "n = int(input())\nfor t in range(n):\n    m = int(input())\n    a = list(map(int, input().split()))\n    ans1 = sum(a)\n    ans2 = 0\n    dlina = 0\n    maxim = 0\n    for i in range(m):\n        if dlina != m - 1:\n            ans2 += a[i]\n            if ans2 > 0:\n                dlina += 1\n            else:\n                ans2 = 0\n                dlina = 0\n            maxim = max(maxim, ans2)\n        else:\n            maxim = max(maxim, sum(a[0:m - 1]), sum(a[1:]))\n            break\n    if maxim >= ans1:\n        print('NO')\n    else:\n        print('YES')", "for i in range(int(input())):\n    n = int(input())\n    values = list(map(int, input().split()))\n    total = sum(values)\n    su = 0\n    hey = 0\n    for val in values[:n - 1]:\n        su += val\n        if su <= 0:\n            print('NO')\n            hey = 1\n            break\n        elif su >= total:\n            print('NO')\n            hey = 1\n            break\n    if hey == 0 and values[n - 1] > 0:\n        print('YES')", "import sys\nsys.setrecursionlimit(10 ** 5 + 1)\ninf = int(10 ** 20)\nmax_val = inf\nmin_val = -inf\nRW = lambda : sys.stdin.readline().strip()\nRI = lambda : int(RW())\nRMI = lambda : [int(x) for x in sys.stdin.readline().strip().split()]\nRWI = lambda : [x for x in sys.stdin.readline().strip().split()]\nfor _ in [0] * RI():\n    lens = RI()\n    arrs = RMI()\n    answer = 'YES'\n    rt_sum = 0\n    for i in arrs:\n        rt_sum += i\n        if rt_sum <= 0:\n            answer = 'NO'\n            break\n    if answer == 'YES':\n        lt_sum = 0\n        for i in arrs[::-1]:\n            lt_sum += i\n            if lt_sum <= 0:\n                answer = 'NO'\n                break\n    print(answer)", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        y = sum(a)\n        s = 0\n        flag = 0\n        for i in range(n - 1):\n            if a[i] < 0:\n                if s >= y:\n                    flag = 1\n                    break\n                if s + a[i] > 0:\n                    s += a[i]\n                else:\n                    flag = 1\n                    break\n            else:\n                s += a[i]\n                if s >= y:\n                    flag = 1\n                    break\n        if flag == 1:\n            print('NO')\n        else:\n            s = 0\n            for i in range(1, n):\n                if a[i] < 0:\n                    if s >= y:\n                        flag = 1\n                        break\n                    if s + a[i] > 0:\n                        s += a[i]\n                    else:\n                        s = 0\n                else:\n                    s += a[i]\n                    if s >= y:\n                        flag = 1\n                        break\n            if flag == 1:\n                print('NO')\n        if flag == 0:\n            print('YES')\nmain()", "t = int(input())\nitog = []\nfor f in range(t):\n    n = int(input())\n    mass = [0] + list(map(int, input().split()))\n    yasser = sum(mass)\n    adel = 0\n    for i in range(1, n + 1):\n        if mass[i] >= yasser:\n            adel += 1\n            break\n        else:\n            mass[i] += mass[i - 1]\n            if i == n:\n                continue\n            elif mass[i] >= yasser:\n                adel += 1\n                break\n    mass.sort()\n    mass = mass[1:]\n    if mass[-1] - mass[0] >= yasser:\n        adel += 1\n    if adel > 0:\n        itog.append('NO')\n    else:\n        itog.append('YES')\nfor i in itog:\n    print(i)", "t = int(input())\nl2 = []\nfor i in range(t):\n    n = int(input())\n    c = 0\n    c2 = 0\n    flag = 0\n    k1 = 0\n    l1 = [int(a) for a in input().split()]\n    if n != 1:\n        for k in range(n):\n            c2 += l1[k]\n        for k in range(n):\n            c += l1[k]\n            k1 += 1\n            if c >= c2:\n                if k1 != n:\n                    flag = 1\n                    break\n            if c <= 0:\n                c = 0\n                k1 = 0\n    else:\n        l2.append('NO')\n    if flag == 1:\n        l2.append('NO')\n    else:\n        l2.append('YES')\nfor i in range(t):\n    print(l2[i])", "import sys\n\ndef go(nums):\n    if len(nums) == 1:\n        return True\n    if all((x < 0 for x in nums)):\n        return False\n    all_sum = sum(nums)\n    return not (sum_check(nums[1:], all_sum) or sum_check(nums[:-1], all_sum))\n\ndef sum_check(nums, all_sum):\n    best_sum = 0\n    for (i, num) in enumerate(nums):\n        if best_sum + num >= 0:\n            best_sum += num\n            if best_sum >= all_sum:\n                return True\n        else:\n            best_sum = 0\n    return False\nt = int(sys.stdin.readline())\nwhile t > 0:\n    n = int(sys.stdin.readline())\n    nums = [int(x) for x in sys.stdin.readline().split(' ')]\n    if go(nums):\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "import sys\nI = sys.stdin.readline\nans = ''\nfor _ in range(int(I())):\n    n = int(I())\n    a = list(map(int, I().split()))\n    p = 0\n    flag = 1\n    for i in range(n):\n        p += a[i]\n        if p <= 0:\n            flag = 0\n            break\n    if flag:\n        s = 0\n        for i in range(n - 1, -1, -1):\n            s += a[i]\n            if s <= 0:\n                flag = 0\n                break\n    ans += 'YNEOS'[not flag::2] + '\\n'\nprint(ans)", "import sys\n\ndef answer(n, a):\n    Yasser = sum(a)\n    lptr = 0\n    if a[0] >= Yasser:\n        return 'NO'\n    summ = [a[0]]\n    for i in range(1, n):\n        if a[i] >= a[i] + summ[i - 1]:\n            lptr = i\n        summ.append(max(a[i], a[i] + summ[i - 1]))\n        if summ[i] >= Yasser and (lptr > 0 or i < n - 1):\n            return 'NO'\n    return 'YES'\n\ndef main():\n    t = int(input())\n    while t:\n        n = int(sys.stdin.readline())\n        a = [int(i) for i in sys.stdin.readline().split()]\n        print(answer(n, a))\n        t -= 1\n    return\nmain()", "def happy(n):\n    a = list(map(int, input().split()))\n    s = 0\n    for j in range(0, n - 1):\n        s += a[j]\n        if s <= 0:\n            return False\n    s1 = 0\n    for k in range(n - 1, 0, -1):\n        s1 += a[k]\n        if s1 <= 0:\n            return False\n    return True\nt = int(input())\nfor i in range(t):\n    nos = int(input())\n    if happy(nos):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s1 = 0\n    s2 = 0\n    flag = False\n    for j in range(n):\n        s1 = s1 + a[j]\n        s2 = s2 + a[n - j - 1]\n        if s1 <= 0 or s2 <= 0:\n            flag = True\n    if flag == False:\n        print('YES')\n    else:\n        print('NO')", "def maxSubArraySum(a, size):\n    max_so_far = -99999999999999999999999 - 1\n    max_ending_here = 0\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n        if max_ending_here < 0:\n            max_ending_here = 0\n    return max_so_far\nfor fghj in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    maxsum = maxSubArraySum(a, n)\n    ax = maxSubArraySum(a[1:], n - 1)\n    ay = maxSubArraySum(a[:n], n - 1)\n    if ax < maxsum and ay < maxsum:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    yasser = sum(arr)\n    adel = 0\n    max_length = n - 1\n    left = 0\n    cur = 0\n    for right in range(n):\n        cur += arr[right]\n        if right - left + 1 <= max_length:\n            if cur > 0:\n                adel = max(adel, cur)\n            else:\n                while left <= right:\n                    cur -= arr[left]\n                    left += 1\n                    adel = max(adel, cur)\n        else:\n            cur -= arr[left]\n            left += 1\n            adel = max(adel, cur)\n    print('YES' if yasser > adel else 'NO')", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        score1 = sum(arr)\n        score2 = float('-inf')\n        counter = 0\n        for i in range(n - 1):\n            counter += arr[i]\n            score2 = max(score2, counter)\n            counter = max(counter, 0)\n        counter = 0\n        for i in range(1, n):\n            counter += arr[i]\n            score2 = max(score2, counter)\n            counter = max(counter, 0)\n        print('YES' if score1 > score2 else 'NO')\nmain()", "import sys\nfrom collections import Counter\n\ndef get_ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\nsys.setrecursionlimit(20000)\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    A = get_ints()\n    adel_max = 0\n    adel_current_max = 0\n    for i in range(1, n):\n        adel_current_max += A[i]\n        if adel_current_max > adel_max:\n            adel_max = adel_current_max\n        elif adel_current_max < 0:\n            adel_current_max = 0\n    adel_current_max = 0\n    for i in range(0, n - 1):\n        adel_current_max += A[i]\n        if adel_current_max > adel_max:\n            adel_max = adel_current_max\n        elif adel_current_max < 0:\n            adel_current_max = 0\n    if adel_max >= sum(A):\n        print('NO')\n    else:\n        print('YES')", "def find_negative(array):\n    add = 0\n    for i in array:\n        add += i\n        if add <= 0:\n            return False\n    return True\nt = int(input())\nn_list = []\ncake_list = []\nfor i in range(t):\n    n_list.append(int(input()))\n    cake_list.append(list(map(int, input().split())))\nfor i in range(t):\n    n = n_list[i]\n    cake = cake_list[i]\n    res_1 = find_negative(cake)\n    if not res_1:\n        print('NO')\n    elif res_1:\n        cake.reverse()\n        res_2 = find_negative(cake)\n        if not res_2:\n            print('NO')\n        elif res_2:\n            print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    track = a[0]\n    s = sum(a)\n    flag = 0\n    for i in range(1, n - 1):\n        if 0 < track < s:\n            pass\n        else:\n            flag = 1\n        track += a[i]\n    if flag == 0 and 0 < track < s:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin, stdout\nfrom collections import deque\nst = lambda : list(stdin.readline().strip())\nli = lambda : list(map(int, stdin.readline().split()))\nmp = lambda : map(int, stdin.readline().split())\ninp = lambda : int(stdin.readline())\npr = lambda n: stdout.write(str(n) + '\\n')\nmod = 1000000007\n\ndef MA(l):\n    ma = float('-inf')\n    n = len(l)\n    a = 0\n    for i in range(n):\n        a += l[i]\n        if a > ma:\n            ma = a\n        if a < 0:\n            a = 0\n    return ma\n\ndef solve():\n    n = inp()\n    l = li()\n    s = sum(l)\n    if s > max(MA(l[:-1]), MA(l[1:])):\n        print('YES')\n    else:\n        print('NO')\nfor _ in range(inp()):\n    solve()", "def fun(a, n):\n    dp = [0] * (n + 1)\n    s = 0\n    for i in range(n):\n        s += a[i]\n        dp[i + 1] = s\n    yasser = dp[n]\n    for i in range(1, n + 1):\n        if i != n and dp[i] <= 0:\n            print('NO')\n            return ''\n        if i != 1 and dp[n] - dp[i - 1] <= 0:\n            print('NO')\n            return ''\n    print('YES')\n    return ''\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    fun(a, n)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    yasser = sum(a)\n    flag = 0\n    s = 0\n    for i in range(n - 1):\n        s += a[i]\n        if s >= yasser or s <= 0:\n            flag = 1\n            break\n    if flag == 0:\n        print('YES')\n    else:\n        print('NO')", "def MSAS(a):\n    (s, cursum) = (-10 ** 14, -10 ** 14)\n    for num in a:\n        cursum = max(cursum + num, num)\n        s = max(s, cursum)\n    return s\nfor test_case in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (b, c) = (list(a), list(a))\n    b.pop(0)\n    c.pop()\n    (s1, s2, s3) = (sum(a), MSAS(b), MSAS(c))\n    if s1 > s2 and s1 > s3:\n        print('YES')\n    else:\n        print('NO')", "import sys\n\ndef I():\n    return sys.stdin.readline().rstrip()\n\ndef mx(a):\n    s = 0\n    m = None\n    for i in a[:-1]:\n        s += i\n        if m:\n            m = max(m, s)\n        else:\n            m = s\n        if s < 0:\n            s = 0\n    return m\nfor _ in range(int(I())):\n    n = int(I())\n    a = list(map(int, I().split()))\n    f = max(mx(a), mx(a[::-1])) >= sum(a)\n    print('NO' if f else 'YES')", "q = int(input())\nAns = []\nfor i in range(q):\n    ans = 'YES'\n    n = int(input())\n    A = list(map(int, input().split()))\n    s = 0\n    for i in range(n):\n        s += A[i]\n        if s <= 0:\n            ans = 'NO'\n            break\n    s = 0\n    for i in range(n - 1, -1, -1):\n        s += A[i]\n        if s <= 0:\n            ans = 'NO'\n            break\n    Ans.append(ans)\nfor i in range(q):\n    print(Ans[i])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    s = 0\n    for i in range(n):\n        s += l[i]\n        if s <= 0:\n            break\n    if s > 0:\n        s = 0\n        for i in range(n - 1, -1, -1):\n            s += l[i]\n            if s <= 0:\n                break\n    if s <= 0:\n        print('NO')\n    else:\n        print('YES')", "def eat(n, l):\n    s1 = sum(l)\n    sf = 0\n    sb = 0\n    for i in range(n):\n        sf += l[i]\n        sb += l[n - i - 1]\n        if sf <= 0 or sb <= 0:\n            return 'NO'\n    return 'YES'\nt = int(input())\nl = []\nfor i in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    l.append(s)\nfor j in l:\n    print(eat(len(j), j))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = sum(a)\n    m = []\n    if max(a) < 0:\n        print('NO')\n    else:\n        maa = -100000000\n        s = 0\n        size = len(a)\n        c = 0\n        cc = 0\n        for i in range(0, size):\n            if a[i] >= 0:\n                s += a[i]\n                c += 1\n            else:\n                if maa < s:\n                    maa = s\n                    cc = c\n                if s + a[i] <= 0:\n                    s = 0\n                    c = 0\n                else:\n                    s = s + a[i]\n                    c += 1\n        if maa < s:\n            maa = s\n            cc = c\n        if a[0] == 0 and len(set(a)) == 1:\n            print('NO')\n        elif maa == k:\n            if cc == len(a):\n                print('YES')\n            else:\n                print('NO')\n        elif maa < k:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().strip().split(' ')))\n    s = sum(lst)\n    m = 0\n    c = 0\n    for i in range(1, n):\n        c += lst[i]\n        if c > m:\n            m = c\n        elif c < 0:\n            c = 0\n    c = 0\n    for i in range(n - 1):\n        c += lst[i]\n        if c > m:\n            m = c\n        elif c < 0:\n            c = 0\n    if s > m:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    yas = sum(a)\n    (cur_max, ade) = (0, float('-inf'))\n    for i in range(1, n):\n        cur_max += a[i]\n        if cur_max < 0:\n            cur_max = 0\n        ade = max(ade, cur_max)\n    cur_max = 0\n    for i in range(n - 1):\n        cur_max += a[i]\n        if cur_max < 0:\n            cur_max = 0\n        ade = max(ade, cur_max)\n    print('YES' if yas > ade else 'NO')", "import math\ndebug = False\n\ndef pprint(*args, delimiter='#', amount=10):\n    if debug:\n        print('{0} DEBUG {0}'.format(delimiter * amount))\n        print(*args)\n        print('{0} ----- {0}'.format('-' * amount))\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    summ = sum(a)\n    if a[0] < 0 or a[-1] < 0:\n        return 'NO'\n    current_sum = 0\n    ans_left = a[0]\n    for i in range(n - 1):\n        current_sum += a[i]\n        ans_left = max(ans_left, current_sum)\n        current_sum = max(0, current_sum)\n    current_sum = 0\n    ans_right = a[1]\n    for i in range(1, n):\n        current_sum += a[i]\n        ans_right = max(ans_right, current_sum)\n        current_sum = max(0, current_sum)\n    pprint(ans_left, ans_right)\n    if max(ans_left, ans_right) >= summ:\n        return 'NO'\n    return 'YES'\nt = int(input())\nwhile t > 0:\n    t -= 1\n    print(solve())", "from math import *\nfrom collections import *\nfrom functools import *\nfrom bisect import *\nfrom itertools import *\nfrom heapq import *\nfrom statistics import *\ninf = float('inf')\nninf = -float('inf')\nip = input\nalphal = 'abcdefghijklmnopqrstuvwxyz'\nalphau = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\ndef ipl():\n    return list(map(int, ip().split()))\n\ndef ipn():\n    return int(ip())\n\ndef ipf():\n    return float(ip())\n\ndef solve():\n    n = ipn()\n    a = ipl()\n    pre = 0\n    for i in range(n - 1):\n        pre += a[i]\n        if pre <= 0:\n            print('NO')\n            return\n    suf = 0\n    for i in range(n - 1, 0, -1):\n        suf += a[i]\n        if suf <= 0:\n            print('NO')\n            return\n    print('YES')\nt = ipn()\nfor _ in range(t):\n    solve()", "def f(l):\n    if len(l) == 1:\n        return (l[0], l[0], -1000000000000000)\n    left = l[:len(l) // 2]\n    right = l[len(l) // 2:]\n    (min1, max1, sub1) = f(left)\n    (min2, max2, sub2) = f(right)\n    return (min(min1, min2), max(max1, max2), max(max2 - min1, sub1, sub2, max2))\n\ndef h(ll):\n    max0 = -1000000000000\n    for i in range(len(ll) - 1):\n        if max0 < ll[i]:\n            max0 = ll[i]\n    l = ll\n    l.reverse()\n    r = []\n    r.append(-1000000000000000000)\n    for i in range(1, len(l)):\n        if i == 1:\n            r.append(l[0])\n        else:\n            r.append(max(r[i - 1], l[i - 1]))\n    maxr = -1000000000000000\n    for i in range(len(r)):\n        if maxr < r[i] - l[i]:\n            maxr = r[i] - l[i]\n    return max(maxr, max0)\n\ndef g(l):\n    r = []\n    r.append(l[0])\n    for i in range(1, len(l)):\n        r.append(l[i] + r[i - 1])\n    return r\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = h(g(l))\n    y = 0\n    for i in l:\n        y += i\n    if x < y:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 'YES'\n    cur = 0\n    for i in range(n - 1):\n        cur += a[i]\n        if cur <= 0:\n            ans = 'NO'\n    cur = 0\n    for i in range(n - 1, 0, -1):\n        cur += a[i]\n        if cur <= 0:\n            ans = 'NO'\n    print(ans)", "def check1(a):\n    sum = 0\n    for i in range(0, len(a) - 1):\n        sum = sum + a[i]\n        if sum <= 0:\n            return 'NO'\n    sum = 0\n    for i in range(0, len(a) - 1):\n        sum = sum + a[len(a) - 1 - i]\n        if sum <= 0:\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(check1(a))", "t = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    x = 'YES'\n    s = sum(a)\n    f = 0\n    for i in range(n):\n        if a[i] > 0:\n            c += a[i]\n            f += 1\n        elif c + a[i] > 0:\n            f += 1\n            c += a[i]\n        else:\n            c = 0\n            f = 0\n        if c >= s and f != n:\n            x = 'NO'\n            break\n        else:\n            continue\n    if f == n:\n        c -= a[0]\n        if s > c:\n            x = 'YES'\n    ans.append(x)\nfor i in range(t):\n    print(ans[i])", "num_t = int(input())\nfor t in range(num_t):\n    n = int(input())\n    arr = [int(a) for a in input().strip().split()]\n    pref_sum = 0\n    ok = True\n    for e in arr:\n        pref_sum += e\n        if pref_sum <= 0:\n            ok = False\n            break\n    suf_sum = 0\n    for e in arr[::-1]:\n        suf_sum += e\n        if suf_sum <= 0:\n            ok = False\n            break\n    if ok:\n        print('YES')\n    else:\n        print('NO')", "def solve(a, first, last):\n    max_so_far = 0\n    meh = 0\n    for i in range(first, last):\n        meh = meh + a[i]\n        if max_so_far < meh:\n            max_so_far = meh\n        if meh < 0:\n            meh = 0\n    return max_so_far\nfor t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if solve(arr, 1, n) < sum(arr) and solve(arr, 0, n - 1) < sum(arr):\n        print('YES')\n    else:\n        print('NO')", "m = int(input())\nfor g in range(m):\n    n = int(input())\n    now = 0\n    res = -99999999999\n    was = False\n    arr = list(map(int, input().split()))\n    sm = sum(arr)\n    for i in range(n):\n        if arr[i] < 0:\n            now += arr[i]\n            if now < 0:\n                now = 0\n        else:\n            now += arr[i]\n        if now >= sm and i != n - 1:\n            was = True\n            break\n    now = 0\n    for i in range(n - 1, -1, -1):\n        if arr[i] < 0:\n            now += arr[i]\n            if now < 0:\n                now = 0\n        else:\n            now += arr[i]\n        if now >= sm and i != 0:\n            was = True\n            break\n    if was:\n        print('NO')\n    else:\n        print('YES')", "def check(a):\n    sum = 0\n    for i in a:\n        sum += i\n        if sum <= 0:\n            return False\n    sum = 0\n    for i in reversed(a):\n        sum += i\n        if sum <= 0:\n            return False\n    return True\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(lambda x: int(x), input().split()))\n    if check(a):\n        print('YES')\n    else:\n        print('NO')", "kl = int(input())\nfor l in range(kl):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    (sl, sp) = (0, 0)\n    pr = 1\n    for i in range(n - 1):\n        sl += a[i]\n        sp += a[n - 1 - i]\n        if sl <= 0 or sp <= 0:\n            pr = 0\n            print('NO')\n            break\n    if pr:\n        print('YES')", "t = int(input())\n\ndef woi(a, n):\n    sum = 0\n    for i in range(n):\n        sum += a[i]\n        if sum <= 0:\n            return 0\n    sum = 0\n    for i in range(n - 1, -1, -1):\n        sum += a[i]\n        if sum <= 0:\n            return 0\n    return 1\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().strip().split(' ')))\n    if woi(a, n):\n        print('YES')\n    else:\n        print('NO')", "def isYasserHappy(n, s):\n    left_sum = 0\n    for element in s:\n        left_sum += element\n        if left_sum <= 0:\n            return False\n    right_sum = 0\n    for element in reversed(s):\n        right_sum += element\n        if right_sum <= 0:\n            return False\n    return True\n\ndef solve():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        s = list(map(int, input().split()))\n        print('YES' if isYasserHappy(n, s) else 'NO')\nsolve()", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    ss = 0\n    r = True\n    for i in range(n - 1):\n        ss = ss + a[i]\n        if ss <= 0 or ss >= s:\n            print('NO')\n            r = False\n            break\n    if r:\n        print('YES')", "def solve(n, arr):\n    if arr[0] < 0 or arr[-1] < 0 or arr[0] == 0 or (arr[-1] == 0):\n        return 'NO'\n    if min(arr) >= 0:\n        return 'YES'\n    s = sum(arr)\n    (s1, s2) = (0, 0)\n    for a in arr:\n        if a >= 0:\n            s1 += a\n        if a < 0:\n            s2 = s - a - s1\n            if s1 >= s or s2 >= s:\n                return 'NO'\n            s1 += a\n    return 'YES'\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(solve(n, arr))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    for i in a:\n        s += i\n        if s <= 0:\n            return 'NO'\n    s = 0\n    for i in a[::-1]:\n        s += i\n        if s <= 0:\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor _ in range(t):\n    print(solve())", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = sum(l)\n    p = 0\n    r = True\n    for i in range(n - 1):\n        p = p + l[i]\n        if p <= 0 or p >= a:\n            r = False\n            print('NO')\n            break\n    if r:\n        print('YES')", "t = int(input())\narr = []\nfor _ in range(t):\n    arr.append(int(input()))\n    arr.append(list(map(int, input().strip().split())))\nfor s in range(t):\n    (n, idx) = (arr[2 * s], 2 * s + 1)\n    (s, sm, mx_sm, start, ysr, end) = (0, 0, 0, 0, 0, 0)\n    for i in range(n):\n        ysr += arr[idx][i]\n        sm += arr[idx][i]\n        if sm <= 0:\n            sm = 0\n            s = i + 1\n        if sm > mx_sm:\n            (start, end) = (s, i)\n            mx_sm = sm\n    if start == 0 and end == n - 1 or mx_sm < ysr:\n        print('YES')\n    else:\n        print('NO')", "def decide():\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    psum = 0\n    ssum = 0\n    for i in range(n):\n        psum += list1[i]\n        ssum += list1[n - 1 - i]\n        if psum <= 0 or ssum <= 0:\n            print('NO')\n            return\n    print('YES')\nfor t in range(int(input())):\n    decide()", "testcase = int(input())\nfor i in range(testcase):\n    n = int(input())\n    lists = list(map(int, input().split()))\n    (p, s) = (0, 0)\n    flag = False\n    for i in range(n):\n        p += lists[i]\n        s += lists[n - 1 - i]\n        if p <= 0 or s <= 0:\n            print('NO')\n            flag = True\n            break\n    if not flag:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    li = list(map(int, input().split()))\n    s1 = sum(li)\n    k = 0\n    res = True\n    for i in range(n - 1):\n        k = k + li[i]\n        if k <= 0 or k >= s1:\n            res = False\n            print('NO')\n            break\n    if res:\n        print('YES')", "def sovle():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    sum = 0\n    for i in range(0, n):\n        sum += a[i]\n        if sum <= 0:\n            return 0\n    sum = 0\n    for i in range(n - 1, -1, -1):\n        sum += a[i]\n        if sum <= 0:\n            return 0\n    return 1\n\ndef main():\n    t = int(input())\n    while t:\n        t -= 1\n        print('YES' if sovle() == 1 else 'NO')\nmain()", "n = int(input())\nwhile n != 0:\n    (n, k, a) = (n - 1, 0, int(input()))\n    b = list(map(int, input().split()))\n    (i, s) = (0, 0)\n    while i != a:\n        s = s + b[i]\n        if s <= 0:\n            print('NO')\n            k = 1\n            break\n        i = i + 1\n    if k == 0:\n        (s, i) = (0, a - 1)\n        while i >= 0:\n            s = s + b[i]\n            if s <= 0:\n                print('NO')\n                k = 1\n                break\n            i = i - 1\n    if k == 0:\n        print('YES')", "def solve(n, a):\n    sum = 0\n    for i in range(n):\n        sum += a[i]\n        if sum <= 0:\n            return 0\n    sum = 0\n    for i in range(n - 1, -1, -1):\n        sum += a[i]\n        if sum <= 0:\n            return 0\n    return 1\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = solve(n, a)\n    if ans == 0:\n        print('NO')\n    else:\n        print('YES')", "def has_negative_prefix(a):\n    sum = 0\n    for e in a:\n        sum += e\n        if sum <= 0:\n            return True\n    return False\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    a = [int(x) for x in input().split(' ')]\n    if has_negative_prefix(a):\n        print('NO')\n    else:\n        a.reverse()\n        if has_negative_prefix(a):\n            print('NO')\n        else:\n            print('YES')\n    t = t - 1", "def eat(l, n):\n    s = sum(l)\n    f = 0\n    for i in range(n):\n        f = f + l[i]\n        if f <= 0:\n            return 'NO'\n    f = 0\n    for i in range(n):\n        f = f + l[n - 1 - i]\n        if f <= 0:\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor test_case in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    print(eat(l, n))", "for i in range(int(input())):\n    q = int(input())\n    w = list(map(int, input().split()))\n    e = 0\n    r = 0\n    for j in range(q):\n        e += w[j]\n        r += w[q - j - 1]\n        if e <= 0 or r <= 0:\n            e = -1\n            break\n    if e == -1:\n        print('NO')\n    else:\n        print('YES')", "for i in range(int(input())):\n    n = int(input())\n    x = [int(w) for w in input().split()]\n    t = sum(x)\n    ans = 'YES'\n    a = 0\n    b = 0\n    for j in range(n - 1):\n        a += x[j]\n        b += x[-j - 1]\n        if a >= t:\n            ans = 'NO'\n            break\n        if b >= t:\n            ans = 'NO'\n            break\n    print(ans)"]