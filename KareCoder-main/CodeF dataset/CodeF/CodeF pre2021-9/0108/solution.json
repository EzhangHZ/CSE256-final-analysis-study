["def check_if_palindrome(s):\n    if s == s[::-1]:\n        return True\n    return False\n\ndef check_if_possible(string, character):\n    if str.count(string, character) == len(string):\n        return (string, False)\n    if string[0] != character:\n        string += character\n        return (string, True)\n    elif string[-1] != character:\n        string = string[0:-1] + character + string[-1]\n        return (string, True)\n    else:\n        length = len(string)\n        for i in range(1, length):\n            if string[i] != character:\n                string = string[0:-i] + character + string[-i:]\n                return (string, True)\n        return (string, False)\n\ndef start_test():\n    strings = []\n    character = 'a'\n    t = int(input())\n    for i in range(0, t):\n        string = input()\n        strings.append(string)\n    for string in strings:\n        (result, possible) = check_if_possible(string, character)\n        if possible:\n            print('YES')\n            print(result)\n        else:\n            print('NO')\nstart_test()", "t = int(input())\ns = [input() for i in range(t)]\nfor i in range(t):\n    if s[i] == 'a' * len(s[i]):\n        print('NO')\n    elif s[i] + 'a' == 'a' + s[i][::-1]:\n        print('YES')\n        print('a' + s[i])\n    else:\n        print('YES')\n        print(s[i] + 'a')", "m = int(input())\nl = []\nfor _ in range(m):\n    a = input()\n    t = len(a)\n    for i in range(t):\n        if a[i] != 'a':\n            a = a[:t - i] + 'a' + a[t - i:]\n            l.append('YES')\n            l.append(a)\n            break\n    else:\n        l.append('NO')\nfor i in l:\n    print(i)", "t = int(input())\nans = []\nfor i in range(t):\n    s = input()\n    if s.count('a') == len(s):\n        ans.append('NO')\n    elif (s + 'a')[::-1] != s + 'a':\n        ans.append('YES')\n        ans.append(s + 'a')\n    elif ('a' + s)[::-1] != 'a' + s:\n        ans.append('YES')\n        ans.append('a' + s)\n    else:\n        ans.append('NO')\nfor i in ans:\n    print(i)", "def solve(A):\n    for i in range(len(A)):\n        if A[i] != 'a':\n            print('YES')\n            print(A[:len(A) - i] + 'a' + A[len(A) - i:])\n            return\n    print('NO')\nx = int(input())\nA = []\nfor _ in range(x):\n    A.append(input())\nfor a in A:\n    solve(a)", "import sys\n\ndef check(s):\n    n = len(s) // 2\n    if len(s) % 2 and s[:n + 1] != s[n:][::-1]:\n        return True\n    if len(s) % 2 == 0 and s[:n] != s[n:][::-1]:\n        return True\n    return False\n\ndef Main():\n    t = int(sys.stdin.readline().strip())\n    for _ in range(t):\n        s = sys.stdin.readline().strip()\n        n = len(s)\n        if s == 'a' * n:\n            print('NO')\n            continue\n        print('YES')\n        ans = s + 'a'\n        if check(ans):\n            print(ans)\n        else:\n            print('a' + s)\nMain()", "for i in range(int(input())):\n    n = input()\n    t1 = n + 'a'\n    t2 = 'a' + n\n    if t1 != t1[::-1]:\n        print('YES')\n        print(t1)\n    elif t2 != t2[::-1]:\n        print('YES')\n        print(t2)\n    else:\n        print('NO')", "for i in range(int(input())):\n    l = input()\n    l1 = l + 'a'\n    l2 = 'a' + l\n    if l1 != l1[::-1]:\n        print('YES')\n        print(l1)\n    elif l2 != l2[::-1]:\n        print('YES')\n        print(l2)\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    s = input()\n    ss = s + 'a'\n    s = 'a' + s\n    if ss != ss[::-1]:\n        print('YES')\n        print(ss)\n    elif s != s[::-1]:\n        print('YES')\n        print(s)\n    else:\n        print('NO')\n    t -= 1", "for t in range(int(input())):\n    s = input()\n    t = s + 'a'\n    w = 'a' + s\n    if t != t[::-1]:\n        print('YES')\n        print(t)\n    elif w != w[::-1]:\n        print('YES')\n        print(w)\n    else:\n        print('NO')", "for t in range(int(input())):\n    s = input()\n    t = s + 'a'\n    w = 'a' + s\n    if t != t[::-1]:\n        print('YES')\n        print(t)\n    elif w != w[::-1]:\n        print('YES')\n        print(w)\n    else:\n        print('NO')", "def insert_char_at_position(char, position, string):\n    return string[:position] + char + string[position:]\nimport sys\ninp = sys.stdin.readlines()\ninp = [line[:-1] for line in inp]\nnumber_of_inputs = int(inp[0])\nfor line in inp[1:]:\n    non_palindrome_found = False\n    for (char_position, char) in enumerate(line):\n        if char != 'a':\n            desired_position = len(line) - char_position\n            not_a_palindrome = insert_char_at_position('a', desired_position, line)\n            print('YES')\n            print(not_a_palindrome)\n            non_palindrome_found = True\n            break\n    if not non_palindrome_found:\n        print('NO')", "for i in range(int(input())):\n    a = input()\n    x = a + 'a'\n    y = 'a' + a\n    if x != x[::-1]:\n        print('YES')\n        print(x)\n    elif y != y[::-1]:\n        print('YES')\n        print(y)\n    else:\n        print('NO')", "T = int(input())\nfor t in range(T):\n    s = input()\n    if len(set(s)) == 1 and s[0] == 'a':\n        print('NO')\n    else:\n        print('YES')\n        s += 'a'\n        if s == s[::-1]:\n            print('a' + s[:-1])\n        else:\n            print(s)", "for i in range(int(input())):\n    l = input()\n    l1 = l + 'a'\n    l2 = 'a' + l\n    if l1 != l1[::-1]:\n        print('YES')\n        print(l1)\n    elif l2 != l2[::-1]:\n        print('YES')\n        print(l2)\n    else:\n        print('NO')", "for t in range(int(input())):\n    s = input()\n    t = s + 'a'\n    w = 'a' + s\n    if t != t[::-1]:\n        print('YES')\n        print(t)\n    elif w != w[::-1]:\n        print('YES')\n        print(w)\n    else:\n        print('NO')", "import sys\nn_cases = int(sys.stdin.readline().strip())\nfor _ in range(n_cases):\n    s = sys.stdin.readline().strip()\n    l = len(s)\n    i = 0\n    while i != l and s[i] == 'a':\n        i += 1\n    if i == l:\n        print('NO')\n    else:\n        print('YES')\n        pos = l - i\n        print(s[:pos] + 'a' + s[pos:])", "def isPalindrome(s):\n    return s[::-1] == s\n\ndef main():\n    t = int(input())\n    for tx in range(t):\n        s = input()\n        if not isPalindrome(s + 'a'):\n            print('YES')\n            print(s + 'a')\n        elif not isPalindrome('a' + s):\n            print('YES')\n            print('a' + s)\n        else:\n            print('NO')\n    return 0\nmain()", "for _ in range(int(input())):\n    s = input()\n    if s + 'a' != (s + 'a')[::-1]:\n        print('YES\\n', s + 'a')\n    elif 'a' + s != 'a' + s[::-1]:\n        print('YES\\n', 'a' + s)\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = input()\n    if s[0] == 'a' and len(set(s)) == 1:\n        print('NO')\n    else:\n        print('YES')\n        if s + 'a' == 'a' + s[::-1]:\n            print('a' + s)\n        else:\n            print(s + 'a')", "from collections import deque, Counter, defaultdict\nimport heapq\nimport math\narray = []\nncases = int(input())\nq = []\nwhile ncases:\n    q.append(input())\n    ncases -= 1\n\ndef function(string):\n    if set(string) == {'a'}:\n        return -1\n    s1 = string + 'a'\n    s2 = 'a' + string\n    if s1 == s1[::-1]:\n        return s2\n    else:\n        return s1\nm = len(q)\ni = 0\nwhile i != m:\n    val = function(q[i])\n    if val != -1:\n        print('YES')\n        print(val)\n    else:\n        print('NO')\n    i += 1", "for i in range(int(input())):\n    s = input()\n    k = s + 'a'\n    v = 'a' + s\n    if s.count('a') == len(s):\n        print('NO')\n    elif k != k[::-1]:\n        print('YES')\n        print(k)\n    else:\n        print('YES')\n        print(v)", "t = int(input())\n\ndef countA(string):\n    i = 0\n    while string[i] == 'a':\n        i += 1\n    j = -1\n    while string[j] == 'a':\n        j -= 1\n    if i >= -j:\n        return 'a' + string\n    else:\n        return string + 'a'\nfor i in range(t):\n    str1 = input()\n    if set(str1) == {'a'}:\n        print('NO')\n    else:\n        print('YES')\n        if str1[0] == 'a' and str1[-1] == 'a':\n            print(countA(str1))\n        elif str1[0] != 'a':\n            print(str1 + 'a')\n        elif str1[-1] != 'a':\n            print('a' + str1)", "t = int(input())\nfor _ in range(t):\n    s = list(input())\n    if s.count('a') == len(s):\n        print('NO')\n    else:\n        print('YES')\n        s.append('a')\n        if s == s[::-1]:\n            del s[-1]\n            print('a' + ''.join(s))\n        else:\n            print(''.join(s))", "for t in range(int(input())):\n    s = input()\n    if set(s) == {'a'}:\n        print('NO')\n    else:\n        print('YES')\n        if s + 'a' == (s + 'a')[::-1]:\n            print('a' + s)\n        else:\n            print(s + 'a')", "t = int(input())\nfor i in range(t):\n    s = input()\n    n = len(s)\n    index = -1\n    for j in range(n):\n        if s[j] != 'a':\n            index = j\n            break\n    if index == -1:\n        print('NO')\n    else:\n        print('YES')\n        print(s[0:n - j] + 'a' + s[n - j:])", "def is_palindrome(s):\n    reverse_s = s[::-1]\n    status = True\n    if s != reverse_s:\n        status = False\n    return status\nt = int(input())\nlist1 = []\nfor i in range(t):\n    string = str(input())\n    if is_palindrome(string + 'a') == False:\n        print('YES')\n        print(string + 'a')\n    elif is_palindrome('a' + string) == False:\n        print('YES')\n        print('a' + string)\n    else:\n        print('NO')", "def palindrome(s):\n    return s == s[::-1]\n\ndef solve():\n    x = input()\n    if not palindrome(x + 'a'):\n        print('YES\\n' + x + 'a')\n    elif not palindrome('a' + x):\n        print('YES\\n' + 'a' + x)\n    else:\n        print('NO')\n\ndef main():\n    for i in range(int(input())):\n        solve()\nmain()", "n = int(input())\nfor i in range(n):\n    line = input()\n    yn = False\n    for j in range(0, len(line)):\n        if line[j] != 'a':\n            if j == 0:\n                t_line = 'YES\\n' + line + 'a'\n            else:\n                t_line = 'YES\\n' + line[:-j] + 'a' + line[-j:]\n            print(t_line)\n            yn = True\n            break\n    if yn is False:\n        print('NO')", "x = int(input())\nfor i in range(x):\n    a = input()\n    s = a + 'a'\n    d = 'a' + a\n    if s == s[::-1]:\n        if d == d[::-1]:\n            print('NO')\n        else:\n            print('YES')\n            print(d)\n    else:\n        print('YES')\n        print(s)"]