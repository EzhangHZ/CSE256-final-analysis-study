["for s in [*open(0)][2::2]:\n    print((s[0] == '1') + s[1:].count('1 1 1'))", "t = int(input())\nres = []\nfor i in range(t):\n    n = int(input())\n    a = input()\n    conta = a[1:].count('1 1 1')\n    antes = '1 1 ' + a[0]\n    c = 0\n    if antes == '1 1 1':\n        c = 1\n    res.append(c + conta)\nfor j in res:\n    print(j)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print((a[0] == '1') + ''.join(a[1:]).count('111'))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print((a[0] == '1') + ''.join(a[1:]).count('111'))", "for s in [*open(0)][2::2]:\n    print((s[0] == '1') + s[1:].count('1 1 1'))", "for s in [*open(0)][2::2]:\n    print((s[0] == '1') + s[1:].count('1 1 1'))", "for i in range(int(input())):\n    n = int(input())\n    a = '1 1 ' + input()\n    print(a.count('1 1 1'))", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = input()\n    print(int(a[0]) + a[1:].count('1 1 1'))", "import math\nfrom heapq import heappush, heappop, heapify\nimport random\nimport string\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right, insort\nimport sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nH = 1000000000 + 7\nfor _ in range(I()):\n    n = I()\n    l = L()\n    i = ans = 0\n    f = 1\n    while i < n:\n        if l[i] == 1:\n            j = i + 1\n            while j < n and l[j] == 0:\n                j += 1\n            c = j - i - 1\n            if f == 1:\n                ans += 1\n                f = 0\n                i = j\n            elif c == 0:\n                i += 2\n                f = 1\n            else:\n                i = j\n        else:\n            j = i + 1\n            while j < n and l[j] == 0:\n                j += 1\n            c = j - i\n            if f == 1:\n                f = 0\n                i = j\n            elif c == 1:\n                i += 2\n                f = 1\n            else:\n                i = j\n    print(ans)", "import sys\nimport re\n\ndef solve():\n    n = int(input())\n    s = input()\n    s = ''.join(s.split())\n    c = s.count('111', 1, len(s))\n    print(c if s[0] == '0' else c + 1)\nn = int(input())\nwhile n:\n    solve()\n    n -= 1", "for _ in ' ' * int(input()):\n    (n, a) = (int(input()), input().split())\n    c = 0 if a[0] == '0' else 1\n    print(c + ''.join(a[1:]).count('111'))", "for _ in range(int(input())):\n    input()\n    arr = '1 1 ' + input()\n    print(arr.count('1 1 1'))", "import sys\nimport math\nfrom bisect import bisect_right as br\nfrom statistics import mode\nfrom itertools import combinations as cb\n\ndef int_arr():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef str_arr():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    n = int(input())\n    arr = int_arr()\n    cnt = 0 if arr[0] != 1 else 1\n    one_c = 0\n    for i in range(1, n):\n        if arr[i] == 0:\n            one_c = 0\n        else:\n            one_c += 1\n        if one_c == 3:\n            cnt += 1\n            one_c = 0\n    print(cnt)", "q = []\nt = int(input())\nfor j in range(t):\n    n = int(input())\n    l = list(input().split(' '))\n    l = [int(j) for j in l]\n    skip = 0\n    i = 1\n    if l[0] == 1:\n        skip += 1\n    while i < n - 2:\n        if l[i] == 1 and l[i + 1] == 1 and (l[i + 2] == 1):\n            skip += 1\n            i += 3\n        else:\n            i += 1\n    q.append(skip)\nfor i in q:\n    print(i)", "from collections import defaultdict as dd\nfrom sys import stdin, stdout\nfrom bisect import bisect_left\nfrom math import log, sqrt\nfor t in range(int(stdin.readline().strip())):\n    n = int(stdin.readline().strip())\n    a = list(map(int, stdin.readline().strip().split()))\n    c = 0\n    b = []\n    for i in range(n):\n        if a[i]:\n            c += 1\n        else:\n            b.append(c)\n            c = 0\n    if c:\n        b.append(c)\n    c = 0\n    if a[0] == 1:\n        c += 1\n        b[0] -= 1\n    for i in b:\n        c += i // 3\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = 0\n    if s[0] == '1':\n        ans += 1\n    ans += s[1:].count('1 1 1')\n    print(ans)", "q = []\nt = int(input())\nfor j in range(t):\n    n = int(input())\n    l = list(input().split(' '))\n    l = [int(j) for j in l]\n    skip = 0\n    i = 1\n    if l[0] == 1:\n        skip += 1\n    while i < n - 2:\n        if l[i] == 1 and l[i + 1] == 1 and (l[i + 2] == 1):\n            skip += 1\n            i += 3\n        else:\n            i += 1\n    q.append(skip)\nfor i in q:\n    print(i)", "for _ in range(int(input())):\n    n = int(input())\n    arr = input().strip()\n    print(int(arr[0]) + arr[1:].count('1 1 1'))", "for _ in range(int(input())):\n    n = int(input())\n    s = input().strip()\n    k = s[1:].count('1 1 1')\n    print(k + int(s[0]))", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    ans = 0\n    if a[0] == '1':\n        ans = 1\n    ans += a[1:].count('1 1 1')\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = input().strip()\n    print(int(arr[0]) + arr[1:].count('1 1 1'))", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    ans = 0\n    if a[0] == '1':\n        ans = 1\n    ans += a[1:].count('1 1 1')\n    print(ans)", "testcase = int(input())\nlevels = []\nfor t_itr in range(0, testcase):\n    x = input()\n    levels.append(input().split())\nskip = []\nlist_count = -1\nfor list in levels:\n    friend_count = 0\n    count = 0\n    skip.append(0)\n    list_count = list_count + 1\n    for i in range(0, len(list)):\n        if i == 0:\n            friend_count += 1\n            if list[i] == '1':\n                skip[list_count] += 1\n            if i + 2 < len(list) and list[i + 2] == '0':\n                list[i + 1] = '1'\n        elif list[i] == '0' and friend_count < 2 or (list[i] == '1' and count == 2):\n            if i + 2 < len(list) and list[i + 2] == '0':\n                list[i + 1] = '1'\n            count = 0\n            friend_count += 1\n            if list[i] == '1':\n                skip[list_count] += 1\n        else:\n            friend_count = 0\n            count += 1\nfor num in skip:\n    print(num)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    ans = 1 if a[0] == 1 else 0\n    c = 0\n    for i in range(1, n):\n        if a[i] == 1:\n            c += 1\n        else:\n            ans += c // 3\n            c = 0\n    if c > 2:\n        ans += c // 3\n    print(ans)", "def schet():\n    n = int(input())\n    string = input()\n    string = string.replace(' ', '')\n    a = 0\n    if string[0] == '1':\n        a += 1\n    i = 1\n    while i < n:\n        if string[i:i + 3] == '111':\n            a += 1\n            i += 3\n        else:\n            i += 1\n    print(a)\nt = int(input())\nfor i in range(t):\n    schet()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = input().strip()\n    k = lst[1:].count('1 1 1')\n    print(k + int(lst[0]))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = input().strip()\n    k = l[1:].count('1 1 1')\n    print(k + int(l[0]))", "from sys import stdin, stdout\nimport math\nt = int(stdin.readline())\nfor _ in range(t):\n    n = int(stdin.readline())\n    arr = list(map(int, stdin.readline().split()))\n    c = 0\n    skips = 0\n    i = 0\n    while i < n:\n        if c == 0:\n            if arr[i] == 1:\n                if i + 1 < n and arr[i + 1] == 0 and (i + 2 < n) and (arr[i + 2] == 1):\n                    i += 2\n                else:\n                    i += 1\n                skips += 1\n            else:\n                if i + 2 < n and arr[i + 2] == 1 and (arr[i + 1] == 0):\n                    i += 1\n                i += 1\n            c = 1\n        else:\n            if i + 1 < n and arr[i + 1] == 1:\n                i += 2\n            else:\n                i += 1\n            c = 0\n    print(skips)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    i = 1\n    ans = 0\n    if arr[0] == 1:\n        ans += 1\n    while i != n:\n        if arr[i] == 0:\n            i += 1\n            continue\n        temp = i\n        while temp != n and arr[temp] == 1:\n            temp += 1\n        ans += (temp - i) // 3\n        i = temp\n    print(ans)", "import sys\n\ndef solution():\n    T = int(input())\n    for _ in range(T):\n        int(input())\n        arr = ''.join(input().split())\n        result = 0\n        if arr[0] == '1':\n            result += 1\n        arr = arr[1:]\n        result += arr.count('111')\n        print(result)\nsolution()", "for _ in ' ' * int(input()):\n    (n, a) = (int(input()), input().split())\n    c = 0 if a[0] == '0' else 1\n    print(c + ''.join(a[1:]).count('111'))", "for _ in range(int(input())):\n    n = int(input())\n    a = ''.join((i for i in input().split()))\n    print((a[0] == '1') + a[1:].count('111'))", "t = int(input())\nw = []\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.append(0)\n    ff = a[0]\n    a[0] = 0\n    if sum(a) == n:\n        w.append(n // 3)\n    else:\n        c = []\n        d = 0\n        summ = 0\n        for i in range(n + 1):\n            if a[i] == 1:\n                d = d + 1\n            else:\n                c.append(d)\n                d = 0\n        for i in c:\n            summ = summ + i // 3\n        w.append(summ + ff)\nfor i in w:\n    print(i)", "for _ in range(int(input())):\n    N = int(input())\n    listaString = list(map(str, input().split()))\n    lista = []\n    if listaString[0] == '1':\n        lista.append(1)\n    listaUtil = listaString[1:]\n    stringFinal = ''.join(listaUtil)\n    calculo = sum(lista) + stringFinal.count('111')\n    print(calculo)", "for _ in range(int(input())):\n    N = int(input())\n    X = list(map(str, input().split()))\n    f = 1\n    c = 0\n    if X[0] == '1':\n        c += 1\n    z = 0\n    s = ''.join(X[1:])\n    print(c + s.count('111'))", "import math, collections\n\ndef testcase():\n    n = int(input())\n    a = input().split()\n    ans = 0\n    if a[0] == '1':\n        ans += 1\n    s = ''.join(a[1:])\n    ans += s.count('111')\n    print(ans)\nt = int(input())\nwhile t > 0:\n    testcase()\n    t -= 1", "def run():\n    n = int(input())\n    nums = ''.join(input().split())\n    ans = 0\n    ans += int(nums[0])\n    ans += nums[1:].count('111')\n    print(ans)\nT = 1\nif T:\n    for i in range(int(input())):\n        run()\nelse:\n    run()", "t = int(input())\nfor i in range(0, t):\n    sum = 0\n    cnt = 0\n    n = int(input())\n    lst = list(map(str, input().split()))\n    if lst[0] == '1':\n        cnt = cnt + 1\n    s = ''.join(lst[1:])\n    print(cnt + s.count('111'))", "import math\n\ndef solve():\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    (count, i) = (0, 0)\n    ch = True\n    while i < n:\n        if ch:\n            ch = False\n            if i < n - 1 and arr[i] == 0 and (arr[i + 1] == 0):\n                i += 2\n                continue\n            if arr[i] == 0:\n                i += 1\n                continue\n            if i < n - 1:\n                if arr[i] == 1 and arr[i + 1] == 0:\n                    count += 1\n                    i += 2\n                    continue\n                if arr[i] == 1 and arr[i + 1] == 1:\n                    i += 1\n                    count += 1\n                    continue\n            elif arr[i] == 1:\n                count += 1\n                i += 1\n        else:\n            ch = True\n            if i < n - 1:\n                if arr[i] == 1 and arr[i + 1] == 1:\n                    i += 2\n                    continue\n                if arr[i] == 1 and arr[i + 1] == 0:\n                    i += 1\n            else:\n                i += 1\n    return count\nfor i in range(int(input())):\n    print(solve())", "for i in range(int(input())):\n    n = int(input())\n    tower = [int(j) for j in input().split()]\n    j = 0\n    friend1s_turn = True\n    points = 0\n    while j < n:\n        if friend1s_turn:\n            if tower[j] == 1:\n                points += 1\n            if n - j > 2:\n                if tower[j + 1] == 1 or tower[j + 2] == 0:\n                    j += 1\n                    friend1s_turn = False\n                else:\n                    j += 2\n                    friend1s_turn = False\n            elif n - j > 1:\n                if tower[j + 1] == 1:\n                    j += 1\n                    friend1s_turn = False\n                else:\n                    j += 2\n                    friend1s_turn = False\n            else:\n                j += 1\n        elif n - j > 1:\n            if tower[j + 1] == 1:\n                j += 2\n                friend1s_turn = True\n            else:\n                j += 1\n                friend1s_turn = True\n        else:\n            j += 1\n            friend1s_turn = True\n    print(points)", "from random import shuffle\n\ndef solve():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        ans = a[0]\n        ones = 0\n        for e in a[1:]:\n            if e:\n                ones += 1\n            else:\n                ans += ones // 3\n                ones = 0\n        ans += ones // 3\n        print(ans)\nsolve()", "n = int(input())\nfor i in range(n):\n    l = int(input())\n    data = [int(i) for i in input().split()]\n    skip = 0\n    i = 0\n    while l > i:\n        if data[i] == 1:\n            skip += 1\n        i += 1\n        if i < l and data[i] == 0 and (not (i + 1 < l and data[i + 1] == 0)):\n            i += 1\n        i += 1\n        if i < l and data[i] == 1:\n            i += 1\n    print(skip)", "t = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    a = list(map(str, input().split()))\n    c = 0\n    if a[0] == '1':\n        c = c + 1\n    s = ''.join(a[1:])\n    print(c + s.count('111'))", "l = []\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = []\n    count = 1\n    e = a[0]\n    for i in range(1, n):\n        if a[i] == e:\n            count = count + 1\n        else:\n            s.append([e, count])\n            e = a[i]\n            count = 1\n    s.append([e, count])\n    if s[0][0] == 0:\n        chance = 'f'\n        count = 0\n        for i in s:\n            if chance == 'f':\n                if i[0] == 0:\n                    chance = 'm'\n            else:\n                count = count + i[1] // 3\n                chance = 'f'\n    else:\n        chance = 'f'\n        if s[0][1] % 3 == 0:\n            count = s[0][1] // 3\n        else:\n            count = s[0][1] // 3 + 1\n        s = s[1:]\n        for i in s:\n            if chance == 'f':\n                if i[0] == 0:\n                    chance = 'm'\n            else:\n                count = count + i[1] // 3\n                chance = 'f'\n    l.append(count)\nfor i in l:\n    print(i)", "def solver():\n    n = int(input())\n    bosses = list(map(int, input().split()))\n    (skips, i) = (0, 1)\n    skips += bosses[0]\n    while i < n - 2:\n        if bosses[i] == 1 and bosses[i + 1] == 1 and (bosses[i + 2] == 1):\n            skips += 1\n            i += 3\n        else:\n            i += 1\n    return skips\nt = int(input())\nfor _ in range(t):\n    print(solver())", "for _ in range(int(input())):\n    N = int(input())\n    X = list(map(str, input().split()))\n    c = 0\n    if X[0] == '1':\n        c += 1\n    s = ''.join(X[1:])\n    print(c + s.count('111'))", "def main():\n    n = int(input())\n    lst = list(map(int, input().split()))\n    pos = 0\n    skip = 0\n    zeros = 0\n    left = 0\n    points = 0\n    while pos < n:\n        if lst[pos] == 0:\n            zeros = True\n        else:\n            if zeros:\n                left = 2\n                zeros = False\n            if left:\n                left -= 1\n            else:\n                points += 1\n                left = 2\n        pos += 1\n    print(points)\nt = int(input())\nfor i in range(t):\n    main()", "def main():\n    n = int(input())\n    lst = list(map(int, input().split()))\n    pos = 0\n    left = 0\n    points = 0\n    while pos < n:\n        if lst[pos] == 0:\n            left = 2\n        elif left:\n            left -= 1\n        else:\n            points += 1\n            left = 2\n        pos += 1\n    print(points)\nt = int(input())\nfor i in range(t):\n    main()", "t = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    a = list(map(str, input().split()))\n    c = 0\n    if a[0] == '1':\n        c = c + 1\n    s = ''.join(a[1:])\n    print(c + s.count('111'))", "def solve(arr, n):\n    ans = 1 if arr[0] == 1 else 0\n    i = 1\n    j = 0\n    while i < n:\n        if arr[i] == 0:\n            i += 1\n            continue\n        j = i\n        while j < n and arr[j] == 1:\n            j += 1\n        ans += (j - i) // 3\n        i = j - 1\n        i += 1\n    print(ans)\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        solve(list(map(int, input().split())), n)\nmain()", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    c = 0\n    if a[0] == 1:\n        s = 1\n    for i in range(1, n):\n        if a[i] == 1:\n            c += 1\n        else:\n            s += c // 3\n            c = 0\n    s += c // 3\n    print(s)", "def process():\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 1\n    points = 0\n    while i < n:\n        while i < n:\n            if a[i] == 1:\n                break\n            i += 1\n        count_1 = 0\n        while i < n:\n            if a[i] == 0:\n                break\n            count_1 += 1\n            i += 1\n        points += count_1 // 3\n    if a[0] == 1:\n        points += 1\n    print(points)\n\ndef main():\n    for i in range(int(input())):\n        process()\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    i = 1\n    while i < n - 2:\n        if arr[i] + arr[i + 1] + arr[i + 2] == 3:\n            ans += 1\n            i += 2\n        i += 1\n    ans += arr[0]\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    if lst[0] == 0:\n        c = 0\n        ind = 0\n        while True:\n            if ind > n - 1:\n                break\n            elif lst[ind] == 1:\n                c1 = 1\n                ind1 = 0\n                for j in range(ind + 1, n):\n                    if lst[j] == 1:\n                        c1 += 1\n                        ind1 += 1\n                    else:\n                        break\n                ind = ind + ind1 + 1\n                c += c1 // 3\n            else:\n                ind += 1\n        print(c)\n    else:\n        lst = lst[1:]\n        c = 1\n        ind = 0\n        while True:\n            if ind > n - 2:\n                break\n            elif lst[ind] == 1:\n                c1 = 1\n                ind1 = 0\n                for j in range(ind + 1, n - 1):\n                    if lst[j] == 1:\n                        c1 += 1\n                        ind1 += 1\n                    else:\n                        break\n                ind = ind + ind1 + 1\n                c += c1 // 3\n            else:\n                ind += 1\n        print(c)", "def sol(n, a):\n    idx = 0\n    pts = 0\n    while idx < n:\n        pts += a[idx]\n        if (idx + 4 >= n or a[idx + 4] == 0) and (idx + 1 >= n or a[idx + 1] == 0):\n            idx += 4\n        elif idx + 3 >= n or a[idx + 3] == 0:\n            idx += 3\n        elif idx + 2 >= n or a[idx + 2] == 0:\n            idx += 2\n        elif idx + 1 >= n or a[idx + 1] == 0:\n            idx += 1\n        else:\n            idx += 3\n    return pts\n\ndef main():\n    T = int(input())\n    for t in range(T):\n        n = int(input())\n        a = list(map(int, input().split()))\n        print(sol(n, a))\nmain()", "from math import *\nfrom sys import *\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    m = 0\n    i = 0\n    if a[0] == 1:\n        ans = ans + 1\n    b = []\n    i = 1\n    c = 0\n    while i < n:\n        if a[i] == 1:\n            c = c + 1\n            if c == 3:\n                ans = ans + 1\n                c = 0\n        else:\n            c = 0\n        i = i + 1\n    print(ans)", "(T,) = map(int, input().split())\nfor _ in range(T):\n    (N,) = map(int, input().split())\n    X = list(map(str, input().split()))\n    f = 1\n    c = 0\n    if X[0] == '1':\n        c += 1\n    z = 0\n    s = ''.join(X[1:])\n    print(c + s.count('111'))", "tests = int(input())\nA = []\nfor i in range(tests):\n    input()\n    l = input()\n    A = l.split()\n    counter = 0\n    i = 0\n    while i < len(A) and A[i] != '0':\n        i += 1\n    if i % 3 == 0:\n        counter += int(i / 3)\n    else:\n        counter += int(i / 3) + 1\n    start = -1\n    for j in range(i, len(A)):\n        if A[j] != '0':\n            if start == -1:\n                start = j\n        elif start != -1:\n            length = j - start\n            if length % 3 == 0:\n                counter += int(length / 3)\n            else:\n                counter += int(length / 3)\n            start = -1\n    if start != -1:\n        length = j - start + 1\n        if length % 3 == 0:\n            counter += int(length / 3)\n        else:\n            counter += int(length / 3)\n    print(counter)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().rstrip().split()))\n    ct = a[0]\n    prev = -1\n    for i in range(1, n):\n        if a[i] == 1:\n            if prev == 1:\n                ct += 1\n                prev = -1\n            else:\n                prev += 1\n        else:\n            prev = -1\n    print(ct)", "from math import *\nfrom bisect import *\nfrom collections import Counter, defaultdict\nI = lambda : int(input())\nM = lambda : map(int, input().split())\nLI = lambda : list(map(int, input().split()))\nfor _ in range(I()):\n    n = I()\n    a = input()\n    a = a.replace(' ', '')\n    ans = 0\n    a = a.split('0')\n    if a[0] != '':\n        ans += max(1, ceil(len(a[0]) / 3))\n    for i in range(1, len(a)):\n        if i == 0:\n            ans += max(1, len(a[i]) // 2)\n        else:\n            ans += len(a[i]) // 3\n    print(ans)", "t = eval(input())\nfor _ in range(t):\n    input()\n    nums = list(map(int, input().strip().split(' ')))\n    prev = nums[0]\n    prefix = []\n    prefix.append(prev)\n    prev = 0\n    for i in range(1, len(nums)):\n        num = nums[i]\n        if num == 0 and prev != 0:\n            prefix.append(prev)\n            prev = 0\n        prev += num\n    prefix.append(prev)\n    min_ = 0\n    for (i, num) in enumerate(prefix):\n        if i == 0:\n            min_ += max(num // 2, 1) if num else 0\n        else:\n            min_ += num // 3\n    print(min_)", "from math import inf\n\ndef solve(n, a):\n    dp = (0, inf, a[0], a[0])\n    for i in range(3, n):\n        dp = (dp[1], dp[2], dp[3], min(a[i - 3] + a[i - 2] + dp[0], dp[1] + a[i - 2], dp[2] + a[i - 1]))\n    if n < 4:\n        print(a[0])\n    else:\n        print(min(dp[3], dp[2] + a[-1], dp[1] + a[-1] + a[-2]))\nt = int(input())\nfor test in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    solve(n, a)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a_s = list(map(int, input().split()))\n    s = a_s[0]\n    del a_s[0]\n    one_nums = [0]\n    for i in a_s:\n        if i == 1:\n            one_nums[-1] += 1\n        elif one_nums[-1] != 0:\n            one_nums.append(0)\n    s += sum(list(map(lambda t: t // 3, one_nums)))\n    print(s)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    seq = 0\n    ans = a[0]\n    for i in range(1, n):\n        if a[i] == 1:\n            seq += 1\n        else:\n            ans += seq // 3\n            seq = 0\n    ans += seq // 3\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    bosses = list(map(int, input().split()))\n    if bosses[0] == 1:\n        cnt = 1\n    else:\n        cnt = 0\n    index = 1\n    while index + 2 < n:\n        if bosses[index] == bosses[index + 1] == bosses[index + 2] == 1:\n            cnt += 1\n            index += 3\n        else:\n            index += 1\n    print(cnt)", "def decider(arr, N):\n    output = 0\n    i = 0\n    if N > 3:\n        while i <= N - 4:\n            if arr[i + 1:i + 3] == [0, 0]:\n                if arr[i] == 1:\n                    output += 1\n                i += 2\n            else:\n                if arr[i] == 1:\n                    output += 1\n                i += 1\n                if arr[i] == 1:\n                    i += 1\n                    if arr[i] == 1:\n                        i += 1\n                else:\n                    i += 2\n                    if arr[i] == 1:\n                        i += 1\n    if i < N:\n        if arr[i] == 1:\n            output += 1\n    return output\nfor i in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    print(decider(arr, N))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    cnt = 0\n    if a[0] == 1:\n        ans += 1\n    for j in range(1, n):\n        if a[j] == 1:\n            cnt += 1\n        else:\n            cnt = 0\n        if cnt == 3:\n            ans += 1\n            cnt = 0\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    f = y = 0\n    i = 1\n    if a[0] == 1:\n        f += 1\n    while i < n:\n        if a[i] == 1:\n            if y == 0:\n                y += 1\n            elif y == 1:\n                y += 1\n            else:\n                f += 1\n                y = 0\n        else:\n            y = 0\n        i += 1\n    print(f)", "for t in range(int(input())):\n    n = int(input())\n    A = [int(i) for i in input().split()]\n    A.append(0)\n    count = 0\n    if A[0] == 1:\n        count += 1\n    o = 0\n    for i in range(1, n + 1):\n        if A[i] == 1:\n            o += 1\n        else:\n            count += o // 3\n            o = 0\n    print(count)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.append(0)\n    c = a[0]\n    b = 0\n    for i in range(1, n + 1):\n        if a[i] == 0:\n            c += b // 3\n            b = 0\n        else:\n            b += 1\n    print(c)", "entrada = int(input())\nfor i in range(entrada):\n    n_boss = int(input())\n    bosses = [int(x) for x in input().split()]\n    n_skips = bosses[0]\n    seq = 0\n    for j in range(1, n_boss):\n        if bosses[j] == 1:\n            seq += 1\n        else:\n            n_skips += seq // 3\n            seq = 0\n    n_skips += seq // 3\n    print(n_skips)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    p = 0\n    if a[0] == 1:\n        c = c + 1\n    for j in range(1, n):\n        if a[j] == 1:\n            p = p + 1\n        else:\n            c = c + p // 3\n            p = 0\n    c = c + p // 3\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ones = 0\n    ans = arr[0]\n    for i in range(1, n):\n        if arr[i] == 1:\n            ones += 1\n        else:\n            ans += ones // 3\n            ones = 0\n    ans += ones // 3\n    print(ans)", "for T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    if a[0] == 1:\n        s += 1\n    c = 0\n    for i in range(1, n):\n        if a[i] == 1:\n            c += 1\n        else:\n            s += c // 3\n            c = 0\n    s += c // 3\n    print(s)", "for item in [0] * int(input()):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.append(0)\n    c = a[0]\n    b = 0\n    for i in range(1, n + 1):\n        if a[i] == 0:\n            c = c + b // 3\n            b = 0\n        else:\n            b = b + 1\n    print(c)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    if n >= 2:\n        if arr[0] == 1 and arr[1] == 1:\n            ans += 1\n            i = 1\n        elif arr[0] == 0 and arr[1] == 1:\n            i = 1\n        else:\n            if arr[0]:\n                ans += 1\n            i = 2\n        while i < n:\n            if i + 2 < n:\n                if arr[i] == 1 and arr[i + 1] == 1 and (arr[i + 2] == 1):\n                    ans += 1\n                    i += 3\n                    continue\n                i += 1\n            else:\n                break\n    elif arr[0]:\n        ans = 1\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst1 = ''.join(map(str, lst))\n    c = lst1[1:].count('111')\n    if lst1[0] == '1':\n        print(c + 1)\n    else:\n        print(c)", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst1 = ''.join(map(str, lst))\n    c = lst1[1:].count('111')\n    if lst1[0] == '1':\n        print(c + 1)\n    else:\n        print(c)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = l[0]\n    c = 0\n    for i in range(1, n):\n        if l[i] == 1:\n            c += 1\n        else:\n            ans += c // 3\n            c = 0\n    ans += c // 3\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = 0\n    if a[0] == 1:\n        k = 1\n    i = 1\n    while i < n:\n        if a[i] == 1:\n            j = i\n            while j < n and a[j] == 1:\n                j += 1\n            k += (j - i) // 3\n            i = j\n        else:\n            i += 1\n    print(k)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = 0\n    a = list(map(int, input().split()))\n    ukazatel = 1\n    count = 0\n    pred = a[0]\n    while ukazatel < n:\n        if a[ukazatel] == 1:\n            count += 1\n        else:\n            ans += count // 3\n            count = 0\n        ukazatel += 1\n    ans += count // 3\n    if a[0] == 1:\n        ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    ans = 0\n    k = ''\n    for i in A:\n        k += str(i)\n    A = k\n    if A[0] == '1':\n        ans += 1\n    ans += A[1:].count('111')\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    A = [int(i) for i in input().split(' ')]\n    count = A[0]\n    temp = 0\n    for i in range(1, N):\n        if A[i] == 1:\n            temp += 1\n        else:\n            count += temp // 3\n            temp = 0\n    count += temp // 3\n    print(count)", "def result():\n    global n, i\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = 0\n    if arr[0] == 1:\n        count += 1\n    i = 1\n    while i < n - 1:\n        if arr[i] == 0:\n            i += 1\n            continue\n        j = i\n        while j < n and arr[j] == 1:\n            j += 1\n        count += (j - i) // 3\n        i = j\n    print(count)\nt = int(input())\nwhile t > 0:\n    result()\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = a[0]\n    if n == 1:\n        print(ans)\n        continue\n    b = []\n    c = 1\n    for i in range(2, n):\n        if a[i] == a[i - 1]:\n            c += 1\n        else:\n            b.append(c)\n            c = 1\n    b.append(c)\n    if a[1] == 0:\n        zero = True\n    else:\n        zero = False\n    for i in range(len(b)):\n        if zero == False:\n            ans += b[i] // 3\n            zero = True\n        else:\n            zero = False\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.append(0)\n    c = a[0]\n    b = 0\n    for i in range(1, n + 1):\n        if a[i] == 0:\n            c += b // 3\n            b = 0\n        else:\n            b += 1\n    print(c)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.append(0)\n    c = a[0]\n    b = 0\n    for i in range(1, n + 1):\n        if a[i] == 0:\n            c += b // 3\n            b = 0\n        else:\n            b += 1\n    print(c)", "def ans(a, n):\n    i = 0\n    skip = 0\n    j = 0\n    if a[i] == 1:\n        skip += 1\n    i += 1\n    j += 1\n    while i < n:\n        j = i\n        while j < n and a[j] == 1:\n            j += 1\n        k = j - i\n        skip += k // 3\n        if i != j:\n            i = j\n        else:\n            i += 1\n    return skip\nm = int(input())\nfor i in range(m):\n    n = int(input())\n    arr = input().split()\n    a = []\n    for i in arr:\n        a.append(int(i))\n    print(ans(a, n))", "for t in range(int(input())):\n    l = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    ans = 0\n    if a[0] == 1:\n        ans += 1\n    a.pop(0)\n    for i in range(l - 1):\n        if a[i] == 1:\n            count += 1\n        else:\n            ans += count // 3\n            count = 0\n    ans += count // 3\n    print(ans)", "for _ in range(int(input())):\n    ni = int(input())\n    arr1 = list(map(int, input().split()))\n    count1 = 0\n    if arr1[0] == 1:\n        count1 += 1\n    i = 2\n    while i < len(arr1) - 1:\n        if arr1[i - 1] == 1 and arr1[i] == 1 and (arr1[i + 1] == 1):\n            count1 += 1\n            i += 3\n        else:\n            i += 1\n    print(count1)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    count = 0\n    (x, i) = (0, 0)\n    while i < n:\n        if x == 0:\n            if i < n and l[i]:\n                count += 1\n            i += 1\n            if i < n - 1 and (not l[i]) and l[i + 1]:\n                i += 1\n            x = 1\n        else:\n            i += 1\n            if i < n and l[i]:\n                i += 1\n            x = 0\n    print(count)", "for T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    if a[0] == 1:\n        s += 1\n    c = 0\n    for i in range(1, n):\n        if a[i] == 1:\n            c += 1\n        else:\n            s += c // 3\n            c = 0\n    s += c // 3\n    print(s)", "import sys\nimport math, bisect\nsys.setrecursionlimit(10 ** 5)\nfrom collections import defaultdict\nfrom itertools import groupby, accumulate\nfrom heapq import heapify, heappop, heappush\nfrom collections import deque, Counter, OrderedDict\n\ndef I():\n    return int(sys.stdin.readline())\n\ndef neo():\n    return map(int, sys.stdin.readline().split())\n\ndef Neo():\n    return list(map(int, sys.stdin.readline().split()))\nfrom functools import lru_cache\nfor _ in range(I()):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.append(0)\n    c = a[0]\n    b = 0\n    for i in range(1, n + 1):\n        if a[i] == 0:\n            c += b // 3\n            b = 0\n        else:\n            b += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    i = 0\n    t = 0\n    ans = 0\n    while True:\n        if i == n - 1 or i == n - 2:\n            if t == 1:\n                print(ans)\n                break\n            elif arr[i] == 0:\n                print(ans)\n                break\n            else:\n                print(ans + 1)\n                break\n        if t == 0:\n            if arr[i + 1] == 1:\n                ans += arr[i]\n                i += 1\n                t = 1\n                continue\n            elif i + 2 < n:\n                if arr[i + 2] == 0:\n                    ans += arr[i]\n                    i += 1\n                    t = 1\n                    continue\n                else:\n                    ans += arr[i]\n                    i += 2\n                    t = 1\n                    continue\n            else:\n                ans += arr[i]\n                i += 2\n                t = 1\n                continue\n        if t == 1:\n            if arr[i + 1] == 1:\n                i += 2\n                t = 0\n                continue\n            if arr[i + 1] == 0:\n                i += 1\n                t = 0\n                continue", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    ans = 0\n    while i < n:\n        if a[i] == 1:\n            ans += 1\n        if i + 1 < n and a[i + 1] == 0:\n            i += 1\n        elif i + 2 < n and a[i + 2] == 1:\n            i += 3\n        else:\n            i += 2\n    print(ans)", "import sys\nimport math\nimport heapq\nfrom collections import deque\nYES = 'YES'\nNO = 'NO'\nmodulo = 10 ** 9 + 7\n\ndef solve():\n    n = int(input())\n    bs = list(map(int, input().split()))\n    res = 0 if bs[0] == 0 else 1\n    last_zero = 0\n    for i in range(1, n):\n        if bs[i] == 1:\n            continue\n        distance = i - last_zero - 1\n        res += math.floor(distance / 3)\n        last_zero = i\n    distance = n - last_zero - 1\n    res += math.floor(distance / 3)\n    return res\nfor _ in range(int(input())):\n    print(solve())", "for i in range(int(input())):\n    (_, l) = (input(), list(map(int, input().split(' '))))\n    for i in range(1, len(l)):\n        l[i] += min(l[max(0, i - 3):i])\n    print(min(l[-3:]))"]