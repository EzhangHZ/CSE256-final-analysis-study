["import sys\ninput = sys.stdin.readline\nimport heapq\nn = int(input())\nC = [tuple(map(int, input().split())) for i in range(n)]\nCA = []\nCB = []\nfor (ind, (a, b, c, d)) in enumerate(C):\n    CA.append((a, 0, ind))\n    CA.append((b, 1, ind))\n    CB.append((c, 0, ind))\n    CB.append((d, 1, ind))\nCA.sort()\nCB.sort()\nSMAX = []\nEMIN = []\nFINISHED = [0] * n\nfor (time, flag, ind) in CA:\n    if flag == 0:\n        heapq.heappush(SMAX, (-C[ind][2], ind))\n        heapq.heappush(EMIN, (C[ind][3], ind))\n        while FINISHED[SMAX[0][1]]:\n            heapq.heappop(SMAX)\n        while FINISHED[EMIN[0][1]]:\n            heapq.heappop(EMIN)\n        if -SMAX[0][0] > EMIN[0][0]:\n            print('NO')\n            sys.exit()\n    else:\n        FINISHED[ind] = 1\nSMAX = []\nEMIN = []\nFINISHED = [0] * n\nfor (time, flag, ind) in CB:\n    if flag == 0:\n        heapq.heappush(SMAX, (-C[ind][0], ind))\n        heapq.heappush(EMIN, (C[ind][1], ind))\n        while FINISHED[SMAX[0][1]]:\n            heapq.heappop(SMAX)\n        while FINISHED[EMIN[0][1]]:\n            heapq.heappop(EMIN)\n        if -SMAX[0][0] > EMIN[0][0]:\n            print('NO')\n            sys.exit()\n    else:\n        FINISHED[ind] = 1\nprint('YES')"]