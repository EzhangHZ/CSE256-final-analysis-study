["from collections import Counter\nimport sys\nsys.setrecursionlimit(10 ** 6)\nmod = 1000000007\ninf = int(1e+18)\ndx = [0, 1, 0, -1]\ndy = [1, 0, -1, 0]\n\ndef inverse(a):\n    return pow(a, mod - 2, mod)\n\ndef usearch(x, a):\n    lft = 0\n    rgt = len(a) + 1\n    while rgt - lft > 1:\n        mid = (rgt + lft) // 2\n        if a[mid] <= x:\n            lft = mid\n        else:\n            rgt = mid\n    return lft\n\ndef solve():\n    (n, m, a, b) = map(int, input().split())\n    if a * n != b * m:\n        print('NO')\n        return\n    print('YES')\n    s = []\n    for d in range(1, m + 1):\n        if d * n % m > 0:\n            continue\n        c = ['1'] * a + ['0'] * (m - a)\n        for i in range(n):\n            s.append(c)\n            c = c[d:] + c[:d]\n        break\n    for x in s:\n        print(''.join(x))\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        solve()\nmain()", "import sys\nfrom math import gcd\ninput = sys.stdin.readline\nI = lambda : list(map(int, input().split()))\nfor _ in range(int(input())):\n    (n, m, a, b) = I()\n    f = 0\n    s = ['1'] * a\n    if a * n == b * m:\n        an = [['0'] * m for i in range(n)]\n        x = 0\n        print('YES')\n        d = 0\n        for i in range(1, m):\n            if i * n % m == 0:\n                d = i\n                break\n        for i in range(n):\n            for j in range(x, x + a):\n                an[i][j % m] = '1'\n            x += d\n        if f == 0:\n            for i in an:\n                print(''.join(i))\n    else:\n        print('NO')", "n = input('')\nn = int(n)\nstr = []\nfor i in range(n):\n    entries = list(map(int, input().split()))\n    str.append(entries)\nfor i in str:\n    row = i[0]\n    column = i[1]\n    a = i[2]\n    b = i[3]\n    if row * a != column * b:\n        print('NO')\n    else:\n        print('YES')\n        dis = 0\n        col_ind = 0\n        row_ind = 0\n        final_matrix = []\n        for k in range(1, column + 1, 1):\n            if k * row % column == 0:\n                dis = k\n                break\n        for l in range(row):\n            mat = ['0'] * column\n            for j in range(a):\n                col_ind = (row_ind + j) % column\n                mat[col_ind] = '1'\n            row_ind = row_ind + dis\n            final_matrix.append(mat)\n        for i in range(row):\n            print(''.join(final_matrix[i]))"]