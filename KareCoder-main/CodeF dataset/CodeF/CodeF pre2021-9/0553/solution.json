["R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n    (p, f) = R()\n    a = R()\n    ((x, a), (y, b)) = sorted(zip(R(), a))\n    a = min(a, p // x + f // x) * x\n    print(a // x + min(b, max(((p - u) // y + (f - a + u) // y for u in range(a - min(a, f - f % x), min(a, p) + 1, x)))))", "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n    (p, f) = R()\n    a = R()\n    ((x, a), (y, b)) = sorted(zip(R(), a))\n    a = min(a, p // x + f // x) * x\n    print(a // x + min(b, max(((p - u) // y + (f - a + u) // y for u in range(a - min(a, f - f % x), min(a, p) + 1, x)))))", "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n    (p, f) = R()\n    a = R()\n    ((x, a), (y, b)) = sorted(zip(R(), a))\n    a = min(a, p // x + f // x) * x\n    print(a // x + min(b, max(((p - u) // y + (f - a + u) // y for u in range(a - min(a, f - f % x), min(a, p) + 1, x)))))", "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n    (p, f) = R()\n    a = (*R(),)\n    b = (*R(),)\n    ((x, a), (y, b)) = sorted(zip(b, a))\n    r = p // x + f // x\n    print(a + min(b, max(((p - x * u) // y + (f - x * (a - u)) // y for u in range(a - min(a, f // x), min(a, p // x) + 1)))) if r > a else r)", "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n    (p, f) = R()\n    a = (*R(),)\n    b = (*R(),)\n    ((x, a), (y, b)) = sorted(zip(b, a))\n    a = min(a, p // x + f // x)\n    print(a + min(b, max(((p - x * u) // y + (f - x * (a - u)) // y for u in range(a - min(a, f // x), min(a, p // x) + 1)))))", "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n    (p, f) = R()\n    a = R()\n    b = R()\n    ((x, a), (y, b)) = sorted(zip(b, a))\n    a = min(a, p // x + f // x) * x\n    print(a // x + min(b, max(((p - u) // y + (f - a + u) // y for u in range(a - min(a, f - f % x), min(a, p) + 1, x)))))", "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n    (p, f) = R()\n    a = R()\n    ((x, a), (y, b)) = sorted(zip(R(), a))\n    a = min(a, p // x + f // x) * x\n    print(a // x + min(b, max(((p - u) // y + (f - a + u) // y for u in range(a - min(a, f - f % x), min(a, p) + 1, x)))))", "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n    (p, f) = R()\n    a = R()\n    ((x, a), (y, b)) = sorted(zip(R(), a))\n    a = min(a, p // x + f // x) * x\n    print(a // x + min(b, max(((p - u) // y + (f - a + u) // y for u in range(a - min(a, f - f % x), min(a, p) + 1, x)))))", "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n    (p, f) = R()\n    a = (*R(),)\n    b = (*R(),)\n    ((x, a), (y, b)) = sorted(zip(b, a))\n    a = min(a, p // x + f // x) * x\n    print(a // x + min(b, max(((p - u) // y + (f - a + u) // y for u in range(a - min(a, f - f % x), min(a, p) + 1, x)))))", "def main():\n    for _ in range(Iint()):\n        (myCapacity, friendCapcity) = Ilist()\n        (countSword, countWarAxe) = Ilist()\n        (SwordWeight, WarAxeWeight) = Ilist()\n        if SwordWeight > WarAxeWeight:\n            (SwordWeight, WarAxeWeight) = (WarAxeWeight, SwordWeight)\n            (countSword, countWarAxe) = (countWarAxe, countSword)\n        TotalCount = myCapacity // SwordWeight + friendCapcity // SwordWeight\n        if TotalCount <= countSword:\n            print(TotalCount)\n            continue\n        else:\n            TotalCount = countSword\n            for i in range(0, countSword + 1):\n                (p, f) = (myCapacity, friendCapcity)\n                p -= SwordWeight * i\n                f -= (countSword - i) * SwordWeight\n                if p >= 0 and f >= 0:\n                    TotalCount = max(TotalCount, countSword + p // WarAxeWeight + f // WarAxeWeight)\n        print(min(TotalCount, countSword + countWarAxe))\n\ndef I():\n    return input()\n\ndef Iint():\n    return int(input())\n\ndef Ilist():\n    return list(map(int, input().split()))\n\ndef Imap():\n    return map(int, input().split())\n\ndef Plist(li, s=' '):\n    print(s.join(map(str, li)))\nmain()", "import sys\n\ndef rl(proc=None):\n    if proc is not None:\n        return proc(sys.stdin.readline())\n    else:\n        return sys.stdin.readline().rstrip()\n\ndef srl(proc=None):\n    if proc is not None:\n        return list(map(proc, rl().split()))\n    else:\n        return rl().split()\n\ndef solve(p, f, cs, cw, s, w):\n    if s > w:\n        (s, w) = (w, s)\n        (cs, cw) = (cw, cs)\n    can = p // s + f // s\n    if can <= cs:\n        return can\n    can1 = min(p // s, cs)\n    can2 = cs - can1\n    best = 0\n    while can1 >= 0:\n        left1 = p - can1 * s\n        left2 = f - can2 * s\n        if left2 < 0:\n            break\n        t = left1 // w + left2 // w\n        if t >= cw:\n            best = cw\n            break\n        best = max(best, t)\n        can1 -= 1\n        can2 += 1\n    return best + cs\n\ndef main():\n    T = rl(int)\n    for t in range(1, T + 1):\n        (p, f) = srl(int)\n        (cs, cw) = srl(int)\n        (s, w) = srl(int)\n        print(solve(p, f, cs, cw, s, w))\nmain()", "for _ in range(int(input())):\n    (p, f) = map(int, input().split())\n    (cnts, cntw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    if s > w:\n        (s, w) = (w, s)\n        (cntw, cnts) = (cnts, cntw)\n    kek = p // s + f // s\n    if kek <= cnts:\n        print(kek)\n    else:\n        ans = cnts\n        for sk in range(cnts + 1):\n            (p2, f2) = (p, f)\n            p2 -= sk * s\n            f2 -= (cnts - sk) * s\n            if p2 >= 0 and f2 >= 0:\n                ans = max(ans, cnts + p2 // w + f2 // w)\n        ans = min(ans, cnts + cntw)\n        print(ans)", "def maximize_items_count(p, f, cnt_s, cnt_w, s, w):\n    if s > w or (s == w and cnt_s < cnt_w):\n        (cnt_s, cnt_w) = (cnt_w, cnt_s)\n        (s, w) = (w, s)\n    max_sum = 0\n    max_cnt_s = min(cnt_s, p // s + f // s)\n    p_cnt_s = 0\n    while p_cnt_s <= max_cnt_s:\n        p_cnt_w = (p - s * p_cnt_s) // w\n        f_cnt_w = (f - s * (max_cnt_s - p_cnt_s)) // w\n        if p_cnt_w >= 0 and f_cnt_w >= 0:\n            max_sum = max(max_sum, max_cnt_s + min(cnt_w, p_cnt_w + f_cnt_w))\n        p_cnt_s += 1\n    return max_sum\nt = int(input())\nfor i in range(t):\n    (p, f) = list(map(int, input().split()))\n    (cnt_s, cnt_w) = list(map(int, input().split()))\n    (s, w) = list(map(int, input().split()))\n    print(maximize_items_count(p, f, cnt_s, cnt_w, s, w))", "for _ in range(int(input())):\n    (p, f) = map(int, input().split())\n    (cnts, cntw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    if s > w:\n        (s, w) = (w, s)\n        (cntw, cnts) = (cnts, cntw)\n    kek = p // s + f // s\n    if kek <= cnts:\n        print(kek)\n    else:\n        ans = cnts\n        for sk in range(cnts + 1):\n            (p2, f2) = (p, f)\n            p2 -= sk * s\n            f2 -= (cnts - sk) * s\n            if p2 >= 0 and f2 >= 0:\n                ans = max(ans, cnts + p2 // w + f2 // w)\n        ans = min(ans, cnts + cntw)\n        print(ans)", "import sys\n\ndef main():\n    tn = int(input())\n    for ti in range(tn):\n        (p, f) = map(int, input().split())\n        (cs, cw) = map(int, input().split())\n        (s, w) = map(int, input().split())\n        if s < w:\n            (s, w) = (w, s)\n            (cs, cw) = (cw, cs)\n        ans = 0\n        for ps in range(cs + 1):\n            if ps * s > p:\n                break\n            pw = min((p - ps * s) // w, cw)\n            fw = min(f // w, cw - pw)\n            fs = min((f - fw * w) // s, cs - ps)\n            ans = max(ans, ps + pw + fs + fw)\n        print(ans)\nmain()", "import sys\nimport math\nimport collections\nimport bisect\nimport itertools\nimport decimal\nsys.setrecursionlimit(10 ** 7)\nINF = 10 ** 20\nMOD = 10 ** 9 + 7\nni = lambda : int(sys.stdin.readline().rstrip())\nns = lambda : map(int, sys.stdin.readline().rstrip().split())\nna = lambda : list(map(int, sys.stdin.readline().rstrip().split()))\nna1 = lambda : list(map(lambda x: int(x) - 1, sys.stdin.readline().rstrip().split()))\n\ndef main():\n    t = ni()\n    for _ in range(t):\n        (p, f) = ns()\n        (cnts, cntw) = ns()\n        (s, w) = ns()\n        if s > w:\n            (cnts, cntw) = (cntw, cnts)\n            (s, w) = (w, s)\n        ans = 0\n        for i in range(min(p // s, cnts) + 1):\n            p_s = i\n            f_s = min(cnts - i, f // s)\n            ts = p - s * p_s\n            tf = f - s * f_s\n            w_amount = min(cntw, ts // w + tf // w)\n            ans = max(ans, p_s + f_s + w_amount)\n        print(ans)\nmain()", "def maxItem(p, f, cnts, cntw, s, w):\n    if s > w:\n        return maxItem(p, f, cntw, cnts, w, s)\n    if p < f:\n        return maxItem(f, p, cntw, cnts, w, s)\n    ans = 0\n    for s1 in range(min(cnts, p // s) + 1):\n        w1 = min(cntw, (p - s1 * s) // w)\n        s2 = min(cnts - s1, f // s)\n        w2 = min(cntw - w1, (f - s2 * s) // w)\n        ans = max(ans, s1 + s2 + w1 + w2)\n    return ans\nt = int(input())\nfor _ in range(t):\n    (p, f) = [*map(int, input().split())][:2]\n    (cnts, cntw) = [*map(int, input().split())][:2]\n    (s, w) = [*map(int, input().split())][:2]\n    print(maxItem(p, f, cnts, cntw, s, w))", "def func(cnts, cntw, s, w, p, f):\n    if s < w:\n        pass\n    else:\n        (cnts, cntw) = (cntw, cnts)\n        (s, w) = (w, s)\n    ans = 0\n    for s1 in range(min(cnts, p // s) + 1):\n        s2 = min(cntw, (p - s1 * s) // w)\n        w1 = min(cnts - s1, f // s)\n        w2 = min(cntw - s2, (f - w1 * s) // w)\n        ans = max(ans, s1 + s2 + w1 + w2)\n    return ans\nt = int(input())\nfor k in range(t):\n    j = [int(i) for i in input().split()]\n    p = j[0]\n    f = j[1]\n    j = [int(i) for i in input().split()]\n    cnts = j[0]\n    cntw = j[1]\n    j = [int(i) for i in input().split()]\n    s = j[0]\n    w = j[1]\n    print(func(cnts, cntw, s, w, p, f))", "import sys\nimport math\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef main():\n    (p, f) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    (cs, cw) = map(int, input().split())\n    ans = 0\n    if cs > cw:\n        (cs, cw) = (cw, cs)\n        (s, w) = (w, s)\n    for s1 in range(0, min(s, p // cs) + 1):\n        w1 = min(w, (p - cs * s1) // cw)\n        s2 = min(s - s1, f // cs)\n        w2 = min(w - w1, (f - cs * s2) // cw)\n        ans = max(ans, s1 + s2 + w1 + w2)\n    print(ans)\nt = int(input())\nfor i in range(t):\n    main()", "z = lambda : map(int, input().split())\nk = lambda *x: (min(*x), max(*x))\nfor _ in range(int(input())):\n    (p, f) = z()\n    (x, y) = z()\n    (s, w) = z()\n    (a, b) = k((s, x), (w, y))\n    (c, d) = (a[0], b[0])\n    e = p // c + f // c\n    if e <= a[1]:\n        print(e)\n    else:\n        m = 0\n        for i in range(a[1] + 1):\n            (g, h) = (p - i * c, f - (a[1] - i) * c)\n            if min(g, h) >= 0:\n                v = g // d + h // d\n                m = max(min(v, b[1]), m)\n        print(a[1] + m)", "t = int(input())\nfor _ in range(t):\n    (p, f) = map(int, input().split())\n    (cnts, cntw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    if s > w:\n        (s, w) = (w, s)\n        (cnts, cntw) = (cntw, cnts)\n    ans = 0\n    for s1 in range(0, min(p // s, cnts) + 1):\n        w1 = min(cntw, (p - s * s1) // w)\n        s2 = min(cnts - s1, f // s)\n        w2 = min(cntw - w1, (f - s * s2) // w)\n        ans = max(ans, s1 + s2 + w1 + w2)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (p, f) = map(int, input().split())\n    (cnts, cntw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    (p, f) = (max(p, f), min(p, f))\n    if w < s:\n        (cnts, s, cntw, w) = (cntw, w, cnts, s)\n    sNo = p // s + f // s\n    sNo = min(sNo, cnts)\n    best = sNo\n    for i in range(sNo + 1):\n        if p // s < i:\n            break\n        if f // s < sNo - i:\n            continue\n        remainingP = p - s * i\n        remainingF = f - (sNo - i) * s\n        additionalW = remainingP // w + remainingF // w\n        additionalW = min(additionalW, cntw)\n        best = max(best, sNo + additionalW)\n    print(best)", "def read_int():\n    return int(input().strip())\n\ndef read_ints():\n    return list(map(int, input().strip().split()))\n\ndef read_floats():\n    return list(map(float, input().strip().split()))\n\ndef read_str():\n    return input().strip()\n\ndef solve_t():\n    (p, f) = read_ints()\n    (cnt_s, cnt_w) = read_ints()\n    (s, w) = read_ints()\n    if s > w:\n        (s, w) = (w, s)\n        (cnt_s, cnt_w) = (cnt_w, cnt_s)\n    ans = 0\n    for ps in range(cnt_s + 1):\n        if ps * s > p:\n            break\n        pw = min(cnt_w, (p - ps * s) // w)\n        fs = min(cnt_s - ps, f // s)\n        fw = min(cnt_w - pw, (f - fs * s) // w)\n        ans = max(ans, ps + pw + fs + fw)\n    print(ans)\n\ndef solve():\n    t = read_int()\n    for _ in range(t):\n        solve_t()\nsolve()", "def solve():\n    (p, f) = map(int, input().split())\n    (cnts, cntw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    if s > w:\n        (s, w) = (w, s)\n        (cnts, cntw) = (cntw, cnts)\n    ans = 0\n    for i in range(cnts + 1):\n        if i * s > p:\n            continue\n        sword_first = i\n        sword_second = min(f // s, cnts - sword_first)\n        left_first = p - sword_first * s\n        left_second = f - sword_second * s\n        waraxe_first = min(cntw, left_first // w)\n        waraxe_second = min(left_second // w, cntw - waraxe_first)\n        ans = max(ans, sword_first + sword_second + waraxe_first + waraxe_second)\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "def get_results():\n    (cap1, cap2) = list(map(int, input().split()))\n    (n1, n2) = list(map(int, input().split()))\n    (w1, w2) = list(map(int, input().split()))\n    max_w = 0\n    if w2 < w1:\n        (n1, n2) = (n2, n1)\n        (w1, w2) = (w2, w1)\n    for your_lighter in range(0, min(n1, cap1 // w1) + 1):\n        your_heavier = min(n2, (cap1 - your_lighter * w1) // w2)\n        follower_lighter = min(n1 - your_lighter, cap2 // w1)\n        follower_heavier = min(n2 - your_heavier, (cap2 - follower_lighter * w1) // w2)\n        max_w = max(max_w, your_lighter + your_heavier + follower_lighter + follower_heavier)\n    return max_w\n\ndef main():\n    t = int(input())\n    res = []\n    for i in range(t):\n        print(get_results())\nmain()", "num = int(input())\noutput = []\nfor i in range(num):\n    (p, f) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    max_num = 0\n    r_all = (n, p // s, m, p // w)\n    r_min = r_all.index(min(r_all))\n    t = 1 if r_min < 2 else 0\n    for i in range(r_all[r_min] + 1):\n        if t:\n            j = min((p - i * s) // w, m)\n            nums = [i, j]\n        else:\n            j = min((p - i * w) // s, n)\n            nums = [j, i]\n        if s < w:\n            if (n - nums[0]) * s > f:\n                nums.extend([f // s, 0])\n            else:\n                nums.extend([n - nums[0], min((f - (n - nums[0]) * s) // w, m - nums[1])])\n        elif (m - nums[1]) * w > f:\n            nums.extend([f // w, 0])\n        else:\n            nums.extend([m - nums[1], min((f - (m - nums[1]) * w) // s, n - nums[0])])\n        if sum(nums) > max_num:\n            max_num = sum(nums)\n    output.append(max_num)\nfor i in output:\n    print(i)", "t = int(input())\nfor _ in range(t):\n    (p, f) = map(int, input().split())\n    (cs, cw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n\n    def can_take(s, w, cs, cw):\n        if s > w:\n            return can_take(w, s, cw, cs)\n        if s * cs >= f:\n            return f // s\n        return cs + min((f - s * cs) // w, cw)\n    ans = 0\n    for i in range(cs + 1):\n        w_of_s = i * s\n        if w_of_s <= p:\n            tw = min((p - w_of_s) // w, cw)\n            ans = max(ans, i + tw + can_take(s, w, cs - i, cw - tw))\n    print(ans)", "import sys\n\ndef minp():\n    return sys.stdin.readline().strip()\n\ndef mint():\n    return int(minp())\n\ndef mints():\n    return map(int, minp().split())\n\ndef check(s, n, v):\n    for i in range(n):\n        if s[i:i + n].count(v) == 0:\n            return False\n    return True\n\ndef solve():\n    (p, f) = mints()\n    (cs, cw) = mints()\n    (s, w) = mints()\n    best = 0\n    for i in range(cs + 1):\n        if i * s > p:\n            break\n        h = p - i * s\n        j = min(h // w, cw)\n        hs = cs - i\n        hw = cw - j\n        if s < w:\n            a = min(f // s, hs)\n            b = min((f - a * s) // w, hw)\n        else:\n            a = min(f // w, hw)\n            b = min((f - a * w) // s, hs)\n        best = max(best, i + j + a + b)\n    print(best)\nfor i in range(mint()):\n    solve()", "def solve():\n    (p, f) = map(int, input().split())\n    (nums, numw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    if s > w:\n        (s, w) = (w, s)\n        (nums, numw) = (numw, nums)\n    ans = -1\n    for i in range(nums + 1):\n        if i * s <= p:\n            pp = p - i * s\n            j = min(f // s, nums - i)\n            ff = f - j * s\n            k = min(pp // w, numw)\n            l = min(ff // w, numw - k)\n            ans = max(ans, i + j + k + l)\n    print(ans)\nT = int(input())\nfor case in range(T):\n    solve()", "def main():\n    (myCapacity, folCapacity) = map(int, input().strip().split())\n    (swords, axes) = map(int, input().strip().split())\n    (swordWeight, axeWeight) = map(int, input().strip().split())\n    if swordWeight > axeWeight:\n        (swordWeight, axeWeight) = (axeWeight, swordWeight)\n        (swords, axes) = (axes, swords)\n    maxWeapons = 0\n    for takenSword in range(swords + 1):\n        if takenSword * swordWeight > myCapacity:\n            continue\n        folTakenSword = min(swords - takenSword, folCapacity // swordWeight)\n        leftMyCapacity = myCapacity - swordWeight * takenSword\n        leftFolCapacity = folCapacity - swordWeight * folTakenSword\n        takenAxe = min(leftMyCapacity // axeWeight, axes)\n        folTakenAxe = min(leftFolCapacity // axeWeight, axes - takenAxe)\n        maxWeapons = max(maxWeapons, takenSword + folTakenSword + takenAxe + folTakenAxe)\n    print(maxWeapons)\nfor _ in range(int(input())):\n    main()", "t = int(input())\nfor qwe in range(t):\n    (p, f1) = map(int, input().split())\n    (cs, cw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    ansold = 0\n    if s > w:\n        (s, w) = (w, s)\n        (cs, cw) = (cw, cs)\n    pc = p\n    f1c = f1\n    csc = cs\n    cwc = cw\n    sc = s\n    wc = w\n    for i in range(min(cs, p // s), -1, -1):\n        myw = min((p - i * s) // w, cw)\n        yous = min(cs - i, f1 // s)\n        youw = min(cw - myw, (f1 - yous * s) // w)\n        ans = i + myw + yous + youw\n        if ans > ansold:\n            ansold = ans\n    print(ansold)", "for _ in range(int(input())):\n    (p, f) = input().split(' ')\n    p = int(p)\n    f = int(f)\n    (cnts, cntw) = input().split(' ')\n    cnts = int(cnts)\n    cntw = int(cntw)\n    (s, w) = input().split(' ')\n    s = int(s)\n    w = int(w)\n    if s > w:\n        (s, w) = (w, s)\n        (cnts, cntw) = (cntw, cnts)\n    ans = 0\n    for i in range(min(cnts, p // s) + 1):\n        w1 = min(cntw, (p - i * s) // w)\n        s2 = min(cnts - i, f // s)\n        w2 = min(cntw - w1, (f - s2 * s) // w)\n        cur = i + w1 + s2 + w2\n        ans = max(ans, cur)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (p, f) = map(int, input().rstrip().split())\n    (c_s, c_w) = map(int, input().rstrip().split())\n    (s, w) = map(int, input().rstrip().split())\n    if s > w:\n        t = s\n        s = w\n        w = t\n        temp = c_s\n        c_s = c_w\n        c_w = temp\n    res = 0\n    for s1 in range(0, min(c_s, p // s) + 1):\n        w1 = min(c_w, (p - s1 * s) // w)\n        s2 = min(c_s - s1, f // s)\n        w2 = min(c_w - w1, (f - s2 * s) // w)\n        res = max(res, s1 + s2 + w1 + w2)\n    print(res)", "def forf(cap, cs, cw, s, w):\n    if s > w:\n        return forf(cap, cw, cs, w, s)\n    elif cs * s >= cap:\n        return cap // s\n    else:\n        return cs + min(cw, (cap - cs * s) // w)\nfor t in range(int(input())):\n    (p, f) = list(map(int, input().split()))\n    (cs, cw) = list(map(int, input().split()))\n    (s, w) = list(map(int, input().split()))\n    ans = 0\n    for cnt_s in range(cs + 1):\n        if cnt_s * s <= p:\n            cnt_w = min(cw, (p - cnt_s * s) // w)\n            ans = max(ans, cnt_s + cnt_w + forf(f, cs - cnt_s, cw - cnt_w, s, w))\n    print(ans)", "for _ in range(int(input())):\n    (p, f) = map(int, input().split())\n    (scnt, wcnt) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    ans = 0\n    if s > w:\n        (s, w) = (w, s)\n        (scnt, wcnt) = (wcnt, scnt)\n    for i in range(scnt + 1):\n        if i * s > p:\n            break\n        j = (p - i * s) // w\n        k = min(scnt - i, f // s)\n        l = min(wcnt - j, (f - k * s) // w)\n        ans = max(ans, i + j + k + l)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (p, f) = [int(s) for s in input().split(' ')]\n    (cnt_s, cnt_w) = [int(s) for s in input().split(' ')]\n    (s, w) = [int(s) for s in input().split(' ')]\n    if s > w:\n        (s, w) = (w, s)\n        (cnt_s, cnt_w) = (cnt_w, cnt_s)\n    ans = 0\n    for s1 in range(min(p // s, cnt_s) + 1):\n        w1 = min(cnt_w, (p - s1 * s) // w)\n        s2 = min(cnt_s - s1, f // s)\n        w2 = min(cnt_w - w1, (f - s2 * s) // w)\n        ans = max(ans, s1 + w1 + s2 + w2)\n    print(ans)", "for _ in range(int(input())):\n    (p, f) = map(int, input().split())\n    (cs, cw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    res = 0\n    if (s * cs + cw * w <= p) | (s * cs + cw * w <= f):\n        print(cs + cw)\n        continue\n    if s > w:\n        (s, w) = (w, s)\n        (cs, cw) = (cw, cs)\n    for i in range(cs + 1):\n        if i * s > p:\n            break\n        count_p_w = (p - i * s) // w\n        count_f_s = min(cs - i, f // s)\n        count_f_w = min((f - count_f_s * s) // w, cw - count_p_w)\n        res = max(res, i + count_p_w + count_f_s + count_f_w)\n    print(res)", "import sys\nsys.setrecursionlimit(10 ** 5)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\nfor _ in range(II()):\n    (p, f) = MI()\n    (cs, cw) = MI()\n    (s, w) = MI()\n    if s > w:\n        (s, w) = (w, s)\n        (cs, cw) = (cw, cs)\n    ans = 0\n    for i in range(cs + 1):\n        if i * s > p:\n            break\n        pw = (p - i * s) // w\n        fs = min(cs - i, f // s)\n        fw = min((f - fs * s) // w, cw - pw)\n        cur = i + pw + fs + fw\n        ans = max(ans, cur)\n    print(ans)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (p, f) = [int(i) for i in input().split()]\n    (c1, c2) = [int(i) for i in input().split()]\n    (w1, w2) = [int(i) for i in input().split()]\n    if w1 > w2:\n        (c1, c2) = (c2, c1)\n        (w1, w2) = (w2, w1)\n    if p > f:\n        (p, f) = (f, p)\n    res = 0\n    for i in range(0, min(c1, p // w1) + 1):\n        rem_p = p - i * w1\n        p_c2 = min(rem_p // w2, c2)\n        j = min(f // w1, c1 - i)\n        rem_f = f - j * w1\n        f_c2 = min(rem_f // w2, c2 - p_c2)\n        res = max(res, i + p_c2 + j + f_c2)\n    print(res)", "t = int(input())\nwhile t:\n    t -= 1\n    (p, f) = map(int, input().split())\n    (cnts, cntw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    if s > w:\n        (s, w) = (w, s)\n        (cnts, cntw) = (cntw, cnts)\n    temp = min(cnts, p // s)\n    ans = 0\n    for i in range(temp + 1):\n        s1 = i\n        w1 = min((p - s * i) // w, cntw)\n        s2 = min(cnts - s1, f // s)\n        w2 = min((f - s2 * s) // w, cntw - w1)\n        ans = max(ans, s1 + s2 + w1 + w2)\n    print(ans)", "t = lambda : range(int(input()))\na = lambda : list(map(int, input().split()))\nfor _ in t():\n    (p, f) = a()\n    (cs, cw) = a()\n    (s, w) = a()\n    if s > w:\n        t = w\n        ts = cw\n        w = s\n        cw = cs\n        s = t\n        cs = ts\n    ans = 0\n    for a0 in range(0, min(cs, p // s) + 1):\n        b0 = min(cw, (p - a0 * s) // w)\n        a1 = min(cs - a0, f // s)\n        b1 = min(cw - b0, (f - a1 * s) // w)\n        ans = max(ans, a0 + a1 + b0 + b1)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (p, f) = list(map(int, input().split(' ')))\n    (cnts, cntw) = list(map(int, input().split(' ')))\n    (s, w) = list(map(int, input().split(' ')))\n    if s > w:\n        (s, w) = (w, s)\n        (cnts, cntw) = (cntw, cnts)\n    most_can_take = min(cnts, p // s)\n    ret = 0\n    for i in range(most_can_take + 1):\n        i_take_w = min(cntw, (p - i * s) // w)\n        s_left = cnts - i\n        w_left = cntw - i_take_w\n        f_take_s = min(s_left, f // s)\n        f_take_w = min(w_left, (f - f_take_s * s) // w)\n        ret = max(ret, i + i_take_w + f_take_s + f_take_w)\n    print(ret)", "for _ in range(int(input())):\n    (p, f) = map(int, input().split())\n    (sn, an) = map(int, input().split())\n    (s, a) = map(int, input().split())\n    if a < s:\n        (s, a) = (a, s)\n        (sn, an) = (an, sn)\n    i = 0\n    ans = 0\n    while i <= sn and i * s <= p:\n        x = sn - i\n        y = an\n        t = p - i * s\n        temp_ans = i\n        if y * a < t:\n            temp_ans += y\n            y = 0\n        else:\n            xx = t // a\n            temp_ans += xx\n            y -= xx\n        t = f\n        if x * s < t:\n            t -= x * s\n            temp_ans += x\n            x = 0\n            if y * a < t:\n                temp_ans += y\n                t -= y * a\n                y = 0\n            else:\n                xx = t // a\n                temp_ans += xx\n            ans = max(ans, temp_ans)\n        else:\n            xx = t // s\n            temp_ans += xx\n            ans = max(ans, temp_ans)\n        i += 1\n    print(ans)", "n = int(input())\nfor i in range(n):\n    (play1, play2) = map(int, input().split())\n    (count1, count2) = map(int, input().split())\n    (x, y) = map(int, input().split())\n    l = 0\n    (x1, y1, x2, y2) = (0, 0, 0, 0)\n    ans = 0\n    if x > y:\n        (x, y) = (y, x)\n        (count1, count2) = (count2, count1)\n    n1 = play1 // x\n    for i in range(min(n1, count1), -1, -1):\n        left = play1 - i * x\n        y1 = min(left // y, count2)\n        s = i + y1\n        x2 = min(play2 // x, count1 - i)\n        y2 = min((play2 - x2 * x) // y, count2 - y1)\n        s += x2 + y2\n        ans = max(ans, s)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (p, f) = map(int, input().split())\n    (sc, wc) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    ans = 0\n    if s > w:\n        (s, w) = (w, s)\n        (sc, wc) = (wc, sc)\n    for i in range(min(sc, p // s) + 1):\n        wp = min(wc, (p - i * s) // w)\n        sf = min(sc - i, f // s)\n        wf = min(wc - wp, (f - sf * s) // w)\n        ans = max(ans, i + wp + sf + wf)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (p, f) = map(int, input().split())\n    (cnts, cntw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    if s > w:\n        (s, w) = (w, s)\n        (cnts, cntw) = (cntw, cnts)\n    ans = 0\n    for x1 in range(cnts + 1):\n        if x1 * s > p:\n            break\n        y1 = min(cntw, (p - s * x1) // w)\n        x2 = min(cnts - x1, f // s)\n        y2 = min(cntw - y1, (f - s * x2) // w)\n        ans = max(ans, x1 + x2 + y1 + y2)\n    print(ans)", "from sys import stdin\nip = stdin.readline\nfor _ in range(int(ip())):\n    (p, f) = map(int, ip().split())\n    (cnts, cntw) = map(int, ip().split())\n    (s, w) = map(int, ip().split())\n    if s > w:\n        (s, w) = (w, s)\n        (cnts, cntw) = (cntw, cnts)\n    ans = 0\n    for sp in range(min(cnts, p // s) + 1):\n        wp = min(cntw, (p - sp * s) // w)\n        sf = min(cnts - sp, f // s)\n        wf = min(cntw - wp, (f - sf * s) // w)\n        ans = max(sp + wp + sf + wf, ans)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (p, f) = list(map(int, input().split()))\n    (ts, tw) = list(map(int, input().split()))\n    (s, w) = list(map(int, input().split()))\n    if s > w:\n        (w, s) = (s, w)\n        (tw, ts) = (ts, tw)\n    ans = 0\n    for i in range(min(p // s, ts) + 1):\n        a = i\n        b = min((p - i * s) // w, tw)\n        c = min(f // s, ts - i)\n        d = min((f - c * s) // w, tw - b)\n        ans = max(a + b + c + d, ans)\n    print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    (p, f) = map(int, input().split())\n    (cs, cw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    ans = 0\n    if s < w:\n        for s1 in range(min(p // s, cs) + 1):\n            w1 = min((p - s1 * s) // w, cw)\n            s2 = min(f // s, cs - s1)\n            w2 = min((f - s2 * s) // w, cw - w1)\n            ans = max(ans, s1 + s2 + w1 + w2)\n    else:\n        for w1 in range(min(p // w, cw) + 1):\n            s1 = min((p - w1 * w) // s, cs)\n            w2 = min(f // w, cw - w1)\n            s2 = min((f - w2 * w) // s, cs - s1)\n            ans = max(ans, s1 + s2 + w1 + w2)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (p, f) = list(map(int, input().split(' ')))\n    (cnts, cntw) = list(map(int, input().split(' ')))\n    (s, w) = list(map(int, input().split(' ')))\n    if s > w:\n        (s, w) = (w, s)\n        (cnts, cntw) = (cntw, cnts)\n    most_can_take = min(cnts, p // s)\n    ret = 0\n    for i in range(most_can_take + 1):\n        i_take_w = min(cntw, (p - i * s) // w)\n        s_left = cnts - i\n        w_left = cntw - i_take_w\n        f_take_s = min(s_left, f // s)\n        f_take_w = min(w_left, (f - f_take_s * s) // w)\n        ret = max(ret, i + i_take_w + f_take_s + f_take_w)\n    print(ret)", "for _ in range(int(input())):\n    (p, f) = map(int, input().split())\n    (cs, cw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    res = 0\n    if s > w:\n        (s, w) = (w, s)\n        (cs, cw) = (cw, cs)\n    for i in range(cs + 1):\n        if i * s > p:\n            break\n        count_p_w = (p - i * s) // w\n        count_f_s = min(cs - i, f // s)\n        count_f_w = min((f - count_f_s * s) // w, cw - count_p_w)\n        res = max(res, i + count_p_w + count_f_s + count_f_w)\n    print(res)", "t = int(input(''))\nfor _ in range(t):\n    [p, f] = list(map(int, input().split()))\n    [cnts, cntw] = list(map(int, input().split()))\n    [s, w] = list(map(int, input().split()))\n    ans = 0\n    if s > w:\n        temp = s\n        s = w\n        w = temp\n        temp1 = cnts\n        cnts = cntw\n        cntw = temp1\n    for i in range(min(cnts, p // s) + 1):\n        w1 = min(cntw, (p - s * i) // w)\n        s2 = min(cnts - i, f // s)\n        w2 = min(cntw - w1, (f - s * s2) // w)\n        ans = max(ans, i + w1 + s2 + w2)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (p, f) = map(int, input().split())\n    (cnts, cntw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    if s > w:\n        (s, w) = (w, s)\n        (cnts, cntw) = (cntw, cnts)\n    ans = 0\n    for s1 in range(min(cnts, p // s) + 1):\n        w1 = min(cntw, (p - s * s1) // w)\n        s2 = min(cnts - s1, f // s)\n        w2 = min(cntw - w1, (f - s * s2) // w)\n        ans = max(ans, s1 + s2 + w1 + w2)\n    print(ans)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (p, f) = map(int, input().split())\n    (cs, cw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    if s > w:\n        (s, w) = (w, s)\n        (cs, cw) = (cw, cs)\n    best = 0\n    for i in range(cs + 1):\n        if i * s <= p:\n            axes = min(cw, (p - i * s) // w)\n            rest_sw = min(cs - i, f // s)\n            rest_axes = min(cw - axes, (f - rest_sw * s) // w)\n            tot = i + axes + rest_sw + rest_axes\n            best = max(best, tot)\n    print(best)", "tn = int(input())\nfor ti in range(tn):\n    (p, f) = map(int, input().split())\n    (cs, cw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    if s < w:\n        (s, w) = (w, s)\n        (cs, cw) = (cw, cs)\n    ans = 0\n    for ps in range(cs + 1):\n        if ps * s > p:\n            break\n        pw = min((p - ps * s) // w, cw)\n        fw = min(f // w, cw - pw)\n        fs = min((f - fw * w) // s, cs - ps)\n        ans = max(ans, ps + pw + fs + fw)\n    print(ans)", "def solution():\n    (p, f) = map(int, input().split())\n    (cnts, cntw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    if s > w:\n        (s, w) = (w, s)\n        (cnts, cntw) = (cntw, cnts)\n    mans = 0\n    for i in range(cnts + 1):\n        ans = 0\n        if p >= s * i:\n            ans += i\n            cntsnow = cnts - i\n            pnow = p - s * i\n            ans += min(cntw, pnow // w)\n            cntwnow = cntw - min(cntw, pnow // w)\n        fn = f\n        ans += min(fn // s, cntsnow)\n        fn -= min(fn // s, cntsnow) * s\n        ans += min(fn // w, cntwnow)\n        mans = max(ans, mans)\n    print(mans)\nfor i in range(int(input())):\n    solution()", "for _ in range(int(input())):\n    (p, f) = [int(i) for i in input().split()]\n    (cs, cw) = [int(i) for i in input().split()]\n    (s, w) = [int(i) for i in input().split()]\n    if s < w:\n        (s, w) = (w, s)\n        (cs, cw) = (cw, cs)\n    result = 0\n    for ps in range(cs + 1):\n        if ps * s > p:\n            break\n        pw = min((p - ps * s) // w, cw)\n        fw = min(f // w, cw - pw)\n        fs = min((f - fw * w) // s, cs - ps)\n        result = max(result, ps + pw + fs + fw)\n    print(result)", "for _ in range(int(input())):\n    (p, f) = map(int, input().split())\n    (cs, cw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    if s < w:\n        (s, w) = (w, s)\n        (cs, cw) = (cw, cs)\n    ans = 0\n    for ps in range(cs + 1):\n        if ps * s > p:\n            break\n        pw = min(cw, (p - ps * s) // w)\n        fw = min(f // w, cw - pw)\n        fs = min((f - fw * w) // s, cs - ps)\n        ans = max(ans, ps + pw + fs + fw)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (p, f) = map(int, input().split())\n    (cnt_s, cnt_w) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    if s > w:\n        (s, w) = (w, s)\n        (cnt_s, cnt_w) = (cnt_w, cnt_s)\n    max_s = min(p // s, cnt_s)\n    ans = 0\n    for x in range(max_s, -1, -1):\n        rest_p = p - s * x\n        y = min(f // s, cnt_s - x)\n        rest_f = f - s * y\n        if rest_p < rest_f:\n            (rest_p, rest_f) = (rest_f, rest_p)\n        z = min(rest_p // w, cnt_w)\n        ans = max(ans, x + y + z + min(rest_f // w, cnt_w - z))\n    print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    (p, f) = map(int, input().split())\n    (cs, cw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    ans = 0\n    if s > w:\n        (s, w) = (w, s)\n        (cs, cw) = (cw, cs)\n    for n1 in range(cs + 1):\n        if n1 * s > p:\n            break\n        n2 = min((p - s * n1) // w, cw)\n        cs1 = cs - n1\n        cw1 = cw - n2\n        (m1, m2) = (0, 0)\n        if f > s * cs1:\n            m1 = cs1\n            m2 = min((f - s * cs1) // w, cw1)\n        else:\n            m1 = f // s\n            m2 = 0\n        ans = max(ans, n1 + n2 + m1 + m2)\n    print(ans)", "for _ in range(int(input())):\n    (p, f) = map(int, input().split())\n    (cs, cw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    if s > w:\n        t = w\n        w = s\n        s = t\n        t = cw\n        cw = cs\n        cs = t\n    ans = 0\n    for i in range(0, min(p // s, cs) + 1):\n        s2 = min(f // s, cs - i)\n        s3 = min(cw, (p - i * s) // w)\n        s4 = min(cw - s3, (f - s2 * s) // w)\n        ans = max(ans, i + s2 + s3 + s4)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (p, f) = list(map(int, input().split()))\n    (cnt1, cnt2) = list(map(int, input().split()))\n    (s, w) = list(map(int, input().split()))\n    if s > w:\n        temp = s\n        s = w\n        w = temp\n        temp = cnt1\n        cnt1 = cnt2\n        cnt2 = temp\n    t1 = 0\n    for i in range(cnt1 + 1):\n        if i * s > p:\n            continue\n        else:\n            l2 = min(f // s, cnt1 - i)\n            l1 = p - i * s\n            l3 = f - l2 * s\n            m1 = min(l1 // w, cnt2)\n            m2 = min(l3 // w, cnt2 - m1)\n            t1 = max(t1, m1 + m2 + i + l2)\n    print(t1)", "def multiple_input():\n    return map(int, input().split())\n\ndef list_input():\n    return list(map(int, input().split()))\nfor _ in range(int(input())):\n    (p, f) = multiple_input()\n    (cs, cw) = multiple_input()\n    (s, w) = multiple_input()\n    if s > w:\n        (s, w) = (w, s)\n        (cs, cw) = (cw, cs)\n    (s1, s2, w1, w2) = (0, 0, 0, 0)\n    i = 0\n    end = min(cs, p // s)\n    m = 0\n    while i <= end:\n        s1 = i\n        w1 = min(cw, (p - s1 * s) // w)\n        s2 = min(cs - s1, f // s)\n        w2 = min(cw - w1, (f - s2 * s) // w)\n        m = max(m, s1 + s2 + w1 + w2)\n        i += 1\n    print(m)", "for _ in range(int(input())):\n    (p, f) = map(int, input().split())\n    (cs, cw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    if s > w:\n        (s, w) = (w, s)\n        (cs, cw) = (cw, cs)\n    ans = 0\n    for i in range(cs + 1):\n        if i <= p // s:\n            (pp, ff) = (p, f)\n            pp -= s * i\n            ok = min(f // s, cs - i)\n            ret = ok + i\n            ff -= s * ok\n            ret += min(cw, pp // w + ff // w)\n            ans = max(ans, ret)\n    print(int(ans))", "t = int(input())\nfor _ in range(t):\n    (p, f) = list(map(int, input().split(' ')))\n    (cnts, cntw) = list(map(int, input().split(' ')))\n    (s, w) = list(map(int, input().split(' ')))\n    if s > w:\n        (s, w) = (w, s)\n        (cnts, cntw) = (cntw, cnts)\n    i_take_s_most = min(cnts, p // s)\n    ret = 0\n    for i_take_s in range(i_take_s_most + 1):\n        i_take_w = min(cntw, (p - i_take_s * s) // w)\n        s_left = cnts - i_take_s\n        w_left = cntw - i_take_w\n        f_take_s = min(s_left, f // s)\n        f_take_w = min(w_left, (f - f_take_s * s) // w)\n        ret = max(ret, i_take_s + i_take_w + f_take_s + f_take_w)\n    print(ret)", "for _ in range(int(input())):\n    (p, f) = map(int, input().split())\n    (cn, cw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    if s > w:\n        (cn, cw) = (cw, cn)\n        (s, w) = (w, s)\n    if f > p:\n        (f, p) = (p, f)\n    w1 = 0\n    w2 = 0\n    s2 = 0\n    ans = 0\n    for i in range(min(cn, p // s) + 1):\n        w1 = min(cw, (p - i * s) // w)\n        s2 = min(cn - i, f // s)\n        w2 = min(cw - w1, (f - s2 * s) // w)\n        ans = max(s2 + w1 + w2 + i, ans)\n    print(ans)", "for _ in range(int(input())):\n    (p, f) = map(int, input().split())\n    (cntS, cntW) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    if w < s:\n        (s, w) = (w, s)\n        (cntS, cntW) = (cntW, cntS)\n    ans = 0\n    for s1 in range(0, min(int(p / s), cntS) + 1):\n        w1 = min(cntW, int((p - s * s1) // w))\n        s2 = min(cntS - s1, int(f // s))\n        w2 = min(cntW - w1, int((f - s * s2) // w))\n        ans = max(ans, s1 + s2 + w1 + w2)\n    print(ans)", "t = int(input())\nwhile t:\n    (p, f) = list(map(int, input().split()))\n    (cs, ca) = list(map(int, input().split()))\n    (ws, wa) = list(map(int, input().split()))\n    if ws > wa:\n        (cs, ca) = (ca, cs)\n        (ws, wa) = (wa, ws)\n    ans = 0\n    for i in range(cs + 1):\n        if i * ws > p:\n            continue\n        myLeft = p - i * ws\n        keep = min(cs - i, f // ws)\n        hisLeft = f - keep * ws\n        myAks = min(myLeft // wa, ca)\n        hisAks = min(hisLeft // wa, ca - myAks)\n        ans = max(ans, i + keep + myAks + hisAks)\n    print(ans)\n    t -= 1", "for t in range(int(input())):\n    (p, f) = map(int, input().split())\n    (no_sward, no_axe) = map(int, input().split())\n    (weight_sward, weight_axe) = map(int, input().split())\n    if weight_sward > weight_axe:\n        (weight_sward, weight_axe) = (weight_axe, weight_sward)\n        (no_sward, no_axe) = (no_axe, no_sward)\n    ans = 0\n    for s1 in range(no_sward + 1):\n        if s1 * weight_sward <= p:\n            p_left = p - s1 * weight_sward\n            temp_no_sward = no_sward - s1\n            a1 = min(no_axe, p_left // weight_axe)\n            temp_no_axe = no_axe - a1\n            s2 = min(temp_no_sward, f // weight_sward)\n            f_left = f - s2 * weight_sward\n            a2 = min(f_left // weight_axe, temp_no_axe)\n            ans = max(ans, s1 + s2 + a1 + a2)\n        else:\n            break\n    print(ans)", "scan = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (f, p) = scan()\n    (cnt_s, cnt_w) = scan()\n    (s, w) = scan()\n    ans = -1\n    (s, w, cnt_s, cnt_w) = (w, s, cnt_w, cnt_s) if s > w else (s, w, cnt_s, cnt_w)\n    for i in range(cnt_s + 1):\n        if i * s > p:\n            break\n        swp = i\n        swf = min(cnt_s - swp, f // s)\n        axwp = min(cnt_w, (p - swp * s) // w)\n        axwf = min(cnt_w - axwp, (f - s * swf) // w)\n        ans = max(ans, swp + swf + axwp + axwf)\n    print(ans)", "for t in range(int(input())):\n    (p, f) = map(int, input().split())\n    (cnts, cntw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    if s > w:\n        (s, w) = (w, s)\n        (cnts, cntw) = (cntw, cnts)\n    ans = 0\n    for s1 in range(min(cnts, p // s) + 1):\n        w1 = min(cntw, (p - s1 * s) // w)\n        s2 = min(cnts - s1, f // s)\n        w2 = min(cntw - w1, (f - s2 * s) // w)\n        ans = max(ans, s1 + s2 + w1 + w2)\n    print(ans)", "t = int(input())\nwhile t != 0:\n    t -= 1\n    (p, f) = map(int, input().split())\n    (cnts, cntw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    if s > w:\n        (s, w) = (w, s)\n        (cnts, cntw) = (cntw, cnts)\n    res = 0\n    for s1 in range(0, min(cnts, int(p / s)) + 1):\n        w1 = min(cntw, int((p - s1 * s) / w))\n        s2 = min(cnts - s1, int(f / s))\n        w2 = min(cntw - w1, int((f - s2 * s) / w))\n        res = max(res, s1 + s2 + w1 + w2)\n    print(res)", "t = int(input())\nfor _ in range(t):\n    (p, f) = map(int, input().split())\n    (ns, nw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    if s > w:\n        (s, w) = (w, s)\n        (ns, nw) = (nw, ns)\n    if p > f:\n        (p, f) = (f, p)\n    best = 0\n    for i in range(min(ns, p // s) + 1):\n        cur1s = i\n        cur1w = min(nw, (p - cur1s * s) // w)\n        cur2s = min(f // s, ns - i)\n        cur2w = min(nw - cur1w, (f - min(f // s, ns - i) * s) // w)\n        cur = cur1s + cur2s + cur1w + cur2w\n        if cur > best:\n            best = cur\n    print(best)", "t = int(input())\nwhile t:\n    t += -1\n    (p, f) = map(int, input().split())\n    (cnts, cntw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    if s > w:\n        (s, w) = (w, s)\n        (cnts, cntw) = (cntw, cnts)\n    ans = 0\n    for i in range(cnts + 1):\n        if i * s > p:\n            break\n        t1 = p - i * s\n        t2 = min(t1 // w, cntw)\n        t3 = cnts - i\n        t4 = cntw - t2\n        t5 = min(f // s, t3)\n        t6 = f - t5 * s\n        t7 = min(t6 // w, t4)\n        ans = max(ans, i + t2 + t5 + t7)\n    print(ans)", "for _ in range(int(input())):\n    (p, f) = [int(i) for i in input().split()]\n    (cnts, cntw) = [int(i) for i in input().split()]\n    (s, w) = [int(i) for i in input().split()]\n    if s > w:\n        (s, w) = (w, s)\n        (cnts, cntw) = (cntw, cnts)\n    s1 = 0\n    w1 = min(cntw, (p - s1 * s) // w)\n    s2 = min(cnts - s1, f // s)\n    w2 = min(cntw - w1, (f - s2 * s) // w)\n    count = s1 + s2 + w1 + w2\n    for s1 in range(1, min(cnts, p // s) + 1):\n        w1 = min(cntw, (p - s1 * s) // w)\n        s2 = min(cnts - s1, f // s)\n        w2 = min(cntw - w1, (f - s2 * s) // w)\n        count = max(count, s1 + s2 + w1 + w2)\n    print(count)", "def solve():\n    (p, f) = map(int, input().split())\n    (cnts, cntw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    if s > w:\n        (s, w) = (w, s)\n        (cnts, cntw) = (cntw, cnts)\n    mans = 0\n    for i in range(cnts + 1):\n        ans = 0\n        if p >= s * i:\n            ans += i\n            cntsnow = cnts - i\n            pnow = p - s * i\n            ans += min(cntw, pnow // w)\n            cntwnow = cntw - min(cntw, pnow // w)\n        fn = f\n        ans += min(fn // s, cntsnow)\n        fn -= min(fn // s, cntsnow) * s\n        ans += min(fn // w, cntwnow)\n        mans = max(ans, mans)\n    print(mans)\nfor i in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (c1, c2) = map(int, input().split())\n    (w1, w2) = map(int, input().split())\n    (tw1, tw2) = map(int, input().split())\n    if tw2 < tw1:\n        (tw1, tw2) = (tw2, tw1)\n        (w1, w2) = (w2, w1)\n    ans1 = 0\n    for i in range(0, w1 + 1):\n        if tw1 * i > c1:\n            continue\n        ans = 0\n        oKeep = min(w1 - i, c2 // tw1)\n        myLeft = c1 - i * tw1\n        hisLeft = c2 - oKeep * tw1\n        Myaxe = min(w2, myLeft // tw2)\n        hisAxe = min(w2 - Myaxe, hisLeft // tw2)\n        ans = i + Myaxe + hisAxe + oKeep\n        ans1 = max(ans1, ans)\n    print(ans1)", "t = int(input())\nwhile t:\n    (p, f) = list(map(int, input().split()))\n    (cs, ca) = list(map(int, input().split()))\n    (ws, wa) = list(map(int, input().split()))\n    if ws > wa:\n        (cs, ca) = (ca, cs)\n        (ws, wa) = (wa, ws)\n    ans = 0\n    for i in range(cs + 1):\n        if i * ws <= p:\n            myLeft = p - i * ws\n            keep = min(cs - i, f // ws)\n            hisLeft = f - keep * ws\n            myAks = min(myLeft // wa, ca)\n            hisAks = min(hisLeft // wa, ca - myAks)\n            ans = max(ans, i + keep + myAks + hisAks)\n        else:\n            break\n    print(ans)\n    t -= 1", "t = int(input())\nfor tt in range(t):\n    ss = input().split(' ')\n    p = int(ss[0])\n    f = int(ss[1])\n    if p > f:\n        (p, f) = (f, p)\n    ss = input().split(' ')\n    cs = int(ss[0])\n    cw = int(ss[1])\n    ss = input().split(' ')\n    s = int(ss[0])\n    w = int(ss[1])\n    if s > w:\n        (s, w) = (w, s)\n        (cs, cw) = (cw, cs)\n    ans = int(0)\n    if s != w:\n        for i in range(cs + 1):\n            rs = cs - i\n            l1 = p - i * s\n            if l1 < 0:\n                break\n            r1 = min(int(l1 / w), cw)\n            rw = cw - r1\n            r2 = min(int(f / s), rs)\n            l2 = f - r2 * s\n            r3 = min(int(l2 / w), rw)\n            ans = max(ans, r1 + r2 + r3 + i)\n    else:\n        ans = min(int(p / s) + int(f / s), cs + cw)\n    print(ans)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (p, f) = map(int, input().split())\n    (cnts, cntw) = map(int, input().split())\n    (s, w) = map(int, input().split())\n    if s > w:\n        (s, w) = (w, s)\n        (cnts, cntw) = (cntw, cnts)\n    ans = 0\n    for s1 in range(cnts + 1):\n        if s1 * s > p:\n            break\n        w1 = min(cntw, (p - s * s1) // w)\n        s2 = min(cnts - s1, f // s)\n        w2 = min(cntw - w1, (f - s * s2) // w)\n        ans = max(ans, s1 + s2 + w1 + w2)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (p, f) = map(int, input().split())\n    cnt = list(map(int, input().split()))\n    weights = list(map(int, input().split()))\n    if weights[0] > weights[1]:\n        low = 1\n    else:\n        low = 0\n    ass = 0\n    if f > p:\n        (p, f) = (f, p)\n    for i in range(min(cnt[low], p // weights[low]) + 1):\n        lol = min(cnt[low - 1], (p - i * weights[low]) // weights[low - 1])\n        lols = min(cnt[low] - i, f // weights[low])\n        lolw = min(cnt[low - 1] - lol, (f - lols * weights[low]) // weights[low - 1])\n        ass = max(ass, i + lol + lols + lolw)\n    print(ass)", "from sys import stdin, stdout\nfrom collections import Counter\nfrom itertools import permutations\nimport bisect\nimport math\nI = lambda : map(int, stdin.readline().split())\nI1 = lambda : stdin.readline()\nfor _ in range(int(I1())):\n    (p, f) = I()\n    (cs, cw) = I()\n    (s, w) = I()\n    if s > w:\n        (s, w) = (w, s)\n        (cs, cw) = (cw, cs)\n    ans = 0\n    i = 0\n    while i <= cs:\n        if i * s > p:\n            break\n        p1 = i\n        p2 = min((p - p1 * s) // w, cw)\n        f1 = min(cs - i, f // s)\n        f2 = min((f - f1 * s) // w, cw - p2)\n        ans = max(ans, p1 + p2 + f1 + f2)\n        i += 1\n    print(ans)", "t = int(input())\ni = 0\nwhile i < t:\n    pf = list(map(int, input().split()))\n    Q = list(map(int, input().split()))\n    sw = list(map(int, input().split()))\n    p = pf[0]\n    f = pf[1]\n    if sw[0] <= sw[1]:\n        Qs = Q[0]\n        Qw = Q[1]\n    else:\n        Qs = Q[1]\n        Qw = Q[0]\n    s = min(sw)\n    w = max(sw)\n    answer = 0\n    j = 0\n    while j <= min(Qs, p // s):\n        s1 = j\n        w1 = min(Qw, (p - s1 * s) // w)\n        s2 = min(Qs - s1, f // s)\n        w2 = min(Qw - w1, (f - s2 * s) // w)\n        answer = max(answer, s1 + s2 + w1 + w2)\n        j += 1\n    print(answer)\n    i += 1", "import sys\nimport collections as cc\ninput = sys.stdin.readline\nI = lambda : list(map(int, input().split()))\ntt = int(input())\nfor tc in range(tt):\n    (p, f) = sorted(I())\n    (p, f) = (f, p)\n    (cs, cw) = I()\n    (s, w) = I()\n    if s > w:\n        (s, w) = (w, s)\n        (cs, cw) = (cw, cs)\n    ans = 0\n    for i in range(cs + 1):\n        now = i * s\n        nan = i\n        if now > p:\n            break\n        (dp, df) = (p, f)\n        dp -= now\n        (aa, bb) = (cs - i, cw)\n        temp = min(dp // w, bb)\n        nan += temp\n        bb -= temp\n        tem = min(aa, f // s)\n        nan += tem\n        df -= tem * s\n        te = min(df // w, bb)\n        nan += te\n        ans = max(ans, nan)\n    print(ans)", "for _ in range(int(input())):\n    (inip, inif) = [int(i) for i in input().split()]\n    (cnts, cntw) = [int(i) for i in input().split()]\n    (s, w) = [int(i) for i in input().split()]\n    if s > w:\n        (s, w) = (w, s)\n        (cnts, cntw) = (cntw, cnts)\n    if inif > inip:\n        (inif, inip) = (inip, inif)\n    ini = cnts + cntw\n    inis = cnts\n    iniw = cntw\n    ans = 0\n    for i in range(cnts + 1):\n        p = inip\n        f = inif\n        cnts = inis\n        cntw = iniw\n        if p >= i * s:\n            p -= i * s\n            cnts -= i\n        else:\n            break\n        if p > cntw * w:\n            cp = cntw * w\n            cntw = 0\n        else:\n            cp = p // w * w\n            cntw -= p // w\n        if f > cnts * s:\n            cf = cnts * s\n            cnts = 0\n        else:\n            cf = f // s * s\n            cnts -= f // s\n        f -= cf\n        if f > cntw * w:\n            cf = cntw * w\n            cntw = 0\n        else:\n            cf = f // w * w\n            cntw -= f // w\n        f -= cf\n        ans = max(ans, ini - cnts - cntw)\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    (p, f) = tuple(map(int, input().split()))\n    (cnts, cntw) = tuple(map(int, input().split()))\n    (s, w) = tuple(map(int, input().split()))\n    if s > w:\n        (s, w) = (w, s)\n        (cnts, cntw) = (cntw, cnts)\n    ans = 0\n    for i in range(cnts + 1):\n        if i * s > p:\n            continue\n        sf = i\n        ss = min(int(f / s), cnts - i)\n        left_f = p - sf * s\n        left_s = f - ss * s\n        wf = min(cntw, int(left_f / w))\n        ws = min(int(left_s / w), cntw - wf)\n        ans = max(ans, sf + ss + wf + ws)\n    print(ans)", "def byServant(f, s, sw, a, aw):\n    ans = 0\n    sICan = f // sw\n    sICan = min(s, sICan)\n    ans += sICan\n    f -= sICan * sw\n    aICan = f // aw\n    aICan = min(aICan, a)\n    ans += aICan\n    return ans\nt = int(input())\nwhile t:\n    t -= 1\n    (p, f) = input().split()\n    (p, f) = (int(p), int(f))\n    (s, a) = input().split()\n    (s, a) = (int(s), int(a))\n    (sw, aw) = input().split()\n    (sw, aw) = (int(sw), int(aw))\n    items = [[sw, s], [aw, a]]\n    items.sort()\n    ans = 0\n    sICan = p // items[0][0]\n    sICan = min(items[0][1], sICan)\n    for slifted in range(0, sICan + 1):\n        temp_ans = slifted\n        cap = p - slifted * items[0][0]\n        aICan = cap // items[1][0]\n        aICan = min(aICan, items[1][1])\n        temp_ans += aICan\n        temp_ans += byServant(f, items[0][1] - slifted, items[0][0], items[1][1] - aICan, items[1][0])\n        ans = max(ans, temp_ans)\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    (cs, cw) = map(int, input().split())\n    (ps, pw) = map(int, input().split())\n    if pw > ps:\n        (ps, pw) = (pw, ps)\n        (cs, cw) = (cw, cs)\n    ans = 0\n    mx = 0\n    for i in range(cs + 1):\n        if i * ps > n:\n            break\n        a = i + min(cw, (n - i * ps) // pw)\n        ncs = cs - i\n        ncw = cw - min(cw, (n - i * ps) // pw)\n        a += min(ncw, k // pw)\n        a += min(ncs, (k - min(ncw, k // pw) * pw) // ps)\n        ans = max(a, ans)\n    print(ans)", "import sys, math\ninput = sys.stdin.readline\nt = int(input())\nfor r in range(t):\n    (ptemp, ftemp) = map(int, input().split())\n    (cstemp, cwtemp) = map(int, input().split())\n    (stemp, wtemp) = map(int, input().split())\n    p = max(ptemp, ftemp)\n    f = min(ptemp, ftemp)\n    cs = cstemp\n    cw = wtemp\n    s = stemp\n    w = wtemp\n    cs = cstemp\n    cw = cwtemp\n    if wtemp > stemp:\n        (s, w) = (w, s)\n        (cs, cw) = (cw, cs)\n    ans = 0\n    for i in range(-1, cw):\n        temp = 0\n        if p - (i + 1) * w >= 0:\n            temp = i + 1\n            countS = (p - (i + 1) * w) // s\n            x = min(countS, cs)\n            temp += x\n            tempCS = cs - x\n            tempCountW = cw - (i + 1)\n            countW = f // w\n            y = min(countW, tempCountW)\n            temp += y\n            tempF = f - y * w\n            countS2 = tempF // s\n            z = min(countS2, tempCS)\n            temp += z\n            ans = max(ans, temp)\n    print(ans)", "import sys\nimport math\nimport collections\nfrom sys import stdin, stdout, setrecursionlimit\nimport bisect as bs\nsetrecursionlimit(2 ** 20)\nM = 10 ** 9 + 7\nT = int(stdin.readline())\nfor _ in range(T):\n    (p, f) = list(map(int, stdin.readline().split()))\n    (cs, cw) = list(map(int, stdin.readline().split()))\n    (s, w) = list(map(int, stdin.readline().split()))\n    a = [(s, cs), (w, cw)]\n    a.sort()\n    mn = a[0][0]\n    mx = a[1][0]\n    cmn = a[0][1]\n    cmx = a[1][1]\n    ans = 0\n    for i in range(0, cmn + 1, 1):\n        tmn = cmn\n        tmx = cmx\n        tp = p\n        tf = f\n        if p < i * mn:\n            break\n        tmp = i\n        tp -= i * mn\n        tmn -= i\n        rem = min(tmx, tp // mx)\n        tmp += rem\n        tmx -= rem\n        mnfil = min(tmn, tf // mn)\n        tmp += mnfil\n        tf -= mnfil * mn\n        mxfil = min(tmx, tf // mx)\n        tmp += mxfil\n        ans = max(ans, tmp)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (wa, wb) = map(int, input().split())\n    (cs, ca) = map(int, input().split())\n    (sword, axe) = map(int, input().split())\n    if sword > axe:\n        (sword, axe) = (axe, sword)\n        (cs, ca) = (ca, cs)\n    ans = 0\n    for j in range(cs + 1):\n        x = wa\n        y = wb\n        a = sword\n        b = axe\n        cnt = cs\n        d = ca\n        temp = 0\n        if x - j * a >= 0:\n            x -= j * a\n            cnt -= j\n            temp += j\n            count = min(y // a, cnt)\n            temp += count\n            y -= min(cnt * a, y // a * a)\n            cnt -= count\n        else:\n            break\n        temp += x // b\n        d -= x // b\n        temp += min(y // b, d)\n        ans = max(ans, temp)\n    print(ans)", "def main():\n    t = int(input())\n    for _ in range(t):\n        (p, f) = map(int, input().split())\n        (ns, na) = map(int, input().split())\n        (ws, wa) = map(int, input().split())\n        if ws > wa:\n            (ws, wa) = (wa, ws)\n            (ns, na) = (na, ns)\n        ans = -1\n        for i in range(ns + 1):\n            sp = i\n            if p < sp * ws:\n                break\n            sf = min(ns - sp, f // ws)\n            ap = min((p - sp * ws) // wa, na)\n            af = min(na - ap, (f - ws * sf) // wa)\n            ans = max(ans, sp + ap + sf + af)\n        (p, f) = (f, p)\n        for i in range(ns + 1):\n            sp = i\n            if p < sp * ws:\n                break\n            sf = min(ns - sp, f // ws)\n            ap = min((p - sp * ws) // wa, na)\n            af = min(na - ap, (f - ws * sf) // wa)\n            ans = max(ans, sp + ap + sf + af)\n        print(ans)\n    return\nmain()", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (p, f) = [int(i) for i in input().split()]\n    (c1, c2) = [int(i) for i in input().split()]\n    (w1, w2) = [int(i) for i in input().split()]\n    if w1 > w2:\n        (c1, c2) = (c2, c1)\n        (w1, w2) = (w2, w1)\n    if p > f:\n        (p, f) = (f, p)\n    res = 0\n    for i in range(0, min(c1, p // w1) + 1):\n        rem_p = p - i * w1\n        p_c2 = min(rem_p // w2, c2)\n        j = min(f // w1, c1 - i)\n        rem_f = f - j * w1\n        f_c2 = min(rem_f // w2, c2 - p_c2)\n        res = max(res, i + p_c2 + j + f_c2)\n    (p, f) = (f, p)\n    for i in range(0, min(c1, p // w1) + 1):\n        rem_p = p - i * w1\n        p_c2 = min(rem_p // w2, c2)\n        j = min(f // w1, c1 - i)\n        rem_f = f - j * w1\n        f_c2 = min(rem_f // w2, c2 - p_c2)\n        res = max(res, i + p_c2 + j + f_c2)\n    print(res)"]