["import sys\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LI1():\n    return list(map(int1, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n\n    def factor(a):\n        res = []\n        for d in range(1, a + 1):\n            if d ** 2 > a:\n                break\n            if a % d == 0:\n                res.append(d)\n                if d ** 2 != a:\n                    res.append(a // d)\n        return res\n\n    def solve(ans):\n        for f in ff:\n            if f >= ans:\n                return ans\n            for sj in range(f):\n                pc = colors[sj]\n                for j in range(sj + f, cn, f):\n                    c = colors[j]\n                    if c != pc:\n                        break\n                    pc = c\n                else:\n                    return f\n    q = II()\n    for _ in range(q):\n        n = II()\n        pp = LI1()\n        cc = LI()\n        fin = [False] * n\n        ans = 10 ** 9\n        for i in range(n):\n            if fin[i]:\n                continue\n            colors = []\n            while not fin[i]:\n                fin[i] = True\n                colors.append(cc[i])\n                i = pp[i]\n            cn = len(colors)\n            ff = factor(cn)\n            ff.sort()\n            ans = solve(ans)\n        print(ans)\nmain()"]