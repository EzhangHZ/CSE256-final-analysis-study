["def solve(s):\n    res = 0\n    (pos0, pos1) = (0, 0)\n    for c in s:\n        if c == '0':\n            pos0 += 1\n            pos1 = 0\n            res += pos0\n        elif c == '1':\n            pos1 += 1\n            pos0 = 0\n            res += pos1\n        else:\n            pos1 += 1\n            pos0 += 1\n            res += max(pos1, pos0)\n        (pos1, pos0) = (pos0, pos1)\n    return res\nt = int(input())\nwhile t:\n    t -= 1\n    s = str(input())\n    print(solve(s))", "def calc():\n    s = input()\n    chk = -1\n    buff = 0\n    cur = '0'\n    ans = 0\n    for i in range(len(s)):\n        if s[i] == '?':\n            buff += 1\n            cur = '1' if cur == '0' else '0'\n        else:\n            if s[i] == cur:\n                chk = i - buff - 1\n            buff = 0\n            cur = s[i]\n        ans += i - chk\n    print(ans)\nt = int(input())\nfor _i in range(t):\n    calc()", "def func():\n    max1 = 0\n    max0 = 0\n    length = len(s)\n    ans = 0\n    for i in range(length):\n        if s[i] == '0':\n            max0 += 1\n            max1 = 0\n            ans += max0\n        elif s[i] == '1':\n            max1 += 1\n            max0 = 0\n            ans += max1\n        else:\n            max1 += 1\n            max0 += 1\n            ans += max(max0, max1)\n        (max0, max1) = (max1, max0)\n    print(ans)\nfor _ in range(int(input())):\n    s = list(input())\n    func()", "t = int(input())\nwhile t != 0:\n    s = input()\n    (one, zero) = (0, 0)\n    ans = 0\n    for i in s:\n        if i == '1':\n            one += 1\n            zero = 0\n            ans += one\n        elif i == '0':\n            zero += 1\n            one = 0\n            ans += zero\n        else:\n            one += 1\n            zero += 1\n            ans += max(one, zero)\n        (zero, one) = (one, zero)\n    print(ans)\n    t -= 1", "for _ in range(int(input())):\n    (o, z) = (1, 1)\n    ans = 0\n    s = input()\n    for i in s:\n        if i == '?':\n            ans += max(o, z)\n            (o, z) = (z + 1, o + 1)\n        if i == '0':\n            ans += z\n            (o, z) = (z + 1, 1)\n        if i == '1':\n            ans += o\n            (o, z) = (1, o + 1)\n    print(ans)", "n = eval(input())\nfor t in range(n):\n    s = input()\n    (w, e, q) = (0, 0, 0)\n    for i in s:\n        if i == '0':\n            e += 1\n            w = 0\n        elif i == '1':\n            w += 1\n            e = 0\n        else:\n            w += 1\n            e += 1\n        q += max(e, w)\n        (w, e) = (e, w)\n    print(q)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    a = 0\n    b = 0\n    c = 0\n    d = 0\n    for char in s:\n        if char == '0':\n            b = c + 1\n            c = 0\n            d = b + c\n        elif char == '1':\n            c = b + 1\n            b = 0\n            d = b + c\n        else:\n            (b, c) = (c + 1, b + 1)\n            d = d + 1\n        a = a + d\n    print(a)", "for _ in [*open(0)][1:]:\n    w = q = e = 0\n    for i in _[:-1]:\n        if i == '0':\n            e += 1\n            w = 0\n        elif i == '1':\n            w += 1\n            e = 0\n        else:\n            w += 1\n            e += 1\n        q += max(e, w)\n        (w, e) = (e, w)\n    print(q)", "for t in range(int(input())):\n    s = input()\n    (w, e, q) = (0, 0, 0)\n    for i in s:\n        if i == '0':\n            e += 1\n            w = 0\n        elif i == '1':\n            w += 1\n            e = 0\n        else:\n            w += 1\n            e += 1\n        q += max(e, w)\n        (w, e) = (e, w)\n    print(q)", "t = int(input())\nwhile t != 0:\n    s = input()\n    (one, zero) = (0, 0)\n    ans = 0\n    for i in s:\n        if i == '1':\n            one += 1\n            zero = 0\n            ans += one\n        elif i == '0':\n            zero += 1\n            one = 0\n            ans += zero\n        else:\n            one += 1\n            zero += 1\n            ans += max(one, zero)\n        (zero, one) = (one, zero)\n    print(ans)\n    t -= 1", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    s = list(input().strip())\n    n = len(s)\n    leftmost = [-1] * n\n    left = float('inf')\n    for i in range(n):\n        if s[i] == '?':\n            left = min(left, i) if left >= 0 else i\n        elif left >= 0:\n            leftmost[i] = left\n            left = -1\n    idx = 0\n    while idx < n and s[idx] == '?':\n        idx += 1\n    if idx == n:\n        return n * (n + 1) // 2\n    else:\n        s[0] = s[idx] if idx % 2 == 0 else str(int(s[idx]) ^ 1)\n    ans = cnt = 1\n    for i in range(1, n):\n        if s[i] == '?':\n            s[i] = int(s[i - 1]) ^ 1\n            cnt += 1\n            ans += cnt\n        elif int(s[i - 1]) ^ int(s[i]) == 1:\n            cnt += 1\n            ans += cnt\n        elif leftmost[i] >= 0:\n            cnt = i - leftmost[i] + 1\n            ans += cnt\n        else:\n            cnt = 1\n            ans += 1\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "for _ in range(int(input())):\n    (o, z) = (1, 1)\n    ans = 0\n    s = input()\n    for i in s:\n        if i == '?':\n            ans += max(o, z)\n            (o, z) = (z + 1, o + 1)\n        if i == '0':\n            ans += z\n            (o, z) = (z + 1, 1)\n        if i == '1':\n            ans += o\n            (o, z) = (1, o + 1)\n    print(ans)", "for s in [*open(0)][1:]:\n    r = p = i = j = k = 0\n    for x in s[:-1]:\n        i += 1\n        x = ord(x) ^ i & 1\n        if x < 50:\n            k = (k, j)[p != x]\n            p = x\n            j = i\n        r += i - k\n    print(r)", "for s in [*open(0)][1:]:\n    b = c = d = e = i = 0\n    for C in s:\n        if C < '1':\n            c = d + 1\n            d = 0\n            e = c\n        elif C < '?':\n            d = c + 1\n            c = 0\n            e = d\n        else:\n            (c, d) = (d + 1, c + 1)\n            e += 1\n        b += e\n        i += 1\n    print(b - e)", "for _ in range(int(input())):\n    a = 0\n    e0 = 0\n    e1 = 0\n    ee = 0\n    for i in input():\n        if i == '?':\n            (e0, e1) = (e1, e0)\n            ee += 1\n        elif i == '1':\n            e1 = ee + e0 + 1\n            e0 = 0\n            ee = 0\n        else:\n            e0 = ee + e1 + 1\n            e1 = 0\n            ee = 0\n        a += e0 + e1 + ee\n    print(a)", "for _ in range(int(input())):\n    ar = input()\n    (zero, one, ans) = (0, 0, 0)\n    for i in ar:\n        if i == '0':\n            zero += 1\n            one = 0\n            ans += zero\n        elif i == '1':\n            one += 1\n            zero = 0\n            ans += one\n        else:\n            zero += 1\n            one += 1\n            ans += max(zero, one)\n        (zero, one) = (one, zero)\n    print(ans)", "def solve():\n    s = input()\n    dp = [1] * len(s)\n    prev = s[0]\n    counter = 1 if prev == '?' else 0\n    for i in range(1, len(s)):\n        if s[i] == '?':\n            dp[i] += dp[i - 1]\n            counter += 1\n        if s[i] == '1':\n            if prev == '?':\n                dp[i] += counter\n            if prev == '0' and counter % 2 == 0:\n                dp[i] += dp[i - 1]\n            if prev == '1' and counter % 2 == 0 and (counter > 0):\n                dp[i] += counter\n            if prev == '1' and counter % 2 != 0:\n                dp[i] += dp[i - 1]\n            if prev == '0' and counter % 2 != 0:\n                dp[i] += counter\n            counter = 0\n            prev = s[i]\n        if s[i] == '0':\n            if prev == '?':\n                dp[i] += counter\n            if prev == '1' and counter % 2 == 0:\n                dp[i] += dp[i - 1]\n            if prev == '0' and counter % 2 == 0 and (counter > 0):\n                dp[i] += counter\n            if prev == '0' and counter % 2 != 0:\n                dp[i] += dp[i - 1]\n            if prev == '1' and counter % 2 != 0:\n                dp[i] += counter\n            counter = 0\n            prev = s[i]\n    return sum(dp)\nt = int(input())\nwhile t > 0:\n    t -= 1\n    print(solve())", "for _ in range(int(input())):\n    s = input()\n    (w, e, q) = (0, 0, 0)\n    for i in s:\n        if i == '0':\n            e += 1\n            w = 0\n        elif i == '1':\n            w += 1\n            e = 0\n        else:\n            w += 1\n            e += 1\n        q += max(e, w)\n        (w, e) = (e, w)\n    print(q)", "for t in range(int(input())):\n    s = input()\n    (w, e, q) = (0, 0, 0)\n    for i in s:\n        if i == '0':\n            e += 1\n            w = 0\n        elif i == '1':\n            w += 1\n            e = 0\n        else:\n            w += 1\n            e += 1\n        q += max(e, w)\n        (w, e) = (e, w)\n    print(q)", "for t in range(int(input())):\n    s = input()\n    (w, e, q) = (0, 0, 0)\n    for i in s:\n        if i == '0':\n            e += 1\n            w = 0\n        elif i == '1':\n            w += 1\n            e = 0\n        else:\n            w += 1\n            e += 1\n        q += max(e, w)\n        (w, e) = (e, w)\n    print(q)", "n = int(input())\nwhile n > 0:\n    try:\n        s = list(input())\n        (value, mark, ans) = (0, 0, 0)\n        for i in range(0, len(s)):\n            if s[i] != '?':\n                if s[i] == s[i - 1]:\n                    value = mark\n                mark = 0\n            else:\n                if s[i - 1] == '1':\n                    s[i] = '0'\n                else:\n                    s[i] = '1'\n                mark += 1\n            value += 1\n            ans += value\n        print(ans)\n        n -= 1\n    except:\n        break", "for t in range(int(input())):\n    s = input()\n    (w, e, q) = (0, 0, 0)\n    for i in s:\n        if i == '0':\n            e += 1\n            w = 0\n        elif i == '1':\n            w += 1\n            e = 0\n        else:\n            w += 1\n            e += 1\n        q += max(e, w)\n        (w, e) = (e, w)\n    print(q)", "def inv(x):\n    if x == '0':\n        return '1'\n    return '0'\n\ndef unstableString(string):\n    array = list(string)\n    n = len(array)\n    met = [0]\n    ans = [1]\n    for x in range(1, n):\n        if array[x - 1] == '?':\n            met.append(met[-1] + 1)\n        else:\n            met.append(0)\n    expectation = array[0]\n    if expectation in ('0', '1'):\n        expectation = inv(expectation)\n    for x in range(1, n):\n        if array[x] == '?':\n            ans.append(ans[-1] + 1)\n        elif array[x - 1] != '?':\n            if array[x - 1] != array[x]:\n                ans.append(ans[-1] + 1)\n            else:\n                ans.append(1)\n                expectation = array[x]\n        elif array[x - 1] == '?':\n            if array[x] == expectation:\n                ans.append(ans[-1] + 1)\n            else:\n                ans.append(met[x] + 1)\n                expectation = array[x]\n        expectation = inv(expectation)\n    return sum(ans)\nt = int(input())\nfor _ in range(t):\n    print(unstableString(input()))", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    s = list(input().strip())\n    n = len(s)\n    leftmost = [-1] * n\n    left = float('inf')\n    for i in range(n):\n        if s[i] == '?':\n            left = min(left, i) if left >= 0 else i\n        elif left >= 0:\n            leftmost[i] = left\n            left = -1\n    ans = cnt = 1\n    if s[0] == '?':\n        s[0] = '1'\n    for i in range(1, n):\n        if s[i] == '?':\n            s[i] = int(s[i - 1]) ^ 1\n            cnt += 1\n        elif int(s[i - 1]) ^ int(s[i]) == 1:\n            cnt += 1\n        elif leftmost[i] >= 0:\n            cnt = i - leftmost[i] + 1\n        else:\n            cnt = 1\n        ans += cnt\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "n = int(input())\nwhile n > 0:\n    n = n - 1\n    s = input()\n    start = 0\n    idx = 0\n    if s[0] == '?':\n        idx = -1\n    res = 1\n    for i in range(1, len(s)):\n        if s[i] != '?':\n            if idx != -1:\n                if s[idx] == s[i] and (i - idx - 1) % 2 == 0 or (s[idx] != s[i] and (i - idx - 1) % 2 == 1):\n                    start = idx + 1\n            idx = i\n        res += i - start + 1\n    print(int(res))", "def lcm(x, y):\n    return x * y // math.gcd(x, y)\n\ndef prob():\n    s = input()\n    ans = 0\n    x = [-1, -1]\n    for i in range(len(s)):\n        y = ord(s[i]) - ord('0')\n        if y == 0 or y == 1:\n            x[y ^ i % 2] = i\n        ans += i - min(x)\n    print(ans)\nt = 1\nt = int(input())\nfor _ in range(0, t):\n    prob()", "for s in [*open(0)][1:]:\n    r = p = i = j = k = 0\n    for x in s[:-1]:\n        i += 1\n        x = ord(x) ^ i & 1\n        if x < 50:\n            k = (k, j)[p != x]\n            p = x\n            j = i\n        r += i - k\n    print(r)", "inp = int(input())\nfor _ in range(inp):\n    s = input()\n    z = 0\n    o = 0\n    res = 0\n    for i in s:\n        if i == '0':\n            z += 1\n            o = 0\n            res += z\n        elif i == '1':\n            o += 1\n            z = 0\n            res += o\n        else:\n            o += 1\n            z += 1\n            res += max(z, o)\n        (z, o) = (o, z)\n    print(res)", "t = int(input())\nwhile t != 0:\n    s = input()\n    n = len(s)\n    ans = 0\n    mx0 = 0\n    mx1 = 0\n    for i in range(n):\n        if s[i] == '0':\n            mx0 += 1\n            mx1 = 0\n            ans += mx0\n        elif s[i] == '1':\n            mx1 += 1\n            mx0 = 0\n            ans += mx1\n        else:\n            mx0 += 1\n            mx1 += 1\n            ans += max(mx0, mx1)\n        (mx0, mx1) = (mx1, mx0)\n    print(ans)\n    t -= 1", "def solve(S):\n    N = len(S)\n    qlen = [0] * (N + 1)\n    for i in range(N - 1, -1, -1):\n        if S[i] == '?':\n            qlen[i] = qlen[i + 1] + 1\n    blen = [0] * N\n    blen[N - 1] = 1\n    for i in range(N - 2, -1, -1):\n        if S[i] == '?':\n            blen[i] = 1 + blen[i + 1]\n        elif S[i + 1] == '?':\n            if i + qlen[i + 1] == N - 1:\n                blen[i] = 1 + blen[i + 1]\n            elif qlen[i + 1] & 1 == 0:\n                if S[i + 1 + qlen[i + 1]] != S[i]:\n                    blen[i] = 1 + blen[i + 1]\n                else:\n                    blen[i] = 1 + qlen[i + 1]\n            elif S[i + 1 + qlen[i + 1]] == S[i]:\n                blen[i] = 1 + blen[i + 1]\n            else:\n                blen[i] = 1 + qlen[i + 1]\n        elif S[i + 1] != S[i]:\n            blen[i] = 1 + blen[i + 1]\n        else:\n            blen[i] = 1\n    print(sum(blen))\nT = int(input())\nfor t in range(T):\n    S = input()\n    solve(S)", "n = int(input())\nwhile n > 0:\n    n = n - 1\n    s = input()\n    start = 0\n    idx = 0\n    if s[0] == '?':\n        idx = -1\n    sum = 1\n    for i in range(1, len(s)):\n        if s[i] != '?':\n            if idx != -1:\n                if s[idx] == s[i] and (i - idx - 1) % 2 == 0 or (s[idx] != s[i] and (i - idx - 1) % 2 == 1):\n                    start = idx + 1\n            idx = i\n        sum += i - start + 1\n    print(int(sum))", "n = int(input())\nwhile n > 0:\n    n = n - 1\n    s = input()\n    start = 0\n    idx = 0\n    if s[0] == '?':\n        idx = -1\n    res = 1\n    for i in range(1, len(s)):\n        if s[i] != '?':\n            if idx != -1:\n                if s[idx] == s[i] and (i - idx - 1) % 2 == 0 or (s[idx] != s[i] and (i - idx - 1) % 2 == 1):\n                    start = idx + 1\n            idx = i\n        res += i - start + 1\n    print(int(res))", "t = int(input())\nwhile t:\n    s = input()\n    l = len(s)\n    b = 0\n    q = 0\n    if s[0] == '?':\n        q = -1\n    p = 1\n    i = 1\n    for i in range(l):\n        if s[i] != '?':\n            if q != -1:\n                if s[q] == s[i] and (i - q - 1) % 2 == 0 or (s[q] != s[i] and (i - q - 1) % 2 == 1):\n                    b = q + 1\n            q = i\n        p += i - b + 1\n    print(p - 1)\n    t -= 1", "t = int(input())\nwhile t:\n    s = input()\n    lenth = len(s)\n    b = 0\n    q = 0\n    if s[0] == '?':\n        q = -1\n    p = 1\n    i = 1\n    for i in range(lenth):\n        if s[i] != '?':\n            if q != -1:\n                if s[q] == s[i] and (i - q - 1) % 2 == 0 or (s[q] != s[i] and (i - q - 1) % 2 == 1):\n                    b = q + 1\n            q = i\n        p = p + i - b + 1\n    print(p - 1)\n    t -= 1", "for z in range(int(input())):\n    s = input()\n    (w, e, q) = (0, 0, 0)\n    for i in s:\n        if i == '0':\n            e += 1\n            w = 0\n        elif i == '1':\n            w += 1\n            e = 0\n        else:\n            w += 1\n            e += 1\n        q += max(e, w)\n        (w, e) = (e, w)\n    print(q)", "def solve(s):\n    n = len(s)\n    dp = [1 if s[0] in '0?' else 0, 1 if s[0] in '1?' else 0]\n    ans = max(dp)\n    for i in range(1, n):\n        if s[i] == '0':\n            dp = [1 + dp[1], 0]\n            ans += sum(dp)\n        elif s[i] == '1':\n            dp = [0, 1 + dp[0]]\n            ans += sum(dp)\n        else:\n            dp = [1 + dp[1], 1 + dp[0]]\n            ans += max(dp)\n    return ans\nfor t in range(int(input())):\n    s = input()\n    print(solve(s))", "import sys\nT = int(sys.stdin.readline())\nfor _ in range(T):\n    string = sys.stdin.readline().rstrip()\n    beautiful = 0\n    i = 0\n    dp = [0 for _ in range(len(string))]\n    dp[-1] = 1\n    i = len(string) - 2\n    while i >= 0:\n        q = 0\n        k = string[i + 1]\n        while string[i] == '?' and i >= 0:\n            dp[i] = dp[i + 1] + 1\n            i -= 1\n            q += 1\n        if dp[0]:\n            break\n        if k == '?':\n            dp[i] = dp[i + 1] + 1\n        elif string[i] != k:\n            if q % 2:\n                dp[i] = 1 + q\n            else:\n                dp[i] = dp[i + 1] + 1\n        elif q:\n            if q % 2 == 0:\n                dp[i] = 1 + q\n            else:\n                dp[i] = dp[i + 1] + 1\n        else:\n            dp[i] = 1\n        i -= 1\n        q = 0\n    print(sum(dp))", "def unstable_substrings(S):\n    l = 0\n    lq = 0\n    s = 0\n    pos = 0\n    simb = '?'\n    for i in range(len(S)):\n        if S[i] == '?':\n            lq += 1\n        else:\n            if simb != '?' and (i - pos) % 2 != (int(S[i]) - int(simb)) % 2:\n                s += l * (l + 1) // 2 - lq * (lq + 1) // 2\n                l = lq\n            simb = S[i]\n            pos = i\n            lq = 0\n        l += 1\n    s += l * (l + 1) // 2\n    return s\nfor i in range(int(input())):\n    print(unstable_substrings(input()))", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    ans = 0\n    i = 0\n    count = 0\n    while i < n and s[i] == '?':\n        i += 1\n        count += 1\n    while i < n:\n        if i + 1 < n and s[i + 1] == '?':\n            j = i + 1\n            qs = 0\n            while j < n and s[j] == '?':\n                qs += 1\n                j += 1\n            if j < n:\n                if qs & 1 and s[i] == s[j] or (qs & 1 == 0 and s[i] != s[j]):\n                    count += qs + 1\n                else:\n                    count += 1\n                    ans += count * (count + 1) // 2 + qs * count\n                    count = qs\n            else:\n                count += qs + 1\n            i = j\n        elif i + 1 < n and s[i + 1] != s[i]:\n            count += 1\n            i += 1\n        else:\n            count += 1\n            ans += count * (count + 1) // 2\n            count = 0\n            i += 1\n    ans += count * (count + 1) // 2\n    print(ans)", "t = int(input())\n\ndef solve(s):\n    n = len(s)\n    dp = [1 if s[0] in '0?' else 0, 1 if s[0] in '1?' else 0]\n    total = max(dp)\n    for i in range(1, n):\n        if s[i] == '0':\n            dp = [1 + dp[1], 0]\n            total += sum(dp)\n        elif s[i] == '1':\n            dp = [0, 1 + dp[0]]\n            total += sum(dp)\n        else:\n            dp = [1 + dp[1], 1 + dp[0]]\n            total += max(dp)\n    return total\nfor test in range(t):\n    s = input().strip()\n    print(solve(s))", "import math\n\ndef fun(a, b):\n    return math.gcd(a, b)\n\ndef solve(s, n):\n    c = 0\n    prev = None\n    d = {'0': '1', '1': '0'}\n    ans = 0\n    prev_ans = 0\n    i = 0\n    while i < n:\n        temp = 0\n        if s[i] != prev and prev != None:\n            ans += prev_ans + 1\n            temp += prev_ans + 1\n        else:\n            ans += c + 1\n            temp += c + 1\n        prev_ans = temp\n        if s[i] == '?':\n            c += 1\n        else:\n            c = 0\n        if s[i] != '?':\n            prev = s[i]\n        elif prev:\n            prev = d[prev]\n        i += 1\n    return ans\nfor _ in range(int(input())):\n    s = input()\n    print(solve(s, len(s)))", "def solve(s: str) -> int:\n    ans = 0\n    x = [-1, -1]\n    for i in range(len(s)):\n        y = ord(s[i]) - ord('0')\n        if y == 0 or y == 1:\n            x[y ^ i % 2] = i\n        ans += i - min(x)\n    return ans\ntest_cases = int(input())\nfor _ in range(test_cases):\n    s = input()\n    print(solve(s))", "import sys\nimport math\n\ndef solve(s):\n    break_point = 0\n    break_candidate = -1\n    last_char = ''\n    dp = [0] * len(s)\n    for i in range(len(s)):\n        if i == 0:\n            dp[i] = 1\n            last_char = s[i]\n            continue\n        if break_candidate < 0 and s[i - 1] == '?':\n            break_candidate = i - 1\n        elif s[i - 1] != '?':\n            break_candidate = -1\n        if last_char == '?':\n            last_char = s[i]\n            dp[i] = dp[i - 1] + i + 1 - break_point\n        else:\n            if last_char != s[i]:\n                dp[i] = dp[i - 1] + i + 1 - break_point\n            else:\n                break_point = i\n                if s[i - 1] == '?':\n                    break_point = break_candidate\n                dp[i] = dp[i - 1] + i + 1 - break_point\n            if s[i] == '?':\n                last_char = str(1 - int(last_char))\n            else:\n                last_char = s[i]\n    return dp[-1]\nt = int(sys.stdin.readline().strip())\nfor i in range(t):\n    s = sys.stdin.readline().strip()\n    print(solve(s))", "n = int(input())\nfor i in range(n):\n    a = input()\n    b = list(a)\n    c = len(b)\n    start = 0\n    idx = 0\n    if b[0] == '?':\n        idx = -1\n    res = 1\n    for j in range(1, c):\n        if b[j] != '?':\n            if idx != -1:\n                if b[idx] == b[j] and (j - idx - 1) % 2 == 0 or (b[idx] != b[j] and (j - idx - 1) % 2 == 1):\n                    start = idx + 1\n            idx = j\n        res += j - start + 1\n    print(res)", "for _ in range(int(input())):\n    (o, z) = (1, 1)\n    ans = 0\n    s = input()\n    for i in s:\n        if i == '?':\n            ans += max(o, z)\n            (o, z) = (z + 1, o + 1)\n        if i == '0':\n            ans += z\n            (o, z) = (z + 1, 1)\n        if i == '1':\n            ans += o\n            (o, z) = (1, o + 1)\n    print(ans)", "for s in [*open(0)][1:]:\n    r = p = i = j = k = 0\n    for x in s[:-1]:\n        i += 1\n        x = ord(x) ^ i & 1\n        if x < 50:\n            k = (k, j)[p != x]\n            p = x\n            j = i\n        r += i - k\n    print(r)", "def f(n):\n    return n * (n - 1) // 2 + n\nt = int(input())\nfor i in range(t):\n    s = input()\n    res = 0\n    k = 0\n    tok = None\n    cnt = 0\n    for c in s:\n        if not tok and c != '?':\n            tok = c\n        else:\n            if c == tok:\n                res += f(k) - f(cnt)\n                k = cnt + 1\n                cnt = 0\n                continue\n            tok = '1' if tok == '0' else '0'\n        if c == '?':\n            cnt += 1\n        else:\n            cnt = 0\n        k += 1\n    print(res + f(k))", "from math import comb\nt = int(input())\nfor tc in range(t):\n    s = input()\n    dp = (-1, -1)\n    result = 0\n    for ch in s:\n        one = -1\n        zero = -1\n        if ch != '1':\n            if dp[1] == -1:\n                zero = 1\n            else:\n                zero = dp[1] + 1\n            if ch != '?' and dp[0] != -1:\n                result += comb(dp[0], 2)\n        if ch != '0':\n            if dp[0] == -1:\n                one = 1\n            else:\n                one = dp[0] + 1\n            if ch != '?' and dp[1] != -1:\n                result += comb(dp[1], 2)\n        dp = (zero, one)\n    if dp[0] != -1:\n        result += comb(dp[0], 2)\n    if dp[1] != -1:\n        result += comb(dp[1], 2)\n    tmp = 0\n    for i in range(len(s)):\n        if s[i] == '?':\n            tmp += 1\n        else:\n            result -= comb(tmp, 2)\n            tmp = 0\n    result -= comb(tmp, 2)\n    print(result + len(s))", "def main():\n    s = input()\n    x = 0\n    n = len(s)\n    ans = 0\n    flag = True\n    a = [0] * n\n    for i in range(1, n):\n        if s[i - 1] == '?':\n            a[i] = a[i - 1]\n        else:\n            a[i] = i\n    pre = 0\n    for i in range(n):\n        if s[i] == '0' and flag == True and i % 2:\n            flag = False\n            x = x + pre\n            ans += (x * x + x) // 2 - (pre * pre + pre) // 2\n            x = 1\n            pre = i - a[i]\n        elif s[i] == '0' and flag == False and (i % 2 == 0):\n            flag = True\n            x = x + pre\n            ans += (x * x + x) // 2 - (pre * pre + pre) // 2\n            x = 1\n            pre = i - a[i]\n        elif s[i] == '1' and flag == True and (i % 2 == 0):\n            flag = False\n            x = x + pre\n            ans += (x * x + x) // 2 - (pre * pre + pre) // 2\n            x = 1\n            pre = i - a[i]\n        elif s[i] == '1' and flag == False and i % 2:\n            flag = True\n            x = x + pre\n            ans += (x * x + x) // 2 - (pre * pre + pre) // 2\n            x = 1\n            pre = i - a[i]\n        else:\n            x += 1\n    x = x + pre\n    ans += (x * x + x) // 2 - (pre * pre + pre) // 2\n    print(ans)\nt = int(input())\nfor i in range(t):\n    main()", "for s in [*open(0)][1:]:\n    r = p = i = j = k = 0\n    for x in s[:-1]:\n        i += 1\n        x = ord(x) ^ i & 1\n        if p != x < 50:\n            p = x\n            k = j\n        r += i - k\n        j = (j, i)[x < 50]\n    print(r)", "import re\ng = lambda p: sum((l * l + l >> 1 for l in map(len, re.split(p, s))))\nfor s in [*open(0)][1:]:\n    s = ''.join((chr(ord(x) ^ i & 1) for (i, x) in enumerate(s[:-1])))\n    print(g('0') + g('1') - g('0|1'))", "def f(s):\n    dp = [[0, 0] for i in range(len(s))]\n    if s[0] == '1':\n        dp[0][1] = 1\n    elif s[0] == '0':\n        dp[0][0] = 1\n    else:\n        dp[0] = [1, 1]\n    ans = 1\n    for i in range(1, len(s)):\n        if s[i] == '?':\n            dp[i][0] = dp[i - 1][1] + 1\n            dp[i][1] = dp[i - 1][0] + 1\n            ans += max(dp[i][0], dp[i][1])\n            continue\n        if s[i] == '0':\n            dp[i][0] = dp[i - 1][1] + 1\n        if s[i] == '1':\n            dp[i][1] = dp[i - 1][0] + 1\n        ans += dp[i][0] + dp[i][1]\n    return ans\nfor i in range(int(input())):\n    print(f(input()))", "t = int(input())\nfor hh in range(0, t):\n    s = input()\n    n = len(s)\n    prvset_idx = -1\n    leng = 0\n    cnt = 0\n    for i in range(0, n):\n        if prvset_idx == -1 or s[i] == '?':\n            leng += 1\n            cnt += leng\n        else:\n            diff = i - prvset_idx\n            if diff % 2 == 1:\n                if s[i] == s[prvset_idx]:\n                    new_idx = prvset_idx + 1\n                    dist = i - new_idx\n                    leng = dist + 1\n                    cnt += leng\n                else:\n                    leng += 1\n                    cnt += leng\n            elif s[i] != s[prvset_idx]:\n                new_idx = prvset_idx + 1\n                dist = i - new_idx\n                leng = dist + 1\n                cnt += leng\n            else:\n                leng += 1\n                cnt += leng\n        if s[i] != '?':\n            prvset_idx = i\n    print(cnt)", "import math\nt = int(input())\nfor _ in range(t):\n    n = input()\n    last = -1\n    total = 0\n    qn = 0\n    currLen = 0\n    for i in range(len(n)):\n        if n[i] == '?':\n            currLen += 1\n            qn += 1\n        elif last == -1:\n            last = n[i]\n            currLen += 1\n            qn = 0\n        elif last == '1' and qn % 2 == 1 and (n[i] == '1'):\n            currLen += 1\n            qn = 0\n        elif last == '0' and qn % 2 == 1 and (n[i] == '0'):\n            currLen += 1\n            qn = 0\n        elif last == '1' and qn % 2 == 0 and (n[i] == '0'):\n            currLen += 1\n            qn = 0\n            last = '0'\n        elif last == '0' and qn % 2 == 0 and (n[i] == '1'):\n            currLen += 1\n            qn = 0\n            last = '1'\n        else:\n            total += currLen * (currLen - 1) // 2 - qn * (qn - 1) // 2\n            last = n[i]\n            currLen = qn + 1\n            qn = 0\n    total = total + currLen * (currLen - 1) // 2\n    print(total + len(n))", "def count_unstable(str):\n    f = 0\n    c1 = 0\n    c2 = 0\n    res = 0\n    for i in range(len(str)):\n        if str[i] == '?' or int(str[i]) - 0 == f:\n            c1 += 1\n        else:\n            c1 = 0\n        if str[i] == '?' or int(str[i]) - 0 == 1 - f:\n            c2 += 1\n        else:\n            c2 = 0\n        res += max(c1, c2)\n        f = 1 - f\n    return res\nt = int(input())\nfor i in range(t):\n    str = input()\n    print(count_unstable(str))", "for s in [*open(0)][1:]:\n    n = len((s := s[:-1]))\n    S = i = 0\n    P = [-1] * 2\n    l = [-1] * 2\n    for c in s:\n        if c < '?':\n            p = int(c) ^ i & 1\n            l[p] = i\n            P[p] = l[p ^ 1]\n        S += i - max(P)\n        i += 1\n    print(S)", "for s in [*open(0)][1:]:\n    n = len((s := s[:-1]))\n    S = i = 0\n    P = [-1] * 2\n    l = [-1] * 2\n    for c in s:\n        if c < '?':\n            p = int(c) ^ i & 1\n            l[p] = i\n            P[p] = l[p ^ 1]\n        S += i - max(P)\n        i += 1\n    print(S)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    n = len(s)\n    mx0 = 0\n    mx1 = 0\n    ans = 0\n    for i in range(n):\n        if s[i] == '0':\n            mx0 += 1\n            mx1 = 0\n            ans += mx0\n        elif s[i] == '1':\n            mx1 += 1\n            mx0 = 0\n            ans += mx1\n        else:\n            mx0 += 1\n            mx1 += 1\n            ans += max(mx0, mx1)\n        temp = mx0\n        mx0 = mx1\n        mx1 = temp\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    n0 = 0\n    n1 = 0\n    su = 0\n    for i in range(n):\n        if s[i] == '0':\n            n0 += 1\n            n1 = 0\n            su += n0\n        elif s[i] == '1':\n            n1 += 1\n            n0 = 0\n            su += n1\n        else:\n            n0 += 1\n            n1 += 1\n            su += max(n0, n1)\n        (n0, n1) = (n1, n0)\n    print(su)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    z = [0] * n\n    o = [0] * n\n    if s[n - 1] == '0':\n        z[n - 1] = 1\n    elif s[n - 1] == '1':\n        o[n - 1] = 1\n    else:\n        z[n - 1] = 1\n        o[n - 1] = 1\n    ans = 0\n    ans += max(z[n - 1], o[n - 1])\n    for i in range(n - 2, -1, -1):\n        if s[i] == '0':\n            z[i] = 1 + o[i + 1]\n        elif s[i] == '1':\n            o[i] = 1 + z[i + 1]\n        else:\n            z[i] = 1 + o[i + 1]\n            o[i] = 1 + z[i + 1]\n        ans += max(z[i], o[i])\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    ans = [0 for i in range(len(s))]\n    last_ind = -1 if s[0] == '?' else 0\n    ans[0] = 1\n    for i in range(1, len(s)):\n        if s[i] == '?':\n            ans[i] = 1 + ans[i - 1]\n        elif s[i] == '0':\n            if last_ind == -1:\n                ans[i] += i + 1\n            else:\n                temp = i - last_ind - 1\n                if temp % 2 == 0 and s[last_ind] == '1' or (temp % 2 == 1 and s[last_ind] == '0'):\n                    ans[i] = ans[last_ind] + i - last_ind\n                else:\n                    ans[i] += i - last_ind\n            last_ind = i\n        else:\n            if last_ind == -1:\n                ans[i] += i + 1\n            else:\n                temp = i - last_ind - 1\n                if temp % 2 == 0 and s[last_ind] == '0' or (temp % 2 == 1 and s[last_ind] == '1'):\n                    ans[i] = ans[last_ind] + i - last_ind\n                else:\n                    ans[i] += i - last_ind\n            last_ind = i\n    print(sum(ans))", "from math import *\n\ndef seg_cnt(f, n):\n    cnt = 0\n    start = None\n    for i in range(n + 1):\n        eq = f(i) if i != n else False\n        if eq and start == None:\n            start = i\n        elif not eq and start != None:\n            length = i - start\n            cnt += length * (length + 1) // 2\n            start = None\n    return cnt\nfor _ in range(int(input())):\n    str = input()\n    n = len(str)\n    a = seg_cnt(lambda i: str[i] == '?' or str[i] == '01'[i % 2], n)\n    b = seg_cnt(lambda i: str[i] == '?' or str[i] == '10'[i % 2], n)\n    c = seg_cnt(lambda i: str[i] == '?', n)\n    print(a + b - c)", "for s in [*open(0)][1:]:\n    S = i = 0\n    P = [-1] * 2\n    l = [-1] * 2\n    for c in s[:-1]:\n        if c < '?':\n            p = int(c) ^ i & 1\n            l[p] = i\n            P[p] = l[p ^ 1]\n        S += i - max(P)\n        i += 1\n    print(S)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    z = [0] * n\n    o = [0] * n\n    if s[n - 1] == '0':\n        z[n - 1] = 1\n    elif s[n - 1] == '1':\n        o[n - 1] = 1\n    else:\n        z[n - 1] = 1\n        o[n - 1] = 1\n    ans = 0\n    ans += max(z[n - 1], o[n - 1])\n    for i in range(n - 2, -1, -1):\n        if s[i] == '0':\n            z[i] = 1 + o[i + 1]\n        elif s[i] == '1':\n            o[i] = 1 + z[i + 1]\n        else:\n            z[i] = 1 + o[i + 1]\n            o[i] = 1 + z[i + 1]\n        ans += max(z[i], o[i])\n    print(ans)", "n = int(input())\nfor _ in range(n):\n    ans = 0\n    a = input()\n    t = a[0]\n    x = -1\n    d = 0\n    y = -1\n    for i in range(0, len(a)):\n        if (a[i] == t and d % 2 == 0 or (a[i] != t and d % 2 == 1)) and t != '?' and (a[i] != '?'):\n            dl = abs(i - 1 - x)\n            if d != 0:\n                x = y\n                ans -= (d - 1) * d // 2\n            else:\n                x = i - 1\n            if dl != 1:\n                ans += (dl - 1) * dl // 2\n            d = 0\n        if a[i] == '?':\n            d += 1\n            if a[i - 1] != '?':\n                y = i - 1\n        if a[i] != '?':\n            t = a[i]\n            d = 0\n    dl = abs(i - x)\n    x = y\n    ans += (dl - 1) * dl // 2\n    ans += len(a)\n    print(ans)", "t = int(input())\nfor i in range(0, t):\n    s = input()\n    a = []\n    n = len(s)\n    pr = s[0]\n    q = 0\n    arr = []\n    k = ''\n    if pr == '?':\n        before = '54'\n        q += 1\n        start = True\n    else:\n        start = False\n    k += s[0]\n    for i in range(1, n):\n        if s[i] != '?' and q > 0:\n            if before == s[i] and q % 2 == 1 or start:\n                k += s[i]\n            elif before != s[i] and q % 2 == 0 or start:\n                k += s[i]\n            else:\n                a.append(k)\n                k = '?' * q + s[i]\n                arr.append(q)\n            q = 0\n            start = False\n        elif s[i] == '?' and q == 0:\n            before = s[i - 1]\n            q += 1\n            k += '?'\n        elif s[i] == '?' and q > 0:\n            q += 1\n            k += '?'\n        elif s[i] == s[i - 1]:\n            a.append(k)\n            k = s[i]\n        else:\n            k += s[i]\n    a.append(k)\n    ans = 0\n    for i in range(0, len(arr)):\n        k = arr[i]\n        kk = k * (k + 1) // 2\n        ans -= kk\n    for i in range(0, len(a)):\n        s = a[i]\n        k = len(s)\n        if k > 0:\n            kk = k * (k + 1) // 2\n            ans += kk\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    a = list(s)\n    n = len(s)\n    for i in range(1, n, 2):\n        if a[i] == '0':\n            a[i] = '1'\n        elif a[i] == '1':\n            a[i] = '0'\n    l = 0\n    ans = 0\n    (zeros, ones) = (0, 0)\n    for r in range(n):\n        if a[r] == '0':\n            zeros += 1\n        elif a[r] == '1':\n            ones += 1\n        while zeros and ones:\n            if a[l] == '0':\n                zeros -= 1\n            elif a[l] == '1':\n                ones -= 1\n            l += 1\n        ans += r - l + 1\n    print(ans)", "import re\ng = lambda p: sum((l * l + l >> 1 for l in map(len, re.split(p, t))))\nfor s in [*open(0)][1:]:\n    t = ''\n    f = 0\n    for x in s[:-1]:\n        t += chr(ord(x) ^ f)\n        f ^= 1\n    print(g('0') + g('1') - g('0|1'))", "for _ in range(int(input())):\n    s = input()\n    lengths = []\n    inside = True\n    count = 0\n    prev = '?'\n    qprefix = 0\n    double_counts = []\n    for c in s:\n        if c == '?':\n            qprefix += 1\n        if prev == '?':\n            count += 1\n            prev = c\n            if c != '?':\n                qprefix = 0\n        elif c == '1' and prev == '0' or (c == '0' and prev == '1'):\n            count += 1\n            prev = c\n            qprefix = 0\n        elif prev == '0' and c == '?':\n            count += 1\n            prev = '1'\n        elif prev == '1' and c == '?':\n            count += 1\n            prev = '0'\n        elif prev == c:\n            lengths.append(count)\n            count = 1 + qprefix\n            double_counts.append(qprefix)\n            qprefix = 0\n    lengths.append(count)\n    print(int(sum([x * (x + 1) / 2 for x in lengths])) - int(sum([x * (x + 1) / 2 for x in double_counts])))", "import math\n\ndef getint():\n    return [int(i) for i in input().split()]\n\ndef getstr():\n    return [str(i) for i in input().split()]\n\ndef solve():\n    s = input()\n    ans = 0\n    cnt0 = 0\n    cnt1 = 0\n    cnt2 = 0\n    for i in range(len(s)):\n        if s[i] == '1' and i % 2 == 0 or (s[i] == '0' and i % 2 == 1):\n            cnt0 += cnt2 + 1\n            cnt1 = 0\n            cnt2 = 0\n        elif s[i] == '0' and i % 2 == 0 or (s[i] == '1' and i % 2 == 1):\n            cnt1 += cnt2 + 1\n            cnt0 = 0\n            cnt2 = 0\n        elif s[i] == '?':\n            cnt2 += 1\n        ans += cnt0 + cnt1 + cnt2\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "for s in [*open(0)][1:]:\n    S = i = 0\n    P = [-1] * 2\n    l = [-1] * 2\n    for c in s[:-1]:\n        if '?' > c:\n            p = int(c) ^ i & 1\n            l[p] = i\n            P[p] = l[~p]\n        S += i - max(P)\n        i += 1\n    print(S)", "for t in range(int(input())):\n    s = input()\n    (ans, last0, last1) = (0, 0, 0)\n    for i in range(len(s)):\n        if s[i] == '0':\n            last0 += 1\n            last1 = 0\n            ans += last0\n        elif s[i] == '1':\n            last1 += 1\n            last0 = 0\n            ans += last1\n        else:\n            last0 += 1\n            last1 += 1\n            ans += max(last0, last1)\n        (last0, last1) = (last1, last0)\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    ans = [0] * len(s)\n    ans[0] = 1\n    if s[0] == '0':\n        x = 1\n        y = 0\n    elif s[0] == '1':\n        x = 0\n        y = 1\n    else:\n        x = 1\n        y = 1\n    for i in range(1, len(s)):\n        if s[i] == '1':\n            if s[i - 1] == '0':\n                ans[i] = ans[i - 1] + 1\n                y = x + 1\n                x = 0\n            elif s[i - 1] == '1':\n                ans[i] = 1\n                x = 0\n                y = 1\n            else:\n                y = x + 1\n                x = 0\n                ans[i] = y\n        elif s[i] == '0':\n            if s[i - 1] == '1':\n                ans[i] = ans[i - 1] + 1\n                x = y + 1\n                y = 0\n            elif s[i - 1] == '0':\n                ans[i] = 1\n                y = 0\n                x = 1\n            else:\n                x = y + 1\n                y = 0\n                ans[i] = x\n        elif s[i] == '?':\n            ans[i] = ans[i - 1] + 1\n            temp = x\n            x = y + 1\n            y = temp + 1\n    sm = 0\n    for i in ans:\n        sm += i\n    print(sm)", "T = int(input())\nfor t in range(T):\n    a = list(input())\n    c = 1\n    count = 0\n    q = 0\n    for i in range(1, len(a)):\n        if a[i] == '0':\n            if a[i - 1] == '0':\n                count = count + c * (c + 1) // 2\n                if q != 0:\n                    count = count - q * (q + 1) // 2\n                c = q\n            q = 0\n        if a[i] == '1':\n            if a[i - 1] == '1':\n                count = count + c * (c + 1) // 2\n                if q != 0:\n                    count = count - q * (q + 1) // 2\n                c = q\n            q = 0\n        if a[i] == '?':\n            q = q + 1\n            if a[i - 1] == '1':\n                a[i] = '0'\n            if a[i - 1] == '0':\n                a[i] = '1'\n        c = c + 1\n    count = count + c * (c + 1) // 2\n    print(count)", "from collections import deque, defaultdict\nfrom math import sqrt, ceil, factorial, floor, inf, gcd, log\nimport bisect\nimport sys\nimport copy\n\ndef get_array():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef input():\n    return sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    ind = 1\n    st = 0\n    mid = st\n    last_seen = s[0]\n    ans = 0\n    while ind < n:\n        if last_seen != s[ind]:\n            if s[ind] == '?':\n                if last_seen == '0':\n                    last_seen = '1'\n                elif last_seen == '1':\n                    last_seen = '0'\n            else:\n                last_seen = s[ind]\n        elif s[ind - 1] == s[ind] == '?':\n            pass\n        elif s[ind] == s[ind - 1]:\n            k = ind - st\n            ans += k * (k + 1) // 2\n            st = ind\n            mid = ind\n        else:\n            k = mid - st\n            l = ind - mid + 1\n            r = ind - st\n            ans += k * (l + r) // 2\n            st = mid\n        if s[ind] == '?' and s[ind - 1] != '?':\n            mid = ind\n        ind += 1\n    k = ind - st\n    ans += k * (k + 1) // 2\n    print(ans)", "for i in range(int(input())):\n    s = input()\n    h = [-1] * 2\n    ans = 0\n    for i in range(len(s)):\n        if s[i] == '0' or s[i] == '1':\n            h[i % 2 ^ int(s[i])] = i\n        q = min(h)\n        ans += i - q\n    print(ans)", "import math\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    mm = -1\n    ans = 0\n    par = [-1, -1]\n    last = [-1, -1]\n    for i in range(0, n):\n        if s[i] != '?':\n            p = (int(s[i]) + i) % 2\n            last[p] = i\n            par[p] = last[p ^ 1]\n        mm = max(par[0], par[1])\n        ans += i - mm\n    print(ans)", "xx = ['0', '1']\nyy = ['1', '0']\nt = int(input())\nfor _ in range(t):\n    s = input()\n    n = len(s)\n    dp = [i + 1 for i in range(n)]\n    for i in range(n - 2, -1, -1):\n        if s[i] == '?':\n            dp[i] = dp[i + 1]\n        elif s[i] == '0':\n            if s[i + 1] == '1':\n                dp[i] = dp[i + 1]\n            elif s[i + 1] == '0':\n                dp[i] = i + 1\n            else:\n                j = i + 1\n                while j < n and (s[j] == '?' or s[j] == xx[(j - i) % 2]):\n                    j += 1\n                dp[i] = j\n        elif s[i] == '1':\n            if s[i + 1] == '0':\n                dp[i] = dp[i + 1]\n            elif s[i + 1] == '1':\n                dp[i] = i + 1\n            else:\n                j = i + 1\n                while j < n and (s[j] == '?' or s[j] == yy[(j - i) % 2]):\n                    j += 1\n                dp[i] = j\n    ans = 0\n    for i in range(n):\n        ans += dp[i] - i\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    k = len(s)\n    ans = 0\n    x = [-1, -1]\n    for i in range(k):\n        if s[i] != '?':\n            c = int(s[i])\n            if c == 0 or c == 1:\n                x[c ^ i % 2] = i\n        mn = min(x[0], x[1])\n        ans += i - mn\n    print(ans)", "t = int(input())\nfor i in range(t):\n    s = input()\n    n = len(s)\n    s1 = 0\n    s2 = 0\n    initialiser = 0\n    ans = 0\n    for i in range(n):\n        if ord(s[i]) - ord('0') == initialiser or s[i] == '?':\n            s1 += 1\n        else:\n            s1 = 0\n        if ord(s[i]) - ord('0') == 1 - initialiser or s[i] == '?':\n            s2 += 1\n        else:\n            s2 = 0\n        ans += max(s1, s2)\n        initialiser = 1 - initialiser\n    print(ans)", "import math\nT = int(input())\nfor _ in range(T):\n    s = input()\n    n = len(s)\n    mm = -1\n    ans = 0\n    par = [-1, -1]\n    last = [-1, -1]\n    for i in range(0, n):\n        if s[i] != '?':\n            p = (int(s[i]) + i) % 2\n            last[p] = i\n            par[p] = last[p ^ 1]\n        mm = max(par[0], par[1])\n        ans += i - mm\n    print(ans)", "import sys\nfrom math import gcd, sqrt\nsys.setrecursionlimit(10 ** 5)\ninf = float('inf')\nen = lambda x: list(enumerate(x))\nii = lambda : int(input())\nr = lambda : map(int, input().split())\nrr = lambda : list(r())\n\ndef solve():\n    s = input()\n    a = b = c = d = -1\n    ans = 0\n    for (j, i) in enumerate(s):\n        if i != '?':\n            if j % 2:\n                if i == '0':\n                    a = j\n                else:\n                    c = j\n            elif i == '0':\n                b = j\n            else:\n                d = j\n        x = max(min(a, c), min(b, d), min(a, b), min(c, d))\n        ans += j - x\n    print(ans)\nfor _ in range(ii()):\n    solve()", "import bisect\nfrom collections import Counter\n\ndef main(s):\n    f = []\n    n = len(s)\n    for i in range(n):\n        f.append([0, 0])\n    s0 = 0\n    s1 = 0\n    ans = 0\n    for i in range(n):\n        c = s[i]\n        if c == '0':\n            f[i][1] = 0\n            f[i][0] = (f[i - 1][1] if i > 0 else 0) + 1\n            ans += sum(f[i])\n        elif c == '1':\n            f[i][1] = (f[i - 1][0] if i > 0 else 0) + 1\n            f[i][0] = 0\n            ans += sum(f[i])\n        else:\n            f[i][1] = (f[i - 1][0] if i > 0 else 0) + 1\n            f[i][0] = (f[i - 1][1] if i > 0 else 0) + 1\n            ans += max(f[i])\n    return ans\nt = int(input())\noutputs = []\nfor _ in range(t):\n    s = input()\n    output = main(s)\n    outputs.append(output)\nfor o in outputs:\n    print(o)", "import sys\nimport os.path\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\ndepth = 1000005\nmod = 1000000007\nlim = mod * mod\nsys.setrecursionlimit(depth)\nfrom math import inf, ceil, sqrt\nfrom collections import defaultdict\nfor _ in range(int(input())):\n    s = str(input())\n    (n, ans) = (len(s), 0)\n    dp = [[0, 0] for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        if s[i - 1] == '0':\n            dp[i][0] = 1 + dp[i - 1][1]\n        elif s[i - 1] == '1':\n            dp[i][1] = 1 + dp[i - 1][0]\n        else:\n            dp[i][0] = 1 + dp[i - 1][1]\n            dp[i][1] = 1 + dp[i - 1][0]\n        ans += max(dp[i][0], dp[i][1])\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [[0, 0] for i in range(n)]\n    if s[0] == '0':\n        dp[0][0] = 1\n    elif s[0] == '1':\n        dp[0][1] = 1\n    else:\n        dp[0][0] = 1\n        dp[0][1] = 1\n    for i in range(1, n):\n        if s[i] == '?':\n            dp[i][0] = dp[i - 1][1] + 1\n            dp[i][1] = dp[i - 1][0] + 1\n        elif s[i] == '1':\n            dp[i][0] = 0\n            dp[i][1] = dp[i - 1][0] + 1\n        else:\n            dp[i][0] = dp[i - 1][1] + 1\n            dp[i][1] = 0\n    ans = 0\n    for (i, j) in dp:\n        ans += max(i, j)\n    print(ans)", "t = int(input())\nfor x in range(t):\n    s = input()\n    ans = 0\n    c0 = 0\n    c1 = 0\n    prev = 0\n    for i in range(0, len(s)):\n        if s[i] == str(prev) or s[i] == '?':\n            c0 += 1\n        else:\n            c0 = 0\n        if s[i] == str(1 - prev) or s[i] == '?':\n            c1 += 1\n        else:\n            c1 = 0\n        ans += max(c0, c1)\n        prev = 1 - prev\n    print(ans)", "tc = int(input())\nfor _ in range(tc):\n    s = input()\n    (ans, c, i) = (0, 0, 0)\n    if s[0] == '?':\n        c += 1\n    n = len(s)\n    for j in range(1, n):\n        if s[j] == '?':\n            c += 1\n        elif c == 0:\n            if s[j] == s[j - 1]:\n                l = j - i\n                ans += (l * l + l) // 2\n                i = j\n        else:\n            x = j - c - 1\n            if not x == -1:\n                if c % 2 == 0:\n                    if s[x] == s[j]:\n                        l = j - i\n                        ans += (l * l + l) // 2\n                        i = x + 1\n                    else:\n                        ans += (c * c + c) // 2\n                elif s[x] != s[j]:\n                    l = j - i\n                    ans += (l * l + l) // 2\n                    i = x + 1\n                else:\n                    ans += (c * c + c) // 2\n            else:\n                ans += (c * c + c) // 2\n            c = 0\n    (count, l) = (0, n - i)\n    ans += (l * l + l) // 2\n    ans += (c * c + c) // 2\n    c = 0\n    for i in range(n):\n        if s[i] == '?':\n            c += 1\n        else:\n            ans -= (c * c + c) // 2\n            c = 0\n    ans -= (c * c + c) // 2\n    print(ans)", "import math\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [[0, 0] for i in range(n)]\n    if s[0] == '0':\n        dp[0][0] = 1\n    elif s[0] == '1':\n        dp[0][1] = 1\n    else:\n        dp[0][0] = 1\n        dp[0][1] = 1\n    for i in range(1, len(s)):\n        if s[i] == '?':\n            dp[i][0] = dp[i - 1][1] + 1\n            dp[i][1] = dp[i - 1][0] + 1\n        elif s[i] == '0':\n            dp[i][0] = dp[i - 1][1] + 1\n            dp[i][1] = 0\n        else:\n            dp[i][1] = dp[i - 1][0] + 1\n            dp[i][0] = 0\n    ans = 0\n    for i in dp:\n        ans += max(i[0], i[1])\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [[0, 0] for i in range(n + 1)]\n    for i in range(1, n + 1):\n        if s[i - 1] == '0':\n            dp[i][0] = dp[i - 1][1] + 1\n        elif s[i - 1] == '1':\n            dp[i][1] = dp[i - 1][0] + 1\n        else:\n            dp[i][0] = dp[i - 1][1] + 1\n            dp[i][1] = dp[i - 1][0] + 1\n    print(sum([max(dp[i]) for i in range(1, n + 1)]))", "from math import factorial\n\ndef print_sol(c, sol):\n    print('Case #{}: {}'.format(c, sol))\n\ndef rd_int():\n    return int(input())\n\ndef rd_str():\n    return input()\n\ndef rd_str_lst():\n    return input().split(' ')\n\ndef sp_str_lst():\n    return list(input())\n\ndef rd_int_lst():\n    return [int(i) for i in rd_str_lst()]\n\ndef sp_int_lst():\n    return [int(i) for i in sp_str_lst()]\n\ndef main():\n    t = rd_int()\n    for c in range(1, t + 1):\n        s = rd_str()\n        last = [[-1, -1], [-1, -1]]\n        ans = 0\n        for i in range(len(s)):\n            j = i - 1\n            p = i & 1\n            if s[i] != '1':\n                j = min(j, max(last[0][p ^ 1], last[1][p]))\n            if s[i] != '0':\n                j = min(j, max(last[1][p ^ 1], last[0][p]))\n            ans += i - j\n            if s[i] != '?':\n                last[int(s[i])][p] = i\n        print(ans)\nmain()", "def n(x):\n    return x * (x + 1) // 2\nt = int(input())\nfor _ in range(t):\n    x = input()\n    tmp = [0, 0, 0]\n    ans = 0\n    for i in range(len(x)):\n        if x[i] == '?':\n            tmp[0] += 1\n            tmp[1] += 1\n            tmp[2] += 1\n        else:\n            j = (int(x[i]) - i) % 2\n            nj = (j + 1) % 2\n            ans = ans - n(tmp[2]) + n(tmp[nj])\n            tmp[nj] = 0\n            tmp[2] = 0\n            tmp[j] += 1\n    ans = ans + n(tmp[0]) + n(tmp[1]) - n(tmp[2])\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    dp = [[0, 0] for i in range(n + 1)]\n    for i in range(1, n + 1):\n        if s[i - 1] == '0':\n            dp[i][0] = dp[i - 1][1] + 1\n        elif s[i - 1] == '1':\n            dp[i][1] = dp[i - 1][0] + 1\n        else:\n            dp[i][0] = dp[i - 1][1] + 1\n            dp[i][1] = dp[i - 1][0] + 1\n    ans = 0\n    for i in range(1, n + 1):\n        ans += max(dp[i])\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    l = [1, 0]\n    score = 0\n    for should in l:\n        curr = 0\n        good = []\n        for c in s:\n            if c == '?':\n                curr += 1\n            elif c == str(should):\n                curr += 1\n            else:\n                if curr > 0:\n                    good.append(curr)\n                curr = 0\n            should = l[should]\n        good.append(curr)\n        for g in good:\n            score += g * (g + 1) // 2\n    qgood = []\n    qcurr = 0\n    for c in s:\n        if c == '?':\n            qcurr += 1\n        else:\n            if qcurr > 0:\n                qgood.append(qcurr)\n            qcurr = 0\n    qgood.append(qcurr)\n    for q in qgood:\n        score -= q * (q + 1) // 2\n    print(score)", "def ff(n):\n    return sum(range(n + 1))\nfor _ in range(int(input())):\n    s = input()\n    x = 0\n    ch = ''\n    chp = ''\n    res = 0\n    q = 0\n    qq = False\n    for i in s:\n        if i == '?':\n            if chp in ['', '?']:\n                q += 1\n            else:\n                q = 1\n        if ch != i or i == '?':\n            x += 1\n        if ch == i:\n            res += ff(x)\n            if chp != '?':\n                q = 0\n            res -= ff(q)\n            qq = True\n            x = q + 1\n        if i != '?':\n            ch = i\n        elif ch:\n            ch = '1' if ch == '0' else '0'\n        chp = i\n    res += ff(x)\n    print(res)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    st = 0\n    v = []\n    i = 0\n    while i < n:\n        j = i\n        if i + 1 < n and s[i] != '?':\n            if s[i + 1] == s[i]:\n                v.append((i, i + 1))\n            i += 1\n            continue\n        elif i + 1 == n:\n            i += 1\n            continue\n        while j < n and s[j] == '?':\n            j += 1\n        if i - 1 < 0 or j == n:\n            i = j\n            continue\n        st = i - 1\n        en = j\n        cn = j - i\n        if cn & 1:\n            if s[st] != s[en]:\n                v.append((st, en))\n        elif s[st] == s[en]:\n            v.append((st, en))\n        i = j\n    st = 0\n    v.sort()\n    ans = 0\n    for x in v:\n        ans -= (x[1] - x[0] - 1) * (x[1] - x[0] - 1 + 1) // 2\n        ans += (x[1] - 1 - st + 1) * (x[1] - 1 - st + 1 + 1) // 2\n        st = x[0] + 1\n    ans += (n - 1 - st + 1) * (n - 1 - st + 1 + 1) // 2\n    print(ans)", "def isFine(x, choice):\n    if choice == '?':\n        if x == '?':\n            return (True, '?')\n        elif x == '1':\n            return (True, '0')\n        else:\n            return (True, '1')\n    elif choice == '1':\n        if x == '?' or x == '1':\n            return (True, '0')\n        else:\n            return (False, '?')\n    elif x == '0' or x == '?':\n        return (True, '1')\n    else:\n        return (False, '?')\nt = int(input())\nfor _ in range(t):\n    a = input()\n    n = len(a)\n    if n == 1:\n        print(1)\n    else:\n        choice = '?'\n        i = 0\n        ans = 0\n        count = 0\n        check = True\n        c = 0\n        temp = 0\n        while i < n:\n            if a[i] == '?':\n                if check:\n                    temp = i\n                    check = False\n            else:\n                check = True\n            (Fine, choice) = isFine(a[i], choice)\n            if Fine:\n                count += 1\n                i += 1\n            else:\n                if a[i - 1] == '?':\n                    p = i - temp\n                    i = temp\n                else:\n                    p = 0\n                c += p * (p + 1) // 2\n                ans += count * (count + 1) // 2\n                count = 0\n        ans += count * (count + 1) // 2 - c\n        print(ans)", "def solve():\n    N = len(A)\n    dp = [[0, 0] for i in range(N)]\n    for i in range(N):\n        if A[i] == '1' or A[i] == '?':\n            dp[i][1] = (dp[i - 1][0] if i > 0 else 0) + 1\n        if A[i] == '0' or A[i] == '?':\n            dp[i][0] = (dp[i - 1][1] if i > 0 else 0) + 1\n    ans = 0\n    for i in range(N):\n        ans += dp[i][0] + dp[i][1]\n        if A[i] == '?':\n            ans -= min(dp[i])\n    return ans\ntest_cases = int(input())\nfor test_case in range(test_cases):\n    A = input()\n    print(solve())", "for t in range(int(input())):\n    s = input()\n    n = len(s)\n    i = 0\n    count = 0\n    while i < n:\n        start = i\n        while i < n and s[i] == '?':\n            i += 1\n        if i == n:\n            count += (i - start) * (i - start + 1) // 2\n            break\n        c = s[i]\n        i += 1\n        while i < n:\n            c = '0' if c == '1' else '1'\n            if s[i] != '?' and s[i] != c:\n                break\n            i += 1\n        count += (i - start) * (i - start + 1) // 2\n        if i < n and s[i - 1] == '?':\n            end = i\n            i -= 1\n            while s[i] == '?':\n                i -= 1\n            i += 1\n            count -= (end - i) * (end - i + 1) // 2\n    print(count)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    ans = 0\n    cnt = 1\n    i = 0\n    while i < n:\n        while i < n and s[i] == '?':\n            ans += cnt\n            i += 1\n            cnt += 1\n        consequitive_q_marks = 0\n        j = i\n        while j < n:\n            if s[j] != '?':\n                if (i ^ j) & 1:\n                    if s[i] == s[j]:\n                        break\n                elif s[i] != s[j]:\n                    break\n                consequitive_q_marks = 0\n            else:\n                consequitive_q_marks += 1\n            ans += cnt\n            cnt += 1\n            j += 1\n        i = j\n        cnt = 1\n        if i > 0 and s[i - 1] == '?':\n            cnt += consequitive_q_marks\n    print(ans)"]