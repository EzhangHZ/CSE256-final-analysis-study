["(n, m, sx, sy) = map(int, input().split())\nsx -= 1\nsy -= 1\np = q = 0\nfor i in range(sy, -1, -1):\n    print(sx + 1, i + 1)\nfor i in range(sy + 1, m):\n    print(sx + 1, i + 1)\nfor i in range(sx + 1, n):\n    if (i - sx) % 2 != 0:\n        for j in range(m, 0, -1):\n            print(i + 1, j)\n    else:\n        for j in range(1, m + 1):\n            print(i + 1, j)\n    p = i + 1\n    q = j\nif q == 1:\n    for i in range(1, sx + 1):\n        if i % 2 != 0:\n            for j in range(1, m + 1):\n                print(i, j)\n        else:\n            for j in range(m, 0, -1):\n                print(i, j)\nelse:\n    for i in range(1, sx + 1):\n        if i % 2 != 0:\n            for j in range(m, 0, -1):\n                print(i, j)\n        else:\n            for j in range(1, m + 1):\n                print(i, j)", "import sys\nfrom math import *\n(n, m, x, y) = map(int, input().split())\nvis = [[0 for j in range(m + 1)] for i in range(n + 1)]\nprint(x, y)\nvis[x][y] = 1\nprint(1, y)\nvis[1][y] = 1\nprint(1, 1)\nvis[1][1] = 1\nc = 1\nfor i in range(1, n + 1):\n    if c == 1:\n        a = 1\n        b = m + 1\n    else:\n        a = m\n        b = 0\n    for j in range(a, b, c):\n        if not vis[i][j]:\n            print(i, j)\n            vis[i][j] = 1\n    c = -c", "(n, m, Sx, Sy) = map(int, input().split())\nprint(Sx, Sy)\nfor j in range(m):\n    if j != Sy - 1:\n        print(Sx, j + 1)\nfor j in range(m - 1, -1, -1):\n    if j % 2 == 0:\n        for i in range(n):\n            if i != Sx - 1:\n                print(i + 1, j + 1)\n    else:\n        for i in range(n - 1, -1, -1):\n            if i != Sx - 1:\n                print(i + 1, j + 1)", "(n, m, x, y) = map(int, input().split())\nprint(x, y)\nfor i in range(1, n * m):\n    if i % n == 0:\n        y = y % m + 1\n    else:\n        x = x % n + 1\n    print(x, y)", "(n, m, Sx, Sy) = map(int, input().split())\ni = Sx - 1\nj = Sy - 1\nc = 0\nwhile c < n:\n    cc = 0\n    while cc < m:\n        print(i + 1, j + 1)\n        cc += 1\n        j = (j + 1) % m\n    c += 1\n    i = (i + 1) % n\n    j = (j - 1) % m", "def boboniu(n, m, x, y):\n    print(x, y)\n    for i in reversed(range(1, x)):\n        print(i, y)\n    for i in range(x + 1, n + 1):\n        print(i, y)\n    x = i\n    flag = 0\n    for j in reversed(range(1, y)):\n        if flag == 0:\n            for i in reversed(range(1, n + 1)):\n                print(i, j)\n            flag = 1\n        else:\n            for i in range(1, n + 1):\n                print(i, j)\n            flag = 0\n    for j in range(y + 1, m + 1):\n        if flag == 0:\n            for i in reversed(range(1, n + 1)):\n                print(i, j)\n            flag = 1\n        else:\n            for i in range(1, n + 1):\n                print(i, j)\n            flag = 0\n(a, b, c, d) = map(int, input().split())\nboboniu(a, b, c, d)", "import sys\ninput = sys.stdin.readline\n(n, m, x, y) = map(int, input().split())\n(x, y) = (x - 1, y - 1)\nfor i in range(m):\n    for j in range(n):\n        print(x + 1, y + 1)\n        x = (x + 1) % n\n    x = (x - 1) % n\n    y = (y + 1) % m", "I = input\n(n, m, x, y) = map(int, I().split())\ns = y\nfor i in range(-1, n - 1):\n    for j in range(-1, m - 1):\n        print((i + x) % n + 1, (j + s) % m + 1)\n    s = (j + s) % m + 1", "(n, m, Sx, Sy) = map(int, input().split())\nprint(Sx, Sy)\nfor j in range(m):\n    if j != Sy - 1:\n        print(Sx, j + 1)\nfor j in range(m - 1, -1, -1):\n    if j % 2 == 0:\n        for i in range(n):\n            if i != Sx - 1:\n                print(i + 1, j + 1)\n    else:\n        for i in range(n - 1, -1, -1):\n            if i != Sx - 1:\n                print(i + 1, j + 1)", "(n, m, s, t) = map(int, input().split())\ns -= 1\nt -= 1\nss = s\nv = [[False for i in range(m)] for j in range(n)]\nv[s][t] = True\nprint(s + 1, t + 1)\n(s, t) = (s, 0)\nv[s][t] = True\nprint(s + 1, t + 1)\nwhile t < m:\n    if not v[ss][t]:\n        (s, t) = (ss, t)\n        print(s + 1, t + 1)\n        v[s][t] = True\n    for j in range(n):\n        if j == ss:\n            continue\n        if not v[j][t]:\n            (s, t) = (j, t)\n            print(s + 1, t + 1)\n            v[s][t] = True\n    t += 1\n    if t == m:\n        break\n    print(s + 1, t + 1)\n    v[s][t] = True", "def solve():\n    (n, m, x, y) = input().split()\n    n = int(n)\n    m = int(m)\n    x = int(x)\n    y = int(y)\n    print(x, y)\n    print(1, y)\n    for i in range(1, n + 1):\n        if i % 2 != 0:\n            for j in range(1, m + 1):\n                if i == x and j == y:\n                    continue\n                elif i == 1 and j == y:\n                    continue\n                else:\n                    print(i, j)\n        else:\n            for j in range(m, 0, -1):\n                if i == x and j == y:\n                    continue\n                elif i == 1 and j == y:\n                    continue\n                else:\n                    print(i, j)\nsolve()", "(n, m, x, y) = map(int, input().split())\nx -= 1\ny -= 1\nfor i in range(n):\n    for j in range(m - 1):\n        print(x + 1, y + 1)\n        y += 1\n        y %= m\n    print(x + 1, y + 1)\n    x += 1\n    x %= n", "(m, n, x, y) = map(int, input().split())\nprint(x, y)\nflag = False\nfor r in range(1, m + 1):\n    flag = not flag\n    for c in range(1, n + 1):\n        row = (x + r - 1) % m\n        if row == 0:\n            row = m\n        if flag:\n            col = c\n        else:\n            col = n + 1 - c\n        if (row, col) != (x, y):\n            print(row, col)", "A = [int(i) for i in input().split()]\nn = A[0]\nm = A[1]\nx = A[2]\ny = A[3]\na = x\nb = y\nwhile y <= m:\n    print(x, y)\n    y += 1\ny = b - 1\nwhile y >= 1:\n    print(x, y)\n    y -= 1\nt = 0\nfor i in range(n):\n    if i + 1 != a and t == 0:\n        for j in range(m):\n            print(i + 1, j + 1)\n        t = 1\n    elif i + 1 != a and t == 1:\n        for j in range(m):\n            print(i + 1, m - j)\n        t = 0", "(n, m, x, y) = map(int, input().split())\nx -= 1\ny -= 1\nfor i in range(n):\n    for j in range(m - 1):\n        print(x + 1, y + 1)\n        y += 1\n        y %= m\n    print(x + 1, y + 1)\n    x += 1\n    x %= n", "(n, m, x, y) = map(int, input().split())\nprint(x, y)\nprint(1, y)\nfor i in range(1, n + 1):\n    if i % 2 == 1:\n        for j in range(1, m + 1):\n            if [i, j] != [x, y] and [i, j] != [1, y]:\n                print(i, j)\n    else:\n        for j in range(m, 0, -1):\n            if [i, j] != [x, y] and [i, j] != [1, y]:\n                print(i, j)", "import sys\n\ndef answer(n, m, Sx, Sy):\n    print(Sx, Sy)\n    rptr = 0\n    cols = [int(i) for i in range(1, m + 1, 1)]\n    rows = [int(i) for i in range(Sx, 0, -1)]\n    rows.extend([int(i) for i in range(Sx + 1, n + 1, 1)])\n    for r in rows:\n        for c in cols:\n            if r == Sx and c == Sy:\n                pass\n            else:\n                print(r, c)\n        cols.reverse()\n    return\n\ndef main():\n    (n, m, Sx, Sy) = [int(i) for i in sys.stdin.readline().split()]\n    answer(n, m, Sx, Sy)\n    return\nmain()", "(n, m, x, y) = map(int, [*open(0)][0].split())\n(x, y) = (x - 1, y - 1)\nfor i in range(n):\n    print(x + 1, y + 1)\n    for j in range(m - 1):\n        y = (y + 1) % m\n        print(x + 1, y + 1)\n    x = (x + 1) % n", "(n, m, s_x, s_y) = map(int, input().split())\nans = [[s_x, s_y]]\nfor c in range(s_y + 1, m + 1):\n    ans.append([s_x, c])\nfor c in range(s_y - 1, 0, -1):\n    ans.append([s_x, c])\nstart = 1\nfor r in range(s_x + 1, n + 1):\n    if start:\n        for c in range(1, m + 1):\n            ans.append([r, c])\n        start = 0\n    else:\n        for c in range(m, 0, -1):\n            ans.append([r, c])\n        start = 1\nfor r in range(s_x - 1, 0, -1):\n    if start:\n        for c in range(1, m + 1):\n            ans.append([r, c])\n        start = 0\n    else:\n        for c in range(m, 0, -1):\n            ans.append([r, c])\n        start = 1\nfor i in ans:\n    print(*i)", "(ab, bb, x, y) = map(int, input().split())\nprint(x, y)\nfor g in range(1, bb + 1):\n    if g != y:\n        print(x, g)\n        m = True\n        r = x\nfor p in range(1, ab + 1):\n    if p != r:\n        for z in range(1, bb + 1):\n            if m == True:\n                z = bb - z + 1\n            print(p, z)\n        if m == True:\n            m = False\n        else:\n            m = True", "(n, m, y, x) = map(int, input().split())\nprint(y, x)\nfor i in range(1, x):\n    print(y, i)\nfor i in range(x + 1, m + 1):\n    print(y, i)\nfor i in range(1, y):\n    if i % 2 == 1:\n        for j in range(m, 0, -1):\n            print(i, j)\n    else:\n        for j in range(1, m + 1):\n            print(i, j)\nfor i in range(y + 1, n + 1):\n    if i % 2 == 0:\n        for j in range(m, 0, -1):\n            print(i, j)\n    else:\n        for j in range(1, m + 1):\n            print(i, j)", "(n, m, x, y) = [int(k) for k in input().split()]\nprint(x, y)\nfor j in range(m):\n    if j + 1 != y:\n        print(x, j + 1)\n        r = j + 1\n    else:\n        r = y\nz = r\nfor j in range(1, n + 1):\n    if j != x:\n        print(j, r)\n        for k in range(1, m + 1):\n            if k != r:\n                print(j, k)\n                z = k\n    r = z", "(n, m, x, y) = map(int, input().split())\nprint(x, y)\nx1 = 1\ny1 = y\nprint(x1, y1)\nk = 1\nj = 1\nfor i in range(1, n + 1):\n    while 0 < j < m + 1:\n        if (i != x or j != y) and (i != x1 or j != y1):\n            print(i, j)\n        j = j + k\n    k = -k\n    j += k", "(n, m, x, y) = map(int, input().split())\ns = y\nfor i in range(-1, n - 1):\n    for j in range(-1, m - 1):\n        print((i + x) % n + 1, (j + s) % m + 1)\n    s = (j + s) % m + 1", "def main():\n    (n, m, fx, fy) = map(int, input().split())\n    (sx, sy) = (1, fy)\n    ANS = []\n    ANS.append((fx, fy))\n    if fx != 1:\n        ANS.append((sx, sy))\n    for i in range(1, n + 1):\n        if i % 2 == 1:\n            for j in range(1, m + 1):\n                if i == fx and j == fy or (i == sx and j == fy):\n                    continue\n                ANS.append((i, j))\n        else:\n            for j in range(m, 0, -1):\n                if i == fx and j == fy or (i == sx and j == fy):\n                    continue\n                ANS.append((i, j))\n    print('\\n'.join([' '.join(map(str, ans)) for ans in ANS]))\nmain()", "from sys import stdin\ninput = stdin.readline\n(n, m, a, b) = map(int, input().split())\ns = [[a, b], [1, b]]\nprint(a, b)\nprint(1, b)\nfor x in range(1, n + 1):\n    if x % 2 == 1:\n        for y in range(1, m + 1):\n            if [x, y] not in s:\n                print(x, y)\n    else:\n        for y in range(m, 0, -1):\n            if [x, y] not in s:\n                print(x, y)", "def solve():\n    (n, m, x, y) = list(map(int, input().split()))\n    visited = set()\n    print('{} {}'.format(x, y))\n    visited.add((x, y))\n    y = 1\n    print('{} {}'.format(x, y))\n    visited.add((x, y))\n    top = True\n    for col in range(1, m + 1):\n        if top == True:\n            for row in range(1, n + 1):\n                if (row, col) not in visited:\n                    print('{} {}'.format(row, col))\n                    visited.add((row, col))\n            top = False\n        else:\n            for row in range(n, 0, -1):\n                if (row, col) not in visited:\n                    print('{} {}'.format(row, col))\n                    visited.add((row, col))\n            top = True\nsolve()", "(n, m, x, y) = map(int, input().split())\n(a, b) = (x, y)\nprint(a, b)\nfor i in range(1, m + 1):\n    if i != b:\n        print(a, i)\nb = m\nco = 0\nfor i in range(1, n + 1):\n    if i == x:\n        continue\n    if co % 2 == 0:\n        for j in reversed(range(1, m + 1)):\n            print(i, j)\n    else:\n        for j in range(1, m + 1):\n            print(i, j)\n    co += 1", "import sys\n\ndef main():\n    (n, m, sx, sy) = map(int, sys.stdin.readline().split())\n    P = [(sx, sy), (1, sy), (1, 1)]\n    dy = 1\n    (tx, ty) = (1, 1)\n    for i in range(1, n + 1):\n        for j in range(1, m + 1):\n            ty += dy\n            if ty > m:\n                tx += 1\n                ty = m\n                dy = -dy\n            elif ty < 1:\n                tx += 1\n                ty = 1\n                dy = -dy\n            elif tx == 1 and ty == sy or (tx == sx and ty == sy):\n                continue\n            P.append((tx, ty))\n    print('\\n'.join((' '.join(map(str, p)) for p in P[:-1])))\nmain()", "(n, m, line, column) = [int(element) for element in input().split(' ')]\nanswer = []\nif column == 1:\n    for y in range(1, m + 1):\n        answer.append(str(line) + ' ' + str(y))\n    actual = m\nelif column == m:\n    for y in range(m):\n        answer.append(str(line) + ' ' + str(m - y))\n    actual = 1\nelse:\n    answer.append(str(line) + ' ' + str(column))\n    for y in range(1, m + 1):\n        if y != column:\n            answer.append(str(line) + ' ' + str(y))\n    actual = m\nfor i in range(1, n + 1):\n    if i != line:\n        if actual == 1:\n            for j in range(1, m + 1):\n                answer.append(str(i) + ' ' + str(j))\n            actual = m\n        else:\n            for j in range(m):\n                answer.append(str(i) + ' ' + str(m - j))\n            actual = 1\nprint('\\n'.join(answer))", "(n, m, sx, sy) = map(int, input().split())\nr = sx\nc = sy\nfor i in range(r, 0, -1):\n    print(i, c)\nfor i in range(r + 1, n + 1):\n    print(i, c)\nc += 1\nlast = 1\nwhile c <= m:\n    if last == 0:\n        for i in range(1, n + 1):\n            print(i, c)\n            last = 1\n    else:\n        for i in range(n, 0, -1):\n            print(i, c)\n            last = 0\n    c += 1\nc = 1\nwhile c < sy:\n    if last == 0:\n        for i in range(1, n + 1):\n            print(i, c)\n            last = 1\n    else:\n        for i in range(n, 0, -1):\n            print(i, c)\n            last = 0\n    c += 1", "(a, b, c, d) = map(int, input().split())\nfor j in range(d, b + 1):\n    print(c, j)\nfor j in range(d - 1, 0, -1):\n    print(c, j)\nfor j in range(c + 1, a + 1):\n    if c % 2 == 0 and j % 2 != 0 or (c % 2 != 0 and j % 2 == 0):\n        for k in range(1, b + 1):\n            print(j, k)\n    else:\n        for k in range(b, 0, -1):\n            print(j, k)\ne = k\nfor j in range(1, c):\n    if j % 2 != 0:\n        if e == b:\n            for k in range(b, 0, -1):\n                print(j, k)\n        else:\n            for k in range(1, b + 1):\n                print(j, k)\n    elif e == b:\n        for k in range(1, b + 1):\n            print(j, k)\n    else:\n        for k in range(b, 0, -1):\n            print(j, k)", "(n, m, sx, sy) = map(int, input().split())\nvisited = set()\nvisited.add((sx, sy))\nprint(sx, sy)\nvisited.add((1, sy))\nprint(1, sy)\nfor i in range(1, n + 1):\n    if i % 2 != 0:\n        for j in range(m, 0, -1):\n            if (i, j) not in visited:\n                visited.add((i, j))\n                print(i, j)\n    else:\n        for j in range(1, m + 1):\n            if (i, j) not in visited:\n                visited.add((i, j))\n                print(i, j)", "(m, n, Sx, Sy) = map(int, input().split())\nx = Sx\ny = Sy\nprint(x, y)\nwhile y <= n:\n    F = Sx != 1 and Sx != m\n    while x < m and (Sx == 1 or F):\n        x += 1\n        print(x, y)\n    if F:\n        x = Sx - 1\n        print(x, y)\n    while x > 1 and (Sx == m or F):\n        x -= 1\n        print(x, y)\n    Sx = x\n    if y == n:\n        y = 1\n    elif y == Sy - 1:\n        break\n    else:\n        y += 1\n    print(x, y)", "import sys\npr = sys.stdout.write\n\ndef main():\n    (n, m, x, y) = map(int, [*open(0)][0].split())\n    pr(f'{x} {y}\\n')\n    t = -1\n    for i in range(1, n + 1):\n        if i != x:\n            pr(f'{i} {y}\\n')\n    for j in range(1, m + 1):\n        if j == y:\n            continue\n        for i in range(*((1, n + 1) if t > 0 else (n, 0)), t):\n            pr(f'{i} {j}\\n')\n        t *= -1\nmain()", "(m, n, x, y) = map(int, input().split())\nfor i in range(m):\n    if not i & 1:\n        for j in range(n):\n            print((x + i - 1) % m + 1, (y + j - 1) % n + 1)\n    else:\n        for j in range(n - 1, -1, -1):\n            print((x + i - 1) % m + 1, (y + j - 1) % n + 1)", "(n, m, x, y) = map(int, input().split())\na = [x, y]\nb = [1, y]\nprint(*a)\nprint(*b)\nfor i in range(1, n + 1):\n    if i % 2 != 0:\n        for j in range(1, m + 1):\n            if [i, j] not in [a, b]:\n                print(i, j)\n    else:\n        for j in range(m, 0, -1):\n            if [i, j] not in [a, b]:\n                print(i, j)", "(n, m, x, y) = map(int, input().split())\na = [x, y]\nb = [1, y]\nprint(*a)\nprint(*b)\nfor i in range(1, n + 1):\n    if i % 2 != 0:\n        for j in range(1, m + 1):\n            if [i, j] not in [a, b]:\n                print(i, j)\n    else:\n        for j in range(m, 0, -1):\n            if [i, j] not in [a, b]:\n                print(i, j)", "(n, m, x, y) = map(int, input().split())\nk = y\nwhile k > 0:\n    print(f'{x} {k}')\n    k -= 1\nflag = False\ni = x\nj = y + 1\nturn = 1\nwhile i <= n and i > 0:\n    if turn == 1 or turn % 2 != 0:\n        if turn > 1:\n            j = 1\n        while j < m + 1:\n            print(f'{i} {j}')\n            j += 1\n        turn += 1\n    elif turn % 2 == 0:\n        j = m\n        while j > 0:\n            print(f'{i} {j}')\n            j -= 1\n        turn += 1\n    if flag == False:\n        i += 1\n    if i == n + 1:\n        flag = True\n        i = x - 1\n        j = 1\n    elif flag:\n        i -= 1\n        j = 1", "(n, m, x_real, y_real) = map(int, input().split())\n(x, y) = (x_real, y_real)\nwhile x <= n:\n    print(x, y)\n    x += 1\nx = x_real\nwhile x > 1:\n    x -= 1\n    print(x, y)\nwhile y > 1:\n    y -= 1\n    if x == 1:\n        while x <= n:\n            print(x, y)\n            x += 1\n        x = n\n    elif x == n:\n        while x >= 1:\n            print(x, y)\n            x -= 1\n        x = 1\ny = y_real + 1\nwhile y <= m:\n    if x == 1:\n        while x <= n:\n            print(x, y)\n            x += 1\n        x = n\n    elif x == n:\n        while x >= 1:\n            print(x, y)\n            x -= 1\n        x = 1\n    y += 1", "import sys\n(n, m, x, y) = map(int, input().split(' '))\nchess = [[0 for _ in range(m + 2)] for _ in range(n + 2)]\nfor i in range(n):\n    for j in range(m):\n        chess[x][y] = 1\n        print(x, y)\n        (x_, y_) = (x, y + 1)\n        if y_ > m or chess[x][y_] == 1:\n            y_ = 1\n            if chess[x][y_] == 1:\n                x_ = x - 1\n                y_ = y\n                if x_ < 1:\n                    x_ = n\n        (x, y) = (x_, y_)", "(n, m, x, y) = map(int, input().split())\nfor i in range(n):\n    for j in range(m):\n        print(x, y)\n        if y == m:\n            y = 1\n        else:\n            y += 1\n    if y == 1:\n        y = m\n    else:\n        y -= 1\n    if x == n:\n        x = 1\n    else:\n        x += 1", "(m, n, sx, sy) = list(map(int, input().split()))\n(cx, cy) = (sx, sy)\nprint(sx, sy)\nwhile cx < m:\n    cx += 1\n    print(cx, cy)\n(cx, cy) = (sx - 1, sy)\nprint(cx, cy)\ndir = -1\nwhile cy > 0:\n    while dir == -1 and cx > 1 or (dir == 1 and cx < m):\n        cx += dir\n        print(cx, cy)\n    dir *= -1\n    cy -= 1\n    if 0 < cx <= m and 0 < cy <= n:\n        print(cx, cy)\ncy = sy + 1\nif 0 < cx <= m and 0 < cy <= n:\n    print(cx, cy)\nif cx == 1:\n    dir = 1\nelse:\n    dir = -1\nwhile cy <= n:\n    while dir == -1 and cx > 1 or (dir == 1 and cx < m):\n        cx += dir\n        print(cx, cy)\n    dir *= -1\n    cy += 1\n    if 0 < cx <= m and 0 < cy <= n:\n        print(cx, cy)", "read = input\nrn = lambda : list(map(int, read().split()))\n(n, m, sx, sy) = rn()\n\ndef on_row(sx, sy):\n    for i in range(sy, sy + m):\n        if i > m:\n            i -= m\n        print(sx, i)\non_row(sx, sy)\nnext_sy = sy\nfor i in range(1, n + 1):\n    if i == sx:\n        continue\n    next_sx = i\n    next_sy = next_sy - 1\n    if next_sy == 0:\n        next_sy = m\n    on_row(next_sx, next_sy)", "a = [int(x) for x in input('').split()]\nn = a[0]\nm = a[1]\nsx = a[2]\nsy = a[3]\n\ndef move(n, m, i):\n    if i == -1:\n        for j in range(m, 0, i):\n            print(n, j)\n    else:\n        for k in range(1, m + 1, i):\n            print(n, k)\nprint(sx, sy)\nfor m in range(1, m + 1):\n    if m != sy:\n        print(sx, m)\ni = -1\nfor l in range(1, n + 1):\n    if l != sx:\n        move(l, m, i)\n        if i == -1:\n            i = 1\n        else:\n            i = -1", "def sol(n, m, x, y):\n    for i in range(y, 0, -1):\n        print(x, i)\n    for i in range(y + 1, m + 1):\n        print(x, i)\n    flag = 1\n    for i in range(1, n + 1):\n        if i != x:\n            if flag % 2:\n                for j in range(m, 0, -1):\n                    print(i, j)\n                flag += 1\n            else:\n                for j in range(1, m + 1):\n                    print(i, j)\n                flag += 1\n(n, m, x, y) = list(map(int, input().split(' ')))\nsol(n, m, x, y)", "def fu(a, b, d, x):\n    for i in range(a, b, d):\n        print(x, i)\n(n, m, x, y) = input().split()\nn = int(n)\nm = int(m)\nx = int(x)\ny = int(y)\nfor i in range(y, m + 1):\n    print(x, i)\nfor i in range(y - 1, 0, -1):\n    print(x, i)\nc = 0\nfor i in range(x + 1, n + 1):\n    if c == 0:\n        fu(1, m + 1, 1, i)\n        c = 1\n    else:\n        fu(m, 0, -1, i)\n        c = 0\nfor i in range(1, x):\n    if c == 0:\n        fu(1, m + 1, 1, i)\n        c = 1\n    else:\n        fu(m, 0, -1, i)\n        c = 0", "(n, m, x, y) = map(int, input().split())\nstart_x = x\nstart_y = y\nwhile x <= n:\n    print(x, y)\n    x += 1\nx = start_x - 1\nwhile x > 0:\n    print(x, y)\n    x -= 1\nx = 1\ny -= 1\nup = True\nwhile y > 0:\n    if up:\n        while x <= n:\n            print(x, y)\n            x += 1\n        x = n\n        up = False\n    else:\n        while x > 0:\n            print(x, y)\n            x -= 1\n        x = 1\n        up = True\n    y -= 1\ny = start_y + 1\nwhile y <= m:\n    if up:\n        while x <= n:\n            print(x, y)\n            x += 1\n        x = n\n        up = False\n    else:\n        while x > 0:\n            print(x, y)\n            x -= 1\n        x = 1\n        up = True\n    y += 1", "(n, m, x, y) = map(int, input().split())\nfor i in range(n):\n    if i % 2 == 0:\n        for j in range(m):\n            print(f'{(i + x - 1) % n + 1} {(j + y - 1) % m + 1}')\n    else:\n        for j in range(m - 1, -1, -1):\n            print(f'{(i + x - 1) % n + 1} {(j + y - 1) % m + 1}')", "def chessruta(rows, columns, casilla_fila, casilla_columna, x):\n    print(casilla_fila, casilla_columna)\n    ultima = 0\n    for i in range(1, columns + 1):\n        if i == casilla_columna:\n            continue\n        else:\n            print(casilla_fila, i)\n            ultima = i\n    if casilla_fila + 1 <= rows and casilla_fila + 1 != x:\n        chessruta(rows, columns, casilla_fila + 1, ultima, x)\n    elif casilla_fila + 1 == x:\n        return\n    else:\n        chessruta(rows, columns, 1, ultima, x)\n(rows, columns, casilla_fila, casilla_columna) = list(map(int, input().split()))\nchessruta(rows, columns, casilla_fila, casilla_columna, casilla_fila)", "import math\n(n, m, x, y) = map(int, input().split())\na = [i + 1 for i in range(0, n)]\nfor l in range(0, n):\n    b = [ii + 1 for ii in range(0, m)]\n    e = a.pop(max(-1, x - 1))\n    x = x - 1\n    for k in range(0, m):\n        f = b.pop(max(y - 1, -1))\n        y = y - 1\n        print(e, f)\n        if k == m - 1:\n            y = f", "(n, m, Sx, Sy) = map(int, input().split())\ncol = 0\nx = 0\nprint(Sx, Sy)\nfor i in range(1, m + 1):\n    if i != Sy:\n        print(Sx, i)\n        col = i\nfor i in range(1, n + 1):\n    if i == Sx:\n        continue\n    else:\n        print(i, col)\n        for k in range(1, m + 1):\n            if k != col:\n                print(i, k)\n                x = k\n        col = x", "(n, m, x, y) = map(int, input().split())\nprint(x, y)\nprint(1, y)\nans = ''\nfor i in range(1, n + 1, 2):\n    for j in range(1, m + 1):\n        if j == y and i in [1, x]:\n            continue\n        ans += f'{i} {j}\\n'\n    for j in range(m, 0, -1):\n        if i == n:\n            break\n        if j == y and i + 1 in [1, x]:\n            continue\n        ans += f'{i + 1} {j}\\n'\nprint(ans)", "(n, m, x, y) = map(int, input().split())\n\ndef newposition(i, j):\n    i = (i + x - 2) % n + 1\n    j = (j + y - 2) % m + 1\n    return str(i) + ' ' + str(j)\nfor i in range(1, n + 1):\n    if i % 2 == 1:\n        for j in range(1, m + 1):\n            print(newposition(i, j))\n    else:\n        for j in range(m, 0, -1):\n            print(newposition(i, j))", "(n, m, sx, sy) = map(int, input().split())\n(x, y) = (sx, sy)\nfor r in range(n):\n    for c in range(m):\n        print(x, y)\n        y = 1 if y == m else y + 1\n    y = m if y == 1 else y - 1\n    x = 1 if x == n else x + 1", "(n, m, x, y) = map(int, input().split())\nprint(x, y)\nfor i in range(y + 1, m + 1):\n    print(x, i)\nfor i in range(y - 1, 0, -1):\n    print(x, i)\npre = 1\ntemp = [i for i in range(1, n + 1) if i != x]\nwhile temp:\n    val = temp.pop()\n    if pre == 1:\n        for i in range(1, m + 1):\n            print(val, i)\n        pre = m\n    else:\n        for i in range(m, 0, -1):\n            print(val, i)\n        pre = 1", "(n, m, x, y) = map(int, input().split())\ncols = set(range(1, m + 1)) - {y}\nprint(x, y)\nfor i in cols:\n    y = i\n    print(x, y)\nlines = set(range(1, n + 1)) - {x}\nfor i in lines:\n    x = i\n    print(x, y)\n    cols = set(range(1, m + 1)) - {y}\n    for j in cols:\n        y = j\n        print(x, y)", "(n, m, Sx, Sy) = list(map(int, input().split()))\nprint(Sx, Sy)\nprint(1, Sy)\nfor i in range(1, n + 1):\n    if i % 2 == 1:\n        for j in range(1, m + 1):\n            if i == 1 and j == Sy or (i == Sx and j == Sy):\n                pass\n            else:\n                print(i, j)\n    else:\n        for j in range(m, 0, -1):\n            if i == Sx and j == Sy:\n                pass\n            else:\n                print(i, j)", "(m, n, x, y) = map(int, input().split())\nfor j in range(y, n + 1):\n    print('{} {}'.format(x, j))\nfor j in range(y - 1, 0, -1):\n    print('{} {}'.format(x, j))\nfor i in range(x + 1, m + 1):\n    if j == 1:\n        for j in range(1, n + 1):\n            print('{} {}'.format(i, j))\n    else:\n        for j in range(n, 0, -1):\n            print('{} {}'.format(i, j))\nfor i in range(x - 1, 0, -1):\n    if j == 1:\n        for j in range(1, n + 1):\n            print('{} {}'.format(i, j))\n    else:\n        for j in range(n, 0, -1):\n            print('{} {}'.format(i, j))", "(n, m, x, y) = list(map(int, input().split()))\n\ndef visit_all_cell(n, m, x, y, orin_x, orin_y):\n    print(x, y)\n    x += 1\n    if x > n:\n        x = 1\n    while x != orin_x:\n        print(x, y)\n        x += 1\n        if x > n:\n            x = 1\n    x -= 1\n    if x == 0:\n        x = n\n    y += 1\n    if y > m:\n        y = 1\n    if y == orin_y:\n        return\n    visit_all_cell(n, m, x, y, x, orin_y)\nvisit_all_cell(n, m, x, y, x, y)", "A = [int(i) for i in input().split()]\nAns = []\nbool = True\nAns.append(f'{A[2]} {A[3]}')\nfor i in range(0, A[1]):\n    if A[1] - i != A[3]:\n        Ans.append(f'{A[2]} {A[1] - i}')\nfor i in range(0, A[0]):\n    if i + 1 != A[2]:\n        if bool:\n            for j in range(0, A[1]):\n                Ans.append(f'{i + 1} {j + 1}')\n        else:\n            for j in range(0, A[1]):\n                Ans.append(f'{i + 1} {A[1] - j}')\n        bool = not bool\nfor i in Ans:\n    print(i)", "from sys import stdin, stdout\n\ndef rl(p, q):\n    while q > 0:\n        print(p, q)\n        q -= 1\n\ndef lr(p, q):\n    while q <= c:\n        print(p, q)\n        q += 1\nfor _ in range(1):\n    (r, c, x, y) = map(int, stdin.readline().split())\n    (sx, sy) = (x, y)\n    while y > 0:\n        print(x, y)\n        y -= 1\n    for yy in range(sy + 1, c + 1):\n        print(x, yy)\n    y = c\n    x += 1\n    while x <= r:\n        if y == c:\n            rl(x, y)\n            y = 1\n        elif y == 1:\n            lr(x, y)\n            y = c\n        x += 1\n    x = sx - 1\n    while x >= 1:\n        if y == c:\n            rl(x, y)\n            y = 1\n        elif y == 1:\n            lr(x, y)\n            y = c\n        x -= 1", "(n, m, sx, sy) = list(map(int, input().split()))\nfor i in range(sx, n + 1):\n    print(i, sy)\nfor i in range(1, sx):\n    print(sx - i, sy)\np = (sx - i, sy)\nfor i in range(sy + 1, m + 1):\n    for j in range(1, n + 1):\n        if p[0] == 1:\n            print(j, i)\n            f = (j, i)\n        else:\n            print(n + 1 - j, i)\n            f = (n + 1 - j, i)\n    p = f\nfor i in range(1, sy):\n    for j in range(1, n + 1):\n        if p[0] == 1:\n            print(j, i)\n            f = (j, i)\n        else:\n            print(n + 1 - j, i)\n            f = (n + 1 - j, i)\n    p = f", "def res_print(row, col):\n    print(str(row) + ' ' + str(col))\n\ndef sol(num_rows, num_cols, start_row, start_col):\n    res_print(start_row, start_col)\n    row = start_row\n    while row > 1:\n        row -= 1\n        res_print(row, start_col)\n    row = start_row\n    while row < num_rows:\n        row += 1\n        res_print(row, start_col)\n    col = start_col\n    while col > 1:\n        col -= 1\n        if row == 1:\n            res_print(row, col)\n            while row < num_rows:\n                row += 1\n                res_print(row, col)\n        else:\n            res_print(row, col)\n            while row > 1:\n                row -= 1\n                res_print(row, col)\n    col = start_col\n    while col < num_cols:\n        col += 1\n        if row == 1:\n            res_print(row, col)\n            while row < num_rows:\n                row += 1\n                res_print(row, col)\n        else:\n            res_print(row, col)\n            while row > 1:\n                row -= 1\n                res_print(row, col)\n\ndef main():\n    (num_rows, num_cols, start_row, start_col) = list(map(int, input().split()))\n    sol(num_rows, num_cols, start_row, start_col)\nmain()", "(n, m, x, y) = [int(x1) for x1 in input().split()]\ny1 = y\nx1 = x\nprint(x, y)\nwhile y > 1:\n    y = y - 1\n    print(x, y)\ny = y1\nwhile y < m:\n    y = y + 1\n    print(x, y)\nc = 0\nwhile x < n:\n    x = x + 1\n    if c % 2 == 0:\n        while y >= 1:\n            print(x, y)\n            y = y - 1\n        y = 1\n        c = 1\n    else:\n        while y <= m:\n            print(x, y)\n            y += 1\n        y = m\n        c = 0\nx = 1\nc = 0\nz = y\nif z == 1:\n    while x < x1:\n        if c == 0:\n            while y <= m:\n                print(x, y)\n                y += 1\n            c = 1\n            y = m\n        else:\n            while y >= 1:\n                print(x, y)\n                y -= 1\n            c = 0\n            y = 1\n        x = x + 1\n    c = 0\nelif z == m:\n    while x < x1:\n        if c == 0:\n            while y >= 1:\n                print(x, y)\n                y -= 1\n            c = 1\n            y = 1\n        else:\n            while y <= m:\n                print(x, y)\n                y += 1\n            c = 0\n            y = m\n        x = x + 1", "(n, m, x, y) = map(int, input().split())\ncurr_x = x\ncurr_y = y\n\ndef func(curr_x, curr_y):\n    temp = None\n    for i in range(curr_y, m + 1):\n        print(curr_x, i)\n        temp = i\n    for i in range(1, curr_y):\n        print(curr_x, i)\n        temp = i\n    curr_y = temp\n    return (curr_x + 1, curr_y)\nfor i in range(curr_x, n + 1):\n    (curr_x, curr_y) = func(curr_x, curr_y)\ncurr_x = 1\nfor i in range(1, x):\n    (curr_x, curr_y) = func(curr_x, curr_y)", "import sys\n\ndef mover(r, c, n, m):\n    l1 = c\n    countr = 0\n    countl = 0\n    while l1 >= 1:\n        countr = 1\n        print('{} {}'.format(r, l1))\n        l1 -= 1\n    l1 = c + 1\n    while l1 <= m:\n        countl = 1\n        print('{} {}'.format(r, l1))\n        l1 += 1\n    if countl == 0:\n        return 1\n    else:\n        return m\n(n, m, s1, s2) = map(int, sys.stdin.readline().split())\nk = s1\np = s2\ncounter = 0\nwhile k >= 1:\n    p = mover(k, p, n, m)\n    k -= 1\nk = s1 + 1\nwhile k <= n:\n    p = mover(k, p, n, m)\n    k += 1", "(n, m, pi, pj) = map(int, input().split())\ncnt = -1\nfor i in range(pi, 0, -1):\n    print(i, pj)\nfor i in range(pi + 1, n + 1):\n    print(i, pj)\ncnt = 0\nfor i in range(pj + 1, m + 1):\n    if cnt % 2 == 0:\n        for j in range(n, 0, -1):\n            print(j, i)\n    else:\n        for j in range(1, n + 1):\n            print(j, i)\n    cnt += 1\nif cnt % 2 == 0:\n    snt = 0\n    for i in range(pj - 1, 0, -1):\n        if snt % 2 == 0:\n            for j in range(n, 0, -1):\n                print(j, i)\n        else:\n            for j in range(1, n + 1):\n                print(j, i)\n        snt += 1\nelse:\n    snt = 0\n    for i in range(pj - 1, 0, -1):\n        if snt % 2 == 0:\n            for j in range(1, n + 1):\n                print(j, i)\n        else:\n            for j in range(n, 0, -1):\n                print(j, i)\n        snt += 1", "(n, m, sx, sy) = map(int, input().split())\nprint(sx, sy)\nfor i in range(sy - 1, 0, -1):\n    print(sx, i)\nfor i in range(sy + 1, m + 1):\n    print(sx, i)\nc = 0\nfor i in range(sx - 1, 0, -1):\n    if c % 2 == 1:\n        for j in range(1, m + 1):\n            print(i, j)\n        c += 1\n    else:\n        for j in range(m, 0, -1):\n            print(i, j)\n        c += 1\nfor i in range(sx + 1, n + 1):\n    if c % 2 == 1:\n        for j in range(1, m + 1):\n            print(i, j)\n        c += 1\n    else:\n        for j in range(m, 0, -1):\n            print(i, j)\n        c += 1", "import sys\nsys.setrecursionlimit(10 ** 5)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n(h, w, sx, sy) = MI()\n(i, j) = (sx - 1, sy - 1)\nrow = [False] * h\nwhile row[i] == False:\n    col = [False] * w\n    while 1:\n        print(i + 1, j + 1)\n        col[j] = True\n        if col[(j + 1) % w]:\n            break\n        j = (j + 1) % w\n    row[i] = True\n    i = (i + 1) % h", "(n, m, x, y) = map(int, input().split())\nx -= 1\ny -= 1\nfor j in range(n):\n    for i in range(m - 1):\n        print(x + 1, y + 1)\n        y += 1\n        y %= m\n    print(x + 1, y + 1)\n    x += 1\n    x %= n", "(n, m, sx, sy) = [int(x) for x in input().split()]\nfor i in range(sy, 0, -1):\n    print(sx, end=' ')\n    print(i)\nfor i in range(sy + 1, m + 1):\n    print(sx, end=' ')\n    print(i)\nx = 'r'\nfor i in range(1, n + 1):\n    if sx - i > 0:\n        if x == 'r':\n            for j in range(m, 0, -1):\n                print(sx - i, end=' ')\n                print(j)\n            x = 'l'\n        elif x == 'l':\n            for j in range(1, m + 1):\n                print(sx - i, end=' ')\n                print(j)\n            x = 'r'\n    if sx + i <= n:\n        if x == 'l':\n            for j in range(1, m + 1):\n                print(sx + i, end=' ')\n                print(j)\n            x = 'r'\n        elif x == 'r':\n            for j in range(m, 0, -1):\n                print(sx + i, end=' ')\n                print(j)\n            x = 'l'", "(n, m, x, y) = map(int, input().split())\nmat = [[False] * m for i in range(n)]\nx -= 1\ny -= 1\n(i, j) = (x, y)\nprint(i + 1, j + 1)\nmat[i][j] = True\nprint(1, j + 1)\nmat[0][j] = True\nfront = True\n(i, j) = (0, 0)\nwhile i < n and j < m:\n    if not mat[i][j]:\n        print(i + 1, j + 1)\n        mat[i][j] = True\n    if j == m - 1 and front or (j == 0 and (not front)):\n        i += 1\n        front = not front\n    elif front:\n        j += 1\n    else:\n        j -= 1", "(n, m, x, y) = map(int, input('').split())\nprint(x, y)\nvar = 1\nfor i in range(1, m + 1):\n    if i == y:\n        continue\n    else:\n        print(x, i)\nfor i in range(1, n + 1):\n    if i == x:\n        continue\n    elif var % 2 == 0:\n        var += 1\n        for j in range(1, m + 1):\n            print(i, j)\n    else:\n        var += 1\n        for j in range(m, 0, -1):\n            print(i, j)", "(n, m, x, y) = map(int, input().split(' '))\nprint(x, y)\n(x1, y1) = (x, y)\nfor i in range(1, n):\n    if x < n:\n        x += 1\n        print(x, y)\n    else:\n        x1 -= 1\n        print(x1, y)\nelse:\n    x = x1 - 1\n    k = 1\nfor j in range(1, m):\n    if y1 != j:\n        y = k\n    else:\n        k = j + 1\n        y = k\n    k += 1\n    for i in range(1, n + 1):\n        if x < n:\n            x += 1\n            x1 = x\n            print(x, y)\n        else:\n            x1 -= 1\n            print(x1, y)\n    else:\n        x = x1 - 1", "[n, m, x, y] = [int(p) for p in input().split()]\nprint('{x1} {y1}'.format(x1=x, y1=y))\nprint('{x1} {y1}'.format(x1=1, y1=y))\nfor i in range(1, n + 1):\n    if i % 2 == 1:\n        for j in range(1, m + 1):\n            if i == 1 and j == y:\n                continue\n            elif i == x and j == y:\n                continue\n            else:\n                print('{x1} {y1}'.format(x1=i, y1=j))\n    else:\n        for j in range(m, 0, -1):\n            if i == x and j == y:\n                continue\n            else:\n                print('{x1} {y1}'.format(x1=i, y1=j))", "(n, m, X, Y) = map(int, input().split(' '))\nfor x in range(X, n + 1):\n    print('{} {}'.format(x, Y))\n    for y in range(Y + 1, m + 1):\n        print('{} {}'.format(x, y))\n    for y in range(1, Y):\n        print('{} {}'.format(x, y))\n    Y -= 1\n    if Y == 0:\n        Y = m\nfor x in range(1, X):\n    print('{} {}'.format(x, Y))\n    for y in range(Y + 1, m + 1):\n        print('{} {}'.format(x, y))\n    for y in range(1, Y):\n        print('{} {}'.format(x, y))\n    Y -= 1\n    if Y == 0:\n        Y = m", "(n, m, x, y) = map(int, input().split())\nprint(x, y)\nj = 1\nfor i in range(x, n + 1):\n    if j == 1:\n        for j in range(1, m + 1):\n            if i == x and j == y:\n                continue\n            else:\n                print(i, j)\n    elif j == m:\n        for j in range(m, 0, -1):\n            if i == x and j == y:\n                continue\n            else:\n                print(i, j)\nfor i in range(x - 1, 0, -1):\n    if j == 1:\n        for j in range(1, m + 1):\n            if i == x and j == y:\n                continue\n            else:\n                print(i, j)\n    elif j == m:\n        for j in range(m, 0, -1):\n            if i == x and j == y:\n                continue\n            else:\n                print(i, j)", "(n, m, x, y) = map(int, [*open(0)][0].split())\n(x, y) = (x - 1, y - 1)\nfor i in range(n):\n    print(x + 1, y + 1)\n    for j in range(m - 1):\n        y = (y + 1) % m\n        print(x + 1, y + 1)\n    x = (x + 1) % n", "(a, b, c, d) = map(int, input().split())\nfor i in range(a):\n    for j in range(b):\n        x = (c + i) % a if (c + i) % a else a\n        y = (d + j) % b if (d + j) % b else b\n        print(x, y)\n    d -= 1", "def indexer(arr, x, y, n, m, first_traversal):\n    ending_zero = y\n    if x == first_traversal:\n        indexer(arr, x + 1, ending_zero, n, m, first_traversal)\n    else:\n        pass\n    if arr[x - 1][y] != 1:\n        arr[x - 1][y] = 1\n        print(x, y + 1)\n    ending_zero = 0\n    for i in range(m):\n        if arr[x - 1][i] == 1:\n            pass\n        else:\n            arr[x - 1][i] = 1\n            print(x, i + 1)\n            ending_zero = i\n    if x == n:\n        return 0\n    else:\n        return indexer(arr, x + 1, ending_zero, n, m, first_traversal)\n(n, m, x, y) = map(int, input().split())\narr = [[0] * m for i in range(n)]\narr[x - 1][y - 1] = 1\nprint(x, y)\nfor i in range(m):\n    if arr[x - 1][i] == 1:\n        pass\n    else:\n        arr[x - 1][i] = 1\n        print(x, i + 1)\nindexer(arr, 1, m - 1, n, m, x)", "(n, m, x, y) = map(int, input().split())\nprint(x, y)\nfor i in range(y + 1, m + 1):\n    print(x, i)\nfor i in range(y - 1, 0, -1):\n    print(x, i)\ncc = 1\nfor j in range(cc, m + 1):\n    if j % 2:\n        for i in range(1, n + 1):\n            if i == x:\n                continue\n            print(i, j)\n    else:\n        for i in range(n, 0, -1):\n            if i == x:\n                continue\n            print(i, j)", "(n, m, x, y) = map(int, input().split())\nprint(x, y)\nfor i in range(1, m + 1):\n    if i == y:\n        continue\n    print(x, i)\ny_last = m\nfor i in range(1, n + 1):\n    if i == x:\n        continue\n    if y_last == m:\n        for j in range(m, 0, -1):\n            print(i, j)\n        y_last = 1\n        continue\n    if y_last == 1:\n        for j in range(1, m + 1):\n            print(i, j)\n        y_last = m", "from sys import stdin\n(n, m, x, y) = map(int, stdin.readline().strip().split())\nr = [y]\nl = [x]\nfor i in range(1, m + 1):\n    if i == y:\n        continue\n    r.append(i)\nfor i in range(1, n + 1):\n    if i == x:\n        continue\n    l.append(i)\nr1 = r.copy()\nr1 = r1[::-1]\nx = 0\nfor i in l:\n    if x % 2 == 0:\n        for j in r:\n            print(i, j)\n    else:\n        for j in r1:\n            print(i, j)\n    x += 1", "(n, m, x, y) = map(int, input().split())\nprint(x, y)\nprint(1, y)\nfor i in range(1, m + 1):\n    if i != y:\n        print(1, i)\ncurr = 0\nfor i in range(2, n + 1):\n    if curr % 2 == 0:\n        for j in range(m, 0, -1):\n            if i != x or j != y:\n                print(i, j)\n    else:\n        for j in range(1, m + 1):\n            if i != x or j != y:\n                print(i, j)\n    curr += 1", "(n, m, Sx, Sy) = [int(i) for i in input().split()]\narr = [[0 for i in range(m)] for i in range(n)]\nprint(Sx, Sy)\nprint(Sx, m)\nfor i in range(m - 1, -1, -1):\n    arr[Sx - 1][i] = 1\n    if i != Sy - 1 and i != m - 1:\n        print(Sx, i + 1)\nc = 0\nfor i in range(n):\n    if i == Sx - 1:\n        continue\n    elif c % 2 == 0:\n        for j in range(m):\n            if arr[i][j] == 0:\n                arr[i][j] = 1\n                print(i + 1, j + 1)\n    else:\n        for j in range(m - 1, -1, -1):\n            if arr[i][j] == 0:\n                arr[i][j] = 1\n                print(i + 1, j + 1)\n    c += 1", "(n, m, x, y) = map(int, input().split())\nans = [[x, y], [1, y]]\nfor i in range(1, n + 1):\n    if i % 2 == 1:\n        for j in range(1, m + 1):\n            if (i, j) in [(x, y), (1, y)]:\n                continue\n            ans.append([i, j])\n    else:\n        for j in range(m, 0, -1):\n            if (i, j) in [(x, y), (1, y)]:\n                continue\n            ans.append([i, j])\nfor a in ans:\n    print(*a)", "(n, m, x, y) = map(int, input().split())\na = [[x, y]]\nfor i in range(x - 1, 0, -1):\n    a.append([i, y])\nfor i in range(x + 1, n + 1):\n    a.append([i, y])\nfor i in range(1, y):\n    if i % 2 == 0:\n        for j in range(1, n + 1):\n            a.append([j, i])\n    else:\n        for j in range(n, 0, -1):\n            a.append([j, i])\nif y - 1 % 2 == 0:\n    for i in range(y + 1, m + 1):\n        if i % 2 == 0:\n            for j in range(1, n + 1):\n                a.append([j, i])\n        else:\n            for j in range(n, 0, -1):\n                a.append([j, i])\nelse:\n    for i in range(y + 1, m + 1):\n        if i % 2 == 1:\n            for j in range(1, n + 1):\n                a.append([j, i])\n        else:\n            for j in range(n, 0, -1):\n                a.append([j, i])\nfor i in a:\n    print(i[0], i[1])", "(n, m, x, y) = map(int, input().split())\nx -= 1\ny -= 1\nfor j in range(n):\n    for i in range(m - 1):\n        print(x + 1, y + 1)\n        y += 1\n        y %= m\n    print(x + 1, y + 1)\n    x += 1\n    x %= n", "(n, m, sx, sy) = map(int, input().split())\nl1 = []\ncheck = []\nl1.append([sx, sy])\ncheck.append([sx, sy])\nif [1, sy] not in check:\n    l1.append([1, sy])\n    check.append([1, sy])\nif [1, 1] not in check:\n    l1.append([1, 1])\n    check.append([1, 1])\ncurr = 1\nwhile curr <= n:\n    if curr % 2 == 0:\n        for i in range(m, 0, -1):\n            if [curr, i] not in check:\n                l1.append([curr, i])\n        curr = curr + 1\n    else:\n        for i in range(1, m + 1):\n            if [curr, i] not in check:\n                l1.append([curr, i])\n        curr = curr + 1\nfor i in l1:\n    print(*i)", "(n, m, x, y) = map(int, input().split())\nxset = set(range(1, n + 1))\nyset = set(range(1, m + 1))\nxset.remove(x)\nprint(x, y)\nfor y in yset - {y}:\n    print(x, y)\nwhile xset:\n    x = xset.pop()\n    print(x, y)\n    for y in yset - {y}:\n        print(x, y)", "randid = 'drnweur'\n(m, n, stx, sty) = map(int, input().split())\nprint(stx, sty)\ncx = stx\nlvx = stx\nfor cy in range(1, n + 1):\n    jx = cx\n    while cx <= m:\n        if cx != stx or cy != sty:\n            print(cx, cy)\n        cx += 1\n    if cx >= m:\n        cx = m\n    if jx > 1:\n        cx = jx - 1\n        while cx > 0:\n            if cx != stx or cy != sty:\n                print(cx, cy)\n            cx -= 1\n        cx = 1", "(n, m, ns, ms) = map(int, input().split(' '))\nprint(f'{ns} {ms}')\nprint(f'1 {ms}')\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        (x, y) = (i, j) if i % 2 else (i, m - j + 1)\n        if (x, y) != (ns, ms) and (x, y) != (1, ms):\n            print(f'{x} {y}')", "(n, m, Sx, Sy) = map(int, input().split())\nprint(Sx, Sy)\nfor i in range(1, n + 1):\n    if i == Sx:\n        continue\n    print(i, Sy)\n    x = i\nSx = x\nfor i in range(1, m + 1):\n    if i == Sy:\n        continue\n    print(Sx, i)\n    for j in range(1, n + 1):\n        if j == Sx:\n            continue\n        print(j, i)\n        x = j\n    Sx = x", "(N, M, x, y) = map(int, input().split())\nx -= 1\ny -= 1\nrev = False\nprint(x + 1, y + 1)\nif not x:\n    rev = True\nif not rev:\n    for i in range(N - 1, -1, -1):\n        if i != x:\n            print(i + 1, y + 1)\nelse:\n    for i in range(1, N):\n        print(i + 1, y + 1)\nfor i in range(N - 1, -1, -1) if rev else range(0, N):\n    for j in range(0, M) if i % 2 else range(M - 1, -1, -1):\n        if j != y:\n            print(i + 1, j + 1)", "(n, m, x, y) = (int(x) for x in input().split())\nfor i in range(1, m + 1):\n    print(x, y)\n    for j in range(1, n + 1):\n        if j == x:\n            pass\n        else:\n            temp = j\n            print(j, y)\n    x = temp\n    y = y % m + 1"]