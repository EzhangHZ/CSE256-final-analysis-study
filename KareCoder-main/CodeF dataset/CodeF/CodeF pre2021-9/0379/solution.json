["for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = abs(a - b) // 2\n    r = a + b - l\n    j = 1\n    if (a + b) % 2 == 0:\n        j = 2\n    a = list(range(l, r + 1, j))\n    print(len(a))\n    print(' '.join(map(str, a)))", "import sys\ninput = lambda : sys.stdin.readline().rstrip('\\r\\n')\ninp_vars_int = lambda : map(int, input().split())\ninp_list_int = lambda : list(map(int, input().split()))\nt = int(input())\nfor _ in range(t):\n    (a, b) = inp_vars_int()\n    diff = abs(a - b)\n    tot = a + b\n    eg = tot % 2\n    min_br = diff // 2\n    max_br = 2 * min(a, b) + diff // 2 + eg\n    opts = range(min_br, max_br + 1, 2 - eg)\n    print(len(opts))\n    print(' '.join(map(str, opts)))", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    (a, b) = (min(a, b), max(a, b))\n    n = a + b\n    if n % 2 == 0:\n        m = n // 2\n        x = m - a\n        y = n - x\n        z = (y - x) // 2 + 1\n        print(z)\n        print(' '.join(map(str, range(x, y + 1, 2))))\n    else:\n        m = n // 2\n        x = m - a\n        y = n - x\n        z = y - x + 1\n        print(z)\n        print(' '.join(map(str, range(x, y + 1))))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = abs(a - b) // 2\n    r = a + b - l\n    j = 1\n    if (a + b) % 2 == 0:\n        j = 2\n    a = list(range(l, r + 1, j))\n    print(len(a))\n    print(' '.join(map(str, a)))", "def print_breaks(a, b):\n    (a, b) = (min(a, b), max(a, b))\n    x = b - a\n    if x % 2 == 1:\n        y = (x - 1) // 2\n        res = list([str(el) for el in range(y, a * 2 + y + 2)])\n    else:\n        y = x // 2\n        res = list([str(el) for el in range(y, 2 * a + y + 1, 2)])\n    print(len(res))\n    print(' '.join(res))\nt = int(input())\nfor i in range(t):\n    s = input()\n    (a, b) = s.split(' ')\n    (a, b) = (int(a), int(b))\n    print_breaks(a, b)", "t = int(input())\nfor _ in range(t):\n    (a, b) = list(map(int, input().split()))\n    k = []\n    m = abs(a - b) // 2\n    M = a + b - m\n    if (a + b) % 2:\n        for i in range(m, M + 1):\n            k.append(str(i))\n    else:\n        i = m\n        while i <= M:\n            k.append(str(i))\n            i += 2\n    print(len(k))\n    print(' '.join(k))", "for _ in range(int(input())):\n    (a, b) = [int(x) for x in input().split()]\n    k = []\n    mi = abs(a - b) // 2\n    ma = a + b - mi\n    if (a + b) % 2:\n        for i in range(mi, ma + 1):\n            k.append(str(i))\n    else:\n        i = mi\n        while i <= ma:\n            k.append(str(i))\n            i += 2\n    print(len(k))\n    print(' '.join(k))", "def getlistint():\n    return list(map(int, stdin.readline().split()))\n\ndef getmapint():\n    return map(int, stdin.readline().split())\n\ndef getliststr():\n    return list(stdin.readline().split())\n\ndef getint():\n    return int(stdin.readline().strip())\n\ndef getstr():\n    return stdin.readline().strip()\n\ndef pr(s):\n    stdout.write(str(s) + '\\n')\n\ndef prlist(l):\n    stdout.write(' '.join(list(map(str, l))) + '\\n')\nfrom sys import stdin, stdout\nfor _ in range(getint()):\n    (a, b) = getmapint()\n    (a, b) = (min(a, b), max(a, b))\n    k = []\n    n = a + b\n    if n % 2 == 0:\n        step = 2\n    else:\n        step = 1\n    starts = (b - a) // 2\n    ends = n - starts\n    for i in range(starts, ends + 1, step):\n        k.append(i)\n    pr(len(k))\n    prlist(k)", "def numberBreaks(a, b):\n    (a, b) = (max(a, b), min(a, b))\n    diff = a - b\n    add_breaks = [diff // 2]\n    breaks = []\n    if diff % 2 == 1:\n        add_breaks.append(add_breaks[0] + 1)\n    for i in range(0, 2 * b + 1, 2):\n        for a in add_breaks:\n            breaks.append(i + a)\n    breaks.sort()\n    breaks = [str(a) for a in breaks]\n    print(len(breaks))\n    print(' '.join(breaks))\nnum_cases = int(input())\ncases = []\nfor i in range(num_cases):\n    case = input().split()\n    cases.append(case)\nfor case in cases:\n    numberBreaks(int(case[0]), int(case[1]))", "t = int(input())\nfor tc in range(t):\n    (a, b) = map(int, input().split())\n    L = set()\n    s = int((a + b) / 2)\n    s2 = int((a + b + 1) / 2)\n    for i in range(max(s2 - b, 0), min(a, s2) + 1):\n        L.add(s2 - i + a - i)\n        L.add(b - s2 + 2 * i)\n    L = list(L)\n    L.sort()\n    print(len(L))\n    print(' '.join(list(map(str, L))))", "class Solver:\n\n    def __init__(self):\n        self._ans = []\n        tc = int(input())\n        for _ in range(tc):\n            (a, b) = map(int, input().strip().split())\n            ans = set()\n            self._solve(a, b, (a + b + 1) // 2, (a + b) // 2, ans)\n            self._solve(b, a, (a + b + 1) // 2, (a + b) // 2, ans)\n            self._ans.append(sorted(ans))\n        [print(len(ans), '\\n', ' '.join((str(_) for _ in ans))) for ans in self._ans]\n\n    def _solve(self, a, b, p, q, ans: set):\n        for x in range(p + 1):\n            y = a - (p - x)\n            if 0 <= y <= q:\n                ans.add(x + y)\nSolver()", "n = int(input().strip())\nfor _ in range(n):\n    ab = input().strip().split(' ')\n    (a, b) = (int(ab[0]), int(ab[1]))\n    (a, b) = (min(a, b), max(a, b))\n    total = a + b\n    half = int(total / 2)\n    res = []\n    for i in range(a + 1):\n        res.append(half + a - 2 * i)\n        if total % 2 != 0:\n            res.append(half + 1 + a - 2 * i)\n    res = list(set(res))\n    res.sort()\n    reslist = [str(i) for i in res]\n    print(len(res))\n    print(' '.join(reslist))", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    d = []\n    if min(a, b) % 2 == 1:\n        c = [2 * k + 1 for k in range(-(min(a, b) + 1) // 2, (min(a, b) + 1) // 2)]\n        for number in c:\n            if (a + b) % 2 == 0:\n                d.append((a + b) // 2 - number)\n            else:\n                d.append((a + b) // 2 - number)\n                d.append(a + b - ((a + b) // 2 - number))\n    else:\n        c = [2 * k for k in range(-min(a, b) // 2, min(a, b) // 2 + 1)]\n        for number in c:\n            if (a + b) % 2 == 0:\n                d.append((a + b) // 2 - number)\n            else:\n                d.append((a + b) // 2 - number)\n                d.append(a + b - ((a + b) // 2 - number))\n    e = sorted(list(set(d)))\n    f = ' '.join(map(str, e))\n    print(len(e))\n    print(f)", "tt = int(input())\nfor _ in range(tt):\n    (c, d) = map(int, input().split())\n    a = max(c, d)\n    b = min(c, d)\n    h = (a + b) // 2\n    if (a + b) % 2 == 0:\n        ans = list(range((a - b) // 2, h + b + 1, 2))\n    else:\n        ans = list(range((a - b) // 2, h + b + 2))\n    print(len(ans))\n    print(*ans)", "import sys\nimport math\ntestcases = int(input())\nwhile testcases > 0:\n    (a, b) = map(int, sys.stdin.readline().split())\n    s = a + b\n    if s % 2 == 0:\n        mini = max(a, b) - s // 2\n        maxi = s // 2 + min(a, b)\n        ans = [i for i in range(mini, maxi + 1, 2)]\n    else:\n        mini = max(a, b) - s // 2 - 1\n        maxi = s // 2 + 1 + min(a, b)\n        ans = [i for i in range(mini, maxi + 1)]\n    print(len(ans))\n    print(*ans)\n    testcases -= 1", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    diff = abs(a - b) // 2\n    sum = a + b\n    if sum % 2 == 0:\n        array = [i for i in range(diff, sum - diff + 1, 2)]\n        print(len(array))\n        print(*array)\n    else:\n        array = [i for i in range(diff, sum - diff + 1)]\n        print(len(array))\n        print(*array)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nwhile t > 0:\n    (a, b) = map(int, input().split())\n    (a, b) = (min(a, b), max(a, b))\n    s = a + b\n    x = s // 2\n    if s % 2 == 0:\n        ans = [i for i in range(b - x, x + a + 1, 2)]\n    else:\n        ans = [i for i in range(b - x - 1, x + a + 2)]\n    print(len(ans))\n    print(*ans)\n    t -= 1", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = abs(a - b) // 2\n    r = a + b - l\n    j = 1\n    if (a + b) % 2 == 0:\n        j = 2\n    a = list(range(l, r + 1, j))\n    print(len(a))\n    print(*a)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = abs(a - b) // 2\n    r = a + b - l\n    j = 1\n    if (a + b) % 2 == 0:\n        j = 2\n    a = list(range(l, r + 1, j))\n    print(len(a))\n    print(*a)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = abs(n - m) // 2\n    s = n + m\n    if s % 2 == 0:\n        ar = [i for i in range(d, s - d + 1, 2)]\n        print(len(ar))\n        print(*ar)\n    else:\n        ar = [i for i in range(d, s - d + 1)]\n        print(len(ar))\n        print(*ar)", "t = int(input())\nwhile t:\n    (a, b) = map(int, input().split())\n    d = abs(a - b) // 2\n    ans = []\n    if (a + b) % 2:\n        for i in range(d, a + b - d + 1):\n            ans.append(i)\n        print(len(ans))\n        print(*ans)\n    else:\n        for i in range(d, a + b - d + 1, 2):\n            ans.append(i)\n        print(len(ans))\n        print(*ans)\n    t -= 1", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = abs(n - m) // 2\n    s = n + m\n    if s % 2 == 0:\n        ar = [i for i in range(d, s - d + 1, 2)]\n        print(len(ar))\n        print(*ar)\n    else:\n        ar = [i for i in range(d, s - d + 1)]\n        print(len(ar))\n        print(*ar)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    lst = []\n    if a == b:\n        i = 0\n        while i <= a + b:\n            lst.append(i)\n            i += 2\n    else:\n        x = abs(a - b)\n        if x % 2 == 0:\n            y = x // 2\n            while y < a + b - x // 2 + 1:\n                lst.append(y)\n                y += 2\n        else:\n            y = x // 2\n            for i in range(y, a + b - y + 1):\n                lst.append(i)\n    print(len(lst))\n    print(*lst)", "t = int(input())\nwhile t > 0:\n    x = input().split()\n    (a, b) = (int(x[0]), int(x[1]))\n    n = a + b\n    if n % 2 == 0:\n        r = abs(a - b) // 2\n        ans = (n - r) // 2\n        c = []\n        for i in range(r, n - r + 1, 2):\n            c.append(i)\n    else:\n        r = (abs(a - b) - 1) // 2\n        p = a + b + 1\n        p = min(p, n - r + 1)\n        c = []\n        for i in range(r, p):\n            c.append(i)\n    print(len(c))\n    print(*c, sep=' ')\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if (a + b) % 2:\n        mi = (a + b) // 2 - min(a, b)\n        ma = a + b - mi\n        n = ma - mi + 1\n        print(n)\n        print(*list(range(mi, ma + 1)))\n    else:\n        mi = (a + b) // 2 - min(a, b)\n        ma = a + b - mi\n        n = (ma - mi) // 2 + 1\n        print(n)\n        print(*list(range(mi, ma + 1, 2)))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    n = a + b\n    (x, y) = (n // 2, n // 2 + n % 2)\n    k = min(a, x) + min(b, y)\n    l = n - min(a, y) - min(b, x)\n    s = list(range(min(l, k), max(l, k) + 2, 2))\n    (x, y) = (n // 2 + n % 2, n // 2)\n    k = min(a, x) + min(b, y)\n    l = n - min(a, y) - min(b, x)\n    s.extend(list(range(min(l, k), max(l, k) + 2, 2)))\n    s = set(s)\n    print(len(s))\n    print(*sorted(s))", "def main():\n    for _ in range(int(input())):\n        (a, b) = map(int, input().split())\n        n = a + b\n        s = [x for x in range(n + 1)]\n        ans = abs(a - b) // 2\n        if n % 2:\n            t = s[ans:n - ans + 1]\n            print(len(t))\n            print(*t)\n        else:\n            t = s[ans:n - ans + 1:2]\n            print(len(t))\n            print(*t)\nmain()", "from sys import *\nimport math\n\ndef solve_case(t):\n    (a, b) = [int(x) for x in stdin.readline().rstrip().split()]\n    total = a + b\n    min_k = 0\n    max_k = 0\n    a_ser = math.ceil((a + b) / 2)\n    min_k = abs(a_ser - a)\n    max_k = min(b, a_ser) + min(total - a_ser, a)\n    if total % 2 != 0:\n        a_ser = math.floor((a + b) / 2)\n        min_k = min(min_k, abs(a_ser - a))\n        max_k = max(max_k, min(b, a_ser) + min(total - a_ser, a))\n        print(max_k - min_k + 1)\n        for k in range(min_k, max_k + 1):\n            print(k, end=' ')\n    else:\n        arr = []\n        for k in range(min_k, max_k + 1, 2):\n            arr.append(k)\n        print(len(arr))\n        for k in arr:\n            print(k, end=' ')\n    print('')\n\ndef main():\n    T = int(stdin.readline().rstrip())\n    for t in range(T):\n        solve_case(t)\nmain()", "for _ in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    fin = a + b\n    if fin == 2:\n        if a == 1:\n            print(2)\n            print(0, 2)\n        else:\n            print(1)\n            print(1)\n        continue\n    if fin % 2 == 1:\n        temp = abs(a - b)\n        lis = []\n        for i in range(fin + 1):\n            lis.append(i)\n        lis = lis[temp // 2:len(lis) - temp // 2]\n    if fin % 2 == 0:\n        if fin // 2 % 2 == 1:\n            lis = []\n            if a % 2 == 0:\n                for i in range(fin + 1):\n                    if i % 2 == 1:\n                        lis.append(i)\n            else:\n                for i in range(fin + 1):\n                    if i % 2 == 0:\n                        lis.append(i)\n            cut = (len(lis) - min([a, b]) - 1) // 2\n            lis = lis[cut:len(lis) - cut]\n        else:\n            lis = []\n            if a % 2 == 1:\n                for i in range(fin + 1):\n                    if i % 2 == 1:\n                        lis.append(i)\n            else:\n                for i in range(fin + 1):\n                    if i % 2 == 0:\n                        lis.append(i)\n            cut = (len(lis) - min([a, b]) - 1) // 2\n            lis = lis[cut:len(lis) - cut]\n    print(len(lis))\n    for i in lis:\n        print(i, end=' ')\n    print()", "import sys\nfrom math import *\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    (a, b) = (min(a, b), max(a, b))\n    c = abs(a - b)\n    ans = []\n    if c % 4 == 0:\n        j = c // 4 * 2\n        for i in range(a + 1):\n            ans.append(j)\n            j += 2\n    if c % 4 == 2:\n        j = (c - 2) // 4 * 2 + 1\n        for i in range(a + 1):\n            ans.append(j)\n            j += 2\n    if c % 4 == 3:\n        j = (c - 3) // 4 * 2 + 1\n        for i in range((a + 1) * 2):\n            ans.append(j)\n            j += 1\n    if c % 4 == 1:\n        j = (c - 1) // 4 * 2\n        for i in range((a + 1) * 2):\n            ans.append(j)\n            j += 1\n    print(len(ans))\n    print(*ans)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    start = min(abs((a + b) // 2 + (a + b) % 2 - a), abs((a + b) // 2 + (a + b) % 2 - b))\n    end = start + min(a, b) * 2 + 1\n    if (a + b) % 2 == 0:\n        print((end - start) // 2 + 1)\n        for i in range(start, end, 2):\n            print(i, end=' ')\n    if (a + b) % 2 == 1:\n        print(end - start + 1)\n        for i in range(start, end + 1):\n            print(i, end=' ')\n    if _ < t - 1:\n        print()", "from math import ceil\nfor _ in range(int(input())):\n    (a, b) = [int(i) for i in input().split()]\n    avg = (a + b) // 2\n    start = avg - min(a, b)\n    end = min(ceil((a + b) / 2), a) + min(ceil((a + b) / 2), b)\n    if (a + b) % 2 == 0:\n        start = (max(a, b) - min(a, b)) // 2\n        end = start + min(a, b) * 2\n        print((end - start) // 2 + 1)\n        k = []\n        for i in range(start, end + 1, 2):\n            k.append(i)\n        print(*k)\n    else:\n        print(end - start + 1)\n        k = []\n        for i in range(start, end + 1):\n            k.append(i)\n        print(*k)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    total = a + b\n    ans = []\n    A = total // 2\n    B = total - A\n    res = abs(A - a)\n    ans.append(res)\n    if A != B:\n        for i in range(min(a, b)):\n            res += 2\n            ans.append(res)\n        (A, B) = (B, A)\n        res = abs(A - a)\n        ans.append(res)\n        for i in range(min(a, b)):\n            res += 2\n            ans.append(res)\n    else:\n        for i in range(min(a, b)):\n            res += 2\n            ans.append(res)\n    print(len(ans))\n    print(*sorted(ans))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    total = a + b\n    ans = []\n    A = total // 2\n    B = total - A\n    res = abs(A - a)\n    ans.append(res)\n    if A != B:\n        for i in range(min(a, b)):\n            res += 2\n            ans.append(res)\n        (A, B) = (B, A)\n        res = abs(A - a)\n        ans.append(res)\n        for i in range(min(a, b)):\n            res += 2\n            ans.append(res)\n    else:\n        for i in range(min(a, b)):\n            res += 2\n            ans.append(res)\n    print(len(ans))\n    print(*sorted(ans))", "t = int(input())\nfor w in range(t):\n    (a, b) = map(int, input().split())\n    answer = set()\n    games = a + b\n    serves = games // 2\n    for j in range(serves, -1, -1):\n        breaks_first = max(a, b) - j\n        breaks_second = serves - j\n        if breaks_first > games - serves or breaks_second > serves:\n            break\n        answer.add(breaks_first + breaks_second)\n    serves = games - serves\n    for j in range(serves, -1, -1):\n        breaks_first = max(a, b) - j\n        breaks_second = serves - j\n        if breaks_first > games - serves or breaks_second > serves:\n            break\n        answer.add(breaks_first + breaks_second)\n    print(len(answer))\n    answer = list(answer)\n    answer.sort()\n    print(' '.join(map(str, answer)))", "t = int(input().strip())\n\ndef breaks(serves, won):\n    bs = []\n    for i in range(won + 1):\n        bs.append(serves - i + (won - i))\n    return bs\nfor _ in range(t):\n    (a, b) = list(map(int, input().strip().split()))\n    games = a + b\n    mini = min(a, b)\n    bs = []\n    half = games // 2\n    bs.extend(breaks(half, mini))\n    if games % 2 == 1:\n        half += 1\n        bs.extend(breaks(half, mini))\n    bs.sort()\n    print(len(bs))\n    print(*bs)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    mi = min(a, b)\n    Ma = max(a, b)\n    m = 0\n    k = []\n    if (mi + Ma) % 2 == 0:\n        m = mi + 1\n        k = [i for i in range((Ma - mi) // 2, (3 * mi + Ma) // 2 + 1, 2)]\n    else:\n        m = 2 * (mi + 1)\n        k = [i for i in range((Ma - mi - 1) // 2, (3 * mi + Ma + 1) // 2 + 1)]\n    print(m)\n    for item in k:\n        print(item, end=' ')\n    print()", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    d = abs(a - b)\n    mi = d // 2\n    ma = a + b - mi\n    k = ma - mi + 1\n    if k % 2 == 0:\n        print(k)\n        for j in range(mi, ma + 1):\n            print(j, end=' ')\n        print()\n    else:\n        print((k + 1) // 2)\n        for j in range(mi, ma + 1, 2):\n            print(j, end=' ')\n        print()", "import sys\ninput = lambda : sys.stdin.readline()[:-1]\nni = lambda : int(input())\nna = lambda : list(map(int, input().split()))\nyes = lambda : print('yes')\nYes = lambda : print('Yes')\nYES = lambda : print('YES')\nno = lambda : print('no')\nNo = lambda : print('No')\nNO = lambda : print('NO')\nfor _ in range(ni()):\n    (a, b) = na()\n    z = []\n    if (a + b) % 2:\n        A = (a + b) // 2\n        B = (a + b + 1) // 2\n        x = min(A, b) + min(a, B)\n        for i in range(min(A, b, a, B) + 1):\n            z.append(x - i * 2)\n        (A, B) = (B, A)\n        x = min(A, b) + min(a, B)\n        for i in range(min(A, b, a, B) + 1):\n            z.append(x - i * 2)\n    else:\n        A = (a + b) // 2\n        B = (a + b + 1) // 2\n        x = min(A, b) + min(a, B)\n        for i in range(min(A, b, a, B) + 1):\n            z.append(x - i * 2)\n    print(len(z))\n    print(*sorted(z))", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    n = a + b\n    aserve1 = n // 2\n    bserve1 = n - aserve1\n    bserve2 = n // 2\n    aserve2 = n - bserve2\n    minc1 = aserve1 - min(aserve1, a) + bserve1 - min(bserve1, b)\n    maxc1 = min(aserve1, b) + min(bserve1, a)\n    minc2 = aserve2 - min(aserve2, a) + bserve2 - min(bserve2, b)\n    maxc2 = min(aserve2, b) + min(bserve2, a)\n    s = set()\n    for i in range(minc1, maxc1 + 1, 2):\n        s.add(i)\n    for i in range(minc2, maxc2 + 1, 2):\n        s.add(i)\n    ans = list(s)\n    ans.sort()\n    print(len(ans))\n    print(*ans)", "t = int(input())\nfor task in range(t):\n    (a, b) = list(map(int, input().split()))\n    if a < b:\n        (a, b) = (b, a)\n    n = a + b\n    nb = n // 2\n    minBr = nb - b\n    maxBr = n - minBr\n    step = 2 - n % 2\n    print((-minBr + maxBr) // step + 1)\n    for i in range(minBr, maxBr + 1, step):\n        print(i, end=' ')\n    print()", "import math\nimport sys\nimport collections\nimport bisect\nimport time\nimport random\nimport itertools\nfrom collections import Counter, defaultdict\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\nfor t in range(int(input())):\n    (a, b) = get_ints()\n    d = abs(a - b) // 2\n    ans = []\n    if (a + b) % 2 == 0:\n        v = d\n        while True:\n            if v > a + b - d:\n                break\n            ans.append(v)\n            v += 2\n    else:\n        v = d\n        while True:\n            if v > a + b - d:\n                break\n            ans.append(v)\n            v += 1\n    print(len(ans))\n    print(*ans)", "import sys\nimport math\nfor _ in range(int(sys.stdin.readline())):\n    (a, b) = map(int, sys.stdin.readline().split())\n    if a > b:\n        (a, b) = (b, a)\n    small = math.floor((a + b) / 2)\n    big = math.ceil((a + b) / 2)\n    ans = set()\n    start = b - big\n    end = a + b - start\n    for i in range(start, end, 2):\n        if i not in ans:\n            ans.add(i)\n    for i in range(end, start - 1, -2):\n        if i not in ans:\n            ans.add(i)\n    ans = list(ans)\n    ans.sort()\n    print(len(ans))\n    print(*ans)", "t = int(input().strip())\n\ndef breaks(serves, won):\n    bs = []\n    for i in range(won + 1):\n        bs.append(serves - i + (won - i))\n    return bs\nfor _ in range(t):\n    (a, b) = list(map(int, input().strip().split()))\n    games = a + b\n    mini = min(a, b)\n    bs = []\n    half = games // 2\n    bs.extend(breaks(half, mini))\n    if games % 2 == 1:\n        half += 1\n        bs.extend(breaks(half, mini))\n    bs.sort()\n    print(len(bs))\n    print(*bs)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    tot = a + b\n    fa = min(a, (tot + 1) // 2)\n    sb = min(b, tot // 2)\n    fb = min(b, (tot + 1) // 2)\n    sa = min(a, tot // 2)\n    mfa = min(fa, sb)\n    l = fa + sb\n    res = [l]\n    while mfa:\n        l -= 2\n        mfa -= 1\n        res += [l]\n    l2 = fb + sa\n    mfb = min(fb, fa)\n    res += [l2]\n    while mfb:\n        l2 -= 2\n        mfb -= 1\n        res += [l2]\n    s = set(res)\n    res = sorted(list(s))\n    print(len(res))\n    print(*res, sep=' ')", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    diff = abs(a - b)\n    b = min(a, b) + 1\n    if diff % 2 == 0:\n        diff //= 2\n        print(b)\n        for i in range(b):\n            print(diff + 2 * i, end=' ')\n        print()\n    else:\n        diff //= 2\n        second = diff + 1\n        print(2 * b)\n        for i in range(b):\n            print(diff + 2 * i, end=' ')\n            print(second + 2 * i, end=' ')\n        print()", "from collections import deque, Counter\nfrom collections import defaultdict as dfd\nfrom bisect import bisect, bisect_left\nfrom math import sqrt, gcd, ceil, factorial\nfrom heapq import heapify, heappush, heappop\nMOD = 10 ** 9 + 7\ninf = float('inf')\nans_ = []\n\ndef nin():\n    return int(input())\n\ndef ninf():\n    return int(file.readline())\n\ndef st():\n    return input().strip()\n\ndef stf():\n    return file.readline().strip()\n\ndef read():\n    return list(map(int, input().strip().split()))\n\ndef readf():\n    return list(map(int, file.readline().strip().split()))\n\ndef readfl():\n    return list(map(float, input().strip().split()))\n\ndef readffl():\n    return list(map(float, file.readline().strip().split()))\n\ndef solve():\n    for _ in range(nin()):\n        (a, b) = read()\n        ans = []\n        if (a + b) % 2:\n            maxi1 = (a + b) // 2 + (a + b) % 2 + min(a, b)\n            maxi2 = (a + b) // 2 + min(a, b)\n            for i in range(min(a, b) + 1):\n                ans.append(maxi1 - 2 * i)\n            for i in range(min(a, b) + 1):\n                ans.append(maxi2 - 2 * i)\n            ans.sort()\n        else:\n            maxi = min(a, b) + (a + b) // 2\n            for i in range(min(a, b) + 1):\n                ans.append(maxi - i * 2)\n            ans.reverse()\n        ans_.append(ans)\nsolve()\nfor i in ans_:\n    print(len(i))\n    print(*i)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    d = (max(a, b) - min(a, b)) // 2\n    if (a + b) % 2 == 1:\n        print(a + b - d + 1 - d)\n        for i in range(d, a + b + 1 - d):\n            if i == a + b - d:\n                print(i)\n                continue\n            print(i, end=' ')\n    else:\n        print((a + b - d - d + 1 + 1) // 2)\n        for i in range(d, a + b + 1 - d, 2):\n            if i == a + b - d:\n                print(i)\n                continue\n            print(i, end=' ')", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    am = (a + b + 1) // 2\n    bm = a + b - am\n    i = abs(am - a)\n    ans = set()\n    ans.add(i)\n    for j in range(1, min(a, b) + 1):\n        i += 2\n        ans.add(i)\n    bm = (a + b + 1) // 2\n    am = a + b - bm\n    i = abs(am - a)\n    ans.add(i)\n    for j in range(1, min(a, b) + 1):\n        i += 2\n        ans.add(i)\n    print(len(ans))\n    for i in sorted(ans):\n        print(i, end=' ')\n    print()", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    tot = a + b\n    fa = min(a, (tot + 1) // 2)\n    sb = min(b, tot // 2)\n    fb = min(b, (tot + 1) // 2)\n    sa = min(a, tot // 2)\n    mfa = min(fa, sb)\n    l = fa + sb\n    res = [l]\n    l2 = fb + sa\n    mfb = min(fb, fa)\n    res += [l2]\n    while mfa or mfb:\n        if mfa != 0:\n            l -= 2\n            mfa -= 1\n            res += [l]\n        if mfb != 0:\n            l2 -= 2\n            mfb -= 1\n            res += [l2]\n    s = set(res)\n    res = sorted(list(s))\n    print(len(res))\n    print(*res, sep=' ')", "for _ in range(int(input())):\n    (a, b) = [int(x) for x in input().split()]\n    mn = min(a, b)\n    ans = set()\n    for i in range(mn + 1):\n        (e, o) = (i, mn - i)\n        (l, m) = [(a + b) // 2, (a + b + 1) // 2]\n        ans.add(l - e + o)\n        ans.add(m - o + e)\n    print(len(ans))\n    print(*sorted(list(ans)))", "import sys\nimport math\nimport random\nfrom queue import PriorityQueue as PQ\nfrom bisect import bisect_left as BSL\nfrom bisect import bisect_right as BSR\nfrom collections import OrderedDict as OD\nfrom collections import Counter\nfrom itertools import permutations\nfrom decimal import Decimal as BIGFLOAT\nfrom copy import deepcopy\nmod = 1000000007\nMOD = mod\nsys.setrecursionlimit(1000000)\ntry:\n    sys.stdin = open('actext.txt', 'r')\n    OPENFILE = 1\nexcept:\n    pass\n\ndef get_ints():\n    return map(int, input().split())\n\ndef palindrome(s):\n    mid = len(s) // 2\n    for i in range(mid):\n        if s[i] != s[len(s) - i - 1]:\n            return False\n    return True\n\ndef check(i, n):\n    if 0 <= i < n:\n        return True\n    else:\n        return False\nt = int(input())\nfor tt in range(t):\n    (a, b) = get_ints()\n    aa = a\n    bb = b\n    ans = set()\n    diff = abs(a - b)\n    (d1, d2) = (math.floor(diff / 2), math.ceil(diff / 2))\n    ans = set()\n    for i in range(min(b, a) + 1):\n        ans.add(i * 2 + d1)\n        ans.add(i * 2 + d2)\n    ans = list(ans)\n    ans.sort()\n    print(len(ans))\n    print(*ans)", "t = int(input())\n\ndef fun(n):\n    if n % 2 == 0:\n        return [n // 2]\n    else:\n        return [(n - 1) // 2, (n + 1) // 2]\n\ndef same(n):\n    result = []\n    for i in range(n + 1):\n        result.append(2 * i)\n    return result\nwhile t > 0:\n    t -= 1\n    s = input().split()\n    a = int(s[0])\n    b = int(s[1])\n    p = max(a, b)\n    q = a + b - p\n    sum = a + b\n    result = same(q)\n    if sum % 2 == 0:\n        temp = result.pop(-1)\n        print(q + 1)\n        for i in result:\n            print(str(i + fun(p - q)[0]), end=' ')\n        print(str(temp + fun(p - q)[0]))\n    else:\n        x_min = 0 + (p - q - 1) // 2\n        x_max = 2 * q + (p - q + 1) // 2\n        print(x_max - x_min + 1)\n        for i in range(x_min, x_max):\n            print(str(i), end=' ')\n        print(x_max)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    arr = []\n    if (a + b) % 2 == 0:\n        ans = max(a, b) - (a + b) / 2\n        for i in range(min(a, b) + 1):\n            arr.append(int(ans))\n            ans += 2\n    else:\n        ans = max(a, b) - int((a + b) / 2)\n        for i in range(min(a, b) + 1):\n            arr.append(int(ans))\n            ans += 2\n        ans = max(a, b) - (int((a + b) / 2) + 1)\n        for i in range(min(a, b) + 1):\n            arr.append(int(ans))\n            ans += 2\n    arr.sort()\n    print(len(arr))\n    print(*arr)", "exec('\\ndef my_solver_bitch(prakhar_shukla, sudheer_ranjan):\\n    prakhar_shukla, sudheer_ranjan = min(prakhar_shukla, sudheer_ranjan), max(prakhar_shukla, sudheer_ranjan)\\n    n = prakhar_shukla + sudheer_ranjan\\n    res = set()\\n    for i in range(0, prakhar_shukla + 1):\\n        b1 = n // 2 - i + prakhar_shukla - i\\n        res.add(b1)\\n    for i in range(0, prakhar_shukla + 1):\\n        b1 = n - n // 2 - i + prakhar_shukla - i\\n        res.add(b1)\\n    return res\\n\\n\\nfor _ in range(int(input())):\\n    a, b = map(int, input().split())\\n    r = list(my_solver_bitch(a, b))\\n    r.sort()\\n    print(len(r))\\n    print(*r)\\n')", "t = int(input())\nfor i in range(t):\n    (a, b) = list(map(int, input().strip().split()))\n    l = []\n    if (a + b) % 2 == 0:\n        total = a + b\n        start = abs(a - b) // 2\n        end = start\n        while start != total - end:\n            l.append(end)\n            end += 2\n        l.append(end)\n    else:\n        total = a + b\n        start = abs(a - b) // 2\n        end = start\n        while start != total - end:\n            l.append(end)\n            end += 1\n        l.append(end)\n    print(len(l))\n    for j in l[:-1]:\n        print(j, end=' ')\n    print(l[-1])", "mm = int(input())\nfor i in range(mm):\n    aa = []\n    (a, b) = list(map(int, input().split()))\n    n = max(a, b)\n    z = (a + b) // 2\n    s = a + b\n    if (a + b) % 2 == 0:\n        for ii in range(z + 1):\n            if ii + z >= n:\n                aa.append(z - ii + n - ii)\n    else:\n        for ii in range(z + 1):\n            if ii + z + 1 >= n:\n                aa.append(z - ii + n - ii)\n        z = z + 1\n        for ii in range(z + 1):\n            if ii + s - z >= n:\n                aa.append(z - ii + n - ii)\n    aa.sort()\n    print(len(aa))\n    print(*aa)", "for _ in range(int(input())):\n    (n, m) = input().split(' ')\n    n = int(n)\n    m = int(m)\n    d = (m - n) // 2\n    l = []\n    k = 0\n    if d < 0:\n        d = (n - m) // 2\n    if (n + m) % 2 == 0:\n        for i in range(d, m + n - d + 1, 2):\n            l.append(i)\n            k = k + 1\n    else:\n        for i in range(d, m + n - d + 1):\n            l.append(i)\n            k = k + 1\n    print(k)\n    for i in range(0, len(l)):\n        print(l[i], end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    if a < b:\n        (a, b) = (b, a)\n    ans = set()\n    if (a - b) % 2 == 0:\n        for b1 in range(0, b + 1):\n            a1 = (a - b) // 2 + b1\n            if 0 <= a1 <= a:\n                ans.add(a1 + b1)\n    else:\n        for b1 in range(0, b + 1):\n            a1 = (a - b - 1) // 2 + b1\n            a2 = (a - b + 1) // 2 + b1\n            if 0 <= a1 <= a:\n                ans.add(a1 + b1)\n            if 0 <= a2 <= a:\n                ans.add(a2 + b1)\n    s = sorted(list(ans))\n    print(len(s))\n    print(*s)", "for _ in range(int(input())):\n    (a, b) = [int(x) for x in input().split()]\n    mn = min(a, b)\n    ans = set()\n    for i in range(mn + 1):\n        (e, o) = (i, mn - i)\n        (l, m) = [(a + b) // 2, (a + b + 1) // 2]\n        ans.add(l - e + o)\n        ans.add(m - o + e)\n    print(len(ans))\n    print(*sorted(list(ans)))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    N = a + b\n    s = set()\n    x = N // 2\n    y = 0\n    for start in range(x - min(a, b), x + 1):\n        s.add(x - min(a, b) + y)\n        y += 2\n    x = (N + 1) // 2\n    y = 0\n    for start in range(x - min(a, b), x + 1):\n        s.add(x - min(a, b) + y)\n        y += 2\n    res = [i for i in s]\n    res.sort()\n    print(len(res))\n    print(*res)", "import math, bisect, heapq, random, sys, itertools\nsys.setrecursionlimit(10 ** 6 + 10)\ninput = sys.stdin.readline\nints = lambda : list(map(int, input().split()))\np = 10 ** 9 + 7\nalpha = 'abcdefghijklmnopqrstuvwxyz'\np2 = [1]\nfor i in range(30):\n    p2.append(p2[i] * 2)\nfor t in range(int(input())):\n    (a, b) = sorted(ints())\n    store = set()\n    x = (a + b) // 2\n    y = a + b - x\n    xx = x - a\n    yy = 0\n    while xx <= x and yy <= y:\n        store.add(xx + yy)\n        xx += 1\n        yy += 1\n    if (a + b) % 2:\n        x = (a + b) // 2 + 1\n        y = a + b - x\n        xx = x - a\n        yy = 0\n        while xx <= x and yy <= y:\n            store.add(xx + yy)\n            xx += 1\n            yy += 1\n    print(len(store))\n    print(*sorted(store))", "t = int(input())\nfor tt in range(t):\n    (a, b) = map(int, input().split())\n    alice = (a + b + 1) // 2\n    bob = (a + b) // 2\n    ans = set()\n    for x in range(bob + 1):\n        y = b + x - bob\n        if y >= 0 and y <= alice and (a == alice - y + x):\n            ans.add(x + y)\n    bob = (a + b + 1) // 2\n    alice = (a + b) // 2\n    for x in range(bob + 1):\n        y = b + x - bob\n        if y >= 0 and y <= alice and (a == alice - y + x):\n            ans.add(x + y)\n    ans = sorted(list(ans))\n    print(len(ans))\n    print(*ans)", "for _ in range(int(input())):\n    (a, b) = [int(x) for x in input().split()]\n    mn = min(a, b)\n    ans = set()\n    for i in range(mn + 1):\n        (e, o) = (i, mn - i)\n        (l, m) = [(a + b) // 2, (a + b + 1) // 2]\n        ans.add(l - e + o)\n        ans.add(m - o + e)\n    print(len(ans))\n    print(*sorted(list(ans)))", "def run():\n    n = int(input())\n    for i in range(n):\n        (a, b) = input().split(' ')\n        a = int(a)\n        b = int(b)\n        min1 = 999999\n        max1 = 0\n        na = a + b - int((a + b) / 2)\n        for x in range(max(na - b, 0), min(a, na) + 1, 1):\n            brks = na + a - 2 * x\n            if brks < 0:\n                break\n            if brks < min1:\n                min1 = brks\n            if brks > max1:\n                max1 = brks\n        if (a + b) % 2 == 0:\n            L = [i for i in range(min1, max1 + 2, 2)]\n            L.sort()\n            print(len(L))\n            printp(L)\n        else:\n            min2 = 999999\n            max2 = 0\n            na = a + b - na\n            for x in range(max(na - b, 0), min(a, na) + 1, 1):\n                brks = na + a - 2 * x\n                if brks < 0:\n                    break\n                if brks < min2:\n                    min2 = brks\n                if brks > max2:\n                    max2 = brks\n            L = [i for i in range(min1, max1 + 2, 2)]\n            K = [i for i in range(min2, max2 + 2, 2)] + L\n            K.sort()\n            print(len(K))\n            printp(K)\n\ndef printp(X):\n    for i in X:\n        print(i, end=' ')\n    print()\nrun()", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    n = a + b\n    br = []\n    if n % 2 == 0:\n        c_1 = n // 2\n        a_0 = 0\n        a_1 = 0\n        b_0 = 0\n        b_1 = 0\n        for i in range(0, c_1 + 1):\n            a_1 = i\n            a_0 = a - i\n            b_1 = c_1 - i\n            b_0 = b - b_1\n            if a_1 >= 0 and a_0 >= 0 and (b_1 >= 0) and (b_0 >= 0):\n                br.append(a_1 + b_0)\n    else:\n        c_1 = n // 2\n        a_0 = 0\n        a_1 = 0\n        b_0 = 0\n        b_1 = 0\n        for i in range(0, c_1 + 1):\n            a_1 = i\n            a_0 = a - i\n            b_1 = c_1 - i\n            b_0 = b - b_1\n            if a_1 >= 0 and a_0 >= 0 and (b_1 >= 0) and (b_0 >= 0):\n                br.append(a_1 + b_0)\n        c_1 = n // 2 + 1\n        a_0 = 0\n        a_1 = 0\n        b_0 = 0\n        b_1 = 0\n        for i in range(0, c_1 + 1):\n            a_1 = i\n            a_0 = a - i\n            b_1 = c_1 - i\n            b_0 = b - b_1\n            if a_1 >= 0 and a_0 >= 0 and (b_1 >= 0) and (b_0 >= 0):\n                br.append(a_1 + b_0)\n    br = list(set(br))\n    br.sort()\n    print(len(br))\n    print(*br)", "import sys\nimport os.path\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\ndepth = 1000005\nmod = 1000000007\nlim = mod * mod\nsys.setrecursionlimit(depth)\nfrom math import inf, ceil, sqrt\nfrom collections import defaultdict\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    tot = a + b\n    (odd, evn) = ((tot + 1) // 2, tot // 2)\n    ans = set()\n    for i in range(0, a + 1):\n        oddplace = i\n        evnplace = a - i\n        if oddplace > odd:\n            continue\n        if evnplace > evn:\n            continue\n        remodd = odd - oddplace\n        remevn = evn - evnplace\n        breaks = evnplace + remodd\n        ans.add(breaks)\n    (odd, evn) = (tot // 2, (tot + 1) // 2)\n    for i in range(0, a + 1):\n        oddplace = i\n        evnplace = a - i\n        if oddplace > odd:\n            continue\n        if evnplace > evn:\n            continue\n        remodd = odd - oddplace\n        remevn = evn - evnplace\n        breaks = evnplace + remodd\n        ans.add(breaks)\n    print(len(ans))\n    ans = list(ans)\n    ans.sort()\n    print(*ans)", "t = int(input())\nfor q in range(t):\n    (a, b) = [int(i) for i in input().split()]\n    s = set()\n    n = a + b\n    n2 = n // 2\n    n3 = n - n2\n    for i in range(min(n2, a) + 1):\n        j = n3 - (a - i)\n        if j < 0 or j > b:\n            continue\n        s.add(i + j)\n    (n2, n3) = (n3, n2)\n    for i in range(min(n2, a) + 1):\n        j = n3 - (a - i)\n        if j < 0 or j > b:\n            continue\n        s.add(i + j)\n    s = sorted(list(s))\n    print(len(s))\n    for i in s:\n        print(i, end=' ')\n    print()", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    n = a + b\n    if n % 2 != 0:\n        n1 = n // 2 + 1\n        n2 = n // 2\n    else:\n        n1 = n2 = n // 2\n    l = []\n    i = 0\n    while i != a + 1 and i != b + 1:\n        if n1 > a:\n            t1 = n1 - (a - i)\n            k = t1 + i\n            l.append(k)\n        else:\n            t1 = i\n            an = a - (n1 - i)\n            k = an + t1\n            l.append(k)\n        if n2 > a:\n            t1 = n2 - (a - i)\n            k = t1 + i\n            l.append(k)\n        else:\n            t1 = i\n            an = a - (n2 - i)\n            k = an + t1\n            l.append(k)\n        i += 1\n    l = sorted(set(l))\n    print(len(l))\n    for val in l:\n        print(val, end=' ')\n    print()", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    tot = a + b\n    pos1 = tot // 2\n    pos2 = tot // 2\n    if tot % 2 != 0:\n        pos2 += 1\n    ans = []\n    upper1 = min(pos1, b) + min(pos2, a)\n    lower1 = 0\n    if pos1 <= a:\n        lower1 += a - pos1\n    if pos2 <= b:\n        lower1 += b - pos2\n    upper2 = min(pos2, b) + min(pos1, a)\n    lower2 = 0\n    if pos2 <= a:\n        lower2 += a - pos2\n    if pos1 <= b:\n        lower2 += b - pos1\n    for i in range(0, tot + 1):\n        inc = -1\n        if i >= lower1 and i <= upper1:\n            if lower1 % 2 == 0 and i % 2 == 0:\n                inc = i\n            elif lower1 % 2 != 0 and i % 2 != 0:\n                inc = i\n        if i >= lower2 and i <= upper2:\n            if lower2 % 2 == 0 and i % 2 == 0:\n                inc = i\n            elif lower2 % 2 != 0 and i % 2 != 0:\n                inc = i\n        if inc != -1:\n            ans.append(inc)\n    print(len(ans))\n    for i in ans:\n        print(i, end=' ')\n    print('')", "t = int(input())\nfor _ in range(t):\n    (A, B) = map(int, input().split())\n    n = A + B\n    l = []\n    for i in range(0, n + 1):\n        poss = False\n        for a in [n // 2, (n + 1) // 2]:\n            d = A - a\n            b = n - a\n            if i > b:\n                ia = b - (i - b)\n            else:\n                ia = i\n            if i > a:\n                ib = a - (i - a)\n            else:\n                ib = i\n            if (A + a + i) % 2 != 0:\n                continue\n            if A > a + ia or A < a - ib:\n                continue\n            poss = True\n        if poss:\n            l.append(str(i))\n    print(len(l))\n    print(' '.join(l))", "def f(a, b, k):\n    n = a + b\n    z = n // 2\n    o = n - z\n    x = (o - z + b - a + 2 * k) / 4\n    y = (o - z + a - b + 2 * k) / 4\n    if x == int(x) and 0 <= x <= b and (0 <= k - x <= a):\n        return 1\n    if y == int(y) and 0 <= y <= a and (0 <= k - y <= b):\n        return 1\n    return 0\nfor _ in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    n = a + b\n    l = []\n    for i in range(a + b + 1):\n        if f(a, b, i):\n            l.append(i)\n    print(len(l))\n    for i in l:\n        print(i, end=' ')\n    print()"]