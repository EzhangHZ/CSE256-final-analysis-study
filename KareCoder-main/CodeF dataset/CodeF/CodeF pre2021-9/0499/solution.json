["import sys\n\ndef main():\n    res = ''\n    input = sys.stdin.readline\n    print = sys.stdout.write\n    t = int(input())\n    for _ in range(t):\n        sub_res = 0\n        n = int(input())\n        (hp_f, boom_f) = map(int, input().split())\n        boom_last = boom_f\n        min_hp = hp_f\n        for __ in range(n - 1):\n            (hp, boom) = map(int, input().split())\n            d = hp - boom_last\n            if d > 0:\n                sub_res += d\n                hp -= d\n            if hp < min_hp:\n                min_hp = hp\n            boom_last = boom\n        (hp, boom) = (hp_f, boom_f)\n        d = hp - boom_last\n        if d > 0:\n            sub_res += d\n        if hp - d < min_hp:\n            min_hp = hp - d\n        sub_res += min_hp\n        res += str(sub_res) + '\\n'\n    print(res)\nmain()", "import sys\n\ndef LI():\n    return tuple(map(int, sys.stdin.readline().split()))\n\ndef I():\n    return int(sys.stdin.readline())\n\ndef JA(a, sep):\n    return sep.join(map(str, a))\n\ndef main():\n    t = I()\n    rr = []\n    for _ in range(t):\n        n = I()\n        ab = [LI() for _ in range(n)]\n        r = 0\n        t = 10 ** 12\n        for i in range(n):\n            a = ab[i][0]\n            k = max(a - ab[i - 1][1], 0)\n            r += k\n            if t > a - k:\n                t = a - k\n        rr.append(r + t)\n    return JA(rr, '\\n')\nprint(main())", "import sys\n\ndef solve():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n = int(sys.stdin.readline())\n        blast = 0\n        minb = 0\n        s = 0\n        a0 = 0\n        for i in range(n):\n            (ai, bi) = map(int, sys.stdin.readline().split())\n            bbigger = False\n            if i != 0:\n                if i > 1:\n                    if ai >= blast:\n                        minb = min(minb, blast)\n                    else:\n                        bbigger = True\n                        minb = min(minb, ai)\n                elif ai >= blast:\n                    minb = blast\n                else:\n                    bbigger = True\n                    minb = ai\n                if not bbigger:\n                    s += ai - blast\n            else:\n                a0 = ai\n            blast = bi\n        bbigger = False\n        if a0 >= blast:\n            minb = min(minb, blast)\n        else:\n            bbigger = True\n            minb = min(minb, a0)\n        if not bbigger:\n            s += a0 - blast\n        print(s + minb)\nsolve()", "from sys import stdin, stdout\nt = int(stdin.readline())\nfor _ in range(t):\n    n = int(stdin.readline())\n    (a, b) = map(int, stdin.readline().split())\n    ttt = a\n    mn = a\n    if n == 1:\n        print(a)\n    else:\n        ans = 0\n        for i in range(n - 1):\n            (x, y) = map(int, stdin.readline().split())\n            if x > b:\n                ans += x - b\n                x = b\n            mn = min(mn, x)\n            (a, b) = (x, y)\n        if ttt > b:\n            ans += ttt - b\n            ttt = b\n        mn = min(mn, ttt)\n        ans += mn\n        print(ans)", "import sys\nfrom itertools import islice\nstdin = sys.stdin\nT = int(stdin.readline())\n\ndef solve(arr):\n    prev_exp = arr[-1][-1]\n    bullets = 0\n    mini = 1000000000000000000\n    for (hp, exp) in arr:\n        if hp > prev_exp:\n            bullets += hp - prev_exp\n        candidate = prev_exp if prev_exp < hp else hp\n        if candidate < mini:\n            mini = candidate\n        prev_exp = exp\n    return bullets + mini\nfor t in range(T):\n    n = int(stdin.readline())\n    monsters = [[int(y) for y in x.split()] for x in islice(stdin, n)]\n    r = solve(monsters)\n    print(r)", "import sys\ninput = sys.stdin.readline\nINF = 1001002003004005006\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        (ans, mi, blast) = (0, INF, 0)\n        for i in range(n):\n            (a, b) = map(int, input().split())\n            if i:\n                if a > blast:\n                    ans += a - blast\n                    mi = min(mi, blast)\n                else:\n                    mi = min(mi, a)\n            else:\n                a0 = a\n            blast = b\n        ans += max(0, a0 - blast)\n        mi = min(mi, min(a0, blast))\n        print(ans + mi)\n    return\nmain()", "import sys\n\ndef solve():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n = int(sys.stdin.readline())\n        blast = 0\n        minb = 0\n        s = 0\n        a0 = 0\n        for i in range(n):\n            (ai, bi) = map(int, sys.stdin.readline().split())\n            bbigger = False\n            if i != 0:\n                if i > 1:\n                    if ai >= blast:\n                        minb = min(minb, blast)\n                    else:\n                        bbigger = True\n                        minb = min(minb, ai)\n                elif ai >= blast:\n                    minb = blast\n                else:\n                    bbigger = True\n                    minb = ai\n                if not bbigger:\n                    s += ai - blast\n            else:\n                a0 = ai\n            blast = bi\n        s += max(0, a0 - blast)\n        minb = min(minb, min(a0, blast))\n        print(s + minb)\nsolve()", "import sys\n\ndef solve():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n = int(sys.stdin.readline())\n        blast = 0\n        minb = 0\n        s = 0\n        a0 = 0\n        for i in range(n):\n            (ai, bi) = map(int, sys.stdin.readline().split())\n            bbigger = False\n            if i != 0:\n                if i > 1:\n                    if ai >= blast:\n                        minb = min(minb, blast)\n                    else:\n                        bbigger = True\n                        minb = min(minb, ai)\n                elif ai >= blast:\n                    minb = blast\n                else:\n                    bbigger = True\n                    minb = ai\n                if not bbigger:\n                    s += ai - blast\n            else:\n                a0 = ai\n            blast = bi\n        s += max(0, a0 - blast)\n        minb = min(minb, min(a0, blast))\n        print(s + minb)\nsolve()", "import sys\ninput = sys.stdin.readline\nINF = 1001002003004005006\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        (ans, mi, blast) = (0, INF, 0)\n        for i in range(n):\n            (a, b) = map(int, input().split())\n            if i:\n                if a > blast:\n                    ans += a - blast\n                    mi = min(mi, blast)\n                else:\n                    mi = min(mi, a)\n            else:\n                a0 = a\n            blast = b\n        ans += max(0, a0 - blast)\n        mi = min(mi, min(a0, blast))\n        print(ans + mi)\n    return\nmain()", "import sys\nfrom itertools import islice\nstdin = sys.stdin\nT = int(stdin.readline())\n\ndef kill_mon(arr):\n    last_explosion = arr[-1][1]\n    bullets = 0\n    mini = 100000000000000000000\n    for (hp, exp) in arr:\n        if hp > last_explosion:\n            bullets += hp - last_explosion\n        candidate = last_explosion if last_explosion < hp else hp\n        if candidate < mini:\n            mini = candidate\n        last_explosion = exp\n    return bullets + mini\nfor x in range(T):\n    n = int(stdin.readline())\n    monsters = [[int(y) for y in x.split()] for x in islice(stdin, n)]\n    print(kill_mon(monsters))"]