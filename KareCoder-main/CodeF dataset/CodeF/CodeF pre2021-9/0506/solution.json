["for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    st = ['a'] + list(input().strip()) + ['z']\n    st.sort()\n    if st[1] != st[k]:\n        print(st[k])\n    elif st[k + 1] != st[n]:\n        print(st[1] + ''.join(st[k + 1:-1]))\n    else:\n        x = (n - k) // k + (n % k != 0)\n        print(st[1] + st[-2] * x)", "t = int(input())\n\ndef sol():\n    (n, k) = map(int, input().split())\n    sr = input().strip()\n    s = sorted([c for c in sr])\n    if k == 1:\n        return ''.join(s)\n    if s[k - 1] != s[0] or k == n:\n        return s[k - 1]\n    if s[k] == s[n - 1]:\n        return s[k - 1] + s[k] * ((n - 1) // k)\n    return ''.join(s[k - 1:])\nfor _ in range(t):\n    print(sol())", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    x = ''.join(sorted(list(s)))\n    ans = x[k - 1]\n    if ans == x[0]:\n        if n != k and len(list(set(list(x[k:])))) == 1:\n            ans += x[k] * ((n - k - 1) // k + 1)\n        elif n != k:\n            ans += x[k:]\n    print(ans)", "for t in range(int(input())):\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    s = input()\n    s = sorted(list(s))\n    a = ''.join(s)\n    ans = a[k - 1]\n    if ans == a[0]:\n        if n != k and len(list(set(list(a[k:])))) == 1:\n            ans += a[k] * ((n - k - 1) // k + 1)\n        elif n != k:\n            ans += a[k:]\n    print(ans)", "from math import ceil\nfor _ in ' ' * int(input()):\n    (n, k) = map(int, input().split())\n    s = sorted(input())\n    print(s[k - 1] if s[0] != s[k - 1] else s[k - 1] + s[-1] * ceil((n - k) / k) if len(set(s[k:])) == 1 else ''.join(s[k - 1:]))", "from math import ceil\nfor _ in ' ' * int(input()):\n    (n, k) = map(int, input().split())\n    s = sorted(input())\n    print(s[k - 1] if s[0] != s[k - 1] else s[k - 1] + s[-1] * ceil((n - k) / k) if len(set(s[k:])) == 1 else ''.join(s[k - 1:]))", "t = int(input())\nfor i in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    s = input()\n    sn = ''.join(sorted(s))\n    ans = [sn[i] for i in range(k)]\n    if len(set(ans)) > 1:\n        print(ans[-1])\n    elif len(set(sn[k:])) > 1:\n        print(ans[0] + sn[k:])\n    else:\n        rem = n - k\n        if rem <= k:\n            rem = min(rem, 1)\n        num = rem // k + [0, 1][rem % k > 0]\n        print(ans[0] + sn[-1] * num)", "from collections import Counter\n\ndef f(s, k):\n    l = list(s)\n    l = sorted(l)\n    base = l[:k]\n    tt = l[k:]\n    cnt = Counter(tt)\n    cnt2 = Counter(base)\n    mns = min(base)\n    if tt:\n        mn = max(tt)\n        if len(cnt) == 1:\n            i = mn\n            k = cnt2[mns]\n            tc = cnt[i]\n            cc = cnt[i] // k\n            tc -= cnt[i] // k * k\n            t = i * cc\n            for id in range(len(base)):\n                if tc:\n                    base[id] += t + i\n                    tc -= 1\n                else:\n                    base[id] += t\n                    break\n        else:\n            for i in cnt:\n                base[0] += i * cnt[i]\n    return max(base)\nfor _ in range(int(input())):\n    (N, K) = map(int, input().strip().split())\n    s = input()\n    print(f(s, K))", "t = int(input())\nfor i in range(t):\n    (n, k) = [int(v) for v in input().split()]\n    s = list(input())\n    s.sort(reverse=True)\n    s = ''.join(s)\n    if k == n:\n        print(s[0])\n    elif len(set(s[-k:])) >= 2:\n        print(s[-k])\n    else:\n        res = s[-1]\n        if len(set(s[:-k])) == 1:\n            r = n - k\n            res += (r // k + int(bool(r % k))) * s[0]\n        else:\n            res += s[:-k][::-1]\n        print(res)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    ans = ''\n    s.sort()\n    if s[0] != s[k - 1] or k == n:\n        ans += s[k - 1]\n        print(ans)\n    else:\n        ans += s[0]\n        if s[k] != s[n - 1]:\n            for i in range(k, n):\n                ans += s[i]\n        else:\n            for i in range((n - k + k - 1) // k):\n                ans += s[n - 1]\n        print(ans)", "import sys, os.path\nimport math\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    l = [i for i in s]\n    l.sort()\n    s = ''.join(l)\n    if s[0] != s[k - 1]:\n        print(s[k - 1])\n    else:\n        ans = s[0]\n        if k < n:\n            if s[k] != s[n - 1]:\n                for i in range(k, n):\n                    ans += s[i]\n                print(ans)\n            else:\n                for i in range((n - k + k - 1) // k):\n                    ans += s[n - 1]\n                print(ans)\n        else:\n            print(ans)", "from bisect import bisect_right\nfrom collections import Counter\n\ndef f(s, k):\n    l = list(s)\n    l = sorted(l)\n    base = l[:k]\n    tt = l[k:]\n    cnt = Counter(tt)\n    cnt2 = Counter(base)\n    mns = min(base)\n    if tt:\n        mn = max(tt)\n        if len(cnt) == 1:\n            i = mn\n            k = cnt2[mns]\n            tc = cnt[i]\n            cc = cnt[i] // k\n            tc -= cnt[i] // k * k\n            t = i * cc\n            for id in range(len(base)):\n                if tc:\n                    base[id] += t + i\n                    tc -= 1\n                else:\n                    base[id] += t\n                    break\n        else:\n            for i in cnt:\n                base[0] += i * cnt[i]\n    return max(base)\nfor _ in range(int(input())):\n    (N, K) = map(int, input().strip().split())\n    s = input()\n    print(f(s, K))", "from collections import Counter\n\ndef f(s, k):\n    l = sorted(list(s))\n    base = l[:k]\n    tt = l[k:]\n    cnt = Counter(tt)\n    cnt2 = Counter(base)\n    mns = min(base)\n    if tt:\n        mn = max(tt)\n        if len(cnt) == 1:\n            i = mn\n            k = cnt2[mns]\n            tc = cnt[i] % k\n            cc = cnt[i] // k\n            t = i * cc\n            for id in range(len(base)):\n                if tc:\n                    base[id] += t + i\n                    tc -= 1\n                else:\n                    base[id] += t\n                    break\n        else:\n            for i in cnt:\n                base[0] += i * cnt[i]\n    return max(base)\nfor _ in range(int(input())):\n    (N, K) = map(int, input().strip().split())\n    s = input()\n    print(f(s, K))", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    s = sorted(s)\n    l = [0 for i in range(26)]\n    for i in s:\n        l[ord(i) - ord('a')] += 1\n    i = 0\n    while i < 26 and l[i] == 0:\n        i += 1\n    if l[i] < k:\n        print(s[k - 1])\n    elif k == 1:\n        print(''.join(s))\n    else:\n        while i < 26:\n            if l[i] == 0:\n                i += 1\n            else:\n                break\n        if sum(l) == l[i]:\n            ans = chr(i + ord('a')) * math.ceil(l[i] / k)\n            print(ans)\n        else:\n            ans = chr(i + ord('a')) * (l[i] - (k - 1))\n            for j in range(i + 1, 26):\n                if l[j] == n - l[i] and l[i] == k:\n                    ans += chr(j + ord('a')) * math.ceil(l[j] / k)\n                else:\n                    ans += chr(j + ord('a')) * l[j]\n            print(ans)", "def main_function():\n    from sys import stdin\n    input = stdin.readline\n    t = int(input())\n    for _ in range(t):\n        (n, k) = list(map(int, input().split()))\n        a = list(input()[:-1])\n        a.sort()\n        if len(set(a)) == 1:\n            print(''.join(a[:n // k + 1 if n % k != 0 else n // k]))\n            continue\n        if a[k - 1] != a[0]:\n            print(a[k - 1])\n        elif len(set(a)) == 2 and a.count(a[0]) == k:\n            tmp = a[0] + a[-1] * (a.count(a[-1]) // k)\n            tmp += a[-1] if a.count(a[-1]) % k != 0 else ''\n            print(tmp)\n        else:\n            print(''.join([a[0]] + a[k:]))\nmain_function()", "import sys\nstdin = sys.stdin\nns = lambda : stdin.readline().rstrip()\nni = lambda : int(stdin.readline().rstrip())\nnm = lambda : map(int, stdin.readline().split())\nnl = lambda : list(map(int, stdin.readline().split()))\n\ndef solve():\n    (n, k) = nm()\n    s = list(ns())\n    s.sort()\n    if s[0] != s[k - 1]:\n        print(s[k - 1])\n        return\n    if len(set(s[k:])) == 1:\n        ret = s[::k]\n    else:\n        ret = [s[0]] + s[k:]\n    print(''.join(ret))\n    return\nt = ni()\nfor _ in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = ''.join(sorted(input()))\n    if s[0] != s[k - 1] or k == n:\n        print(s[k - 1])\n    elif s[0] == s[k - 1]:\n        if s[k] != s[n - 1]:\n            print(s[0] + s[k:])\n        else:\n            print(s[0] + s[k] * ((n - k) // k + [0, 1][(n - k) % k > 0]))", "def solve():\n    (N, K) = map(int, input().split())\n    S = input()\n    S = sorted(S)\n    if len(set(S[:K])) == 1:\n        if len(set(S[K:])) == 1:\n            print(''.join(map(str, [v for v in S[::K]])))\n        else:\n            print(''.join(S[K - 1:]))\n    else:\n        print(S[K - 1])\nfor _ in range(int(input())):\n    solve()", "t = int(input())\n\ndef solve(l, k):\n    res = []\n    if l[0] != l[k - 1] or len(l) == k:\n        return l[k - 1]\n    if l[k] != l[-1]:\n        return [l[0]] + l[k:]\n    return [l[0]] + [l[k]] * ((len(l) - 1) // k)\nfor i in range(1, t + 1):\n    (n, k) = list(map(int, input().split()))\n    s = sorted(list(input()))\n    print(''.join(solve(s, k)))", "import math\nT = int(input())\nfor t in range(T):\n    (N, K) = [int(_) for _ in input().split()]\n    S = sorted(input())\n    if S[K - 1] != S[0] or K == len(S):\n        print(S[K - 1])\n        continue\n    if S[K] == S[-1]:\n        print(S[0] + S[K] * math.ceil((len(S) - K) / K))\n    else:\n        print(S[0] + ''.join(S[K:]))", "N = int(input())\nfor _ in range(N):\n    (n, k) = map(int, input().split())\n    s = list(input().strip())\n    s = sorted(s)\n    res = []\n    if s[0] != s[k - 1]:\n        res += [s[k - 1]]\n    else:\n        res += s[k - 1]\n        s = s[k:]\n        if len(s) > 0:\n            if s[0] == s[-1]:\n                if len(s) % k == 0:\n                    res += [s[0]] * (len(s) // k)\n                else:\n                    res += [s[0]] * (len(s) // k + 1)\n            else:\n                res += s\n    print(''.join(res))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = input()\n    letters = sorted(set(a))\n    counts = [a.count(x) for x in letters]\n    if len(letters) == 1:\n        length = n // k\n        if n % k != 0:\n            length += 1\n        print(letters[0] * length)\n        continue\n    if len(letters) > 2:\n        count = 0\n        max_letter = letters[0]\n        for (i, c) in enumerate(counts):\n            count += c\n            if count >= k:\n                max_letter = letters[i]\n                break\n        if max_letter != letters[0]:\n            print(max_letter)\n            continue\n        print(letters[0] * (counts[0] - k + 1), end='')\n        for i in range(1, len(counts)):\n            print(letters[i] * counts[i], end='')\n        print()\n    if len(letters) == 2:\n        count = 0\n        max_letter = letters[0]\n        for (i, c) in enumerate(counts):\n            count += c\n            if count >= k:\n                max_letter = letters[i]\n                break\n        if max_letter != letters[0]:\n            print(max_letter)\n            continue\n        if counts[0] == k:\n            print(letters[0], end='')\n            length = counts[1] // k\n            if counts[1] % k != 0:\n                length += 1\n            print(letters[1] * length)\n            continue\n        print(letters[0] * (counts[0] - k + 1), end='')\n        print(letters[1] * counts[1])", "import sys\nimport heapq\nimport math\nimport bisect\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef iinput():\n    return int(input())\n\ndef rinput():\n    return map(int, input().split())\n\ndef rlinput():\n    return list(map(int, input().split()))\n\ndef srlinput():\n    return sorted(list(map(int, input().split())))\n\ndef main():\n    (n, k) = rinput()\n    s = input()\n    q = sorted(list(s))\n    w = dict()\n    t = sorted(list(set(q)))\n    if k == 1:\n        print(''.join(q))\n        return 0\n    for i in q:\n        if i in w:\n            w[i] += 1\n        else:\n            w[i] = 1\n    if q[0] != q[k - 1]:\n        print(q[k - 1])\n        return 0\n    elif len(w) > 2:\n        print(q[0] + ''.join(q[k:]))\n    elif len(w) == 1:\n        print(q[0] * ((n + k - 1) // k))\n    else:\n        w[q[0]] -= k\n        if w[q[0]] > 0:\n            print(q[0] + ''.join(q[k:]))\n        else:\n            print(q[0] + t[1] * ((w[t[1]] + k - 1) // k))\nfor sdfghjkl in range(iinput()):\n    main()", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(input())\n    a.sort()\n    if a[k - 1] != a[0] or k == n:\n        print(a[k - 1])\n    else:\n        b = a[k:]\n        if b.count(b[0]) == n - k:\n            c = n // k\n            if n % k == 0:\n                c -= 1\n            print(a[0] + b[0] * c)\n        else:\n            print(a[0] + ''.join(b))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = sorted(input())\n    string = ''.join(s)\n    res = [string[i] for i in range(k)]\n    if res[-1] == res[0]:\n        if len(set(string[k:])) != 1:\n            print(res[0] + string[k:])\n        else:\n            x = (n - k) // k\n            if (n - k) % k != 0:\n                x += 1\n            print(res[0] + string[k] * x)\n    else:\n        print(res[-1])", "q = int(input())\nwhile q:\n    q -= 1\n    (n, k) = map(int, input().strip().split(' '))\n    s = list(input())\n    s.sort()\n    j = set(s[:k])\n    v = set(s[k:])\n    if len(j) == 1:\n        t = s[k - 1]\n        if len(v) == 1:\n            t += s[k] * ((n - k) // k) + s[k] * min(1, (n - k) % k)\n        else:\n            t = t + ''.join(s[k:])\n        print(t)\n    else:\n        print(s[k - 1])", "def solve(n, k, s):\n    s = sorted(s)\n    if k == 1:\n        return ''.join(s)\n    if s[k - 1] != s[0] or k == n:\n        return s[k - 1]\n    if s[k] != s[n - 1]:\n        return str(s[0]) + ''.join(s[k:])\n    return str(s[0]) + str(s[k]) * ((n - 1) // k)\ntests = int(input())\nfor test in range(tests):\n    (n, k) = map(int, input().split())\n    s = input()\n    print(solve(n, k, s))", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = sorted(input())\n    min_s = s[0]\n    n_min = 0\n    for i in s:\n        if i == min_s:\n            n_min += 1\n        else:\n            break\n    unique = len(set(s))\n    if n_min < k:\n        print(s[k - 1])\n    elif unique == 1:\n        print(''.join(s[0] * ceil(n / k)))\n    elif unique == 2 and n_min == k:\n        if n % k == 0:\n            print(''.join(s[k - 1::k]))\n        else:\n            print(''.join(s[0] + s[k] * ceil((n - k) / k)))\n    else:\n        print(''.join(s[k - 1:]))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = sorted(input())\n    an = ''\n    x = s[0:k]\n    if x[0] == x[-1]:\n        an += x[0]\n        if n > k:\n            if s[k] == s[-1]:\n                if s[k] == x[0]:\n                    an = s[-1] * ((n + k - 1) // k)\n                else:\n                    an += s[-1] * ((n - 1) // k)\n            else:\n                an += ''.join(s[k:])\n    else:\n        an += x[-1]\n    print(an)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = ''.join(sorted(input()))\n    if s[0] != s[k - 1] or k == n:\n        print(s[k - 1])\n    elif s[k] == s[-1]:\n        print(s[0] + s[k] * ((n - 1) // k))\n    else:\n        print(s[k - 1:])", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    string = input()\n    arr = []\n    for i in string:\n        arr += [i]\n    arr.sort()\n    worststring = ''\n    slicearr = arr[:k]\n    if slicearr[-1] == slicearr[0]:\n        worststring += slicearr[0]\n    else:\n        worststring = slicearr[-1]\n        print(worststring)\n        continue\n    slicearr = arr[k:]\n    if slicearr != []:\n        if slicearr[0] == slicearr[-1]:\n            worststring += slicearr[0] * ((n - k - 1) // k + 1)\n        else:\n            worststring += ''.join(slicearr)\n    print(worststring)", "T = int(input())\nfor _ in range(T):\n    (N, K) = map(int, input().split())\n    S = input()\n    ss = sorted(S)\n    if K == 1:\n        print(''.join(ss))\n        continue\n    if ss[0] != ss[K - 1]:\n        print(ss[K - 1])\n        continue\n    if N > K and ss[K] == ss[-1]:\n        l = 0 - -(N - K) // K\n        print(ss[0] + ss[K] * l)\n        continue\n    print(''.join(ss[K - 1:]))", "import math\ntestCases = int(input())\nfor _ in range(testCases):\n    (n, k) = map(int, input().split())\n    a = ''.join(sorted(input()))\n    if n == k or a[0] != a[k - 1]:\n        print(a[k - 1])\n    elif a[k] == a[-1]:\n        print(a[0] + a[k] * ((n - 1) // k))\n    else:\n        print(a[k - 1:])", "t = int(input())\nfor T in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    l = list(s)\n    l.sort()\n    init = set(l[:k])\n    if len(init) > 1:\n        print(l[k - 1])\n    else:\n        init = set(l[k:])\n        if len(init) == 1:\n            if (n - k) % k == 0:\n                ans = (n - k) // k\n            else:\n                ans = (n - k) // k + 1\n            print(''.join(l[k - 1:k - 1 + ans + 1]))\n        else:\n            print(''.join(l[k - 1:]))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    A = input()\n    A = list(A)\n    A.sort()\n    if k == n:\n        print(A[-1])\n    elif A[0] == A[k - 1]:\n        C = list(set(A[k:]))\n        if len(C) == 1:\n            t = A[0] + ''.join(A[k] * (len(A[k:]) // k))\n            if len(A[k:]) % k != 0:\n                t += A[k]\n            print(t)\n        else:\n            B = A[k:]\n            print(A[0] + ''.join(B))\n    else:\n        print(A[k - 1])", "def main():\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        s = list(input())\n        s.sort()\n        if len(set(s)) == 1:\n            print(''.join(s[:n // k + 1 if n % k != 0 else n // k]))\n        elif s[0] != s[k - 1]:\n            print(s[k - 1])\n        elif len(set(s)) == 2 and s.count(s[0]) == k:\n            res = s[0] + s[-1] * (s.count(s[-1]) // k)\n            res += s[-1] if s.count(s[-1]) % k != 0 else ''\n            print(res)\n        else:\n            print(''.join([s[0]] + s[k:]))\nmain()", "def solution():\n    (n, k) = map(int, input().split())\n    s = ''.join(sorted(input()))\n    if s[0] != s[k - 1] or k == n:\n        print(s[k - 1])\n    elif s[k] == s[-1]:\n        print(s[0] + s[k] * ((n - 1) // k))\n    else:\n        print(s[k - 1:])\nfor _ in range(int(input())):\n    solution()", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    s = sorted(s)\n    if s[k - 1] != s[0] or n == k:\n        print(s[k - 1])\n    else:\n        ans = s[0]\n        rem = s[k:]\n        if rem.count(rem[0]) == len(rem):\n            i = 0\n            while i < len(rem):\n                ans += rem[i]\n                i += k\n        else:\n            for i in rem:\n                ans += i\n        print(ans)", "def solve():\n    (n, k) = map(int, input().split())\n    s = ''.join(sorted(input()))\n    if s[0] != s[k - 1] or k == n:\n        return s[k - 1]\n    if s[k] == s[-1]:\n        return s[0] + s[k] * ((n - 1) // k)\n    return s[k - 1:]\nt = int(input())\nfor _ in range(t):\n    print(solve())", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = ''.join(sorted(input()))\n    if s[0] != s[k - 1] or k == n:\n        print(s[k - 1])\n    elif s[k] == s[-1]:\n        print(s[0] + s[k] * ((n - 1) // k))\n    else:\n        print(s[k - 1:])", "n = int(input())\nwhile n > 0:\n    n = n - 1\n    l = []\n    (m, k) = map(int, input().split())\n    a = input()\n    s = sorted(a)\n    if s[0] != s[k - 1]:\n        print(s[k - 1])\n        continue\n    l.append(s[0])\n    if m != k:\n        if s[k] != s[m - 1]:\n            for i in range(k, m):\n                l.append(s[i])\n        else:\n            for i in range((m - k + k - 1) // k):\n                l.append(s[m - 1])\n    print(''.join(l))", "def solver(n, k, s):\n    if s[0] != s[k - 1] or k == n:\n        return s[k - 1]\n    elif s[k] == s[-1]:\n        return s[0] + s[k] * ((n - 1) // k)\n    else:\n        return s[k - 1:]\nfor _ in range(int(input())):\n    (N, K) = [int(i) for i in input().split()]\n    t = ''.join(sorted(input()))\n    print(solver(N, K, t))", "import math\n\ndef solve(n, k, s):\n    s = ''.join(sorted(s))\n    if k == 1:\n        print(s)\n        return None\n    if s[0] != s[k - 1]:\n        print(s[k - 1])\n        return None\n    answers = []\n    for i in range(k):\n        answers.append(s[i])\n    if len(set(s[k:])) == 1:\n        print(answers[0] + s[k] * math.ceil((n - k) / k))\n    else:\n        print(answers[0] + ''.join(s[k:]))\nno = int(input())\nfor i in range(no):\n    (n, k) = tuple(map(int, input().strip().split()))\n    s = input()\n    solve(n, k, s)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = ''.join(sorted(input()))\n    if s[0] != s[k - 1] or k == n:\n        print(s[k - 1])\n    elif s[k] == s[-1]:\n        print(s[0] + s[k] * ((n - 1) // k))\n    else:\n        print(s[k - 1:])", "def min_max_lexicographic(string, k):\n    s = sorted(list(string))\n    n = len(s)\n    if s[0] != s[k - 1] or k == n:\n        return s[k - 1]\n    if s[k] != s[n - 1]:\n        return ''.join(s[k - 1:])\n    return ''.join([s[0]] + [s[k]] * ((n - k - 1) // k + 1))\nt = int(input())\nfor _ in range(t):\n    (n, k) = [int(k) for k in input().split()]\n    s = input()\n    print(min_max_lexicographic(s, k))", "def solve():\n    (n, k) = map(int, input().split(' '))\n    s = input()\n    sor = sorted(s)\n    if n == k:\n        print(sor[-1])\n        return\n    if sor[k - 1] != sor[0]:\n        print(sor[k - 1])\n        return\n    if sor[k] != sor[n - 1]:\n        print(sor[0] + ''.join(sor[k:n]))\n    else:\n        result = sor[0]\n        for i in range(0, (n - k + k - 1) // k):\n            result += sor[n - 1]\n        print(result)\nt = int(input())\nfor i in range(t):\n    solve()", "from math import ceil\nt = int(input())\nwhile t:\n    (n, k) = [int(x) for x in input().split()]\n    s = input()\n    s = list(s)\n    s.sort()\n    if s[0] != s[k - 1] or k == n:\n        print(s[k - 1])\n    else:\n        poss = True\n        for i in range(k + 1, len(s)):\n            if s[k] != s[i]:\n                poss = False\n        if poss:\n            print(str(s[0]) + ''.join(s[k] * ceil((n - k) / k)))\n        else:\n            print(str(s[0]) + ''.join(s[k:]))\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = ''.join(sorted(input()))\n    if s[0] != s[k - 1] or k == n:\n        print(s[k - 1])\n    elif s[k] == s[-1]:\n        print(s[0] + s[k] * ((n - 1) // k))\n    else:\n        print(s[k - 1:])", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    s = sorted(s)\n    if n == k:\n        print(s[-1])\n        continue\n    if s[0] != s[k - 1]:\n        print(s[k - 1])\n        continue\n    if s[k] == s[-1]:\n        l = (len(s) - 1) // k\n        print(s[0] + s[k] * l)\n        continue\n    print(s[0] + ''.join(s[k:]))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    lis = list(s)\n    lis.sort()\n    s = ''.join(lis)\n    sub = s[:k]\n    if k == 1:\n        print(s)\n    elif len(s) == k:\n        print(sub[-1])\n    elif sub[0] == sub[-1]:\n        s = s[k:]\n        if s[0] == s[-1]:\n            if len(s) % k == 0:\n                print(sub[0] + s[0] * (len(s) // k))\n            else:\n                print(sub[0] + s[0] * (len(s) // k + 1))\n        else:\n            print(sub[0] + s)\n    else:\n        print(sub[-1])", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = ''.join(sorted(input()))\n    if s[0] != s[k - 1] or k == n:\n        print(s[k - 1])\n        continue\n    if s[k] != s[n - 1]:\n        print(s[0] + s[k:])\n    else:\n        print(s[0] + s[n - 1] * ((n - 1) // k))", "T = int(input())\nfor t in range(T):\n    (n, k) = map(int, input().split())\n    a = sorted(list(input()))\n    if k == n or a[k - 1] > a[0]:\n        print(a[k - 1])\n    elif a[k] < max(a):\n        print(a[0] + ''.join(a[k:]))\n    else:\n        print(a[0] + a[k] + a[k] * ((n - k - 1) // k))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    given = sorted(input())\n    if len(set(given[:k])) != 1:\n        ans = given[k - 1]\n    else:\n        ans = ''\n        if len(set(given[k:])) == 1:\n            for i in range(0, n, k):\n                ans += given[i]\n        else:\n            ans = ''.join(given[k - 1:])\n    print(ans)", "import math\n\ndef main():\n    t = int(input())\n    for test in range(t):\n        (n, k) = list(map(int, input().split()))\n        s = [x for x in input()]\n        s.sort()\n        if k != 1:\n            anserw = ''\n            test = set(s[:k])\n            anserw += max(test)\n            if len(test) == 1:\n                test2 = set(s[k:])\n                if len(test2) == 1:\n                    anserw += s[k] * math.ceil((n - k) / k)\n                else:\n                    anserw = list(anserw) + s[k:]\n                    anserw = ''.join(anserw)\n            print(anserw)\n        else:\n            print(''.join(s))\nmain()", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    s.sort()\n    x = 1\n    if len(set(s)) == 1:\n        print(''.join([s[0]] * math.ceil(n / k)))\n    elif k == 1:\n        print(''.join(s))\n    else:\n        for i in range(1, n):\n            if s[i] == s[0]:\n                x += 1\n            else:\n                break\n        if k > x:\n            print(s[k - 1])\n        elif k < x:\n            print(''.join(s[k - 1:]))\n        elif len(set(s)) == 2:\n            if s.count(s[0]) >= s.count(s[k]):\n                print(s[0] + s[k])\n            elif s.count(s[k]) % s.count(s[0]) == 0:\n                print(''.join([s[0]] + [s[k]] * (s.count(s[k]) // s.count(s[0]))))\n            else:\n                print(''.join([s[0]] + [s[k]] * (s.count(s[k]) // s.count(s[0]) + 1)))\n        else:\n            print(''.join(s[k - 1:]))", "import math\nT = int(input())\nfor t in range(T):\n    (N, K) = [int(_) for _ in input().split()]\n    S = sorted(input())\n    if S[K - 1] != S[0] or K == len(S):\n        print(S[K - 1])\n        continue\n    if S[K] == S[-1]:\n        print(S[0] + S[K] * math.ceil((len(S) - K) / K))\n    else:\n        print(S[0] + ''.join(S[K:]))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = ''.join(sorted(input()))\n    if s[0] != s[k - 1] or k == n:\n        print(s[k - 1])\n    elif s[k] == s[-1]:\n        print(s[0] + s[k] * ((n - 1) // k))\n    else:\n        print(s[k - 1:])", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    a = ''.join(sorted(s))\n    if n == k or a[0] != a[k - 1]:\n        print(a[k - 1])\n    elif a[k] == a[-1]:\n        print(a[0] + a[k] * ((n - 1) // k))\n    else:\n        print(a[k - 1:])", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    s.sort()\n    if s[0] != s[k - 1]:\n        print(s[k - 1])\n        continue\n    else:\n        string = s[0]\n        S = s[k:]\n        if S and S[0] == S[-1]:\n            L = len(S)\n            (u, v) = divmod(L, k)\n            if v != 0:\n                base = S[0] * (u + 1)\n            else:\n                base = S[0] * u\n            print(string + base)\n        else:\n            print(string + ''.join(S))", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    x = ''.join(sorted(list(s)))\n    ans = x[k - 1]\n    if ans == x[0]:\n        if n != k and len(list(set(list(x[k:])))) == 1:\n            ans += x[k] * ((n - k - 1) // k + 1)\n        elif n != k:\n            ans += x[k:]\n    print(ans)", "def solve():\n    (n, k) = map(int, input().split())\n    s = ''.join(sorted(input()))\n    if s[0] != s[k - 1] or k == n:\n        return s[k - 1]\n    if s[k] == s[-1]:\n        return s[0] + s[k] * ((n - 1) // k)\n    return s[k - 1:]\nfor _ in range(int(input())):\n    print(solve())", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = ''.join(sorted(input()))\n    if a[0] == a[m - 1]:\n        if m < n and a[m] == a[-1]:\n            print(a[0] + a[m] * ((n - 1) // m))\n        else:\n            print(a[m - 1:])\n    else:\n        print(a[m - 1])", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    chars = sorted([c for c in s])\n    if chars[k - 1] > chars[0]:\n        print(chars[k - 1])\n    elif chars[0] == chars[n - 1]:\n        print(''.join([chars[0]] * ((n + k - 1) // k)))\n    elif chars[k] != chars[0] and chars[k] == chars[n - 1]:\n        print(''.join([chars[0]] + [chars[k]] * ((n - 1) // k)))\n    else:\n        print(''.join(chars[k - 1:]))", "def main():\n    (n, k) = map(int, input().split())\n    line = input()\n    line = sorted(line)\n    line1 = ''\n    for i in line:\n        line1 += i\n    line = line1\n    fst = line[0]\n    for i in range(0, k):\n        if fst != line[i]:\n            print(line[k - 1])\n            return\n    same = True\n    if len(line) == k:\n        print(line[-1])\n        return\n    to_same = line1[k]\n    for i in range(k, len(line)):\n        if to_same != line[i]:\n            same = False\n            break\n    if same:\n        if n % k == 0:\n            print(fst + (n // k - 1) * line[k])\n        else:\n            print(fst + n // k * line[k])\n    else:\n        print(fst + line[k:])\nt = int(input())\nfor i in range(t):\n    main()", "TT = int(input())\nwhile TT > 0:\n    TT -= 1\n    (n, k) = map(int, input().split())\n    s = input()\n    r = {}\n    for c in s:\n        if c in r:\n            r[c] += 1\n        else:\n            r[c] = 1\n    m = sorted(list(r.keys()))\n    res = ''\n    if k == 1:\n        for b in m:\n            res += b * r[b]\n    elif r[m[0]] < k:\n        x = k\n        i = 0\n        while x > 0:\n            x -= r[m[i]]\n            if x > 0:\n                i += 1\n        res = m[i]\n    elif len(m) == 1:\n        res = m[0] * ((n + k - 1) // k)\n    elif r[m[0]] == k:\n        res = m[0]\n        if len(m) == 2:\n            res += m[1] * ((r[m[1]] + k - 1) // k)\n        else:\n            for j in range(1, len(m)):\n                res += m[j] * r[m[j]]\n    else:\n        res = m[0] * (r[m[0]] - k + 1)\n        for j in range(1, len(m)):\n            res += m[j] * r[m[j]]\n    print(res)", "def rd(n):\n    if n == 0:\n        return input('')\n    if n == 1:\n        return int(input())\n    if n == 2:\n        return map(int, input().split())\n    if n == 3:\n        return list(map(int, input().split()))\n\ndef solve():\n    t = rd(1)\n    for _ in range(t):\n        (n, k) = rd(2)\n        A = rd(0)\n        s = list(A)\n        s.sort()\n        ans = s[:k]\n        l = ans[-1]\n        if ans[0] != l:\n            print(l)\n            continue\n        c = ans.count(l)\n        ans = ans[-1:]\n        del s[:k]\n        if len(set(s)) == 1:\n            n = len(s)\n            n = n // k + (n % k != 0)\n            s = s[:n]\n        for i in s:\n            ans.append(i)\n        final = ''\n        for i in ans:\n            final += i\n        print(final)\nsolve()", "t = int(input())\nans = []\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    s = sorted(s)\n    if k == 1:\n        ans.append(''.join(s))\n        continue\n    if n == k:\n        ans.append(s[k - 1])\n        continue\n    if s[k - 1] != s[0]:\n        ans.append(s[k - 1])\n        continue\n    elif len(set(s[k:])) > 1:\n        ans.append(s[0] + ''.join(s[k:]))\n        continue\n    else:\n        r = n - k\n        r = (n - k) // k + (1 if (n - k) % k else 0)\n        ans.append(s[0] + r * s[k])\nfor aa in ans:\n    print(aa)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(input())\n    l.sort()\n    s = ''.join(l)\n    competitors = k\n    ind = 0\n    ans = ''\n    if k == 1:\n        print(s)\n        continue\n    cnt = 0\n    curr = ''\n    for i in range(k):\n        if s[i] != curr:\n            curr = s[i]\n            cnt = 1\n        else:\n            cnt += 1\n    if cnt == k:\n        ans = s[k - 1]\n        s = s[k:]\n        if len(s) == 0:\n            print(ans)\n            continue\n        if s[0] == s[-1]:\n            ans += s[0] * (len(s) // cnt)\n            if len(s) % cnt != 0:\n                ans += s[0]\n        else:\n            ans += s\n        print(ans)\n        continue\n    print(s[k - 1])\n    continue", "from math import ceil\nT = int(input())\nfor t in range(T):\n    (N, K) = list(map(int, input().split()))\n    s = input()\n    s = ''.join(sorted(s))\n    if K == 1:\n        print(s)\n        continue\n    firstSame = True\n    for i in range(1, K):\n        if s[i] != s[i - 1]:\n            firstSame = False\n            break\n    if not firstSame or K == N:\n        print(s[K - 1])\n        continue\n    lastSame = True\n    count = 1\n    for i in range(K + 1, N):\n        if s[i] != s[i - 1]:\n            lastSame = False\n            break\n        count += 1\n    if not lastSame:\n        print(s[K - 1:])\n    else:\n        print(s[K - 1] + s[K] * ceil(count / K))", "def next():\n    return [int(x) for x in input().split()]\n\ndef f(s, k):\n    if s[0] != s[k - 1] or len(s) == k:\n        return s[k - 1]\n    elif len(s) == k + 1 or s[k] != s[-1]:\n        return ''.join(s[k - 1:])\n    else:\n        return s[0] + ''.join((len(s) - 1) // k * [s[k]])\n(cas,) = next()\nfor _ in range(cas):\n    (n, k) = next()\n    s = sorted(input().strip())\n    if k == 1:\n        print(''.join(s))\n    else:\n        print(f(s, k))", "import math\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    sa = s\n    s = list(s)\n    s.sort()\n    minech = s[0]\n    if s[0] != s[k - 1] or k == len(s):\n        print(s[k - 1])\n    else:\n        a = ''\n        a += s[0]\n        com = s[k]\n        if s[k] != s[n - 1]:\n            a += ''.join(s[k:])\n            print(a)\n        else:\n            a += com * math.ceil((len(s) - k) / k)\n            print(a)", "from collections import Counter, defaultdict, deque\nimport heapq as hq\nimport math\nimport sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, k) = [int(x) for x in input().split()]\n    arr = [x for x in input().strip()]\n    arr.sort()\n    first = arr[:k]\n    if first[0] == first[-1]:\n        rest = arr[k:]\n        if len(Counter(rest)) == 1:\n            print(first[0] + rest[0] * math.ceil(len(rest) / k))\n        else:\n            print(first[0] + ''.join(rest))\n    else:\n        print(first[-1])\ntt = int(input())\nfor test in range(tt):\n    solve()", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    s.sort()\n    ans = []\n    if k == n:\n        print(s[k - 1])\n    elif s[0] == s[k - 1] and s[k] == s[n - 1]:\n        ans_s = s[0] + s[k] * ((n - k) // k)\n        if n % k == 0:\n            print(ans_s)\n        else:\n            print(ans_s + s[k])\n    elif s[0] == s[k - 1]:\n        print(s[0] + ''.join(list(map(str, s[k:]))))\n    else:\n        print(s[k - 1])", "from collections import Counter\nimport sys\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    for _ in range(II()):\n        (n, k) = MI()\n        s = list(SI())\n        s.sort()\n        cc = Counter(s)\n        if cc[s[0]] < k:\n            print(s[k - 1])\n        elif len(cc) == 1:\n            c = s[0]\n            print(c * ((cc[c] + k - 1) // k))\n        elif len(cc) == 2 and cc[s[0]] == k:\n            c = s[k]\n            print(s[0] + c * ((cc[c] + k - 1) // k))\n        else:\n            ans = s[0] + ''.join(s[k:])\n            print(ans)\nmain()", "from sys import stdin, stdout\nT = int(stdin.readline().strip())\nfor caso in range(T):\n    (n, k) = map(int, stdin.readline().strip().split())\n    s = list(stdin.readline().strip())\n    s.sort()\n    s1 = ''\n    for i in s:\n        s1 += i\n    s = s1\n    if k == 1:\n        print(s1)\n        continue\n    if s[0] != s[k - 1] or k == len(s):\n        print(s[k - 1])\n        continue\n    if s[k] == s[-1]:\n        x = len(s) - k\n        y = x // k\n        if x % k != 0:\n            y += 1\n        print(s[k - 1] + s[k] * y)\n        continue\n    print(s1[k - 1:])", "from collections import defaultdict\ncon = 10 ** 9 + 7\n\ndef getlist():\n    return list(map(int, input().split()))\n\ndef main():\n    T = int(input())\n    for i in range(T):\n        (N, K) = getlist()\n        s = sorted(list(input()))\n        if N == K:\n            print(s[-1])\n        elif s[0] != s[K - 1]:\n            print(s[K - 1])\n        elif s[0] == s[-1]:\n            var = 0\n            if N % K == 0:\n                var = int(N // K)\n            else:\n                var = int(N // K) + 1\n            ans = s[0] * var\n            print(ans)\n        elif s[K] == s[-1]:\n            ans = s[0]\n            var = 0\n            if (N - K) % K == 0:\n                var = int(N // K) - 1\n            else:\n                var = int(N // K)\n            ans += var * s[-1]\n            print(ans)\n        else:\n            ans = s[0]\n            for j in range(K, N):\n                ans += s[j]\n            print(ans)\nmain()", "import math\n\ndef task(n, k, s):\n    s = [char for char in s]\n    s.sort()\n    mn = min(s[0:k])\n    mx = max(s[0:k])\n    if mn != mx or k == n:\n        print(mx)\n        return\n    a = [mn]\n    mn = min(s[k:])\n    mx = max(s[k:])\n    if mn != mx:\n        a += s[k:]\n        print(''.join(map(str, a)))\n        return\n    repeats = math.ceil((n - k) / k)\n    a += repeats * mx\n    print(''.join(map(str, a)))\nt = int(input())\nfor i in range(0, t):\n    (n, k) = map(int, input().split())\n    s = input()\n    task(n, k, s)", "from math import ceil\nT = int(input())\nfor _ in range(T):\n    (N, K) = map(int, input().split())\n    S = input()\n    count = {}\n    for car in S:\n        if car in count:\n            count[car] += 1\n        else:\n            count[car] = 1\n    count = list(count.items())\n    count.sort(key=lambda x: x[0])\n    if count[0][1] < K:\n        i = 0\n        for elt in count:\n            i += elt[1]\n            if i >= K:\n                print(elt[0])\n                break\n    elif count[0][1] == K:\n        if len(count) == 2:\n            print(count[0][0] + count[1][0] * ceil(count[1][1] / K))\n        else:\n            ans = count[0][0]\n            for elt in count[1:]:\n                ans += elt[0] * elt[1]\n            print(ans)\n    elif len(count) == 1:\n        print(count[0][0] * ceil(count[0][1] / K))\n    else:\n        ans = count[0][0] * (count[0][1] - K + 1)\n        for elt in count[1:]:\n            ans += elt[0] * elt[1]\n        print(ans)", "import sys\nfrom math import ceil\nfrom itertools import islice, cycle\nfrom collections import Counter\nstdin = sys.stdin\nt = int(stdin.readline())\nfor line in stdin:\n    if not line:\n        break\n    (n, k) = line.split()\n    (n, k) = (int(n), int(k))\n    s = stdin.readline().strip()\n    s = list(s)\n    s_set = set(s)\n    s_u = sorted(s_set)\n    s = sorted(s)\n    cnt = Counter(s)\n    if k == 1:\n        print(''.join(s))\n        continue\n    if s[k - 1] != s[0]:\n        print(s[k - 1])\n        continue\n    if len(s_set) == 1:\n        result = ceil(len(s) / k)\n        result = s[0] * result\n        result = ''.join(result)\n        print(result)\n        continue\n    if len(s_set) == 2:\n        u1 = cnt[s[0]]\n        if u1 > k:\n            pass\n        else:\n            snd_l = s_u[1]\n            result = ceil(cnt[snd_l] / k)\n            result = s[0] + snd_l * result\n            result = ''.join(result)\n            print(result)\n            continue\n    my_str = ''.join(s[k - 1:])\n    print(my_str)", "import sys\nimport collections\nreadline = sys.stdin.readline\nflush = sys.stdout.flush\nT = int(readline())\nfor t in range(1, T + 1):\n    line1 = readline().split()\n    line2 = readline().split()[0]\n    (n, k) = (int(line1[0]), int(line1[1]))\n    s = sorted(line2)\n    if s[0] == s[k - 1]:\n        if k == len(s) or s[k] != s[-1]:\n            print(s[0] + ''.join(s[k:]))\n        else:\n            print(s[0] + ''.join(s[k:k + (len(s) + k - 1) // k - 1]))\n    else:\n        print(str(s[k - 1]))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    x = list(input())\n    x.sort()\n    if x[k - 1] != x[0]:\n        print(x[k - 1])\n    else:\n        if len(set(x)) == 1:\n            fraction = n // k\n            if n % k != 0:\n                fraction += 1\n            l = x[0] * fraction\n        elif len(set(x)) == 2 and x.count(x[0]) == k:\n            b_copies = x.count(x[-1])\n            fraction = b_copies // k\n            if b_copies % k != 0:\n                fraction += 1\n            l = x[0] + x[-1] * fraction\n        else:\n            l = [x[0]] + x[k:]\n        print(''.join((val for val in l)))", "te = int(input())\nwhile te > 0:\n    (n, k) = map(int, input().split())\n    s = input()\n    s = sorted(s)\n    ans = ''\n    if s[0] != s[k - 1]:\n        print(s[k - 1])\n    else:\n        ans += s[0]\n        flag = 0\n        for i in range(k, n - 1):\n            if s[i] == s[i + 1]:\n                pass\n            else:\n                flag = 1\n                break\n        if flag == 1:\n            for i in range(k, n):\n                ans += s[i]\n        else:\n            l = (n - k) // k\n            if (n - k) % k != 0:\n                l += 1\n            for i in range(l):\n                ans += s[k]\n        print(ans)\n    te -= 1", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    ss = sorted(input().strip())\n    diff = -1\n    for i in range(k - 1):\n        if ss[i] != ss[i + 1]:\n            diff = i\n            break\n    if diff != -1 or n == k:\n        print(ss[k - 1])\n    elif ss[k] == ss[-1]:\n        print(ss[k - 1] + ss[k] * ((n - k - 1) // k + 1))\n    else:\n        print(''.join(ss[k - 1:]))", "t = int(input())\nfor i in range(t):\n    (n, k) = [int(j) for j in input().split()]\n    s = list(input())\n    s.sort()\n    if k == 1:\n        print(''.join(s))\n    elif s[0] != s[k - 1]:\n        print(s[k - 1])\n    else:\n        a = [s[0]] + s[k:]\n        b = []\n        c = []\n        r = (n - 1) % k\n        for j in range(n // k):\n            b.append(s[r + j * k])\n            c.append(s[k - 1 + j * k])\n        if r != k - 1:\n            b.append(s[r + n // k * k])\n        print(min(''.join(a), max(''.join(b), ''.join(c))))", "import bisect as bi\nimport sys\nimport collections as cc\nI = lambda : list(map(int, input().split()))\nfor tc in range(int(input())):\n    (n, m) = I()\n    s = sorted(input())\n    if m == 1:\n        print(''.join(s))\n    elif m == n:\n        print(s[m - 1])\n    else:\n        ans = ''\n        temp = s[:m]\n        if temp[0] != temp[-1]:\n            print(temp[-1])\n        else:\n            te = s[m:]\n            ans = temp[-1]\n            if te[0] == te[-1]:\n                t = te[0] * ((n - 1) // m)\n                print(ans + t)\n            else:\n                ans += ''.join(te)\n                print(ans)", "for ii in range(int(input())):\n    a = [int(i) for i in input().split()]\n    b = input()\n    n = a[0]\n    k = a[1]\n    c = sorted(b)\n    s = ['' for i in range(k)]\n    p = c[0]\n    for i in range(k):\n        s[i] = c[i]\n    if s[-1] != p:\n        print(s[-1])\n    else:\n        x = c[k:]\n        if x == []:\n            print(c[0])\n        elif len(set(x)) == 1:\n            q = len(x) // k\n            if len(x) % k != 0:\n                q += 1\n            ans = c[0]\n            for i in range(q):\n                ans = ans + x[0]\n            print(ans)\n        else:\n            print(c[0] + ''.join(x))", "import math\nfrom collections import Counter\n\ndef solve():\n    (n, k) = map(int, input().split())\n    l1 = list(input())\n    l1.sort()\n    s1 = ''.join(l1)\n    if k == 1:\n        print(s1)\n        return\n    d = Counter(s1)\n    v = list(d.items())\n    v.sort()\n    if 1:\n        c = len(d)\n        if c == 1:\n            kk = v[0][1]\n            gg = math.ceil(kk / k)\n            print(v[0][0] * gg)\n            return\n        elif c == 2:\n            if v[0][1] < k:\n                print(v[1][0])\n                return\n            else:\n                if v[0][1] == k:\n                    c1 = 1\n                    c2 = math.ceil(v[1][1] / k)\n                else:\n                    c1 = v[0][1] - k + 1\n                    c2 = v[1][1]\n                print(v[0][0] * c1 + v[1][0] * c2)\n                return\n        else:\n            if v[0][1] < k:\n                print(s1[k - 1])\n                return\n            else:\n                if v[0][1] == k:\n                    c1 = 1\n                else:\n                    c1 = v[0][1] - k + 1\n                d1 = v[0][0] * c1\n                for i in range(1, c):\n                    d1 += v[i][0] * v[i][1]\n            print(d1)\n            return\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    sort = ''.join(list(sorted(s)))\n    if sort[0] != sort[k - 1] or k == n:\n        print(sort[k - 1])\n    elif sort[k] == sort[-1]:\n        print(sort[0] + sort[k] * ((n - 1) // k))\n    else:\n        print(sort[k - 1:])", "t = int(input())\nans = ''\nwhile t > 0:\n    t -= 1\n    (n, k) = list(map(int, input().split(' ')))\n    s = sorted(input())\n    res = s[k - 1]\n    n = len(s)\n    if s[0] != s[k - 1]:\n        pass\n    elif k <= n - 1 and s[k] == s[n - 1]:\n        for i in range(k, n, k):\n            res += s[i]\n    else:\n        for i in range(k, n):\n            res += s[i]\n    ans += res\n    ans += '\\n'\nprint(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    a = sorted(s)\n    if a[0] != a[k - 1]:\n        ans = a[k - 1]\n    elif len(set(a[k:])) == 1:\n        q = (n - k) // k\n        r = (n - k) % k\n        if r == 0:\n            ans = a[0] + a[k] * q\n        else:\n            ans = a[0] + a[k] * (q + 1)\n    else:\n        y = ''.join((str(x) for x in a[k:]))\n        ans = a[0] + y\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    s.sort()\n    s = ''.join(s)\n    if s[0] != s[k - 1]:\n        print(s[k - 1])\n    elif k < n and s[k] == s[-1]:\n        print(s[0] + s[k] * ((n - k) // k + ((n - k) % k > 0)))\n    else:\n        print(s[0] + s[k:])", "def solve():\n    (N, K) = [int(el) for el in input().split()]\n    s = input()\n    s = ''.join(sorted(s))\n    if s[K - 1] != s[0]:\n        return s[K - 1]\n    elif len(set(s[K:])) == 1:\n        cnt = len(s[K:]) // K\n        if len(s[K:]) % K != 0:\n            cnt += 1\n        return s[0] + s[K] * cnt\n    else:\n        return s[0] + s[K:]\nfor t in range(1, int(input()) + 1):\n    print(solve())", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = input()\n    a = list(a)\n    a.sort()\n    if a[0] != a[k - 1] or n == k:\n        print(a[k - 1])\n    elif a[0] == a[k - 1]:\n        s = a[0]\n        if a[k] != a[n - 1]:\n            for j in range(k, n):\n                s += a[j]\n        else:\n            for j in range(0, (n - k + k - 1) // k):\n                s += a[n - 1]\n        print(s)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = sorted(input())\n    if s[:k].count(s[0]) == k:\n        if k == n:\n            ans = (n + k - 1) // k * s[0]\n        elif s[k:].count(s[k]) == n - k:\n            ans = s[0] + (n - 1) // k * s[k]\n        else:\n            ans = s[0] + ''.join(s[k:])\n    else:\n        ans = s[k - 1]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = sorted(input())\n    if s[:k].count(s[0]) == k:\n        if k == n:\n            ans = (n + k - 1) // k * s[0]\n        elif s[k:].count(s[k]) == n - k:\n            ans = s[0] + (n - 1) // k * s[k]\n        else:\n            ans = s[0] + ''.join(s[k:])\n    else:\n        ans = s[k - 1]\n    print(ans)", "from collections import Counter\nT = int(input().strip())\nfor t in range(T):\n    (n, k) = list(map(int, input().split()))\n    rem = sorted(input().strip()[:n])\n    minc = min(rem[:k])\n    maxc = max(rem[:k])\n    if minc < maxc:\n        print(maxc)\n        continue\n    start = maxc\n    rem = rem[k:]\n    if rem:\n        minc = min(rem)\n        maxc = max(rem)\n        if minc < maxc:\n            start += ''.join(rem)\n            print(''.join(start))\n            continue\n        p = len(rem)\n        start += maxc * (p // k)\n        if p % k:\n            start += maxc\n    print(''.join(start))", "from math import ceil\nt = int(input())\nwhile t:\n    t -= 1\n    (n, k) = [int(i) for i in input().split()]\n    s = input()\n    a = []\n    for i in s:\n        a.append(ord(i) - 97)\n    a.sort()\n    a1 = a[:k]\n    ans = []\n    if a1[0] == a1[-1]:\n        ans.append(a[0])\n        aset = set(a)\n        if k < len(a):\n            if a[k] == a[0] and len(aset) != 1 and (len(aset) != 2):\n                ans.extend(a[k:])\n            elif len(aset) == 2:\n                if a[k] != a[0]:\n                    for i in range(ceil((n - k) / k)):\n                        ans.append(a[k])\n                else:\n                    ans.extend(a[k:])\n            elif len(aset) == 1:\n                for i in range(ceil((n - k) / k)):\n                    ans.append(a[k])\n            else:\n                ans.extend(a[k:])\n    else:\n        ans.append(a1[-1])\n    s = ''\n    for i in ans:\n        s += chr(i + 97)\n    print(s)", "t = int(input())\nfor t1 in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    sch = list(s)\n    sch.sort()\n    if k == 1:\n        print(''.join(sch))\n        continue\n    if sch[0] != sch[k - 1]:\n        print(''.join(sch[k - 1]))\n        continue\n    se = set()\n    firstDif = -1\n    for i in range(len(sch)):\n        se.add(sch[i])\n        if i > 0 and sch[i] != sch[i - 1] and (firstDif == -1):\n            firstDif = i\n    if len(se) > 2:\n        print(''.join(sch[k - 1:n]))\n        continue\n    if len(se) == 1:\n        ost = (1, 0)[n % k == 0]\n        print(''.join(sch[0:n // k + ost]))\n        continue\n    if firstDif > k:\n        print(''.join(sch[k - 1:n]))\n    else:\n        ost = (1, 0)[(n - firstDif) % k == 0]\n        print(''.join(sch[0:firstDif // k]) + ''.join(sch[firstDif:firstDif + (n - firstDif) // k + ost]))"]