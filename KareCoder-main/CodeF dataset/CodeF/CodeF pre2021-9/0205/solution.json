["t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    a = n // k\n    if a >= m:\n        print(m)\n    else:\n        m = m - a\n        if m / (k - 1) == m // (k - 1) and m >= k - 1:\n            print(a - m // (k - 1))\n        elif m < k - 1:\n            print(a - 1)\n        else:\n            print(a - m // (k - 1) - 1)", "for _ in range(0, int(input())):\n    (n, m, k) = map(int, input().split())\n    h = n // k\n    if m > h:\n        x = 0 - -(m - h) // (k - 1)\n        print(h - x)\n    else:\n        print(m)", "t = int(input())\nfor i in range(t):\n    (n, m, k) = [int(x) for x in input().split()]\n    p = n // k\n    if p >= m:\n        res = m\n    else:\n        (a, b) = ((m - p) // (k - 1), (m - p) % (k - 1))\n        temp = a if b == 0 else a + 1\n        res = p - temp\n    print(res)", "for i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    if n // k >= m:\n        x = m\n        y = 0\n    else:\n        x = n // k\n        y = (m - x) // (k - 1)\n        if (m - x) % (k - 1) != 0:\n            y += 1\n    print(x - y)", "t = int(input())\nfor i in range(t):\n    (a, b, c) = map(int, input().split())\n    avg = a // c\n    i_get = min(avg, b)\n    avg -= 1\n    b -= i_get\n    c -= 1\n    if b == 0:\n        print(i_get)\n        continue\n    another_guy = b // c\n    if b % c:\n        another_guy += 1\n    if another_guy >= i_get:\n        print(0)\n    else:\n        print(i_get - another_guy)", "for t in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    each = n // k\n    jokerMax = min(each, m)\n    rem = m - jokerMax\n    jokerMin = rem // (k - 1)\n    if rem % (k - 1):\n        jokerMin += 1\n    print(jokerMax - jokerMin)", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    d = n // k\n    a1 = min(m, d)\n    a2 = (m - a1 + k - 2) // (k - 1)\n    print(a1 - a2)", "for _ in range(int(input())):\n    (n, m, k) = [int(x) for x in input().split()]\n    if m <= n // k:\n        print(m)\n    else:\n        mx = n // k\n        print(mx - ((m - mx - 1) // (k - 1) + 1))", "for _ in range(int(input())):\n    (N, M, K) = map(int, input().split())\n    D = N // K\n    A = min(M, D)\n    B = (M - A + K - 2) // (K - 1)\n    print(A - B)", "for i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    print(min(m, (n - m) // (k - 1)))", "from math import ceil\nn = int(input())\nfor i in range(n):\n    j = list(map(int, input().split()))\n    if j[0] / j[2] >= j[1]:\n        print(j[1])\n    else:\n        d = int(j[0] / j[2])\n        a = ceil((j[1] - d) / (j[2] - 1))\n        print(d - a)", "import math\nfrom sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (n, m, k) = [int(i) for i in input().split()]\n    d = n // k\n    w = min(m, d)\n    w2 = (m - w + k - 2) // (k - 1)\n    print(w - w2)", "import math\nt = int(input())\nfor x in range(t):\n    (n, m, k) = map(int, input().split())\n    max_jokers = 0\n    if m >= n / k:\n        max_jokers += n / k\n    elif m < n / k:\n        max_jokers += m\n    second_max_jokers = math.ceil((m - max_jokers) / (k - 1))\n    answer = max_jokers - second_max_jokers\n    print(round(answer))", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    d = n // k\n    a1 = min(m, d)\n    a2 = (m - a1 + k - 2) // (k - 1)\n    print(a1 - a2)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, m, k) = input().split()\n    (n, m, k) = (int(n), int(m), int(k))\n    if m <= n / k:\n        print(m)\n    else:\n        print(int(min(m, n / k) - math.ceil((m - n / k) / (k - 1))))", "a = int(input())\nfor i in range(0, a):\n    (n, m, k) = (int(x) for x in input().split())\n    c = n // k\n    if m > c:\n        x = c\n        y = m - x\n        yf = y // (k - 1)\n        if yf != y / (k - 1):\n            yf += 1\n        print(x - yf)\n    else:\n        x = m\n        print(m)", "test = int(input())\nfor _ in range(test):\n    (n, m, k) = map(int, input().split())\n    cards = n // k\n    max_joker = min(cards, m)\n    rem_joker = m - max_joker\n    print(max_joker + -rem_joker // (k - 1))", "def ceil(x):\n    y = int(x)\n    return y + int(x != y)\n\ndef que_41():\n    for t in range(int(input())):\n        (total_cards, jokers, players) = map(int, input().split())\n        cards_per_player = total_cards // players\n        max_jokers_for_winner = min(jokers, cards_per_player)\n        remaining_jokers = max(0, jokers - max_jokers_for_winner)\n        min_jokers_for_others = ceil(remaining_jokers / (players - 1))\n        print(max_jokers_for_winner - min_jokers_for_others)\nque_41()", "for i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    d = n // k\n    a1 = min(m, d)\n    a2 = (m - a1 + k - 2) // (k - 1)\n    print(a1 - a2)", "for z in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    if m <= n / k:\n        print(m)\n    else:\n        import math\n        print(int(n / k - math.ceil((m - n / k) / (k - 1))))", "for z in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    if m <= n / k:\n        print(m)\n    else:\n        import math\n        print(int(n / k - math.ceil((m - n / k) / (k - 1))))", "def maxPointsWinnerGets(cards, jokers, players):\n    cardsPerPlayer = cards // players\n    if jokers > cardsPerPlayer:\n        jokers -= cardsPerPlayer\n        players -= 1\n        minJokersPerPlayer = jokers // players\n        if minJokersPerPlayer == 0:\n            jokersOfRunnerUp = 1\n        else:\n            jokersOfRunnerUp = minJokersPerPlayer + (1 if minJokersPerPlayer * players < jokers else 0)\n        return cardsPerPlayer - jokersOfRunnerUp\n    return jokers\nt = int(input())\nwhile t:\n    (cards, jokers, players) = map(int, input().split(' '))\n    print(maxPointsWinnerGets(cards, jokers, players))\n    t -= 1", "def maxPointsWinnerGets(cards, jokers, players):\n    cardsPerPlayer = cards // players\n    (jokersOfWinner, jokersOfRunnerUp) = (None, None)\n    if jokers > cardsPerPlayer:\n        jokersOfWinner = cardsPerPlayer\n        jokers -= cardsPerPlayer\n        players -= 1\n        minJokersPerPlayer = jokers // players\n        jokersOfRunnerUp = minJokersPerPlayer + (1 if minJokersPerPlayer * players < jokers else 0)\n    else:\n        (jokersOfWinner, jokersOfRunnerUp) = (jokers, 0)\n    return jokersOfWinner - jokersOfRunnerUp\nt = int(input())\nwhile t:\n    (cards, jokers, players) = map(int, input().split(' '))\n    print(maxPointsWinnerGets(cards, jokers, players))\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, m, k) = list(map(int, input().split()))\n    d = n // k\n    a1 = min(m, d)\n    a2 = (m - a1 + k - 2) // (k - 1)\n    print(a1 - a2)", "t = int(input())\nfor _ in range(t):\n    (n, m, k) = map(int, input().split())\n    d = n // k\n    a1 = min(m, d)\n    a2 = (m - a1 + k - 2) // (k - 1)\n    print(a1 - a2)", "t = int(input())\nfor _ in range(t):\n    (n, m, k) = map(int, input().split())\n    d = n // k\n    a1 = min(m, d)\n    a2 = (m - a1 + k - 2) // (k - 1)\n    print(a1 - a2)", "t = int(input())\nx = 1\nwhile x <= t:\n    x += 1\n    d = 0\n    e = 0\n    s = False\n    (n, m, k) = map(int, input().split())\n    if n / k >= m:\n        print(m)\n    elif n / k < m:\n        d = n / k\n        c = m - d\n        while s == False:\n            if c <= k - 1:\n                print(int(d - 1))\n                s = True\n                break\n            elif c > k - 1:\n                c = c - (k - 1)\n                d -= 1\n                s = False", "from math import ceil\n\ndef max_points(n: int, m: int, k: int) -> int:\n    if m < n // k:\n        return m\n    max_jokers = n // k\n    other_jokers = m - max_jokers\n    one_hand_other_jokers = ceil(other_jokers / (k - 1))\n    return max_jokers - one_hand_other_jokers\nfor i in range(int(input())):\n    print(max_points(*list(map(int, input().split()))))", "from math import ceil\nfor _ in range(int(input())):\n    l = input().split()\n    l = [int(i) for i in l]\n    n = l[0]\n    m = l[1]\n    k = l[2]\n    ab = n / k\n    pl = n - m\n    if ab >= m:\n        print(m)\n    elif ab < m:\n        c = m - ab\n        f = ab\n        e = ceil(c / (k - 1))\n        print(int(f - e))", "cantidad_de_casos = int(input())\nfor _ in range(cantidad_de_casos):\n    linea = input().split(' ')\n    cartas_totales = int(linea[0])\n    cantidad_jokers = int(linea[1])\n    cantidad_jugadores = int(linea[2])\n    if cartas_totales / cantidad_jugadores < cantidad_jokers:\n        aux1 = int(cartas_totales / cantidad_jugadores)\n        aux2 = int((cantidad_jokers - cartas_totales / cantidad_jugadores + cantidad_jugadores - 2) / (cantidad_jugadores - 1))\n        print(aux1 - aux2)\n    else:\n        aux2 = int((cantidad_jugadores - 2) / (cantidad_jugadores - 1))\n        print(cantidad_jokers - aux2)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    print(min(m, n // k) - max(0, (m - n // k - 1) // (k - 1) + 1))", "import math\nt = int(input())\nfor _ in range(t):\n    (n, m, k) = list(map(int, input().rstrip().split()))\n    if m == 0:\n        print(0)\n    else:\n        each = n // k\n        if each >= m:\n            print(m)\n        else:\n            max = each\n            min = int(math.ceil((m - max) / (k - 1)))\n            print(max - min)", "num_inp = lambda : int(input())\narr_inp = lambda : list(map(int, input().split()))\nfor i in [*open(0)][1:]:\n    (n, m, k) = map(int, i.split())\n    print((min(m, n // k) * k - m) // (k - 1))\nsp_inp = lambda : map(int, input().split())\nstr_inp = lambda : input()", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    d = n // k\n    a1 = min(m, d)\n    a2 = (m - a1 + k - 2) // (k - 1)\n    print(a1 - a2)", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    cart = n // k\n    joker_max = min(m, cart)\n    joker = m - joker_max\n    igroki = k - 1\n    a = [0] * igroki\n    numb = 0\n    while joker != 0:\n        a[numb] += 1\n        joker -= 1\n        numb = (numb + 1) % igroki\n    if joker_max == max(a):\n        print(0)\n    else:\n        print(joker_max - max(a))", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    l = []\n    average = n // k\n    if average >= m:\n        ans = m\n    else:\n        l.append(average)\n        m -= average\n        k -= 1\n        if m > k and m % k == 0:\n            for i in range(k):\n                l.append(m // k)\n        elif m > k and m % k != 0:\n            for i in range(m % k):\n                l.append(m // k + 1)\n            for i in range(k - m % k):\n                l.append(m // k)\n        else:\n            l.append(1)\n        if l.count(max(l)) > 1:\n            ans = 0\n        else:\n            l.sort(reverse=True)\n            ans = l[0] - l[1]\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    d = n // k\n    a1 = min(m, d)\n    a2 = (m - a1 + k - 2) // (k - 1)\n    print(a1 - a2)", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    s = input()\n    (n, m, k) = map(int, s.split())\n    c = n / k\n    if m < 2 or c >= m:\n        print(m)\n    elif n == m or c == 1:\n        print(0)\n    else:\n        j = m - c\n        ans = int(c - ceil(j / (k - 1)))\n        print(ans)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    print(min(m, (n - m) // (k - 1)))", "t = int(input())\nfor _ in range(t):\n    (n, m, k) = list(map(int, input().split()))\n    c = n // k\n    if c >= m:\n        print(m)\n    else:\n        m -= c\n        d = 0\n        while m > 0:\n            d += 1\n            m -= k - 1\n        print(c - d)", "import math\n\ndef solve():\n    (totcards, jocker, player) = list(map(int, input().split()))\n    per_play_card = totcards // player\n    if jocker <= per_play_card:\n        return jocker\n    max_candi = per_play_card\n    rem_player = player - 1\n    rem_cards = totcards - per_play_card\n    rem_jocker = jocker - per_play_card\n    minmax_candi = math.ceil(rem_jocker / rem_player)\n    return max_candi - minmax_candi\nfor t in range(0, int(input())):\n    print(solve())", "n = input()\np = []\nfor i in range(0, int(n)):\n    l = input()\n    t = [int(i) for i in l.split() if i.isdigit()]\n    p.append(t)\nfor i in range(0, len(p)):\n    ply = p[i][0] // p[i][2]\n    if p[i][1] <= ply:\n        print(p[i][1])\n    else:\n        lft = p[i][1] - ply\n        per = p[i][2] - 1\n        if per >= lft:\n            print(ply - 1)\n        elif lft % per == 0:\n            print(ply - lft // per)\n        else:\n            print(ply - lft // per - 1)", "import math\nt = int(input())\nfor x in range(t):\n    (n, m, k) = list(map(int, input().split()))\n    x = min(m, n / k)\n    y = math.ceil((m - x) / (k - 1))\n    print(int(x - y))", "t = int(input())\nfor x in range(t):\n    (n, m, k) = map(int, input().split())\n    if m < n / k:\n        max = m\n    else:\n        max = n // k\n    if (m - max) % (k - 1) != 0:\n        p = (m - max) // (k - 1) + 1\n    else:\n        p = (m - max) // (k - 1)\n    print(max - p)", "for s in [*open(0)][1:]:\n    (n, m, k) = map(int, s.split())\n    print(min(m, (n - m) // (k - 1)))", "def solve():\n    (n, m, k) = map(int, input().split())\n    player_card_cnt = n // k\n    if player_card_cnt >= m:\n        print(m)\n    else:\n        remaining_jokers = m - player_card_cnt\n        remaining_players_max_jokers_cnt = remaining_jokers // (k - 1) + (1 if remaining_jokers % (k - 1) else 0)\n        print(player_card_cnt - remaining_players_max_jokers_cnt)\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nans = []\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    a = int(n / k)\n    if m <= a:\n        ans.append(m)\n    else:\n        y = int((m - a) / (k - 1))\n        if (m - a) % (k - 1) == 0:\n            ans.append(a - y)\n        else:\n            ans.append(a - y - 1)\nfor item in ans:\n    print(item)", "t = int(input())\nfor i in range(t):\n    (n, m, a) = map(int, input().split())\n    c = n // a\n    ar1 = min(m, c)\n    ar2 = (m - ar1 + a - 2) // (a - 1)\n    print(ar1 - ar2)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    eachPlayerCards = n // k\n    p1Jokers = min(m, eachPlayerCards)\n    otherPlayers = (m - p1Jokers + k - 2) // (k - 1)\n    print(p1Jokers - otherPlayers)", "import math\nfor i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    peep = n // k\n    if peep >= m:\n        print(m)\n    else:\n        rem_hold = m - peep\n        min_jok = math.ceil(rem_hold / (k - 1))\n        print(peep - min_jok)", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    l = n // k\n    f = m - l\n    if l >= m:\n        print(m)\n    else:\n        print(l - f // (k - 1) - (1 if f % (k - 1) else 0))", "t = int(input())\nfor _ in range(t):\n    (n, m, k) = map(int, input().split())\n    if n / k >= m:\n        print(m)\n    elif n / k < m:\n        joker_mod = m - n // k\n        score = joker_mod // (k - 1) + (1 if joker_mod % (k - 1) else 0)\n        print(n // k - score)", "for i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    n //= k\n    if m == 0 or (n == 1 and m != 1):\n        print(0)\n    elif m <= n:\n        print(m)\n    else:\n        m -= n\n        k -= 1\n        if m % k == 0:\n            print(n - m // k)\n        else:\n            print(n - m // k - 1)", "import math\nfor i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    j = min(m, n // k)\n    lj = m - j\n    lj = math.ceil(lj / (k - 1))\n    print(j - lj)", "for s in [*open(0)][1:]:\n    (n, m, k) = map(int, s.split())\n    print((min(m, n // k) * k - m) // (k - 1))", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    d = n // k\n    a1 = min(m, d)\n    a2 = (m - a1 + k - 2) // (k - 1)\n    print(a1 - a2)", "test_cases = int(input())\n\ndef get_result():\n    (n, m, k) = input().split(' ')\n    n = int(n)\n    m = int(m)\n    l = n - m\n    k = int(k)\n    players = [0] * k\n    player_index = 0\n    while n > 0:\n        if m > 0 and player_index == 0:\n            players[player_index] += 1\n            m -= 1\n        elif player_index != 0:\n            if l > 0:\n                l -= 1\n            else:\n                players[player_index] += 1\n                m -= 1\n        else:\n            l -= 1\n        player_index += 1\n        player_index %= k\n        n -= 1\n    players.sort()\n    return players[-1] - players[-2]\nfor _ in range(test_cases):\n    print(get_result())", "t = int(input())\nfor _ in range(t):\n    (n, m, k) = [int(i) for i in input().strip().split()]\n    each = n // k\n    if m <= each:\n        print(m)\n    else:\n        left = m - each\n        k -= 1\n        rounds = left // k\n        if rounds * k != left:\n            rounds += 1\n        print(each - rounds)", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    maxcards = n // k\n    count = min(m, maxcards)\n    count1 = (m - count + k - 2) // (k - 1)\n    print(count - count1)", "import math\ncase = int(input())\nfor i in range(case):\n    (n, m, k) = map(int, input().split())\n    if n // k >= m and m > 0:\n        print(m)\n    elif n // k < m:\n        print(n // k - math.ceil((m - n // k) / (k - 1)))\n    else:\n        print(0)", "tt = int(input())\nwhile tt > 0:\n    (n, m, k) = map(int, input().split())\n    x = n // k\n    if x >= m or m == 0:\n        print(m)\n    else:\n        max_cards = x\n        m -= x\n        c = 0\n        k -= 1\n        c = m // k\n        if m % k != 0:\n            c += 1\n        print(max_cards - c)\n    tt -= 1", "tt = int(input())\nwhile tt > 0:\n    (n, m, k) = map(int, input().split())\n    x = n // k\n    if x >= m or m == 0:\n        print(m)\n    else:\n        max_cards = x\n        m -= x\n        c = 0\n        k -= 1\n        c = m // k\n        if m % k != 0:\n            c += 1\n        print(max_cards - c)\n    tt -= 1", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    d = n // k\n    a1 = min(m, d)\n    a2 = (m - a1 + k - 2) // (k - 1)\n    print(a1 - a2)", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    d = n // k\n    mi = min(m, d)\n    rez = (m - mi + k - 2) // (k - 1)\n    print(mi - rez)", "t = int(input())\nfor i in range(t):\n    (n, j, k) = [int(_) for _ in input().split()]\n    if j <= n // k:\n        print(j)\n    else:\n        print(n // k - (j - n // k + k - 2) // (k - 1))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m, k) = map(int, input().split())\n    card = n // k\n    if card >= m:\n        print(m)\n    else:\n        rem = k - 1\n        temp = m - card\n        maxm = temp // rem\n        if temp % rem:\n            maxm += 1\n        print(card - maxm)", "import math\ntc = int(input())\nwhile tc:\n    (n, m, k) = map(int, input().split(' '))\n    tc -= 1\n    cards_per_member = n // k\n    if m <= cards_per_member:\n        print(m)\n    elif m / cards_per_member >= 1:\n        print(cards_per_member - math.ceil((m - cards_per_member) / (k - 1)))\n    else:\n        print(cards_per_member)", "import math\nt = int(input())\nfor i in range(t):\n    lst = list(map(int, input().rstrip().split()))\n    (n, m, k) = lst\n    if n / k >= m:\n        print(m)\n    else:\n        jk = n / k\n        re = m - n / k\n        print(int(jk - math.ceil(re / (k - 1))))", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    x = b\n    if a / c >= b:\n        print(b)\n    else:\n        b = a // c\n        s = [b]\n        for i in range(c - 1):\n            s.append(1)\n        while sum(s) < x:\n            s[s.index(min(s))] += 1\n            b -= 1\n        print(max(s) - max(s[1:]))", "t = int(input())\nfor i in range(t):\n    (n, m, k) = [int(x) for x in input().split()]\n    if n // k > m:\n        res = m\n    else:\n        temp = (m - n // k) // (k - 1) if (m - n // k) % (k - 1) == 0 else (m - n // k) // (k - 1) + 1\n        res = n // k - temp\n    print(res)", "for i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    print(min(m, (n - m) // (k - 1)))", "import math\nfor _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    d = n // k\n    if m <= d:\n        print(m)\n    else:\n        ostm = m - d\n        ost = math.ceil(ostm / (k - 1))\n        print(d - ost)", "for s in [*open(0)][1:]:\n    (n, m, k) = map(int, s.split())\n    print(min(m, (n - m) // (k - 1)))", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    ans = 0\n    d = n // k\n    for a1 in range(m + 1):\n        for a2 in range(a1 + 1):\n            if a1 > d:\n                continue\n            if a1 + a2 > m:\n                continue\n            if a1 + (k - 1) * a2 < m:\n                continue\n            ans = max(ans, a1 - a2)\n    print(ans)", "import math\ntest_case = int(input())\nfor t in range(test_case):\n    (cards, jokers, players) = map(int, input().split())\n    cards_dealt = cards // players\n    max_jokers = min(jokers, cards_dealt)\n    min_jokers = int(math.ceil((jokers - max_jokers) / (players - 1)))\n    print(int(max_jokers - min_jokers))", "import math\nt = int(input())\nfor tc in range(t):\n    (n, m, k) = map(int, input().split(' '))\n    c = n / k\n    if c >= m:\n        print(m)\n    else:\n        m -= c\n        l = math.ceil(m / (k - 1))\n        print(int(c - l))", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    x = min(n // k, m)\n    y = 0\n    mLeft = m - n // k\n    if mLeft > 0:\n        y = -(-mLeft // (k - 1))\n    print(x - y)", "import math\ncases = int(input())\nwhile cases:\n    cases -= 1\n    (n, m, k) = map(int, input().split())\n    cards = n // k\n    if cards >= m:\n        print(m)\n    else:\n        rem = math.ceil((m - cards) / (k - 1))\n        print(cards - rem)", "from math import ceil\n\ndef cards(n, m, k):\n    q = n // k\n    if m <= q:\n        return m\n    m -= q\n    p = ceil(m / (k - 1))\n    if p <= q:\n        return q - p\n    return 0\nfor _ in range(int(input())):\n    (n, m, k) = list(map(int, input().split()))\n    print(cards(n, m, k))", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    a1 = n // k\n    if a1 > m:\n        print(m)\n    else:\n        m -= n // k\n        x = m / (k - 1)\n        if int(x) != x:\n            x = int(x) + 1\n        print(a1 - int(x))", "def ceil(a, b):\n    return -(-a // b)\n\ndef answer(n, m, k):\n    cpp = n // k\n    maxjpw = min(cpp, m)\n    if m <= cpp:\n        return m\n    rem_num_jokers = m - maxjpw\n    maxjpl = ceil(rem_num_jokers, k - 1)\n    return maxjpw - maxjpl\n\ndef main():\n    t = int(input())\n    n = [0] * t\n    m = [0] * t\n    k = [0] * t\n    for j in range(t):\n        (n[j], m[j], k[j]) = [int(i) for i in input().split()]\n    for j in range(t):\n        print(answer(n[j], m[j], k[j]))\nmain()", "_ = int(input())\nfor __ in range(_):\n    (n, m, k) = map(int, input().split())\n    x = n // k\n    if x >= m:\n        print(m)\n    elif m == 0 or m == n:\n        print(0)\n    else:\n        m -= x\n        players = [0] * (k - 1)\n        i = 0\n        while m > 0:\n            players[i] += 1\n            i += 1\n            if i == k - 1:\n                i = 0\n            m -= 1\n        y = players[0]\n        print(x - y)", "import math\nfor i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    if m == 0:\n        print(0)\n        continue\n    else:\n        per_hand = n // k\n        if per_hand >= m:\n            print(m)\n            continue\n        else:\n            win = per_hand\n            rest = int(math.ceil((m - per_hand) / (k - 1)))\n        print(win - rest)", "r = int(input())\nfor _ in range(r):\n    a = list(map(int, input().split()))\n    (n, m, k) = (a[0], a[1], a[2])\n    each = int(n / k)\n    win = min(each, m)\n    m -= win\n    if m % (k - 1) == 0:\n        print(win - int(m / (k - 1)))\n    else:\n        print(win - int(m / (k - 1)) - 1)", "import math\nfor _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    a = n // k\n    if m <= a:\n        print(m)\n    elif m > a:\n        print(a - (m - a + k - 2) // (k - 1))", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    a = n // k\n    if m // a >= 1:\n        b = m - a\n        c = b // (k - 1)\n        d = b % (k - 1)\n        if d:\n            c += 1\n        print(a - c)\n    else:\n        print(m)", "from math import ceil\nfor t in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    c = n // k\n    if c >= m:\n        print(m)\n    else:\n        print(c - ceil((m - c) / (k - 1)))", "from math import ceil\nfor _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    if m == 0 or m == n:\n        print(0)\n    elif n // k >= m:\n        print(m)\n    else:\n        print(n // k - ceil((m - n // k) / (k - 1)))", "from math import ceil\nfor _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    print([[n // k - ceil((m - n // k) / (k - 1)), m], [0, 0]][m == 0 or m == n][n // k >= m])", "import math\nt = int(input())\nwhile t > 0:\n    inp = input()\n    q = list(map(int, inp.split(' ')))\n    n = q[0]\n    m = q[1]\n    k = q[2]\n    cards_on_one = n // k\n    if cards_on_one >= m:\n        print(m)\n    else:\n        winnerJ = cards_on_one\n        jokers = m - winnerJ\n        oJ = jokers // (k - 1)\n        if jokers % (k - 1) == 0:\n            print(winnerJ - oJ)\n        else:\n            print(winnerJ - oJ - 1)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    d = n // k\n    a1 = min(m, d)\n    a2 = (m - a1 + k - 2) // (k - 1)\n    print(a1 - a2)", "from math import ceil\nt = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split(' '))\n    card = n // k\n    if card >= m:\n        print(m)\n    else:\n        left = m - card\n        print(card - ceil(left / (k - 1)))", "from math import ceil\nfor _ in range(int(input())):\n    (n, m, k) = list(map(int, input().split()))\n    l = int(n / k)\n    if m <= l:\n        print(m)\n    else:\n        print(l - ceil((m - l) / (k - 1)))", "from math import ceil\nfor _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    if n // k >= m:\n        print(m)\n    else:\n        m = m - n // k\n        res = n // k - ceil(m / (k - 1))\n        print(res)", "import math\nfor _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n\n    def poker(n, m, k):\n        x = n // k\n        if m <= x:\n            return m\n        else:\n            other_p_j = m - x\n            oMax_jocker = math.ceil(other_p_j / (k - 1))\n            return x - oMax_jocker\n    print(poker(n, m, k))", "from math import ceil as c\nfor _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    each = n // k\n    if m <= each:\n        print(m)\n    else:\n        a = []\n        a.append(each)\n        m -= each\n        k -= 1\n        a.append(c(m / k))\n        print(a[0] - a[1])", "t = int(input())\nfor i in range(t):\n    inp = input().split()\n    (n, m, k) = (int(inp[0]), int(inp[1]), int(inp[2]))\n    div = n // k\n    if m == 0:\n        print(0)\n    elif div >= m:\n        print(m)\n    else:\n        if (m - div) % (k - 1) == 0:\n            cardsRemaining = (m - div) // (k - 1)\n        else:\n            cardsRemaining = (m - div) // (k - 1) + 1\n        point = div - cardsRemaining\n        print(point)", "t = int(input())\nlis = []\nout = []\nfor j in range(t):\n    lis.append([int(i) for i in input().split()])\n    (n, m, k) = lis[j]\n    if n // k >= m:\n        out.append(m)\n    elif (m - n // k) % (k - 1) == 0:\n        out.append(n // k - (m - n // k) // (k - 1))\n    else:\n        out.append(n // k - ((m - n // k) // (k - 1) + 1))\nfor i in out:\n    print(i)", "t = int(input())\nfor inh in range(0, t):\n    (n, m, k) = map(int, input().split())\n    c = n // k\n    if c >= m:\n        ans = m\n    else:\n        j = c\n        m -= j\n        k -= 1\n        c = m // k\n        if m % k != 0:\n            c += 1\n        ans = j - c\n    print(ans)"]