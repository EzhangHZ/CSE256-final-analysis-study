["for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = []\n    flag = 1\n    for i in range(n):\n        l.append(list(map(int, input().split())))\n    for (x1, y1) in l:\n        for (x2, y2) in l:\n            if abs(x1 - x2) + abs(y1 - y2) > k:\n                flag = -1\n                break\n        else:\n            flag = 1\n            break\n    print(flag)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        l.append((a, b))\n    for i in range(n):\n        s = 0\n        x = l[i][0]\n        y = l[i][1]\n        for j in range(n):\n            if abs(x - l[j][0]) + abs(y - l[j][1]) <= k:\n                pass\n            else:\n                break\n        else:\n            print(1)\n            break\n    else:\n        print(-1)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = [list(map(int, input().split())) for _ in range(n)]\n    for i in range(n):\n        if all((i == j or abs(w[i][0] - w[j][0]) + abs(w[i][1] - w[j][1]) <= k for j in range(n))):\n            print(1)\n            break\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = []\n    flag = 1\n    for i in range(n):\n        l.append(list(map(int, input().split())))\n    for (x1, y1) in l:\n        for (x2, y2) in l:\n            if abs(x1 - x2) + abs(y1 - y2) > k:\n                flag = -1\n                break\n        else:\n            flag = 1\n            break\n    print(flag)", "def ass(a, b):\n    if a != b:\n        print(f'Assertion error: {a} != {b}')\n    else:\n        print('OK')\n\ndef number():\n    return int(input())\n\ndef numbers():\n    return [int(item) for item in input().split()]\n\ndef word():\n    return input()\n\ndef words():\n    return [item for item in input().split()]\n\ndef dump(lst):\n    for (i, item) in enumerate(lst):\n        print(i, item)\n\ndef binsearch(arr, a, b):\n    m = (a + b) // 2\n    if a >= b:\n        return a - 1 if arr[a] == 0 else a\n    return binsearch(arr, a, m - 1) if arr[m] == 0 else binsearch(arr, m + 1, b)\n\ndef f(k, balls):\n    flag = 1\n    for (x0, y0) in balls:\n        for (x1, y1) in balls:\n            if abs(x0 - x1) + abs(y0 - y1) > k:\n                flag = -1\n                break\n        else:\n            flag = 1\n            break\n    return flag\nfor t in range(number()):\n    (n, k) = numbers()\n    balls = [numbers() for i in range(n)]\n    print(f(k, balls))", "t = int(input())\nfor i in range(t):\n    [n, k] = map(int, input().split())\n    points = []\n    for i in range(n):\n        [x, y] = map(int, input().split())\n        points.append([x, y])\n    for p in points:\n        flag = True\n        for q in points:\n            if abs(p[0] - q[0]) + abs(p[-1] - q[-1]) > k:\n                flag = False\n                break\n        if flag == True:\n            break\n    if flag:\n        print(1)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l1 = []\n    f = 0\n    for i in range(n):\n        l1.append([int(a) for a in input().split()])\n    for i in range(n):\n        f = 0\n        for j in range(n):\n            if abs(l1[i][0] - l1[j][0]) + abs(l1[i][1] - l1[j][1]) > k:\n                f = 1\n                break\n        if f == 0:\n            break\n    if f:\n        print(-1)\n    else:\n        print(1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = -1\n    w = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        w.append((x, y))\n    for i in range(n):\n        b = 0\n        for j in range(n):\n            if abs(w[i][0] - w[j][0]) + abs(w[i][1] - w[j][1]) > k:\n                b = 1\n                break\n        if b == 0:\n            ans = 1\n            break\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    B = []\n    for m in range(n):\n        A = list(map(int, input().split()))\n        B.append(A)\n    ans = -1\n    for i in range(n):\n        for j in range(n):\n            x = abs(B[i][0] - B[j][0])\n            y = abs(B[i][1] - B[j][1])\n            if x + y <= k:\n                ans = 1\n            else:\n                ans = -1\n                break\n        if ans == 1:\n            break\n    print(ans)", "def run():\n    tests = int(input())\n    for i in range(tests):\n        (n, k) = tuple(map(int, input().split()))\n        points = []\n        for i in range(n):\n            point = list(map(int, input().split()))\n            points.append(point)\n        minimum = balls_of_steel(points, n, k)\n        print(minimum)\n\ndef balls_of_steel(points, n, k):\n    for i in range(n):\n        central_node = True\n        for j in range(n):\n            if manhattan_distance(points[i], points[j]) > k:\n                central_node = False\n                break\n        if central_node == True:\n            return 1\n    return -1\n\ndef manhattan_distance(p1, p2):\n    x_dist = abs(p1[0] - p2[0])\n    y_dist = abs(p1[1] - p2[1])\n    return x_dist + y_dist\nrun()", "t = int(input())\nfor i in range(t):\n    (n1, k) = map(int, input().strip().split())\n    l = []\n    for i in range(n1):\n        (x, y) = map(int, input().strip().split())\n        l.append([x, y])\n    flag = 0\n    y = 0\n    for j in l:\n        flag = 0\n        for m in l:\n            s = abs(j[0] - m[0])\n            s += abs(j[1] - m[1])\n            if s > k:\n                flag = 1\n                break\n        if flag == 0:\n            y = 1\n            break\n    if y == 1:\n        print('1')\n    else:\n        print('-1')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    points = []\n    for _ in range(n):\n        (x, y) = map(int, input().split())\n        points.append((x, y))\n    broken1 = False\n    for i in range(n):\n        (xi, yi) = points[i]\n        broken = False\n        for j in range(n):\n            (xj, yj) = points[j]\n            if abs(xi - xj) + abs(yi - yj) > k:\n                broken = True\n                break\n        if not broken:\n            print(1)\n            broken1 = True\n            break\n    if not broken1:\n        print(-1)", "import math\n\ndef getint():\n    return [int(i) for i in input().split()]\n\ndef getstr():\n    return [str(i) for i in input().split()]\n\ndef solve():\n    m = []\n    (n, k) = getint()\n    for i in range(n):\n        m.append(getint())\n    flag = 1\n    for i in range(n):\n        for j in range(n):\n            if abs(m[i][0] - m[j][0]) + abs(m[i][1] - m[j][1]) > k:\n                flag = 0\n                break\n        else:\n            flag = 1\n            break\n    if flag == 0:\n        print(-1)\n    else:\n        print(1)\nfor _ in range(int(input())):\n    solve()", "for i in range(int(input())):\n    a = [int(j) for j in input().split()]\n    n = a[0]\n    k = a[1]\n    x = []\n    y = []\n    s = 0\n    for i in range(n):\n        a = [int(j) for j in input().split()]\n        x.append(a[0])\n        y.append(a[1])\n    for i in range(n):\n        j = 0\n        while j < n:\n            if abs(x[i] - x[j]) + abs(y[i] - y[j]) > k:\n                break\n            j += 1\n        if j == n:\n            s = 1\n            break\n    if s == 1:\n        print(1)\n    else:\n        print(-1)", "for i in range(int(input())):\n    a = [int(j) for j in input().split()]\n    n = a[0]\n    k = a[1]\n    x = []\n    y = []\n    s = 0\n    for i in range(n):\n        a = [int(j) for j in input().split()]\n        x.append(a[0])\n        y.append(a[1])\n    for i in range(n):\n        j = 0\n        t = 0\n        while j < n:\n            if abs(x[i] - x[j]) + abs(y[i] - y[j]) > k:\n                t = 1\n                break\n            j += 1\n        if t == 0:\n            s = 1\n            break\n    if s == 1:\n        print(1)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list()\n    for i in range(n):\n        x = list(map(int, input().split()))\n        l.append(x)\n    for i in l:\n        c = 1\n        for j in l:\n            if abs(i[0] - j[0]) + abs(i[1] - j[1]) > k:\n                c = 0\n                break\n        if c == 1:\n            print(1)\n            break\n    if c == 0:\n        print(-1)", "I = lambda : tuple(map(int, input().split()))\nfor _ in range(int(input())):\n    (n, ll) = map(int, input().split())\n    p = []\n    for i in range(n):\n        p.append(I())\n    for i in range(n):\n        k = 0\n        a = 1\n        while k < n and a != 0:\n            a = int(abs(p[i][0] - p[k][0]) + abs(p[i][1] - p[k][1]) <= ll)\n            k = k + 1 * a\n        if k == n:\n            print(1)\n            break\n    if k != n:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = []\n    chc = 0\n    dis = 0\n    for i in range(n):\n        l1 = list(map(int, input().split()))\n        l.append(l1)\n    for i in range(0, n):\n        for j in range(0, n):\n            dis = abs(l[i][0] - l[j][0]) + abs(l[i][1] - l[j][1])\n            if dis > k:\n                chc = 1\n                break\n            else:\n                chc = 0\n        if chc == 0:\n            break\n    if chc == 0:\n        print('1')\n    else:\n        print('-1')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    x = []\n    y = []\n    for _ in range(n):\n        (a, b) = map(int, input().split())\n        x.append(a)\n        y.append(b)\n    ans = -1\n    for i in range(n):\n        ok = True\n        for j in range(n):\n            d = abs(x[i] - x[j]) + abs(y[i] - y[j])\n            if d > k:\n                ok = False\n                break\n        if ok:\n            ans = 1\n            break\n    print(ans)", "def balls_of_steel(n, k, balls):\n    current_index = 0\n    while current_index < len(balls):\n        compare = balls[current_index]\n        terminate = 1\n        for (i, j) in balls:\n            ans = abs(compare[0] - i) + abs(compare[1] - j)\n            if ans > k:\n                terminate = 0\n                break\n        if terminate == 0:\n            current_index += 1\n        else:\n            return 1\n    return -1\ntest = int(input())\nfor y in range(test):\n    (n, k) = list(map(int, input().split()))\n    balls = []\n    for x in range(n):\n        q = list(map(int, input().split()))\n        balls.append(q)\n    print(balls_of_steel(n, k, balls))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append([*map(int, input().split())])\n    ok = False\n    for i in range(n):\n        if all((abs(a[i][0] - x) + abs(a[i][1] - y) <= k for [x, y] in a)):\n            ok = True\n    print([-1, 1][ok])", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        l.append((a, b))\n    for i in range(n):\n        s = 0\n        x = l[i][0]\n        y = l[i][1]\n        for j in range(n):\n            if abs(x - l[j][0]) + abs(y - l[j][1]) <= k:\n                pass\n            else:\n                break\n        else:\n            print(1)\n            break\n    else:\n        print(-1)", "from math import *\n\ndef toOneBall(n, k, a):\n    for i in range(n):\n        res = 0\n        for j in range(n):\n            if int(fabs(a[i][0] - a[j][0])) + int(fabs(a[i][1] - a[j][1])) > k:\n                res += 1\n                break\n        if res == 0:\n            return True\n    return False\nt = int(input())\nfor i in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    a = []\n    for i in range(n):\n        a.append([int(x) for x in input().split()])\n    if toOneBall(n, k, a):\n        print(1)\n    else:\n        print(-1)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = []\n    t = -1\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        l.append([x, y])\n    for i in l:\n        q = 0\n        for j in l:\n            if abs(i[1] - j[1]) + abs(i[0] - j[0]) <= k:\n                q += 1\n            else:\n                break\n        if q == n:\n            t = 1\n    print(t)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        x = list(map(int, input().split()))\n        l.append(x)\n    for i in l:\n        c = 1\n        for j in l:\n            if abs(i[0] - j[0]) + abs(i[1] - j[1]) > k:\n                c = 0\n                break\n        if c == 1:\n            print(1)\n            break\n    if c == 0:\n        print(-1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    c = [list(map(int, input().split())) for __ in range(n)]\n    f = 1\n    for i in range(n):\n        (x0, y0) = c[i]\n        for j in range(n):\n            (x1, y1) = c[j]\n            if abs(x1 - x0) + abs(y1 - y0) > k:\n                f = -1\n                break\n        else:\n            f = 1\n            break\n    print(f)", "from collections import deque\nsol = []\nfor test in range(int(input())):\n    (n, k) = map(int, input().split())\n    points = []\n    for i in range(n):\n        points.append(tuple(map(int, input().split())))\n    invalid = True\n    for i in range(n):\n        can = True\n        for j in range(n):\n            if i == j:\n                continue\n            dist = abs(points[i][0] - points[j][0]) + abs(points[i][1] - points[j][1])\n            if dist > k:\n                can = False\n                break\n        if can:\n            invalid = False\n            break\n    if invalid:\n        sol.append(-1)\n    else:\n        sol.append(1)\nfor r in sol:\n    print(r)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    arr = []\n    for i in range(n):\n        arr.append(list(map(int, input().split())))\n    flag = 0\n    for i in range(n):\n        ans = 1\n        for j in range(n):\n            if i < n and j < n:\n                temp = abs(arr[i][0] - arr[j][0]) + abs(arr[i][1] - arr[j][1])\n                if temp > k:\n                    ans = 0\n                    break\n        if ans == 1:\n            flag = 1\n            break\n    if flag == 1:\n        print(1)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    loc = []\n    for _ in range(n):\n        (x, y) = map(int, input().split())\n        loc.append([x, y])\n    ans = -1\n    i = 0\n    while i < n and ans == -1:\n        for j in range(n):\n            if abs(loc[i][0] - loc[j][0]) + abs(loc[i][1] - loc[j][1]) > k:\n                break\n            if j == n - 1:\n                ans = 1\n        i += 1\n    print(ans)", "import math\nimport sys\n\nclass Read:\n\n    @staticmethod\n    def string():\n        return input()\n\n    @staticmethod\n    def int():\n        return int(input())\n\n    @staticmethod\n    def list(sep=' '):\n        return input().split(sep)\n\n    @staticmethod\n    def list_int(sep=' '):\n        return list(map(int, input().split(sep)))\n\ndef solve():\n    (n, k) = Read.list_int()\n    a = []\n    for i in range(n):\n        a.append(Read.list_int())\n    for i in range(n):\n        v = True\n        for j in range(n):\n            if i != j:\n                if abs(a[i][0] - a[j][0]) + abs(a[i][1] - a[j][1]) > k:\n                    v = False\n                    break\n        if v:\n            print(1)\n            return\n    print(-1)\nquery_count = Read.int()\nwhile query_count:\n    query_count -= 1\n    solve()", "from sys import stdin\nip = stdin.readline\nfor _ in range(int(ip())):\n    (n, k) = map(int, ip().split())\n    p = []\n    for _ in range(n):\n        p.append([*map(int, ip().split())])\n    flag = False\n    for i in range(n):\n        (x1, y1) = p[i]\n        f = True\n        for j in range(n):\n            if not j == i:\n                (x2, y2) = p[j]\n                power = abs(x1 - x2) + abs(y1 - y2)\n                if power > k:\n                    f = False\n                    break\n        if f:\n            flag = True\n            break\n    print('1' if flag else '-1')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    any = False\n    a = []\n    b = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        a.append(x)\n        b.append(y)\n    for j in range(n):\n        (x, y) = (a[j], b[j])\n        ok = True\n        for i in range(n):\n            if i == j:\n                pass\n            elif abs(a[i] - x) + abs(b[i] - y) > k:\n                ok = False\n                break\n        if ok:\n            any = True\n            break\n    if any:\n        print(1)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = []\n    flag = 1\n    for i in range(n):\n        l.append(list(map(int, input().split())))\n    for (x1, y1) in l:\n        for (x2, y2) in l:\n            if abs(x1 - x2) + abs(y1 - y2) > k:\n                flag = -1\n                break\n        else:\n            flag = 1\n            break\n    print(flag)", "def manhattan(a, b):\n    dx = abs(a[0] - b[0])\n    dy = abs(a[1] - b[1])\n    distance = dy + dx\n    return distance\n\ndef operation(points, k):\n    for p in points:\n        flag = True\n        for i in range(len(points)):\n            if manhattan(p, points[i]) > k:\n                flag = False\n                break\n        if flag:\n            return 1\n    return -1\ncases = int(input())\npoints = []\nfor c in range(cases):\n    (npoints, k) = tuple((int(a) for a in input().split(' ')))\n    for i in range(npoints):\n        point = [int(a) for a in input().split(' ')]\n        points.append(point)\n    print(operation(points, k))\n    points = []", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ball = list()\n    for _ in range(n):\n        (x, y) = map(int, input().split())\n        ball.append((x, y))\n    for i in ball:\n        flag = 0\n        for j in ball:\n            if abs(i[0] - j[0]) + abs(i[1] - j[1]) > k:\n                flag = 1\n                break\n            else:\n                pass\n        if flag == 1:\n            ans = -1\n        if flag == 0:\n            ans = 1\n            break\n    print(ans)", "for i in range(int(input())):\n    result = False\n    (n, k) = map(int, input().split())\n    balls = []\n    for j in range(n):\n        balls.append(tuple(map(int, input().split())))\n    for ball in balls:\n        for j in range(n):\n            if abs(ball[0] - balls[j][0]) + abs(ball[1] - balls[j][1]) > k:\n                break\n        else:\n            result = True\n    print(1 if result else -1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        a.append([x, y])\n    g = 0\n    for i in range(n):\n        f = 0\n        for j in range(n):\n            dis = abs(a[i][0] - a[j][0]) + abs(a[i][1] - a[j][1])\n            if dis <= k:\n                continue\n            else:\n                f = 1\n                break\n        if f == 0:\n            print(1)\n            g = 1\n            break\n    if g == 0:\n        print(-1)", "def Man(x, y):\n    return abs(x[0] - y[0]) + abs(x[1] - y[1])\nt = int(input())\nfor z in range(t):\n    (n, k) = [int(i) for i in input().split()]\n    arr = []\n    for i in range(n):\n        (x, y) = [int(i) for i in input().split()]\n        arr.append([x, y])\n    flag = -1\n    for i in range(n):\n        flag2 = 0\n        for j in range(n):\n            if Man(arr[i], arr[j]) > k:\n                flag2 = 1\n                break\n        if flag2 == 0:\n            flag = 1\n            break\n    print(flag)", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    (n, k) = map(int, sys.stdin.readline().split())\n    lst = []\n    for j in range(n):\n        (x, y) = map(int, sys.stdin.readline().split())\n        lst.append([x, y])\n    for j in range(n):\n        check = 1\n        for l in range(n):\n            if abs(lst[j][0] - lst[l][0]) + abs(lst[j][1] - lst[l][1]) > k:\n                check = 0\n                break\n        if check:\n            sys.stdout.write(str(1) + '\\n')\n            break\n    if not check:\n        sys.stdout.write(str(-1) + '\\n')", "for u in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        x.append([a, b])\n    f = False\n    ans = 0\n    for i in range(len(x)):\n        l = 0\n        for j in range(len(x)):\n            if abs(x[i][0] - x[j][0]) + abs(x[i][1] - x[j][1]) > k:\n                break\n            l += 1\n        if l == n:\n            ans = 1\n            break\n    if ans == 1:\n        print(1)\n    else:\n        print(-1)", "import sys\nreader = (s.rstrip() for s in sys.stdin)\ninput = reader.__next__\n\ndef gift():\n    for _ in range(t):\n        (n, k) = list(map(int, input().split()))\n        balls = []\n        for i in range(n):\n            ball = list(map(int, input().split()))\n            balls.append(ball)\n        ans = False\n        for i in range(n):\n            temAns = True\n            for j in range(n):\n                if j != n:\n                    if abs(balls[i][0] - balls[j][0]) + abs(balls[i][1] - balls[j][1]) > k:\n                        temAns = False\n                        break\n            if temAns:\n                ans = True\n                break\n        yield (1 if ans else -1)\nt = int(input())\nans = gift()\nprint(*ans, sep='\\n')", "t = int(input())\nfor j in range(0, t):\n    (n, k) = map(int, input().split())\n    x = []\n    y = []\n    for i in range(0, n):\n        (a, b) = (0, 0)\n        (a, b) = map(int, input().split())\n        x.append(a)\n        y.append(b)\n    fl = 0\n    for i in range(0, n):\n        fl = -1\n        for g in range(0, n):\n            if abs(x[i] - x[g]) + abs(y[i] - y[g]) <= k:\n                fl = 0\n            else:\n                fl = -1\n                break\n        if fl == 0:\n            break\n    if fl == -1:\n        print(-1)\n    else:\n        print(1)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    x = []\n    y = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        x.append(a)\n        y.append(b)\n    comp = 0\n    for i in range(n):\n        flag = 1\n        for j in range(n):\n            if abs(x[i] - x[j]) + abs(y[i] - y[j]) > k:\n                flag = 0\n                break\n        if flag == 1:\n            comp = 1\n            break\n    if comp == 1:\n        print(1)\n    else:\n        print(-1)", "import sys\ninput = sys.stdin.readline\nn = int(input())\n\ndef manhattan(point1, point2):\n    return abs(point1[0] - point2[0]) + abs(point1[1] - point2[1])\nfor _ in range(n):\n    (numPoint, attraction) = map(int, input().split())\n    point = []\n    flag = False\n    for _ in range(numPoint):\n        (x, y) = map(int, input().split())\n        point.append([x, y])\n    for i in range(numPoint):\n        flag = True\n        for j in range(numPoint):\n            if i == j:\n                continue\n            if attraction >= manhattan(point[i], point[j]):\n                continue\n            else:\n                flag = False\n                break\n        if flag == True:\n            break\n    if flag == True:\n        print(1)\n    else:\n        print(-1)", "def ball_list(amount):\n    l = []\n    l1 = []\n    for a in range(amount):\n        l.append([int(x) for x in input().split()])\n        l1.append(sum(l[a]))\n    return (l, l1)\n\ndef close(l, power):\n    for i in l:\n        true = False\n        for a in l:\n            if abs(i[0] - a[0]) + abs(i[1] - a[1]) > power:\n                true = True\n                break\n        if true == False:\n            return True\n    return False\nfor i in range(int(input())):\n    (balls, power) = [int(x) for x in input().split()]\n    (l, l1) = ball_list(balls)\n    l2 = list(sorted(l1))\n    if close(l, power):\n        print(1)\n    else:\n        print(-1)", "def check(ar, k):\n    for i in range(len(ar)):\n        c = 0\n        x = ar[i][0]\n        y = ar[i][1]\n        for j in range(len(ar)):\n            xx = ar[j][0]\n            yy = ar[j][1]\n            if abs(xx - x) + abs(yy - y) <= k:\n                c += 1\n            else:\n                break\n        if c == len(ar):\n            return 1\n    return -1\ny122 = int(input())\nfor _ in range(y122):\n    (n, k) = map(int, input().split())\n    ar = []\n    xl = 'xxx'\n    xr = 'xxx'\n    yl = 'xxx'\n    yr = 'xxx'\n    for i in range(n):\n        ar.append(list(map(int, input().split())))\n    print(check(ar, k))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        a.append((x, y))\n    f = 0\n    for i in range(n):\n        for j in range(n):\n            if abs(a[i][0] - a[j][0]) + abs(a[i][1] - a[j][1]) > k:\n                break\n        else:\n            f = 1\n            print(1)\n            break\n    else:\n        print(-1)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        a.append((x, y))\n    ans = -2\n    f = 0\n    for i in range(n):\n        flag = 0\n        for j in range(n):\n            if abs(a[j][0] - a[i][0]) + abs(a[j][1] - a[i][1]) <= k:\n                continue\n            else:\n                flag = 1\n                break\n        if flag == 0:\n            f = 1\n            break\n    if f == 1:\n        print(1)\n    else:\n        print(-1)", "from sys import stdin\ninput = stdin.readline\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    points = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        points.append((x, y))\n    flag = False\n    for i in range(n):\n        flagg = False\n        for j in range(n):\n            if abs(points[i][0] - points[j][0]) + abs(points[i][1] - points[j][1]) > k:\n                flagg = True\n                break\n        if flagg == False:\n            flag = True\n            break\n    if flag == False:\n        print(-1)\n    else:\n        print(1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = []\n    for i in range(n):\n        s.append(list(map(int, input().split())))\n    for i in s:\n        flag = 0\n        for j in s:\n            if abs(i[0] - j[0]) + abs(i[1] - j[1]) <= k:\n                flag = 1\n            else:\n                flag = 0\n                break\n        if flag == 1:\n            print(1)\n            break\n    if flag == 0:\n        print(-1)", "t = int(input())\nfor j in range(0, t):\n    l1 = [int(c) for c in input().split()]\n    n = l1[0]\n    kd = l1[1]\n    p = []\n    for i in range(0, n):\n        p.append([int(x) for x in input().split()])\n    match = True\n    for i in range(0, n):\n        match = True\n        for k in range(0, n):\n            if abs(p[i][0] - p[k][0]) + abs(p[i][1] - p[k][1]) > kd:\n                match = False\n                break\n        if match == True:\n            break\n    if match == True:\n        print(1)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    c = [list(map(int, input().split())) for l in range(n)]\n    t = 0\n    for i in range(n):\n        (x0, y0) = c[i]\n        for j in range(n):\n            (x1, y1) = c[j]\n            if abs(x0 - x1) + abs(y0 - y1) > k:\n                t = -1\n                break\n        else:\n            t = 1\n            break\n    print(t)", "for _ in range(int(input())):\n    x = []\n    y = []\n    count = 0\n    (n, k) = map(int, input().split())\n    for _ in range(n):\n        (a, b) = map(int, input().split())\n        x.append(a)\n        y.append(b)\n    for i in range(n):\n        flag = True\n        for j in range(n):\n            if abs(x[i] - x[j]) + abs(y[i] - y[j]) <= k:\n                continue\n            else:\n                flag = False\n                break\n        if flag == True:\n            count = 1\n            break\n    if count == 1:\n        print('1')\n    else:\n        print('-1')", "def solve(n, k, points):\n    for i in range(n):\n        flag = 1\n        for j in range(n):\n            if abs(points[i][0] - points[j][0]) + abs(points[i][1] - points[j][1]) > k:\n                flag = 0\n                break\n        if flag == 1:\n            return 1\n    return -1\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    points = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        points.append([a, b])\n    print(solve(n, k, points))", "ll = lambda : map(int, input().split())\nt = lambda : int(input())\nss = lambda : input()\nfor _ in range(t()):\n    (n, k) = ll()\n    l = []\n    for _ in range(n):\n        l.append(list(ll()))\n    for i in range(n):\n        f = 1\n        for j in range(n):\n            if abs(l[j][0] - l[i][0]) + abs(l[j][1] - l[i][1]) > k:\n                f = -1\n                break\n        if f == 1:\n            print(1)\n            break\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(i) for i in input().split()]\n    p = []\n    c = 0\n    for i in range(n):\n        x = [int(i) for i in input().split()]\n        p.append(x)\n    for i in range(0, n):\n        (xi, yi) = p[i]\n        for j in range(0, n):\n            (xj, yj) = p[j]\n            d = abs(xi - xj) + abs(yi - yj)\n            if d > k:\n                break\n            if j == n - 1:\n                c = 1\n                print(1)\n        if c == 1:\n            break\n    if c == 0:\n        print(-1)", "import math\n\ndef dist(p1, p2):\n    (x1, y1) = (p1[0], p1[1])\n    (x2, y2) = (p2[0], p2[1])\n    d = abs(x1 - x2) + abs(y1 - y2)\n    return d\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = []\n    for i in range(n):\n        (i, j) = map(int, input().split())\n        l.append([i, j])\n    for i in range(n):\n        flage = True\n        for j in range(0, n):\n            if dist(l[i], l[j]) > k:\n                flage = False\n                break\n        if flage:\n            break\n    if flage:\n        print(1)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    points = []\n    for i in range(n):\n        points.append([int(x) for x in input().split()])\n    for i in range(len(points)):\n        y = 0\n        for j in range(len(points)):\n            (a, b) = (points[i][0], points[i][1])\n            (c, d) = (points[j][0], points[j][1])\n            if abs(a - c) + abs(b - d) <= k:\n                y += 1\n            else:\n                break\n        if y == len(points):\n            print(1)\n            break\n    else:\n        print(-1)", "import math\ncases = int(input())\nfor _ in range(cases):\n    (num, k) = map(int, input().split())\n    coors = [list(map(int, input().split())) for _ in range(num)]\n    for (cx, cy) in coors:\n        valid = True\n        for (x, y) in coors:\n            d = abs(x - cx) + abs(y - cy)\n            if d > k:\n                valid = False\n                break\n        if valid:\n            print(1)\n            break\n    else:\n        print(-1)", "t = int(input())\nwhile t:\n    t = t - 1\n    (n, k) = map(int, input().split())\n    a = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        a.append([x, y])\n    flag = True\n    for i in range(n):\n        c = 0\n        for j in range(n):\n            if abs(a[i][0] - a[j][0]) + abs(a[i][1] - a[j][1]) <= k:\n                c += 1\n            else:\n                break\n        if c == n:\n            flag = False\n            break\n    if flag:\n        print(-1)\n    else:\n        print(1)", "from math import *\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        l.append([a, b])\n    f = 0\n    for i in range(n):\n        for j in range(n):\n            m = abs(l[i][0] - l[j][0])\n            p = abs(l[i][1] - l[j][1])\n            if m + p > k:\n                break\n        else:\n            print(1)\n            f = 1\n            break\n    if f == 0:\n        print(-1)", "for _ in ' ' * int(input()):\n    (n, k) = map(int, input().split())\n    cnt = 0\n    val = []\n    for i in range(n):\n        val.append(list(map(int, input().split())))\n    for i in range(n):\n        f = 0\n        for j in range(n):\n            if i != j:\n                if abs(val[i][0] - val[j][0]) + abs(val[i][1] - val[j][1]) > k:\n                    f = 1\n                    break\n        if f == 0:\n            cnt = 1\n            break\n    if cnt == 0:\n        print(-1)\n    else:\n        print(1)", "for tt in range(int(input())):\n    (n, k) = map(int, input().split())\n    p = []\n    for i in range(n):\n        p.append(list(map(int, input().split())))\n    for i in range(n):\n        b = True\n        for j in range(n):\n            if abs(p[i][1] - p[j][1]) + abs(p[i][0] - p[j][0]) > k:\n                b = False\n                break\n        if b:\n            break\n    if b:\n        print(1)\n    else:\n        print(-1)", "import math\nfrom functools import reduce\n\ndef readGenerator():\n    while True:\n        tokens = input().split(' ')\n        for t in tokens:\n            yield t\nreader = readGenerator()\n\ndef readWord():\n    return next(reader)\n\ndef readInt():\n    return int(next(reader))\n\ndef readFloat():\n    return float(next(reader))\n\ndef readLine():\n    return input()\n\ndef solve(n, k, a):\n    for i in range(n):\n        for j in range(n):\n            d = abs(a[i][0] - a[j][0]) + abs(a[i][1] - a[j][1])\n            if d > k:\n                break\n        else:\n            return 1\n    return -1\nt = readInt()\nfor _ in range(t):\n    (n, k) = [readInt() for _ in range(2)]\n    a = []\n    for _ in range(n):\n        a.append((readInt(), readInt()))\n    print(solve(n, k, a))", "t = int(input())\nans = []\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    values = []\n    for _ in range(n):\n        values.append(list(map(int, input().split())))\n    found = False\n    for i in range(n):\n        okay = True\n        vals = [values[i][0], values[i][1]]\n        for j in range(n):\n            if i == j:\n                continue\n            if abs(values[j][0] - vals[0]) + abs(values[j][1] - vals[1]) > k:\n                okay = False\n                break\n        if okay:\n            found = True\n            break\n    if found:\n        ans.append('1')\n    else:\n        ans.append('-1')\nprint('\\n'.join(ans))", "test_cases = int(input())\nres = []\nfor test in range(test_cases):\n    s = input()\n    ls = s.split()\n    n = int(ls[0])\n    k = int(ls[1])\n    points = []\n    for i in range(n):\n        s = input()\n        ls = s.split()\n        points.append([int(ls[0]), int(ls[1])])\n    val = -1\n    for i in range(n):\n        flag = 1\n        for j in range(n):\n            if abs(points[i][0] - points[j][0]) + abs(points[i][1] - points[j][1]) > k:\n                flag = -1\n                break\n        if flag == 1:\n            val = 1\n            break\n    res.append(val)\nfor value in res:\n    print(value)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    li = []\n    ans = -1\n    for i in range(n):\n        li.append(list(map(int, input().split())))\n    for i in range(n):\n        ok = True\n        for j in range(n):\n            if i != j and k < abs(li[i][0] - li[j][0]) + abs(li[i][1] - li[j][1]):\n                ok = False\n                break\n        if ok:\n            ans = 1\n            break\n    print(ans)", "for z in range(int(input())):\n    (n, k) = map(int, input().split())\n    matrix = []\n    for i in range(n):\n        a = []\n        (fir, sec) = map(int, input().split())\n        a.append(fir)\n        a.append(sec)\n        matrix.append(a)\n    res = -1\n    for i in range(n):\n        mil = 1\n        for j in range(n):\n            if i != j and k < abs(matrix[i][0] - matrix[j][0]) + abs(matrix[i][1] - matrix[j][1]):\n                mil = 0\n                break\n        if mil:\n            res = 1\n            break\n    print(res)", "T = int(input())\nfor __ in range(T):\n    (n, k) = map(int, input().split())\n    flag = 0\n    listi = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        listi.append([a, b])\n    for x in range(n):\n        for y in range(n):\n            diff = abs(listi[x][0] - listi[y][0]) + abs(listi[x][1] - listi[y][1])\n            if diff > k:\n                break\n        else:\n            flag = 1\n            break\n    if flag == 1:\n        print('1')\n    else:\n        print('-1')", "t = int(input())\nwhile t > 0:\n    count = -1\n    l = []\n    l1 = []\n    (a, b) = map(int, input().split())\n    for i in range(0, a, 1):\n        (x, y) = map(int, input().split())\n        l.append(x)\n        l1.append(y)\n    for i in range(0, a, 1):\n        ok = True\n        for j in range(0, a, 1):\n            m = abs(l[i] - l[j]) + abs(l1[i] - l1[j])\n            if m > b:\n                ok = False\n                break\n        if ok:\n            count = 1\n            break\n    print(count)\n    t -= 1", "for ii in range(int(input())):\n    (x, y) = map(int, input().split())\n    (a, f) = ([], True)\n    for jj in range(x):\n        a.append(list(map(int, input().split())))\n    for jj in range(x):\n        c = 0\n        for kk in range(x):\n            if abs(a[jj][0] - a[kk][0]) + abs(a[jj][1] - a[kk][1]) <= y:\n                c += 1\n            else:\n                break\n        if c == x:\n            print(1)\n            f = False\n            break\n    if f:\n        print(-1)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().strip().split()))\n    poi = []\n    for i in range(n):\n        poi.append(list(map(int, input().strip().split())))\n    for i in range(n):\n        flag = True\n        for j in range(n):\n            if i == j:\n                pass\n            if abs(poi[i][0] - poi[j][0]) + abs(poi[i][1] - poi[j][1]) > k:\n                flag = False\n                break\n        if flag:\n            break\n    if flag:\n        print(1)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = []\n    for j in range(n):\n        (x, y) = map(int, input().split())\n        l.append([x, y])\n    for j in range(n):\n        for m in range(n):\n            if abs(l[j][0] - l[m][0]) + abs(l[j][1] - l[m][1]) > k:\n                break\n        else:\n            print('1')\n            break\n    else:\n        print('-1')", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split(' '))\n    lst = []\n    for j in range(n):\n        lst1 = list(map(int, input().split(' ')))\n        lst.append(lst1)\n    for i in range(n):\n        count = 0\n        for j in range(n):\n            if i == j:\n                continue\n            if abs(abs(lst[i][0] - lst[j][0]) + abs(lst[i][1] - lst[j][1])) <= k:\n                count += 1\n            elif count == n - 1:\n                break\n            else:\n                break\n        if count == n - 1:\n            break\n    if count == n - 1:\n        print(1)\n    else:\n        print(-1)", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = set()\n    a = []\n    for __ in range(n):\n        (x, y) = map(int, input().split())\n        a.append([x, y])\n    for i in range(n):\n        z = 0\n        c = 0\n        for j in range(n):\n            if i != j:\n                x = abs(a[i][0] - a[j][0]) + abs(a[i][1] - a[j][1])\n                if x <= k:\n                    continue\n                else:\n                    c += 1\n                    break\n        if c == 0:\n            print(1)\n            break\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    li = []\n    for j in range(n):\n        li.append(list(map(int, input().split())))\n    for j in range(n):\n        c = 0\n        x1 = li[j][0]\n        y1 = li[j][1]\n        for k1 in range(n):\n            x2 = li[k1][0]\n            y2 = li[k1][1]\n            dist = abs(x1 - x2) + abs(y1 - y2)\n            if dist > k:\n                c = 1\n                break\n        if c == 0:\n            print(1)\n            break\n    if c == 1:\n        print(-1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = []\n    for i in range(n):\n        t = list(map(int, input().split()))\n        l.append(t[:])\n    ans = -1\n    for i in range(n):\n        t = 0\n        for j in range(n):\n            if abs(l[i][0] - l[j][0]) + abs(l[i][1] - l[j][1]) > k:\n                t = -1\n                break\n        if t == 0:\n            ans = 0\n            break\n    if ans == 0:\n        print(1)\n    else:\n        print(-1)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = [*map(int, input().split())]\n    l = list()\n    for el in range(n):\n        l.append([*map(int, input().split())])\n    ans = -1\n    for i in range(n):\n        cnt = 0\n        for j in range(n):\n            if i == j:\n                continue\n            if abs(l[i][0] - l[j][0]) + abs(l[i][1] - l[j][1]) > k:\n                break\n            cnt += 1\n        if cnt == n - 1:\n            ans = 1\n            break\n    print(ans)", "T = int(input())\nfor i in range(T):\n    (N, K) = list(map(int, input().split()))\n    C = []\n    for j in range(N):\n        (X, Y) = list(map(int, input().split()))\n        C.append([X, Y])\n    Check = False\n    for j in range(N):\n        for k in range(N):\n            Part1 = C[j][0] - C[k][0]\n            Part2 = C[j][1] - C[k][1]\n            if Part1 < 0:\n                Part1 = Part1 * -1\n            if Part2 < 0:\n                Part2 = Part2 * -1\n            D = Part1 + Part2\n            if D <= K:\n                Check = True\n            else:\n                Check = False\n                break\n        if Check:\n            break\n    if Check == True:\n        print(1)\n    else:\n        print(-1)", "try:\n\n    def dist(x, y, a, b):\n        s = abs(x - a) + abs(y - b)\n        return s\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        x = []\n        y = []\n        for _ in range(n):\n            (a, b) = map(int, input().split())\n            x.append(a)\n            y.append(b)\n        i = 0\n        l = 0\n        for i in range(n):\n            j = 0\n            for j in range(n):\n                d = dist(x[i], y[i], x[j], y[j])\n                if d > k:\n                    break\n                if j == n - 1:\n                    l = 1\n            if l == 1:\n                print(1)\n                break\n        if l == 0:\n            print(-1)\nexcept:\n    pass", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    p = []\n    for i in range(n):\n        p.append([int(x) for x in input().split()])\n    c = 1\n    ans = -1\n    for i in range(n):\n        c = 1\n        for j in range(n):\n            if i != j and abs(p[j][0] - p[i][0]) + abs(p[j][1] - p[i][1]) > k:\n                c = 0\n                break\n        if c == 1:\n            ans = 1\n            break\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    p = []\n    for i in range(n):\n        p.append([int(x) for x in input().split()])\n    c = 1\n    ans = -1\n    for i in range(n):\n        c = 1\n        for j in range(n):\n            if i != j and abs(p[j][0] - p[i][0]) + abs(p[j][1] - p[i][1]) > k:\n                c = 0\n                break\n        if c == 1:\n            ans = 1\n            break\n    print(ans)", "t = int(input())\nrs = []\nfor z in range(t):\n    nk = input()\n    (n, k) = nk.split(' ')\n    (n, k) = (int(n), int(k))\n    cor = []\n    for i in range(n):\n        c = input()\n        (x, y) = c.split(' ')\n        (x, y) = (int(x), int(y))\n        cor.append([x, y])\n    ok = True\n    for i in range(n):\n        ok = True\n        for j in range(n):\n            if abs(cor[i][0] - cor[j][0]) + abs(cor[i][1] - cor[j][1]) > k:\n                ok = False\n                break\n        if ok:\n            rs.append(1)\n            break\n    if not ok:\n        rs.append(-1)\nfor item in rs:\n    print(item)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    p = []\n    for i in range(n):\n        p.append([int(x) for x in input().split()])\n    c = 1\n    ans = -1\n    for i in range(n):\n        c = 1\n        for j in range(n):\n            if i != j and abs(p[j][0] - p[i][0]) + abs(p[j][1] - p[i][1]) > k:\n                c = 0\n                break\n        if c == 1:\n            ans = 1\n            break\n    print(ans)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    lst = []\n    for i in range(n):\n        a = list(map(int, input().split()))\n        lst.append(a)\n    f = False\n    for i in range(n):\n        fnd = True\n        for j in range(n):\n            dis = abs(lst[i][0] - lst[j][0]) + abs(lst[i][1] - lst[j][1])\n            if dis > k:\n                fnd = False\n                break\n        if fnd == True:\n            f = True\n            break\n    if f == True:\n        print(1)\n    else:\n        print(-1)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    lst = []\n    for i in range(n):\n        a = list(map(int, input().split()))\n        lst.append(a)\n    f = False\n    for i in range(n):\n        fnd = True\n        for j in range(n):\n            dis = abs(lst[i][0] - lst[j][0]) + abs(lst[i][1] - lst[j][1])\n            if dis > k:\n                fnd = False\n                break\n        if fnd == True:\n            f = True\n            break\n    if f == True:\n        print(1)\n    else:\n        print(-1)", "t = int(input())\nfor T in range(t):\n    (n, k) = map(int, input().split())\n    a = []\n    for i in range(n):\n        l = list(map(int, input().split()))\n        a.append(l)\n    for i in range(n):\n        ans = 1\n        for j in range(n):\n            if abs(a[i][0] - a[j][0]) + abs(a[i][1] - a[j][1]) > k:\n                ans = -1\n                break\n        if ans == 1:\n            break\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = [int(x) for x in input().split(' ')]\n    points = []\n    for i in range(n):\n        point = [int(x) for x in input().split(' ')]\n        points.append(point)\n    flm = 0\n    for i in range(len(points)):\n        fl = 1\n        for j in range(len(points)):\n            if abs(points[i][0] - points[j][0]) + abs(points[i][1] - points[j][1]) > k:\n                fl = 0\n                break\n        if fl:\n            flm = 1\n            break\n    if flm:\n        print(1)\n    else:\n        print(-1)", "for tc in range(int(input())):\n    ball = []\n\n    def f(a, b):\n        return abs(ball[a][0] - ball[b][0]) + abs(ball[a][1] - ball[b][1])\n    (n, k) = map(int, input().split())\n    for i in range(n):\n        ball.append(list(map(int, input().split())))\n    for i in range(n):\n        for j in range(n):\n            if f(i, j) > k:\n                break\n        else:\n            flag = True\n            break\n    else:\n        flag = False\n    if flag:\n        print(1)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        l.append(list(map(int, input().split())))\n    mans = -1\n    for i in range(n):\n        ans = 1\n        for j in range(n):\n            if i != j and abs(l[i][0] - l[j][0]) + abs(l[i][1] - l[j][1]) > k:\n                ans -= 1\n                break\n        if ans == 1:\n            print(1)\n            mans = 1\n            break\n    if mans == -1:\n        print(-1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        l.append((x, y))\n    flag = 0\n    for i in range(n):\n        c = 0\n        for j in range(n):\n            s = abs(l[i][0] - l[j][0]) + abs(l[i][1] - l[j][1])\n            if s > k:\n                c = 1\n                break\n        if c == 0:\n            flag = 1\n            break\n    if flag == 1:\n        print(1)\n    else:\n        print(-1)", "def dis(x, y, x1, y1):\n    return abs(x - x1) + abs(y - y1)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    li = []\n    for i in range(n):\n        p = list(map(int, input().split()))\n        li.append(p)\n    count = 0\n    for i in range(n):\n        flag = False\n        for j in range(n):\n            if i != j:\n                val = dis(li[i][0], li[i][1], li[j][0], li[j][1])\n                if val > k:\n                    flag = True\n                    break\n        if not flag:\n            break\n    if flag:\n        print(-1)\n    elif li.count(li[0]) == n:\n        print(0)\n    else:\n        print(1)", "import sys\nimport math\ninput = sys.stdin.readline\n\ndef pi():\n    return int(input())\n\ndef pl():\n    return int(input(), 16)\n\ndef ti():\n    return list(map(int, input().split()))\n\ndef ts():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef main():\n    B()\n\ndef A():\n    t = pi()\n    while t:\n        t -= 1\n        n = ti()\n        s = ts()\n        temp = ''\n        for c in s:\n            if c == 'b':\n                temp += 'b'\n        ans = temp\n        if len(temp) == 0:\n            print(*s, sep='')\n            continue\n        for c in s:\n            if c != 'b':\n                ans += c\n        print(ans)\n\ndef B():\n    t = pi()\n    while t:\n        t -= 1\n        [n, k] = ti()\n        p = [[] * n] * n\n        for i in range(n):\n            p[i] = ti()\n        isPossible = False\n        for i in range(n):\n            f = True\n            for j in range(n):\n                d = abs(p[i][0] - p[j][0]) + abs(p[i][1] - p[j][1])\n                if d > k:\n                    f = False\n                    break\n            if f:\n                isPossible = True\n        if not isPossible:\n            print(-1)\n        else:\n            print(1)\nmain()", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        l.append([x, y])\n    c = 0\n    q = 0\n    for i in range(n):\n        c = 0\n        for j in range(n):\n            if abs(l[i][0] - l[j][0]) + abs(l[i][1] - l[j][1]) <= k:\n                c += 1\n            else:\n                break\n        if c == n:\n            q += 1\n            print(1)\n            break\n    if q == 0:\n        print(-1)", "t = int(input())\nwhile t > 0:\n    ls = []\n    (x, y) = input().split()\n    x = int(x)\n    y = int(y)\n    for i in range(x):\n        (a, b) = input().split()\n        a = int(a)\n        b = int(b)\n        tup = (a, b)\n        ls.append(tup)\n    c = 0\n    i = 0\n    while i < x:\n        j = 0\n        while j < x:\n            p = abs(ls[i][0] - ls[j][0]) + abs(ls[i][1] - ls[j][1])\n            if p <= y:\n                j = j + 1\n                c = c + 1\n            else:\n                c = 0\n                i = i + 1\n                break\n        if c > 0:\n            break\n    if c == 0:\n        d = -1\n    else:\n        d = 1\n    print(d)\n    t = t - 1", "for t in range(int(input())):\n    (n, k) = map(int, input().strip().split())\n    x = []\n    y = []\n    for i in range(n):\n        (a, b) = map(int, input().strip().split())\n        x.append(a)\n        y.append(b)\n    found = 0\n    for i in range(n):\n        for j in range(n):\n            if abs(x[i] - x[j]) + abs(y[i] - y[j]) > k:\n                found += 1\n                break\n    if found == n:\n        print(-1)\n    else:\n        print(1)", "t = int(input())\nfor s in range(t):\n    (n, k) = map(int, input().split())\n    l = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        l.append([x, y])\n    flag = 0\n    for i in range(0, n):\n        c = 0\n        for j in range(0, n):\n            if abs(l[i][0] - l[j][0]) + abs(l[i][1] - l[j][1]) > k:\n                break\n            c = c + 1\n        if c == n:\n            flag = 1\n            print(1)\n            break\n    if flag == 0:\n        print(-1)"]