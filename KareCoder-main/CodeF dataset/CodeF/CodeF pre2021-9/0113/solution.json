["import sys\n\ndef solve(a, n, x):\n    if n == 1:\n        return f'YES\\n{a[0]}' if a[0] != x else 'NO'\n    s = 0\n    ans = True\n    for i in range(n):\n        s += a[i]\n        if s == x:\n            if i == n - 1:\n                ans = False\n            else:\n                (a[i], a[i + 1]) = (a[i + 1], a[i])\n            break\n    if ans:\n        return 'YES\\n' + ' '.join(map(str, a))\n    return 'NO'\n\ndef main():\n    input = sys.stdin.readline\n    print = sys.stdout.write\n    res = ''\n    t = int(input())\n    for _ in range(t):\n        (n, x) = map(int, input().split())\n        a = list(map(int, input().split()))\n        sub_res = solve(a, n, x)\n        res += sub_res + '\\n'\n    print(res)\nmain()", "def func(arr, n, x):\n    s = 0\n    for i in range(n):\n        if s + arr[i] == x:\n            if i != n - 1:\n                (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n                print('YES')\n                print(' '.join(map(str, arr)))\n            else:\n                print('NO')\n            break\n        elif s + arr[i] > x:\n            print('YES')\n            print(' '.join(map(str, arr)))\n            break\n        else:\n            s += arr[i]\n            if i == n - 1:\n                print('YES')\n                print(' '.join(map(str, arr)))\nt = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    func(arr, n, x)", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_string():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_print_int(x):\n    sys.stdout.write(str(x) + '\\n')\n\ndef get_print(x):\n    sys.stdout.write(x + '\\n')\n\ndef get_print_int_same(x):\n    sys.stdout.write(str(x) + ' ')\n\ndef get_print_same(x):\n    sys.stdout.write(x + ' ')\nfrom sys import maxsize\n\ndef solve():\n    for _ in range(get_int()):\n        (n, x) = get_ints()\n        w = get_list()\n        summ = 0\n        f = 0\n        for i in range(n):\n            summ += w[i]\n            if summ == x:\n                if i + 1 < n:\n                    y = w[i]\n                    (w[i], w[i + 1]) = (w[i + 1], w[i])\n                    summ -= y\n                    summ += w[i]\n                else:\n                    f = 1\n                    break\n        if f == 1 or summ == x:\n            get_print('NO')\n        else:\n            get_print('YES')\n            get_print(' '.join(map(str, w)))\nsolve()", "def go():\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    s = 0\n    for i in range(n):\n        s += arr[i]\n        if s == x:\n            if i == n - 1:\n                print('NO')\n                return None\n            else:\n                print('YES')\n                (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n                print(' '.join(map(str, arr)))\n                return None\n    print('YES')\n    print(' '.join(map(str, arr)))\n    return None\nfor i in range(int(input())):\n    go()", "t = int(input())\nfor qweqwe in range(t):\n    (n, x) = map(int, input().split())\n    w = list(map(int, input().split()))\n    if sum(w) == x:\n        print('NO')\n        continue\n    else:\n        summ = 0\n        for i in range(len(w) - 1):\n            if summ + w[i] == x:\n                (w[i], w[i + 1]) = (w[i + 1], w[i])\n            summ += w[i]\n    print('YES')\n    print(' '.join(map(str, w)))", "def f(x, y):\n    s = 0\n    for (i, j) in zip(y, range(len(y))):\n        s += i\n        if s == x:\n            return (True, j)\n    return (False, 0)\nfor _ in range(int(input())):\n    x = int(input().split(' ')[1])\n    y = list(map(int, input().split(' ')))\n    if sum(y) == x:\n        print('NO')\n    else:\n        print('YES')\n        z = sorted(y, key=lambda x: -x)\n        while True:\n            (st, j) = f(x, z)\n            if st:\n                t = z[j]\n                z[j] = z[j + 1]\n                z[j + 1] = t\n            else:\n                break\n        print(' '.join(map(str, z)))", "def check(lst, n, x):\n    total = 0\n    for i in range(n):\n        total += lst[i]\n        if total == x:\n            return False\n    return True\n\ndef solve(n, x, lst):\n    if sum(lst) == x:\n        return 'NO'\n    if len(set(lst)) == 1 and x % lst[0] == 0 and (sum(lst) >= x):\n        return 'NO'\n    ok = False\n    for i in range(n):\n        if check(lst, n, x):\n            ok = True\n            break\n        else:\n            lst = lst[-1:] + lst[:-1]\n    if not ok:\n        return 'NO'\n    print('YES')\n    return ' '.join(map(str, lst))\nfor _ in range(int(input())):\n    (n, x) = list(map(int, input().split()))\n    lst = list(map(int, input().split()))\n    print(solve(n, x, lst))", "for j in range(int(input())):\n    (n, w) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    if sum(l) == w:\n        print('NO')\n    else:\n        k = 0\n        for i in range(n):\n            k += l[i]\n            if k == w:\n                (l[i], l[i + 1]) = (l[i + 1], l[i])\n        print('YES')\n        print(' '.join(map(str, l)))", "def solve(n, x, a):\n    if sum(a) == x:\n        return 'NO'\n    s = 0\n    for i in range(n):\n        if s + a[i] == x:\n            (a[i], a[i + 1]) = (a[i + 1], a[i])\n        s += a[i]\n    return 'YES\\n' + ' '.join(map(str, a))\nt = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solve(n, x, a))", "def main():\n    t = int(input())\n    for i in range(t):\n        [n, x] = list(map(int, input().split()))\n        w = list(map(int, input().split()))\n        check = 0\n        for j in range(n - 1):\n            check += w[j]\n            if check == x:\n                (w[j], w[j + 1]) = (w[j + 1], w[j])\n                break\n        if check + w[n - 1] == x:\n            print('NO')\n        else:\n            print('YES')\n            print(' '.join(map(str, w)))\nmain()", "n = int(input(''))\nfor i in range(n):\n    (t, x) = map(int, input('').split())\n    a = list(map(int, input('').split()))\n    Sum = 0\n    for i in range(len(a) - 1):\n        if a[i] + Sum == x:\n            for j in range(i + 1, len(a)):\n                if a[j] + Sum != x:\n                    temp = a[i]\n                    a[i] = a[j]\n                    a[j] = temp\n                    break\n        Sum += a[i]\n    if sum(a) == x:\n        print('NO')\n    else:\n        print('YES')\n        print(' '.join(map(str, a)))", "def solve():\n    for _ in range(int(input())):\n        (n, x) = map(int, input().split())\n        weights = list(map(int, input().split()))\n        total = sum(weights)\n        if total == x:\n            print('NO')\n        else:\n            print('YES')\n            acc = 0\n            output = []\n            while weights:\n                w = weights.pop()\n                if acc + w == x:\n                    w2 = weights.pop()\n                    acc += w2\n                    output.append(str(w2))\n                acc += w\n                output.append(str(w))\n            print(' '.join(output))\nsolve()", "from math import ceil\nimport sys\n\ndef solve():\n    if sum(arr) == x:\n        print('NO', flush=True)\n        return None\n    if sum(arr) < x:\n        print('YES', flush=True)\n        print(' '.join(map(str, arr)), flush=True)\n        return None\n    ans = 0\n    for i in range(n - 1):\n        ans += arr[i]\n        if ans == x:\n            (arr[i + 1], arr[i]) = (arr[i], arr[i + 1])\n    print('YES', flush=True)\n    print(' '.join(map(str, arr)), flush=True)\n    return None\nT = int(input())\nfor t in range(1, T + 1):\n    (n, x) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    solve()", "t = int(input())\nfor case in range(t):\n    (n, x) = map(int, input().split())\n    w = list(map(int, input().split()))\n    s = sum(w)\n    if s == x:\n        print('NO')\n        continue\n    cs = 0\n    for i in range(n):\n        cs += w[i]\n        if cs == x:\n            (w[i], w[i + 1]) = (w[i + 1], w[i])\n            break\n    print('YES')\n    print(' '.join(map(str, w)))", "cases = int(input())\n\ndef yes(w):\n    print('YES')\n    print(' '.join([str(t) for t in w]))\nfor i in range(cases):\n    a = input().split()\n    b = input().split()\n    (_, x) = (int(a[0]), int(a[1]))\n    w = [int(aa) for aa in b]\n    if sum(w) == x:\n        print('NO')\n        continue\n    if sum(w) < x:\n        yes(w)\n        continue\n    w = sorted(w)\n    w = [ww for ww in reversed(w)]\n    total = 0\n    for (i, num) in enumerate(w):\n        total += num\n        if total == x:\n            temp = w[i]\n            w[i] = w[i + 1]\n            w[i + 1] = temp\n            yes(w)\n            break\n        if total > x:\n            yes(w)\n            flag = False\n            break", "for _ in range(int(input())):\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    if sum(a) == x:\n        print('NO')\n        continue\n    a.sort(reverse=True)\n    res = 0\n    for i in range(n):\n        res += a[i]\n        if res == x:\n            t = a[i]\n            a[i] = a[i + 1]\n            a[i + 1] = t\n    a = list(map(str, a))\n    print('YES')\n    print(' '.join(a))", "import math\nimport sys\nimport itertools\nimport fractions\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nfor t in [wtf[i:i + 2] for i in range(1, len(wtf), 2)]:\n    (n, x) = map(int, t[0].split())\n    W = list(map(int, t[1].split()))\n    tw = 0\n    for i in range(n):\n        tw += W[i]\n        if tw == x and i + 1 < n:\n            tw -= W[i]\n            (W[i], W[i + 1]) = (W[i + 1], W[i])\n            tw += W[i]\n    print('NO' if tw == x else f\"YES\\n{' '.join(map(str, W))}\")", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if sum(l) == x or min(l) == max(l) == x:\n        print('NO')\n    elif sum(l) < x:\n        print('YES')\n        print(' '.join(map(str, l)))\n    else:\n        r = []\n        total = 0\n        while l:\n            num = l[-1] + total\n            if num == x:\n                total += l[0]\n                r.append(l[0])\n                l.remove(l[0])\n            else:\n                total += l[-1]\n                r.append(l.pop())\n        print('YES')\n        print(' '.join(map(str, r)))", "from math import gcd\nfrom collections import defaultdict as dd\nMOD = 10 ** 9 + 7\n\ndef R(type=int):\n    line = input().rstrip()\n    try:\n        return type(line)\n    except:\n        pass\n    return line\nRL = lambda type=int: list(map(type, input().rstrip().split()))\nRLL = lambda N, type=int: [RL(type) for _ in range(N)]\nRLS = lambda N, type=int: [R(type) for _ in range(N)]\n\ndef solve():\n    (N, X) = RL()\n    W = sorted(RL())\n    if sum(W) == X:\n        print('NO')\n        return\n    total = 0\n    i = 0\n    res = []\n    while i < N and total + W[i] < X:\n        total += W[i]\n        res += [W[i]]\n        i += 1\n    j = N - 1\n    while j >= i:\n        res += [W[j]]\n        j -= 1\n    print('YES')\n    print(' '.join(map(str, res)))\nT = R()\nfor t in range(T):\n    solve()", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort(reverse=True)\n    curr = 0\n    if sum(arr) == K:\n        print('NO')\n    else:\n        for i in range(N - 1):\n            curr += arr[i]\n            if curr == K:\n                (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n                break\n        print('YES')\n        print(' '.join([str(i) for i in arr]))", "for tc in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = list(map(int, input().split()))\n    if sum(w) == k:\n        print('NO')\n        continue\n    s = 0\n    for i in range(n):\n        s += w[i]\n        if s == k:\n            (w[i], w[i + 1]) = (w[i + 1], w[i])\n            break\n    print('YES')\n    print(' '.join((str(i) for i in w)))", "import random\nimport math\nfrom collections import defaultdict\nimport itertools\nfrom sys import stdin, stdout\n\ndef main():\n    z = ''\n    for _ in range(int(stdin.readline())):\n        (n, x) = list(map(int, stdin.readline().split()))\n        w = list(map(int, stdin.readline().split()))\n        w.sort(reverse=True)\n        a = list(itertools.accumulate(w))\n        s = ''\n        if x not in a:\n            print('YES')\n            for j in range(n):\n                s += str(w[j]) + ' '\n            print(s)\n        else:\n            for k in range(n):\n                if a[k] == x:\n                    l = k + 1\n                    while l < n:\n                        if w[k] != w[l]:\n                            (w[k], w[l]) = (w[l], w[k])\n                        l += 1\n            a = list(itertools.accumulate(w))\n            s = ''\n            if x not in a:\n                print('YES')\n                for j in range(n):\n                    s += str(w[j]) + ' '\n                print(s)\n            else:\n                print('NO')\nmain()", "list1 = []\nfor i in range(int(input())):\n    (n, x) = map(lambda j: int(j), input().split())\n    w = list(sorted(map(lambda j: int(j), input().split()), reverse=True))\n    if sum(w) == x:\n        list1.append('NO')\n    elif sum(w) < x:\n        list1.append('YES')\n        list1.append(' '.join(list(map(lambda y: str(y), w))))\n    else:\n        y = 0\n        for j in range(n):\n            y += w[j]\n            if y > x:\n                list1.append('YES')\n                list1.append(' '.join(list(map(lambda y: str(y), w))))\n                break\n            elif y == x:\n                y = w[j + 1]\n                w[j + 1] = w[j]\n                w[j] = y\n                list1.append('YES')\n                list1.append(' '.join(list(map(lambda y: str(y), w))))\n                break\nprint(*list1, sep='\\n')", "def main():\n    for _ in range(int(input())):\n        (n, x) = map(int, input().split())\n        arr = list(map(int, input().split()))\n        print(get(arr, x))\n\ndef get(arr, x):\n    k = 0\n    arr = list(sorted(arr, reverse=True))\n    for i in range(len(arr)):\n        if k + arr[i] == x:\n            found = True\n            for j in range(i, len(arr)):\n                if k + arr[j] != x:\n                    b = arr[j]\n                    y = arr[i]\n                    arr[i] = b\n                    arr[j] = y\n                    found = False\n            if found:\n                return 'NO'\n            k += arr[i]\n        else:\n            k += arr[i]\n    return 'YES' + '\\n' + ' '.join(map(str, arr))\nmain()", "def solveq1():\n    (n, x) = [int(x) for x in input().split(' ')]\n    gold = sorted([int(x) for x in input().split(' ')])\n    total = 0\n    for (i, g) in enumerate(gold):\n        total += g\n        if total == x:\n            if i == len(gold) - 1:\n                print('NO')\n            else:\n                print('YES')\n                ans = gold[:i] + [gold[i + 1]] + [gold[i]] + gold[i + 2:]\n                print(' '.join([str(x) for x in ans]))\n            return\n    print('YES')\n    print(' '.join([str(x) for x in gold]))\nfor tc in range(int(input())):\n    solveq1()", "for _ in range(int(input())):\n    (n, x) = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    if sum(w) == x:\n        print('NO')\n    else:\n        prefix = 0\n        same = True\n        w.sort()\n        for i in range(len(w) - 1):\n            prefix += w[i]\n            if prefix == x:\n                (w[i], w[i + 1]) = (w[i + 1], w[i])\n                break\n        print('YES')\n        print(' '.join(list(map(str, w))))", "def explodes(weights, avoid_weight):\n    if len(weights) == 1 and weights[0] == avoid_weight:\n        return 'NO'\n    total = 0\n    for i in range(len(weights) - 1):\n        if total + weights[i] == avoid_weight:\n            (weights[i], weights[i + 1]) = (weights[i + 1], weights[i])\n        total += weights[i]\n    if total + weights[-1] == avoid_weight:\n        return 'NO'\n    print('YES')\n    return ' '.join([str(i) for i in weights])\nfor _ in range(int(input())):\n    (gold_pieces, avoid_weight) = map(int, input().split())\n    weights = list(map(int, input().split()))\n    print(explodes(weights, avoid_weight))", "def is_perm_possible(aa, x):\n    if all((a == aa[0] for a in aa)) and x % aa[0] == 0 and (x / aa[0] <= len(aa)):\n        return (False, None)\n    if sum(aa) == x:\n        return (False, None)\n    s = 0\n    a2 = sorted(aa)\n    n = len(a2)\n    for i in range(n):\n        s += a2[i]\n        if s > x:\n            return (True, a2)\n        if s == x:\n            if a2[-1] == a2[i]:\n                assert a2[0] != a2[i]\n                result = [a2[-1]] + a2[1:-1] + [a2[0]]\n                return (True, result)\n            else:\n                result = a2[0:i] + [a2[-1]] + a2[i:-1]\n                return (True, result)\n    return (True, a2)\nn_samples = int(input())\nfor t in range(n_samples):\n    (n, x) = map(int, input().split(' '))\n    aa = list(map(int, input().split(' ')))\n    assert len(aa) == n\n    (ok, perm) = is_perm_possible(aa, x)\n    if ok:\n        print('YES')\n        print(' '.join(map(str, perm)))\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    w = sorted(list(map(int, input().split())))\n    sm = 0\n    for i in range(n - 1):\n        if sm + w[i] == x:\n            (w[i], w[i + 1]) = (w[i + 1], w[i])\n        sm += w[i]\n    if sm + w[-1] == x:\n        print('NO')\n    else:\n        print('YES')\n        print(' '.join(map(str, w)))", "for t in range(int(input())):\n    (n, x) = map(int, input().split())\n    n_lst = list(map(int, input().split()))\n    add = 0\n    if sum(n_lst) == x:\n        print('NO')\n    else:\n        print('YES')\n        for i in range(len(n_lst)):\n            add += n_lst[i]\n            if add == x:\n                (n_lst[i], n_lst[i + 1]) = (n_lst[i + 1], n_lst[i])\n                break\n        print(' '.join(map(str, n_lst)))", "t = int(input())\narr = []\nans_arr = []\nfor i in range(t):\n    first_string = list(map(int, input().split()))\n    second_string = list(map(int, input().split()))\n    both_strings = first_string + second_string\n    arr.append(both_strings)\nfor i in arr:\n    forbidden = i[1]\n    weights = i[2:]\n    weights_sum = 0\n    answer = 'YES'\n    if sum(weights) == forbidden:\n        answer = 'NO'\n        ans_arr.append(answer)\n    else:\n        for j in range(len(weights) - 1):\n            weights_sum += weights[j]\n            if weights_sum == forbidden:\n                n = weights[j]\n                weights[j] = weights[j + 1]\n                weights[j + 1] = n\n        ans_arr.append(answer)\n        ans_arr.append(weights)\nfor i in ans_arr:\n    if type(i) != list:\n        i = i\n    else:\n        i = list(map(str, i))\n        i = ' '.join(i)\n    print(i)", "for enumeration in range(int(input())):\n    (n, x) = [int(x) for x in input().split()]\n    array = list(sorted([int(x) for x in input().split()]))\n    temp = 0\n    for i in range(n):\n        temp += array[i]\n        if temp == x and i < n - 1:\n            (array[i], array[i + 1]) = (array[i + 1], array[i])\n    if temp == x:\n        print('NO')\n    else:\n        print('YES')\n        print(' '.join([str(x) for x in array]))", "def solve():\n    (n, x) = [int(x) for x in input().strip().split()]\n    weights = [int(x) for x in input().strip().split()]\n    all_weights = sum(weights)\n    if all_weights == x:\n        return (False, [])\n    (swap_index, partial_sum) = (-1, 0)\n    for (index, w) in enumerate(weights):\n        if partial_sum + w == x:\n            swap_index = index\n            break\n        partial_sum += w\n    if swap_index == -1:\n        return (True, weights)\n    (sw1, sw2) = (swap_index, swap_index + 1)\n    if sw2 == n:\n        (sw1, sw2) = (swap_index - 1, swap_index)\n    tmp = weights[sw1]\n    weights[sw1] = weights[sw2]\n    weights[sw2] = tmp\n    return (True, weights)\nfor _ in range(int(input())):\n    (possible, items) = solve()\n    if possible:\n        print('YES')\n        print(' '.join((str(w) for w in items)))\n    else:\n        print('NO')", "t = int(input())\n\ndef solver(arr, x):\n    rs = 0\n    loc = 101\n    for i in range(len(arr)):\n        rs = rs + arr[i]\n        if rs == x:\n            loc = i\n    if loc < len(arr) - 1:\n        temp = arr[loc]\n        arr[loc] = arr[loc + 1]\n        arr[loc + 1] = temp\n    if loc == len(arr) - 1:\n        return ('No', [])\n    else:\n        return ('Yes', arr)\nres = []\nfor i in range(t):\n    [n, x] = [int(item) for item in input().split()]\n    arr = [int(item) for item in input().split()]\n    res.append(solver(arr, x))\nfor arr in res:\n    if arr[0] == 'No':\n        print('NO')\n    else:\n        arr2 = [str(item) for item in arr[1]]\n        string = ' '.join(arr2)\n        print('YES')\n        print(string)", "t = int(input())\nfor _ in range(t):\n    (n, x) = [int(x) for x in input().split()]\n    ws = [int(x) for x in input().split()]\n    s = 0\n    bad = False\n    for i in range(n):\n        s += ws[i]\n        if s == x:\n            if i < n - 1:\n                (ws[i], ws[i + 1]) = (ws[i + 1], ws[i])\n            else:\n                bad = True\n            break\n    if bad:\n        print('NO')\n    else:\n        print('YES')\n        print(' '.join(map(str, ws)))", "from collections import deque\nfrom sys import stdin\n\ndef read_int():\n    return int(stdin.readline())\n\ndef read_ints():\n    return map(int, stdin.readline().split(' '))\nt = read_int()\nfor case_num in range(t):\n    (n, x) = read_ints()\n    w = list(read_ints())\n    w.sort(reverse=True)\n    dq = deque(w)\n    ans = []\n    acc = 0\n    while dq:\n        if acc + dq[0] != x:\n            acc += dq[0]\n            ans.append(dq.popleft())\n        elif acc + dq[-1] != x:\n            acc += dq[-1]\n            ans.append(dq.pop())\n        else:\n            print('NO')\n            break\n    if len(ans) == n:\n        print('YES')\n        print(' '.join(map(str, ans)))", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    w = sorted(map(int, input().split()))\n    total = sum(w)\n    if total == x:\n        print('NO')\n        continue\n    print('YES')\n    total = 0\n    z = None\n    a = []\n    for val in w:\n        total += val\n        if total == x:\n            z = val\n        else:\n            a.append(val)\n    if z is not None:\n        a.append(z)\n    print(' '.join(map(str, a)))", "for j in range(int(input())):\n    (n, w) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    if sum(l) == w:\n        print('NO')\n    else:\n        k = 0\n        for i in range(n):\n            k += l[i]\n            if k == w:\n                (l[i], l[i + 1]) = (l[i + 1], l[i])\n        print('YES')\n        print(' '.join(map(str, l)))", "def solve():\n    (n, k) = (int(x) for x in input().split())\n    arr = [int(x) for x in input().split()]\n    if sum(arr) == k:\n        print('NO')\n        return\n    arr.sort()\n    s = 0\n    found = -1\n    for (ind, v) in enumerate(arr):\n        s += v\n        if s == k:\n            found = ind\n            break\n    if found != -1:\n        (arr[ind], arr[ind + 1]) = (arr[ind + 1], arr[ind])\n    print('YES')\n    print(' '.join(map(lambda x: str(x), arr)))\nkk = int(input())\nfor _ in range(kk):\n    solve()", "def solve(n, x, arr):\n    if sum(arr) == x:\n        print('NO')\n    else:\n        arr = sorted(arr, reverse=True)\n        s = sum(arr)\n        i = 0\n        curr = 0\n        res = []\n        while i < len(arr):\n            if curr > x:\n                i = len(arr)\n                continue\n            if curr + arr[i] == x:\n                i += 1\n                continue\n            curr += arr[i]\n            res.append(arr.pop(i))\n        if curr > x:\n            res += arr\n            curr += sum(arr)\n            arr = []\n        if arr:\n            if curr + sum(arr) == s and curr != x:\n                res += arr\n                curr += sum(arr)\n                arr = []\n        if curr == s:\n            print('YES')\n            print(' '.join(map(str, res)))\n        else:\n            print('NO')\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    solve(n, x, list(map(int, input().split())))", "t = int(input())\nfor _ in range(t):\n    i = [int(k) for k in input().strip().split()]\n    (n, x) = (i[0], i[1])\n    w = [int(k) for k in input().strip().split()]\n    w.sort()\n    flag = True\n    for (i, val) in enumerate(w):\n        x -= val\n        if x == 0:\n            try:\n                (w[i], w[i + 1]) = (w[i + 1], w[i])\n            except IndexError:\n                flag = False\n            finally:\n                break\n    if flag:\n        print('YES')\n        print(' '.join((str(i) for i in w)))\n    else:\n        print('NO')", "def function(array, x):\n    array.sort()\n    solt = []\n    new_array = []\n    sums = 0\n    flag = False\n    flag2 = False\n    count = 0\n    while sums != x and count < len(array):\n        sums += array[count]\n        if sums > x:\n            flag = True\n        if sums == x:\n            flag2 = True\n            sums -= array[count]\n            new_array.append(array[count])\n        else:\n            solt.append(array[count])\n        count += 1\n    if not (flag or not flag2):\n        return 'NO'\n    print('YES')\n    solt += new_array\n    return ' '.join(map(str, solt))\nt = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    array = list(map(int, input().split()))\n    print(function(array, x))", "cases = int(input())\n\ndef solve():\n    (n, x) = list(map(int, input().strip().split()))[:2]\n    arr = list(map(int, input().strip().split()))[:n]\n    summ = sum(arr)\n    if summ == x:\n        print('NO')\n        return\n    hashs = {}\n    newArr = []\n    total_weight = 0\n    while len(hashs) < len(arr):\n        for i in range(len(arr)):\n            if i in hashs:\n                continue\n            elif arr[i] + total_weight != x:\n                total_weight += arr[i]\n                hashs[i] = True\n                newArr.append(arr[i])\n    print('YES')\n    print(' '.join(list(map(str, newArr))))\nfor case in range(cases):\n    solve()", "from collections import deque\nt = int(input())\nfor _ in range(t):\n    (n, x) = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    w.sort(reverse=True)\n    dq = deque(w)\n    ans = []\n    acc = 0\n    while dq:\n        if acc + dq[0] != x:\n            acc += dq[0]\n            ans.append(dq.popleft())\n        elif acc + dq[-1] != x:\n            acc += dq[-1]\n            ans.append(dq.pop())\n        else:\n            print('NO')\n            break\n    if len(ans) == n:\n        print('YES')\n        print(' '.join(map(str, ans)))", "t = int(input())\nfor j in range(t):\n    (n, x) = map(int, input().split(' '))\n    w = list(map(int, input().split(' ')))\n    w.sort()\n    s = 0\n    res = []\n    i = 0\n    while i < n:\n        if s + w[i] != x:\n            s += w[i]\n            res.append(w[i])\n            i += 1\n        elif i + 1 < n:\n            res.append(w[i + 1])\n            res.append(w[i])\n            i += 2\n        else:\n            break\n    if i < n:\n        print('NO')\n    else:\n        print('YES')\n        print(' '.join((str(a) for a in res)))", "def findans(a, arr):\n    n = a[0]\n    x = a[1]\n    arr_final = []\n    check_sum = 0\n    arr.sort()\n    num = -1\n    for i in arr:\n        if check_sum + i < x:\n            arr_final.append(str(i))\n            check_sum += i\n        elif check_sum + i == x:\n            num = arr.index(i)\n        else:\n            arr_final.append(str(i))\n            check_sum += i\n    if num != -1:\n        arr_final.append(str(arr[num]))\n        check_sum += arr[num]\n    if check_sum == x:\n        return ('NO', arr_final)\n    else:\n        return ('YES', arr_final)\nt = int(input())\nfor i in range(t):\n    a = list(map(int, input().strip().split()))[:2]\n    arr = list(map(int, input().strip().split()))[:a[0]]\n    (result, arr1) = findans(a, arr)\n    print(result)\n    if result == 'YES':\n        print(' '.join(arr1))", "t = int(input())\nwhile t > 0:\n    (n, x) = map(int, input().split())\n    info = list(map(int, input().split()))\n    if sum(info) == x:\n        print('NO')\n        t -= 1\n        continue\n    for i in range(n):\n        if x == info[i]:\n            (info[i], info[i + 1]) = (info[i + 1], info[i])\n        x -= info[i]\n    print('YES')\n    print(' '.join(map(str, info)))\n    t -= 1", "cases = int(input())\nans = ''\nfor y in range(cases):\n    (n, x) = map(int, input().split(' '))\n    w = list(map(int, input().split(' ')))\n    if sum(w) == x:\n        print('NO')\n    else:\n        arr = []\n        check = x\n        i = 0\n        while i < n and w[i] != check:\n            arr.append(w[i])\n            check -= w[i]\n            i += 1\n        if i < n:\n            arr.append(w[i + 1])\n            arr.append(w[i])\n            arr += w[i + 2:]\n        print('YES')\n        print(' '.join(map(str, arr)))", "z = [[]]\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    b = []\n    c = []\n    s = 0\n    for i in a:\n        s += i\n        if s == x:\n            s -= i\n            b.append(i)\n            continue\n        c.append(i)\n    s += sum(b)\n    for i in b:\n        c.append(i)\n    if s != x:\n        z.append('YES')\n        d = ''\n        for j in c:\n            d += str(j) + ' '\n        z.append(d)\n    else:\n        z.append('NO')\nfor i in range(1, len(z)):\n    print(z[i])", "def swapPositions(list, pos1, pos2):\n    get = (list[pos1], list[pos2])\n    (list[pos2], list[pos1]) = get\n    return list\n\ndef solve():\n    switch = False\n    (n, x) = map(int, input().split())\n    lista = list(map(int, input().split()))\n    soma = 0\n    index = 0\n    for item in lista:\n        soma += item\n        if soma == x:\n            switch = True\n            break\n        index += 1\n    if switch:\n        if len(lista) > index + 1:\n            print('YES')\n            print(*swapPositions(lista, index, index + 1), sep=' ')\n        else:\n            print('NO')\n    else:\n        print('YES')\n        print(*lista, sep=' ')\nn = int(input())\nfor i in range(n):\n    solve()", "t1 = int(input())\nfor _ in range(t1):\n    (n, x) = map(int, input().split())\n    p = 0\n    o = 0\n    a = list(map(int, input().split()))\n    t = ''\n    if sum(a) != x:\n        for i in a:\n            if o == 1:\n                t += str(i) + ' ' + str(b) + ' '\n                p += i + b\n                o = 0\n            elif p + i != x:\n                p += i\n                t += str(i) + ' '\n            else:\n                b = i\n                o = 1\n        print('YES')\n        print(t[:-1])\n    else:\n        print('NO')", "T = int(input())\nfor t in range(T):\n    (n, x) = tuple([int(x) for x in input().split()])\n    w = [int(x) for x in input().split()]\n    w = sorted(w)\n    sum_w = sum(w)\n    if x == sum_w:\n        print('NO')\n    else:\n        result_w = []\n        cur_sum = 0\n        have_added = set()\n        for (i, wi) in enumerate(w):\n            if wi in have_added:\n                continue\n            if cur_sum + wi != x:\n                result_w.append(wi)\n                cur_sum += wi\n                have_added.add(wi)\n            else:\n                result_w.append(w[i + 1])\n                result_w.append(wi)\n                cur_sum += wi + w[i + 1]\n                have_added.add(wi)\n                have_added.add(w[i + 1])\n        print('YES')\n        print(' '.join([str(x) for x in result_w]))", "from sys import stdin, stdout\nfor _ in range(int(stdin.readline())):\n    (n, x) = map(int, stdin.readline().split())\n    arr = list(map(int, stdin.readline().split()))\n    i = 0\n    s = 0\n    ans = ''\n    a = 0\n    while i < n:\n        s += arr[i]\n        if s == x:\n            if i + 1 < n:\n                ans += str(arr[i + 1]) + ' ' + str(arr[i]) + ' '\n                s += arr[i + 1]\n                i += 2\n            else:\n                a = 1\n        else:\n            ans += str(arr[i]) + ' '\n            i += 1\n    if a == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    golds = sorted(list(map(int, input().split())))\n    if sum(golds) == x:\n        print('NO')\n        continue\n    lst = []\n    s = 0\n    while n != 0:\n        if s + golds[0] != x:\n            lst.append(golds[0])\n            s += golds[0]\n            golds.pop(0)\n        else:\n            lst.append(golds[-1])\n            s += golds[-1]\n            golds.pop(-1)\n        n -= 1\n    print('YES')\n    print(' '.join(map(str, lst)))", "def inputi():\n    return int(input())\n\ndef inputli():\n    return list(map(int, input().split(' ')))\n\ndef inputls():\n    return list(map(str, input().split(' ')))\n\ndef print_list(lista):\n    s = ''\n    for i in lista[:-1]:\n        s += str(i) + ' '\n    s += str(lista[-1])\n    return s\n\ndef solve():\n    [n, k] = inputli()\n    numbers = inputli()\n    band = 'NO'\n    ans = []\n    maxi = max(numbers)\n    suma = sum(numbers)\n    if k == suma:\n        return (band, ans)\n    id = numbers.index(maxi)\n    if k < maxi:\n        ans = [maxi] + [e for (i, e) in enumerate(numbers) if i != id]\n        return ('YES', ans)\n    numbers = sorted(numbers)\n    suma = 0\n    for (idx, a) in enumerate(numbers):\n        suma += a\n        if suma == k and idx != n - 1:\n            ans += numbers[idx + 1:] + [a]\n            return ('YES', ans)\n        ans.append(a)\n    return ('YES', ans)\nt = inputi()\nfor i in range(t):\n    (band, ans) = solve()\n    if band == 'NO':\n        print(band)\n    else:\n        print(band)\n        print(print_list(ans), end='')\n        print('') if i != t - 1 else None", "def main():\n    t = int(input())\n    for _ in range(1, t + 1):\n        (n, x) = map(int, input().split())\n        ws = list(map(int, input().split()))\n        res = codeforces(ws, x)\n        if res:\n            print('YES')\n            print(' '.join(map(str, res)))\n        else:\n            print('NO')\n\ndef codeforces(ws, x):\n    sum = 0\n    res = []\n    while ws:\n        if sum + ws[0] == x:\n            if len(ws) > 1:\n                sum += ws[1]\n                res.append(ws[1])\n                ws.pop(1)\n            else:\n                return []\n        else:\n            sum += ws[0]\n            res.append(ws[0])\n            ws.pop(0)\n    return res\nmain()", "t = int(input())\n\ndef solution(n, x, w):\n    w.sort()\n    total = sum(w)\n    if total < x:\n        return w\n    elif total == x:\n        return None\n    res = []\n    temp = 0\n    while temp < x and len(w) > 0:\n        if temp + w[-1] == x:\n            res.append(w[0])\n            temp += w[0]\n            res.append(w[-1])\n            temp += w[-1]\n            w = w[1:-1]\n        else:\n            res.append(w[-1])\n            temp += w[-1]\n            w = w[:-1]\n    res += w\n    return res\nfor _ in range(t):\n    (n, x) = [int(i) for i in input().split(' ')]\n    w = [int(i) for i in input().split(' ')]\n    res = solution(n, x, w)\n    if res == None:\n        print('NO')\n    else:\n        print('YES')\n        print(' '.join([str(i) for i in res]))", "t = int(input())\nwhile t:\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    soln = []\n    sums = 0\n    if sum(arr) == x:\n        print('NO')\n    else:\n        for i in range(n):\n            if sums + arr[i] == x:\n                sums += arr[i + 1]\n                soln.append(arr[i + 1])\n                ele = arr[i + 1]\n                arr[i + 1] = arr[i]\n                arr[i] = ele\n            else:\n                sums += arr[i]\n                soln.append(arr[i])\n        else:\n            val = ' '.join(map(str, arr))\n            print('YES')\n            print(val)\n    t -= 1", "test_cases = int(input())\nfor test_case in range(1, test_cases + 1):\n    (number_of_pieces, unnecessary_weight) = list(map(int, input().split()))\n    pieces = sorted(list(map(int, input().split())), reverse=True)\n    if sum(pieces) == unnecessary_weight:\n        print('NO')\n    else:\n        index = 0\n        result = []\n        current_sum = 0\n        whole_sum = sum(pieces)\n        while index < len(pieces):\n            if current_sum > unnecessary_weight:\n                break\n            if current_sum + pieces[index] == unnecessary_weight:\n                index += 1\n                continue\n            current_sum += pieces[index]\n            result.append(pieces.pop(index))\n        if current_sum > unnecessary_weight:\n            result += pieces\n            current_sum += sum(pieces)\n            pieces = []\n        if pieces:\n            if current_sum + sum(pieces) == whole_sum and current_sum != unnecessary_weight:\n                result += pieces\n                current_sum += sum(pieces)\n                pieces = []\n        if current_sum == whole_sum:\n            print('YES')\n            print(' '.join(map(str, result)))\n        else:\n            print('NO')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = []\n    count = 0\n    s = sum(l)\n    if s == x:\n        print('NO')\n    else:\n        print('YES')\n        i = 0\n        while i < n:\n            if count + l[i] != x:\n                ans.append(str(l[i]))\n                count += l[i]\n                i += 1\n            else:\n                ans.append(str(l[i + 1]))\n                ans.append(str(l[i]))\n                i += 2\n        print(' '.join(ans))", "for i in range(int(input())):\n    (n, x) = [int(a) for a in input().split()]\n    sum_lst = 0\n    stored_elem = -1\n    res = []\n    flag = True\n    for (j, elem) in enumerate(input().split()):\n        elem = int(elem)\n        if stored_elem != -1:\n            res.append(elem)\n            sum_lst += elem\n            res.append(stored_elem)\n            stored_elem = -1\n        else:\n            sum_lst += elem\n            if sum_lst == x:\n                if j == n - 1:\n                    print('NO')\n                    flag = False\n                else:\n                    stored_elem = elem\n            else:\n                res.append(elem)\n    if flag:\n        print('YES')\n        print(' '.join([str(elem) for elem in res]))", "t_case = int(input())\nfor i in range(t_case):\n    lst1 = input().split()\n    (n, x) = (int(lst1[0]), int(lst1[1]))\n    lst2 = [int(num) for num in input().split()]\n    lst2.sort(reverse=True)\n    if lst2[0] > x:\n        print('YES')\n        print(' '.join((str(num) for num in lst2)))\n        continue\n    elif sum(lst2) < x:\n        print('YES')\n        print(' '.join((str(num) for num in lst2)))\n        continue\n    else:\n        tot = 0\n        lst4 = []\n        lst5 = []\n        for i in lst2:\n            if tot + i != x:\n                tot += i\n                lst4.append(i)\n            else:\n                lst5.append(i)\n        if tot > x:\n            print('YES')\n            print(' '.join((str(i) for i in lst4)), ' '.join((str(i) for i in lst5)))\n        elif tot < x:\n            lst6 = []\n            for i in lst5:\n                if tot + i != x:\n                    tot += i\n                    lst4.append(i)\n                else:\n                    lst6.append(i)\n            if tot > x:\n                print('YES')\n                print(' '.join((str(i) for i in lst4)), ' '.join((str(i) for i in lst6)))\n            else:\n                print('NO')\n        else:\n            print('NO')", "cases = int(input())\nfor i in range(0, cases):\n    (n, x) = [int(i) for i in input().split()]\n    numbers = [int(i) for i in input().split()]\n    running = 0\n    found = False\n    for i in range(0, len(numbers)):\n        running += numbers[i]\n    if found:\n        continue\n    if running == x:\n        print('NO')\n    else:\n        print('YES')\n        running = 0\n        for i in range(0, len(numbers)):\n            if running + numbers[i] == x:\n                temp = numbers[i + 1]\n                numbers[i + 1] = numbers[i]\n                numbers[i] = temp\n            running += numbers[i]\n        print(' '.join((str(p) for p in numbers)))", "t = int(input())\nfor i in range(t):\n    (n, x) = [int(k) for k in input().split()]\n    w = [int(k) for k in input().split()]\n    delta = sum(w)\n    if delta == x:\n        print('NO')\n    else:\n        w.sort()\n        res = 0\n        c = []\n        epsilon = 0\n        for j in w:\n            if res + j != x:\n                res += j\n                c.append(j)\n            else:\n                c.append(w[-1])\n                res += w[-1]\n                epsilon = j\n        if sum(c) > delta:\n            c[-1] = epsilon\n        print('YES')\n        print(' '.join([str(k) for k in c]))", "for j in range(int(input())):\n    (n, x) = map(int, input().split())\n    z = sorted(list(map(int, input().split())))\n    c = 0\n    if sum(z) == x:\n        print('NO')\n    else:\n        for i in range(n):\n            c += z[i]\n            if c == x:\n                (z[i], z[n - 1]) = (z[n - 1], z[i])\n        print('YES')\n        print(*z)", "t = int(input())\nfor _ in range(t):\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    impossible = False\n    new = []\n    total = 0\n    while a:\n        selected = a[-1]\n        if total + selected != x:\n            total += selected\n            new.append(selected)\n            del a[-1]\n        else:\n            selected = a[0]\n            if total + selected != x:\n                total += selected\n                new.append(selected)\n                del a[0]\n            else:\n                break\n    if len(new) == n:\n        print('YES')\n        print(' '.join(map(str, new)))\n    else:\n        print('NO')", "from itertools import accumulate\nt = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    w = list(map(int, input().split()))\n    prefix = list(accumulate(w))\n    if prefix[-1] == x:\n        print('NO')\n    else:\n        print('YES')\n        try:\n            i = prefix.index(x)\n            (w[i + 1], w[i]) = (w[i], w[i + 1])\n        except:\n            pass\n        print(*w)", "import random\nt = int(input())\nfor tt in range(t):\n    (n, x) = map(int, input().split())\n    w = list(map(int, input().split()))\n    sm = sum(w)\n    if sm < x:\n        print('YES')\n        print(' '.join(map(str, w)))\n        continue\n    if sm == x:\n        print('NO')\n        continue\n    if sm > x:\n        if all([w[i] == w[0] for i in range(n)]):\n            if x % w[0] == 0:\n                print('NO')\n                continue\n            else:\n                print('YES')\n                print(' '.join(map(str, w)))\n                continue\n        else:\n            print('YES')\n            sm = x\n            while sm == x:\n                sm = 0\n                random.shuffle(w)\n                for e in w:\n                    sm += e\n                    if sm == x:\n                        break\n                    elif sm > x:\n                        print(' '.join(map(str, w)))\n                        break\npass", "tests = int(input())\nfor t in range(0, tests):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if x == sum(a):\n        print('NO')\n    else:\n        print('YES')\n        output = ''\n        count = 0\n        for i in range(0, len(a)):\n            if x == count + a[i]:\n                temp = a[i]\n                a[i] = a[i + 1]\n                a[i + 1] = temp\n            count += a[i]\n        output = ''\n        for i in a:\n            output += str(i) + ' '\n        print(output[:-1])", "t = int(input())\nm = []\nfor i in range(t):\n    (n, x) = input().split()\n    n = int(n)\n    x = int(x)\n    p = list(map(int, input().split()))\n    soma = sum(p)\n    if x == soma:\n        print('NO')\n    else:\n        print('YES')\n        for j in range(len(p)):\n            if x == p[j]:\n                temp = p[j]\n                p[j] = p[j + 1]\n                p[j + 1] = temp\n            print(p[j], end=' ')\n            x -= p[j]\n        print()", "def swapPositions(list, pos1, pos2):\n    get = (list[pos1], list[pos2])\n    (list[pos2], list[pos1]) = get\n    return list\n\ndef solve():\n    switch = False\n    (n, x) = map(int, input().split())\n    lista = list(map(int, input().split()))\n    soma = 0\n    index = 0\n    for item in lista:\n        soma += item\n        if soma == x:\n            switch = True\n            break\n        index += 1\n    if switch:\n        if len(lista) > index + 1:\n            print('YES')\n            print(*swapPositions(lista, index, index + 1), sep=' ')\n        else:\n            print('NO')\n    else:\n        print('YES')\n        print(*lista, sep=' ')\nn = int(input())\nfor i in range(n):\n    solve()", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    w = list(map(int, input().split()))\n    s = 0\n    flag = True\n    for (i, val) in enumerate(w):\n        s += val\n        if s == x:\n            if i == n - 1:\n                flag = False\n                break\n            else:\n                (w[i], w[i + 1]) = (w[i + 1], w[i])\n                break\n    if flag:\n        print('YES')\n        print(*w)\n    else:\n        print('NO')", "def uvecajj(j, n):\n    if j == n - 1:\n        return 0\n    else:\n        return j + 1\n\ndef moze(lista, n, x):\n    sua = 0\n    su = 0\n    while su < n:\n        sua += lista[su]\n        su += 1\n    if sua == x:\n        print('NO')\n    else:\n        j = 0\n        broj = 0\n        lista2 = ''\n        while len(lista) != 0:\n            if broj + lista[j] == x:\n                j = uvecajj(j, n)\n            else:\n                broj = broj + lista[j]\n                lista2 += str(lista[j])\n                lista2 += ' '\n                del lista[j]\n                n -= 1\n                if n == j:\n                    j = 0\n        print('YES')\n        print(lista2)\nt = int(input())\nwhile t > 0:\n    lis = input().split(' ')\n    n = int(lis[0])\n    x = int(lis[1])\n    lista = [int(i) for i in input().split(' ')]\n    moze(lista, n, x)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, x) = list(map(int, input().split()))\n    weight = list(map(int, input().split()))\n    prefix = []\n    res = []\n    s1 = 0\n    for i in range(n):\n        s2 = s1 + weight[i]\n        if s2 == x:\n            res.append(weight[i])\n        else:\n            prefix.append(weight[i])\n            s1 = s2\n    prefix += res\n    s1 = 0\n    found = True\n    for i in range(n):\n        s1 += prefix[i]\n        if s1 == x:\n            found = False\n            break\n    if not found:\n        print('NO')\n    else:\n        print('YES')\n        print(' '.join(map(str, prefix)))", "def fun(n, k, arr):\n    arr.sort()\n    if arr[len(arr) - 1] > k:\n        return arr[::-1]\n    else:\n        arr = arr[::-1]\n        n = len(arr)\n        flag = False\n        total = 0\n        for i in range(n - 1):\n            total += arr[i]\n            if total == k:\n                (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n                total += arr[i] - arr[i + 1]\n        if total + arr[n - 1] == k:\n            return -1\n        else:\n            return arr\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ans = fun(n, k, arr)\n    if ans != -1:\n        print('YES')\n        print(*ans)\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort(reverse=True)\n    if A[0] > k:\n        print('YES')\n        print(' '.join((str(i) for i in A)))\n    elif sum(A) == k:\n        print('NO')\n    else:\n        print('YES')\n        S = [A[0]]\n        Flag = False\n        if A[0] == k:\n            (A[0], A[1]) = (A[1], A[0])\n            Flag = True\n        a = len(A) - 1\n        i = 1\n        while i <= a and Flag == False:\n            S.append(S[i - 1] + A[i])\n            if S[i] == k:\n                (A[i], A[i + 1]) = (A[i + 1], A[i])\n                Flag = True\n                break\n            i += 1\n        print(' '.join((str(i) for i in A)))", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    w = []\n    w = input().split()\n    su = 0\n    p = 0\n    s = ''\n    for j in range(n):\n        w[j] = int(w[j])\n        su += w[j]\n    if (su == x or su < x) and p == 0:\n        if su == x:\n            print('NO')\n        if su < x:\n            print('YES')\n            for k in range(n):\n                s = s + str(w[k]) + ' '\n            print(s)\n    else:\n        print('YES')\n        uu = x\n        for k in range(n):\n            uu -= w[k]\n            if uu == 0:\n                (w[k + 1], w[k]) = (w[k], w[k + 1])\n                break\n            if uu < 0:\n                break\n        for k in range(n):\n            s = s + str(w[k]) + ' '\n        print(s)", "import sys\nimport heapq\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nt = inp()\nfor _ in range(t):\n    (n, x) = inlt()\n    numbers = inlt()\n    if sum(numbers) == x:\n        print('NO')\n    else:\n        total = 0\n        result = ''\n        i = 0\n        while i < len(numbers):\n            if numbers[i] + total == x:\n                result += ' ' + str(numbers[i + 1]) + ' ' + str(numbers[i])\n                total += numbers[i] + numbers[i + 1]\n                i += 2\n            else:\n                result += ' ' + str(numbers[i])\n                total += numbers[i]\n                i += 1\n        result = result[1:]\n        print('YES')\n        print(result)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = sum(l)\n    if s == x:\n        print('NO')\n    else:\n        print('YES')\n        s = 0\n        for i in range(n):\n            s += l[i]\n            if s == x:\n                (l[i], l[i + 1]) = (l[i + 1], l[i])\n                break\n        print(*l)", "tests = int(input())\nfor test in range(tests):\n    (n, x) = map(int, input().split())\n    w = [int(x) for x in input().split()]\n    if x == sum(w):\n        print('NO')\n    else:\n        print('YES')\n        s = 0\n        i = 0\n        while i < n - 1:\n            if x == s + w[i]:\n                (w[i], w[i + 1]) = (w[i + 1], w[i])\n            s += w[i]\n            i += 1\n        print(*w, sep=' ')", "from functools import reduce\nm = int(input())\nl = []\nfor _ in range(m):\n    (t, b) = map(int, input().split())\n    a = list(map(int, input().split()))\n    u = []\n    if sum(a) == b:\n        l.append('NO')\n    elif max(a) > b:\n        u.append(max(a))\n        a.remove(max(a))\n        u = u + a\n        l.append('YES')\n        l.append(reduce(lambda x, y: str(x) + ' ' + str(y), u))\n    else:\n        k = []\n        y = []\n        f = 0\n        for i in a:\n            if f + i != b:\n                y.append(i)\n                f += i\n            else:\n                k.append(i)\n        l.append('YES')\n        l.append(reduce(lambda x, y: str(x) + ' ' + str(y), y + k))\nfor i in l:\n    print(i)", "k = int(input())\nwhile k > 0:\n    l = list(map(int, input().split()))\n    n = l[0]\n    x = l[1]\n    suma_elemente = 0\n    adev = 1\n    li = list(map(int, input().split()))\n    for i in range(0, n):\n        suma_elemente = suma_elemente + li[i]\n        if suma_elemente == x and i < n - 1:\n            j = li[i]\n            li[i] = li[i + 1]\n            li[i + 1] = j\n            i = n + 1\n    if suma_elemente == x and i == n - 1:\n        adev = 0\n    if adev == 0:\n        print('NO')\n    else:\n        print('YES')\n        print(*li)\n    k = k - 1", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    z = list(map(int, input().split()))\n    a = 0\n    l = []\n    m = []\n    for i in z:\n        b = a + i\n        if b == y:\n            l.append(i)\n        else:\n            m.append(i)\n            a += i\n    c = m + l\n    if a == 0:\n        print('NO')\n    elif sum(z) == y:\n        print('NO')\n    else:\n        print('YES')\n        print(*c)", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if sum(arr) == k:\n        print('NO')\n    else:\n        print('YES')\n        scalew = 0\n        el = []\n        for i in range(n):\n            if scalew + arr[i] != k:\n                scalew += arr[i]\n            else:\n                el.append(arr[i])\n        for i in el:\n            arr.remove(i)\n        for i in el:\n            arr.append(i)\n        print(*arr)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    nx = input()\n    nx = nx.split(' ')\n    n = int(nx[0])\n    x = int(nx[1])\n    array = input()\n    array = array.split(' ')\n    for j in range(n):\n        array[j] = int(array[j])\n    soma = 0\n    for j in range(n):\n        soma += array[j]\n    if n == 1 and array[0] == x:\n        print('NO')\n    elif soma == x:\n        print('NO')\n    else:\n        novo_array = array.copy()\n        soma = 0\n        trocou = False\n        for k in range(n - 1):\n            soma += novo_array[k]\n            if soma == x:\n                aux = novo_array[k + 1]\n                novo_array[k + 1] = novo_array[k]\n                novo_array[k] = aux\n                trocou = True\n                break\n        ok = True\n        soma = 0\n        for k in range(n):\n            soma += novo_array[k]\n            if soma == x:\n                ok = False\n        if ok == True and trocou == True:\n            print('YES')\n            for l in range(n):\n                novo_array[l] = str(novo_array[l])\n            print(' '.join(novo_array))\n        elif ok == True and trocou == False:\n            print('YES')\n            for l in range(n):\n                array[l] = str(array[l])\n            print(' '.join(array))", "for ii in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    sum = 0\n    for i in range(n):\n        sum += l[i]\n        if sum != x:\n            None\n        elif i < n - 1:\n            sum = sum + l[i + 1]\n            (l[i], l[i + 1]) = (l[i + 1], l[i])\n            break\n    if sum == x:\n        print('NO')\n    else:\n        print('YES')\n        print(*l)", "for _ in range(int(input())):\n    (n, x) = [int(i) for i in input().split()]\n    w = [int(i) for i in input().split()]\n    if sum(w) == x:\n        print('NO')\n    else:\n        print('YES')\n        d = 0\n        for i in range(n):\n            d += w[i]\n            if d == x:\n                a = w[i:i + 2]\n                a.reverse()\n                w = w[:i] + a + w[i + 2:]\n                break\n        print(*w)", "for _ in range(int(input())):\n    (n, x) = list(map(int, input().split(' ')))\n    w = list(map(int, input().split(' ')))\n    if sum(w) == x:\n        print('NO')\n    else:\n        print('YES')\n        s = w[0]\n        for i in range(1, n):\n            if s == x:\n                (w[i - 1], w[i]) = (w[i], w[i - 1])\n                break\n            s += w[i]\n        print(*w)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = 0\n    if sum(a) == y:\n        print('NO')\n    else:\n        for j in range(x):\n            s = s + a[j]\n            if s == y:\n                (a[j], a[j + 1]) = (a[j + 1], a[j])\n        print('YES')\n        print(*a)"]