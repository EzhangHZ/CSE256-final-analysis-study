["import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    w = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    d = [0, 0, 0]\n    for i in range(n):\n        if d == [0, 1, 0]:\n            if s[i] - w[i] < 0:\n                print('NO')\n                break\n        elif d == [0, 0, -1]:\n            if s[i] - w[i] > 0:\n                print('NO')\n                break\n        elif d == [0, 1, -1]:\n            print('YES')\n            break\n        elif s[i] != w[i]:\n            print('NO')\n            break\n        d[w[i]] = w[i]\n    else:\n        print('YES')", "def jisuan(list2):\n    if 1 not in set1 and -1 not in set1:\n        for x in list2:\n            if x != 0:\n                return 'NO'\n    elif 1 not in set1:\n        a = list1.index(-1)\n        for x in list2[:a]:\n            if x != 0:\n                return 'NO'\n        if list2[a] != -1:\n            return 'NO'\n        for i in range(a, n):\n            if list2[i] > list1[i]:\n                return 'NO'\n    elif -1 not in set1:\n        a = list1.index(1)\n        for x in list2[:a]:\n            if x != 0:\n                return 'NO'\n        if list2[a] != 1:\n            return 'NO'\n        for i in range(a, n):\n            if list2[i] < list1[i]:\n                return 'NO'\n    else:\n        a = list1.index(1)\n        b = list1.index(-1)\n        for x in list2[:min(a, b)]:\n            if x != 0:\n                return 'NO'\n        if a > b:\n            if list2[b] != -1:\n                return 'NO'\n            for i in range(b, a + 1):\n                if list1[i] < list2[i]:\n                    return 'NO'\n        else:\n            if list2[a] != 1:\n                return 'NO'\n            for i in range(a, b + 1):\n                if list1[i] > list2[i]:\n                    return 'NO'\n    return 'YES'\nlist_ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    list2 = list(map(int, input().split()))\n    set1 = set(list1)\n    list_ans.append(jisuan(list2))\nfor item in list_ans:\n    print(item)", "list_ans = []\nfor _ in range(int(input())):\n    pos = 0\n    neg = 0\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    list2 = list(map(int, input().split()))\n    for i in range(n):\n        if list1[i] < list2[i] and pos == 0:\n            list_ans.append('NO')\n            break\n        if list1[i] > list2[i] and neg == 0:\n            list_ans.append('NO')\n            break\n        if list1[i] == 1:\n            pos = 1\n        if list1[i] == -1:\n            neg = 1\n        if pos == 1 and neg == 1:\n            list_ans.append('YES')\n            break\n    else:\n        list_ans.append('YES')\nfor item in list_ans:\n    print(item)", "def Solve():\n    for t in range(int(input())):\n        list_ = [0]\n        n = int(input())\n        a = input().split()\n        b = input().split()\n        e = True\n        index_ = n\n        if '1' in a and '-1' in a:\n            index_ = max(a.index('1'), a.index('-1'))\n        for (x, y) in zip(a[:index_ + 1], b[:index_ + 1]):\n            x = int(x)\n            y = int(y)\n            if x != y:\n                if x < y:\n                    if 1 not in list_:\n                        e = False\n                        break\n                elif x > y:\n                    if -1 not in list_:\n                        e = False\n                        break\n            list_.append(x)\n        if e:\n            print('YES')\n        else:\n            print('NO')\nSolve()", "import sys\n\ndef main():\n    res = ''\n    input = sys.stdin.readline\n    print = sys.stdout.write\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n        sub_res = 'NO\\n'\n        if a[0] == b[0]:\n            sub_res = 'YES\\n'\n            up = False\n            down = False\n            for i in range(n):\n                if b[i] > a[i]:\n                    if not up:\n                        sub_res = 'NO\\n'\n                        break\n                if b[i] < a[i]:\n                    if not down:\n                        sub_res = 'NO\\n'\n                        break\n                if a[i] == 1:\n                    up = True\n                elif a[i] == -1:\n                    down = True\n                if up and down:\n                    break\n        res += sub_res\n    print(res)\nmain()", "t = int(input())\nans = ''\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    m = 0\n    p = 0\n    k = 0\n    if a[0] != b[0]:\n        ans += 'NO \\n'\n    else:\n        for i in range(n - 1):\n            if a[i] == 1:\n                p = 1\n            elif a[i] == -1:\n                m = 1\n            if p == 0 and m == 0:\n                if a[i + 1] != b[i + 1]:\n                    k = 1\n                    break\n            elif p == 0 and m == 1:\n                if a[i + 1] < b[i + 1]:\n                    k = 1\n                    break\n            elif p == 1 and m == 0:\n                if a[i + 1] > b[i + 1]:\n                    k = 1\n                    break\n        if k == 1:\n            ans += 'NO \\n'\n        else:\n            ans += 'YES \\n'\nprint(ans)", "import sys\ninput = sys.stdin.readline\nprint = sys.stdout.write\nfor _ in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    stat = True\n    (stat1, stat2) = (0, 0)\n    for i in b:\n        if i == 1:\n            stat1 += 1\n        elif i == -1:\n            stat2 += 1\n    for i in range(a):\n        now = b.pop()\n        now2 = c.pop()\n        if now == 1:\n            stat1 -= 1\n        if now == -1:\n            stat2 -= 1\n        if now == now2:\n            continue\n        elif now > now2:\n            if stat2:\n                continue\n            else:\n                stat = False\n                break\n        elif now2 > now:\n            if stat1:\n                continue\n            else:\n                stat = False\n                break\n    print('YES\\n' if stat else 'NO\\n')", "import sys\nreadLine = lambda : sys.stdin.readline()\nreadInt = lambda : int(sys.stdin.readline())\nreadInts = lambda : [int(x) for x in sys.stdin.readline().split(' ')]\n\ndef main():\n    t = readInt()\n    solns = []\n    for _ in range(t):\n        n = readInt()\n        a = readInts()\n        b = readInts()\n        canIncrement = False\n        canDecrement = False\n        valid = False\n        for (i, x) in enumerate(b):\n            if canIncrement and canDecrement:\n                valid = True\n                break\n            if a[i] == x:\n                if a[i] < 0:\n                    canDecrement = True\n                elif a[i] > 0:\n                    canIncrement = True\n                continue\n            elif a[i] < x:\n                if not canIncrement:\n                    break\n                if a[i] < 0:\n                    canDecrement = True\n            else:\n                if not canDecrement:\n                    break\n                if a[i] > 0:\n                    canIncrement = True\n        else:\n            valid = True\n        s = 'YES' if valid else 'NO'\n        solns.append(s)\n    print('\\n'.join(solns))\nmain()", "import math\nfrom sys import setprofile, stdin\n\ndef ii():\n    return int(stdin.readline().strip())\n\ndef ff():\n    return float(stdin.readline().strip())\n\ndef ss():\n    return stdin.readline().strip()\n\ndef ari():\n    return list(map(int, stdin.readline().split()))\n\ndef arf():\n    return list(map(float, stdin.readline().split()))\n\ndef ars():\n    return list(map(str, stdin.readline().split()))\n\ndef matrix(n):\n    return [ari() for _ in range(n)]\n\ndef main():\n    n = ii()\n    a = ari()\n    b = ari()\n    if a[0] != b[0]:\n        print('NO')\n        return\n    s = set()\n    s.add(a[0])\n    for i in range(1, n):\n        if a[i] < b[i] and 1 not in s:\n            print('NO')\n            return\n        elif a[i] > b[i] and -1 not in s:\n            print('NO')\n            return\n        s.add(a[i])\n    print('YES')\nt = 1\nt = ii()\nfor _ in range(t):\n    main()", "def _input():\n    return map(int, input().split())\n\ndef f():\n    n = int(input())\n    (l1, l2) = (list(_input()), list(_input()))\n    if l1[0] != l2[0]:\n        print('NO')\n        return\n    else:\n        c = []\n        i = 1\n        while i < n:\n            if l1[i] < l2[i] and l1[i - 1] != 1:\n                print('NO')\n                return\n            if l1[i] > l2[i] and l1[i - 1] != -1:\n                print('NO')\n                return\n            if l1[i] == -1:\n                if l1[i - 1] == 1:\n                    print('YES')\n                    return\n            elif l1[i] == 1:\n                if l1[i - 1] == -1:\n                    print('YES')\n                    return\n            if l1[i] == 0:\n                l1[i] = l1[i - 1]\n            i += 1\n    print('YES')\nfor _ in range(int(input())):\n    f()", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    was = set()\n    for i in range(n):\n        if b[i] > a[i] and 1 not in was:\n            print('NO')\n            break\n        elif b[i] < a[i] and -1 not in was:\n            print('NO')\n            break\n        was.add(a[i])\n        if 1 in was and -1 in was:\n            print('YES')\n            break\n    else:\n        print('YES')", "def answer(n, a, b):\n    s = set()\n    for i in range(n):\n        if a[i] == b[i]:\n            pass\n        elif a[i] > b[i] and -1 in s:\n            pass\n        elif a[i] < b[i] and 1 in s:\n            pass\n        else:\n            return 'NO'\n        s.add(a[i])\n    return 'YES'\n\ndef main():\n    t = int(input())\n    n = [0] * t\n    a = [0] * t\n    b = [0] * t\n    for j in range(t):\n        n[j] = int(input())\n        a[j] = [int(i) for i in input().split()]\n        b[j] = [int(i) for i in input().split()]\n    for j in range(t):\n        print(answer(n[j], a[j], b[j]))\nmain()", "import sys\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n\n    def ok():\n        p = m = False\n        for (a, b) in zip(aa, bb):\n            if a < b and (not p):\n                return False\n            if a > b and (not m):\n                return False\n            if a == 1:\n                p = True\n            if a == -1:\n                m = True\n        return True\n    for _ in range(II()):\n        n = II()\n        aa = LI()\n        bb = LI()\n        if ok():\n            print('YES')\n        else:\n            print('NO')\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef input_list():\n    return list(map(int, input().split()))\n\ndef f():\n    n = int(input())\n    l1 = input_list()\n    l2 = input_list()\n    possible = True\n    deja_vu = set([])\n    for (i, x) in enumerate(l1):\n        if not possible:\n            break\n        if x != l2[i]:\n            if x > l2[i] and -1 not in deja_vu:\n                possible = False\n            elif x < l2[i] and 1 not in deja_vu:\n                possible = False\n        if x not in deja_vu:\n            deja_vu.add(x)\n    if possible:\n        print('YES')\n    else:\n        print('NO')\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        f()\nmain()", "import sys, math\nI = sys.stdin.readline\nans = ''\nfor _ in range(int(I())):\n    n = int(I())\n    a = list(map(int, I().split()))\n    b = list(map(int, I().split()))\n    s = set()\n    if n == 1:\n        if a[0] == b[0]:\n            ans += 'YES\\n'\n        else:\n            ans += 'NO\\n'\n    elif a[0] != b[0]:\n        ans += 'NO\\n'\n    elif a[0] == 0 and b[1] > a[1]:\n        ans += 'NO\\n'\n    else:\n        flag = 1\n        for i in range(n - 1):\n            s.add(a[i])\n            if b[i + 1] > 0:\n                if 1 not in s and a[i + 1] != b[i + 1]:\n                    flag = 0\n                    break\n            elif b[i + 1] < 0:\n                if -1 not in s and a[i + 1] != b[i + 1]:\n                    flag = 0\n                    break\n            elif a[i + 1] != 0:\n                if a[i + 1] == 1:\n                    if -1 not in s:\n                        flag = 0\n                        break\n                elif 1 not in s:\n                    flag = 0\n                    break\n        if flag:\n            ans += 'YES\\n'\n        else:\n            ans += 'NO\\n'\nprint(ans)", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    a = [int(i) for i in sys.stdin.readline().split()]\n    b = [int(i) for i in sys.stdin.readline().split()]\n    possible = True\n    seen_pos = False\n    seen_neg = False\n    for (i, val) in enumerate(a):\n        if val < b[i] and (not seen_pos):\n            possible = False\n            break\n        if val > b[i] and (not seen_neg):\n            possible = False\n            break\n        if val > 0:\n            seen_pos = True\n        if val < 0:\n            seen_neg = True\n    if possible:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if a[0] != b[0]:\n        print('NO')\n        continue\n    if n == 1:\n        if a[0] == b[0]:\n            print('YES')\n        continue\n    s = {a[0]}\n    for i in range(1, n):\n        if -1 in s and 1 in s:\n            print('YES')\n            break\n        if a[i] > b[i]:\n            if -1 not in s:\n                print('NO')\n                k = 1\n                break\n        if a[i] < b[i]:\n            if 1 not in s:\n                print('NO')\n                k = 1\n                break\n        s = s.union([a[i]])\n        if i == n - 1:\n            print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    (f1, f2) = (0, 0)\n    (i, j) = (n, n)\n    for x in range(n):\n        if f1 and f2:\n            break\n        elif not f1 and a[x] == 1:\n            i = x\n            f1 = 1\n        elif not f2 and a[x] == -1:\n            j = x\n            f2 = 1\n    t = n if i == n or j == n else max(i, j) + 1\n    for y in range(t):\n        if a[y] < b[y] and i >= y:\n            print('NO')\n            break\n        elif a[y] > b[y] and j >= y:\n            print('NO')\n            break\n    else:\n        print('YES')", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_ls():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef sol():\n    n = int(input())\n    a = get_ls()\n    b = get_ls()\n    (x, y) = (0, 0)\n    for i in range(n):\n        if a[i] > b[i] and (not x):\n            print('NO')\n            return\n        elif a[i] < b[i] and (not y):\n            print('NO')\n            return\n        if a[i] == -1:\n            x = 1\n        if a[i] == 1:\n            y = 1\n    print('YES')\n\ndef main():\n    for _ in range(int(input())):\n        sol()\nmain()", "for inh in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if a[0] != b[0]:\n        print('NO')\n    else:\n        s = {0, a[0]}\n        i = 1\n        ans = True\n        while i < n and len(s) != 3:\n            if a[i] == b[i]:\n                s.add(a[i])\n            elif a[i] < b[i]:\n                if 1 not in s:\n                    ans = False\n                    break\n                s.add(a[i])\n            else:\n                if -1 not in s:\n                    ans = False\n                    break\n                s.add(a[i])\n            i += 1\n        if ans:\n            print('YES')\n        else:\n            print('NO')", "for p in range(int(input())):\n    (z, h) = (int(input()), 0)\n    f = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    if f[0] != s[0]:\n        print('NO')\n        h = 1\n    else:\n        l = [0, 0, 0]\n        for (j, i) in enumerate(s):\n            if l[0] and (not l[2]):\n                if i <= f[j]:\n                    pass\n                else:\n                    h = 1\n                    print('NO')\n                    break\n            elif not l[0] and l[2]:\n                if i >= f[j]:\n                    pass\n                else:\n                    h = 1\n                    print('NO')\n                    break\n            elif l[0] and l[2]:\n                h = 0\n                break\n            elif i == f[j]:\n                pass\n            else:\n                h = 1\n                print('NO')\n                break\n            if -1 == f[j]:\n                l[0] = 1\n            if 0 == f[j]:\n                l[1] = 1\n            if 1 == f[j]:\n                l[2] = 1\n        if not h:\n            print('YES')", "import sys\nreadline = sys.stdin.readline\nns = lambda : readline().rstrip()\nni = lambda : int(readline().rstrip())\nnm = lambda : map(int, readline().split())\nnl = lambda : list(map(int, readline().split()))\n\ndef solve():\n    n = ni()\n    a = nl() + [1, -1]\n    b = nl()\n    p = a.index(1)\n    m = a.index(-1)\n    for i in range(n - 1, -1, -1):\n        if a[i] < b[i] and p >= i or (a[i] > b[i] and m >= i):\n            print('NO')\n            return\n    print('YES')\n    return\nT = ni()\nfor _ in range(T):\n    solve()", "import sys\nfrom math import sqrt, floor\nfrom collections import deque, Counter\ninp = sys.stdin.readline\nread = lambda : list(map(int, inp().split()))\n\ndef a():\n    ans = ''\n    for _ in range(int(inp())):\n        (n, m) = read()\n        tem = []\n        pat = list('BW' * 100)\n        for i in range(n):\n            tem += pat[i % 2:m + i % 2] + ['\\n']\n        if tem.count('W') + 1 == tem.count('B'):\n            ans += ''.join(tem)\n        else:\n            for i in range(-1, -len(tem), -1):\n                if tem[i] == 'W':\n                    tem[i] = 'B'\n                    break\n            ans += ''.join(tem)\n    print(ans)\n\ndef b():\n    ans = ''\n    for _ in range(int(inp())):\n        n = int(inp())\n        a = read()\n        b = read()\n        nums = set()\n        tem = 'YES'\n        for i in range(n):\n            if a[i] < b[i]:\n                if not 1 in nums:\n                    tem = 'NO'\n                    break\n                else:\n                    nums.add(a[i])\n            elif a[i] > b[i]:\n                if not -1 in nums:\n                    tem = 'NO'\n                    break\n                else:\n                    nums.add(a[i])\n            else:\n                nums.add(a[i])\n        ans += tem + '\\n'\n    print(ans)\nb()", "import sys\n\ndef main():\n    test_cases = int(sys.stdin.readline())\n    for test_case in range(test_cases):\n        n = int(sys.stdin.readline())\n        given_nums = sys.stdin.readline().split()\n        desired_nums = sys.stdin.readline().split()\n        has_pos = False\n        has_neg = False\n        for i in range(n):\n            num = int(given_nums[i])\n            desired_num = int(desired_nums[i])\n            delta = desired_num - num\n            if delta > 0:\n                if not has_pos:\n                    print('NO')\n                    break\n            elif delta < 0:\n                if not has_neg:\n                    print('NO')\n                    break\n            if num > 0:\n                has_pos = True\n            elif num < 0:\n                has_neg = True\n            if i == n - 1:\n                print('YES')\nmain()", "def anton(n, array1, array2):\n    one = False\n    minusone = False\n    if array1[0] != array2[0]:\n        return 'NO'\n    for i in range(n):\n        if one and minusone:\n            return 'YES'\n        if array2[i] == array1[i]:\n            if array1[i] == 1:\n                one = True\n                continue\n            elif array1[i] == 0:\n                continue\n            else:\n                minusone = True\n                continue\n        elif array1[i] < array2[i]:\n            if one:\n                if array1[i] == -1:\n                    minusone = True\n                continue\n            else:\n                return 'NO'\n        elif array1[i] > array2[i]:\n            if minusone:\n                if array1[i] == 1:\n                    one = True\n                continue\n            else:\n                return 'NO'\n    return 'YES'\nt = int(input())\narray = []\nfor i in range(t):\n    a = int(input())\n    l1 = list(map(int, input().split(' ')))\n    l2 = list(map(int, input().split(' ')))\n    array.append([a, l1, l2])\nfor f in array:\n    print(anton(f[0], f[1], f[2]))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if a[0] != b[0]:\n        return 'NO'\n    positive = negative = status = False\n    if a[0] == 1:\n        positive = True\n    elif a[0] == -1:\n        negative = True\n    for i in range(1, n, 1):\n        if a[i] > b[i]:\n            if not negative:\n                status = True\n        elif a[i] < b[i]:\n            if not positive:\n                status = True\n        if a[i] == 1:\n            positive = True\n        elif a[i] == -1:\n            negative = True\n    if status:\n        return 'NO'\n    else:\n        return 'YES'\nt = int(input())\nwhile t:\n    t -= 1\n    print(solve())", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    a = [int(i) for i in sys.stdin.readline().split()]\n    b = [int(i) for i in sys.stdin.readline().split()]\n    possible = True\n    seen_pos = False\n    seen_neg = False\n    for (i, val) in enumerate(a):\n        if val < b[i] and (not seen_pos):\n            possible = False\n            break\n        if val > b[i] and (not seen_neg):\n            possible = False\n            break\n        if val > 0:\n            seen_pos = True\n        if val < 0:\n            seen_neg = True\n    if possible:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    flag = 'YES'\n    s = set()\n    if a[0] != b[0]:\n        flag = 'NO'\n    s.add(a[0])\n    for x in range(1, n):\n        if a[x] == b[x]:\n            s.add(a[x])\n            continue\n        elif a[x] > b[x]:\n            if -1 not in s:\n                flag = 'NO'\n                break\n            else:\n                s.add(a[x])\n        elif 1 not in s:\n            flag = 'NO'\n            break\n        else:\n            s.add(a[x])\n    print(flag)", "import sys\nimport math\nget_string = lambda : sys.stdin.readline().strip()\nget_int_list = lambda : list(map(int, sys.stdin.readline().strip().split()))\nget_int = lambda : int(sys.stdin.readline())\nfor _ in range(get_int()):\n    n = get_int()\n    lst1 = get_int_list()\n    lst2 = get_int_list()\n    flag = True\n    if -1 in lst1:\n        neg_1 = lst1.index(-1)\n    else:\n        neg_1 = None\n    if 1 in lst1:\n        pos_1 = lst1.index(1)\n    else:\n        pos_1 = None\n    for i in range(n - 1, -1, -1):\n        if lst1[i] > lst2[i]:\n            if neg_1 is None or neg_1 >= i:\n                flag = False\n                break\n        elif lst1[i] < lst2[i]:\n            if pos_1 is None or pos_1 >= i:\n                flag = False\n                break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin, stdout\n\ndef f(a, b, n):\n    c = 0\n    p = 0\n    ne = 0\n    if b[0] != a[0]:\n        print('NO')\n        return\n    elif a[0] == 1:\n        p = 1\n    elif a[0] == -1:\n        ne = 1\n    for i in range(1, n):\n        if p == 0 and a[i - 1] > 0:\n            p = 1\n        elif ne == 0 and a[i - 1] < 0:\n            ne = 1\n        if a[i] != b[i]:\n            if b[i] > a[i] and p == 0:\n                print('NO')\n                c = 1\n                break\n            elif b[i] < a[i] and ne == 0:\n                print('NO')\n                c = 1\n                break\n    if c == 0:\n        print('YES')\nt = int(stdin.readline())\nfor _ in range(t):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    b = list(map(int, stdin.readline().split()))\n    f(a, b, n)", "for _ in range(int(input())):\n    n = int(input())\n    a = map(int, input().split())\n    b = map(int, input().split())\n    (x, y) = (False, False)\n    for (u, v) in zip(a, b):\n        if u > v and (not x):\n            print('NO')\n            break\n        if u < v and (not y):\n            print('NO')\n            break\n        if u < 0:\n            x = True\n        if u > 0:\n            y = True\n        if x and y:\n            print('YES')\n            break\n    else:\n        print('YES')", "import sys\ninput = sys.stdin.readline\nins = lambda : input()\nini = lambda : int(input())\ninm = lambda : map(int, input().split())\ninl = lambda : list(map(int, input().split()))\nt = ini()\nans = []\nfor _ in range(t):\n    n = ini()\n    a = inl()\n    b = inl()\n    count = [0, 0]\n    tmp = True\n    for i in range(n):\n        if a[i] > b[i] and count[1] == 0:\n            tmp = False\n            break\n        elif a[i] < b[i] and count[0] == 0:\n            tmp = False\n            break\n        if a[i] == 1:\n            count[0] = 1\n        if a[i] == -1:\n            count[1] = 1\n    ans.append('YES' if tmp else 'NO')\nprint('\\n'.join(ans))", "def fun(n, a, b):\n    if a[0] != b[0]:\n        print('NO')\n        return\n    else:\n        pre = []\n        for i in range(1, n):\n            if a[i - 1] not in pre:\n                pre.append(a[i - 1])\n            if a[i] > b[i]:\n                if -1 not in pre:\n                    print('NO')\n                    return\n            elif a[i] < b[i]:\n                if 1 not in pre:\n                    print('NO')\n                    return\n        print('YES')\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    fun(n, a, b)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    hash_map = {}\n    flag = True\n    for i in range(n):\n        if a[i] > b[i]:\n            if -1 not in hash_map:\n                flag = False\n                break\n            if a[i] not in hash_map:\n                hash_map[a[i]] = 1\n        elif a[i] < b[i]:\n            if 1 not in hash_map:\n                flag = False\n                break\n            if a[i] not in hash_map:\n                hash_map[a[i]] = 1\n        elif a[i] == b[i]:\n            if a[i] not in hash_map:\n                hash_map[a[i]] = 1\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "from math import *\nfrom math import factorial as fact, comb as ncr\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom collections import Counter as ctr\nfrom collections import deque as dq\nfrom array import array\nfrom re import S, search\nli = lambda : list(map(int, input().split()))\narr = lambda a: array('i', a)\nbi = lambda n: bin(n).replace('0b', '')\nyn = lambda f: print('NYOE S'[f::2])\nsbstr = lambda a, s: search('.*'.join(a), s)\n\ndef notprime(a):\n    if a == 2:\n        return False\n    elif a % 2 == 0:\n        return True\n    n = 3\n    while n <= a ** 0.5:\n        if a % n == 0:\n            return True\n        n += 2\n    return False\n\ndef solve():\n    for _ in range(int(input())):\n        n = int(input())\n        a = li()\n        b = li()\n        av = set()\n        f = True\n        for i in range(n):\n            if a[i] > b[i] and -1 not in av or (a[i] < b[i] and 1 not in av):\n                f = False\n                break\n            else:\n                av.add(a[i])\n        yn(f)\nsolve()", "t = int(input())\nfor k in range(0, t, 1):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    z = 0\n    c1 = 0\n    c2 = 0\n    for i in range(0, n, 1):\n        if i == 0:\n            if a[0] != b[0]:\n                z = 1\n                break\n            elif a[0] == 1:\n                c1 = c1 + 1\n            elif a[0] == -1:\n                c2 = c2 + 1\n        elif a[i] == b[i]:\n            if a[i] == 1:\n                c1 = c1 + 1\n            elif a[i] == -1:\n                c2 = c2 + 1\n            continue\n        elif b[i] > a[i] and c1 > 0:\n            if a[i] == 1:\n                c1 = c1 + 1\n            elif a[i] == -1:\n                c2 = c2 + 1\n            continue\n        elif b[i] < a[i] and c2 > 0:\n            if a[i] == 1:\n                c1 = c1 + 1\n            elif a[i] == -1:\n                c2 = c2 + 1\n            continue\n        else:\n            z = 1\n            break\n    if z == 1:\n        print('NO')\n    else:\n        print('YES')", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    s = set()\n    for i in range(n):\n        if b[i] > a[i] and 1 not in s or (b[i] < a[i] and -1 not in s):\n            print('NO')\n            break\n        s.add(a[i])\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (a, b) = [list(map(int, input().split())) for i in '...'][1:]\n    s = set()\n    for i in range(len(a)):\n        if a[i] < b[i] and 1 not in s or (a[i] > b[i] and -1 not in s):\n            print('NO')\n            break\n        s.add(a[i])\n        if i == len(a) - 1:\n            print('YES')", "t = int(input())\nout = ''\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = [int(i) for i in input().split(' ')]\n    b = [int(i) for i in input().split(' ')]\n    has_positive = False\n    has_negative = False\n    for i in range(n):\n        if b[i] < a[i]:\n            if not has_negative:\n                out += 'NO\\n'\n                break\n        elif b[i] > a[i]:\n            if not has_positive:\n                out += 'NO\\n'\n                break\n        if a[i] == 1:\n            has_positive = True\n        elif a[i] == -1:\n            has_negative = True\n    else:\n        out += 'YES\\n'\nprint(out)", "import sys\ninput = sys.stdin.readline\n\ndef multi_input():\n    return map(int, input().split())\n\ndef array_print(arr):\n    print(' '.join(map(str, arr)))\nfor t in range(int(input())):\n    n = int(input())\n    a = list(multi_input())\n    b = list(multi_input())\n    value1 = False\n    value_1 = False\n    ans = True\n    if a[0] == b[0]:\n        if a[0] == 1:\n            value1 = True\n        elif a[0] == -1:\n            value_1 = True\n        for i in range(n):\n            if a[i] != b[i]:\n                if a[i] < b[i]:\n                    if not value1:\n                        ans = False\n                        break\n                elif a[i] > b[i]:\n                    if not value_1:\n                        ans = False\n                        break\n            if a[i] == 1:\n                value1 = True\n            elif a[i] == -1:\n                value_1 = True\n    else:\n        ans = False\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "def canForm(a, b):\n    elementsSoFar = set()\n    for i in range(len(a)):\n        if a[i] == b[i]:\n            pass\n        elif a[i] < b[i]:\n            if not 1 in elementsSoFar:\n                return False\n        elif not -1 in elementsSoFar:\n            return False\n        elementsSoFar.add(a[i])\n    return True\n\ndef getTestCases():\n    numTestCases = int(input())\n    testCases = [0] * numTestCases\n    for i in range(numTestCases):\n        arrSize = int(input())\n        a = [int(x) for x in input().split()]\n        b = [int(x) for x in input().split()]\n        testCases[i] = (a, b)\n    return testCases\ntestCases = getTestCases()\nfor testCase in testCases:\n    if canForm(testCase[0], testCase[1]):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if -1 in a:\n        i = a.index(-1)\n    i = a.index(-1) if -1 in a else n - 1\n    j = a.index(1) if 1 in a else n - 1\n    for k in range(i + 1):\n        if a[k] > b[k]:\n            print('NO')\n            break\n    else:\n        for k in range(j + 1):\n            if a[k] < b[k]:\n                print('NO')\n                break\n        else:\n            print('YES')", "t = int(input())\nfor _ in range(t):\n    n = input()\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    negative = False\n    positive = False\n    result = True\n    for i in range(int(n)):\n        if b[i] > a[i] and (not positive):\n            result = False\n            break\n        if b[i] < a[i] and (not negative):\n            result = False\n            break\n        if a[i] == 1:\n            positive = True\n        if a[i] == -1:\n            negative = True\n    if result:\n        print('YES')\n    else:\n        print('NO')", "from collections import defaultdict as dc\nfrom heapq import *\nimport math\nimport bisect\nimport sys\nfrom collections import deque as dq\nfrom heapq import heapify, heappush, heappop\nmod = 10 ** 12\n\ndef inp():\n    p = int(sys.stdin.readline())\n    return p\n\ndef line():\n    p = list(map(int, sys.stdin.readline().split()))\n    return p\n\ndef digit(n):\n    s = str(n)\n    p = 0\n    for i in s:\n        p += int(i) ** 2\n    return p\n\ndef solve(n, a, b):\n    ans = 0\n    p = dc(int)\n    for i in range(n):\n        if a[i] != b[i]:\n            if a[i] > b[i] and p[-1] == 0:\n                return 0\n            if a[i] < b[i] and p[1] == 0:\n                return 0\n        p[a[i]] += 1\n    return 1\nfor _ in range(inp()):\n    n = inp()\n    a = line()\n    b = line()\n    z = solve(n, a, b)\n    if z == 1:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin\nfrom collections import deque\nfrom math import sqrt, floor, ceil, log, log2, log10, pi, gcd, sin, cos, asin\n\ndef ii():\n    return int(stdin.readline())\n\ndef fi():\n    return float(stdin.readline())\n\ndef mi():\n    return map(int, stdin.readline().split())\n\ndef fmi():\n    return map(float, stdin.readline().split())\n\ndef li():\n    return list(mi())\n\ndef lsi():\n    x = list(stdin.readline())\n    x.pop()\n    return x\n\ndef si():\n    return stdin.readline()\nres = ['YES', 'NO']\nfor _ in range(ii()):\n    n = ii()\n    a = li()\n    b = li()\n    s = {0}\n    f = 0\n    for i in range(n):\n        if a[i] < b[i]:\n            if 1 not in s:\n                f = 1\n                break\n        elif a[i] > b[i]:\n            if -1 not in s:\n                f = 1\n                break\n        s.add(a[i])\n    print(res[f])", "def kind(a, b):\n    on = False\n    minon = False\n    if a[0] != b[0]:\n        return 'NO'\n    for i in range(len(a)):\n        if a[i] == b[i]:\n            if a[i] == 1:\n                on = True\n            elif a[i] == -1:\n                minon = True\n        elif a[i] > b[i]:\n            if minon:\n                if a[i] == 1:\n                    on = True\n            else:\n                return 'NO'\n        elif on:\n            if a[i] == -1:\n                minon = True\n        else:\n            return 'NO'\n    return 'YES'\nt = int(input())\nl = []\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    l.append([a, b])\nfor j in l:\n    print(kind(j[0], j[1]))", "import io\nimport os\nimport sys\nimport math\nimport heapq\nimport bisect\nimport random\nimport string\nimport decimal\nimport functools\nimport fractions\nimport itertools\nimport collections\nfrom sys import stdin, stdout\nfrom io import BytesIO, IOBase\nfrom math import gcd, floor, sqrt, log, factorial\nfrom bisect import bisect_left, bisect_right\nfrom collections import deque, Counter, defaultdict, OrderedDict, namedtuple, UserDict, UserList, UserString\nMOD = 1000000007\nsys.setrecursionlimit(100000000)\nBUFSIZE = 8192\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    seen = set()\n    ans = 'YES'\n    for (i, j) in zip(a, b):\n        if i == j:\n            seen.add(i)\n            continue\n        elif j < i and -1 not in seen:\n            ans = 'NO'\n        elif j > i and 1 not in seen:\n            ans = 'NO'\n        seen.add(i)\n    print(ans)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor i1 in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    b = list(map(int, input().split(' ')))\n    if a[0] != b[0]:\n        print('NO')\n    else:\n        neg = -1\n        pos = -1\n        flag = True\n        if a[0] == 1:\n            pos = 0\n        elif a[0] == -1:\n            neg = 0\n        for i in range(1, n):\n            if a[i] != b[i]:\n                if b[i] > a[i] and pos == -1:\n                    flag = False\n                    break\n                elif b[i] < a[i] and neg == -1:\n                    flag = False\n                    break\n            if a[i] == 1:\n                pos = i\n            elif a[i] == -1:\n                neg = i\n        if flag == True:\n            print('YES')\n        else:\n            print('NO')", "from sys import stdin\ninput = stdin.readline\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    A = [int(j) for j in input().split()]\n    B = [int(j) for j in input().split()]\n    avail = set()\n    for j in range(n):\n        if A[j] != B[j]:\n            pk = B[j] - A[j]\n            if pk > 0:\n                if 1 in avail:\n                    pass\n                else:\n                    break\n            elif pk < 0:\n                if -1 in avail:\n                    pass\n                else:\n                    break\n        avail.add(A[j])\n    else:\n        print('YES')\n        continue\n    print('NO')", "from sys import stdin\nt = int(stdin.readline())\nfor _ in range(t):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    b = list(map(int, stdin.readline().split()))\n    ans = True\n    haveM = False\n    haveP = False\n    for i in range(n):\n        if b[i] > a[i] and (not haveP):\n            ans = False\n        if b[i] < a[i] and (not haveM):\n            ans = False\n        if a[i] > 0:\n            haveP = True\n        if a[i] < 0:\n            haveM = True\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin\ninp = stdin.readline\nt = int(inp().strip())\nwhile t > 0:\n    t -= 1\n    n = int(inp().strip())\n    a = [int(k) for k in inp().strip().split()]\n    b = [int(k) for k in inp().strip().split()]\n    postiveFound = False\n    negFound = False\n    if a[0] != b[0]:\n        print('NO')\n        continue\n    if a[0] > 0:\n        postiveFound = True\n    elif a[0] < 0:\n        negFound = True\n    for i in range(1, len(a)):\n        if a[i] != b[i]:\n            if a[i] < b[i] and (not postiveFound) or (a[i] > b[i] and (not negFound)):\n                break\n        if a[i] > 0:\n            postiveFound = True\n        elif a[i] < 0:\n            negFound = True\n    else:\n        print('YES')\n        continue\n    print('NO')", "for _ in range(int(input())):\n    qtd = int(input())\n    (a, b) = (input().split(), input().split())\n    (plus, minus) = (False, False)\n    made = True\n    for i in range(qtd):\n        if plus and minus:\n            break\n        if int(a[i]) > int(b[i]):\n            if not minus:\n                made = False\n                break\n        if int(a[i]) < int(b[i]):\n            if not plus:\n                made = False\n                break\n        plus = int(a[i]) == 1 or plus\n        minus = int(a[i]) == -1 or minus\n    if made:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\n\ndef huntone(a, i):\n    for item in range(i):\n        if a[item] == 1:\n            return True\n    return False\n\ndef huntmone(a, i):\n    for item in range(i):\n        if a[item] == -1:\n            return True\n    return False\nhuntone([0, 2, 3, 4, 1], 5)\n\ndef is_possible(a, b, n):\n    if n == 1:\n        if a != b:\n            return 'NO'\n        else:\n            return 'YES'\n    if a[0] != b[0]:\n        return 'NO'\n    for i in range(1, n):\n        if b[i] > a[i]:\n            if huntone(a, i) == False:\n                return 'NO'\n        if b[i] < a[i]:\n            if huntmone(a, i) == False:\n                return 'NO'\n    return 'YES'\nanswer = []\nfor item in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    answer.append(is_possible(a, b, n))\nfor item in answer:\n    print(item)", "def solve(ans):\n    size = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    count = [False] * 3\n    count[a[0] + 1] = True\n    if b[0] != a[0]:\n        ans.append('NO')\n        return\n    else:\n        for i in range(1, size):\n            if b[i] != a[i]:\n                if b[i] >= 1 and count[2] == False:\n                    ans.append('NO')\n                    break\n                if b[i] <= -1 and count[0] == False:\n                    ans.append('NO')\n                    break\n                if b[i] == 0:\n                    if a[i] == -1 and count[2] == False:\n                        ans.append('NO')\n                        break\n                    elif a[i] == 1 and count[0] == False:\n                        ans.append('NO')\n                        break\n            if count[2] == False and a[i] == 1:\n                count[2] = True\n            elif count[0] == False and a[i] == -1:\n                count[0] = True\n            elif count[1] == False and a[i] == 0:\n                count[1] = True\n        else:\n            ans.append('YES')\n    return\nn = int(input())\nans = []\nfor i in range(n):\n    solve(ans)\nfor ele in ans:\n    print(ele)", "from sys import stdin, stdout\nfor i in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    a = [int(x) for x in stdin.readline().split()]\n    b = [int(x) for x in stdin.readline().split()]\n    ans = 'YES'\n    s = set()\n    for i in range(n):\n        if b[i] > a[i] and 1 not in s:\n            ans = 'NO'\n            break\n        elif b[i] < a[i] and -1 not in s:\n            ans = 'NO'\n            break\n        s.add(a[i])\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if a == b:\n        print('YES')\n        continue\n    pos = False\n    neg = False\n    for (av, bv) in zip(a, b):\n        if bv > av:\n            if not pos:\n                print('NO')\n                break\n        elif bv < av:\n            if not neg:\n                print('NO')\n                break\n        if av > 0:\n            pos = True\n        elif av < 0:\n            neg = True\n        if pos and neg:\n            print('YES')\n            break\n    else:\n        print('YES')", "t = int(input())\ns = ''\nwhile t > 0:\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    l = 0\n    r = 0\n    i = 0\n    flag = True\n    while i < n:\n        if b[i] > a[i] and l == 0 or (b[i] < a[i] and r == 0):\n            s += 'NO\\n'\n            flag = False\n            break\n        if a[i] == 1:\n            l = 1\n        elif a[i] == -1:\n            r = 1\n        i += 1\n    if flag:\n        s += 'YES\\n'\n    t -= 1\nprint(s)", "testcases = int(input())\nnList = []\nAs = []\nBs = []\nfor i in range(testcases):\n    nList.append(int(input()))\n    As.append(list(map(int, input().split())))\n    Bs.append(list(map(int, input().split())))\nfor i in range(testcases):\n    plusAhead = False\n    minusAhead = False\n    A = As[i]\n    B = Bs[i]\n    n = nList[i]\n    j = 0\n    while j < n:\n        if A[j] > B[j] and (not minusAhead):\n            break\n        elif A[j] < B[j] and (not plusAhead):\n            break\n        if A[j] == 1:\n            plusAhead = True\n        elif A[j] == -1:\n            minusAhead = True\n        j += 1\n    if j == n:\n        print('YES')\n    else:\n        print('NO')", "class code:\n\n    def forces(a, b):\n        g = set()\n        for i in range(n):\n            if a[i] > b[i] and -1 not in g or (b[i] > a[i] and 1 not in g):\n                return 'NO'\n            g.add(a[i])\n        return 'YES'\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(code.forces(a, b))", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    a = [int(item) for item in input().split()]\n    b = [int(item) for item in input().split()]\n    on = [False] * n\n    mn = [False] * n\n    ok = True if a[0] == b[0] else False\n    if ok:\n        for i in range(1, n):\n            on[i] = on[i - 1] or a[i - 1] == 1\n            mn[i] = mn[i - 1] or a[i - 1] == -1\n            if b[i] > a[i] and on[i] == False or (b[i] < a[i] and mn[i] == False):\n                ok = False\n                break\n    print('YES' if ok else 'NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(it) for it in input().split()]\n    b = [int(ite) for ite in input().split()]\n    pos = None\n    neg = None\n    go = True\n    if a[0] == b[0]:\n        for i in range(1, n):\n            if a[i - 1] < 0:\n                neg = True\n            elif a[i - 1] > 0:\n                pos = True\n            if a[i] == b[i]:\n                continue\n            elif a[i] < b[i]:\n                if pos:\n                    continue\n                else:\n                    print('NO')\n                    go = False\n                    break\n            elif neg:\n                continue\n            else:\n                print('NO')\n                go = False\n                break\n        if go:\n            print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if a[0] != b[0]:\n        print('NO')\n        continue\n    s = {a[0]}\n    k = 0\n    for i in range(1, n):\n        if a[i] > b[i]:\n            if -1 not in s:\n                print('NO')\n                k = 1\n                break\n        if a[i] < b[i]:\n            if 1 not in s:\n                print('NO')\n                k = 1\n                break\n        s = s.union([a[i]])\n    if k == 0:\n        print('YES')", "t = int(input())\nfor k in range(0, t, 1):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    z = 0\n    c1 = 0\n    c2 = 0\n    for i in range(0, n, 1):\n        if i == 0:\n            if a[0] != b[0]:\n                z = 1\n                break\n            elif a[0] == 1:\n                c1 = 1\n            elif a[0] == -1:\n                c2 = 1\n        elif a[i] == b[i]:\n            if a[i] == 1:\n                c1 = 1\n            elif a[i] == -1:\n                c2 = 1\n            continue\n        elif b[i] > a[i] and c1 > 0:\n            if a[i] == 1:\n                c1 = 1\n            elif a[i] == -1:\n                c2 = 1\n            continue\n        elif b[i] < a[i] and c2 > 0:\n            if a[i] == 1:\n                c1 = 1\n            elif a[i] == -1:\n                c2 = 1\n            continue\n        else:\n            z = 1\n            break\n    if z == 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (a, b) = [list(map(int, input().split())) for i in '...'][1:]\n    s = set()\n    for i in range(len(a)):\n        if a[i] < b[i] and 1 not in s or (a[i] > b[i] and -1 not in s):\n            print('NO')\n            break\n        s.add(a[i])\n        if i == len(a) - 1:\n            print('YES')\nnum_inp = lambda : int(input())\narr_inp = lambda : list(map(int, input().split()))\nsp_inp = lambda : map(int, input().split())\nstr_inp = lambda : input()", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    b = list(map(int, input().split(' ')))\n    (one, minus_one) = (0, 0)\n    flag = 1\n    for i in range(n):\n        if a[i] < b[i] and (not one):\n            flag = 0\n        elif a[i] > b[i] and (not minus_one):\n            flag = 0\n        if a[i] == 1:\n            one = 1\n        elif a[i] == -1:\n            minus_one = 1\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    opts = set()\n    ans = 'YES'\n    for i in range(n):\n        if b[i] > a[i] and 1 not in opts:\n            ans = 'NO'\n        if b[i] < a[i] and -1 not in opts:\n            ans = 'NO'\n        opts.add(a[i])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = {-1: 0, 0: 0, 1: 0}\n    flag = 0\n    for j in range(n):\n        if b[j] - a[j] < 0:\n            if d[-1] == 0:\n                flag = 1\n                print('NO')\n                break\n        elif b[j] > a[j]:\n            if d[1] == 0:\n                flag = 1\n                print('NO')\n                break\n        d[a[j]] = 1\n        if d == {-1: 1, 0: 1, 1: 1}:\n            flag = 1\n            print('YES')\n            break\n    if flag == 0:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    p = 0\n    ne = 0\n    f = 0\n    if a[0] != b[0]:\n        print('NO')\n    else:\n        if a[0] > 0:\n            p = 1\n        elif a[0] < 0:\n            ne = 1\n        for i in range(1, n):\n            if a[i] != b[i]:\n                if b[i] > a[i]:\n                    if p == 1:\n                        f = 0\n                    else:\n                        f = 1\n                        break\n                elif b[i] < a[i]:\n                    if ne == 1:\n                        f = 0\n                    else:\n                        f = 1\n                        break\n            if a[i] > 0:\n                p = 1\n            elif a[i] < 0:\n                ne = 1\n            if p == 1 and ne == 1:\n                break\n        if f == 1:\n            print('NO')\n        else:\n            print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = {1: 0, 0: 0, -1: 0}\n    flag = 1\n    if a[0] != b[0]:\n        flag = 0\n    else:\n        c[a[0]] += 1\n        for i in range(1, n):\n            if a[i] > b[i]:\n                if c[-1] == 0:\n                    flag = 0\n                    break\n            elif a[i] < b[i]:\n                if c[1] == 0:\n                    flag = 0\n                    break\n            c[a[i]] += 1\n            if c[1] > 0 and c[-1] > 0:\n                break\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "def solve(a, b, n):\n    if a == b:\n        return 'YES'\n    elif abs(b[0] - a[0]) != 0:\n        return 'NO'\n    else:\n        s = set()\n        s.add(a[0])\n        for i in range(1, n):\n            if b[i] - a[i] != 0 and int((b[i] - a[i]) / abs(b[i] - a[i])) not in s:\n                return 'NO'\n            s.add(a[i])\n        return 'YES'\nt = int(input())\nans = []\nfor s in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    ans.append(solve(a, b, n))\nfor it in ans:\n    print(it)", "T = int(input())\nres = []\nfor t in range(T):\n    n = int(input())\n    one = 0\n    minus = 0\n    count = 0\n    a = [int(k) for k in input().split()]\n    b = [int(k) for k in input().split()]\n    for i in range(n):\n        if a[i] == b[i]:\n            if a[i] == 1:\n                one += 1\n            elif a[i] == -1:\n                minus += 1\n            count += 1\n        elif a[i] < b[i] and one != 0:\n            if a[i] == 1:\n                one += 1\n            elif a[i] == -1:\n                minus += 1\n            count += 1\n        elif a[i] > b[i] and minus != 0:\n            if a[i] == 1:\n                one += 1\n            elif a[i] == -1:\n                minus += 1\n            count += 1\n        else:\n            res.append('NO')\n            break\n    if count == n:\n        res.append('YES')\nfor i in res:\n    print(i)", "import sys\nimport math, bisect\nsys.setrecursionlimit(10 ** 5)\nfrom itertools import groupby, accumulate\nfrom heapq import heapify, heappop, heappush\nfrom collections import deque, Counter, defaultdict\nI = lambda : int(sys.stdin.readline())\nneo = lambda : map(int, sys.stdin.readline().split())\nNeo = lambda : list(map(int, sys.stdin.readline().split()))\nfor _ in range(I()):\n    n = I()\n    A = Neo()\n    B = Neo()\n    (one, negone) = (0, 0)\n    f = 0\n    for i in range(n):\n        if B[i] < A[i] and negone == 0:\n            f = 1\n            break\n        elif B[i] > A[i] and one == 0:\n            f = 1\n            break\n        if A[i] == 1:\n            one = 1\n        if A[i] == -1:\n            negone = 1\n    if f == 0:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    f = [0, 0]\n    s = 0\n    for i in range(n):\n        if b[i] < a[i] and f[0] != 1 or (b[i] > a[i] and f[1] != 1):\n            print('NO')\n            s = 1\n            break\n        if a[i] == -1:\n            f[0] = 1\n        if a[i] == 1:\n            f[1] = 1\n    if s == 0:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    positive = False\n    negative = False\n    passs = 'YES'\n    for i in range(n):\n        if a[i] < b[i] and positive == False:\n            passs = 'NO'\n        if a[i] > b[i] and negative == False:\n            passs = 'NO'\n        if a[i] == 1:\n            positive = True\n        if a[i] == -1:\n            negative = True\n    print(passs)", "import math\nfor i in range(0, int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    flag = 0\n    one = set()\n    for j in range(0, len(b)):\n        if a[j] == b[j]:\n            one.add(a[j])\n            continue\n        if (a[j] != b[j]) & (j == 0):\n            flag = 1\n        elif a[j] < b[j]:\n            if not 1 in one:\n                flag = 1\n        elif not -1 in one:\n            flag = 1\n        one.add(a[j])\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')", "from sys import stdin, exit\ninput = stdin.readline\nlmi = lambda : list(map(int, input().split()))\nmi = lambda : map(int, input().split())\nsi = lambda : input().strip('\\n')\nssi = lambda : input().strip('\\n').split()\nfor _ in range(int(input())):\n    n = int(input())\n    a = lmi()\n    b = lmi()\n    yes = True\n    pos = False\n    neg = False\n    zero = False\n    for i in range(n):\n        if a[i] != b[i]:\n            if b[i] > a[i] and (not pos):\n                yes = False\n            elif b[i] < a[i] and (not neg):\n                yes = False\n        if a[i] > 0:\n            pos = True\n        elif a[i] < 0:\n            neg = True\n    print('YES' if yes else 'NO')", "t = int(input())\nout = list()\nfor stuff in range(t):\n    input_n = input()\n    input_a = input().split()\n    input_b = input().split()\n    n = int(input_n)\n    a = [int(item) for item in input_a]\n    b = [int(item) for item in input_b]\n    neg = 0\n    pos = 0\n    OK = 0\n    for i in range(n):\n        if i == 0 and a[i] != b[i]:\n            out.append('NO')\n            break\n        if a[i] < b[i] and pos == 1:\n            OK = OK + 1\n        elif a[i] > b[i] and neg == 1:\n            OK = OK + 1\n        elif a[i] == b[i]:\n            OK = OK + 1\n        else:\n            out.append('NO')\n            break\n        if a[i] == -1:\n            neg = 1\n        elif a[i] == 1:\n            pos = 1\n    if OK == n:\n        out.append('YES')\nfor item in out:\n    print(item)", "for _ in range(int(input())):\n    n = int(input())\n    t = [False, False]\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    if a[0] != b[0]:\n        print('NO')\n        continue\n    if a[0] == 1:\n        t[0] = True\n    elif a[0] == -1:\n        t[1] = True\n    flag = 1\n    for i in range(1, n):\n        if t[0] == t[1] == True:\n            break\n        if a[i] != b[i]:\n            if a[i] > b[i]:\n                if t[1] == False:\n                    print('NO')\n                    flag = 0\n                    break\n            elif t[0] == False:\n                print('NO')\n                flag = 0\n                break\n        if a[i] == 1:\n            t[0] = True\n        elif a[i] == -1:\n            t[1] = True\n    if flag:\n        print('YES')", "n = int(input())\nfor x in range(n):\n    l = int(input())\n    isminus = False\n    isplus = False\n    m1 = list(map(int, input().split()))\n    m2 = list(map(int, input().split()))\n    for z in range(l):\n        if m1[z] != m2[z]:\n            if m1[z] < m2[z] and isplus == False:\n                print('NO')\n                break\n            if m1[z] > m2[z] and isminus == False:\n                print('NO')\n                break\n        if m1[z] == 1:\n            isplus = True\n        if m1[z] == -1:\n            isminus = True\n        if isminus and isplus:\n            print('YES')\n            break\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if a[0] == b[0]:\n        met = set()\n        met.add(a[0])\n        i = 1\n        no = False\n        while len(met) != 3 and i != n:\n            different = b[i] - a[i]\n            if different != 0:\n                if different // abs(different) in met:\n                    met.add(a[i])\n                    i += 1\n                else:\n                    print('NO')\n                    no = True\n                    break\n            else:\n                met.add(a[i])\n                i += 1\n        if not no:\n            if len(met) == 3 or i == n:\n                print('YES')\n            else:\n                print('NO')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    N = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    (p, n, v) = (0, 0, 'NO')\n    for i in range(N):\n        if b[i] - a[i] > 0 and (not p):\n            break\n        elif b[i] - a[i] < 0 and (not n):\n            break\n        if a[i] == 1:\n            p = 1\n        elif a[i] == -1:\n            n = 1\n        if p and n or i == N - 1:\n            v = 'YES'\n            break\n    print(v)", "m = lambda : list(map(int, input().split()))\nfor _ in range(int(input())):\n    (N, a, b, p, n, v) = (int(input()), m(), m(), 0, 0, 'NO')\n    for i in range(N):\n        if b[i] > a[i] and 1 - p or (b[i] < a[i] and 1 - n):\n            break\n        if a[i] == 1:\n            p = 1\n        if a[i] == -1:\n            n = 1\n        if p and n or i == N - 1:\n            v = 'YES'\n            break\n    print(v)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(t) for t in input().split()]\n    b = [int(t) for t in input().split()]\n    plus = False\n    minus = False\n    result = 'YES'\n    for i in range(n):\n        if plus and minus:\n            break\n        if a[i] == b[i]:\n            if a[i] == 1:\n                plus = True\n                continue\n            elif a[i] == -1:\n                minus = True\n                continue\n        elif a[i] > b[i]:\n            if not minus:\n                result = 'NO'\n                break\n            if a[i] == 1:\n                plus = True\n        else:\n            if not plus:\n                result = 'NO'\n                break\n            if a[i] == -1:\n                minus = True\n    print(result)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    c = set()\n    x = 'YES'\n    for i in range(n):\n        if b[i] > a[i] and 1 not in c or (a[i] > b[i] and -1 not in c):\n            x = 'NO'\n            break\n        c.add(a[i])\n    print(x)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 'YES'\n    s = set()\n    for i in range(n):\n        if b[i] > a[i] and 1 not in s or (b[i] < a[i] and -1 not in s):\n            ans = 'NO'\n            break\n        s.add(a[i])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = map(int, input().split())\n    b = map(int, input().split())\n    a = list(a)\n    b = list(b)\n    if a == b:\n        print('YES')\n    else:\n        nega = 0\n        posa = 0\n        for i in range(n):\n            if a[i] > b[i] and nega == 0:\n                print('NO')\n                break\n            if a[i] < b[i] and posa == 0:\n                print('NO')\n                break\n            if a[i] == -1:\n                nega = 1\n            if a[i] == 1:\n                posa = 1\n        else:\n            print('YES')", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    aa = list(map(int, input().split()))\n    bb = list(map(int, input().split()))\n    found1 = False\n    foundn1 = False\n    for (a, b) in zip(aa, bb):\n        if a < b and (not found1):\n            break\n        elif a > b and (not foundn1):\n            break\n        if a == 1:\n            found1 = True\n        if a == -1:\n            foundn1 = True\n    else:\n        print('YES')\n        continue\n    print('NO')", "def solve_case():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    seen_1 = False\n    seen_minus_1 = False\n    for (ai, bi) in zip(a, b):\n        if ai == bi:\n            if ai == 1:\n                seen_1 = True\n            elif ai == -1:\n                seen_minus_1 = True\n            continue\n        if bi < ai:\n            if not seen_minus_1:\n                return 'NO'\n            if ai == 1:\n                seen_1 = True\n            elif ai == -1:\n                seen_minus_1 = True\n            continue\n        if bi > ai:\n            if not seen_1:\n                return 'NO'\n            if ai == 1:\n                seen_1 = True\n            elif ai == -1:\n                seen_minus_1 = True\n    return 'YES'\n\ndef main():\n    tests = int(input())\n    for t in range(1, tests + 1):\n        print(solve_case())\nmain()", "t = int(input())\nresultList = []\nfor _ in range(t):\n    countPos1 = 0\n    countNeg1 = 0\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    flag = True\n    for i in range(n):\n        if b[i] > a[i] and countPos1 == 0:\n            flag = False\n            break\n        elif b[i] < a[i] and countNeg1 == 0:\n            flag = False\n            break\n        if a[i] == 1:\n            countPos1 += 1\n        elif a[i] == -1:\n            countNeg1 += 1\n    if flag == True:\n        resultList.append('YES')\n    else:\n        resultList.append('NO')\nfor x in resultList:\n    print(x)", "import sys\nt = int(input())\nfor _ in range(t):\n    pr = False\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ind_plus = 0\n    for i in a:\n        if i == 1:\n            break\n        ind_plus += 1\n    if ind_plus == n:\n        ind_plus -= 1\n    ind_minus = 0\n    for i in a:\n        if i == -1:\n            break\n        ind_minus += 1\n    if ind_minus == n:\n        ind_minus -= 1\n    if ind_plus > ind_minus:\n        if a[:ind_minus + 1] != b[:ind_minus + 1]:\n            print('NO')\n            continue\n        for i in range(1, ind_plus - ind_minus + 1):\n            if a[ind_minus + i] < b[ind_minus + i]:\n                print('NO')\n                pr = True\n                break\n        if not pr:\n            print('YES')\n    else:\n        if a[:ind_plus + 1] != b[:ind_plus + 1]:\n            print('NO')\n            continue\n        for i in range(1, ind_minus - ind_plus + 1):\n            if a[ind_plus + i] > b[ind_plus + i]:\n                print('NO')\n                pr = True\n                break\n        if not pr:\n            print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    i = 0\n    ne = 0\n    po = 0\n    f = 0\n    if l1[i] != l2[i]:\n        f = 1\n    else:\n        if l1[i] > 0:\n            po += 1\n        if l1[i] < 0:\n            ne += 1\n        while i < n:\n            if l1[i] > l2[i]:\n                if ne == 0:\n                    f = 1\n                    break\n            if l1[i] < l2[i]:\n                if po == 0:\n                    f = 1\n                    break\n            if l1[i] > 0:\n                po += 1\n            if l1[i] < 0:\n                ne += 1\n            if po > 0 and ne > 0:\n                f = 0\n                break\n            i += 1\n    if f == 1:\n        print('NO')\n    else:\n        print('YES')"]