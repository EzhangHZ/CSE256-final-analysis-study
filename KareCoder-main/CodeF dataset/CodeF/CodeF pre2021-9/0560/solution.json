["answers = []\n\ndef solve(n, arr):\n    if n == 1:\n        print(1)\n        return\n    if n == 2:\n        print(3)\n        return\n    ans = 3\n    for i in range(n - 3):\n        ans += 2\n        if arr[i] == arr[i + 1]:\n            continue\n        if arr[i] > arr[i + 1]:\n            if arr[i + 1] >= arr[i + 2]:\n                continue\n            ans += 1\n            if arr[i + 2] <= arr[i]:\n                continue\n            if arr[i + 2] > arr[i]:\n                if arr[i + 3] >= arr[i + 2]:\n                    continue\n                if arr[i + 3] > arr[i + 1]:\n                    ans += 1\n        else:\n            if arr[i + 1] <= arr[i + 2]:\n                continue\n            ans += 1\n            if arr[i + 2] >= arr[i]:\n                continue\n            if arr[i + 2] < arr[i]:\n                if arr[i + 3] <= arr[i + 2]:\n                    continue\n                if arr[i + 3] < arr[i + 1]:\n                    ans += 1\n    f = n - 3\n    ans += 2\n    one = arr[n - 3]\n    sec = arr[n - 2]\n    thi = arr[n - 1]\n    if one > sec and thi > sec:\n        ans += 1\n    if one < sec and thi < sec:\n        ans += 1\n    print(ans)\nT = int(input())\nwhile T:\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    solve(n, arr)\n    T -= 1\nfor ans in answers:\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    ans = n * 2 - 1\n    for i in range(2, n):\n        if nums[i - 1] < nums[i - 2]:\n            ans += nums[i - 1] < nums[i]\n        elif nums[i - 1] > nums[i - 2]:\n            ans += nums[i - 1] > nums[i]\n    for i in range(3, n):\n        (a, b) = (nums[i - 1], nums[i - 2])\n        if a > b:\n            (a, b) = (b, a)\n        if a < nums[i - 3] < b and a < nums[i] < b:\n            ans += 1\n    print(ans)", "from math import nan, isnan\n\ndef readline():\n    return map(int, input().split())\n\ndef is_good(x, y, z):\n    return (y - x) * (y - z) > 0\n\ndef solve():\n    n = int(input())\n    ans = n + (n - 1)\n    (p, q, r) = (nan, nan, nan)\n    for k in readline():\n        if is_good(q, r, k):\n            ans += 1\n            if is_good(p, q, r) and is_good(p, q, k) and is_good(p, r, k):\n                ans += 1\n        (p, q, r) = (q, r, k)\n    print(ans)\n\ndef main():\n    t = int(input())\n    for __ in range(t):\n        solve()\nmain()", "import sys\nimport math\nfrom collections import deque\nfrom bisect import bisect_left, bisect_right\nI = sys.stdin.readline\nII = lambda : int(I())\nIN = lambda x: map(int, x.split())\nFN = lambda x: map(float, x.split())\nL = lambda x: list(IN(x))\nM = 1000000007\nP = print\nT = True\nF = False\n\ndef find(a, b, c, d):\n    if c > b and c > d:\n        if b >= d:\n            return False\n        if a < c and a > b:\n            return True\n        else:\n            return False\n    elif c < b and c < d:\n        if b <= d:\n            return False\n        if a > c and a < b:\n            return True\n        return False\n    return False\nfor _ in range(II()):\n    n = II()\n    a = L(I())\n    s = 2 * n - 1\n    if n < 3:\n        P(s)\n        continue\n    s += 1\n    if a[0] <= a[1] <= a[2] or a[0] >= a[1] >= a[2]:\n        s -= 1\n    for i in range(3, n):\n        if a[i] >= a[i - 1] >= a[i - 2] or a[i] <= a[i - 1] <= a[i - 2]:\n            continue\n        elif find(a[i - 3], a[i - 2], a[i - 1], a[i]):\n            s += 2\n        else:\n            s += 1\n    P(s)", "t = int(input())\nfor p in range(0, t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = 2 * n - 1\n    for i in range(0, n - 2):\n        if l[i + 1] > l[i] and l[i + 1] > l[i + 2] or l[i] > l[i + 1] < l[i + 2]:\n            s = s + 1\n    for i in range(0, n - 3):\n        if (l[i + 1] < l[i] < l[i + 2] or l[i + 1] > l[i] > l[i + 2]) and (l[i + 1] < l[i + 3] < l[i + 2] or l[i + 2] < l[i + 3] < l[i + 1]):\n            s = s + 1\n    print(s)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = n + (n - 1)\n    for i in range(n - 2):\n        if a[i] < a[i + 1] and a[i + 1] > a[i + 2]:\n            count += 1\n        if a[i] > a[i + 1] and a[i + 1] < a[i + 2]:\n            count += 1\n    for i in range(n - 3):\n        if a[i + 1] > a[i] > a[i + 2] and a[i + 1] > a[i + 3] > a[i + 2]:\n            count += 1\n        if a[i + 1] < a[i] < a[i + 2] and a[i + 1] < a[i + 3] < a[i + 2]:\n            count += 1\n    print(count)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = [int(a) for a in input().split()]\n    ans = N + N - 1\n    for i in range(N - 2):\n        (a, b, c) = (A[i], A[i + 1], A[i + 2])\n        if a > b < c or a < b > c:\n            ans += 1\n    for i in range(N - 3):\n        (a, b, c, d) = (A[i], A[i + 1], A[i + 2], A[i + 3])\n        if b < a < c and b < d < c or (c < a < b and c < d < b):\n            ans += 1\n    print(ans)", "def fun(arr):\n    total = 2 * n - 1\n    for i in range(n - 2):\n        total += (arr[i] - arr[i + 1]) * (arr[i + 1] - arr[i + 2]) < 0\n    for i in range(n - 3):\n        total += (arr[i + 1] - arr[i + 3]) * (arr[i + 3] - arr[i + 2]) > 0 and (arr[i + 1] - arr[i]) * (arr[i] - arr[i + 2]) > 0\n    print(total)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    fun(arr)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = n + n - 1\n    f = 0\n    for i in range(n - 2):\n        if (l[i + 1] - l[i]) * (l[i + 2] - l[i + 1]) < 0:\n            ans += 1\n    for i in range(n - 3):\n        if (l[i + 1] - l[i]) * (l[i + 2] - l[i]) < 0 and (l[i + 3] - l[i + 1]) * (l[i + 3] - l[i + 2]) < 0:\n            ans += 1\n    print(ans)", "t = int(input())\nfor case in range(t):\n    n = int(input())\n    b = [int(x) for x in input().split()]\n    threes = 0\n    for i in range(2, n):\n        if b[i] >= b[i - 1] and b[i - 1] >= b[i - 2] or (b[i] <= b[i - 1] and b[i - 1] <= b[i - 2]):\n            pass\n        else:\n            threes += 1\n    fours = 0\n    for i in range(3, n):\n        if b[i] < b[i - 2] and b[i - 1] < b[i - 3] and (b[i] > b[i - 1]) and (b[i - 2] > b[i - 3]) or (b[i] > b[i - 2] and b[i - 1] > b[i - 3] and (b[i] < b[i - 1]) and (b[i - 2] < b[i - 3])):\n            fours += 1\n    print(2 * n - 1 + threes + fours)", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = [int(a) for a in input().split()]\n    ans = N + N - 1\n    for i in range(N - 2):\n        (a, b, c) = (A[i], A[i + 1], A[i + 2])\n        if a > b < c or a < b > c:\n            ans += 1\n    for i in range(N - 3):\n        (a, b, c, d) = (A[i], A[i + 1], A[i + 2], A[i + 3])\n        if b < a < c and b < d < c or (c < a < b and c < d < b):\n            ans += 1\n    print(ans)", "def fun(arr):\n    total = 2 * n - 1\n    for i in range(n - 2):\n        total += (arr[i] - arr[i + 1]) * (arr[i + 1] - arr[i + 2]) < 0\n    for i in range(n - 3):\n        total += (arr[i + 1] - arr[i + 3]) * (arr[i + 3] - arr[i + 2]) > 0 and (arr[i + 1] - arr[i]) * (arr[i] - arr[i + 2]) > 0\n    print(total)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    fun(arr)", "def check_if_good(a, b, c):\n    if a <= b <= c or a >= b >= c:\n        return False\n    return True\n\ndef solve(n, arr):\n    result = 2 * n - 1\n    for x in range(n - 2):\n        if check_if_good(arr[x], arr[x + 1], arr[x + 2]):\n            result += 1\n    for x in range(n - 3):\n        if check_if_good(arr[x], arr[x + 1], arr[x + 2]) and check_if_good(arr[x], arr[x + 1], arr[x + 3]) and check_if_good(arr[x], arr[x + 2], arr[x + 3]) and check_if_good(arr[x + 1], arr[x + 2], arr[x + 3]):\n            result += 1\n    print(result)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    solve(n, arr)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n < 3:\n        print(2 * n - 1)\n    else:\n        k = 0\n        ans = 2 * n - 1\n        for i in range(2, n):\n            if arr[i - 2] < arr[i - 1] and arr[i - 1] > arr[i] or (arr[i - 2] > arr[i - 1] and arr[i - 1] < arr[i]):\n                ans += 1\n                if k == 1 and (not (arr[i - 3] <= arr[i - 2] <= arr[i] or arr[i - 3] >= arr[i - 2] >= arr[i] or arr[i - 3] <= arr[i - 1] <= arr[i] or (arr[i - 3] >= arr[i - 1] >= arr[i]))):\n                    ans += 1\n                else:\n                    k = 1\n            else:\n                k = 0\n        print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    tot = 2 * n - 1\n    for i in range(n - 2):\n        tot += (arr[i] - arr[i + 1]) * (arr[i + 1] - arr[i + 2]) < 0\n    for i in range(n - 3):\n        tot += (arr[i + 1] - arr[i + 3]) * (arr[i + 3] - arr[i + 2]) > 0 and (arr[i + 1] - arr[i]) * (arr[i] - arr[i + 2]) > 0\n    print(tot)", "def check(a, b, c):\n    if a <= b and b <= c or (a >= b and b >= c):\n        return True\n    else:\n        return False\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [0] + list(map(int, input().split()))\n    w = n + n - 1\n    x = 0\n    if n >= 3:\n        x += n - 2\n        for i in range(1, n - 1):\n            if check(a[i], a[i + 1], a[i + 2]):\n                x -= 1\n    y = 0\n    if n >= 4:\n        y += n - 3\n        for i in range(1, n - 2):\n            if check(a[i], a[i + 1], a[i + 2]):\n                y -= 1\n            elif check(a[i], a[i + 1], a[i + 3]):\n                y -= 1\n            elif check(a[i], a[i + 2], a[i + 3]):\n                y -= 1\n            elif check(a[i + 1], a[i + 2], a[i + 3]):\n                y -= 1\n    answer = w + x + y\n    print(answer)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    total = 2 * n - 1\n    for i in range(n - 2):\n        total += (arr[i] - arr[i + 1]) * (arr[i + 1] - arr[i + 2]) < 0\n    for i in range(n - 3):\n        total += (arr[i + 1] - arr[i + 3]) * (arr[i + 3] - arr[i + 2]) > 0 and (arr[i + 1] - arr[i]) * (arr[i] - arr[i + 2]) > 0\n    print(total)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    total = 2 * n - 1\n    for i in range(n - 2):\n        total += (arr[i] - arr[i + 1]) * (arr[i + 1] - arr[i + 2]) < 0\n    for i in range(n - 3):\n        total += (arr[i + 1] - arr[i + 3]) * (arr[i + 3] - arr[i + 2]) > 0 and (arr[i + 1] - arr[i]) * (arr[i] - arr[i + 2]) > 0\n    print(total)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    tot = 2 * n - 1\n    for i in range(n - 2):\n        tot += (arr[i] - arr[i + 1]) * (arr[i + 1] - arr[i + 2]) < 0\n    for i in range(n - 3):\n        tot += (arr[i + 1] - arr[i + 3]) * (arr[i + 3] - arr[i + 2]) > 0 and (arr[i + 1] - arr[i]) * (arr[i] - arr[i + 2]) > 0\n    print(tot)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    total = 2 * n - 1\n    for i in range(n - 2):\n        total += (arr[i] - arr[i + 1]) * (arr[i + 1] - arr[i + 2]) < 0\n    for i in range(n - 3):\n        total += (arr[i + 1] - arr[i + 3]) * (arr[i + 3] - arr[i + 2]) > 0 and (arr[i + 1] - arr[i]) * (arr[i] - arr[i + 2]) > 0\n    print(total)", "from math import ceil, sqrt\n\ndef norm(a1, a2, a3):\n    if a1 >= a2 and a2 >= a3 or (a1 <= a2 and a2 <= a3):\n        return False\n    return True\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt = n * 2 - 1\n    for i in range(n - 2):\n        a1 = a[i]\n        a2 = a[i + 1]\n        a3 = a[i + 2]\n        if norm(a1, a2, a3):\n            cnt += 1\n    for i in range(n - 3):\n        a1 = a[i]\n        a2 = a[i + 1]\n        a3 = a[i + 2]\n        a4 = a[i + 3]\n        if not norm(a1, a2, a3):\n            continue\n        if not norm(a1, a2, a4):\n            continue\n        if not norm(a1, a3, a4):\n            continue\n        if not norm(a2, a3, a4):\n            continue\n        cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    total = 2 * n - 1\n    for i in range(n - 2):\n        total += (arr[i] - arr[i + 1]) * (arr[i + 1] - arr[i + 2]) < 0\n    for i in range(n - 3):\n        total += (arr[i + 1] - arr[i + 3]) * (arr[i + 3] - arr[i + 2]) > 0 and (arr[i + 1] - arr[i]) * (arr[i] - arr[i + 2]) > 0\n    print(total)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    counter = 2 * n - 1\n    i = 3\n    while i < n:\n        (a, b, c, d) = arr[i - 3:i + 1]\n        if b > d >= a > c or c > d >= a > b or c > a >= d > b or (c < d <= a < b):\n            counter += 1\n        i += 1\n    i = 2\n    while i < n:\n        (a, b, c) = arr[i - 2:i + 1]\n        if a < b > c or a > b < c:\n            counter += 1\n        i += 1\n    print(counter)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    tot = 2 * n - 1\n    for i in range(n - 2):\n        tot += (arr[i] - arr[i + 1]) * (arr[i + 1] - arr[i + 2]) < 0\n    for i in range(n - 3):\n        tot += (arr[i + 1] - arr[i + 3]) * (arr[i + 3] - arr[i + 2]) > 0 and (arr[i + 1] - arr[i]) * (arr[i] - arr[i + 2]) > 0\n    print(tot)", "def bad_triplet(a, b, c):\n    if a <= b and b <= c:\n        return True\n    if a >= b and b >= c:\n        return True\n    return False\n\ndef solve():\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    if n < 3:\n        return n + n - 1\n    good_subarrays = n + n - 1 + n - 2 + n - 3\n    for i in range(n - 2):\n        if bad_triplet(arr[i], arr[i + 1], arr[i + 2]):\n            good_subarrays -= 1\n    for i in range(n - 3):\n        if bad_triplet(arr[i], arr[i + 1], arr[i + 2]) or bad_triplet(arr[i], arr[i + 1], arr[i + 3]) or bad_triplet(arr[i + 1], arr[i + 2], arr[i + 3]) or bad_triplet(arr[i], arr[i + 2], arr[i + 3]):\n            good_subarrays -= 1\n    return good_subarrays\nfor _ in range(int(input())):\n    print(solve())", "import sys\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef LI1():\n    return list(map(int1, sys.stdin.readline().split()))\n\ndef LLI1(rows_number):\n    return [LI1() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline().rstrip()\ninf = 10 ** 16\nmd = 10 ** 9 + 7\n\ndef solve():\n    n = II()\n    aa = LI()\n    ans = n + n - 1\n    for i in range(n - 2):\n        if aa[i] <= aa[i + 1] <= aa[i + 2] or aa[i] >= aa[i + 1] >= aa[i + 2]:\n            continue\n        ans += 1\n    for i in range(n - 3):\n        mn = min(aa[i], aa[i + 3])\n        mx = max(aa[i], aa[i + 3])\n        MN = min(aa[i + 1], aa[i + 2])\n        MX = max(aa[i + 1], aa[i + 2])\n        if MN < mn and MX > mx:\n            ans += 1\n    print(ans)\nfor testcase in range(II()):\n    solve()", "def check(a, b, c):\n    if a <= b <= c or a >= b >= c:\n        return False\n    return True\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = n + n - 1\n    for i in range(n - 2):\n        if check(a[i], a[i + 1], a[i + 2]):\n            ans += 1\n    for i in range(n - 3):\n        if check(a[i], a[i + 1], a[i + 2]) and check(a[i], a[i + 1], a[i + 3]) and check(a[i], a[i + 2], a[i + 3]) and check(a[i + 1], a[i + 2], a[i + 3]):\n            ans += 1\n    print(ans)", "def check(a, b, c):\n    if a <= b <= c or a >= b >= c:\n        return False\n    return True\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = n + n - 1\n    for i in range(n - 2):\n        if check(a[i], a[i + 1], a[i + 2]):\n            ans += 1\n    for i in range(n - 3):\n        if check(a[i], a[i + 1], a[i + 2]) and check(a[i], a[i + 1], a[i + 3]) and check(a[i], a[i + 2], a[i + 3]) and check(a[i + 1], a[i + 2], a[i + 3]):\n            ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 2\n    j = 0\n    goods = n + n - 1\n    last_good = False\n    while i < len(a):\n        if not a[i - 2] <= a[i - 1] <= a[i] and (not a[i - 2] >= a[i - 1] >= a[i]):\n            if last_good:\n                if not a[i - 3] <= a[i - 2] <= a[i] and (not a[i - 3] >= a[i - 2] >= a[i]) and (not a[i - 3] >= a[i - 1] >= a[i]) and (not a[i - 3] <= a[i - 1] <= a[i]):\n                    goods += 1\n                goods += 1\n            else:\n                goods += 1\n                last_good = True\n        else:\n            last_good = False\n        i += 1\n    print(goods)", "import math\nt = int(input())\nfor hh in range(0, t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    ans = n\n    ans += n - 1\n    for i in range(0, n - 2):\n        val1 = a[i]\n        val2 = a[i + 1]\n        val3 = a[i + 2]\n        if val1 <= val2 and val2 <= val3:\n            k = 1\n        elif val1 >= val2 and val2 >= val3:\n            k = 1\n        else:\n            ans += 1\n    for i in range(0, n - 3):\n        val1 = a[i]\n        val2 = a[i + 1]\n        val3 = a[i + 2]\n        val4 = a[i + 3]\n        if val1 <= val2 and val2 <= val3:\n            k = 1\n        elif val1 >= val2 and val2 >= val3:\n            k = 1\n        elif val2 <= val3 and val3 <= val4:\n            k = 1\n        elif val2 >= val3 and val3 >= val4:\n            k = 1\n        elif val1 <= val2 and val2 <= val4:\n            k = 1\n        elif val1 >= val2 and val2 >= val4:\n            k = 1\n        elif val1 <= val3 and val3 <= val4:\n            k = 1\n        elif val1 >= val3 and val3 >= val4:\n            k = 1\n        else:\n            ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    total = 2 * n - 1\n    for i in range(n - 2):\n        total += (arr[i] - arr[i + 1]) * (arr[i + 1] - arr[i + 2]) < 0\n    for i in range(n - 3):\n        total += (arr[i + 1] - arr[i + 3]) * (arr[i + 3] - arr[i + 2]) > 0 and (arr[i + 1] - arr[i]) * (arr[i] - arr[i + 2]) > 0\n    print(total)", "t = int(input())\n\ndef check3(a, b, c):\n    return (a - b) * (c - b) > 0\n\ndef check4(a, b, c, d):\n    return check3(a, b, c) and check3(a, b, d) and check3(a, c, d) and check3(b, c, d)\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    res = n + n - 1\n    for i in range(n - 2):\n        if check3(a[i], a[i + 1], a[i + 2]):\n            res += 1\n    for i in range(n - 3):\n        if check4(a[i], a[i + 1], a[i + 2], a[i + 3]):\n            res += 1\n    print(res)", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 2 * n - 1\n    for i in range(n - 2):\n        a = arr[i]\n        b = arr[i + 1]\n        c = arr[i + 2]\n        if b > max(a, c) or b < min(a, c):\n            ans += 1\n    for i in range(n - 3):\n        a = arr[i]\n        b = arr[i + 1]\n        c = arr[i + 2]\n        d = arr[i + 3]\n        if max(a, d) < max(b, c) and min(a, d) > min(b, c):\n            ans += 1\n    print(ans)", "def ok3(a1, a2, a3):\n    if (a2 - a1) * (a2 - a3) > 0:\n        return 1\n    return 0\n\ndef ok4(a1, a2, a3, a4):\n    if ok3(a1, a2, a3) and ok3(a1, a2, a4) and ok3(a1, a3, a4) and ok3(a2, a3, a4):\n        return 1\n    return 0\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 2 * n - 1\n    for j in range(2, n):\n        if ok3(a[j - 2], a[j - 1], a[j]):\n            ans += 1\n    for j in range(3, n):\n        if ok4(a[j - 3], a[j - 2], a[j - 1], a[j]):\n            ans += 1\n    print(ans)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = n + n - 1\n    for i in range(n - 2):\n        if arr[i] == arr[i + 1] or arr[i + 1] == arr[i + 2] or arr[i] <= arr[i + 1] <= arr[i + 2] or (arr[i] >= arr[i + 1] >= arr[i + 2]):\n            continue\n        ans += 1\n        if i < n - 3:\n            a4 = arr[i + 3]\n            if arr[i + 1] == a4 or arr[i] <= arr[i + 1] <= a4 or arr[i] >= arr[i + 1] >= a4:\n                continue\n            if arr[i + 2] == a4 or arr[i + 1] <= arr[i + 2] <= a4 or arr[i + 1] >= arr[i + 2] >= a4:\n                continue\n            if arr[i] <= arr[i + 2] <= a4 or arr[i] >= arr[i + 2] >= a4:\n                continue\n            ans += 1\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "for _ in range(int(input())):\n    n = int(input())\n    yaxis = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        if i - 2 < 0:\n            count += i + 1\n            continue\n        count += 2\n        j = i - 1\n        k = i - 2\n        count += 1\n        if yaxis[i] >= yaxis[j] and yaxis[j] >= yaxis[k]:\n            count -= 1\n            continue\n        elif yaxis[i] <= yaxis[j] and yaxis[j] <= yaxis[k]:\n            count -= 1\n            continue\n        if k > 0:\n            l = k - 1\n            count += 1\n            if yaxis[i] >= yaxis[j] and yaxis[j] >= yaxis[l]:\n                count -= 1\n            elif yaxis[i] >= yaxis[k] and yaxis[k] >= yaxis[l]:\n                count -= 1\n            elif yaxis[j] >= yaxis[k] and yaxis[k] >= yaxis[l]:\n                count -= 1\n            elif yaxis[i] <= yaxis[j] and yaxis[j] <= yaxis[l]:\n                count -= 1\n            elif yaxis[i] <= yaxis[k] and yaxis[k] <= yaxis[l]:\n                count -= 1\n            elif yaxis[j] <= yaxis[k] and yaxis[k] <= yaxis[l]:\n                count -= 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    ans += n\n    ans += n - 1\n    for i in range(n - 2):\n        if (a[i + 1] - a[i]) * (a[i + 2] - a[i + 1]) < 0:\n            ans += 1\n    for i in range(n - 3):\n        if (a[i + 1] - a[i]) * (a[i + 2] - a[i + 1]) < 0:\n            if a[i + 2] < min(a[i], a[i + 1]):\n                if a[i + 2] < a[i + 3] < a[i + 1]:\n                    ans += 1\n            elif a[i + 2] > max(a[i], a[i + 1]):\n                if a[i + 2] > a[i + 3] > a[i + 1]:\n                    ans += 1\n    print(ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 2 * n - 1\n    for i in range(n - 2):\n        if a[i] <= a[i + 1] <= a[i + 2] or a[i] >= a[i + 1] >= a[i + 2]:\n            ans += 0\n        else:\n            ans += 1\n    for i in range(n - 3):\n        if a[i] <= a[i + 1] <= a[i + 2] or a[i] >= a[i + 1] >= a[i + 2]:\n            ans += 0\n        elif a[i] <= a[i + 1] <= a[i + 3] or a[i] >= a[i + 1] >= a[i + 3]:\n            ans += 0\n        elif a[i] <= a[i + 2] <= a[i + 3] or a[i] >= a[i + 2] >= a[i + 3]:\n            ans += 0\n        elif a[i + 1] <= a[i + 2] <= a[i + 3] or a[i + 1] >= a[i + 2] >= a[i + 3]:\n            ans += 0\n        else:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = n + n - 1\n    for i in range(n - 2):\n        if arr[i] <= arr[i + 1] and arr[i + 1] <= arr[i + 2] or (arr[i] >= arr[i + 1] and arr[i + 1] >= arr[i + 2]):\n            pass\n        else:\n            ans += 1\n    for i in range(n - 3):\n        if arr[i] <= arr[i + 1] and arr[i + 1] <= arr[i + 2] or (arr[i] >= arr[i + 1] and arr[i + 1] >= arr[i + 2]):\n            pass\n        elif arr[i] <= arr[i + 2] and arr[i + 2] <= arr[i + 3] or (arr[i] >= arr[i + 2] and arr[i + 2] >= arr[i + 3]):\n            pass\n        elif arr[i + 1] <= arr[i + 2] and arr[i + 2] <= arr[i + 3] or (arr[i + 1] >= arr[i + 2] and arr[i + 2] >= arr[i + 3]):\n            pass\n        elif arr[i] <= arr[i + 1] and arr[i + 1] <= arr[i + 3] or (arr[i] >= arr[i + 1] and arr[i + 1] >= arr[i + 3]):\n            pass\n        else:\n            ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = n + max(n - 1, 0) + max(n - 2, 0) + max(n - 3, 0)\n    for j in range(n - 2):\n        if a[j] <= a[j + 1] and a[j + 1] <= a[j + 2] or (a[j] >= a[j + 1] and a[j + 1] >= a[j + 2]):\n            c -= 1\n    for j in range(n - 3):\n        if a[j] <= a[j + 1] and a[j + 1] <= a[j + 2] or (a[j] >= a[j + 1] and a[j + 1] >= a[j + 2]):\n            c -= 1\n        elif a[j] <= a[j + 1] and a[j + 1] <= a[j + 3] or (a[j] >= a[j + 1] and a[j + 1] >= a[j + 3]):\n            c -= 1\n        elif a[j] <= a[j + 2] and a[j + 2] <= a[j + 3] or (a[j] >= a[j + 2] and a[j + 2] >= a[j + 3]):\n            c -= 1\n        elif a[j + 1] <= a[j + 2] and a[j + 2] <= a[j + 3] or (a[j + 1] >= a[j + 2] and a[j + 2] >= a[j + 3]):\n            c -= 1\n    print(c)", "import sys\nfrom math import *\nfrom functools import *\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 1\n    c3 = 0\n    c1 = n\n    c2 = n - 1\n    c4 = 0\n    while i < n - 1:\n        if (a[i] - a[i - 1]) * (a[i + 1] - a[i]) < 0:\n            c3 += 1\n            if i < n - 2 and (a[i + 2] - a[i + 1]) * (a[i + 1] - a[i]) < 0 and ((a[i + 2] - a[i]) * (a[i] - a[i - 1]) < 0) and ((a[i + 2] - a[i + 1]) * (a[i + 1] - a[i - 1]) < 0):\n                c4 += 1\n        i += 1\n    print(c1 + c2 + c3 + c4)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = n * 2 - 1\n    if n < 3:\n        print(ans)\n    elif n == 3:\n        if a[0] >= a[1] >= a[2] or a[0] <= a[1] <= a[2]:\n            print(ans)\n        else:\n            print(ans + 1)\n    else:\n        for i in range(n - 2):\n            if not (a[i] >= a[i + 1] >= a[i + 2] or a[i] <= a[i + 1] <= a[i + 2]):\n                ans += 1\n        for i in range(n - 3):\n            ans += 1\n            if a[i] >= a[i + 1] and (a[i + 2] <= a[i + 1] or a[i + 3] <= a[i + 1]):\n                ans -= 1\n            elif a[i] <= a[i + 1] and (a[i + 2] >= a[i + 1] or a[i + 3] >= a[i + 1]):\n                ans -= 1\n            elif a[i + 1] >= a[i + 2] >= a[i + 3] or a[i + 1] <= a[i + 2] <= a[i + 3]:\n                ans -= 1\n            elif a[i] >= a[i + 2] >= a[i + 3] or a[i] <= a[i + 2] <= a[i + 3]:\n                ans -= 1\n        print(ans)", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 2 * n - 1\n    for i in range(n - 2):\n        if a[i + 1] > a[i] and a[i + 1] > a[i + 2]:\n            ans += 1\n        if a[i + 1] < a[i] and a[i + 1] < a[i + 2]:\n            ans += 1\n    for i in range(n - 3):\n        if (a[i + 1] > max(a[i], a[i + 2], a[i + 3]) or a[i + 1] < min(a[i], a[i + 3], a[i + 2])) and (a[i + 2] > max(a[i], a[i + 1], a[i + 3]) or a[i + 2] < min(a[i], a[i + 3], a[i + 1])):\n            ans += 1\n    print(ans)", "def checktriple(ind, array):\n    (a, b, c) = (array[ind], array[ind + 1], array[ind + 2])\n    if a >= b and b >= c:\n        return False\n    elif a <= b and b <= c:\n        return False\n    return True\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    array = [int(j) for j in input().split()]\n    if n >= 3:\n        tri = n - 2\n    else:\n        tri = 0\n    for ind in range(n - 2):\n        if checktriple(ind, array) == False:\n            tri -= 1\n    if n >= 4:\n        qua = n - 3\n    else:\n        qua = 0\n    for ind in range(n - 3):\n        (a, b, c, d) = (array[ind], array[ind + 1], array[ind + 2], array[ind + 3])\n        if checktriple(ind, array) == True and checktriple(ind + 1, array) == True and (checktriple(0, [a, b, d]) == True) and (checktriple(0, [a, c, d]) == True):\n            pass\n        else:\n            qua -= 1\n    print(tri + qua + 2 * n - 1)", "for _ in range(int(input())):\n    onre = 557687\n    n = int(input())\n    sgrbjhsgdv = 54\n    a = list(map(int, input().split()))\n    dhbf = 678\n    ans = n + n - 1\n    gfnfd = 354575\n    for i in range(0, n - 2):\n        if a[i] <= a[i + 1] <= a[i + 2] or a[i] >= a[i + 1] >= a[i + 2]:\n            continue\n        ans += 1\n        fhdrrdgfb = 67657685\n    for i in range(0, n - 3):\n        srhgbd = 575465\n        if min(a[i], a[i + 2]) <= a[i + 1] <= max(a[i], a[i + 2]):\n            continue\n        if min(a[i], a[i + 3]) <= a[i + 1] <= max(a[i], a[i + 3]):\n            continue\n        dhbgfgdtr = 5788687\n        if min(a[i], a[i + 3]) <= a[i + 2] <= max(a[i], a[i + 3]):\n            continue\n        if min(a[i + 1], a[i + 3]) <= a[i + 2] <= max(a[i + 1], a[i + 3]):\n            continue\n        dthbghtr = 58765876\n        ans += 1\n    srdhbe = 5545545\n    print(ans)", "def is_bad(l):\n    if l[0] <= l[1] <= l[2] or l[0] >= l[1] >= l[2]:\n        return True\n    if l[0] <= l[1] <= l[3] or l[0] >= l[1] >= l[3]:\n        return True\n    if l[0] <= l[2] <= l[3] or l[0] >= l[2] >= l[3]:\n        return True\n    if l[1] <= l[2] <= l[3] or l[1] >= l[2] >= l[3]:\n        return True\n    return False\n\ndef solve():\n    n = int(input())\n    inp = list(map(int, input().split()))\n    ans = n + n - 1\n    for i in range(n - 2):\n        if all((inp[i + x] <= inp[i + x + 1] for x in range(2))) or all((inp[i + x] >= inp[i + x + 1] for x in range(2))):\n            pass\n        else:\n            ans += 1\n    for i in range(n - 3):\n        if is_bad(inp[i:i + 4]):\n            pass\n        else:\n            ans += 1\n    print(ans)\ntests = int(input())\nfor _ in range(tests):\n    solve()", "def is_good(p, q, r):\n    if q > max(p, r) or q < min(p, r):\n        return True\n    else:\n        return False\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    good = n + (n - 1)\n    for i in range(0, n - 3, 1):\n        bool = is_good(a[i], a[i + 1], a[i + 2]) and is_good(a[i], a[i + 1], a[i + 3]) and is_good(a[i], a[i + 2], a[i + 3]) and is_good(a[i + 1], a[i + 2], a[i + 3])\n        if bool:\n            good += 1\n    for i in range(0, n - 2, 1):\n        bool = is_good(a[i], a[i + 1], a[i + 2])\n        if bool:\n            good += 1\n    print(good)", "t = int(input())\nfor tests in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    ans = 0\n    for i in range(1, n - 1):\n        if a[i - 1] >= a[i] and a[i] >= a[i + 1] or (a[i - 1] <= a[i] and a[i] <= a[i + 1]):\n            continue\n        else:\n            ans += 1\n    for i in range(n - 3):\n        if a[i] >= a[i + 1] and a[i + 1] >= a[i + 3] or (a[i] <= a[i + 1] and a[i + 1] <= a[i + 3]) or (a[i] >= a[i + 1] and a[i + 1] >= a[i + 2]) or (a[i] <= a[i + 1] and a[i + 1] <= a[i + 2]) or (a[i + 1] >= a[i + 2] and a[i + 2] >= a[i + 3]) or (a[i + 1] <= a[i + 2] and a[i + 2] <= a[i + 3]) or (a[i] >= a[i + 2] and a[i + 2] >= a[i + 3]) or (a[i] <= a[i + 2] and a[i + 2] <= a[i + 3]):\n            continue\n        else:\n            ans += 1\n    ans += n + (n - 1)\n    print(ans)", "one = 1\nfor _ in range(int(input())):\n    zero = 0\n    n = int(input())\n    one = 1\n    a = list(map(int, input().split()))\n    zero = 0\n    ans = n + n - 1\n    one = 1\n    for i in range(0, n - 2):\n        if a[i] <= a[i + 1] <= a[i + 2] or a[i] >= a[i + 1] >= a[i + 2]:\n            one = 1\n            continue\n        zero = 0\n        ans += 1\n        one = 1\n    for i in range(0, n - 3):\n        zero = 0\n        if min(a[i], a[i + 2]) <= a[i + 1] <= max(a[i], a[i + 2]):\n            one = 1\n            continue\n        zero = 0\n        if min(a[i], a[i + 3]) <= a[i + 1] <= max(a[i], a[i + 3]):\n            one = 1\n            continue\n        zero = 0\n        if min(a[i], a[i + 3]) <= a[i + 2] <= max(a[i], a[i + 3]):\n            one = 1\n            continue\n        zero = 0\n        if min(a[i + 1], a[i + 3]) <= a[i + 2] <= max(a[i + 1], a[i + 3]):\n            one = 1\n            continue\n        zero = 0\n        ans += 1\n        one = 1\n    print(ans)\n    zero = 0", "def check(a):\n    l = len(a)\n    if l == 1 or l == 2:\n        return True\n    elif l > 4:\n        return False\n    elif l == 3:\n        if a[0] <= a[1] and a[1] <= a[2]:\n            return False\n        elif a[0] >= a[1] and a[1] >= a[2]:\n            return False\n        else:\n            return True\n    elif a[1] < a[3] and a[3] < a[2] and (a[1] < a[0]) and (a[0] < a[2]):\n        return True\n    elif a[1] > a[3] and a[3] > a[2] and (a[1] > a[0]) and (a[0] > a[2]):\n        return True\n    else:\n        return False\nt = int(input())\nfor c in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(0, n):\n        for j in range(i, n):\n            if check(a[i:j + 1]):\n                ans += 1\n            else:\n                break\n    print(ans)", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    ans = 2 * n - 1\n    cnt = 0\n    cnn = 0\n    for i in range(2, n):\n        if x[i - 1] >= min(x[i], x[i - 2]) and x[i - 1] <= max(x[i - 2], x[i]):\n            cnn += 1\n    for i in range(3, n):\n        if x[i - 1] >= min(x[i], x[i - 2]) and x[i - 1] <= max(x[i - 2], x[i]):\n            cnt += 1\n        elif x[i - 2] >= min(x[i - 1], x[i - 3]) and x[i - 2] <= max(x[i - 3], x[i - 1]):\n            cnt += 1\n        elif x[i - 1] >= min(x[i], x[i - 3]) and x[i - 1] <= max(x[i - 3], x[i]):\n            cnt += 1\n        elif x[i - 2] >= min(x[i], x[i - 3]) and x[i - 2] <= max(x[i - 3], x[i]):\n            cnt += 1\n    if n > 2:\n        ans += n - 2 - cnn\n    if n > 3:\n        ans += n - 3 - cnt\n    print(ans)", "def _sum_(n):\n    res = 0\n    for i in range(1, min(5, n + 1)):\n        res += n + 1 - i\n    return res\n\ndef test(b):\n    for i in range(4):\n        for j in range(i + 1, 4):\n            for k in range(j + 1, 4):\n                if b[i] <= b[j] <= b[k] or b[i] >= b[j] >= b[k]:\n                    return True\n    return False\nfor q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = _sum_(n)\n    for i in range(2, n):\n        if a[i - 2] <= a[i - 1] <= a[i]:\n            ans -= 1\n        elif a[i - 2] >= a[i - 1] >= a[i]:\n            ans -= 1\n    for i in range(n - 3):\n        if test(a[i:i + 4]):\n            ans -= 1\n    print(ans)", "def argsort(a):\n    (ind, _) = zip(*sorted(enumerate(a), key=lambda x: x[1]))\n    return ind\n\ndef solve(A):\n    out = len(A) * 2 - 1\n    for i in range(len(A) - 2):\n        ind = argsort(A[i:i + 3])\n        if ind in {(0, 2, 1), (1, 2, 0), (2, 0, 1), (1, 0, 2)} and A[i + 1] != A[i] and (A[i + 1] != A[i + 2]):\n            out += 1\n        else:\n            continue\n        if A[i] == A[i + 2]:\n            continue\n        if i < len(A) - 3:\n            ind = argsort(A[i:i + 4])\n            if ind in {(1, 3, 0, 2), (2, 3, 0, 1), (1, 0, 3, 2), (2, 0, 3, 1)} and A[i + 3] != A[i + 1] and (A[i + 3] != A[i + 2]):\n                out += 1\n    return out\nT = int(input())\nfor t in range(T):\n    input()\n    (*A,) = map(int, input().split())\n    print(solve(A))", "import sys\nt = int(input())\n\ndef find(lis):\n    n = len(lis)\n    for a in range(n - 2):\n        for b in range(a + 1, n):\n            for c in range(b + 1, n):\n                if lis[a] <= lis[b] and lis[b] <= lis[c]:\n                    return False\n                if lis[a] >= lis[b] and lis[b] >= lis[c]:\n                    return False\n    return True\nfor tt in range(t):\n    answer = 0\n    n = int(sys.stdin.readline())\n    sequence = list(map(int, sys.stdin.readline().split()))\n    start = 0\n    for i in range(min(n, 2)):\n        answer += i + 1\n    if n >= 3:\n        if find(sequence[0:3]):\n            answer += 3\n        else:\n            answer += 2\n    for i in range(3, n):\n        if find(sequence[i - 3:i + 1]):\n            answer += 4\n        elif find(sequence[i - 2:i + 1]):\n            answer += 3\n        else:\n            answer += 2\n    print(answer)", "def is_bad(l):\n    for i in range(2):\n        for j in range(i + 1, 3):\n            for k in range(j + 1, 4):\n                if l[i] >= l[j] >= l[k] or l[i] <= l[j] <= l[k]:\n                    return True\n    return False\n\ndef solve():\n    n = int(input())\n    inp = list(map(int, input().split()))\n    ans = n + n - 1\n    for i in range(n - 2):\n        if all((inp[i + x] <= inp[i + x + 1] for x in range(2))) or all((inp[i + x] >= inp[i + x + 1] for x in range(2))):\n            pass\n        else:\n            ans += 1\n    for i in range(n - 3):\n        if is_bad(inp[i:i + 4]):\n            pass\n        else:\n            ans += 1\n    print(ans)\ntests = int(input())\nfor _ in range(tests):\n    solve()", "def solve():\n    n = int(input())\n    a = [int(i) for i in input().split(' ')]\n    ans = 2 * n - 1\n    for i in range(n - 2):\n        if not (a[i] <= a[i + 1] and a[i + 1] <= a[i + 2] or (a[i] >= a[i + 1] and a[i + 1] >= a[i + 2])):\n            ans += 1\n    for i in range(n - 3):\n        extra = 1\n        for l in range(i, i + 2):\n            for r in range(i + 2, i + 4):\n                for mid in range(l + 1, r):\n                    if a[l] <= a[mid] and a[mid] <= a[r] or (a[l] >= a[mid] and a[mid] >= a[r]):\n                        extra = 0\n        ans += extra\n    print(ans)\nt = int(input())\nwhile t > 0:\n    t -= 1\n    solve()", "f = lambda x: x == sorted(x) or x[::-1] == sorted(x)\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    o = 0\n    for i in range(n - 2):\n        if not f(a[i:i + 3]):\n            o += 1\n    for i in range(n - 3):\n        if not any((f([a[i + j] for j in range(4) if j != k]) for k in range(4))):\n            o += 1\n    print(o + n + n - 1)", "import math\nt = int(input())\n\ndef check(x1, y1, x2, y2, x3, y3):\n    t1 = abs(x1 - x2) + abs(y1 - y2)\n    t2 = abs(x2 - x3) + abs(y2 - y3)\n    t3 = abs(x1 - x3) + abs(y1 - y3)\n    if t1 + t2 == t3 or t2 + t3 == t1 or t1 + t3 == t2:\n        return False\n    return True\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().rstrip().split()))\n    count = n + n - 1\n    for i in range(n - 2):\n        if check(arr[i], i, arr[i + 1], i + 1, arr[i + 2], i + 2):\n            count += 1\n    for i in range(n - 3):\n        if check(arr[i], i, arr[i + 1], i + 1, arr[i + 2], i + 2):\n            if check(arr[i], i, arr[i + 1], i + 1, arr[i + 3], i + 3):\n                if check(arr[i], i, arr[i + 3], i + 3, arr[i + 2], i + 2):\n                    if check(arr[i + 3], i + 3, arr[i + 1], i + 1, arr[i + 2], i + 2):\n                        count += 1\n    print(count)", "n_tests = int(input())\n\ndef is_good(array):\n    l = len(array)\n    for i in range(l):\n        for j in range(i + 1, l):\n            for k in range(j + 1, l):\n                if array[k] >= array[j] and array[j] >= array[i] or (array[k] <= array[j] and array[j] <= array[i]):\n                    return False\n    return True\n\ndef process():\n    n = int(input())\n    vals = list(map(int, input().split()))\n    ans = n + n - 1\n    for i in range(n):\n        for j in range(i + 2, n):\n            if not is_good(vals[i:j + 1]):\n                break\n            ans += 1\n    print(ans)\nfor i in range(n_tests):\n    process()", "def check(arr):\n    for a in range(len(arr) - 2):\n        for b in range(a + 1, len(arr) - 1):\n            for c in range(b + 1, len(arr)):\n                r1 = arr[b] - arr[a]\n                r2 = arr[c] - arr[b]\n                if r1 <= 0 and r2 <= 0:\n                    return True\n                if r1 >= 0 and r2 >= 0:\n                    return True\n    return False\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    res = 0\n    for right in range(0, n):\n        for left in range(max(0, right - 3), right + 1):\n            if not check(a[left:right + 1]):\n                res += 1\n    print(res)", "def o(p1):\n    r = len(p1)\n    if r < 3:\n        return True\n    if r >= 5:\n        return False\n    for i in range(r):\n        for k in range(i + 1, r):\n            for s in range(k + 1, r):\n                if p1[i] <= p1[k] and p1[k] <= p1[s] or (p1[i] >= p1[k] and p1[k] >= p1[s]):\n                    return False\n    return True\nz = int(input())\nfor _ in range(z):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    i = 0\n    an = 0\n    while i < n:\n        y = []\n        for j in range(i, n):\n            y.append(arr[j])\n            if o(y):\n                an += 1\n            else:\n                break\n        i += 1\n    print(an)", "def ok(b):\n    if len(b) <= 2:\n        return True\n    n = len(b)\n    for i in range(n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if b[i] >= b[j] >= b[k] or b[i] <= b[j] <= b[k]:\n                    return False\n    return True\n\ndef findCount():\n    n = int(input())\n    nums = list(map(int, input().split()))\n    groups = []\n    ans = 0\n    for i in range(n):\n        b = []\n        for j in range(i, n):\n            b.append(nums[j])\n            if ok(b):\n                ans += 1\n            else:\n                break\n    print(ans)\n\ndef findSubarrays():\n    t = int(input())\n    for k in range(t):\n        findCount()\nfindSubarrays()", "import math\nnum_cases = int(input())\n\ndef last_idx(array, curr_idx):\n    dp_lower = [0 for _ in range(10)]\n    dp_higher = [0 for _ in range(10)]\n    for i in range(curr_idx - 1, -1, -1):\n        for j in range(curr_idx, i, -1):\n            if array[i] <= array[j]:\n                dp_lower[curr_idx - i] = max(dp_lower[curr_idx - i], dp_lower[curr_idx - j] + 1)\n            if array[i] >= array[j]:\n                dp_higher[curr_idx - i] = max(dp_higher[curr_idx - i], dp_higher[curr_idx - j] + 1)\n            if dp_higher[curr_idx - i] == 2 or dp_lower[curr_idx - i] == 2:\n                return i + 1\n    return 0\nfor _ in range(num_cases):\n    _ = input()\n    array = [int(x) for x in input().split(' ')]\n    last_point = 0\n    cutoff = 0\n    ans = 0\n    i = 0\n    while i < len(array):\n        l = last_idx(array, i)\n        ans += i - l + 1\n        i += 1\n    print(ans)"]