["N = int(input())\nA = list(map(int, input().split(' ')))\nB = list(map(int, input().split(' ')))\nif A == B:\n    print(-1)\nelse:\n    c = 0\n    k = 0\n    for i in range(N):\n        if A[i] == 1 and B[i] == 0:\n            c += 1\n        if A[i] == B[i] == 1:\n            k += 1\n    if c:\n        print((sum(B) - k + 1 + c - 1) // c)\n    else:\n        print(-1)", "n = int(input())\na = [int(l) for l in input().split()]\nb = [int(l) for l in input().split()]\nunfav = 0\nfav = 0\nimp = 1\nfor i in range(n):\n    d = a[i] - b[i]\n    if d == -1:\n        unfav += 1\n    elif d == 1:\n        fav += 1\n        imp = 0\nif imp == 0:\n    if (unfav + 1) % fav == 0:\n        print((unfav + 1) // fav)\n    elif (unfav + 1) % fav > 0:\n        print((unfav + 1) // fav + 1)\nelse:\n    print('-1')", "n = int(input())\nl1 = list(map(int, input().split()))\nl2 = list(map(int, input().split()))\ns = 0\nr = 0\nfor i in range(n):\n    if l1[i] == 1 and l2[i] == 0:\n        s = s + 1\n    elif l1[i] == 0 and l2[i] == 1:\n        r = r + 1\nif s == r:\n    if s == 0:\n        print(-1)\n    else:\n        print(2)\nelif s > r:\n    print(1)\nelif s != 0:\n    c = r // s + 1\n    print(c)\nelse:\n    print(-1)", "def solve():\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    cntx = 0\n    cnty = 0\n    for i in range(n):\n        if x[i] == 1 and y[i] != 1:\n            cntx += 1\n        elif x[i] != 1 and y[i] == 1:\n            cnty += 1\n    if cntx == cnty and cntx == n or cntx == 0:\n        print(-1)\n    else:\n        print(cnty // cntx + 1)\nfor _ in range(1):\n    solve()", "t = int(input())\nrb1 = input().split()\nrb2 = input().split()\nls = []\nx1 = 0\nx2 = 0\nfor i in range(t):\n    if rb1[i] == '0' and rb2[i] == '1':\n        x2 += 1\n    if rb1[i] == '1' and rb2[i] == '0':\n        x1 += 1\nif x1 == 0:\n    print(-1)\nelse:\n    print(int(x2 / x1 + 1))", "n = int(input())\nrlist = list(map(int, input().split()))\nblist = list(map(int, input().split()))\nasum = 1\ncount = 0\nfor i in range(n):\n    if rlist[i] == 0 and blist[i] == 1:\n        asum += 1\n    if rlist[i] == 1 and blist[i] == 0:\n        count += 1\nif count == 0:\n    print(-1)\nelse:\n    print(-(-asum // count))", "import math\nn = int(input())\nstr1 = str(input())\nstr2 = str(input())\nrobo1 = str1.split(' ')\nrobo2 = str2.split(' ')\nR1 = 0\nR2 = 0\nfor i in range(n):\n    if robo1[i] == '1' and robo2[i] == '0':\n        R1 += 1\n    if robo2[i] == '1' and robo1[i] == '0':\n        R2 += 1\nif R1 != 0:\n    n = math.ceil(R2 / R1)\nif R1 == 0:\n    print(-1)\nelif n == int(R2 / R1):\n    print(n + 1)\nelse:\n    print(n)", "input()\nr = input().split()\nb = input().split()\nm = 0\nd = 0\nfor (x, y) in zip(r, b):\n    if x == y:\n        continue\n    m += +(y == '1')\n    d += +(y == '0')\nif d > 0:\n    print(m // d + 1)\nelse:\n    print(-1)", "input()\nr = input().split()\nb = input().split()\nm = 0\nd = 0\nfor (x, y) in zip(r, b):\n    if x == y:\n        continue\n    m += +(y == '1')\n    d += +(y == '0')\nif d > 0:\n    print(m // d + 1)\nelse:\n    print(-1)", "I = lambda : map(int, input().split())\nn = int(input())\na = list(zip(I(), I()))\nx = a.count((1, 0))\nif x > 0:\n    y = a.count((0, 1))\n    if x > y:\n        print(1)\n    else:\n        print((y + 1 + x - 1) // x)\nelse:\n    print(-1)", "n = int(input())\nr = list(map(int, input().split()))\nb = list(map(int, input().split()))\n(c1, c2) = (0, 0)\nfor i in range(n):\n    if r[i] and (not b[i]):\n        c1 += 1\n    elif not r[i] and b[i]:\n        c2 += 1\nif c1:\n    print((c2 + c1) // c1)\nelse:\n    print(-1)", "n = int(input())\n(a, b) = ([*map(int, input().split())], [*map(int, input().split())])\nx = y = 0\nfor i in range(n):\n    if a[i] and (not b[i]):\n        x += 1\n    if not a[i] and b[i]:\n        y += 1\nif not x:\n    print(-1)\nelse:\n    print(-((-y - 1) // x))", "n = int(input())\nlist1 = [int(num) for num in input().split()]\nlist2 = [int(num) for num in input().split()]\ncc = 0\nrobo = 0\nbio = 0\nfor i in range(0, len(list1)):\n    if list1[i] == 1:\n        robo += 1\n        if list1[i] == 1 and list2[i] != 1:\n            cc += 1\n    if list2[i] == 1:\n        bio += 1\nif cc == 0:\n    print(-1)\nelif robo > bio:\n    print(1)\nelse:\n    robo = robo - cc\n    diff = bio - robo + 1\n    if diff % cc == 0:\n        max1 = diff // cc\n    else:\n        max1 = diff // cc + 1\n    print(max1)", "def solve():\n    n = int(input())\n    r = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    (x, y, z) = (0, 0, 0)\n    for i in range(n):\n        if r[i] > 0 and b[i] > 0:\n            x += 1\n        elif r[i] > 0:\n            y += 1\n        elif b[i] > 0:\n            z += 1\n    if y == 0:\n        print(-1)\n        return\n    print(z // y + 1)\nt = 1\nfor i in range(t):\n    solve()", "import sys\ninput = sys.stdin.readline\nn = int(input())\nr = input().split()\nb = input().split()\n(c, d) = (0, 0)\nfor i in range(n):\n    if r[i] == '1' and b[i] == '0':\n        c += 1\n    elif r[i] == '0' and b[i] == '1':\n        d += 1\nprint(-1 if c == 0 else 1 if c > d else d // c + 1)", "n = int(input())\nr = list(map(int, input().split()))\nb = list(map(int, input().split()))\nrt = 0\nbt = 0\nfor i in range(n):\n    if r[i] != b[i]:\n        if r[i] > b[i]:\n            rt += 1\n        else:\n            bt += 1\nif rt > bt:\n    print('1')\nelif rt == 0:\n    print('-1')\nelif bt % rt == 0:\n    print(bt // rt + 1)\nelse:\n    print((bt + (rt - bt % rt)) // rt)", "I = input\nI()\nr = p = 0\nfor (x, y) in zip(I(), I()):\n    r += x > y\n    p += x < y\nprint(r and p // r + 1 or -1)", "input()\na = b = 0\nfor (x, y) in zip(input(), input()):\n    a += x > y\n    b += x < y\nprint(-1 if a == 0 else b // a + 1)", "count_of_ex = int(input())\nrob1 = [int(x) for x in input().split()]\nrob2 = [int(x) for x in input().split()]\nrob1_dom = 0\nrob2_dom = 0\ni = 0\nwhile i < count_of_ex:\n    if rob2[i] > rob1[i]:\n        rob2_dom += 1\n    elif rob1[i] > rob2[i]:\n        rob1_dom += 1\n    i += 1\nif rob1_dom == 0:\n    print(-1)\nelif rob1_dom > rob2_dom:\n    print(1)\nelse:\n    print(rob2_dom // rob1_dom + 1)", "import math\nn = int(input())\narr = list(map(int, input().split()))\narr2 = list(map(int, input().split()))\ntotal1 = 0\ntotal2 = 0\narr_count = 0\ntotal1 = sum(arr)\ntotal2 = sum(arr2)\nif total2 == len(arr2):\n    print(-1)\n    exit()\nfor i in range(len(arr)):\n    if arr[i] == 1 and arr[i] == arr2[i]:\n        arr_count += 1\nif arr_count == total1:\n    print(-1)\n    exit()\ntotal1 -= arr_count\ntotal2 -= arr_count\nval = math.ceil((total2 + 1) / total1)\nprint(val)", "n = int(input())\narr1 = list(map(int, input().split()))\narr2 = list(map(int, input().split()))\ntotal1 = sum(arr1)\ntotal2 = sum(arr2)\ncount = 0\nones = 0\nfor i in range(len(arr1)):\n    if arr1[i] == 1 and arr2[i] == 0:\n        count += 1\n    elif arr1[i] == 1 and arr2[i] == 1:\n        ones += 1\nneeded = -1\nif total1 > total2:\n    print(1)\n    exit()\nif count >= 1 and total1 <= total2:\n    total2 = total2 - ones\n    needed = total2 // count + 1\nprint(needed)", "n = int(input())\nr = (int(i) for i in input().split())\nb = (int(i) for i in input().split())\n(rs, bs) = (0, 0)\nfor (r, b) in zip(r, b):\n    rs += r > b\n    bs += b > r\nres = -1 if rs == 0 else (bs + rs) // rs\nprint(res)", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n(p, q) = (0, 0)\nfor i in range(n):\n    if not (a[i] and b[i]):\n        if a[i] == 1:\n            p += 1\n        elif b[i] == 1:\n            q += 1\nif p == 0:\n    print(-1)\nelse:\n    print(q // p + 1)", "n = int(input())\nr = list(map(int, input().split()))\nb = list(map(int, input().split()))\na = 0\nc = 0\nfor i in range(n):\n    if r[i] == 0 and b[i] == 1:\n        a += 1\n    elif r[i] == 1 and b[i] == 0:\n        c += 1\nif c == 0:\n    print(-1)\nelif c > a:\n    print(1)\nelse:\n    print((a + c) // c)", "from math import ceil\nn = int(input())\nl1 = list(map(int, input().split()))\nl2 = list(map(int, input().split()))\nc1 = c2 = 0\nfor i in range(n):\n    if l1[i] != l2[i]:\n        c1 += l1[i]\n        c2 += l2[i]\nif c1 == 0:\n    print(-1)\nelif c1 > c2:\n    print(1)\nelse:\n    print(ceil((c2 + 1) / c1))", "i = lambda : input().split()\ni()\n(a, b) = (i(), i())\nc = d = 0\nfor (i, x) in enumerate(a):\n    c += x > b[i]\n    d += b[i] > x\nprint([[1 - -(d + 1 - c) // max(1, c), 1][c > d], -1][c < 1])", "i = lambda : input().split()\ni()\n(a, b) = (i(), i())\nc = d = 0\nfor (i, x) in enumerate(a):\n    c += x > b[i]\n    d += b[i] > x\nprint([[1 - -(d + 1 - c) // max(1, c), 1][c > d], -1][c < 1])", "import math\nlength = int(input())\nfirst = list(map(int, input().split()))\nsecond = list(map(int, input().split()))\nsecond_count = sum(second)\nfirst_count = sum(first)\nif second_count == len(second):\n    print(-1)\nelse:\n    intersection_count = 0\n    i = 0\n    while i < len(first):\n        if first[i] == 1 and second[i] == 1:\n            intersection_count += 1\n        i += 1\n    if intersection_count == first_count:\n        print(-1)\n        exit()\n    first_count -= intersection_count\n    second_count -= intersection_count\n    result = (second_count + 1) / first_count\n    minumum = math.ceil(result)\n    print(minumum)", "import sys, os, io\nn = int(input())\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\nca = 0\ncb = 0\nflag = 0\nfor i in range(n):\n    if a[i] == 1 and b[i] == 0:\n        flag = 1\n        ca += 1\n    elif a[i] == 0 and b[i] == 1:\n        flag = 1\n        cb += 1\nif ca == 0:\n    print(-1)\nelif cb < ca:\n    print(1)\nelse:\n    cb += 1\n    if cb % ca == 0:\n        print(cb // ca)\n    else:\n        print(cb // ca + 1)", "import math\n\ndef swape(n, r, b):\n    rc = r.count(1)\n    bc = b.count(1)\n    if bc == n or rc == 0 or r == b:\n        return -1\n    if rc > bc:\n        return 1\n    temp = 0\n    for i in range(n):\n        if r[i] == 1 and b[i] == 0:\n            temp += 1\n    ans = math.ceil((bc - rc + 1) / temp) + 1\n    return ans\nn = int(input())\nr = list(map(int, input().rstrip().split()))\nb = list(map(int, input().rstrip().split()))\nans = swape(n, r, b)\nprint(ans)", "from math import ceil, floor\nfor _ in range(1):\n    n = int(input())\n    r = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        if r[i] != 1 and r[i] != b[i]:\n            count += 1\n    if sum(r) > sum(b):\n        print(1)\n    else:\n        count += 1\n        r_count = 0\n        ss = 0\n        for i in range(n):\n            if r[i] == 1 and r[i] != b[i]:\n                r_count += 1\n            if r[i] == 1 and b[i] == 1:\n                ss += 1\n        try:\n            ans = count // r_count\n            k = count % r_count\n            if k > 0 and k <= r_count:\n                ans += 1\n            elif k > 0 and k > r_count:\n                ans += ceil(k / r_count)\n            print(ans)\n        except:\n            print(-1)", "n = int(input())\nr = list(map(int, input().split()))\nb = list(map(int, input().split()))\n(x, y) = (0, 0)\nfor i in range(n):\n    if r[i] == 0 and b[i] == 1:\n        x += 1\n    if r[i] == 1 and b[i] == 0:\n        y += 1\nif y == 0:\n    print(-1)\nelse:\n    print(x // y + 1)", "n = int(input())\nr = list(map(int, input().split()))\nb = list(map(int, input().split()))\n(x, y) = (0, 0)\nfor i in range(n):\n    if r[i] == 0 and b[i] == 1:\n        x += 1\n    if r[i] == 1 and b[i] == 0:\n        y += 1\nif y == 0:\n    print(-1)\nelse:\n    print(x // y + 1)", "n = int(input())\nw = list(map(int, input().split()))\nl = list(map(int, input().split()))\nunsol = 0\nsol = 0\nfor i in range(n):\n    if w[i] == 1 and l[i] == 0:\n        sol += 1\n    elif w[i] == 0 and l[i] == 1:\n        unsol += 1\nif sol == 0:\n    print(-1)\nelse:\n    print(unsol // sol + 1)", "import math\nn = int(input())\nl = list(map(int, input().split()))\nm = list(map(int, input().split()))\nh = 0\nv = 0\nfor i in range(n):\n    if l[i] == 1 and m[i] == 0:\n        h += 1\n    if m[i] == 1 and l[i] == 0:\n        v += 1\nif h > v:\n    print(1)\nelif h == 0:\n    print(-1)\nelse:\n    done = math.ceil((v + 1) / h)\n    print(done)", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nif set(a) == {0} or set(b) == {1} or a == b:\n    print(-1)\nelse:\n    p = [1] * n\n    asum = sum(a)\n    bsum = sum(b)\n    i = 0\n    while asum <= bsum and i < n * n:\n        if a[i % n] == 1 and b[i % n] == 0:\n            asum += 1\n            p[i % n] += 1\n        i += 1\n    print(max(p))", "import sys\nimport math\n\ndef scan(input_type='int'):\n    if input_type == 'int':\n        return list(map(int, sys.stdin.readline().strip().split()))\n    else:\n        return list(map(str, sys.stdin.readline().strip()))\n\ndef solution():\n    n = int(input())\n    r = scan()\n    b = scan()\n    y = 0\n    x = 0\n    for i in range(n):\n        if r[i] == b[i]:\n            continue\n        elif b[i] == 1:\n            y += 1\n        elif r[i] == 1:\n            x += 1\n    if x == 0:\n        print(-1)\n    else:\n        print(math.ceil((y + 1) / x))\nsolution()", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc1 = 0\nc2 = 0\nfor i in range(n):\n    if a[i] != b[i]:\n        if a[i] == 1:\n            c1 += 1\n        else:\n            c2 += 1\nif c1 == 0:\n    print(-1)\nelse:\n    print(c2 // c1 + 1)", "import math\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nif a == b:\n    print(-1)\nans = 0\nk = []\nif sum(a) > sum(b):\n    print(1)\nelif sum(b) >= sum(a) and a != b:\n    for i in range(n):\n        if a[i] == 1 and b[i] == 0:\n            ans += 1\n    if ans == 0:\n        print(-1)\n    else:\n        l = (sum(b) - sum(a)) // ans + 2\n        print(l)", "t = 1\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    (aa, bb) = (0, 0)\n    for i in range(n):\n        if a[i] == 1 and b[i] != 1:\n            aa += 1\n        elif b[i] == 1 and a[i] != 1:\n            bb += 1\n    if aa == 0:\n        print(-1)\n    else:\n        print(bb // aa + 1)", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ncom = 0\nae = 0\nbe = 0\nfor i in range(n):\n    if a[i] == 1 and b[i] == 1:\n        com += 1\n    elif a[i] == 1:\n        ae += 1\n    elif b[i] == 1:\n        be += 1\nif com == n or (com == 0 and ae == 0 and (be == 0)):\n    print(-1)\nelif ae > be:\n    print(1)\nelif ae > 0:\n    print(be // ae + 1)\nelse:\n    print(-1)", "from math import ceil\nn = int(input())\nl1 = list(map(int, input().split()))\nl2 = list(map(int, input().split()))\nc1 = c2 = 0\nfor i in range(n):\n    if l1[i] != l2[i]:\n        c1 += l1[i]\n        c2 += l2[i]\nif c1 == 0:\n    print(-1)\nelif c1 > c2:\n    print(1)\nelif c2 % c1 == 0:\n    print(c2 // c1 + 1)\nelse:\n    print(ceil(c2 / c1))", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nx = sum((1 for i in range(n) if a[i] > b[i]))\ny = sum((1 for i in range(n) if a[i] < b[i]))\nif x == 0:\n    print(-1)\nelse:\n    print(y // x + 1)", "import math\nn = int(input())\na1 = list(map(int, input().split()))\na2 = list(map(int, input().split()))\nif sum(a1) > sum(a2):\n    print(1)\nelif sum(a1) == 0 or sum(a2) == n:\n    print(-1)\nelse:\n    zc = 0\n    for i in range(n):\n        if a2[i] == 0 and a1[i] == 1:\n            zc += 1\n    if zc == 0:\n        print(-1)\n    else:\n        print(math.ceil((sum(a2) - sum(a1) + zc + 1) / zc))", "n = int(input())\nr = b = 0\nra = input().split()\nrb = input().split()\nfor i in range(n):\n    if ra[i] == '1' and rb[i] == '0':\n        r += 1\n    elif ra[i] == '0' and rb[i] == '1':\n        b += 1\nif r == 0:\n    print('-1')\nelif r > b:\n    print('1')\nelse:\n    q = 1 + b // r\n    print(q)", "n = int(input())\na = list(map(int, input().strip().split()))\nb = list(map(int, input().strip().split()))\nc = d = 0\nfor i in range(n):\n    if a[i] == 0:\n        if b[i] == 1:\n            d += 1\n    elif b[i] == 0:\n        c += 1\nif d == 0:\n    if c == 0:\n        print(-1)\n    else:\n        print(1)\nelif c == 0:\n    print(-1)\nelif d >= c:\n    print(d // c + 1)\nelse:\n    print(1)", "n = int(input(''))\nA = list(input('').split(' '))\nB = list(input('').split(' '))\nfor i in range(n):\n    A[i] = int(A[i])\n    B[i] = int(B[i])\nval = -1\nfor i in range(1, n + 1):\n    found = False\n    scoreA = 0\n    scoreB = 0\n    for j in range(n):\n        if A[j] != B[j]:\n            scoreA += i * A[j]\n            scoreB += 1 * B[j]\n    if scoreA > scoreB:\n        found = True\n        val = i\n        break\nprint(val)", "import math as m\nt = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n(ac, bc) = (0, 0)\nfor j in range(len(a)):\n    if a[j] == 1 and b[j] == 0:\n        ac += 1\n    if b[j] == 1:\n        bc += 1\n    if a[j] == 1 and b[j] == 1:\n        bc -= 1\nif ac == 0:\n    print(-1)\nelse:\n    print(m.ceil((bc + 1) / ac))", "import math\nn = int(input())\nrobo = list(map(int, input().split()))\nbionic = list(map(int, input().split()))\nonly_bionic = only_robo = 0\nif not 1 in robo or sum(bionic) == n:\n    print(-1)\nelse:\n    for i in range(n):\n        if robo[i] == 1 and bionic[i] == 0:\n            only_robo += 1\n        elif bionic[i] == 1 and robo[i] == 0:\n            only_bionic += 1\n    if only_robo >= 1:\n        print(math.ceil((only_bionic + 1) / only_robo))\n    else:\n        print(-1)", "import math\nn = int(input())\nrc = list(map(int, input().split()))\nbs = list(map(int, input().split()))\nsum_rc = sum(rc)\nsum_bs = sum(bs)\nif sum_rc > sum_bs:\n    print(1)\nelse:\n    only_rc = 0\n    only_bs = 0\n    for i in range(n):\n        if rc[i] == 1 and bs[i] == 0:\n            only_rc += 1\n        if rc[i] == 0 and bs[i] == 1:\n            only_bs += 1\n    if only_rc == 0:\n        print(-1)\n    else:\n        print(only_bs // only_rc + 1)", "n = int(input())\nr = list(map(int, input().split()))\nb = list(map(int, input().split()))\ncountr = countb = 0\nfor i in range(n):\n    if r[i] > b[i]:\n        countr += 1\n    elif r[i] < b[i]:\n        countb += 1\nif countr == 0:\n    print(-1)\nelse:\n    print(countb // countr + 1)", "n = int(input())\nr = b = 0\nra = input().split()\nrb = input().split()\nfor i in range(n):\n    if ra[i] == '1' and rb[i] == '0':\n        r += 1\n    elif ra[i] == '0' and rb[i] == '1':\n        b += 1\nif r == 0:\n    print('-1')\nelse:\n    q = 1 + b // r\n    print(q)", "n = int(input())\nl = list(map(int, input().split()))\nk = list(map(int, input().split()))\nx = 0\ny = 0\nfor i in range(len(k)):\n    if l[i] != k[i] and l[i] > 0:\n        x = x + 1\n    elif l[i] != k[i] and k[i] > 0:\n        y = y + 1\nif x == 0:\n    print('-1')\nelse:\n    print(y // x + 1)", "def max_points(lista1, lista2):\n    p1 = 0\n    p2 = 0\n    for i in range(len(lista1)):\n        if lista1[i] == 1 and lista2[i] == 0:\n            p1 += 1\n        elif lista2[i] == 1 and lista1[i] == 0:\n            p2 += 1\n    if p1 == 0:\n        return -1\n    elif p1 > p2:\n        return 1\n    elif p1 == p2:\n        return 2\n    elif p2 > p1:\n        return p2 // p1 + 1\nn = int(input())\nlista1 = input().split()\nlista2 = input().split()\nfor i in range(n):\n    lista1[i] = int(lista1[i])\n    lista2[i] = int(lista2[i])\nprint(max_points(lista1, lista2))", "n = int(input())\nr = list(map(int, input().split()))\nb = list(map(int, input().split()))\nx = 0\ny = 0\nfor i in range(n):\n    if r[i] > b[i]:\n        x += 1\n    elif r[i] < b[i]:\n        y += 1\nif x != 0:\n    print(y // x + 1)\nelse:\n    print(-1)", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\np1 = 0\np2 = 0\nk = 0\nf = 0\nif a == b:\n    print(-1)\nelse:\n    for i in range(n):\n        if a[i] == 0 and b[i] == 0:\n            pass\n        elif a[i] == 0 and b[i] == 1:\n            p2 = p2 + 1\n        elif a[i] == 1 and b[i] == 1:\n            p1 = p1 + 1\n            p2 = p2 + 1\n        else:\n            k = k + 1\n    for j in range(1, 1000):\n        if k * j + p1 > p2:\n            print(j)\n            f = 1\n            break\n    if f == 0:\n        print(-1)", "n = int(input())\n(a, b) = (0, 0)\nl1 = list(map(str, input().split()))\nl2 = list(map(str, input().split()))\nfor i in range(n):\n    if l1[i] == '1' and l1[i] != l2[i]:\n        a += 1\n    if l2[i] == '1' and l2[i] != l1[i]:\n        b += 1\nprint(b // a + 1 if a != 0 else -1)", "n = int(input())\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\n(q, sec) = (0, 0)\nfor i in range(n):\n    if a[i] == 1 and b[i] == 0:\n        q += 1\n    elif a[i] == 0 and b[i] == 1:\n        sec += 1\nif q == 0:\n    print('-1')\nelse:\n    p = 1\n    while True:\n        if q * p > sec:\n            print(p)\n            exit()\n        p += 1", "problems = int(input())\nrobo = list(input().split())\nbionic = list(input().split())\np_robo = 0\np_bionic = 0\nfor i in range(problems):\n    if robo[i] != bionic[i]:\n        if robo[i] == '1':\n            p_robo += 1\n        else:\n            p_bionic += 1\nif p_robo == 0:\n    print('-1')\nelse:\n    print(p_bionic // p_robo + 1)", "n = int(input())\nrobocode = list(map(int, input().split()))\nbionic = list(map(int, input().split()))\nl = list(zip(robocode, bionic))\nrcount = l.count((1, 0))\nbiocount = l.count((0, 1))\nif rcount > biocount:\n    print(1)\nelif biocount == n or rcount == 0:\n    print(-1)\nelif biocount >= rcount:\n    print(biocount // rcount + 1)", "import math\nn = int(input())\nr = input().split(' ')\nb = input().split(' ')\ntop = 0\nbottom = 0\nfor i in range(n):\n    if r[i] == '1' and b[i] == '0':\n        top += 1\n    elif r[i] == '0' and b[i] == '1':\n        bottom += 1\ndiff = top + bottom\nif top == 0:\n    print(-1)\nelif top > bottom:\n    print(1)\nelse:\n    temp = round(bottom / top)\n    if temp * top <= bottom:\n        print(temp + 1)\n    else:\n        print(temp)", "def Robots(n, a, b):\n    (x, y) = (0, 0)\n    for i in range(n):\n        if a[i] == 1 and b[i] == 0:\n            x += 1\n        elif b[i] == 1 and a[i] == 0:\n            y += 1\n    if x == 0:\n        return -1\n    else:\n        c = y + 1\n        if c % x == 0:\n            return c // x\n        else:\n            return c // x + 1\nn = int(input())\nl1 = [int(i) for i in input().split()]\nl2 = [int(i) for i in input().split()]\nprint(Robots(n, l1, l2))", "from math import *\nn = int(input())\narr = [int(i) for i in input().split()]\nbrr = [int(i) for i in input().split()]\n(a, b, c) = (0, 0, 0)\nfor i in range(n):\n    if arr[i] == 1 and brr[i] == 0:\n        c += 1\n    a += arr[i]\n    b += brr[i]\nif c == 0:\n    print(-1)\nelif a > b:\n    print(1)\nelse:\n    print(int(ceil((b + 1 - a) / c)) + 1)", "n = int(input())\narr1 = list(map(int, input().split()))\narr2 = list(map(int, input().split()))\nc1 = 0\nc2 = 0\nfor i in range(n):\n    if arr1[i] == 1 and arr2[i] == 0:\n        c1 += 1\n    if arr1[i] == 0 and arr2[i] == 1:\n        c2 += 1\nif c1 == 0:\n    print(-1)\nelif c2 == 0:\n    print(1)\nelse:\n    ans = c2 // c1\n    print(ans + 1)", "n = int(input())\nli = list(map(int, input().split()))\nlii = list(map(int, input().split()))\na = 0\nb = 0\nfor i in range(n):\n    if li[i] == 1 and lii[i] == 0:\n        a += 1\n    elif lii[i] == 1 and li[i] == 0:\n        b += 1\nif a == 0:\n    print(-1)\nelse:\n    print(b // a + 1)", "i = 0\nm = 0\nmm = 0\nn = int(input())\na = []\nb = []\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\nwhile i < n:\n    x = a[i]\n    y = b[i]\n    if x == 1 and y == 0:\n        m += 1\n    if x == 0 and y == 1:\n        mm += 1\n    i += 1\nif m == 0:\n    print(-1)\nelse:\n    print(int(mm / m + 1))", "n = int(input())\nlis1 = [int(x) for x in input().split()]\nlis2 = [int(x) for x in input().split()]\n(a, b) = (0, 0)\nfor i in range(n):\n    if lis1[i] > lis2[i]:\n        a += 1\n    if lis1[i] < lis2[i]:\n        b += 1\nif a == 0:\n    print(-1)\n    exit(0)\nprint(b // a + 1)", "import sys\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    input()\n    aa = LI()\n    bb = LI()\n    x = y = 0\n    for (a, b) in zip(aa, bb):\n        if a > b:\n            x += 1\n        if a < b:\n            y += 1\n    if x == 0:\n        print(-1)\n    else:\n        print((y + x) // x)\nmain()", "n = int(input())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\ni = 0\nc = []\nwhile i < n:\n    c.append(a[i] - b[i])\n    i += 1\nk = c.count(-1)\nkk = c.count(1)\ntry:\n    print(k // kk + 1)\nexcept ZeroDivisionError:\n    print(-1)", "lens = int(input())\nrobo = [int(x) for x in input().split()]\nbion = [int(x) for x in input().split()]\n(rplus, bplus) = (0, 0)\nfor (x, y) in zip(robo, bion):\n    if not x and y:\n        bplus += 1\n    if x and (not y):\n        rplus += 1\nif rplus == 0:\n    print(-1)\nelse:\n    print(bplus // rplus + 1)", "import math\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nac = 0\nbc = 0\nfor i in range(n):\n    if a[i] == 1 and b[i] == 0:\n        ac += 1\n    elif a[i] == 0 and b[i] == 1:\n        bc += 1\nif ac == 0:\n    print(-1)\nelse:\n    print(math.ceil((bc + 1) / ac))", "n = int(input())\nr = list(map(int, input().strip().split()))[:n]\nb = list(map(int, input().strip().split()))[:n]\nfor i in range(0, n):\n    if r[i] != b[i]:\n        r.append(r[i])\n        b.append(b[i])\ndel r[0:n]\ndel b[0:n]\nif len(r) == 0 and len(b) == 0:\n    print(-1)\nelse:\n    k = b.count(1)\n    c = r.count(1)\n    if c == 0:\n        print(-1)\n    else:\n        print(k // c + 1)", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = []\nif a == b:\n    print('-1')\nelse:\n    for i in range(n):\n        c.append(a[i] - b[i])\n    if 1 in c:\n        m = c.count(-1) / c.count(1) + 1\n        print(int(m))\n    else:\n        print('-1')", "n = int(input())\nr = [int(i) for i in input().split(' ')]\nb = [int(i) for i in input().split(' ')]\na = list(zip(r, b))\nl = []\nfor i in a:\n    if i[0] != i[1]:\n        l.append([i[0], i[1]])\nm = sum([i[0] for i in l])\nn = sum([i[1] for i in l])\nif len(l) == 0 or m == 0:\n    print('-1')\nelif m > n:\n    print('1')\nelif m == n:\n    print('2')\nelse:\n    print(str(int(n // m + 1)))", "t = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = 0\nd = 0\nfor i in range(t):\n    if a[i] > b[i]:\n        c += 1\n    elif a[i] < b[i]:\n        d += 1\nif c == 0:\n    print(-1)\nelse:\n    print(d // c + 1)", "import math\nA = int(input())\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\nif B == C:\n    print('-1')\nelse:\n    cont1 = 0\n    cont2 = 0\n    cont3 = 0\n    for number in range(len(B)):\n        if B[number] == 1 and C[number] == 0:\n            cont1 += 1\n        elif B[number] == 1 and C[number] == 1:\n            cont2 += 1\n        elif B[number] == 0 and C[number] == 0:\n            pass\n        else:\n            cont3 += 1\n    if cont1 == 0 and cont3 > 0:\n        print('-1')\n    elif cont3 % cont1 == 0:\n        print(int(math.ceil(cont3 / cont1)) + 1)\n    else:\n        print(int(math.ceil(cont3 / cont1)))", "try:\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = list(map(int, input().split()))\n    c = d = 0\n    for (i, j) in zip(l, m):\n        if i > j:\n            c = c + 1\n        elif i < j:\n            d = d + 1\n        else:\n            pass\n    if c == 0 and d == 0 or c == 0:\n        print(-1)\n    else:\n        print(d // c + 1)\nexcept:\n    pass", "i = int(input())\nwin = [int(num) for num in input().split()]\nlos = [int(num) for num in input().split()]\nwo = 0\nlo = 0\nfor j in range(0, i):\n    if win[j] != los[j]:\n        if win[j] > los[j]:\n            wo += 1\n        elif win[j] < los[j]:\n            lo += 1\nif win == los or wo == 0:\n    print(-1)\nelse:\n    print(lo // wo + 1)", "from math import *\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nl = []\nc = 0\ns = 0\nfor i in range(n):\n    l.append(a[i] - b[i])\n    if l[i] == 1:\n        c = c + 1\n    elif l[i] == -1:\n        s = s + 1\nif c == 0:\n    print('-1')\nelse:\n    print(s // c + 1)", "trials = int(input())\nrobota = input().split()\nrobotb = input().split()\nbattles = []\nwhile trials != 0:\n    trials -= 1\n    battles.append((int(robota[trials]), int(robotb[trials])))\nscorea = 0\nscoreb = 0\nfor i in battles:\n    if i[0] + i[1] == 2:\n        continue\n    elif i[0] + i[1] == 0:\n        continue\n    elif i[1] == 1:\n        scoreb += 1\n    elif i[0] == 1:\n        scorea += 1\nif scorea > scoreb:\n    print(1)\nif scorea == scoreb:\n    if scorea == 0 and scoreb == 0:\n        print(-1)\n    else:\n        print(2)\nif scoreb > scorea:\n    x = scoreb - scorea\n    if scorea == 0:\n        print(-1)\n    else:\n        print(int(x / scorea) + 2)", "n = int(input())\nr = list(map(int, input().split(' ')))\nb = list(map(int, input().split(' ')))\ndiff_probs = 0\nleast_points = 0\nfor i in range(n):\n    if r[i] == 1 and b[i] == 0:\n        diff_probs += 1\n    elif r[i] == 0 and b[i] == 1:\n        least_points += 1\nif diff_probs == 0:\n    print(-1)\nelse:\n    print(least_points // diff_probs + 1)", "import math\nn = int(input(''))\nr = input('').split(' ')\nb = input('').split(' ')\nx = 0\ny = 0\nfor i in range(0, len(r)):\n    if b[i] == '1' and r[i] == '0':\n        y += 1\n    if b[i] == '0' and r[i] == '1':\n        x += 1\nif x == 0:\n    print(-1)\nelse:\n    print(math.ceil((y + 1) / x))", "n = int(input())\n(f, s) = (0, 0)\nfor (i, j) in zip(input(), input()):\n    if i == '1' and i != j:\n        f += 1\n    elif j == '1' and j != i:\n        s += 1\nprint(s // f + 1) if f != 0 else print(-1)", "t = int(input())\nrobo = [int(i) for i in input().split()]\nbionic = [int(i) for i in input().split()]\nrobowin = 0\nbionicwin = 0\nfor i in range(t):\n    if robo[i] > bionic[i]:\n        robowin += 1\n    elif robo[i] < bionic[i]:\n        bionicwin += 1\nif robowin == 0:\n    print(-1)\nelse:\n    print(bionicwin // robowin + 1)", "n = int(input())\nc = 0\ns = 0\nr = list(map(int, input().split()))\nb = list(map(int, input().split()))\nfor i in range(0, n):\n    if r[i] ^ b[i]:\n        if r[i]:\n            c += 1\n        else:\n            s += 1\nif not c:\n    print(-1)\nelse:\n    print(s // c + 1)", "n = int(input())\nrobo = list(map(int, input().split()))\nbionic = list(map(int, input().split()))\nif robo.count(1) > bionic.count(1):\n    print(1)\nelif robo.count(1) == bionic.count(1):\n    if robo == bionic:\n        print(-1)\n    else:\n        print(2)\nelse:\n    i0 = -1\n    sum = 0\n    while i0 < len(robo) - 1:\n        i0 += 1\n        if robo[i0] == 1:\n            if bionic[i0] == 1:\n                sum += 1\n    if sum == robo.count(1):\n        print(-1)\n    elif sum == 0:\n        print(bionic.count(1) // robo.count(1) + 1)\n    else:\n        print((bionic.count(1) - sum) // (robo.count(1) - sum) + 1)", "n = int(input())\nlst1 = list(map(int, input().strip().split(' ')))\nlst2 = list(map(int, input().strip().split(' ')))\nc = 0\nl1 = 0\nl2 = 0\nfor i in range(n):\n    if lst1[i] == 1 and lst2[i] == 0:\n        c += 1\n    else:\n        if lst1[i] == 1:\n            l1 += 1\n        if lst2[i] == 1:\n            l2 += 1\nif c == 0:\n    print('-1')\nelif l1 > l2:\n    print('1')\nelse:\n    d = (l2 - l1) // c + 1\n    print(d)", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ncnta = 0\ncntb = 0\nfor i in range(n):\n    if a[i] == 1 and b[i] == 0:\n        cnta += 1\n    elif a[i] == 0 and b[i] == 1:\n        cntb += 1\nif cnta == 0:\n    print(-1)\nelse:\n    print(int((cnta + cntb) / cnta))", "n = int(input())\nr = list(map(int, input().split()))\nb = list(map(int, input().split()))\nans = 0\nrc = 0\nbc = 0\nfor i in range(n):\n    if r[i] == b[i]:\n        ans += 1\n    elif r[i] == 1:\n        rc += 1\n    elif b[i] == 1 and r[i] == 0:\n        bc += 1\nif ans == n or rc == 0:\n    print('-1')\nelif rc > bc:\n    print(1)\nelse:\n    print(int(bc / rc) + 1)", "input()\nn1 = 0\nn2 = 0\nnc = 0\nfor (v1, v2) in zip(map(int, input().split()), map(int, input().split())):\n    n1 += v1\n    n2 += v2\n    nc += v1 * v2\nn1 -= nc\nn2 -= nc\nif n1 == 0:\n    print(-1)\nelif n1 > n2:\n    print(1)\nelse:\n    print(n2 // n1 + 1)", "import math\nn = int(input())\nr = list(map(int, input().split()))\nb = list(map(int, input().split()))\nonr = 0\nonb = 0\nfor i in range(n):\n    if r[i] == 1 and b[i] == 0:\n        onr += 1\n    elif r[i] == 0 and b[i] == 1:\n        onb += 1\nif onr == 0:\n    print(-1)\nelif onr > onb:\n    print(1)\nelif onb % onr != 0:\n    print(math.ceil(onb / onr))\nelse:\n    print(onb // onr + 1)", "import sys\nI = lambda : int(input())\nreadline = lambda : sys.stdin.readline().strip('\\n')\nreadmap = lambda x=int: map(x, readline().split(' '))\nRM = readmap\nfrom math import ceil\n(n, a, b) = (I(), [*RM()], [*RM()])\n(count1, count2) = (0, 1)\nfor (i, j) in zip(a, b):\n    count1 += i and j == 0\n    count2 += j and i == 0\nprint(ceil(count2 / count1) if count1 else -1)", "import sys\nI = lambda : int(input())\nreadline = lambda : sys.stdin.readline().strip('\\n')\nreadmap = lambda x=int: map(x, readline().split(' '))\nread = lambda : map(int, sys.stdin.readline().split())\nRM = readmap\nfrom math import ceil\n(n, a, b) = (I(), list(read()), list(read()))\n(count1, count2) = (0, 1)\nfor (i, j) in zip(a, b):\n    count1 += i and j == 0\n    count2 += j and i == 0\nprint(ceil(count2 / count1) if count1 else -1)", "import sys\nn = int(sys.stdin.readline())\nR = list(map(int, sys.stdin.readline().split()))\nB = list(map(int, sys.stdin.readline().split()))\nRnB = sum([R[i] and (not B[i]) for i in range(n)])\nBnR = sum([B[i] and (not R[i]) for i in range(n)])\nif not RnB:\n    print(-1)\nelse:\n    print(BnR // RnB + 1)", "n = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nc = 0\nd = 0\nfor i in range(n):\n    if A[i] != B[i] and A[i] == 1:\n        c = c + 1\n    elif A[i] != B[i] and B[i] == 1:\n        d = d + 1\nif c == 0:\n    print(-1)\nelse:\n    print(d // c + 1)", "import sys\nimport math\nget_string = lambda : sys.stdin.readline().strip()\nget_int_list = lambda : list(map(int, sys.stdin.readline().strip().split()))\nget_intList_from_str = lambda : list(map(int, list(sys.stdin.readline().strip())))\nget_charList_from_str = lambda : list(sys.stdin.readline().strip())\nget_char_list = lambda : sys.stdin.readline().strip().split()\nget_int = lambda : int(sys.stdin.readline())\npt = lambda x: sys.stdout.write(str(x))\nn = get_int()\nlst1 = get_int_list()\nlst2 = get_int_list()\ncount1 = count2 = 0\nfor i in range(n):\n    if lst1[i] == 1 and lst2[i] == 0:\n        count1 += 1\n    if lst1[i] == 0 and lst2[i] == 1:\n        count2 += 1\nif count1 == 0 and count2 == 0:\n    print(-1)\nelif count1 > 0:\n    mi = math.floor(count2 / count1) + 1\n    print(mi)\nelse:\n    print(-1)", "n = int(input())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n(c, d) = (0, 0)\nfor x in range(n):\n    if a[x] == b[x]:\n        continue\n    if a[x] > b[x]:\n        c += 1\n    else:\n        d += 1\nprint(-1 if c == 0 else d // c + 1)"]