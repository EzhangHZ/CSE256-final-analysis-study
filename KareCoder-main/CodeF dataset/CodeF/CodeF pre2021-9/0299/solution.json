["for s in [*open(0)][1:]:\n    (n, _) = map(int, s.split())\n    if n & 1:\n        print(n // 2, n // 2, 1)\n    elif n // 2 & 1:\n        print(n // 2 - 1, n // 2 - 1, 2)\n    else:\n        print(n // 2, n // 4, n // 4)", "def lcmno(n):\n    if n % 2 == 0:\n        if n % 4 == 0:\n            a1 = str(n // 2)\n            a2 = str(n // 4)\n            return a1 + ' ' + a2 + ' ' + a2\n        else:\n            a1 = str((n - 2) // 2)\n            a2 = '2'\n            return a1 + ' ' + a1 + ' ' + a2\n    else:\n        a = str((n - 1) // 2)\n        return '1' + ' ' + a + ' ' + a\nt = input()\nno = int(t)\ns = ''\nfor i in range(no):\n    r2 = input().split(' ')\n    s += lcmno(int(r2[0])) + '\\n'\nprint(s)", "for i in [*open(0)][1:]:\n    (n, k) = map(int, i.split())\n    print(*[(n // 2, n // 4, n // 4), (n // 2, n // 2, 1), ((n - 1) // 2, (n - 1) // 2, 2), (n // 2, n // 2, 1)][n % 4])", "import sys\n\ndef get_ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\ntestcases = int(input())\nfor testcase in range(testcases):\n    temparr = get_ints()\n    a = temparr[0]\n    b = temparr[1]\n    ans = []\n    if a == 4:\n        print('2 1 1')\n    elif a & 1:\n        ans.append(str(1))\n        a -= 1\n        diff = a >> 1\n        ans.append(str(diff))\n        ans.append(str(diff))\n        print(' '.join(ans))\n    else:\n        diff = a >> 1\n        ans = []\n        if diff & 1:\n            ans.append(str(2))\n            ans.append(str(diff - 1))\n            ans.append(str(diff - 1))\n            print(' '.join(ans))\n        else:\n            halfhalf = diff >> 1\n            ans.append(str(diff))\n            ans.append(str(halfhalf))\n            ans.append(str(halfhalf))\n            print(' '.join(ans))", "def answer(n, k):\n    if n % 4 == 0:\n        return ' '.join(map(str, [n // 2, n // 4, n // 4]))\n    elif n % 2 == 0:\n        return ' '.join(map(str, [n // 2 - 1, n // 2 - 1, 2]))\n    else:\n        return ' '.join(map(str, [n // 2, n // 2, 1]))\n\ndef main():\n    t = int(input())\n    n = [0] * t\n    k = [0] * t\n    for j in range(t):\n        (n[j], k[j]) = [int(i) for i in input().split()]\n    for j in range(t):\n        print(answer(n[j], k[j]))\nmain()", "for s in [*open(0)][1:]:\n    (n, _) = map(int, s.split())\n    if n & 1:\n        print(n // 2, n // 2, 1)\n    elif n // 2 & 1:\n        print(n // 2 - 1, n // 2 - 1, 2)\n    else:\n        print(n // 2, n // 4, n // 4)", "import sys\ninput = sys.stdin.readline\nins = lambda : input().rstrip()\nini = lambda : int(input().rstrip())\ninm = lambda : map(int, input().rstrip().split())\ninl = lambda : list(map(int, input().split()))\nout = lambda x, s='\\n': print(s.join(map(str, x)))\nt = ini()\nfor _ in range(t):\n    (n, k) = inm()\n    if n % 2:\n        print(1, n // 2, n // 2)\n    else:\n        x = n // 2\n        if x % 2:\n            print(2, x - 1, x - 1)\n        else:\n            print(x, x // 2, x // 2)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2:\n        print(n // 2, n // 2, 1)\n    elif n % 4:\n        print(n // 2 - 1, n // 2 - 1, 2)\n    else:\n        print(n // 2, n // 4, n // 4)", "def klcm(n, k):\n    if n % 2 == 1:\n        return [1, n // 2, n // 2]\n    if n // 2 % 2 == 1:\n        return [2, n // 2 - 1, n // 2 - 1]\n    else:\n        return [n // 4, n // 4, n // 2]\nans = []\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    ans.append(klcm(n, k))\nfor i in ans:\n    i = list(map(str, i))\n    print(' '.join(i))", "import sys\n\ndef get_ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef solve(n):\n    if n % 4 == 1:\n        return (1, n // 2, n // 2)\n    elif n % 4 == 2:\n        return (2, (n - 2) // 2, (n - 2) // 2)\n    elif n % 4 == 3:\n        return (1, n // 2, n // 2)\n    else:\n        return (n // 4, n // 4, n // 2)\nT = int(input())\nfor i in range(T):\n    (n, k) = get_ints()\n    (a, b, c) = solve(n)\n    print(a, b, c)", "t = int(input())\nout = []\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        if n % 4 == 0:\n            out.append([n // 2, n // 4, n // 4])\n        else:\n            out.append([n // 2 - 1, n // 2 - 1, 2])\n    else:\n        out.append([n // 2, n // 2, 1])\nfor i in out:\n    print(*i)", "for i in [*open(0)][1:]:\n    (n, k) = map(int, i.split())\n    print(*[(n // 2, n // 4, n // 4), (n // 2, n // 2, 1), ((n - 1) // 2, (n - 1) // 2, 2), (n // 2, n // 2, 1)][n % 4])", "for s in [*open(0)][1:]:\n    (n, _) = map(int, s.split())\n    if n & 1:\n        print(n // 2, n // 2, 1)\n    elif n // 2 & 1:\n        print(n // 2 - 1, n // 2 - 1, 2)\n    else:\n        print(n // 2, n // 4, n // 4)", "for s in [*open(0)][1:]:\n    (n, _) = map(int, s.split())\n    if n & 1:\n        print(n // 2, n // 2, 1)\n    elif n // 2 & 1:\n        print(n // 2 - 1, n // 2 - 1, 2)\n    else:\n        print(n // 2, n // 4, n // 4)", "from collections import defaultdict\nfrom sys import stdin\ninput = lambda : stdin.readline().strip()\nfor _ in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    if n % 2 == 0:\n        if n % 3 == 0:\n            print(n // 3, n // 3, n // 3)\n        elif n % 4 == 0:\n            print(n // 2, n // 2 // 2, n // 2 // 2)\n        else:\n            print(2, (n - 2) // 2, (n - 2) // 2)\n    else:\n        print(1, n // 2, n // 2)", "import sys\nimport math as mt\nimport collections as cc\ninput = sys.stdin.readline\nI = lambda : list(map(int, input().split()))\nfor tc in range(int(input())):\n    (n, k) = I()\n    if n % 2:\n        print(n // 2, n // 2, 1)\n    elif n % 4 == 0:\n        print(n // 2, n // 4, n // 4)\n    else:\n        print(2, n // 2 - 1, n // 2 - 1)", "import sys\nfor _ in range(int(input())):\n    (n, k) = map(int, sys.stdin.readline().split())\n    (q, r) = divmod(n, 4)\n    (a, b, c) = (0, 0, 0)\n    if r == 0:\n        (a, b, c) = (q, q, 2 * q)\n    elif r == 2:\n        (a, b, c) = (2, (n - 2) // 2, (n - 2) // 2)\n    else:\n        (a, b, c) = (1, n // 2, n // 2)\n    print(a, b, c)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 3 == 0:\n        print(*[n // 3] * 3)\n    elif (n - 1) % 2 == 0:\n        print(*[1] + [(n - 1) // 2] * 2)\n    elif n % 4 == 0:\n        print(*[n // 4] * 2 + [n // 2])\n    else:\n        print(*[2] + [(n - 2) // 2] * 2)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 3 == 0:\n        print(n // 3, n // 3, n // 3)\n    elif (n - 1) % 2 == 0:\n        print(1, (n - 1) // 2, (n - 1) // 2)\n    elif n % 4 == 0:\n        print(n // 2, n // 4, n // 4)\n    else:\n        print(2, (n - 2) // 2, (n - 2) // 2)", "t = int(input())\nresult = []\nfor i in range(t):\n    (n, k) = [int(x) for x in input().strip().split(' ')]\n    res = ''\n    if k > 3:\n        res += ' '.join(['1'] * (k - 3)) + ' '\n        n -= k - 3\n    if n % 2 == 1:\n        result.append(f'{res}{n // 2} {n // 2} 1')\n    else:\n        half = n // 2\n        if half % 2 == 0:\n            result.append(f'{res}{half} {half // 2} {half // 2}')\n        else:\n            result.append(f'{res}{half - 1} {half - 1} 2')\nfor line in result:\n    print(line)", "import sys\nfrom math import log\n\ndef solve(n, k):\n    if 2 ** int(log(n, 2)) == n:\n        return ' '.join([str(n // 2), str(n // 4), str(n // 4)])\n    else:\n        if n % 2 == 1:\n            c = 1\n            a = (n - 1) // 2\n            b = a\n            return ' '.join([str(a), str(b), str(c)])\n        counter = 2\n        while counter < n:\n            if n % counter == 0:\n                if n // counter % 2 == 1:\n                    a = counter\n                    b = counter * (n // counter - 1) // 2\n                    c = b\n                    return ' '.join([str(a), str(b), str(c)])\n            counter += 2\n    return None\nt = int(sys.stdin.readline().strip())\nans = 0\nfor _ in range(t):\n    line = sys.stdin.readline().strip()\n    (n, k) = list(map(int, line.split()))\n    print(solve(n, k))", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    half = n // 2\n    if not n % 2 and (not half % 2):\n        print(half, half // 2, half // 2)\n    elif not n % 2 and half % 2:\n        half -= 1\n        print(half, half, 2)\n    else:\n        print(half, half, 1)", "import sys\ninput = sys.stdin.readline\nins = lambda : input().rstrip()\nini = lambda : int(input().rstrip())\ninm = lambda : map(int, input().rstrip().split())\ninl = lambda : list(map(int, input().split()))\nout = lambda x, s='\\n': print(s.join(map(str, x)))\nt = ini()\nfor _ in range(t):\n    (n, k) = inm()\n    if n == 3:\n        print(1, 1, 1)\n    elif n == 4:\n        print(1, 1, 2)\n    elif n % 2:\n        print(1, n // 2, n // 2)\n    else:\n        x = n // 2\n        if x % 2:\n            print(2, x - 1, x - 1)\n        else:\n            print(x, x // 2, x // 2)", "import sys\ninput = sys.stdin.readline\nins = lambda : input().rstrip()\nini = lambda : int(input().rstrip())\ninm = lambda : map(int, input().rstrip().split())\ninl = lambda : list(map(int, input().split()))\nout = lambda x, s='\\n': print(s.join(map(str, x)))\nt = ini()\nfor _ in range(t):\n    (n, k) = inm()\n    if n % 2:\n        print(1, n // 2, n // 2)\n    elif n // 2 % 2:\n        print(2, n // 2 - 1, n // 2 - 1)\n    else:\n        print(n // 2, n // 2 // 2, n // 2 // 2)", "import math, sys\nfor _ in range(int(input())):\n    n = int(sys.stdin.readline().split()[0])\n    if n % 2 == 0:\n        if n % 4 == 0:\n            print(int(n / 2), int(n / 4), int(n / 4))\n        else:\n            print(int(n / 2 - 1), int(n / 2 - 1), 2)\n    else:\n        print(1, math.floor(n / 2), math.floor(n / 2))", "for i in [*open(0)][1:]:\n    (n, k) = map(int, i.split())\n    print(*[(n // 2, n // 4, n // 4), (n // 2, n // 2, 1), ((n - 1) // 2, (n - 1) // 2, 2), (n // 2, n // 2, 1)][n % 4])", "for i in [*open(0)][1:]:\n    (n, k) = map(int, i.split())\n    print(*[(n // 2, n // 4, n // 4), (n // 2, n // 2, 1), ((n - 1) // 2, (n - 1) // 2, 2), (n // 2, n // 2, 1)][n % 4])", "list_ans = []\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = 0\n    while n % 2 == 0:\n        n //= 2\n        a += 1\n    if n == 1:\n        list_ans.append(str(2 ** (a - 2)) + ' ' + str(2 ** (a - 2)) + ' ' + str(2 ** (a - 1)))\n    else:\n        list_ans.append(str(2 ** a) + ' ' + str(2 ** a * (n - 1) // 2) + ' ' + str(2 ** a * (n - 1) // 2))\nprint(*list_ans, sep='\\n')", "import math\nfrom heapq import heappush, heappop, heapify\nimport random\nimport string\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right, insort\nimport sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nmod1 = 1000000000 + 7\nmod2 = 998244353\nfor _ in range(I()):\n    (n, k) = M()\n\n    def solve(n):\n        a = []\n        if n % 2 == 1:\n            a = [n // 2, n // 2, 1]\n        elif n % 4 != 0:\n            a = [n // 2 - 1, n // 2 - 1, 2]\n        else:\n            a = [n // 4, n // 4, n // 2]\n        return a\n    print(*[1] * (k - 3) + solve(n - k + 3))", "import math\nimport sys\nimport collections\nimport bisect\nimport time\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\nfor t in range(int(input())):\n    (n, k) = get_ints()\n    ans = []\n    while k > 3:\n        ans.append(1)\n        k -= 1\n        n -= 1\n    if n % 2 == 0:\n        if n % 4 == 0:\n            ans.append(n // 2)\n            ans.append(n // 4)\n            ans.append(n // 4)\n        else:\n            ans.append(n // 2 - 1)\n            ans.append(n // 2 - 1)\n            ans.append(2)\n    else:\n        ans.append(1)\n        ans.append((n - 1) // 2)\n        ans.append((n - 1) // 2)\n    print(*ans)", "import sys\nimport math\nimport bisect\nimport collections\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inplist():\n    return list(map(int, input().split()))\n\ndef inpstrlist():\n    s = input()\n    return list(s[:len(s)])\n\ndef invr():\n    return map(int, input().split())\n\ndef printlist(var):\n    sys.stdout.write(' '.join(map(str, var)) + '\\n')\nt = int(input())\nfor _ in range(t):\n    (n, m) = invr()\n    if n % 2 == 0:\n        if n % 4 == 0:\n            print(n // 2, n // 4, n // 4)\n        else:\n            x = n // 2 - 1\n            print(x, x, 2)\n    else:\n        x = n // 2\n        print(x, x, 1)", "t = int(input())\nfor _ in range(0, t):\n    inputs = [int(num) for num in input().split()]\n    n = inputs[0]\n    k = inputs[1]\n    if n % 2 == 1:\n        print(f'{n // 2} {n // 2} 1')\n    else:\n        half = n // 2\n        if half % 2 == 0:\n            print(f'{half} {half // 2} {half // 2}')\n        else:\n            print(f'{half - 1} {half - 1} 2')", "import math\nanswers = []\n\ndef solve(n, k):\n    if n % 3 == 0:\n        res = n // 3\n        answers.append([res, res, res])\n        return\n    if n % 4 == 0:\n        a1 = n // 4\n        a2 = n // 2\n        answers.append([a2, a1, a1])\n        return\n    if n % 2 == 1:\n        res = n // 2\n        answers.append([1, res, res])\n        return\n    if n % 2 == 0 and n % 4 == 2:\n        rem = (n - 2) // 2\n        answers.append([2, rem, rem])\n        return\nT = int(input())\nwhile T:\n    (n, k) = [int(x) for x in input().split()]\n    solve(n, k)\n    T -= 1\nfor ans in answers:\n    print(*ans)", "from math import floor\n\ndef lcm(n):\n    if n % 2 != 0:\n        return [1, floor(n / 2), floor(n / 2)]\n    elif n % 2 == 0 and n % 4 != 0:\n        return [n // 2 - 1, n // 2 - 1, 2]\n    else:\n        return [n // 2, n // 4, n // 4]\nt = int(input())\nanswer = []\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    answer.append(lcm(n))\nfor i in answer:\n    print(*i)", "import sys\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef iinput():\n    return int(input())\n\ndef rinput():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\nt = iinput()\nfor _ in range(t):\n    (n, k) = rinput()\n    if n % 2 == 0:\n        a = (n - 2) / 2\n        if a % 2 == 0:\n            a = 2\n            b = (n - 2) / 2\n        else:\n            a = n / 2\n            b = n / 4\n    else:\n        a = 1\n        b = (n - 1) / 2\n    print(int(a), int(b), int(b))", "import sys\nfor i in range(int(sys.stdin.readline())):\n    (n, k) = map(int, sys.stdin.readline().split())\n    ans = []\n    if n == 3:\n        ans = [1, 1, 1]\n    else:\n        k = n // 4\n        if n % 4 == 0:\n            ans = [k, k, 2 * k]\n        elif n % 4 == 1:\n            ans = [2 * k, 2 * k, 1]\n        elif n % 4 == 2:\n            ans = [2 * k, 2 * k, 2]\n        else:\n            ans = [2 * k + 1, 2 * k + 1, 1]\n    print(*ans)", "import math\n\ndef main_function():\n    testcases = range(int(input()))\n    for test in testcases:\n        (n, k) = [int(i) for i in input().split(' ')]\n        if n % 2 == 1:\n            print(' '.join([str(1), str((n - 1) // 2), str((n - 1) // 2)]))\n        elif n % 4 == 0:\n            print(' '.join([str(n // 2), str(n // 4), str(n // 4)]))\n        else:\n            z = n // 2\n            print(' '.join([str(z - 1), str(z - 1), str(2)]))\nmain_function()", "def read_int():\n    return int(input())\n\ndef read_ints():\n    return map(int, input().split(' '))\n\ndef split_three(n):\n    if n % 2 == 1:\n        return [1, n // 2, n // 2]\n    elif n % 4 == 2:\n        return [2, n // 2 - 1, n // 2 - 1]\n    else:\n        return [n // 4, n // 4, n // 2]\nt = read_int()\nfor case_num in range(t):\n    (n, k) = read_ints()\n    print(' '.join(map(str, split_three(n))))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2:\n        print(n // 2, n // 2, 1)\n    elif n // 2 % 2:\n        print(n // 2 - 1, n // 2 - 1, 2)\n    else:\n        print(n // 2, n // 4, n // 4)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2:\n        print(n // 2, n // 2, 1)\n    elif n // 2 % 2:\n        print(n // 2 - 1, n // 2 - 1, 2)\n    else:\n        print(n // 2, n // 4, n // 4)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2 == 1:\n        print(n // 2, n // 2, 1)\n    elif n // 2 % 2:\n        print(n // 2 - 1, n // 2 - 1, 2)\n    else:\n        print(n // 2, n // 4, n // 4)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a & 1:\n        print(1, a // 2, a // 2)\n    elif a % 4 == 0:\n        print(a // 2, a // 4, a // 4)\n    else:\n        print(2, a // 2 - 1, a // 2 - 1)", "I = lambda : map(int, input().split())\nfor _ in [0] * int(input()):\n    (n, _) = I()\n    if n % 2 == 1:\n        print(n // 2, n // 2, 1)\n    elif n % 4 == 0:\n        print(n // 2, n // 4, n // 4)\n    else:\n        print(n // 2 - 1, n // 2 - 1, 2)", "t = int(input().strip())\nfor i in range(t):\n    (n, _) = list(map(int, input().strip().split()))\n    if n % 2 == 1:\n        print('{} {} {}'.format(1, (n - 1) // 2, (n - 1) // 2))\n    elif n % 4 == 0:\n        print('{} {} {}'.format(n // 2, n // 4, n // 4))\n    else:\n        print('{} {} {}'.format(2, n // 2 - 1, n // 2 - 1))", "import math as m\ni = input()\ninp = []\nfor a in range(0, int(i)):\n    inp += [input()]\nfor i in inp:\n    n = int(i.split()[0])\n    x = 1\n    a = n\n    while a % 2 == 0:\n        x *= 2\n        a = a // 2\n    if a == 1:\n        print(x // 2, x // 4, x // 4)\n    else:\n        print(x, x * (a - 1) // 2, x * (a - 1) // 2)", "k = int(input())\nsp = []\nfor i in range(k):\n    (n, m) = list(map(int, input().split()))\n    if n % 2 == 0:\n        if n // 2 % 2 == 0:\n            sp.append([n // 2, n // 2 // 2, n // 2 // 2])\n        else:\n            sp.append([2, (n - 2) // 2, (n - 2) // 2])\n    else:\n        sp.append([1, (n - 1) // 2, (n - 1) // 2])\nfor i in sp:\n    print(*i, end='\\n')", "import math\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        (n, k) = list(map(int, input().split()))\n        s = ''\n        if n % 2 == 1:\n            s += '1 '\n            s += str(n // 2) + ' '\n            s += str(n // 2) + ' '\n        elif n % 4 == 0:\n            s = str(2 * (n // 4)) + ' '\n            s += str(n // 4) + ' '\n            s += str(n // 4) + ' '\n        else:\n            s = '2 '\n            s += str((n - 2) // 2) + ' '\n            s += str((n - 2) // 2) + ' '\n        print(s)\nmain()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 4 == 0:\n        print(str(n // 4) + ' ' + str(n // 4) + ' ' + str(n // 2))\n    elif n % 4 == 2:\n        print(' '.join(['2', str((n - 2) // 2), str((n - 2) // 2)]))\n    else:\n        print(' '.join(['1', str((n - 1) // 2), str((n - 1) // 2)]))", "t = int(input())\nfor i in range(t):\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    if n % 2:\n        print(f'1 {int((n - 1) / 2)} {int((n - 1) / 2)}')\n    elif n % 4:\n        print(f'2 {int((n - 2) / 2)} {int((n - 2) / 2)}')\n    else:\n        print(f'{int(n / 4)} {int(n / 4)} {int(n / 2)}')", "cases = int(input())\nfor _ in range(0, cases):\n    input1 = input().split()\n    (n, k) = (int(input1[0]), int(input1[1]))\n    if n % 2 == 1:\n        print(n // 2, n // 2, 1)\n    else:\n        temp = int(n / 2)\n        if temp % 2 == 0:\n            print(temp, int(temp / 2), int(temp / 2))\n        else:\n            print(2, int(temp) - 1, int(temp) - 1)", "def main():\n    (n, k) = map(int, input().split())\n    if n % 2 == 1:\n        print(1, n // 2, n // 2)\n        return\n    if n % 4 == 0:\n        print(n // 4, n // 4, n // 2)\n        return\n    else:\n        print(2, (n - 2) // 2, (n - 2) // 2)\nfor _ in range(int(input())):\n    main()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 3 == 0:\n        print(n // 3, n // 3, n // 3)\n    elif n % 2:\n        print(n // 2, n // 2, 1)\n    elif n % 4 == 0:\n        print(n // 2, n // 4, n // 4)\n    elif (n - 2) % 2 == 0:\n        print((n - 2) // 2, (n - 2) // 2, 2)\n    else:\n        print((n - 2) // 2 - 1, 4, (n - 2) // 2 - 1)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if n % 3 == 0:\n        print(n // 3, n // 3, n // 3)\n    elif n % 2 == 0:\n        if n % 4 == 0:\n            print(n // 2, n // 4, n // 4)\n        else:\n            print(n // 2 - 1, n // 2 - 1, 2)\n    else:\n        print(n // 2, n // 2, 1)", "t = int(input())\nfor i in range(t):\n    (n, k) = [int(num) for num in input().split(' ', 1)]\n    x = n // 2\n    lst = []\n    if x % 2 == 0 and n % 2 == 0:\n        anns = int(x / 2)\n        print(anns, anns, x)\n    elif x % 2 == 1 and n % 2 == 0:\n        o = x - 1\n        print(o, o, 2)\n    elif n % 2 == 1:\n        print(1, x, x)", "t = eval(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2 != 0:\n        print(1, int(n // 2), int(n // 2))\n    else:\n        x = n // 2\n        if x % 2 != 0:\n            print(2, int(n // 2 - 1), int(n // 2 - 1))\n        else:\n            print(int(x // 2), int(x // 2), int(x))", "(t, a1, a2, a3) = (int(input()), 0, 0, 0)\nfor x in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2 != 0 or n // 2 % 2 != 0:\n        a1 = round(n / 2 + 0.1) - 1\n        a2 = round(n / 2 + 0.1) - 1\n        a3 = n - a1 - a2\n    else:\n        a1 = n // 2\n        a2 = n // 4\n        a3 = n // 4\n    print(a1, a2, a3)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2 != 0:\n        if n % 3 == 0:\n            print(n // 3, n // 3, n // 3)\n        else:\n            print(n // 2, n // 2, 1)\n    else:\n        c = n // 2\n        if c % 2 == 0:\n            print(c // 2, c // 2, c)\n        else:\n            c -= 1\n            print(c, c, n - 2 * c)", "t = int(input())\nfor _ in range(t):\n    (m, n) = map(int, input().split())\n    if m % 2:\n        print(m // 2, m // 2, 1)\n    elif m // 2 % 2:\n        print(m // 2 - 1, m // 2 - 1, 2)\n    else:\n        print(m // 2, m // 4, m // 4)", "for _ in range(int(input())):\n    (n, k) = [int(x) for x in input().split(' ')]\n    a = [0] * 3\n    v = n // 2\n    if n % 3 == 0:\n        print(str(n // 3) + ' ' + str(n // 3) + ' ' + str(n // 3))\n        continue\n    if n == 4:\n        print('1 1 2')\n        continue\n    if n % 2 == 1:\n        a = 1\n        b = (n - 1) // 2\n        print(str(a) + ' ' + str(b) + ' ' + str(b))\n    elif n % 2 == 0:\n        v = (n - 2) // 2\n        if v % 2 == 0:\n            print('2 ' + str(v) + ' ' + str(v))\n        else:\n            a = n // 4\n            b = n // 2\n            print(str(a) + ' ' + str(a) + ' ' + str(b))", "from math import floor\ntest = int(input())\nfor t in range(test):\n    (n, k) = list(map(int, input().split()))\n    if n % 2 != 0:\n        print(1, floor(n / 2), floor(n / 2))\n    elif n % 4 == 0:\n        print(n // 2, n // 4, n // 4)\n    else:\n        print(int(n / 2 - 1), int(n / 2 - 1), 2)", "def ss(n):\n    for i in range(1, 1 + n ** 0.5):\n        if n % i == 0:\n            return n // i\n    return 1\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        if n % 4 == 0:\n            print(*[n // 2, n // 4, n // 4])\n        else:\n            print(*[2, n // 2 - 1, n // 2 - 1])\n    else:\n        print(*[1, n // 2, n // 2])", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2:\n        print(n // 2, n // 2, 1)\n    elif n % 4 == 0:\n        print(n // 4, n // 4, n // 2)\n    else:\n        print(n // 2 - 1, n // 2 - 1, 2)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [1] * (k - 3)\n    n -= k - 3\n    if not n % 4:\n        print(*a, n // 2, n // 4, n // 4)\n    elif not n % 2:\n        print(*a, n // 2 - 1, n // 2 - 1, 2)\n    else:\n        print(*a, n // 2, n // 2, 1)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = n // 2\n    if n % 2 == 0 and ans % 2 == 0:\n        print(ans, ans // 2, ans // 2)\n    elif n % 2 == 0 and ans % 2 != 0:\n        print(ans - 1, ans - 1, 2)\n    else:\n        print(ans, ans, 1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 4:\n        print(2 - (n & 1), (n >> 1) - int(not n & 1), (n >> 1) - int(not n & 1))\n    else:\n        print(n >> 1, n >> 2, n >> 2)", "for i in range(int(input())):\n    (n, b) = [int(x) for x in input().split()]\n    if n % 4 == 0:\n        print(n // 2, n // 4, n // 4)\n    elif n % 4 == 2:\n        print(n // 2 - 1, n // 2 - 1, 2)\n    else:\n        print(1, n // 2, n // 2)", "t = int(input())\nfor i in range(0, t):\n    (n, k) = map(int, input().split())\n    if n % 2:\n        print('%d %d 1' % (n // 2, n // 2))\n    elif n // 2 % 2:\n        print('%d %d 2' % (n // 2 - 1, n // 2 - 1))\n    else:\n        print(n // 2, end=' ')\n        print('%d %d' % (n // 2 // 2, n // 2 // 2))", "T = int(input())\n\ndef solve(N, K):\n    if K == 3:\n        if N % 2 == 1:\n            return [(N - 1) // 2, (N - 1) // 2, 1]\n        elif N % 4 == 2:\n            return [(N - 2) // 2, (N - 2) // 2, 2]\n        elif N % 4 == 0:\n            return [N // 2, N // 4, N // 4]\n    return solve(N - (K - 3), 3) + [1] * (K - 3)\nfor _ in range(T):\n    (N, K) = map(int, input().split())\n    print(' '.join(map(str, solve(N, K))))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    ip = input()\n    n = int(ip.split()[0])\n    if n % 2 == 1:\n        ans = [n // 2, n // 2, 1]\n    elif n % 4 == 0:\n        ans = [n // 2, n // 4, n // 4]\n    else:\n        ans = [n // 2 - 1, n // 2 - 1, 2]\n    print(*ans)", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    if n & 1 == 0:\n        if n // 2 & 1 == 0:\n            print(n // 2, n // 4, n // 4)\n        else:\n            print(2, n // 2 - 1, n // 2 - 1)\n    else:\n        print(n // 2, n // 2, 1)\n    t -= 1", "for i in range(int(input())):\n    (summ, k) = map(int, input().split())\n    if summ % 4 == 0:\n        print(summ // 2, summ // 4, summ // 4)\n    elif summ % 2 == 0:\n        print((summ - 2) // 2, (summ - 2) // 2, 2)\n    else:\n        print(1, (summ - 1) // 2, (summ - 1) // 2)", "import math as m\ni = input()\ninp = []\nfor a in range(0, int(i)):\n    inp += [input()]\nfor i in inp:\n    n = int(i.split()[0])\n    k = 0\n    a = n\n    while a % 2 == 0:\n        k += 1\n        a = a // 2\n    x = 2 ** k\n    if a == 1:\n        print(x // 2, x // 4, x // 4)\n    else:\n        print(x, x * (a - 1) // 2, x * (a - 1) // 2)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if n % 4 == 0:\n        print(n // 2, n // 4, n // 4)\n    elif n % 2 == 0:\n        print(2, n // 2 - 1, n // 2 - 1)\n    else:\n        print(1, n // 2, n // 2)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split(' '))\n    if a % 2 == 1:\n        print(a // 2, a // 2, 1)\n    else:\n        c = a // 2\n        if c % 2 == 0:\n            print(c, c // 2, c // 2)\n        else:\n            a = a - 2\n            print(2, a // 2, a // 2)", "import sys, time\nfrom math import ceil, floor\nfun = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (n, k) = fun()\n    ans = [[n // 2, n // 4, n // 4], [1, (n - 1) // 2, (n - 1) // 2], [2, (n - 2) // 2, (n - 2) // 2], [1, (n - 1) // 2, (n - 1) // 2]]\n    print(*ans[n % 4])", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = n // 2\n    if n % 2 == 0 and ans % 2 == 0:\n        print(ans, ans // 2, ans // 2)\n    elif n % 2 == 0 and ans % 2 != 0:\n        print(ans - 1, ans - 1, 2)\n    else:\n        print(ans, ans, 1)", "def solve():\n    (n, k) = map(int, input().split())\n    if n & 1:\n        print(1, n // 2, n // 2)\n    elif n % 4:\n        print(2, n // 2 - 1, n // 2 - 1)\n    else:\n        print(n // 2, n // 4, n // 4)\nt = int(input())\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 3 == 0:\n        print(n // 3, n // 3, n // 3)\n    elif n % 2 == 1:\n        print(1, (n - 1) // 2, (n - 1) // 2)\n    elif n % 8 == 0:\n        print(n // 2, n // 4, n // 4)\n    elif n == 4:\n        print(1, 1, 2)\n    elif n // 2 % 2 == 1:\n        print(2, (n - 2) // 2, (n - 2) // 2)\n    else:\n        print(4, (n - 4) // 2, (n - 4) // 2)", "t = int(input())\nfor i in range(t):\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    if n % 2 != 0:\n        print(1, n // 2, n // 2)\n    elif n % 2 == 0 and n % 4 != 0:\n        print(2, n // 2 - 1, n // 2 - 1)\n    else:\n        print(n // 2, n // 4, n // 4)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 1:\n        print(n // 2, n // 2, 1)\n    else:\n        t = n // 2\n        if t % 2 == 0:\n            print(t // 2, t // 2, t)\n        else:\n            print(t - 1, 2, t - 1)", "for x in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        n = n // 2\n        if n % 2 == 1:\n            print(2, n - 1, n - 1)\n        else:\n            print(n, n // 2, n // 2)\n    elif n % 2 == 1:\n        print(n // 2, n // 2, 1)", "for t in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    if n % 4 == 0:\n        print(n // 2, n // 4, n // 4)\n    elif n % 2 == 0:\n        print(n // 2 - 1, n // 2 - 1, 2)\n    else:\n        print(n // 2, n // 2, 1)", "(t, a1, a2, a3) = (int(input()), 0, 0, 0)\nfor x in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2 != 0 or n // 2 % 2 != 0:\n        a1 = round(n / 2 + 0.1) - 1\n        a2 = round(n / 2 + 0.1) - 1\n        a3 = n - a1 - a2\n    else:\n        a1 = n // 2\n        a2 = n // 4\n        a3 = n // 4\n    print(a1, a2, a3)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    if n % 3 == 0:\n        print(n // 3, n // 3, n // 3)\n    elif n % 2 == 1:\n        print(1, n // 2, n // 2)\n    else:\n        ta = n // 2\n        if ta % 2 == 0:\n            print(ta, ta // 2, ta // 2)\n        else:\n            print(ta - 1, ta - 1, 2)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 1:\n        print(1, n // 2, n // 2)\n    elif n % 4 == 0:\n        print(n // 2, n // 4, n // 4)\n    else:\n        a = n // 2\n        print(2, a - 1, a - 1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n & 1:\n        print(1, (n - 1) // 2, (n - 1) // 2)\n    elif n % 4 == 0:\n        print(n // 4, n // 4, n // 2)\n    else:\n        print(2, (n - 2) // 2, (n - 2) // 2)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if k == 3:\n        if n % 2 == 1:\n            print(1, (n - 1) // 2, (n - 1) // 2)\n        else:\n            m = n // 2\n            if m % 2 == 1:\n                print(2, m - 1, m - 1)\n            else:\n                print(m // 2, m // 2, m)", "from math import floor\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    k = 3\n    x = []\n    if n % 2 == 0:\n        if n / 2 % 2 == 0:\n            x.append(int(n / 2))\n            x.append(int(n / 2 / 2))\n            x.append(int(n / 2 / 2))\n        else:\n            x.append(2)\n            x.append(int(n / 2 - 1))\n            x.append(int(n / 2 - 1))\n    else:\n        x.append(1)\n        x.append(floor(n / 2))\n        x.append(floor(n / 2))\n    print(' '.join(map(str, x)))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 4 == 0:\n        print(n // 2, n // 4, n // 4)\n    elif n % 2 == 0:\n        print(n // 2 - 1, n // 2 - 1, 2)\n    else:\n        print(n // 2, n // 2, 1)", "test_num = int(input())\n\ndef solve():\n    (n, k) = map(int, input().split())\n    if n % 2 == 1:\n        print(1, n // 2, n // 2)\n    elif n % 4 == 2:\n        print(2, n // 2 - 1, n // 2 - 1)\n    else:\n        print(n // 4, n // 4, n // 2)\nfor i in range(test_num):\n    solve()", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2:\n        print((n - 1) // 2, (n - 1) // 2, 1)\n    elif n == 4:\n        print(1, 1, 2)\n    else:\n        v = n // 2 - 1\n        if v % 2:\n            print(n // 2, n // 4, n // 4)\n        else:\n            print(v, v, 2)", "T = int(input())\nfor t in range(T):\n    (n, k) = map(int, input().split())\n    if n == 4:\n        print(1, 1, 2)\n    elif n % 2 == 1:\n        print((n - 1) // 2, (n - 1) // 2, 1)\n    else:\n        v = n // 2 - 1\n        if v % 2 == 0:\n            print(v, v, 2)\n        else:\n            print(n // 2, n // 4, n // 4)", "def processing():\n    (n, k) = [int(x) for x in input().split()]\n    if n % 2 == 1:\n        print(1, n // 2, n // 2, sep=' ', end='\\n')\n    elif n % 4 == 0:\n        print(n // 2, n // 2 // 2, n // 2 // 2, sep=' ', end='\\n')\n    else:\n        print(2, (n - 2) // 2, (n - 2) // 2, sep=' ', end='\\n')\nt = int(input())\nfor i in range(t):\n    processing()", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n % 2 == 0:\n        if n / 2 % 2 == 0:\n            print(n // 2, n // 4, n // 4)\n        else:\n            print(n // 2 - 1, n // 2 - 1, 2)\n    else:\n        print(1, n // 2, n // 2)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n % 2 == 0:\n        if n % 4 == 0:\n            lst = [n // 4, n // 4, n // 2]\n        elif n % 3 == 0:\n            lst = [n // 3, n // 3, n // 3]\n        else:\n            k = n\n            while k % 4 != 0:\n                k -= 2\n            lst = [n - k, k // 2, k // 2]\n    else:\n        lst = [1, (n - 1) // 2, (n - 1) // 2]\n    l1 = []\n    for i in lst:\n        l1.append(str(i))\n    print(' '.join(l1))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % k == 0:\n        print(n // k, n // k, n // k)\n    else:\n        f = n // 2\n        if n % 2 == 0:\n            if f % 2:\n                f -= 1\n                print(f, f, 2)\n            else:\n                print(f // 2, f // 2, f)\n        else:\n            print(f, f, 1)", "n = int(input())\nfor i in range(n):\n    (num, k) = map(int, input().split())\n    if num % 2 == 0:\n        if num % 4 == 0:\n            print(num // 2, num // 4, num // 4)\n        else:\n            print(2, (num - 2) // 2, (num - 2) // 2)\n    else:\n        print(1, (num - 1) // 2, (num - 1) // 2)", "def solve(n, k):\n    if n % 3 == 0:\n        m = n // 3\n        print(m, m, m)\n    elif n % 4 == 0:\n        m = n // 4\n        print(2 * m, m, m)\n    elif n % 4 == 2:\n        m = n // 4\n        print(2 * m, 2 * m, 2)\n    else:\n        m = n // 2\n        print(m, m, 1)\nfor case in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = solve(n, k)"]