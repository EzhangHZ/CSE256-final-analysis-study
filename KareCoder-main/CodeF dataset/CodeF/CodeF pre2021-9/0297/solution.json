["for _ in [*open(0)][1:]:\n    (n, x, y) = map(int, _.split())\n    delta = -1\n    k = int(y - x)\n    for i in range(1, k + 1):\n        if (y - x) % i == 0 and (y - x) // i + 1 <= n:\n            delta = i\n            break\n    if delta == -1:\n        delta = y - x\n    print(*[y - min(n - 1, (y - 1) // delta) * delta + delta * i for i in range(n)])", "t = int(input())\nfor _ in range(0, t):\n    inputs = [int(num) for num in input().split()]\n    n = inputs[0]\n    x = inputs[1]\n    y = inputs[2]\n    start = n - 1\n    i = start\n    while (y - x) / i != (y - x) // i:\n        i -= 1\n    cd = (y - x) // i\n    vals = i + 1\n    min1 = x\n    max1 = y\n    if vals < n:\n        min1 = x\n        while min1 - cd > 0 and vals < n:\n            min1 = min1 - cd\n            vals += 1\n    if vals < n:\n        max1 = y\n        while vals < n:\n            max1 = max1 + cd\n            vals += 1\n    s = ''\n    for i in range(min1, max1 + 1, cd):\n        s += str(i) + ' '\n    print(s)", "def cast(cre, typ):\n    return type(typ)(map(cre, typ))\n\ndef solution():\n    for t in range(int(input())):\n        (n, x, y) = cast(int, input().split())\n        sub = y - x\n        l = [x, y]\n        term = 0\n        for i in range(n - 1, 0, -1):\n            if sub % i == 0:\n                term = sub // i\n                break\n        cnt = -1\n        while len(l) < n:\n            val = l[1] + cnt * term\n            if val < 1:\n                cnt = 0\n            elif val != l[0]:\n                l.append(val)\n            cnt += -1 if cnt < 0 else 1\n        print(' '.join(cast(str, l)))\nsolution()", "t = int(input())\nfor _ in range(t):\n    (n, x, y) = map(int, input().split())\n    i = -(-(y - x) // (n - 1))\n    while (y - x) % i:\n        i += 1\n    bg = (x - 1) % i + 1\n    while bg + i * (n - 1) < y:\n        bg += i\n    ans = ''\n    for j in range(n):\n        ans += str(bg + j * i) + ' '\n    print(ans)", "list_ans = []\nfor _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    a = y - x\n    for i in range(1, a + 1):\n        if a % i == 0 and a // i <= n - 1:\n            break\n    if y - (n - 1) * i >= 1:\n        s = y - (n - 1) * i\n        list_ans.append(' '.join(map(str, [s + k * i for k in range(n)])))\n    else:\n        s = y % i\n        if s == 0:\n            list_ans.append(' '.join(map(str, [i * k for k in range(1, n + 1)])))\n        else:\n            list_ans.append(' '.join(map(str, [s + k * i for k in range(n)])))\nfor item in list_ans:\n    print(item)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    diff = y - x\n    step = 1\n    while diff % step or diff // step > n - 1:\n        step += 1\n    offset = n - (diff // step + 1)\n    offset = min(offset, (x - 1) // step)\n    answer = [x + step * (i - offset) for i in range(n)]\n    print(*answer)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    count_otr = n - 1\n    diff = y - x\n    while diff % count_otr:\n        count_otr -= 1\n    offset = n - 1 - count_otr\n    step = diff // count_otr\n    offset = min(offset, (x - 1) // step)\n    arr = [x - (offset - i) * step for i in range(n)]\n    print(*arr)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    count_ofr = n - 1\n    diff = y - x\n    while diff % count_ofr:\n        count_ofr -= 1\n    offset = n - 1 - count_ofr\n    step = diff // count_ofr\n    step = diff // count_ofr\n    offset = min(offset, (x - 1) // step)\n    arr = [x - (offset - i) * step for i in range(n)]\n    print(*arr)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    count_otr = n - 1\n    diff = y - x\n    while diff % count_otr:\n        count_otr -= 1\n    offset = n - 1 - count_otr\n    step = diff // count_otr\n    offset = min(offset, (x - 1) // step)\n    arr = [x - (offset - i) * step for i in range(n)]\n    print(*arr)", "for t in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    i = 1\n    f = y\n    while (y - x) % i != 0 or (y - x) // i >= n:\n        i += 1\n    for j in range(n):\n        if y <= 0:\n            break\n        print(y, end=' ')\n        n -= 1\n        y -= i\n    for j in range(n):\n        f += i\n        print(f, end=' ')\n    print()", "def read_int():\n    return int(input())\n\ndef read_ints():\n    return map(int, input().split(' '))\nt = read_int()\nfor case_num in range(t):\n    (n, x, y) = read_ints()\n    d = y - x\n    for i in range(n - 1, 0, -1):\n        if d % i == 0:\n            d //= i\n            l = min(n - (i + 1), (x - 1) // d)\n            ans = [x - l * d + i * d for i in range(n)]\n            print(' '.join(map(str, ans)))\n            break", "def yaar(n, A, B):\n    d = B - A\n    for x in reversed(range(1, n)):\n        p = B - A\n        if p / x == p // x:\n            d = p // x\n            break\n    for x in reversed(range(1, n)):\n        if B - d * x > 0:\n            a = B - d * x\n            break\n    ans = []\n    for x in range(n):\n        ans.append(a + x * d)\n    return ans\nt = int(input())\nfor _ in range(t):\n    (n, A, B) = map(int, input().split())\n    ans = yaar(n, A, B)\n    for x in ans:\n        print(x, end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    (n, x, y) = map(int, input().split())\n    diff = y - x\n    X = x\n    res = 0\n    count = 0\n    for j in range(n - 1, 0, -1):\n        if diff % j == 0:\n            res = diff // j\n            break\n    while count != n and x <= y:\n        print(x, end=' ')\n        x = x + res\n        count += 1\n    X = X - res\n    while count != n and X > 0:\n        print(X, end=' ')\n        X = X - res\n        count += 1\n    while count != n:\n        y += res\n        print(y, end=' ')\n        count += 1\n    print()", "t = int(input())\nfor k in range(0, t, 1):\n    (n, x, y) = map(int, input().split())\n    a = []\n    for i in range(n, 0, -1):\n        if (y - x) % (i - 1) == 0:\n            n1 = 1\n            n2 = i\n            break\n    d = int((y - x) / (n2 - n1))\n    count = 0\n    z = 0\n    for i in range(x, y + 1, d):\n        a.append(i)\n        count += 1\n        if count == n:\n            z = 1\n            break\n    if z == 0:\n        for i in range(x - d, 0, -d):\n            a.append(i)\n            count += 1\n            if count == n:\n                z = 1\n                break\n    if z == 0:\n        for i in range(y + d, 10000000, d):\n            a.append(i)\n            count += 1\n            if count == n:\n                z = 1\n                break\n    a.sort()\n    for i in range(0, n, 1):\n        print(a[i], end=' ')\n    print('')", "def fun(n, k):\n    l = []\n    for i in range(1, n + 1):\n        if n % i == 0:\n            l.append(i)\n    for x in l:\n        if x >= k:\n            return x\nt = int(input())\nfor _ in range(t):\n    ans = []\n    (n, x, y) = map(int, input().split())\n    if (y - x) % (n - 1) == 0:\n        k = (y - x) // (n - 1)\n    else:\n        k = (y - x) // (n - 1) + 1\n    d = fun(y - x, k)\n    f = 0\n    for i in range(x, y + 1, d):\n        if len(ans) < n:\n            ans.append(i)\n        else:\n            f = 1\n            break\n    if f == 1 or len(ans) == n:\n        print(*ans)\n    else:\n        for i in range(x - d, 0, -d):\n            if len(ans) < n:\n                ans.append(i)\n            else:\n                f = 1\n                break\n        if f == 1 or len(ans) == n:\n            print(*ans)\n        else:\n            c = y + d\n            while len(ans) < n:\n                ans.append(c)\n                c += d\n            print(*ans)", "I = lambda : map(int, input().split())\nfor _ in [0] * int(input()):\n    (n, x, y) = I()\n    for i in range(n - 1, 0, -1):\n        if (y - x) % i == 0:\n            d = (y - x) // i\n            break\n    for i in range(n - 1, 0, -1):\n        if y - i * d > 0:\n            a1 = y - i * d\n            break\n    for j in range(n):\n        print(a1 + j * d, end=' ')\n    print(end='\\n')", "t = int(input())\nfor i in range(t):\n    (n, x, y) = map(int, input().split())\n    l = []\n    s = n - 2\n    m = y - x\n    for j in range(s + 1):\n        if m % (j + 1) == 0:\n            d = m // (j + 1)\n    for j in range(x, y + 1, d):\n        l.append(j)\n    j1 = m // d + 1\n    if j1 < n:\n        L = x\n        while True:\n            L = L - d\n            if L >= 1 and j1 < n:\n                l.append(L)\n                j1 += 1\n            else:\n                break\n    if j1 < n:\n        R = y\n        while True:\n            if j1 == n:\n                break\n            R = R + d\n            l.append(R)\n            j1 += 1\n    for u in l:\n        print(u, end=' ')\n    print()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    c = 0\n    for i in range(n - 1, 0, -1):\n        if (y - x) % i == 0:\n            c = (y - x) // i\n            break\n    d = []\n    x = y\n    while n:\n        if y > 0:\n            d.append(y)\n            y -= c\n        else:\n            x += c\n            d.append(x)\n        n -= 1\n    print(*d)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    diff = y - x\n    factors = []\n    for i in range(1, diff + 1):\n        if diff % i == 0:\n            factors.append(i)\n            factors.append(diff // i)\n    best = None\n    factors = sorted(list(set(factors)))\n    for item in factors:\n        if item + 1 <= n:\n            best = item\n    to_add = diff // best\n    rn = x\n    things = []\n    while rn <= y:\n        things.append(rn)\n        rn += to_add\n    if len(things) < n:\n        others = []\n        rn = things[0] - to_add\n        k = len(things)\n        while k < n and rn > 0:\n            others.append(rn)\n            rn -= to_add\n            k += 1\n        things = others[::-1] + things\n    if len(things) < n:\n        k = n - len(things)\n        for _ in range(k):\n            things.append(things[-1] + to_add)\n    print(*things)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    a = 0\n    for i in range(n - 1, -1, -1):\n        if (y - x) % i == 0:\n            a = i\n            break\n    a = (y - x) // a\n    b = y\n    i = n\n    while b > 0 and i > 0:\n        print(b, end=' ')\n        i -= 1\n        b -= a\n    y += a\n    while i > 0:\n        print(y, end=' ')\n        i -= 1\n        y += a\n    print()", "for p in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    (s, c) = ([], n - 1)\n    while (b - a) % c != 0:\n        c -= 1\n    (d, m) = ((b - a) // c, b)\n    while n > 0 and m > 0:\n        s.append(m)\n        (n, m) = (n - 1, m - d)\n    m = b\n    while n > 0:\n        (n, m) = (n - 1, m + d)\n        s.append(m)\n    s.sort()\n    f = ''\n    for i in range(len(s)):\n        f += str(s[i]) + ' '\n    print(f)", "for _ in range(int(input())):\n    (n, x, y) = list(map(int, input().split()))\n    i = (y - x) // n + 1\n    t = y\n    while (y - x) % i:\n        i += 1\n    while y > 0 and n > 0:\n        print(y, end=' ')\n        y -= i\n        n -= 1\n    while n:\n        t += i\n        print(t, end=' ')\n        n -= 1\n    print()", "for i in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    my_list = list()\n    count = 0\n    for elem in range(1, y - x + 1):\n        if (y - x) % elem == 0:\n            if (y - x) // elem <= n - 1:\n                count = elem\n                break\n    number_of_elem = n\n    help_elem = y\n    while number_of_elem > 0:\n        my_list.append(help_elem)\n        help_elem -= count\n        number_of_elem -= 1\n        if help_elem <= 0:\n            break\n    if number_of_elem != 0:\n        help_elem = y + count\n        while number_of_elem > 0:\n            my_list.append(help_elem)\n            help_elem += count\n            number_of_elem -= 1\n    for elem in my_list:\n        print(elem, end=' ')\n    print()", "t = int(input())\nwhile t > 0:\n    sdf = input().split()\n    n = int(sdf[0])\n    x = int(sdf[1])\n    y = int(sdf[2])\n    if n == 2:\n        print(x, y)\n        t -= 1\n        continue\n    gap = y - x\n    i = 1\n    while i <= gap:\n        if gap % i == 0 and gap // i + 1 <= n:\n            div = gap // i + 1\n            rem = n - div\n            hm = (x - 1) // i\n            start = x - i * hm\n            if div + hm >= n:\n                start = x - i * rem\n            k = 0\n            while k < n:\n                print(start + i * k, end=' ')\n                k += 1\n            break\n        if i == gap // 2:\n            i = gap - 1\n        i += 1\n    print()\n    t -= 1", "def divisors(a: int) -> list:\n    out = []\n    for i in range(1, a + 1):\n        if a % i == 0:\n            out.append(i)\n    return out\nfor _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    div = divisors(y - x)\n    ans = []\n    for d in div:\n        if n * d < y - x:\n            continue\n        r = y % d\n        top = max(y, (n - (1 if r > 0 else 0)) * d + r)\n        low = top - (n - 1) * d\n        if low <= x and low > 0:\n            ans.append((low, top, d))\n    (low, top, d) = min(ans, key=lambda x: x[1])\n    arr = [a for a in range(low, top + 1, d)]\n    print(*arr)", "def divisors(a: int) -> list:\n    out = []\n    for i in range(1, a + 1):\n        if a % i == 0:\n            out.append(i)\n    return out\nfor _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    dif = y - x\n    for d in range(1, dif + 1):\n        if dif % d or n * d < dif:\n            continue\n        top = max(y, (n - (1 if y % d else 0)) * d + y % d)\n        low = top - (n - 1) * d\n        if x < low or low < 0:\n            continue\n        break\n    arr = [a for a in range(low, top + 1, d)]\n    print(*arr)", "for t in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    z = y - x\n    j = n - 1\n    i = 0\n    while True:\n        if z % (j - i) == 0:\n            break\n        i += 1\n    d = z // (j - i)\n    a = y - (n - 1) * d\n    while a < 1 or a + (n - 1) * d < y:\n        a += d\n    i = 0\n    while i < n:\n        print(a + i * d, end=' ')\n        i += 1\n    print()", "for t in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    z = y - x\n    j = n - 1\n    i = 0\n    while True:\n        if z % (j - i) == 0:\n            break\n        i += 1\n    d = z // (j - i)\n    a = y - (n - 1) * d\n    while a < 1 or a + (n - 1) * d < y:\n        a += d\n    i = 0\n    while i < n:\n        print(a + i * d, end=' ')\n        i += 1\n    print()", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    r = n - 1\n    while r > 0:\n        if r == 1:\n            s = y - x\n            break\n        elif (y - x) % r == 0:\n            s = (y - x) // r\n            break\n        else:\n            r = r - 1\n    mi = x\n    ma = y\n    l = []\n    for i in range((y - x) // s + 1):\n        l.append(x + i * s)\n    n = n - len(l)\n    while mi >= 0 and n > 0:\n        mi = mi - s\n        if mi > 0:\n            l.append(mi)\n            n = n - 1\n        else:\n            break\n    while mi <= 0 and n > 0:\n        ma = ma + s\n        l.append(ma)\n        n = n - 1\n    l.sort()\n    print(*l)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    e = y - x\n    a = e // n\n    l = [x + i * a for i in range(n)]\n    while y not in l:\n        a += 1\n        while e % a != 0:\n            a += 1\n        l = [x + i * a for i in range(n)]\n    k = x % a\n    while 1:\n        l = [k + i * a for i in range(n)]\n        k += a\n        if x in l and y in l and (0 not in l):\n            break\n    print(*l)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    p = y - x\n    d = p // n\n    a = [x + i * d for i in range(n)]\n    while y not in a:\n        d += 1\n        while p % d:\n            d += 1\n        a = [x + i * d for i in range(n)]\n    r = x % d\n    while 1:\n        a = [r + i * d for i in range(n)]\n        r += d\n        if x in a and y in a and (0 not in a):\n            break\n    print(*a)", "for i in range(int(input())):\n    (a, b, c) = [int(x) for x in input().split()]\n    r = 0\n    for j in range(a - 1, 0, -1):\n        if (c - b) % j == 0:\n            r = j\n            break\n    p = (c - b) // r\n    k = a - r - 1\n    while k != 0 and b > 0:\n        b = b - p\n        if b > 0:\n            print(b, end=' ')\n            k = k - 1\n    h = c - p * r\n    l = r + 1\n    u = l + k\n    while u != 0:\n        print(h, end=' ')\n        h = h + p\n        u = u - 1\n    print()", "for _ in [0] * int(input()):\n    (a, b, c) = [int(x) for x in input().split()]\n    i = a\n    while (c - b) % (i - 1) != 0:\n        i -= 1\n    difference = (c - b) // (i - 1)\n    left_term = (b - 1) // difference\n    ans = max(0, a - (left_term + i)) * difference + c\n    print(*[ans - i * difference for i in range(a)])", "t = int(input())\nfor _ in range(t):\n    (n, x, y) = map(int, input().split())\n    div = n - 1\n    while div > 1:\n        if (y - x) % div == 0:\n            break\n        div -= 1\n    div = (y - x) // div\n    ans = []\n    x = y\n    while x > 0 and n > len(ans):\n        ans.append(x)\n        x -= div\n    for _ in range(n - len(ans)):\n        y += div\n        ans.append(y)\n    print(' '.join(map(str, ans)))", "for i in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    (q, d) = (abs(y - x), [])\n    for i in range(n - 1, 0, -1):\n        if q % i == 0:\n            j = q // i\n            break\n    a = y - (n - 1) * j\n    if a <= 0:\n        a += j - int(a / j) * j\n    for i in range(n):\n        d.append(a + i * j)\n    print(*d)", "t = int(input())\nfor j in range(t):\n    (n, x, y) = input().split()\n    n = int(n)\n    x = int(x)\n    y = int(y)\n    d = y - x\n    ind = 1\n    g = 0\n    t = n - 1\n    while (y - x) % t:\n        t = t - 1\n    i = (y - x) // t\n    x = max(x % i or i, y - (n - 1) * i)\n    print(*range(x, x + n * i, i))", "TC = int(input())\nfor tc in range(TC):\n    (N, X, Y) = map(int, input().split())\n    delta = Y - X\n    max_len = 1\n    for i in range(N - 1, 0, -1):\n        if delta % i == 0:\n            max_len = i\n            break\n    d = delta // max_len\n    item = X % d\n    if item == 0:\n        item += d\n    max_item = item + d * (N - 1)\n    if max_item < Y:\n        item += Y - max_item\n    for i in range(N):\n        print(item, end=' ')\n        item += d\n    print()", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    d = y - x - 1\n    k = n\n    d = y - x\n    for i in range(1, (y - x) // 2 + 1):\n        if (y - x + i) % i == 0 and (y - x + i) // i <= n:\n            d = i\n            break\n    i = x\n    while k > 0 and i <= y:\n        print(i, end=' ')\n        i += d\n        k -= 1\n    i = x - d\n    while k > 0 and i > 0:\n        print(i, end=' ')\n        k -= 1\n        i = i - d\n    i = y + d\n    while k > 0:\n        print(i, end=' ')\n        k -= 1\n        i += d\n    print()", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    count_otr = n - 1\n    diff = y - x\n    while diff % count_otr:\n        count_otr -= 1\n    offset = n - 1 - count_otr\n    step = diff // count_otr\n    offset = min(offset, (x - 1) // step)\n    arr = [x - (offset - i) * step for i in range(n)]\n    print(*arr)", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    (n, smol, beeg) = map(int, input().split())\n    if beeg - smol == n - 1:\n        for i in range(smol, beeg + 1):\n            print(i, end=' ')\n        print()\n    elif beeg - smol > n - 1:\n        ni = n - 1\n        while (beeg - smol) % ni != 0:\n            ni -= 1\n        diff = (beeg - smol) // ni\n        t = 0\n        for i in range(min(n, ceil(beeg / diff))):\n            t += 1\n            print(beeg - diff * i, end=' ')\n        while t < n:\n            beeg += diff\n            t += 1\n            print(beeg, end=' ')\n        print()\n    else:\n        t = 0\n        while t < n and beeg - t > 0:\n            print(beeg - t, end=' ')\n            t += 1\n        while t < n:\n            beeg += 1\n            t += 1\n            print(beeg, end=' ')\n        print()", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    (n, smol, beeg) = map(int, input().split())\n    if beeg - smol == n - 1:\n        for i in range(smol, beeg + 1):\n            print(i, end=' ')\n        print()\n    elif beeg - smol > n - 1:\n        ni = n - 1\n        while (beeg - smol) % ni != 0:\n            ni -= 1\n        diff = (beeg - smol) // ni\n        t = 0\n        for i in range(min(n, ceil(beeg / diff))):\n            t += 1\n            print(beeg - diff * i, end=' ')\n        while t < n:\n            beeg += diff\n            t += 1\n            print(beeg, end=' ')\n        print()\n    else:\n        t = 0\n        while t < n and beeg - t > 0:\n            print(beeg - t, end=' ')\n            t += 1\n        while t < n:\n            beeg += 1\n            t += 1\n            print(beeg, end=' ')\n        print()", "from functools import lru_cache\ntest_cases = int(input())\n\n@lru_cache(None)\ndef get_best_starting_value(n, x, y) -> [int, int]:\n    for value in range(y, y * n):\n        for i in range(1, x + 1):\n            if (value - i) % (n - 1) == 0:\n                iteration_distance = (value - i) // (n - 1)\n                if iteration_distance > 0 and value - iteration_distance * (n - 1) <= x:\n                    if (x - i) % iteration_distance == 0 and (y - i) % iteration_distance == 0:\n                        return (value, iteration_distance)\n\n@lru_cache(None)\ndef get_result(n, x, y) -> str:\n    if n == 2:\n        return f'{x} {y}'\n    (best_max_value, iteration_value) = get_best_starting_value(n, x, y)\n    result = []\n    while len(result) != n:\n        result.append(str(best_max_value))\n        best_max_value -= iteration_value\n    return ' '.join(result)\n\ndef handle() -> str:\n    (n, x, y) = input().split(' ')\n    n = int(n)\n    x = int(x)\n    y = int(y)\n    if x > y:\n        (x, y) = (y, x)\n    return get_result(n, x, y)\nfor _ in range(test_cases):\n    print(handle())", "import math\n\ndef pd(n):\n    i = 1\n    l = [1]\n    while i <= math.sqrt(n):\n        if n % i == 0:\n            if n // i == i:\n                l.append(i)\n            else:\n                l.append(i)\n                l.append(n // i)\n        i = i + 1\n    return l\nfor _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    l = pd(abs(x - y))\n    l.sort()\n    for i in l:\n        if abs(x - y) // i < n:\n            break\n    ans = i\n    l = []\n    c = 0\n    for i in range(x + ans, y + 1, ans):\n        l.append(i)\n        c += 1\n    if c < n:\n        for i in range(x, 0, -ans):\n            if c == n:\n                break\n            l.append(i)\n            c += 1\n    if c < n:\n        for i in range(y + ans, 100000000000, ans):\n            if c == n:\n                break\n            l.append(i)\n            c += 1\n    print(*l)", "def check(n, x, y, diff):\n    candidate = y - diff\n    output = [y]\n    while candidate > 0 and len(output) < n:\n        output.append(candidate)\n        candidate -= diff\n    candidate = y + diff\n    while len(output) < n:\n        output.append(candidate)\n        candidate += diff\n    output.sort()\n    return output\nfor _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    output = [x, y]\n    if n > 2:\n        diff = y - x\n        output = check(n, x, y, diff)\n        diff -= 1\n        while diff >= (y - x + (n - 1) - 1) // (n - 1):\n            if (y - x) % diff == 0:\n                tmp = check(n, x, y, diff)\n                if tmp[n - 1] < output[n - 1]:\n                    output = tmp\n            diff -= 1\n    print(' '.join([str(x) for x in output]))", "T = int(input())\nfor _ in range(T):\n    (n, x, y) = map(int, input().split())\n    d = y - x\n    if d == n - 1:\n        for i in range(x, y + 1):\n            print(i, end=' ')\n        print()\n    elif d > n - 1:\n        if d % (n - 1) == 0:\n            d = d // (n - 1)\n            for i in range(n):\n                print(d * i + x, end=' ')\n            print()\n        else:\n            N = n - 2\n            while d % N:\n                N -= 1\n            d = d // N\n            m = 0\n            for i in range(y, 0, -d):\n                print(i, end=' ')\n                m += 1\n                if m == n:\n                    print()\n                    break\n            if m < n:\n                for i in range(y + d, y + d * (n - m + 1), d):\n                    print(i, end=' ')\n                print()\n    else:\n        m = 0\n        for i in range(y, 0, -1):\n            print(i, end=' ')\n            m += 1\n            if m == n:\n                print()\n                break\n        if m < n:\n            for i in range(y + 1, y + n - m + 1):\n                print(i)\n            print()", "for _ in range(int(input())):\n    (n1, x, y) = map(int, input().split())\n    n = n1 - 1\n    y1 = y\n    while True:\n        if (y - x) % n == 0:\n            ans = (y - x) // n\n            break\n        else:\n            n -= 1\n    for i in range(n1):\n        print(y, end=' ')\n        y -= ans\n        if y < 1:\n            for j in range(n1 - i - 1):\n                y1 += ans\n                print(y1, end=' ')\n            break\n    print('')", "for _ in range(int(input())):\n    (a, b, c) = [int(x) for x in input().split()]\n    i = a\n    while (c - b) % (i - 1) != 0:\n        i -= 1\n    difference = (c - b) // (i - 1)\n    left_term = (b - 1) // difference\n    if left_term + i >= a:\n        ans = c\n    else:\n        ans = (a - (left_term + i)) * difference + c\n    for i in range(a):\n        print(ans, end=' ')\n        ans -= difference\n    print()", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    d = y - x\n    for i in range(1, n):\n        if (y - x) % i == 0:\n            d = min(d, (y - x) // i)\n    z = 0\n    while x - (z + 1) * d > 0 and x + (n - 1 - (z + 1)) * d >= y:\n        z += 1\n    a = [x + (k - z) * d for k in range(n)]\n    print(*a)", "R1 = lambda : list(map(int, input().split()))\nR2 = lambda : int(input())\nR3 = lambda : list(input())\nt = R2()\nfor _ in range(t):\n    (n, x, y) = R1()\n    d = y - x\n    k = d // n + 1\n    while d % k:\n        k += 1\n    x = max(x % k or k, y - n * k + k)\n    print(*range(x, x + n * k, k))", "import sys\nimport math\n\ndef answer(n, x, y):\n    if n == 2:\n        return [x, y]\n    d = y - x\n    numr = n - 2\n    dary = []\n    for i in range(1, int(math.sqrt(d)) + 1):\n        if d % i == 0:\n            dary.append(i)\n            dary.append(d // i)\n    dary.sort()\n    for e in dary:\n        if e <= numr + 1:\n            best = e\n        else:\n            break\n    lst = []\n    for i in range(x, y + 1, d // best):\n        lst.append(i)\n    mn = x\n    mx = y\n    while len(lst) < n:\n        if mn - d // best > 0:\n            lst.append(mn - d // best)\n            mn -= d // best\n        else:\n            lst.append(mx + d // best)\n            mx += d // best\n    return lst\n\ndef main():\n    t = int(input())\n    while t:\n        (n, x, y) = [int(i) for i in sys.stdin.readline().split()]\n        print(' '.join(map(str, answer(n, x, y))))\n        t -= 1\n    return\nmain()", "t = int(input())\nresult = []\nfor _ in range(t):\n    c = input().split()\n    (n, x, y) = (int(c[0]), int(c[1]), int(c[2]))\n    result = []\n    if n == 2:\n        print(x, y)\n    else:\n        result = []\n        count = n - 1\n        while (y - x) % count != 0 and count >= 1:\n            count -= 1\n        dif = (y - x) // count\n        result.append(x)\n        [result.append(x + i * dif) for i in range(1, count + 1)]\n        temp = x\n        while len(result) < n and temp - dif >= 1:\n            temp = temp - dif\n            result.append(temp)\n        temp = y\n        while len(result) < n:\n            temp = temp + dif\n            result.append(temp)\n        print(*result)", "for _ in range(int(input())):\n    (n, x, y) = [int(x) for x in input().split()]\n    d = y - x\n    d1 = []\n    for i in range(1, d + 1):\n        if d % i == 0:\n            d1.append(i)\n    for i in range(len(d1)):\n        y1 = int(str(y))\n        l = [y1]\n        c = 1\n        while y1 - d1[i] >= 1 and c < n:\n            y1 -= d1[i]\n            l.append(y1)\n            c += 1\n        if c == n and x in l:\n            print(*l)\n            break\n        elif c < n and x in l:\n            k1 = int(str(y))\n            while c < n:\n                k1 += d1[i]\n                l.append(k1)\n                c += 1\n            print(*l)\n            break", "for q in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    for i in range(n - 1, 0, -1):\n        if (y - x) % i == 0:\n            arr = []\n            k = x\n            count = 0\n            while count < n - i and k > 0:\n                arr.append(k)\n                k = k - (y - x) // i\n                count += 1\n            k = x + (y - x) // i\n            while len(arr) < n:\n                arr.append(k)\n                k = k + (y - x) // i\n            print(*arr)\n            break", "int_inp = lambda : int(input())\nstrng = lambda : input().strip()\nstrl = lambda : list(input().strip())\nmul = lambda : map(int, input().strip().split())\nmulf = lambda : map(float, input().strip().split())\nseq = lambda : list(map(int, input().strip().split()))\nimport math\nfrom collections import Counter, defaultdict\nfor _ in range(int_inp()):\n    (n, x, y) = mul()\n    k = y - x\n    a = []\n    for i in range(1, y):\n        if k / i <= n - 1 and k % i == 0:\n            break\n    maxx = y\n    for j in range(1, n + 1):\n        a.append(y)\n        if y - i <= 0:\n            for k in range(1, n - j + 1):\n                maxx = maxx + i\n                a.append(maxx)\n            break\n        y = y - i\n    print(*a)", "def listres(n, x, y):\n    d = y - x\n    i = n - 1\n    while d % i != 0:\n        i -= 1\n    et = n - 1 - i\n    c = d // i\n    k = x\n    for j in range(n - 1 - i):\n        if k - c > 0:\n            k -= c\n        else:\n            break\n    p = ''\n    for m in range(n):\n        p += str(k) + ' '\n        k += c\n    return p\nt = input()\nno = int(t)\ns = ''\nfor i in range(no):\n    r2 = input().split(' ')\n    s += listres(int(r2[0]), int(r2[1]), int(r2[2])) + '\\n'\nprint(s)", "t = int(input())\nfor _ in range(t):\n    (n, x, y) = map(int, input().split())\n    d = y - x\n    for dst in range(n - 1, 0, -1):\n        if d % dst == 0:\n            break\n    e = d // dst\n    s = max(y - (n - 1) * e, (y - 1) % e + 1)\n    print(' '.join(map(str, range(s, s + e * n, e))))", "import math\nfor i in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    subtract_value = 0\n    for j in range(math.ceil((y - x) / (n - 1)), y - x + 1):\n        if (y - x) % j == 0:\n            subtract_value = j\n            break\n    result = [str(y - subtract_value * min(y // subtract_value, n - 1) + subtract_value * j) for j in range(n)]\n    if result[0] == '0':\n        result.append(str(int(result[-1]) + subtract_value))\n        result.pop(0)\n    print(' '.join(result))", "for _ in range(int(input())):\n    tmp = input().split(' ')\n    n = int(tmp[0])\n    x = int(tmp[1])\n    y = int(tmp[2])\n    subs = y - x\n    d = 0\n    for i in range(1, 51):\n        if subs % i == 0 and subs / i + 1 <= n:\n            d = i\n            break\n    a = []\n    s = 1\n    for i in range(x, y + 1, d):\n        if n > 0:\n            a.append(i)\n            n -= 1\n    for i in range(x - d, 0, -d):\n        if n > 0:\n            a.append(i)\n            n -= 1\n    for i in range(1, n + 1):\n        a.append(y + i * d)\n    print(' '.join((str(char) for char in a)))", "def find_max_divisor(num, limit):\n    if limit > num:\n        return 1\n    min_diff = num\n    for d in range(1, num + 1):\n        if num % d == 0 and d <= limit:\n            min_diff = min(num // d, min_diff)\n    return min_diff\nt = int(input())\nfor _ in range(t):\n    (n, x, y) = map(int, input().split())\n    if n == 2:\n        print(x, y)\n        continue\n    diff = find_max_divisor(y - x, n - 1)\n    total_nums = (y - x) // diff + 1\n    rem_nums = n - total_nums\n    if rem_nums > 0:\n        if x - rem_nums * diff > 0:\n            start_num = x - rem_nums * diff\n        else:\n            start_num = x - x // diff * diff\n    else:\n        start_num = x\n    if start_num == 0:\n        start_num = diff\n    nums = 0\n    item = start_num\n    while nums < n:\n        nums += 1\n        print(item, end=' ')\n        item += diff\n    print('')", "m = int(input())\nfor i in range(m):\n    (n, x, y) = map(int, input().split())\n    for j in range(1, y - x + 1, 1):\n        if (y - x) % j == 0 and (y - x) // j + 1 <= n:\n            lis = []\n            lis += list(range(x, y + 1, j))\n            k = n - len(lis)\n            lis += list(range(x - j, 0, -j))[:k]\n            k = n - len(lis)\n            lis += list(range(y + j, y + (k + 1) * j, j))\n            print(*lis)\n            break", "t = int(input())\nfor i in range(t):\n    (n, x, y) = map(int, input().split())\n    diff = y - x\n    for delta in range(1, diff + 1):\n        if diff % delta:\n            continue\n        if int(diff / delta + 1) > n:\n            continue\n        k = min(int((y - 1) / delta), n - 1)\n        a0 = y - k * delta\n        break\n    for j in range(n):\n        print('{} '.format(a0 + j * delta), end='')\n    print()", "from math import *\nfrom math import factorial as fact, comb as ncr\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom collections import Counter as ctr\nfrom collections import deque as dq\nfrom array import array\nfrom re import search\nli = lambda : list(map(int, input().split()))\narr = lambda a: array('i', a)\nbi = lambda n: bin(n).replace('0b', '')\nyn = lambda f: print('NYOE S'[f::2])\nsbstr = lambda a, s: search('.*'.join(a), s)\n\ndef solve():\n    for _ in range(int(input())):\n        (n, x, y) = li()\n        d = y - x\n        gd = 1\n        if n < d + 1:\n            for i in range(2, d + 1):\n                if d % i == 0 and d // i < n:\n                    gd = i\n                    break\n        m = x\n        for i in range(n - 1 - d // gd):\n            if m - gd > 0:\n                m -= gd\n            else:\n                break\n        for i in range(n):\n            print(m + gd * i, end=' ')\n        print()\nsolve()", "t = int(input())\nfor i in range(t):\n    (n, x, y) = map(int, input().split())\n    ans = 0\n    a2 = 0\n    for j in range(n - 1, 0, -1):\n        if (x - y) % j == 0:\n            ans = (y - x) // j\n            a2 = j\n            break\n    a1 = x // ans + 1\n    if a1 + a2 > n:\n        a1 = n - a2\n    fir = x - ans * (a1 - 1)\n    if fir == 0:\n        fir += ans\n    for j in range(n):\n        print(fir + j * ans, end=' ')\n    print()", "for s in [*open(0)][1:]:\n    (n, x, y) = map(int, s.split())\n    diff = y - x\n    for d in range(1, diff + 1):\n        if diff % d:\n            continue\n        if diff // d + 1 > n:\n            continue\n        k = min((y - 1) // d, n - 1)\n        a0 = y - k * d\n        for i in range(n):\n            print(a0 + i * d, end=' ')\n        print('')\n        break", "for _ in range(int(input())):\n    (a, b, x) = [int(i) for i in input().split()]\n    r = 0\n    for i in range(a - 1, -1, -1):\n        if (x - b) % i == 0:\n            r = (x - b) // i\n            break\n    v = [x]\n    while a > 1:\n        v.append(x - r)\n        x -= r\n        a -= 1\n    t = max(v)\n    for i in v:\n        if i <= 0:\n            print(t + r, end=' ')\n            t += r\n        else:\n            print(i, end=' ')\n    print()", "def main(n, x, y):\n    d = 9999999999\n    idx = -1\n    for i in range(1, n):\n        n1 = i\n        t = (y - x) / (n - n1)\n        if t.is_integer():\n            if t < d:\n                d = t\n                idx = n - n1\n    res = []\n    c = 0\n    for i in range(idx + 1):\n        p = x + i * d\n        res.append(p)\n        c += 1\n    if n == idx + 1:\n        return [int(i) for i in res]\n    for i in range(1, n):\n        p = x - i * d\n        if p > 0:\n            c += 1\n            res.append(p)\n        if len(res) == n:\n            return [int(i) for i in res]\n        if p < 0:\n            continue\n    if len(res) == n:\n        return\n    for i in range(c, n):\n        p = min(res) + i * d\n        res.append(p)\n    return [int(i) for i in res]\nk = int(input())\nfor i in range(k):\n    (n, x, y) = map(int, input().split())\n    t = main(n, x, y)\n    print(*t, sep=' ')", "import math\n\ndef isInt(a):\n    return math.floor(a) == a\n\ndef fn(n, x, y):\n    mind = float('inf')\n    mins = float('inf')\n    mina = float('inf')\n    for d in range(1, y - x + 1):\n        for a in range(1, x + 1):\n            if isInt((x - a) / d) and isInt((y - a) / d) and ((x - a) / d <= n - 1) and ((y - a) / d <= n - 1):\n                if a + (n - 1) * d < mins:\n                    mins = a + (n - 1) * d\n                    mind = d\n                    mina = a\n    return (mina, mind)\n\ndef solve(n, x, y):\n    (a, d) = fn(n, x, y)\n    for i in range(n):\n        print(a + i * d, end=' ')\n    print('', end='\\n')\nfor _ in range(int(input())):\n    [n, x, y] = [int(i) for i in input().rstrip().split(' ')]\n    solve(n, x, y)", "t = int(input())\nfor _ in range(t):\n    (n, x, y) = map(int, input().split())\n    z = [x, y]\n    c = y - x\n    d = 0\n    if len(z) == n:\n        print(*z)\n        continue\n    for i in range(1, n):\n        if c % i == 0:\n            d = c // i\n    while x - d > 0 and x + d * (n - 1) > y:\n        x -= d\n    z = [x + d * j for j in range(0, n)]\n    print(*z)", "t = int(input())\nfor i in range(t):\n    (n, x, y) = map(int, input().split())\n    dif = y - x\n    i = n - 1\n    l = []\n    while i >= 1:\n        if dif % i == 0:\n            p = dif // i\n            break\n        i -= 1\n    z = x\n    while z <= y:\n        l.append(z)\n        z += p\n    z = x - p\n    c = len(l)\n    while z >= 1 and c < n:\n        l.append(z)\n        z = z - p\n        c += 1\n    z = y + p\n    while c < n:\n        l.append(z)\n        z += p\n        c += 1\n    print(*l)", "import math\nfor i in range(int(input())):\n    a = [int(j) for j in input().split()]\n    n = a[0]\n    x = a[1]\n    y = a[2]\n    z = y - x\n    j = 0\n    c = 0\n    for d in range(math.ceil(z / (n - 1)), z + 1):\n        if z % d == 0:\n            break\n    while y - j * d > 0 and c < n:\n        print(y - j * d, end=' ')\n        j += 1\n        c += 1\n    if c != n:\n        for k in range(n - c):\n            print(y + (k + 1) * d, end=' ')\n    print()", "import sys\nfrom collections import Counter, defaultdict\nfrom math import fsum, inf, sqrt, gcd, ceil\nfrom itertools import combinations, permutations\nflush = lambda : sys.stdout.flush\nip = lambda : input\nii = lambda : int(input())\nr = lambda : map(int, input().split())\nrr = lambda : list(r())\n\ndef solve():\n    (n, x, y) = r()\n    arr = []\n    if n == 2:\n        print(x, y)\n        return\n    d = y - x\n    ans = []\n    curr = float('inf')\n    for i in range(1, 55):\n        arr = [y]\n        if d % i != 0:\n            continue\n        k = 1\n        while len(arr) < n:\n            if y - i * k < 1:\n                break\n            arr.append(y - i * k)\n            k += 1\n        k = 1\n        while len(arr) < n:\n            arr.append(y + i * k)\n            k += 1\n        if x in arr and y in arr and (len(arr) == n):\n            if (m := (max(arr) < curr)):\n                curr = m\n                ans = arr\n    print(*ans)\nfor _ in range(ii()):\n    solve()", "t = int(input())\nfor i in range(t):\n    arr = list(map(int, input().rstrip().split()))\n    n = arr[0]\n    x = arr[1]\n    y = arr[2]\n    if n == 2:\n        array = [x, y]\n        print(' '.join(map(str, array)))\n    else:\n        for i in range(n - 1, 0, -1):\n            if (y - x) % i == 0:\n                diff = (y - x) // i\n                break\n        if y - diff * (n - 1) > 0:\n            s = y - diff * (n - 1)\n            array = [s]\n            for i in range(1, n):\n                array += [s + i * diff]\n            print(' '.join(map(str, array)))\n        elif y % diff == 0:\n            array = [diff]\n            for i in range(1, n):\n                array += [diff * (1 + i)]\n            print(' '.join(map(str, array)))\n        else:\n            s = y % diff\n            array = [s]\n            for i in range(1, n):\n                array += [s + i * diff]\n            print(' '.join(map(str, array)))", "import math\nfor i in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    subtract_value = 0\n    for j in range(math.ceil((y - x) / (n - 1)), y - x + 1):\n        if (y - x) % j == 0:\n            subtract_value = j\n            break\n    result = [str(y - subtract_value * min(y // subtract_value, n - 1) + subtract_value * j) for j in range(n)]\n    if result[0] == '0':\n        result.append(str(int(result[-1]) + subtract_value))\n        result.pop(0)\n    print(' '.join(result))", "for i in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    if (y - x) % (n - 1) == 0:\n        k = int((y - x) / (n - 1))\n        print(*range(x, x + n * k, k))\n    else:\n        k = int((y - x) / (n - 1)) + 1\n        while k <= y - x:\n            if (y - x) % k == 0:\n                break\n            k = k + 1\n        z = int((x - 1) / k)\n        if n - 1 - (y - x) / k < z:\n            print(*range(y - (n - 1) * k, y + k, k))\n        else:\n            print(*range(x - z * k, x + (n - z) * k, k))", "for i in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    for i in range(1, y - x + 1):\n        a = (y - x) / i\n        if a == int(a) and a < n:\n            ans = list(range(x, y + i, i))\n            k = x - i\n            while len(ans) < n and k > 0:\n                ans.append(k)\n                k -= i\n            k = y + i\n            while len(ans) < n:\n                ans.append(k)\n                k += i\n            print(*ans)\n            break", "for _ in ' ' * int(input()):\n    (n, x, y) = map(int, input().split())\n    (num, cnt) = (n, 0)\n    n -= 1\n    while (y - x) % n != 0:\n        n -= 1\n    fac = (y - x) // n\n    for i in range(x, y + 1, fac):\n        print(i, end=' ')\n        cnt += 1\n    while cnt < num and x - fac > 0:\n        print(x - fac, end=' ')\n        x -= fac\n        cnt += 1\n    while cnt < num:\n        print(y + fac, end=' ')\n        y += fac\n        cnt += 1\n    print()", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    zc = y - x\n    if zc % (n - 1) == 0:\n        cd = zc // (n - 1)\n        for i in range(x, y + 1, cd):\n            print('%d ' % i, end='')\n        print()\n    else:\n        for i in range(n - 1, 0, -1):\n            if (y - x) % i == 0:\n                break\n        cd = (y - x) // i\n        sl = 0\n        for i in range(y, 0, -cd):\n            if sl == n:\n                break\n            sl += 1\n            print('%d ' % i, end='')\n        for i in range(y + cd, 10 ** 18, cd):\n            if sl == n:\n                break\n            print('%d ' % i, end='')\n            sl += 1\n        print()", "from collections import deque\nfor _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    ans = -1\n    for i in range(n - 1, 0, -1):\n        if (y - x) % i == 0:\n            ans = i\n            break\n    d = (y - x) // i\n    rem = n\n    q = deque([])\n    last = x\n    while last <= y:\n        q.append(last)\n        last += d\n        rem -= 1\n    last = x - d\n    while rem and last > 0:\n        q.appendleft(last)\n        last -= d\n        rem -= 1\n    last = y + d\n    while rem:\n        q.append(last)\n        last += d\n        rem -= 1\n    while q:\n        print(q.popleft(), end=' ')\n    print()", "def cast(cre, typ):\n    return type(typ)(map(cre, typ))\n\ndef solution():\n    for t in range(int(input())):\n        (n, x, y) = cast(int, input().split())\n        sub = y - x\n        l = [x, y]\n        term = 0\n        for i in range(n - 1, 0, -1):\n            if sub % i == 0:\n                term = sub // i\n                break\n        cnt = -1\n        while len(l) < n:\n            val = l[1] + cnt * term\n            if val < 1:\n                cnt = 1\n                continue\n            elif val != l[0]:\n                l.append(val)\n            cnt += -1 if cnt < 0 else 1\n        print(' '.join(cast(str, l)))\nsolution()", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    dif = y - x\n    for i in range(n - 1, -1, -1):\n        if dif % i == 0:\n            a = dif // i\n            break\n    print(y, end=' ')\n    c = 1\n    for i in range(1, n):\n        if y - i * a > 0:\n            print(y - i * a, end=' ')\n            c += 1\n        else:\n            break\n    if c != n:\n        for i in range(1, n - c + 1):\n            print(y + i * a, end=' ')\n    print()", "import sys\n\ndef solve(n, x, y):\n    diff = y - x\n    smallest_max = float('inf')\n    sm_gap = 0\n    for n_between in range(n - 1):\n        if diff % (n_between + 1) == 0:\n            gap = diff // (n_between + 1)\n            nleft = (x - 1) // gap\n            nused = nleft + n_between + 2\n            if nused >= n:\n                smallest_max = y\n                sm_gap = gap\n            else:\n                remain = n - nused\n                smallest_max = y + remain * gap\n                sm_gap = gap\n        else:\n            continue\n    array = [x for x in range(smallest_max - (n - 1) * sm_gap, smallest_max + 1, sm_gap)]\n    return array\nIN = [x.strip() for x in sys.stdin.readlines()]\nT = int(IN[0])\ncur = 0\nfor ti in range(T):\n    (n, x, y) = [int(x) for x in IN[cur + 1].split(' ')]\n    res = solve(n, x, y)\n    print(' '.join([str(x) for x in res]))\n    cur += 1", "import sys\nfor _ in range(int(input())):\n    (n, x, y) = [int(i) for i in input().split()]\n    diff = y - x\n    p = []\n    check = -1\n    for i in range(1, diff + 1):\n        if diff % i == 0 and diff // i <= n - 1:\n            check = i\n            break\n    a = [x]\n    for i in range(n - 1):\n        if a[-1] + check <= y:\n            a.append(a[-1] + check)\n        else:\n            break\n    temp = []\n    while len(a) + len(temp) < n:\n        if len(temp) == 0 and a[0] - check < 1:\n            a.append(a[-1] + check)\n        elif len(temp) != 0 and temp[-1] - check < 1:\n            a.append(a[-1] + check)\n        elif len(temp) == 0 and a[0] - check >= 1:\n            temp.append(a[0] - check)\n        elif len(temp) != 0 and temp[-1] - check >= 1:\n            temp.append(temp[-1] - check)\n    temp.reverse()\n    ans = temp[:]\n    ans.extend(a)\n    print(*ans)", "def solve():\n    (n, x, y) = map(int, input().split())\n    diff = y - x\n    if n == 2:\n        print(x, y)\n        return\n    for i in range(1, diff + 1):\n        if diff % i != 0:\n            continue\n        k = diff // i - 1\n        if k + 2 > n:\n            continue\n        arr = [x + j * i for j in range(k + 2)]\n        if len(arr) < n:\n            begin = [x - (j + 1) * i for j in range(n - len(arr)) if x - (j + 1) * i > 0]\n        else:\n            print(' '.join(map(str, arr)))\n            return\n        if len(begin) + len(arr) < n:\n            end = [y + (j + 1) * i for j in range(n - len(arr) - len(begin))]\n        else:\n            print(' '.join(map(str, begin + arr)))\n            return\n        print(' '.join(map(str, begin + arr + end)))\n        return\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    a_n_max = float('inf')\n    d_max = 0\n    for n1 in range(2, n + 1):\n        d = (y - x) / (n1 - 1)\n        if d % 1 == 0:\n            for pos in range(n, n1 - 1, -1):\n                a1 = y - d * (pos - 1)\n                if a1 > 0:\n                    a_n = a1 + d * (n - 1)\n                    if a_n < a_n_max:\n                        a_n_max = int(a_n)\n                        d_max = int(d)\n    arr = [0] * n\n    arr[-1] = a_n_max\n    for i in range(n - 2, -1, -1):\n        arr[i] = arr[i + 1] - d_max\n    print(' '.join((str(i) for i in arr)))", "def read(datatype=int):\n    return datatype(input())\n\ndef readl(datatype=int):\n    return list(map(datatype, input().split()))\n\ndef printl(data):\n    string = ''\n    for d in data:\n        string += str(d) + ' '\n    print(string)\n\ndef testcase():\n    (n, x, y) = readl()\n    (x, y) = (max(x, y), min(x, y))\n    arr = [0 for _ in range(n)]\n    best_diff = 1\n    best_max = 10 ** 9\n    best_start = 1\n    for diff in range(1, x - y + 1):\n        if (x - y) % diff == 0:\n            alpha = (x - y) // diff\n            if alpha >= n:\n                continue\n            elif alpha == n - 1:\n                best_diff = diff\n                best_start = y\n                break\n            else:\n                left = (y - 1) // diff\n                if alpha + left >= n:\n                    best_max = x\n                    best_diff = diff\n                    best_start = y - diff * (n - alpha - 1)\n                    break\n                else:\n                    right = n - alpha - left\n                    curr_max = x + diff * right\n                    curr_start = y - diff * (n - alpha - right)\n                    if curr_max < best_max:\n                        best_diff = diff\n                        best_max = curr_max\n                        best_start = curr_start\n    arr = [best_start]\n    for _ in range(n - 1):\n        arr.append(arr[-1] + best_diff)\n    printl(arr)\n    return\nt = read()\nfor _ in range(t):\n    testcase()", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef factors(n):\n    if n == 1:\n        return [1]\n    v = [1]\n    for i in range(2, n // 2 + 1):\n        if n % i == 0:\n            v.append(i)\n    v.append(n)\n    return v\n\ndef solve(n, x, y):\n    if n == 2:\n        return str(x) + ' ' + str(y)\n    for factor in factors(y - x):\n        if x + factor * (n - 1) < y:\n            continue\n        ans = [x, y]\n        remaining = n - 2\n        for i in range(1, n - 1):\n            if x + i * factor >= y:\n                break\n            ans.append(x + i * factor)\n            remaining -= 1\n        for i in range(1, remaining + 1):\n            if x - i * factor <= 0:\n                break\n            ans.append(x - i * factor)\n            remaining -= 1\n        for i in range(1, remaining + 1):\n            ans.append(y + i * factor)\n        return ' '.join(list(map(str, ans)))\nlines = inp()\nfor i in range(lines):\n    v = inlt()\n    print(solve(*v))", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    for d in range(1, 50):\n        if (y - x) % d != 0:\n            continue\n        if (y - x) / d >= n:\n            continue\n        lst = []\n        lst.extend(range(y, 0, -d))\n        lst = lst[:n]\n        a = lst[-1]\n        lst.extend(range(a, a + d * n, d))\n        lst = list(set(lst))[:n]\n        print(' '.join(map(str, lst)))\n        break", "t = int(input())\nfor i in range(t):\n    (n, x, y) = map(int, input().split())\n    d = y - x\n    min_sum = float('inf')\n    min_g = -1\n    min_l = -1\n    for i in range(n - 1, 0, -1):\n        if d % i == 0:\n            g = d // i\n            l = min(n - 1 - i, (x - 1) // g)\n            r = n - 1 - i - l\n            lv = x - l * g\n            rv = y + l * g\n            s = (lv + rv) * n // 2\n            if s < min_sum:\n                min_sum = s\n                min_g = g\n                min_l = lv\n    result = []\n    for i in range(n):\n        result.append(min_l + i * min_g)\n    print(' '.join(list(map(str, result))))", "def run_case():\n    (n, x, y) = map(int, input().split())\n    temp = y - x\n    flag = 0\n    for i in range(n - 1, 0, -1):\n        if temp % i == 0:\n            flag = temp // i\n            break\n    mid = temp // flag + 1\n    num = 0\n    temp = x - flag\n    while temp > 0 and num + mid < n:\n        num += 1\n        temp -= flag\n    if num + mid == n:\n        res = []\n        for i in range(n):\n            res.append(y)\n            y -= flag\n        print(' '.join((str(i) for i in res)))\n    else:\n        temp += flag\n        res = []\n        for i in range(n):\n            res.append(temp)\n            temp += flag\n        print(' '.join((str(i) for i in res)))\nflag = 1\nif flag:\n    t = int(input())\n    for i in range(t):\n        run_case()\nelse:\n    run_case()", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    t = y - x\n    d = n - 1\n    ans = []\n    c = n\n    while d >= 1:\n        if t % d == 0:\n            break\n        d -= 1\n    for i in range(x, y + 1, t // d):\n        ans.append(i)\n        c -= 1\n    i = x - t // d\n    while i > 0 and c > 0:\n        ans.append(i)\n        i -= t // d\n        c -= 1\n    i = y + t // d\n    while c > 0:\n        ans.append(i)\n        i += t // d\n        c -= 1\n    print(*ans)", "T = int(input())\nfor t in range(T):\n    nxy = list(map(int, input().split()))\n    n = nxy[0]\n    x = nxy[1]\n    y = nxy[2]\n    if n == 2:\n        print(x, y)\n        continue\n    if (y - x) % (n - 1) == 0:\n        d = (y - x) // (n - 1)\n    else:\n        d = (y - x) // (n - 1) + 1\n    diff = y - x\n    for i in range(d, y - x + 1):\n        if (y - x) % i == 0:\n            diff = i\n            break\n    li = []\n    i = x\n    s = 0\n    while i != y + diff:\n        li.append(i)\n        i += diff\n        s += 1\n    flag = 0\n    if s == n:\n        flag = 1\n    else:\n        i = x - diff\n        if i > 0:\n            while i > 0 and flag == 0:\n                li.append(i)\n                i -= diff\n                s += 1\n                if n == s:\n                    flag = 1\n                    break\n    i = y\n    while flag == 0:\n        i += diff\n        li.append(i)\n        s += 1\n        if n == s:\n            flag = 1\n    for i in range(n):\n        print(li[i], end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    (n, x, y) = list(map(int, input().split()))\n    d = y - x\n    for i in range(1, n):\n        if (y - x) % i == 0:\n            d = min(d, (y - x) // i)\n    ans = []\n    p = x\n    while p <= y and n > 0:\n        ans.append(p)\n        p = p + d\n        n = n - 1\n        if p > y:\n            break\n    p = x - d\n    while p > 0 and n > 0:\n        ans.append(p)\n        p = p - d\n        n = n - 1\n    p = y + d\n    while n > 0:\n        ans.append(p)\n        p = p + d\n        n = n - 1\n    print(*ans)", "def calc(p, n):\n    j = 1\n    d = 100000\n    while j * j <= p:\n        if p % j == 0:\n            if p // j <= n - 1:\n                d = min(d, j)\n            if j <= n - 1:\n                d = min(d, p // j)\n        j += 1\n    return d\nfor _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    p = y - x\n    t = 0\n    c = 0\n    f = []\n    d = calc(p, n)\n    while t < n and x + c * d <= y:\n        f.append(x + c * d)\n        c += 1\n        t += 1\n    c = 1\n    while t < n and x - c * d >= 1:\n        f.append(x - c * d)\n        t += 1\n        c += 1\n    c = 1\n    while t < n:\n        f.append(y + c * d)\n        t += 1\n        c += 1\n    print(*f)", "t = int(input())\nfor _ in range(t):\n    (n, x, y) = map(int, input().split())\n    for i in range(n - 1, 0, -1):\n        diff = abs(x - y)\n        if diff % i == 0:\n            d = int(diff / i)\n            break\n    arr = [] * n\n    j = x\n    while j <= y:\n        arr.append(j)\n        j += d\n        n -= 1\n    if n != 0:\n        j = x - d\n        while j > 0 and n != 0:\n            arr.append(j)\n            j -= d\n            n -= 1\n    if n != 0:\n        j = y + d\n        while n != 0:\n            arr.append(j)\n            j += d\n            n -= 1\n    print(*arr, sep=' ')", "for i in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    diff = abs(x - y)\n    for j in range(1, diff + 1):\n        if diff % j == 0:\n            gp = int(j)\n            if gp * (n - 1) >= diff:\n                break\n    ls = []\n    y1 = max(x, y)\n    for j in range(n):\n        if y1 - j * gp > 0:\n            ls.append(y1 - j * gp)\n            k1 = j\n        else:\n            ls.append(y1 + gp * (j - k1))\n    ls.sort()\n    an = ''\n    for a in ls:\n        an += str(a) + ' '\n    print(an)"]