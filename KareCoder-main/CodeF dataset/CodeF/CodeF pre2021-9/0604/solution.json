["for _ in range(int(input())):\n    s = ['#'] + sorted(list(input()))\n    n = int(input())\n    b = [-1] + [int(i) for i in input().split()]\n    ans = ['#'] * (n + 1)\n    while 0 in b:\n        zero = []\n        for i in range(1, n + 1):\n            if b[i] == 0:\n                zero.append(i)\n                b[i] = -1\n        while s.count(s[-1]) < len(zero):\n            p = s[-1]\n            while s[-1] == p:\n                s.pop()\n        p = 0\n        for i in zero:\n            p = ans[i] = s[-1]\n        while s[-1] == p:\n            s.pop()\n        for i in range(1, n + 1):\n            if ans[i] == '#':\n                for j in zero:\n                    b[i] -= abs(j - i)\n    print(''.join(ans[1:]))", "for _ in range(int(input())):\n    s = list(input().strip())\n    m = int(input())\n    ans = [None] * m\n    B = list(map(int, input().split()))\n    s.sort(reverse=True)\n    scnt = []\n    cnt = 1\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            cnt += 1\n        else:\n            scnt.append(cnt)\n            cnt = 1\n    scnt.append(cnt)\n    vis = [True] * m\n    si = j = 0\n    curr = [bi for bi in range(m) if B[bi] == 0]\n    while len(curr):\n        while scnt[si] < len(curr):\n            j += scnt[si]\n            si += 1\n        for bi in curr:\n            vis[bi] = False\n            ans[bi] = s[j]\n            for bii in range(m):\n                B[bii] -= abs(bi - bii)\n        j += scnt[si]\n        si += 1\n        curr = [bi for bi in range(m) if B[bi] == 0 and vis[bi]]\n    print(''.join(ans))", "letters = 'abcdefghijklmnopqrstuvwxyz'\nT = int(input())\n\ndef min_index(bs):\n    min_b = 2000\n    min_is = []\n    for (i, b) in enumerate(bs):\n        if b == None:\n            continue\n        if b == min_b:\n            min_is.append(i)\n        if b < min_b:\n            min_b = b\n            min_is = [i]\n    for i in min_is:\n        bs[i] = None\n    return (min_is, min_b)\n\ndef max_letter(letter_dict, many):\n    for l in letters[::-1]:\n        if letter_dict[l] >= many:\n            letter_dict[l] = 0\n            return l\n        letter_dict[l] = 0\nfor t in range(T):\n    letter_dict = dict()\n    for l in letters:\n        letter_dict[l] = 0\n    s = input()\n    for a in s:\n        letter_dict[a] += 1\n    m = int(input())\n    ans = list(range(m))\n    bs = list((int(b) for b in input().split()))\n    while True:\n        (min_is, min_b) = min_index(bs)\n        if len(min_is) == 0:\n            break\n        a = max_letter(letter_dict, len(min_is))\n        for i in min_is:\n            ans[i] = a\n            for (j, b) in enumerate(bs):\n                if b is not None:\n                    bs[j] -= abs(j - i)\n    for a in ans:\n        print(a, end='')\n    print()", "for test in range(int(input())):\n    s = list(input())\n    s.sort(reverse=True)\n    a = []\n    last = s[0]\n    count = 1\n    for i in range(1, len(s)):\n        if s[i] == last:\n            count += 1\n        else:\n            a.append((last, count))\n            last = s[i]\n            count = 1\n    a.append((last, count))\n    m = int(input())\n    b = list(map(int, input().split()))\n    t = [''] * m\n    count = -1\n    while count < len(a):\n        index = []\n        count += 1\n        for i in range(m):\n            if b[i] == 0:\n                index.append(i)\n                b[i] = -1\n        for i in range(m):\n            if b[i] >= 0:\n                for j in index:\n                    b[i] -= abs(i - j)\n        while count < len(a) and a[count][1] < len(index):\n            count += 1\n        for i in index:\n            t[i] = a[count][0]\n    print(''.join(t))", "class AlphaHz:\n\n    def __init__(self, s, m, b):\n        self.s = s\n        self.m = m\n        self.b = b\n        code = map(lambda x: ord(x) - ord('a'), s)\n        self.count = [0] * 27\n        for c in code:\n            self.count[c] += 1\n        self.mcode = 26\n        self.t = ['\\x00'] * m\n\n    def solve(self):\n        while True:\n            zeros = []\n            for i in range(m):\n                if b[i] == 0:\n                    zeros.append(i)\n                    b[i] = -1\n            if self.count[self.mcode] < len(zeros):\n                for i in range(self.mcode - 1, -1, -1):\n                    if self.count[i] >= len(zeros):\n                        self.mcode = i\n                        break\n            for zero in zeros:\n                self.t[zero] = chr(ord('a') + self.mcode)\n            for i in range(m):\n                for zero in zeros:\n                    b[i] -= abs(i - zero)\n            if not len(zeros):\n                break\n            self.mcode -= 1\n        return ''.join(self.t)\nt = int(input())\nfor i in range(t):\n    s = input()\n    m = int(input())\n    b = list(map(int, input().split()))\n    obj = AlphaHz(s, m, b)\n    t = obj.solve()\n    print(t)", "def process():\n    string = input().strip()\n    n = int(input())\n    vals = list(map(int, input().split(' ')))\n    ans = [None for _ in range(len(vals))]\n    counts = [0 for _ in range(26)]\n    cur = 26\n    for elem in string:\n        counts[ord(elem) - ord('a')] += 1\n    while not all(ans):\n        zeros = [i for (i, val) in enumerate(vals) if val == 0]\n        zero_count = len(zeros)\n        for i in range(cur - 1, -1, -1):\n            if counts[i] >= zero_count:\n                for (j, elem) in enumerate(vals):\n                    if elem == 0:\n                        ans[j] = chr(ord('a') + i)\n                for (j, elem) in enumerate(vals):\n                    if vals[j] == 0:\n                        vals[j] = -1\n                    else:\n                        vals[j] -= sum((abs(j - x) for x in zeros))\n                cur = i\n                break\n    print(''.join(ans))\nt = int(input())\nfor _ in range(t):\n    process()", "t = int(input())\ncnt = 0\nwhile cnt < t:\n    cnt += 1\n    a = [0] * 26\n    for i in input():\n        a[ord(i) - 97] += 1\n    a.reverse()\n    n = int(input())\n    res = [' '] * n\n    visited = [0] * n\n    b = [int(i) for i in input().split()]\n    pos = 0\n    while True:\n        tmp = []\n        for (i, elem) in enumerate(b):\n            if elem == 0 and visited[i] == 0:\n                tmp.append(i)\n                visited[i] = 1\n        tmp_total = len(tmp)\n        if tmp_total == 0:\n            break\n        for elem in range(pos, 26):\n            if a[elem] >= tmp_total:\n                for i in tmp:\n                    res[i] = chr(25 - elem + 97)\n                a[elem] = 0\n                pos = elem\n                break\n        for j in range(n):\n            if visited[j] == 0:\n                for i in tmp:\n                    b[j] -= abs(j - i)\n    print(''.join((i for i in res)))", "for _ in range(int(input())):\n    s = input()\n    n = int(input())\n    m = n\n    b = list(map(int, input().split()))\n    c = [''] * m\n    freq = [0] * 26\n    i = 25\n    for elem in s:\n        freq[ord(elem) - ord('a')] += 1\n    while n > 0 and i >= 0:\n        zero = []\n        count = 0\n        for j in range(m):\n            if b[j] == 0:\n                zero.append(j)\n                b[j] = -1\n                count += 1\n        while i >= 0:\n            if freq[i] >= count:\n                for elem in zero:\n                    c[elem] = chr(i + ord('a'))\n                n -= count\n                for j in range(m):\n                    for elem in zero:\n                        if b[j] > 0:\n                            b[j] -= abs(j - elem)\n                i -= 1\n                break\n            else:\n                i -= 1\n    print(''.join(c))", "tc = int(input())\nwhile tc:\n    s = sorted(input())\n    n = int(input())\n    lst = []\n    zeros = []\n    lst = list(map(int, input().split()))\n    for i in range(n):\n        if lst[i] == 0:\n            zeros.append(i)\n    res = [None] * n\n    si = len(s) - 1\n    while zeros:\n        while s[si] != s[si - len(zeros) + 1]:\n            si -= 1\n        for ind in zeros:\n            res[ind] = s[si]\n            si -= 1\n        while si >= 0 and s[si] == s[si + 1]:\n            si -= 1\n        tzeros = []\n        for i in range(n):\n            if lst[i] <= 0:\n                continue\n            for ind in zeros:\n                lst[i] -= abs(i - ind)\n            if lst[i] == 0:\n                tzeros.append(i)\n        zeros = tzeros\n    print(''.join(res))\n    tc -= 1", "q = int(input())\nfor z in range(q):\n    s = list(input())\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    res = [0 for _ in range(n)]\n    s.sort(reverse=True)\n    si = 0\n    while True:\n        f = False\n        zv = []\n        for i in range(arr.__len__()):\n            if arr[i] == 0:\n                f = True\n                zv.append(i)\n                arr[i] = -1\n        for j in range(arr.__len__()):\n            if arr[j] > 0:\n                for i in zv:\n                    arr[j] -= abs(j - i)\n        if not f:\n            break\n        else:\n            i = si\n            while True:\n                ff = False\n                letter = s[i]\n                for j in range(i, i + zv.__len__()):\n                    if s[j] != letter:\n                        i = j\n                        ff = True\n                        break\n                if not ff:\n                    for k in range(zv.__len__()):\n                        res[zv[k]] = s[i]\n                    si = i\n                    while si < s.__len__() and s[si] == letter:\n                        si += 1\n                    break\n    print(''.join(res))", "for i in range(int(input())):\n    original = list(input())\n    s = sorted(set(original))\n    m = int(input())\n    b = list(map(int, input().split()))\n    ans = [None] * m\n    while sum(b) != -m:\n        zeros = set()\n        for i in range(m):\n            if b[i] == 0:\n                zeros.add(i)\n                b[i] = -1\n        while True:\n            letra = s.pop()\n            if len(zeros) <= original.count(letra):\n                for i in zeros:\n                    ans[i] = letra\n                break\n        for i in zeros:\n            for n in range(m):\n                if b[n] != -1:\n                    b[n] -= abs(i - n)\n    print(''.join(ans))", "import math\nt = int(input())\nrez = []\nfor i in range(t):\n    s = input()\n    m = int(input())\n    b = input().split(' ')\n    re = []\n    rezu = ''\n    for j in range(m):\n        b[j] = int(b[j])\n        re.append('')\n    k = []\n    al = 'abcdefghijklmnopqrstuvwxyz'\n    n = len(al)\n    for j in range(n):\n        k.append(0)\n    for j in range(len(s)):\n        k[al.index(s[j])] += 1\n    ind = 0\n    while ind != -1:\n        index = []\n        kk = 0\n        for j in range(m):\n            if b[j] == 0:\n                index.append(j)\n                kk += 1\n        if kk != 0:\n            for j in range(n - 1, -1, -1):\n                if k[j] >= kk:\n                    for y in index:\n                        re[y] = al[j]\n                    k[j] = 0\n                    n = j\n                    break\n            for j in range(m):\n                if b[j] != 0:\n                    for y in index:\n                        b[j] -= abs(y - j)\n                else:\n                    b[j] = -1\n        else:\n            ind = -1\n    for j in range(m):\n        rezu += re[j]\n    rez.append(rezu)\nfor i in range(len(rez)):\n    print(rez[i])", "for i in range(int(input())):\n    original = list(input())\n    s = sorted(set(original))\n    m = int(input())\n    b = list(map(int, input().split()))\n    ans = [None] * m\n    while sum(b) != -m:\n        zeros = set()\n        for i in range(m):\n            if b[i] == 0:\n                zeros.add(i)\n                b[i] = -1\n        while True:\n            letra = s.pop()\n            if len(zeros) <= original.count(letra):\n                for i in zeros:\n                    ans[i] = letra\n                break\n        for i in zeros:\n            for n in range(m):\n                if b[n] != -1:\n                    b[n] -= abs(i - n)\n    print(''.join(ans))", "from collections import Counter\nimport sys\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    for _ in range(II()):\n        s = SI()\n        m = II()\n        bb = LI()\n        ca = [(c, a) for (c, a) in sorted(Counter(s).items(), reverse=True)]\n        ci = 0\n        ans = [''] * m\n        while 1:\n            pos = []\n            for i in range(m):\n                if bb[i] == 0:\n                    pos.append(i)\n                    bb[i] = -1\n            if not pos:\n                break\n            while ca[ci][1] < len(pos):\n                ci += 1\n            c = ca[ci][0]\n            ci += 1\n            for i in pos:\n                ans[i] = c\n                for d in range(1, max(i, m - i - 1) + 1):\n                    if i - d >= 0:\n                        bb[i - d] -= d\n                    if i + d < m:\n                        bb[i + d] -= d\n        print(''.join(ans))\nmain()", "def main():\n    q = int(input())\n    for _ in range(q):\n        s = input()\n        m = int(input())\n        b = [int(x) for x in input().split()]\n        solve(s, m, b)\n\ndef solve(s, m, b):\n    letters = sorted(set(s), reverse=True)\n    t = ['X'] * m\n    for l in letters:\n        if s.count(l) < b.count(0):\n            continue\n        zero = [i for i in range(m) if b[i] == 0]\n        positive = [j for j in range(m) if b[j] > 0]\n        for i in zero:\n            t[i] = l\n            for j in positive:\n                b[j] -= abs(i - j)\n            b[i] = -1\n    print(''.join(t))\nmain()", "t = int(input())\nfor q in range(t):\n    s = list(input())\n    x = sorted(set(s))\n    m = int(input())\n    b = list(map(int, input().split()))\n    l = [-1] * m\n    while sum(b) != -m:\n        z = set()\n        for i in range(m):\n            if b[i] == 0:\n                z.add(i)\n                b[i] = -1\n        while True:\n            q = x.pop()\n            if len(z) <= s.count(q):\n                for i in z:\n                    l[i] = q\n                break\n        for i in z:\n            for k in range(m):\n                if b[k] != -1:\n                    b[k] -= abs(i - k)\n    print(''.join(l))", "t = int(input())\nfor q in range(t):\n    s = list(input())\n    x = sorted(set(s))\n    m = int(input())\n    b = list(map(int, input().split()))\n    l = [-1] * m\n    while sum(b) != -m:\n        z = set()\n        for i in range(m):\n            if b[i] == 0:\n                z.add(i)\n                b[i] = -1\n        while True:\n            q = x.pop()\n            if len(z) <= s.count(q):\n                for i in z:\n                    l[i] = q\n                break\n        for i in z:\n            for k in range(m):\n                if b[k] != -1:\n                    b[k] -= abs(i - k)\n    print(''.join(l))", "z = input\nfor i in range(int(z())):\n    original = list(input())\n    s = sorted(set(original))\n    (m, b) = (int(input()), list(map(int, input().split())))\n    ans = [None] * m\n    while sum(b) != -m:\n        zeros = set()\n        for i in range(m):\n            if b[i] == 0:\n                zeros.add(i)\n                b[i] = -1\n        while True:\n            letra = s.pop()\n            if len(zeros) <= original.count(letra):\n                for i in zeros:\n                    ans[i] = letra\n                break\n        for i in zeros:\n            for n in range(m):\n                if b[n] != -1:\n                    b[n] -= abs(i - n)\n    print(''.join(ans))", "m = 10 ** 9 + 7\nt = int(input())\nwhile t:\n    t -= 1\n    s = input()\n    m = int(input())\n    b = list(map(int, input().split()))\n    fin = sorted(s)\n    ans = [''] * m\n    while '' in ans:\n        new = [index for (index, value) in enumerate(b) if value == 0]\n        while fin.count(fin[-1]) < len(new):\n            fin = list(filter(lambda x: x != fin[-1], fin))\n        for i in new:\n            b[i] = -1\n            ans[i] = fin[-1]\n        fin = list(filter(lambda x: x != fin[-1], fin))\n        for i in range(len(b)):\n            if b[i] != -1:\n                for j in new:\n                    b[i] -= abs(i - j)\n    print(''.join(ans))", "for _ in range(int(input())):\n    st = list(input())\n    m = int(input())\n    ar = list(map(int, input().split()))\n    li = [0] * m\n    ans = [0] * m\n    se = set({})\n    level = 1\n    while li != ar:\n        tem = set({})\n        for i in range(m):\n            if not i in se:\n                if ar[i] == li[i]:\n                    se.add(i)\n                    tem.add(i)\n                    ans[i] = level\n        for i in tem:\n            for j in range(m):\n                if not j in se:\n                    li[j] += abs(j - i)\n        level += 1\n    for i in range(m):\n        if ans[i] == 0:\n            ans[i] = level\n    dic = {}\n    for i in range(m):\n        if ans[i] in dic:\n            dic[ans[i]] += 1\n        else:\n            dic[ans[i]] = 1\n    fre = []\n    se = set({})\n    tem = 'abcdefghijklmnopqrstuvwxyz'\n    tem = tem[::-1]\n    st.sort(reverse=True)\n    for i in st:\n        if not i in se:\n            se.add(i)\n            fre.append(1)\n        else:\n            fre[-1] += 1\n    dic1 = {}\n    j = 0\n    for i in range(level):\n        while fre[j] < dic[i + 1]:\n            j += 1\n        dic1[i + 1] = j\n        j += 1\n    st = list(set(st))\n    st.sort(reverse=True)\n    for i in range(m):\n        ans[i] = st[dic1[ans[i]]]\n    print(''.join(ans))", "import time\n\ndef getZero(arr):\n    ans = []\n    for i in range(len(arr)):\n        if arr[i][0] == 0:\n            ans.append(i)\n    return ans\nfor _ in range(int(input())):\n    s = [ord(i) for i in input()]\n    m = int(input())\n    arr = [[int(val), i] for (i, val) in enumerate(input().split())]\n    temp = {}\n    for i in s:\n        if temp.get(i) != None:\n            temp[i] += 1\n        else:\n            temp[i] = 1\n    s = list(temp.items())\n    s.sort(reverse=True)\n    resp = [0 for i in range(m)]\n    put = 0\n    cont = 0\n    while cont < m:\n        x = getZero(arr)\n        while len(x) > s[0][1]:\n            del s[0]\n        for j in x:\n            (val, pos) = arr[j]\n            resp[pos] = s[0][0]\n            cont += 1\n            for k in range(len(arr)):\n                (valAt, posAt) = arr[k]\n                arr[k][0] -= abs(pos - posAt)\n        del s[0]\n        for j in x:\n            arr[j][0] = -1\n    for i in resp:\n        print(chr(i), end='')\n    print()", "T = int(input())\nD = []\nalphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\nfor i in range(0, T):\n    str = input()\n    n = int(input())\n    B = [int(x) for x in input().split(' ')]\n    A = [alphabet.index(x) for x in str]\n    C = [0 for x in range(n)]\n    r = 0\n    while r < n:\n        mx = max(A)\n        if A.count(mx) >= B.count(0):\n            B_new = B.copy()\n            for k in range(0, n):\n                if B[k] == 0:\n                    C[k] = alphabet[mx]\n                    r += 1\n                    for l in range(0, n):\n                        if B_new[l] > 0:\n                            B_new[l] = B_new[l] - abs(l - k)\n                    B_new[k] = -1\n            B = B_new\n        for j in range(0, len(A)):\n            if A[j] == mx:\n                A[j] = -1\n    s = ''.join(C)\n    D.append(s)\nfor i in D:\n    print(i)", "import sys\ninput = sys.stdin.readline\nfrom collections import Counter as cc\nI = lambda : list(map(int, input().split()))\n(t,) = I()\nfor _ in range(t):\n    s = list(input().strip())\n    k = cc(s)\n    (n,) = I()\n    l = I()\n    r = len(s) - n\n    t = [''] * n\n    p = sorted(k.keys(), reverse=True)\n    ix = 0\n    while max(l) >= 0:\n        v = []\n        for i in range(n):\n            if l[i] == 0:\n                v.append(i)\n        while len(v) > k[p[ix]]:\n            ix += 1\n        for i in v:\n            t[i] = p[ix]\n            l[i] = -1\n        for i in range(n):\n            if l[i] != -1:\n                for j in v:\n                    l[i] -= abs(i - j)\n        ix += 1\n    print(''.join(t))", "z = input\nfor i in range(int(z())):\n    original = list(input())\n    s = sorted(set(original))\n    (m, b) = (int(input()), list(map(int, input().split())))\n    ans = [None] * m\n    while sum(b) != -m:\n        zeros = set()\n        for i in range(m):\n            if b[i] == 0:\n                zeros.add(i)\n                b[i] = -1\n        while True:\n            letra = s.pop()\n            if len(zeros) <= original.count(letra):\n                for i in zeros:\n                    ans[i] = letra\n                break\n        for i in zeros:\n            for n in range(m):\n                if b[n] != -1:\n                    b[n] -= abs(i - n)\n    print(''.join(ans))", "t = int(input())\nfor q in range(t):\n    s = list(input())\n    x = sorted(set(s))\n    m = int(input())\n    b = list(map(int, input().split()))\n    l = [-1] * m\n    while sum(b) != -m:\n        z = set()\n        for i in range(m):\n            if b[i] == 0:\n                z.add(i)\n                b[i] = -1\n        while True:\n            q = x.pop()\n            if len(z) <= s.count(q):\n                for i in z:\n                    l[i] = q\n                break\n        for i in z:\n            for k in range(m):\n                if b[k] != -1:\n                    b[k] -= abs(i - k)\n    print(''.join(l))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    m = int(input())\n    arr = [int(i) for i in input().split()]\n    a = 'abcdefghijklmnopqrstuvwxyz'\n    dic = {}\n    for i in range(26):\n        dic[a[i]] = 0\n    for i in range(len(s)):\n        dic[s[i]] += 1\n    ans = ['' for i in range(m)]\n    l = 25\n    while True:\n        c = 0\n        boo = True\n        for i in range(m):\n            if arr[i] == 0:\n                c += 1\n                boo = False\n        if boo:\n            break\n        ind = []\n        for i in range(l, -1, -1):\n            if dic[a[i]] >= c:\n                for j in range(m):\n                    if arr[j] == 0:\n                        ind.append(j + 1)\n                        arr[j] = -1\n                        ans[j] = a[i]\n                l = i - 1\n                break\n        for i in range(m):\n            temp = 0\n            for j in ind:\n                temp = temp + abs(i + 1 - j)\n            if arr[i] > 0:\n                arr[i] -= temp\n    print(''.join(ans))", "from collections import Counter\nfor t in range(int(input())):\n    st = input()\n    tot = len(st)\n    m = int(input())\n    arr = list(map(int, input().split()))\n    sor = sorted(st)\n    count = Counter(st)\n    final = [''] * m\n    while arr.count(-1) != m:\n        c = arr.count(0)\n        g = []\n        for i in range(m):\n            if arr[i] == 0:\n                g.append(i)\n        x = sor[-1]\n        if count[x] >= c:\n            for i in range(count[x]):\n                del sor[-1]\n            for i in range(m):\n                if arr[i] == 0:\n                    arr[i] = -1\n                    final[i] = x\n                if arr[i] != -1:\n                    for j in g:\n                        arr[i] -= abs(i - j)\n        else:\n            for i in range(count[x]):\n                del sor[-1]\n    print(''.join(final))", "q = int(input())\nfor t in range(q):\n    s = input()\n    m = int(input())\n    b = list(map(int, input().split()))\n    a = {}\n    output = [''] * m\n    outpos = list(range(m))\n    for i in s:\n        if i in a:\n            a[i] += 1\n        else:\n            a[i] = 1\n    a = sorted(list(a.items()))[::-1]\n    c = 0\n    v = ''\n    newm = m\n    fv = 0\n    while fv < m:\n        nzeros = 0\n        zero = []\n        for i in range(newm):\n            if b[i] == 0:\n                nzeros += 1\n                zero.append(i)\n        f = 0\n        for i in a[c:]:\n            if i[1] >= nzeros:\n                v = i[0]\n                f = 1\n            c += 1\n            if f == 1:\n                break\n        for i in range(newm):\n            if b[i] == 0:\n                p = outpos[i]\n                output[p] = v\n                fv += 1\n        for i in range(newm):\n            for j in zero:\n                if b[i] > 0:\n                    b[i] -= abs(j - i)\n        for i in zero:\n            b[i] = -1\n            outpos[i] = -1\n    print(''.join(output))", "from collections import Counter\n\ndef solve():\n    s = input()\n    m = int(input())\n    b = list(map(int, input().split()))\n    ans = ['' for _ in range(m)]\n    cv = [(k, v) for (k, v) in Counter(s).items()]\n    cv.sort(key=lambda x: x[0], reverse=True)\n    count = 0\n    cvi = 0\n    while count != m:\n        zeros = [i for (i, x) in enumerate(b) if x == 0]\n        lz = len(zeros)\n        count += lz\n        while cv[cvi][1] < lz:\n            cvi += 1\n        c = cv[cvi][0]\n        for zero_index in zeros:\n            ans[zero_index] = c\n            b[zero_index] = -1\n        cvi += 1\n        for i in range(m):\n            if b[i] < 0:\n                continue\n            for zero_index in zeros:\n                b[i] -= abs(i - zero_index)\n    return ''.join(ans)\nt = int(input())\nwhile t > 0:\n    t -= 1\n    ans = solve()\n    print(ans)", "for _ in range(int(input())):\n    s = list(input())\n    y = sorted(s)\n    x = sorted(set(s))\n    m = int(input())\n    b = list(map(int, input().split()))\n    l = [-1] * m\n    while sum(b) != -m:\n        z = set()\n        for i in range(m):\n            if b[i] == 0:\n                z.add(i)\n                b[i] = -1\n        while True:\n            q = x.pop()\n            if len(z) <= s.count(q):\n                for i in z:\n                    l[i] = q\n                break\n        for i in z:\n            for k in range(m):\n                if b[k] != -1:\n                    b[k] -= abs(i - k)\n    print(''.join(l))", "q = int(input())\nfor i in range(q):\n    s = input()\n    m = int(input())\n    b = list(map(int, input().split()))\n    d = {}\n    l = sorted(list(set(s)), reverse=True)\n    for alphabet in l:\n        d[alphabet] = s.count(alphabet)\n    ret = '0' * m\n    l0 = -1\n    while 1:\n        bcopy = b.copy()\n        n = b.count(0)\n        if n == 0:\n            break\n        for j in range(1, 30):\n            if d[l[l0 + j]] >= n:\n                l0 += j\n                alphabet = l[l0]\n                break\n        for j in range(m):\n            if b[j] == 0:\n                ret = ret[0:j] + alphabet + ret[j + 1:]\n                for k in range(m):\n                    if b[k] != 0:\n                        bcopy[k] -= abs(k - j)\n                bcopy[j] = -1\n        b = bcopy\n    print(ret)", "for i in range(int(input())):\n    original = list(input())\n    s = sorted(set(original))\n    (m, b) = (int(input()), list(map(int, input().split())))\n    ans = [None] * m\n    while sum(b) != -m:\n        zeros = set()\n        for i in range(m):\n            if b[i] == 0:\n                zeros.add(i)\n                b[i] = -1\n        while True:\n            letra = s.pop()\n            if len(zeros) <= original.count(letra):\n                for i in zeros:\n                    ans[i] = letra\n                break\n        for i in zeros:\n            for n in range(m):\n                if b[n] != -1:\n                    b[n] -= abs(i - n)\n    print(''.join(ans))", "t = int(int(input('')))\nwhile t > 0:\n    string = input('')\n    n = int(input(''))\n    b = list(map(int, input().split()))\n    l = list(string)\n    l.sort()\n    string_length = len(l)\n    final = []\n    finished = []\n    for j in range(string_length):\n        counter = string.count(l[j])\n        if l[j] not in finished:\n            final.append((l[j], counter))\n            finished.append(l[j])\n    final = final[::-1]\n    index = 0\n    ans = [0] * n\n    while 0 in b:\n        times = b.count(0)\n        minicount = []\n        for i in range(1, times + 1):\n            for j in range(index, len(final)):\n                if final[j][1] >= times:\n                    index = j\n                    break\n            inserter = b.index(0)\n            b[inserter] = -1\n            ans[inserter] = final[index][0]\n            minicount.append(inserter)\n        index += 1\n        for x in range(len(b)):\n            for y in minicount:\n                b[x] -= abs(x - y)\n    answer = ''\n    print(answer.join(ans))\n    t -= 1", "for i in range(int(input())):\n    original = list(input())\n    s = sorted(set(original))\n    m = int(input())\n    b = list(map(int, input().split()))\n    ans = [None] * m\n    while sum(b) != -m:\n        zeros = set()\n        for i in range(m):\n            if b[i] == 0:\n                zeros.add(i)\n                b[i] = -1\n        while True:\n            letra = s.pop()\n            if len(zeros) <= original.count(letra):\n                for i in zeros:\n                    ans[i] = letra\n                break\n        for i in zeros:\n            for n in range(m):\n                if b[n] != -1:\n                    b[n] -= abs(i - n)\n    print(''.join(ans))", "t = int(input())\nfor q in range(t):\n    s = list(input())\n    x = sorted(set(s))\n    m = int(input())\n    b = list(map(int, input().split()))\n    l = [-1] * m\n    while sum(b) != -m:\n        z = set()\n        for i in range(m):\n            if b[i] == 0:\n                z.add(i)\n                b[i] = -1\n        while True:\n            q = x.pop()\n            if len(z) <= s.count(q):\n                for i in z:\n                    l[i] = q\n                break\n        for i in z:\n            for k in range(m):\n                if b[k] != -1:\n                    b[k] -= abs(i - k)\n    print(''.join(l))", "import sys\n\ndef minp():\n    return sys.stdin.readline().strip()\n\ndef mint():\n    return int(minp())\n\ndef mints():\n    return map(int, minp().split())\n\ndef solve():\n    cnt = [0] * 26\n    for i in minp():\n        cnt[ord(i) - ord('a')] += 1\n    m = mint()\n    b = list(mints())\n    ans = ['a'] * m\n    j = 25\n    while True:\n        c = b.count(0)\n        if c == 0:\n            break\n        while j >= 0:\n            if cnt[j] >= c:\n                break\n            j -= 1\n        p = []\n        for i in range(m):\n            if b[i] == 0:\n                p.append(i)\n        for x in p:\n            for i in range(m):\n                b[i] -= abs(i - x)\n            ans[x] = chr(ord('a') + j)\n            b[x] += 1000000000\n        j -= 1\n    print(''.join(ans))\nfor i in range(mint()):\n    solve()", "for t in range(int(input())):\n    s = list(input())\n    x = sorted(set(s))\n    m = int(input())\n    b = list(map(int, input().split()))\n    l = [-1] * m\n    while sum(b) != -m:\n        z = set()\n        for j in range(m):\n            if b[j] == 0:\n                z.add(j)\n                b[j] = -1\n        while True:\n            q = x.pop()\n            if len(z) <= s.count(q):\n                for i in z:\n                    l[i] = q\n                break\n        for i in z:\n            for k in range(m):\n                if b[k] != -1:\n                    b[k] -= abs(i - k)\n    print(''.join(l))", "for _ in range(int(input())):\n    s = list(input())\n    n = int(input())\n    l = list(map(int, input().split()))\n    s.sort()\n    ans = ['' for i in range(n)]\n    while n > 0:\n        k = []\n        for i in range(len(l)):\n            if l[i] == 0:\n                l[i] = -1\n                k.append(i)\n        for i in k:\n            for j in range(len(l)):\n                l[j] = l[j] - abs(i - j)\n        z = len(k)\n        st = []\n        while len(st) != z:\n            if len(st) == 0:\n                st.append(s.pop(-1))\n            elif st[-1] == s[-1]:\n                st.append(s.pop(-1))\n            else:\n                st = []\n        while len(s) != 0 and s[-1] == st[-1]:\n            s.pop(-1)\n        for i in k:\n            if n <= 0:\n                break\n            ans[i] = st[-1]\n            n -= 1\n    print(''.join(ans))", "t = int(input())\nfor q in range(t):\n    s = list(input())\n    x = sorted(set(s))\n    m = int(input())\n    b = list(map(int, input().split()))\n    l = [-1] * m\n    while sum(b) != -m:\n        z = set()\n        for i in range(m):\n            if b[i] == 0:\n                z.add(i)\n                b[i] = -1\n        while True:\n            q = x.pop()\n            if len(z) <= s.count(q):\n                for i in z:\n                    l[i] = q\n                break\n        for i in z:\n            for k in range(m):\n                if b[k] != -1:\n                    b[k] -= abs(i - k)\n    print(''.join(l))", "t = int(input())\nfor q in range(t):\n    s = list(input())\n    x = sorted(set(s))\n    m = int(input())\n    b = list(map(int, input().split()))\n    l = [-1] * m\n    while sum(b) != -m:\n        z = set()\n        for i in range(m):\n            if b[i] == 0:\n                z.add(i)\n                b[i] = -1\n        while True:\n            q = x.pop()\n            if len(z) <= s.count(q):\n                for i in z:\n                    l[i] = q\n                break\n        for i in z:\n            for k in range(m):\n                if b[k] != -1:\n                    b[k] -= abs(i - k)\n    print(''.join(l))", "from collections import Counter\n\ndef solve(t, m, b):\n    c = Counter(t)\n    letters = list(sorted(c))\n    ix = len(letters) - 1\n    res = [None] * m\n    solved = 0\n    while solved < m:\n        zeros = [i for (i, v) in enumerate(b) if not res[i] and (not v)]\n        lz = len(zeros)\n        while c[letters[ix]] < lz:\n            ix -= 1\n        ll = letters[ix]\n        ix -= 1\n        for z in zeros:\n            res[z] = ll\n        solved += lz\n        for i in range(m):\n            if not res[i]:\n                for z in zeros:\n                    b[i] -= abs(z - i)\n    return ''.join(res)\nq = int(input())\nfor i_q in range(q):\n    t = input()\n    m = int(input())\n    b = list(map(int, input().split(' ')))\n    print(solve(t, m, b))", "t = int(input())\nfor _ in range(t):\n    tester = [0] * 26\n    stri = list(input())\n    n = int(input())\n    ans = ['0'] * n\n    testing = list(map(int, input().split()))\n    nn = len(stri)\n    for i in range(nn):\n        k = ord(stri[i]) - 97\n        tester[k] = tester[k] + 1\n    max = 25\n    while True:\n        k = testing.count(0)\n        if k == 0:\n            break\n        else:\n            j = 0\n            for i in range(max, -1, -1):\n                if tester[i] >= k:\n                    max = i - 1\n                    j = i\n                    break\n        ind = []\n        for i in range(n):\n            if testing[i] == 0:\n                ind.append(i)\n                ans[i] = chr(97 + j)\n                testing[i] = 1000000\n        for i in range(n):\n            for a in range(len(ind)):\n                testing[i] = testing[i] - abs(i - ind[a])\n    print(*ans, sep='')", "for _ in range(int(input())):\n    alpha = [0] * 26\n    s = input()\n    for i in s:\n        alpha[ord(i) - 97] += 1\n    curr = 25\n    n = int(input())\n    b = list(map(int, input().split()))\n    ans = [''] * n\n    visited = [False] * n\n    com = 0\n    while com < n:\n        pos = []\n        for i in range(n):\n            if b[i] == 0 and (not visited[i]):\n                visited[i] = True\n                com += 1\n                pos.append(i)\n        posl = len(pos)\n        for i in pos:\n            for j in range(n):\n                if b[j] == 0:\n                    continue\n                b[j] -= abs(i - j)\n        while posl > alpha[curr]:\n            curr -= 1\n        for i in pos:\n            ans[i] = chr(97 + curr)\n        curr -= 1\n    print(''.join(ans))", "t = int(input())\nfor z in range(t):\n    st = list(input())\n    n = int(input())\n    arr = list(map(int, input().split()))\n    d = {}\n    for i in range(len(st)):\n        if st[i] not in d:\n            d[st[i]] = 0\n        d[st[i]] += 1\n    flag = [1 for i in range(n)]\n    a = []\n    for i in range(n):\n        if arr[i] == 0:\n            a.append(i)\n    (res, res2) = ([], [])\n    while len(a) > 0:\n        ne = []\n        res.append(len(a))\n        res2.append(a)\n        for i in a:\n            flag[i] = 0\n        for i in a:\n            for j in range(0, i):\n                if flag[j] == 1:\n                    arr[j] -= abs(i - j)\n                    if arr[j] == 0:\n                        flag[j] = 0\n                        ne.append(j)\n            for j in range(i + 1, n):\n                if flag[j] == 1:\n                    arr[j] -= abs(i - j)\n                    if arr[j] == 0:\n                        flag[j] = 0\n                        ne.append(j)\n        a = ne\n    j = 0\n    ans = ['a' for i in range(n)]\n    for i in range(25, -1, -1):\n        c = chr(97 + i)\n        if c in d:\n            if d[c] >= res[0]:\n                for j in res2[0]:\n                    ans[j] = c\n                del res[0]\n                del res2[0]\n        if len(res) == 0:\n            break\n    print(''.join(ans))", "def add_to_t(s, t, b):\n    ind_0 = []\n    for i in range(len(b)):\n        if b[i] == 0:\n            ind_0.append(i)\n    max_char = max(s)\n    while len(ind_0) > s.count(max_char):\n        s = s.replace(max_char, '')\n        max_char = max(s)\n    for i in ind_0:\n        t[i] = max_char\n        b[i] = -1\n        for j in range(len(b)):\n            if b[j] != 0 and b[j] != -1:\n                b[j] -= int(abs(i - j))\n    s = s.replace(max_char, '')\n    return s\nfor _ in range(int(input())):\n    s = input()\n    n = int(input())\n    b = list(map(int, input().split()))\n    t = [None] * n\n    count_1 = b.count(-1)\n    while count_1 != n:\n        s = add_to_t(s, t, b)\n        count_1 = b.count(-1)\n    t = ''.join(t)\n    print(t)", "for i in range(int(input())):\n    original = list(input())\n    s = sorted(set(original))\n    (m, b) = (int(input()), list(map(int, input().split())))\n    ans = [None] * m\n    while sum(b) != -m:\n        zeros = set()\n        for i in range(m):\n            if b[i] == 0:\n                zeros.add(i)\n                b[i] = -1\n        while True:\n            letra = s.pop()\n            if len(zeros) <= original.count(letra):\n                for i in zeros:\n                    ans[i] = letra\n                break\n        for i in zeros:\n            for n in range(m):\n                if b[n] != -1:\n                    b[n] -= abs(i - n)\n    print(''.join(ans))", "def main():\n    st = input()\n    n = int(input())\n    lst = list(map(int, input().split()))\n    alph = [0 for i in range(ord('z') - ord('a') + 1)]\n    for i in st:\n        alph[ord(i) - ord('a')] += 1\n    ans = [-1 for i in range(n)]\n    for i in range(len(alph) - 1, -1, -1):\n        if alph[i] != 0:\n            k = anns(ans, lst)\n            hw = 0\n            for j in k:\n                if ans[j] == -1:\n                    hw += 1\n            if hw <= alph[i]:\n                for j in anns(ans, lst):\n                    if ans[j] == -1:\n                        ans[j] = i\n    for i in ans:\n        print(chr(i + ord('a')), end='')\n    print()\n\ndef anns(lst, lnum):\n    nm = 0\n    lg = 0\n    rg = 0\n    lstnum = [0 for i in range(len(lst))]\n    for i in range(1, len(lst)):\n        if lst[i] != -1:\n            nm += i\n            rg += 1\n    if lst[0] != -1:\n        lg += 1\n    lstnum[0] = nm\n    for i in range(1, len(lst)):\n        if lst[i] == -1:\n            lstnum[i] = lstnum[i - 1] + lg - rg\n        else:\n            lstnum[i] = lstnum[i - 1] + lg - rg\n            lg += 1\n            rg -= 1\n    ansk = []\n    for i in range(len(lst)):\n        if lstnum[i] == lnum[i]:\n            ansk.append(i)\n    return ansk\nfor t in range(int(input())):\n    main()", "tc = int(input())\nfor _ in range(tc):\n    char = [x for x in input()]\n    num = int(input())\n    numa = [int(x) for x in input().split()]\n    sumcount = [0] * num\n    char.sort()\n    charpoint = len(char)\n    fill = 0\n    answer = []\n    for i in range(num):\n        answer.append('1')\n    while fill < num:\n        changethistime = []\n        for i in range(num):\n            if sumcount[i] == numa[i] and answer[i] == '1':\n                changethistime.append(i)\n        count = 0\n        while count < len(changethistime):\n            charpoint -= 1\n            count = 1\n            while charpoint - 1 >= 0 and char[charpoint] == char[charpoint - 1]:\n                count += 1\n                charpoint -= 1\n        for i in changethistime:\n            answer[i] = char[charpoint]\n            fill += 1\n            for j in range(num):\n                sumcount[j] += abs(j - i)\n    for i in answer:\n        print(i, end='')\n    print()", "import sys\nINF = 10 ** 20\nMOD = 10 ** 9 + 7\nI = lambda : list(map(int, input().split()))\nfrom math import gcd\nfrom math import ceil\nfrom collections import defaultdict as dd, Counter\nfrom bisect import bisect_left as bl, bisect_right as br\n\ndef solve():\n    s = input()\n    (m,) = I()\n    b = I()\n    count = dd(int)\n    for i in s:\n        count[i] += 1\n    evr = sorted(set(s), reverse=True)\n    cur = 0\n    ans = ['0'] * m\n    idx = []\n    while cur < len(evr):\n        now = []\n        for i in range(m):\n            if ans[i] != '0':\n                continue\n            rank = 0\n            for j in idx:\n                rank += abs(i - j)\n            if rank == b[i]:\n                now.append(i)\n        while cur < len(evr) and count[evr[cur]] < len(now):\n            cur += 1\n        for i in now:\n            ans[i] = evr[cur]\n        idx += now\n        cur += 1\n    print(''.join(ans))\n(t,) = I()\nwhile t:\n    t -= 1\n    solve()", "for p in range(int(input())):\n    s = list(input())\n    m = int(input())\n    a = list(map(int, input().split()))\n    s.sort()\n    s.reverse()\n    se = sorted(list(set(s)))[::-1]\n    t = []\n    j = 0\n    while len(t) != m:\n        l = []\n        for i in range(m):\n            if a[i] == 0:\n                a[i] = -1\n                l.append(i)\n        while True:\n            if s.count(se[j]) >= len(l):\n                for k in range(len(l)):\n                    t.append([l[k], se[j]])\n                    for y in range(m):\n                        a[y] -= abs(l[k] - y)\n                j += 1\n                break\n            j += 1\n    t.sort()\n    ans = ''\n    for i in range(m):\n        ans += t[i][1]\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    n = int(input())\n    l = list(map(int, input().split()))\n    has = [0] * 27\n    for i in s:\n        has[ord(i) - ord('a') + 1] += 1\n    ha = [(i, has[i]) for i in range(1, 27)]\n    ha.sort(reverse=True)\n    ans = ['' for i in range(n)]\n    p = 0\n    for i in range(n):\n        v = []\n        new_p = 0\n        for k in range(n):\n            if l[k] == 0:\n                v.append(k)\n                new_p = k\n        for j in range(p, 26):\n            if ha[j][1] >= len(v):\n                p = j + 1\n                break\n        for k in v:\n            ans[k] = chr(ord('a') + ha[p - 1][0] - 1)\n            l[k] = -1\n        for t in v:\n            for k in range(n):\n                if l[k] > 0:\n                    l[k] = l[k] - abs(k - t)\n    print(''.join(ans))", "m = 10 ** 9 + 7\nt = int(input())\nwhile t:\n    t -= 1\n    s = input()\n    m = int(input())\n    b = list(map(int, input().split()))\n    fin = sorted(s)\n    ans = [''] * m\n    while '' in ans:\n        new = [index for (index, value) in enumerate(b) if value == 0]\n        while fin.count(fin[-1]) < len(new):\n            fin = list(filter(lambda x: x != fin[-1], fin))\n        for i in new:\n            b[i] = -1\n            ans[i] = fin[-1]\n        fin = list(filter(lambda x: x != fin[-1], fin))\n        for i in range(len(b)):\n            if b[i] != -1:\n                for j in new:\n                    b[i] -= abs(i - j)\n    print(''.join(ans))", "t = int(input())\nfor x in range(t):\n    s = input()\n    s = sorted(s)\n    s.reverse()\n    n = int(input())\n    b = list(map(int, input().split(' ')))\n    ch = ['' for i in range(len(b))]\n    zeros = b.count(0)\n    while zeros != 0:\n        idx = []\n        for (i, j) in enumerate(b):\n            if j == 0:\n                idx.append(i)\n                b[i] = -1\n        while s.count(s[0]) < zeros:\n            s.remove(s[0])\n        for i in idx:\n            ch[i] = s[0]\n            for j in range(len(b)):\n                b[j] -= abs(i - j)\n        zeros = b.count(0)\n        add_c = s[0]\n        while add_c in s:\n            s.remove(add_c)\n    print(''.join([i for i in ch]))", "from collections import deque\nq = int(input())\nc = []\nfor i in range(q):\n    s = input()\n    m = int(input())\n    b = [int(u) for u in input().split()]\n    v = [0 for u in range(m)]\n    d = {}\n    for i in s:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    while v.count(0) != 0:\n        p = []\n        for i in range(m):\n            if b[i] == 0:\n                p.append(i)\n        u = max(d)\n        while d[u] < len(p):\n            d.pop(u)\n            u = max(d)\n        for i in range(m):\n            if i in p:\n                v[i] = u\n                b[i] = -1\n            else:\n                for j in p:\n                    if b[i] > 0:\n                        b[i] -= abs(i - j)\n        if len(d) != 0:\n            d.pop(u)\n    c.append(v)\nfor h in c:\n    for i in h:\n        print(i, end='')\n    print('')", "for _ in range(int(input())):\n    s = sorted(input())\n    m = int(input())\n    b = list(map(int, input().split()))\n    a = [0] * 26\n    for i in s:\n        a[ord(i) - 97] += 1\n    x = 25\n    while True:\n        z = [i for i in range(m) if b[i] == 0]\n        if len(z) == 0:\n            break\n        while a[x] < len(z):\n            x -= 1\n        symbol = chr(x + 97)\n        for i in z:\n            b[i] = symbol\n            for j in range(i):\n                if type(b[j]) is int:\n                    b[j] += j - i\n            for j in range(i + 1, m):\n                if type(b[j]) is int:\n                    b[j] += i - j\n        x -= 1\n    print(''.join(b))", "import string\n\ndef main(s: str, b):\n    cnt = [(c, s.count(c)) for c in string.ascii_lowercase]\n    res = ['' for c in b]\n    while 0 in b:\n        z_cnt = b.count(0)\n        while cnt[-1][1] < z_cnt:\n            cnt.pop()\n        c = cnt.pop()[0]\n        zeros = []\n        for (i, v) in enumerate(b):\n            if v == 0:\n                res[i] = c\n                zeros.append(i)\n                b[i] = -1\n        for (i, v) in enumerate(b):\n            if v != -1:\n                b[i] -= sum((abs(z - i) for z in zeros))\n    return ''.join(res)\n_t = int(input())\nfor _ in range(_t):\n    _s = input()\n    input()\n    _b = [int(x) for x in input().split()]\n    print(main(_s, _b))", "T = int(input())\nfor _ in range(T):\n    S = input()\n    M = int(input())\n    B = list(map(int, input().split()))\n    Alpha = {}\n    for elt in S:\n        try:\n            Alpha[elt] += 1\n        except KeyError:\n            Alpha[elt] = 1\n    Alpha = list(Alpha.items())\n    Alpha.sort(key=lambda x: x[0])\n    ans = [None] * M\n    Done = 0\n    while Done < M:\n        Zeros = []\n        Count = 0\n        for (i, elt) in enumerate(B):\n            if elt == 0:\n                Zeros += (i,)\n                Count += 1\n        toRemove = 0\n        for (letter, count) in Alpha[::-1]:\n            toRemove -= 1\n            if count >= Count:\n                for i in Zeros:\n                    ans[i] = letter\n                Done += Count\n                break\n        del Alpha[toRemove:]\n        for elt in Zeros:\n            for i in range(len(B)):\n                if i == elt:\n                    B[i] = -1\n                else:\n                    B[i] -= abs(i - elt)\n    print(''.join(ans))", "from collections import defaultdict as dft\nfor _ in range(int(input())):\n    s = input()\n    s = sorted(s)[::-1]\n    n = int(input())\n    res = ['a'] * n\n    arr = list(map(int, input().split()))\n    x = 0\n    vis = [0] * n\n    count = 0\n    last = None\n    while count < n:\n        while last and s[x] == last:\n            x += 1\n        ls = []\n        for i in range(n):\n            if arr[i] == 0 and vis[i] == 0:\n                ls.append(i)\n                count += 1\n                vis[i] = 1\n        ln = len(ls)\n        mile = 1\n        last = s[x]\n        while mile < ln:\n            x += 1\n            if s[x] == last:\n                mile += 1\n            else:\n                mile = 1\n                last = s[x]\n        for ind in ls:\n            res[ind] = last\n        for i in range(n):\n            if not vis[i]:\n                for ind in ls:\n                    arr[i] -= abs(ind - i)\n    print(''.join(res))", "MAX = 100000000\nt = int(input())\nfor tt in range(t):\n    s = input()\n    m = int(input())\n    b = list(map(int, input().split()))\n    ans = ['c'] * m\n    group = list()\n    while True:\n        pos = list()\n        for i in range(m):\n            if b[i] == 0:\n                pos.append(i)\n        if len(pos) == 0:\n            break\n        else:\n            group.append(pos)\n        for i in range(m):\n            if b[i] == 0:\n                b[i] = MAX\n            else:\n                for j in pos:\n                    b[i] -= abs(i - j)\n    freq = {}\n    for char in s:\n        if char in freq:\n            freq[char] += 1\n        else:\n            freq[char] = 1\n    sort_freq = sorted(freq.items(), key=lambda x: x[0], reverse=True)\n    items = iter(sort_freq)\n    char = next(items)\n    for pos in group:\n        while char[1] < len(pos):\n            try:\n                char = next(items)\n            except StopIteration:\n                break\n        for pp in pos:\n            ans[pp] = char[0]\n        try:\n            char = next(items)\n        except StopIteration:\n            break\n    print(''.join(ans))", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    s = stdin.readline().strip()\n    dictt = {}\n    for i in s:\n        if i not in dictt:\n            dictt[i] = 1\n        else:\n            dictt[i] += 1\n    m = int(stdin.readline())\n    val = list(map(int, stdin.readline().split()))\n    stack = sorted(list(set([ord(c) for c in s])))\n    final = [0] * m\n    while len(stack) != 0:\n        new = []\n        count = 0\n        for i in range(m):\n            if val[i] == 0 and final[i] == 0:\n                val[i] = 3000\n                new.append(i)\n                count += 1\n        while dictt[chr(stack[-1])] < count:\n            stack.pop()\n        for i in new:\n            final[i] = chr(stack[-1])\n        stack.pop()\n        for i in range(m):\n            for j in new:\n                val[i] -= abs(i - j)\n    print(''.join(final))", "import collections\nq = int(input())\nfor _ in range(q):\n    s = input()\n    m = int(input())\n    b = list(map(int, input().split()))\n    ctr_s = list(reversed(sorted(collections.Counter(s).items())))\n    ctr_b = list(sorted(collections.Counter(b).items()))\n    ans = ['*'] * m\n    s_idx = 0\n    cnt = 0\n    while True:\n        if cnt == m:\n            break\n        zero_idxs = [i for i in range(m) if b[i] == 0]\n        while len(zero_idxs) > ctr_s[s_idx][1]:\n            s_idx += 1\n        for idx in zero_idxs:\n            ans[idx] = ctr_s[s_idx][0]\n            for i in range(m):\n                if b[i] > 0:\n                    b[i] -= abs(idx - i)\n            b[idx] = -1\n        s_idx += 1\n        cnt += len(zero_idxs)\n    print(''.join(ans))", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    d = defaultdict(int)\n    s = input()\n    m = int(input())\n    b = list(map(int, input().split()))\n    for i in s:\n        d[i] += 1\n    a = list(s)\n    sea = list(set(a))\n    sea.sort()\n    b1 = [b[i] for i in range(m)]\n    ans = [' ' for _ in range(m)]\n    j = 1\n    f = True\n    while f and j <= len(sea):\n        x = 1\n        c = 0\n        for i in range(m):\n            if b[i] == 0:\n                c += 1\n        while j <= len(sea) and d[sea[-j]] < c:\n            j += 1\n        if j > len(sea):\n            break\n        for i in range(m):\n            if b[i] == 0:\n                b1[i] = -1\n                x = 0\n                ans[i] = sea[-j]\n                for k in range(m):\n                    if b1[k] > 0:\n                        b1[k] -= abs(i - k)\n        b = [b1[vf] for vf in range(m)]\n        if x == 1:\n            f = False\n        j += 1\n    print(''.join(ans))", "t = int(input())\nfor _ in range(t):\n    s = list(input())\n    m = int(input())\n    a = list(map(int, input().split()))\n    s.sort()\n    count = 0\n    flag = True\n    ans = [0] * m\n    ptr = len(s) - 1\n    while count < m:\n        temp = []\n        for i in range(m):\n            if a[i] == 0:\n                temp.append(i)\n                a[i] = -1\n        count = count + len(temp)\n        c = 1\n        if c != len(temp):\n            for j in range(ptr - 1, -1, -1):\n                if s[j] == s[j + 1]:\n                    c += 1\n                else:\n                    c = 1\n                if c == len(temp):\n                    ptr = j + c - 1\n                    break\n        ch = s[ptr]\n        for i in temp:\n            ans[i] = s[ptr]\n            ptr -= 1\n            j = 1\n            while i - j >= 0:\n                if a[i - j] > 0:\n                    a[i - j] = a[i - j] - j\n                j += 1\n            j = 1\n            while i + j < m:\n                if a[i + j] > 0:\n                    a[i + j] -= j\n                j += 1\n        while ptr >= 0 and s[ptr] == ch:\n            ptr -= 1\n    for i in ans:\n        print(i, end='')\n    print()", "import collections\nimport threading\nimport string\n\ndef main():\n    s = input()\n    m = int(input())\n    b = list(map(int, input().split()))\n    cnt = 0\n    pref = 0\n    t = b[:]\n    for c in reversed(string.ascii_lowercase):\n        inc_cnt = 0\n        inc_pref = 0\n        target = pref\n        back = 0\n        for i in range(m):\n            if type(t[i]) is str:\n                back += 1\n                target -= cnt - back\n                target += back\n                continue\n            if t[i] == target:\n                t[i] = c\n                inc_cnt += 1\n                inc_pref += i\n            target = target - (cnt - back) + back\n        pref += inc_pref\n        cnt += inc_cnt\n        if cnt == m:\n            break\n    c1 = collections.Counter(s)\n    abc = sorted(list(set(t)))\n    j = len(abc) - 1\n    cnt = [t.count(ch) for ch in abc]\n    d = dict()\n    for c in reversed(string.ascii_lowercase):\n        if c1[c] >= cnt[j]:\n            d[abc[j]] = c\n            j -= 1\n            if j < 0:\n                break\n    for i in range(len(t)):\n        t[i] = d[t[i]]\n    print(''.join(t))\ntn = int(input())\nfor _ in range(tn):\n    main()", "def findval(x, arr):\n    ans = 0\n    for i in arr:\n        tem = x - i\n        if tem < 0:\n            tem = tem * -1\n        ans = ans + tem\n    return ans\n\ndef findmin(arr, nrr):\n    res = []\n    for i in range(len(arr)):\n        if arr[i] == -1:\n            continue\n        nu = findval(i, nrr)\n        if nu == arr[i]:\n            res.append(i)\n            arr[i] = -1\n    return (arr, res)\nT = int(input())\nfor _ in range(T):\n    s = input().rstrip()\n    dic = {}\n    for i in s:\n        dic[i] = 0\n    for i in s:\n        dic[i] += 1\n    s = ''\n    for i in dic:\n        s = s + i\n    s = sorted(s)\n    s.reverse()\n    M = int(input())\n    arr = list(map(int, input().rstrip().split()))\n    ns = []\n    ls = [0 for i in range(M)]\n    while len(ns) != M:\n        (arr, res) = findmin(arr, ns)\n        ns = ns + res\n        for i in range(len(s)):\n            if dic[s[i]] >= len(res):\n                chara = s[i]\n                s = s[i + 1:]\n                break\n        for i in res:\n            ls[i] = chara\n    s = ''\n    for i in range(M):\n        s = s + ls[i]\n    print(s)", "import collections\nt = int(input())\nfor _ in range(t):\n    s = input()\n    m = int(input())\n    b = list(map(int, input().split()))\n    characters = sorted(set(s))\n    freq = collections.Counter(list(s))\n    ptr = len(characters) - 1\n    fixed = m\n    while fixed:\n        curr = set()\n        for x in range(m):\n            if b[x] == 0:\n                curr.add(x)\n        fixed -= len(curr)\n        while freq[characters[ptr]] < len(curr):\n            ptr -= 1\n        while curr:\n            index = curr.pop()\n            b[index] = characters[ptr]\n            for x in range(m):\n                if str(b[x]).isdigit():\n                    b[x] -= abs(x - index)\n        ptr -= 1\n    print(''.join(b))", "from collections import defaultdict\nfor _ in range(int(input())):\n    s = input()\n    C = defaultdict(int)\n    for c in s:\n        C[c] += 1\n    s = sorted(C.items())\n    m = int(input())\n    l = list(map(int, input().split()))\n    know = set()\n    ans = ['#'] * m\n    while len(know) < m:\n        cur = []\n        for i in range(m):\n            if l[i] == 0:\n                know.add(i)\n                cur.append(i)\n        while s[-1][1] < len(cur):\n            s.pop()\n        for i in cur:\n            l[i] = 10 ** 9\n            ans[i] = s[-1][0]\n            for j in range(m):\n                l[j] -= abs(i - j)\n        s.pop()\n    print(''.join(ans))", "q = int(input())\nfor _ in range(q):\n    t = str(input())\n    m = int(input())\n    b = list(map(int, input().split()))\n    alpha = 'abcdefghijklmnopqrstuvwxyz'\n    counts = dict()\n    t_chars = list()\n    for i in range(len(t)):\n        if t[i] not in counts.keys():\n            counts[t[i]] = 0\n        counts[t[i]] += 1\n    ans = list()\n    for i in range(len(alpha)):\n        if alpha[i] in counts.keys():\n            t_chars.append(counts[alpha[i]])\n        else:\n            t_chars.append(0)\n    point = len(alpha) - 1\n    zeroes = 0\n    for i in range(m):\n        ans.append('')\n        if b[i] == 0:\n            zeroes += 1\n    while t_chars[point] < zeroes:\n        point -= 1\n    visited = set()\n    for i in range(m):\n        if b[i] == 0:\n            ans[i] = alpha[point]\n            visited.add(i)\n    point -= 1\n    left = m - zeroes\n    while left != 0:\n        next = set()\n        for i in range(m):\n            if i not in visited:\n                num = 0\n                for e in visited:\n                    num += abs(i - e)\n                if num == b[i]:\n                    next.add(i)\n        while t_chars[point] < len(next):\n            point -= 1\n        for e in next:\n            ans[e] = alpha[point]\n            visited.add(e)\n        point -= 1\n        left -= len(next)\n    for i in range(m):\n        print(ans[i], end='')\n    print()", "for i in range(int(input())):\n    s = input()\n    m = int(input())\n    b = [int(num) for num in input().split()]\n    (p, sum) = ([], 0)\n    while sum < m:\n        x = []\n        for i in range(m):\n            if b[i] == 0:\n                x.append(i)\n                b[i] = 1227\n                sum = sum + 1\n        p.append(x)\n        for i in range(len(x)):\n            for j in range(m):\n                b[j] = b[j] - abs(x[i] - j)\n    s = sorted(list(s))\n    (i, r, b) = (0, -1, ['#'] * m)\n    while i < len(p):\n        if len(p[i]) <= s.count(s[r]):\n            for j in range(len(p[i])):\n                b[p[i][j]] = s[r]\n            r = r - s.count(s[r])\n            i = i + 1\n        else:\n            r = r - s.count(s[r])\n    print(''.join(b))", "for _ in range(int(input())):\n    s = list(input())\n    s.sort()\n    m = int(input())\n    a = list(map(int, input().split()))\n    while a.count(0):\n        qani = []\n        for i in range(m):\n            if a[i] == 0:\n                qani.append(i)\n        while s.count(s[-1]) < len(qani):\n            while len(s) > 1 and s[-1] == s[-2]:\n                s.pop()\n            s.pop()\n        now = s[-1]\n        while len(s) and s[-1] == now:\n            s.pop()\n        for i in qani:\n            a[i] = now\n        for i in range(m):\n            for x in qani:\n                try:\n                    a[i] -= abs(i - x)\n                except:\n                    pass\n    print(''.join(a))", "from collections import defaultdict\nfor _ in range(int(input())):\n    l = [0] * 26\n    s = input()\n    n = int(input())\n    b = list(map(int, input().split()))\n    ans = [None] * n\n    for char in s:\n        l[25 - (ord(char) - 97)] += 1\n    c = 0\n    ind = []\n    for i in range(n):\n        if b[i] == 0:\n            c += 1\n            ind.append(i)\n    for char in range(26):\n        if l[char] >= c:\n            l[char] = -1\n            for i in ind:\n                ans[i] = chr(97 + 25 - char)\n            break\n        else:\n            l[char] = -1\n    while c != n:\n        c1 = 0\n        temp = []\n        for i in range(n):\n            if b[i] != 0:\n                s = 0\n                for j in ind:\n                    s += abs(i - j)\n                if s == b[i]:\n                    c += 1\n                    c1 += 1\n                    b[i] = 0\n                    temp.append(i)\n        for char in range(26):\n            if l[char] >= c1:\n                l[char] = -1\n                for k in temp:\n                    ans[k] = chr(97 + 25 - char)\n                break\n            else:\n                l[char] = -1\n        ind += temp\n    print(''.join(ans))", "import collections\nt = int(input())\nfor _ in range(t):\n    s = input()\n    m = int(input())\n    b = list(map(int, input().split()))\n    characters = sorted(set(s))\n    freq = collections.Counter(list(s))\n    ptr = len(characters) - 1\n    fixed = m\n    while fixed:\n        curr = set()\n        for x in range(m):\n            if b[x] == 0:\n                curr.add(x)\n        fixed -= len(curr)\n        while freq[characters[ptr]] < len(curr):\n            ptr -= 1\n        while curr:\n            index = curr.pop()\n            b[index] = characters[ptr]\n            for x in range(m):\n                if str(b[x]).isdigit():\n                    b[x] -= abs(x - index)\n        ptr -= 1\n    print(''.join(b))", "for i in range(int(input())):\n    (S, s) = (input(), [])\n    for i in range(len(S)):\n        s.append(S[i])\n    s.sort()\n    (m, b) = (int(input()), [int(num) for num in input().split()])\n    while b.count(0):\n        temp = []\n        for i in range(m):\n            if b[i] == 0:\n                temp.append(i)\n        while s.count(s[-1]) < len(temp):\n            while len(s) > 1 and s[-1] == s[-2]:\n                s.pop()\n            s.pop()\n        k = s[-1]\n        while len(s) and s[-1] == k:\n            s.pop()\n        for i in temp:\n            b[i] = k\n        for i in range(m):\n            for x in temp:\n                try:\n                    b[i] -= abs(i - x)\n                except:\n                    pass\n    print(''.join(b))", "def f():\n    a = input()\n    n = int(input())\n    b = list(map(int, input().split(' ')))\n    string = ['0'] * len(b)\n    a = list(a)\n    a.sort(reverse=True)\n    temp = []\n    while 1:\n        for i in range(0, len(b)):\n            flag = 0\n            s = 0\n            if string[i] == '0':\n                for j in range(0, len(temp)):\n                    if temp[j][0] > a[0]:\n                        s += abs(temp[j][1] - i)\n                if s == b[i]:\n                    flag = 1\n                    temp.append([a[0], i])\n                    string[i] = a[0]\n                    break\n        if flag == 0:\n            string[temp[len(temp) - 1][1]] = '0'\n            temp.pop(len(temp) - 1)\n            continue\n        if len(temp) == len(b):\n            break\n        a.pop(0)\n    print(*string, sep='')\nfor i in range(int(input())):\n    f()", "from collections import Counter\nfor _ in range(int(input())):\n    s = input()\n    n = int(input())\n    arr = list(map(int, input().split()))\n    t = list(zip(arr, range(0, n)))\n    t.sort()\n    fixed = [-1] * n\n    ch = 26\n    ptr = 0\n    while ptr < n:\n        b = True\n        for (l, m) in t:\n            d = 0\n            for i in range(n):\n                if fixed[i] > ch:\n                    d += abs(i - m)\n            if d == l:\n                t.remove((l, m))\n                fixed[m] = ch\n                b = False\n                ptr += 1\n        if b:\n            ch -= 1\n    c = Counter(s)\n    c = list(c.items())\n    c.sort()\n    m = min(fixed)\n    ch = 26\n    while ch >= m:\n        cn = fixed.count(ch)\n        while cn > c[-1][1]:\n            c.pop()\n        for i in range(n):\n            if fixed[i] == ch:\n                fixed[i] = c[-1][0]\n        c.pop()\n        ch -= 1\n    print(''.join(fixed))", "def works(c, i, prob, btgt, m):\n    val = 0\n    for j in range(m):\n        if prob[j] != ' ' and c < prob[j]:\n            val += abs(i - j)\n    return val == btgt\n\ndef solve0(prob, s, slack, b, m, depth):\n    if prob.find(' ') == -1:\n        return (prob, True)\n    c = s.pop()\n    for i in range(m):\n        if prob[i] != ' ':\n            continue\n        if works(c, i, prob, b[i], m):\n            (ans, ok) = solve0(prob[:i] + c + prob[i + 1:], s.copy(), slack, b, m, depth + 1)\n            if ok:\n                return (ans, True)\n    if slack > 0:\n        (ans, ok) = solve0(prob, s, slack - 1, b, m, depth + 1)\n        if ok:\n            return (ans, True)\n    return ('', False)\n\ndef solve(s, m, b):\n    s = sorted(s)\n    slack = len(s) - m\n    (ans, correct) = solve0(' ' * m, s, slack, b, m, 0)\n    return ans\ncases = int(input().strip())\nfor _ in range(cases):\n    s = input().strip()\n    m = int(input().strip())\n    b = list(map(int, input().strip().split()))\n    print(solve(s, m, b))"]