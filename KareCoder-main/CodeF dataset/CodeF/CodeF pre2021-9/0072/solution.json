["n = int(input())\nfor i in range(n):\n    input()\n    f = list(map(int, input().split()))\n    ctr = 0\n    m = min(f)\n    for j in f:\n        if j > m:\n            ctr += 1\n    print(ctr)", "for _ in [*open(0)][2::2]:\n    arr = list(map(int, _.split()))\n    print(len(arr) - arr.count(min(arr)))", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    print(len(A) - A.count(A[0]))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    m = min(arr)\n    cnt = 0\n    for a in arr:\n        if a == m:\n            cnt += 1\n    print(n - cnt)", "t = int(input())\ns2 = []\nfor i in range(t):\n    k = 0\n    n = int(input())\n    s = list(map(int, input().split()))\n    a = min(s)\n    for j in range(len(s)):\n        if s[j] > a:\n            k += 1\n    s2.append(k)\nfor h in range(len(s2)):\n    print(s2[h])", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(set(a)) == 1:\n        print(0)\n    else:\n        print(n - a.count(min(a)))", "a = int(input())\nfor i in range(a):\n    b = int(input())\n    c = input().split()\n    c = list(map(int, c))\n    print(b - c.count(min(c)))", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    heroes = sorted(list(map(int, input().split())))\n    if len(set(heroes)) == 1:\n        print(0)\n    else:\n        for (i, hero) in enumerate(heroes):\n            if hero > heroes[0]:\n                print(n - i)\n                break", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split(' ')))\n    s = sorted(lst)\n    a = s.count(s[0])\n    l = len(lst)\n    b = l - a\n    print(b)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    Min = min(a)\n    flag = False\n    a.sort()\n    for i in range(n):\n        if a[i] != Min:\n            print(n - i)\n            flag = True\n            break\n    if not flag:\n        print(0)", "def helper(arr):\n    arr.sort(reverse=True)\n    flag = True\n    while flag:\n        if len(arr) == 2 and arr[0] == arr[1]:\n            return 0\n        if len(arr) < 2:\n            break\n        if arr[-1] != arr[-2]:\n            flag = False\n        arr.pop()\n    ans = len(arr)\n    return ans\ntest = int(input())\nfor i in range(test):\n    l = int(input())\n    inp = list(map(int, input().split()))\n    ans = helper(inp)\n    print(ans)", "t = int(input(''))\nfor i in range(t):\n    n = int(input(''))\n    a = list(map(int, input('').split()))\n    print(n - a.count(min(a)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    min_value = min(a)\n    while min_value in a:\n        a.remove(min_value)\n    print(len(a))", "t = int(input())\nwhile t:\n    t -= 1\n    input()\n    a = list(map(int, input().split()))\n    print(len(a) - a.count(min(a)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    k = min(a)\n    s = 0\n    for j in a:\n        if j > k:\n            s += 1\n    print(s)", "while True:\n    try:\n        t = eval(input())\n        for i in range(t):\n            n = eval(input())\n            list0 = list(map(int, input().split()))\n            cnt = 0\n            min1 = min(list0)\n            for j in range(n):\n                if list0[j] > min1:\n                    cnt += 1\n            print(cnt)\n    except:\n        break", "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    li.sort()\n    tmp = li[0]\n    res = 0\n    for i in li:\n        if i > tmp:\n            res += 1\n    print(res)", "t = int(input())\nwhile t:\n    t -= 1\n    input()\n    a = list(map(int, input().split()))\n    print(len(a) - a.count(min(a)))", "t = int(input())\nwhile t:\n    t -= 1\n    input()\n    a = list(map(int, input().split()))\n    print(len(a) - a.count(min(a)))", "t = int(input())\nfor i in range(t):\n    number = int(input())\n    levels = list(map(int, input().strip().split()))\n    levels.sort()\n    count = 0\n    for j in levels:\n        if levels[0] == j:\n            count += 1\n        else:\n            break\n    print(number - count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(n - a.count(min(a)))", "test_case = int(input())\nfor tc in range(0, test_case):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mn = min(arr)\n    ans = 0\n    for i in range(0, n):\n        if arr[i] != mn:\n            ans += 1\n    print(ans)", "n = int(input())\nfor i in range(n):\n    x = int(input())\n    y = list(map(int, input().split()))\n    x = y.count(min(y))\n    print(len(y) - x)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(_) for _ in input().split()]\n    print(len(a) - a.count(min(a)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(n - a.count(min(a)))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    s = input().split()\n    arr = [int(i) for i in s]\n    min1 = min(arr)\n    count = 0\n    for i in arr:\n        if i != min1:\n            count += 1\n    print(count)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(n - a.count(min(a)))", "def main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        hero = list(map(int, input().split()))\n        mini = 0\n        hero_min = hero[0]\n        for hr in hero:\n            if hr == hero_min:\n                mini += 1\n            elif hr < hero_min:\n                hero_min = hr\n                mini = 1\n        print(n - mini)\nmain()", "for t in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    print(n - l.count(min(l)))", "n = int(input())\nfor _ in range(n):\n    a = int(input())\n    l = list(map(int, input().split(' ')))\n    s1 = l.count(min(l))\n    print(len(l) - s1)", "for i in range(int(input())):\n    n = int(input())\n    heroes = [int(x) for x in input().split(' ')]\n    if heroes == [heroes[0] for j in range(n)]:\n        print(0)\n        continue\n    min = 101\n    c = 0\n    for i in range(len(heroes)):\n        if heroes[i] < min:\n            min = heroes[i]\n            c = heroes.count(min)\n    print(len(heroes) - c)", "from math import *\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(n - a.count(min(a)))\nT = int(input())\nfor i in range(T):\n    solve()", "n = int(input())\nfor x in range(n):\n    b = (int, input())\n    c = list(map(int, input().split()))\n    print(len(c) - c.count(min(c)))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    a = l.count(min(l))\n    print(n - a)\n    t -= 1", "for i in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    print(len(s) - s.count(min(s)))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = set(l)\n    if len(s) == 1:\n        print(0)\n    else:\n        print(len(l) - l.count(min(s)))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr_set = set(arr)\n    if len(arr_set) == 1:\n        print(0)\n    else:\n        print(len(arr) - arr.count(min(arr_set)))", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mv = min(arr)\n    cnt = 0\n    for i in range(n):\n        if arr[i] == mv:\n            cnt += 1\n    return n - cnt\nfor _ in range(int(input())):\n    print(solve())", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split(' '))))\n    print(1) if n == 1 else print(n - a.count(a[0]))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    weakest = a.count(min(a))\n    print(len(a) - weakest)", "import sys\nsys.setrecursionlimit(4000)\nimport math\nfrom collections import Counter\nfrom collections import defaultdict\nfrom collections import deque\ninput = sys.stdin.readline\nimport heapq\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nn = inp()\nfor k in range(n):\n    m = inp()\n    arr = inlt()\n    arr.sort()\n    count = 0\n    l = arr[0]\n    for i in arr:\n        if i == l:\n            count += 1\n        else:\n            break\n    print(m - count)", "for t in range(int(input())):\n    n = int(input())\n    l = [*map(int, input().split())]\n    m = min(l)\n    cnt = 0\n    for i in l:\n        cnt += i != m\n    print(cnt)", "for t in range(int(input())):\n    n = int(input())\n    l = sorted(map(int, input().split()))\n    ans = 0\n    for i in range(1, n):\n        if l[0] != l[i]:\n            ans = n - i\n            break\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    l = [*map(int, input().split())]\n    print(n - l.count(min(l)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    y = l.pop(0)\n    count = 0\n    for i in l:\n        if i > y:\n            count += 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))[:n]\n    k = min(l)\n    p = l.count(k)\n    print(n - p)", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(len(a) - a.count(min(a)))", "def solve():\n    n = int(input())\n    mas = list(map(int, input().split()))\n    m = min(mas)\n    print(len(list(filter(lambda x: x != m, mas))))\nt = int(input())\nfor _ in range(t):\n    solve()", "for t in range(int(input())):\n    n = int(input())\n    (*a,) = map(int, input().split())\n    c = a.count(min(a))\n    print(n - c)", "num = int(input())\nfor i in range(num):\n    lenz = int(input())\n    arr = input()\n    arr = arr.split(' ')\n    arr = [int(x) for x in arr]\n    minn = min(arr)\n    if arr.count(minn) == len(arr):\n        print(0)\n    else:\n        print(len(arr) - arr.count(minn))", "import sys\nimport math\nimport bisect\nfast_reader = sys.stdin.readline\nfast_writer = sys.stdout.write\n\ndef input():\n    return fast_reader().strip()\n\ndef print(*argv):\n    fast_writer(' '.join((str(i) for i in argv)))\n    fast_writer('\\n')\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = min(a)\n    ans = 0\n    for i in a:\n        if i != m:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    print(len(a) - a.count(min(a)))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = min(l)\n    s = 0\n    for i in l:\n        if i > c:\n            s += 1\n    print(s)", "import sys\n\ndef int_inp():\n    return int(sys.stdin.readline())\n\ndef inp_lst():\n    return list(map(int, sys.stdin.readline().strip().split()))\nt = int_inp()\nfor _ in range(t):\n    n = int_inp()\n    l = inp_lst()\n    print(n - l.count(min(l)))", "for _ in range(int(input())):\n    a = int(input())\n    l = [int(i) for i in input().split()]\n    l.sort()\n    x = l[0]\n    cnt = 0\n    ans = 0\n    for i in range(a):\n        if l[i] != x:\n            print(a - cnt)\n            ans = 1\n            break\n        cnt += 1\n    if ans == 0:\n        print(0)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    print(len(arr) - arr.count(arr[0]))", "import sys\n\ndef solve():\n    _ = int(sys.stdin.readline().rstrip())\n    heros = list(map(int, sys.stdin.readline().rstrip().split(' ')))\n    m = min(heros)\n    res = 0\n    for x in heros:\n        res += x > m\n    print(res)\nt = int(sys.stdin.readline().rstrip())\nfor _ in range(t):\n    solve()", "def solve(n, ls):\n    ans = 0\n    mi = min(ls)\n    for l in ls:\n        if l > mi:\n            ans += 1\n    return ans\nt = int(input())\nwhile t:\n    n = int(input())\n    ls = list(map(int, input().split()))\n    print(solve(n, ls))\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(n - a.count(min(a)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(n - a.count(a[0]))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = max(l)\n    n = min(l)\n    if m == n:\n        print(0)\n    else:\n        print(len(l) - l.count(n))", "import math\nimport sys\nimport os.path\nif os.path.exists('input_file.txt'):\n    sys.stdin = open('input_file.txt', 'r')\n    sys.stdout = open('output_file.txt', 'w')\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = min(a)\n    c = 0\n    for i in a:\n        if m != i:\n            c += 1\n    print(c)", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    strengths = list(map(int, input().strip().split()))[:n]\n    print(len(strengths) - strengths.count(min(strengths)))", "import sys\npin = sys.stdin.readline\nfor T in range(int(pin())):\n    N = int(pin())\n    A = [*map(int, pin().split())]\n    mm = min(A)\n    print(N - A.count(mm))", "def Codeforces():\n    for _ in range(int(input())):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        arr.sort(reverse=True)\n        x = arr.pop()\n        while arr and arr[-1] == x:\n            arr.pop()\n        print(len(arr))\nCodeforces()", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a.sort()\n    wins = 0\n    for i in range(n):\n        if a[i] > a[0]:\n            wins += 1\n    print(wins)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    minn = min(a)\n    cnt = 0\n    for i in range(n):\n        if a[i] != minn:\n            cnt += 1\n    print(cnt)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(len(arr) - arr.count(min(arr)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mina = min(a)\n    total = len(a)\n    count = a.count(mina)\n    print(total - count)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = l.count(min(l))\n    print(n - m)", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    mn = min(ar)\n    cnt = ar.count(mn)\n    print(n - cnt)", "for _ in range(int(input())):\n    input()\n    participants = list(map(int, input().split()))\n    participants.sort()\n    winners = 0\n    min_level = participants[0]\n    start_post = 0\n    for i in range(len(participants)):\n        if min_level != participants[i]:\n            start_post = i\n            break\n    if start_post == 0:\n        print(0)\n    else:\n        print(len(participants[start_post:]))", "for test in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    slaby = min(a)\n    silny = max(a)\n    if silny == slaby:\n        print(0)\n    else:\n        print(len(a) - a.count(slaby))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    minvalue = min(a)\n    ans = sum(map(lambda x: 1 if x > minvalue else 0, a))\n    print(ans)", "t = int(input())\n\ndef get_answer(n, a):\n    a.sort()\n    i = 0\n    while i < n - 1:\n        if a[i + 1] > a[i]:\n            break\n        i += 1\n    return n - i - 1\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(get_answer(n, a))", "cases = int(input())\nwhile cases:\n    cases -= 1\n    num = int(input())\n    arr = list(map(int, input().split()))\n    x = min(arr)\n    y = arr.count(x)\n    print(len(arr) - y)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    hero = list(map(int, sys.stdin.readline().strip().split()))\n    m = min(hero)\n    numWinner = n\n    for h in hero:\n        if h == m:\n            numWinner -= 1\n    print(numWinner)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = min(l)\n    k = l.count(m)\n    print(n - k)", "def check(nums, n):\n    mini = min(nums)\n    maxi = max(nums)\n    count = 0\n    for i in range(n):\n        if nums[i] == mini:\n            pass\n        else:\n            count += 1\n    return count\nfor _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    nums = sorted(nums)\n    print(check(nums, n))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    line = input()\n    res = [int(i) for i in line.split()]\n    mm = min(res)\n    cnt = sum([1 for i in res if i == mm])\n    res = len(res) - cnt\n    print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mi = min(a)\n    c = a.count(mi)\n    print(n - c)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(n - a.count(a[0]))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    print(n - arr.count(arr[0]))", "def solution():\n    t = int(input())\n    out = ''\n    while t > 0:\n        n = int(input())\n        a = list(map(int, input().split(' ')))\n        a.sort()\n        cnt = a.count(a[0])\n        out = out + str(n - cnt) + '\\n'\n        t -= 1\n    print(out)\nsolution()", "def solution():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    (min_a, k) = (101, 0)\n    for i in a:\n        if i < min_a:\n            min_a = i\n            k = 1\n        elif i == min_a:\n            k += 1\n    print(n - k)\nfor t in range(int(input())):\n    solution()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = sorted(arr)\n    mini = min(arr)\n    count = 0\n    for i in arr:\n        if i != mini:\n            count += 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    l = sorted(list(map(int, input().split())))\n    k = min(l)\n    try:\n        while l[0] == k:\n            l.remove(k)\n    except:\n        l = []\n    print(len(l))", "for test in range(int(input())):\n    h = int(input())\n    p = list(map(int, input().split()))\n    print(h - p.count(min(p)))", "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    li.sort()\n    tmp = li[0]\n    res = 0\n    for i in li:\n        if i > tmp:\n            res += 1\n    print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    min = l[0]\n    for i in l:\n        if i < min:\n            min = i\n    final = list()\n    for i in range(n):\n        if l[i] == min:\n            continue\n        else:\n            final.append(l[i])\n    print(len(final))", "import sys\nstdint = lambda : int(sys.stdin.readline())\nreadintlist = lambda : [int(i) for i in sys.stdin.readline().split()]\nstdwrite = lambda line: sys.stdout.write(line + '\\n')\nt = stdint()\nwhile t:\n    n = stdint()\n    li = readintlist()\n    mi = min(li)\n    mi_c = 0\n    for i in li:\n        if i == mi:\n            mi_c += 1\n    stdwrite(str(n - mi_c))\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    heroes = [int(j) for j in input().split()]\n    heroes.sort()\n    maybe_winrs = 0\n    weak = heroes[0]\n    for j in range(1, n):\n        if heroes[j] > weak:\n            maybe_winrs += 1\n    print(maybe_winrs)", "t = int(input())\nwhile t:\n    n = int(input())\n    power = list(map(int, input().split()))\n    mini = min(power)\n    miniC = power.count(mini)\n    print(len(power) - miniC)\n    t -= 1", "import sys\nT = int(input())\nfor test_case in range(T):\n    n = int(input())\n    heroes = list(map(int, sys.stdin.readline().rstrip().split()))\n    heroes.sort()\n    index = -1\n    for i in range(1, len(heroes)):\n        if heroes[i] != heroes[i - 1]:\n            index = i\n            break\n    if index == -1:\n        print(0)\n    else:\n        print(len(heroes) - index)", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        ans = n - a.count(min(a))\n        print(ans)\nmain()", "t = int(input())\nwhile t:\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    print(len(a) - a.count(min(a)))\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    c = 0\n    t = a.count(a[0])\n    print(n - t)"]