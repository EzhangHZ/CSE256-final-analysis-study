["def sol(s):\n    if s[0] != s[-1]:\n        s = s.replace(s[0], '(')\n        s = s.replace(s[-1], ')')\n        res1 = 0\n        res2 = 0\n        for i in s:\n            if i == '(':\n                res1 += 1\n                res2 += 1\n            elif i == ')':\n                res1 -= 1\n                res2 -= 1\n            else:\n                res1 -= 1\n                res2 += 1\n            if res1 < 0:\n                res1 = 1000000\n            if res2 < 0:\n                res2 = 1000000\n        return res1 == 0 or res2 == 0\n    return False\nfor _ in range(int(input())):\n    if sol(input()):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = input()\n    a = s[0]\n    b = s[-1]\n    for i in 'ABC':\n        if i != a and i != b:\n            c = i\n    A = s.count(a)\n    B = s.count(b)\n    C = s.count(c)\n    if A > B + C:\n        print('NO')\n        continue\n    if B > A + C:\n        print('NO')\n        continue\n    if C > A + B:\n        print('NO')\n        continue\n    if A == B and C:\n        print('NO')\n        continue\n    q = 0\n    for i in s:\n        if i == a:\n            q += 1\n        elif i == b:\n            q -= 1\n        elif A > B:\n            q -= 1\n        else:\n            q += 1\n        if q < 0:\n            print('NO')\n            break\n    else:\n        if q == 0:\n            print('YES')\n        else:\n            print('NO')", "def valid(S):\n    a = 0\n    for i in S:\n        if i == '(':\n            a += 1\n        else:\n            a -= 1\n        if a < 0:\n            return 0\n    return a == 0\nfor _ in range(int(input())):\n    s = input()\n    x = s.count('A')\n    y = s.count('B')\n    z = s.count('C')\n    if s[0] != s[-1]:\n        rem = list({'A', 'B', 'C'} - {s[0], s[-1]})[0]\n        s = s.replace(s[0], '(')\n        s = s.replace(s[-1], ')')\n        p = s\n        q = s\n        p = p.replace(rem, '(')\n        q = q.replace(rem, ')')\n        if valid(p) or valid(q):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    s = input()\n    A = s[0]\n    B = s[-1]\n    for C in ['A', 'B', 'C']:\n        if C != A and C != B:\n            break\n    s = s.replace(A, '(')\n    s = s.replace(B, ')')\n    s1 = s.replace(C, '(')\n    s2 = s.replace(C, ')')\n\n    def helper(ss) -> bool:\n        while '()' in ss:\n            ss = ss.replace('()', '')\n        return len(ss) == 0\n    if helper(s1) or helper(s2):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    s = input()\n    x = ord(s[0]) - ord('A')\n    y = ord(s[-1]) - ord('A')\n    if s[0] == s[-1]:\n        print('NO')\n    else:\n        d = [0, 0, 0]\n        d[x] = 1\n        d[y] = -1\n        if s.count(chr(ord('A') + x)) == len(s) // 2:\n            d[3 ^ x ^ y] = -1\n        else:\n            d[3 ^ x ^ y] = 1\n        bal = 0\n        found = False\n        for i in s:\n            bal += d[ord(i) - ord('A')]\n            if bal < 0:\n                found = True\n                break\n        if found:\n            print('NO')\n        elif bal == 0:\n            print('YES')\n        else:\n            print('NO')\n    t -= 1", "for t in range(int(input())):\n    s = input()\n    (p, k) = (s[0], s[-1])\n    r = 0\n    for i in s:\n        if r < 0:\n            print('NO')\n            break\n        elif i == p:\n            r += 1\n        elif i == k:\n            r -= 1\n        elif s.count(p) > s.count(k):\n            r -= 1\n        else:\n            r += 1\n    if r == 0:\n        print('YES')\n    elif r > 0:\n        print('NO')", "for Pythonic__Python in range(int(input())):\n    s = input()\n    (c1, c2) = (0, 0)\n    (fa, fb) = (True, True)\n    if s[0] != s[-1]:\n        for i in s:\n            if i == s[0]:\n                c1 += 1\n                c2 += 1\n            elif i == s[-1]:\n                c1 -= 1\n                c2 -= 1\n            else:\n                c1 += 1\n                c2 -= 1\n            if c1 < 0:\n                fa = False\n            if c2 < 0:\n                fb = False\n    else:\n        print('NO')\n        continue\n    if c1 == 0 and fa or (c2 == 0 and fb):\n        print('YES')\n    else:\n        print('NO')", "for pratyush in range(int(input())):\n    s = list(input())\n    l = len(s)\n    if s[0] == s[-1]:\n        print('NO')\n    else:\n        a = s.count(s[0])\n        b = s.count(s[-1])\n        if a > l // 2 or b > l // 2:\n            print('NO')\n        elif a == b or a == l // 2:\n            (v, f) = (0, 0)\n            for i in s:\n                if i == s[0]:\n                    v += 1\n                else:\n                    v -= 1\n                if v < 0:\n                    f = 1\n                    break\n            print(['YES', 'NO'][f == 1])\n        elif b == l // 2:\n            (v, f) = (0, 0)\n            for i in s:\n                if i == s[-1]:\n                    v -= 1\n                else:\n                    v += 1\n                if v < 0:\n                    f = 1\n                    break\n            print(['YES', 'NO'][f == 1])\n        else:\n            print('NO')", "def solve(a):\n    last_elem = len(a) - 1\n    open_ = a[0]\n    close_ = a[last_elem]\n    if open_ == close_:\n        return 'NO'\n    stack_open = 0\n    stack_close = 0\n    stack_open_is_valid = True\n    stack_close_is_valid = True\n    for elem in a:\n        if elem == open_:\n            stack_open += 1\n            stack_close += 1\n        elif elem == close_:\n            stack_open -= 1\n            stack_close -= 1\n            if stack_open < 0:\n                stack_open_is_valid = False\n            if stack_close < 0:\n                stack_close_is_valid = False\n        else:\n            stack_open += 1\n            stack_close -= 1\n            if stack_close < 0:\n                stack_close_is_valid = False\n    if stack_open == 0 and stack_open_is_valid or (stack_close == 0 and stack_close_is_valid):\n        return 'YES'\n    return 'NO'\nt = int(input())\nfor _ in range(t):\n    a = input()\n    print(solve(a))", "def solve(a):\n    last_elem = len(a) - 1\n    open_ = a[0]\n    close_ = a[last_elem]\n    if open_ == close_:\n        return 'NO'\n    stack_open = 0\n    stack_close = 0\n    stack_open_is_valid = True\n    stack_close_is_valid = True\n    for elem in a:\n        if elem == open_:\n            stack_open += 1\n            stack_close += 1\n        elif elem == close_:\n            stack_open -= 1\n            stack_close -= 1\n        else:\n            stack_open += 1\n            stack_close -= 1\n        if stack_open < 0:\n            stack_open_is_valid = False\n        if stack_close < 0:\n            stack_close_is_valid = False\n    if stack_open == 0 and stack_open_is_valid or (stack_close == 0 and stack_close_is_valid):\n        return 'YES'\n    return 'NO'\nt = int(input())\nfor _ in range(t):\n    a = input()\n    print(solve(a))", "t = int(input())\nfor i in range(t):\n    a = input()\n    (b, d) = (a[0], a[-1])\n    r = 0\n    for k in a:\n        if r < 0:\n            print('NO')\n            break\n        elif k == b:\n            r += 1\n        elif k == d:\n            r -= 1\n        elif a.count(b) > a.count(d):\n            r -= 1\n        else:\n            r += 1\n    if r == 0:\n        print('YES')\n    elif r > 0:\n        print('NO')", "n = int(input())\nfor _ in range(n):\n    s = input()\n    if s[0] == s[-1]:\n        print('NO')\n    else:\n        s = s.replace(s[0], '(')\n        s = s.replace(s[-1], ')')\n        a = s\n        if 'A' in s:\n            s = s.replace('A', '(')\n            a = a.replace('A', ')')\n        elif 'B' in s:\n            s = s.replace('B', '(')\n            a = a.replace('B', ')')\n        else:\n            s = s.replace('C', '(')\n            a = a.replace('C', ')')\n        while True:\n            if '()' in s:\n                s = s.replace('()', '')\n            else:\n                break\n        while True:\n            if '()' in a:\n                a = a.replace('()', '')\n            else:\n                break\n        if len(s) == 0 or len(a) == 0:\n            print('YES')\n        else:\n            print('NO')", "import sys\ninput = lambda : sys.stdin.readline()\nli = lambda : list(map(int, input().split()))\nls = lambda : list(input().split())\n\ndef func():\n    str = input()\n    (a, b, c) = ([1, -1], [1, -1], [1, -1])\n    for x in a:\n        for y in b:\n            for z in c:\n                (ct, f) = (0, 0)\n                for ch in str:\n                    if ch == 'A':\n                        ct += x\n                    elif ch == 'B':\n                        ct += y\n                    elif ch == 'C':\n                        ct += z\n                    if ct < 0:\n                        f = 1\n                        break\n                if f == 0 and ct == 0:\n                    print('YES')\n                    return\n    print('NO')\n    return\nt = int(input())\nfor i in range(t):\n    func()", "t = int(input())\nfor _ in range(t):\n\n    def regular(s):\n        (opn, o) = (s[0], 0)\n        for c in s:\n            if c == opn:\n                o += 1\n            elif o == 0:\n                return False\n            else:\n                o -= 1\n        return o == 0\n    s = input()\n    res = 'YES' if s[0] != s[-1] and (regular(s.replace('A', 'B')) or regular(s.replace('C', 'A')) or regular(s.replace('C', 'B'))) else 'NO'\n    print(res)", "def areBracketsBalanced(expr):\n    stack = []\n    for char in expr:\n        if char in ['(', '{', '[']:\n            stack.append(char)\n        else:\n            if not stack:\n                return False\n            current_char = stack.pop()\n            if current_char == '(':\n                if char != ')':\n                    return False\n            if current_char == '{':\n                if char != '}':\n                    return False\n            if current_char == '[':\n                if char != ']':\n                    return False\n    if stack:\n        return False\n    return True\nfor _ in range(int(input())):\n    a = input()\n    n = len(a)\n    if a[0] == a[n - 1]:\n        ans = 'NO'\n    else:\n        fa0 = 0\n        fan1 = 0\n        f2 = 0\n        b = ''\n        for char in a:\n            if char == a[0]:\n                fa0 += 1\n            elif char == a[n - 1]:\n                fan1 += 1\n            else:\n                f2 += 1\n        if fa0 + f2 == fan1:\n            for char in a:\n                if char == a[0]:\n                    b += '('\n                elif char == a[n - 1]:\n                    b += ')'\n                else:\n                    b += '('\n        elif fa0 == fan1 + f2:\n            for char in a:\n                if char == a[0]:\n                    b += '('\n                elif char == a[n - 1]:\n                    b += ')'\n                else:\n                    b += ')'\n        else:\n            ans = 'NO'\n        if b and areBracketsBalanced(b):\n            ans = 'YES'\n        else:\n            ans = 'NO'\n    print(ans)", "for _ in range(int(input())):\n    s = list(input())\n    l = len(s)\n    if s[0] == s[-1]:\n        print('NO')\n    else:\n        a = s.count(s[0])\n        b = s.count(s[-1])\n        if a > l // 2 or b > l // 2:\n            print('NO')\n        elif a == b or a == l // 2:\n            (ans, f) = (0, 0)\n            for i in s:\n                if i == s[0]:\n                    ans += 1\n                else:\n                    ans -= 1\n                if ans < 0:\n                    f = 1\n                    break\n            print(['YES', 'NO'][f == 1])\n        elif b == l // 2:\n            (ans, f) = (0, 0)\n            for i in s:\n                if i == s[-1]:\n                    ans -= 1\n                else:\n                    ans += 1\n                if ans < 0:\n                    f = 1\n                    break\n            print(['YES', 'NO'][f == 1])\n        else:\n            print('NO')", "for i in range(int(input())):\n    s = input().strip()\n    n = len(s)\n    l = ['A', 'B', 'C']\n    left = [s[0]]\n    right = [s[n - 1]]\n    if left[0] == right[0]:\n        print('NO')\n        continue\n    l.remove(left[0])\n    l.remove(right[0])\n    doubt = l.pop()\n    d = {'A': 0, 'B': 0, 'C': 0}\n    for i in s:\n        d[i] += 1\n    if max(d[left[0]], d[right[0]]) != min(d[left[0]], d[right[0]]) + d[doubt]:\n        print('NO')\n        continue\n    if d[left[0]] > d[right[0]]:\n        right.append(doubt)\n    else:\n        left.append(doubt)\n    l = 0\n    r = 0\n    flag = True\n    for i in s:\n        if i in left:\n            l += 1\n        else:\n            r += 1\n        if r > l:\n            flag = False\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    s = input()\n    (f, l) = (s[0], s[-1])\n    if f == l:\n        print('NO')\n    else:\n        s = s.replace(s[0], '(').replace(s[-1], ')')\n        (o, c) = (s.count('('), s.count(')'))\n        tmp = s\n        s = s.replace('(', '').replace(')', '')\n        diff = o - c\n        if abs(o - c) == len(s):\n            if diff > 0:\n                tmp = tmp.replace('A', ')')\n                tmp = tmp.replace('B', ')')\n                tmp = tmp.replace('C', ')')\n                cnt = 0\n                while len(tmp) > 1:\n                    if cnt > 30:\n                        break\n                    cnt += 1\n                    tmp = tmp.replace('()', '')\n                if len(tmp) > 0:\n                    print('NO')\n                else:\n                    print('YES')\n            else:\n                tmp = tmp.replace('A', '(')\n                tmp = tmp.replace('B', '(')\n                tmp = tmp.replace('C', '(')\n                cnt = 0\n                while len(tmp) > 1:\n                    if cnt > 30:\n                        break\n                    cnt += 1\n                    tmp = tmp.replace('()', '')\n                if len(tmp) > 0:\n                    print('NO')\n                else:\n                    print('YES')\n        else:\n            print('NO')", "def ifValid(S):\n    bracket = 0\n    for i in S:\n        if i == '(':\n            bracket += 1\n        else:\n            bracket -= 1\n        if bracket < 0:\n            return 0\n    return bracket == 0\nfor __ in range(int(input())):\n    S = input()\n    flag = ifValid(S.replace('A', '(').replace('B', '(').replace('C', '(')) or ifValid(S.replace('A', '(').replace('B', '(').replace('C', ')')) or ifValid(S.replace('A', '(').replace('B', ')').replace('C', '(')) or ifValid(S.replace('A', '(').replace('B', ')').replace('C', ')')) or ifValid(S.replace('A', ')').replace('B', '(').replace('C', '(')) or ifValid(S.replace('A', ')').replace('B', '(').replace('C', ')')) or ifValid(S.replace('A', ')').replace('B', ')').replace('C', '(')) or ifValid(S.replace('A', ')').replace('B', ')').replace('C', ')'))\n    print('YES' if flag else 'NO')", "for t in range(int(input())):\n    s = str(input())\n    x = s[0]\n    y = s[-1]\n    c = 0\n    for i in s:\n        if c < 0:\n            print('NO')\n            break\n        elif i == x:\n            c += 1\n        elif i == y:\n            c -= 1\n        elif s.count(x) > s.count(y):\n            c -= 1\n        else:\n            c += 1\n    if c == 0:\n        print('YES')\n    elif c > 0:\n        print('NO')", "for i in [*open(0)][1:]:\n    a = max('ABC', key=i.count)\n    r = [0]\n    for u in i[:-1]:\n        r += (r[-1] + 2 * (u == a) - 1,)\n    print('YNEOS'[r[-1] | min(r) * max(r) != 0::2])", "for Pythonic__Python1 in range(int(input())):\n    s = input()\n    (c1, c2) = (0, 0)\n    (fa, fb) = (True, True)\n    if s[0] != s[-1]:\n        for i in s:\n            if i == s[0]:\n                c1 += 1\n                c2 += 1\n            elif i == s[-1]:\n                c1 -= 1\n                c2 -= 1\n            else:\n                c1 += 1\n                c2 -= 1\n            if c1 < 0:\n                fa = False\n            if c2 < 0:\n                fb = False\n    else:\n        print('NO')\n        continue\n    if c1 == 0 and fa or (c2 == 0 and fb):\n        print('YES')\n    else:\n        print('NO')", "def solve(a):\n    open_ = a[0]\n    close_ = a[-1]\n    if open_ == close_:\n        return 'NO'\n    stack_open = 0\n    stack_close = 0\n    stack_open_is_valid = True\n    stack_close_is_valid = True\n    for elem in a:\n        if elem == open_:\n            stack_open += 1\n            stack_close += 1\n        elif elem == close_:\n            stack_open -= 1\n            stack_close -= 1\n        else:\n            stack_open += 1\n            stack_close -= 1\n        if stack_open < 0:\n            stack_open_is_valid = False\n        if stack_close < 0:\n            stack_close_is_valid = False\n    if stack_open == 0 and stack_open_is_valid or (stack_close == 0 and stack_close_is_valid):\n        return 'YES'\n    return 'NO'\nt = int(input())\nfor _ in range(t):\n    a = input()\n    print(solve(a))", "t = int(input())\nfor i in range(t):\n    s = input()\n    a = s[0]\n    b = s[-1]\n    stack1 = 0\n    stack2 = 0\n    for i in s:\n        if i == a:\n            stack1 += 1\n            stack2 += 1\n        elif i == b:\n            stack1 -= 1\n            stack2 -= 1\n        else:\n            stack1 -= 1\n            stack2 += 1\n        if stack1 == -1:\n            stack1 = -10000\n        if stack2 == -1:\n            stack2 = -10000\n    if stack1 == 0 or stack2 == 0:\n        print('YES')\n    else:\n        print('NO')", "import sys\nfrom os import path\nif path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\ninput = lambda : sys.stdin.readline()\nli = lambda : list(map(int, input().split()))\nls = lambda : list(input().split())\n\ndef func():\n    str = input()\n    (a, b, c) = ([1, -1], [1, -1], [1, -1])\n    for x in a:\n        for y in b:\n            for z in c:\n                (ct, f) = (0, 0)\n                for ch in str:\n                    if ch == 'A':\n                        ct += x\n                    elif ch == 'B':\n                        ct += y\n                    elif ch == 'C':\n                        ct += z\n                    if ct < 0:\n                        f = 1\n                        break\n                if f == 0 and ct == 0:\n                    print('YES')\n                    return\n    print('NO')\n    return\nt = int(input())\nfor i in range(t):\n    func()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    a = input().strip()\n    if a[0] == a[-1]:\n        print('NO')\n    else:\n        d = dict()\n        d[a[0]] = 1\n        d[a[-1]] = -1\n        m = None\n        for i in 'ABC':\n            if i not in d:\n                m = i\n                break\n        for i in (1, -1):\n            d[m] = i\n            b = 0\n            bad = False\n            for c in a:\n                b += d[c]\n                if b < 0:\n                    bad = True\n                    break\n            if b != 0:\n                bad = True\n            if not bad:\n                print('YES')\n                return\n        print('NO')\nfor i in range(int(input())):\n    solve()", "T = int(input())\nfor t in range(T):\n    s = input()\n    if s[0] == s[len(s) - 1]:\n        print('NO')\n    else:\n        ans = True\n        x = 0\n        for i in range(len(s)):\n            if s[i] == s[0]:\n                x += 1\n            else:\n                x -= 1\n                if x < 0:\n                    ans = False\n                    break\n        if ans and x == 0:\n            print('YES')\n        else:\n            ans = True\n            x = 0\n            for i in range(len(s)):\n                if s[i] == s[len(s) - 1]:\n                    x -= 1\n                    if x < 0:\n                        ans = False\n                        break\n                else:\n                    x += 1\n            if ans and x == 0:\n                print('YES')\n            else:\n                print('NO')", "def check(s):\n    if s[0] == s[-1]:\n        return False\n    d = {s[0]: '(', s[-1]: ')'}\n    a = []\n    flag = 0\n    for i in s:\n        if i not in d:\n            sc = '('\n        else:\n            sc = d[i]\n        if sc == '(':\n            a.append(sc)\n        else:\n            if len(a) == 0:\n                flag = 1\n                break\n            a.pop()\n    if len(a) == 0 and flag == 0:\n        return True\n    a = []\n    for i in s:\n        if i not in d:\n            sc = ')'\n        else:\n            sc = d[i]\n        if sc == '(':\n            a.append(i)\n        else:\n            if len(a) == 0:\n                return False\n            a.pop()\n    if len(a) == 0:\n        return True\n    return False\nfor _ in range(int(input())):\n    s = input()\n    if check(s):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    S = input()\n    A = [[S.count('A'), 'A'], [S.count('B'), 'B'], [S.count('C'), 'C']]\n    A.sort()\n    if A[0][0] + A[1][0] != A[2][0]:\n        print('NO')\n    elif S[0] == A[0][1] or S[0] == A[1][1]:\n        count = 0\n        Hai = True\n        for i in range(len(S)):\n            if S[i] == A[0][1] or S[i] == A[1][1]:\n                count += 1\n            else:\n                count -= 1\n            if count < 0:\n                Hai = False\n                print('NO')\n                break\n        if Hai:\n            print('YES')\n    else:\n        count = 0\n        Hai = True\n        for i in range(len(S)):\n            if S[i] == A[0][1] or S[i] == A[1][1]:\n                count -= 1\n            else:\n                count += 1\n            if count < 0:\n                Hai = False\n                print('NO')\n                break\n        if Hai:\n            print('YES')", "t = int(input())\narrays = []\nfor _ in range(t):\n    arrays.append(input())\n\ndef test_bracket(s):\n    count = 0\n    for i in s:\n        if i == '(':\n            count += 1\n        else:\n            count -= 1\n        if count < 0:\n            return False\n    if count != 0:\n        return False\n    else:\n        return True\n\ndef test_astring(s):\n    conv = {}\n    letters = set(['A', 'B', 'C'])\n    letters.remove(s[0])\n    letters_left = list(letters)\n    s = s.replace(s[0], '(')\n    possibilities = [[(letters_left[0], '('), (letters_left[1], ')')], [(letters_left[0], ')'), (letters_left[1], ')')], [(letters_left[0], ')'), (letters_left[1], '(')]]\n    for possibility in possibilities:\n        test = s.replace(possibility[0][0], possibility[0][1]).replace(possibility[1][0], possibility[1][1])\n        if test_bracket(test):\n            return True\n    return False\nfor s in arrays:\n    res = test_astring(s)\n    if res:\n        print('YES')\n    else:\n        print('NO')", "def regular(seq, ch):\n    ob = 0\n    seq = seq.replace('A', ch)\n    seq = seq.replace('B', ch)\n    seq = seq.replace('C', ch)\n    for i in range(len(seq)):\n        if seq[i] == '(':\n            ob += 1\n        elif seq[i] == ')':\n            if ob > 0:\n                ob -= 1\n            else:\n                return False\n    if ob > 0:\n        return False\n    else:\n        return True\nfor _ in range(int(input())):\n    a = input()\n    b = a\n    if a[0] == a[len(a) - 1]:\n        print('NO')\n    else:\n        b = b.replace(a[0], '(')\n        b = b.replace(a[len(a) - 1], ')')\n        if regular(b, '(') or regular(b, ')'):\n            print('YES')\n        else:\n            print('NO')", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    order = sys.stdin.readline().rstrip()\n    if order[0] == order[-1]:\n        print('NO')\n    else:\n        start = 0\n        mid = 0\n        end = 0\n        for i in range(len(order)):\n            if order[i] == order[0]:\n                start += 1\n            elif order[i] == order[-1]:\n                end += 1\n            else:\n                mid += 1\n        if start + mid == end:\n            stack = []\n            ans = 'YES'\n            for i in range(len(order)):\n                if order[i] == order[0]:\n                    stack.append('(')\n                elif order[i] == order[-1]:\n                    if len(stack) == 0 or stack[-1] == ')':\n                        ans = 'NO'\n                        break\n                    else:\n                        stack.pop()\n                else:\n                    stack.append('(')\n            print(ans)\n        elif start == mid + end:\n            stack = []\n            ans = 'YES'\n            for i in range(len(order)):\n                if order[i] == order[0]:\n                    stack.append('(')\n                elif len(stack) == 0 or stack[-1] == ')':\n                    ans = 'NO'\n                    break\n                else:\n                    stack.pop()\n            print(ans)\n        else:\n            print('NO')", "def correct(s):\n    bal = 0\n    for i in range(len(s)):\n        if s[i] == '(':\n            bal += 1\n        else:\n            bal -= 1\n        if bal < 0:\n            return False\n    return bal == 0\nt = int(input())\nfor i in range(t):\n    st = input()\n    if st[0] == st[-1]:\n        print('NO')\n    else:\n        abc = 'ABC'\n        os = st[0]\n        abc = abc.replace(os, '')\n        zs = st[-1]\n        abc = abc.replace(zs, '')\n        st = st.replace(os, '(')\n        st = st.replace(zs, ')')\n        st1 = st.replace(abc[0], ')')\n        if correct(st1):\n            print('YES')\n        else:\n            st1 = st.replace(abc[0], '(')\n            if correct(st1):\n                print('YES')\n            else:\n                print('NO')", "def solve(string, l, memo):\n    open = memo[l[2]]\n    if string[0] == open:\n        stack = []\n        for s in string:\n            if s == open:\n                stack.append(1)\n            elif stack:\n                stack.pop()\n            else:\n                return False\n        if stack:\n            return False\n        else:\n            return True\n    else:\n        close = memo[l[2]]\n        stack = []\n        for s in string:\n            if s != close:\n                stack.append(1)\n            elif stack:\n                stack.pop()\n            else:\n                return False\n        if stack:\n            return False\n        else:\n            return True\nfor _ in range(int(input())):\n    string = input()\n    a = string.count('A')\n    b = string.count('B')\n    c = string.count('C')\n    memo = {a: 'A', b: 'B', c: 'C'}\n    l = [a, b, c]\n    l.sort()\n    if l[2] == l[1] + l[0]:\n        if solve(string, l, memo):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "from heapq import *\nfrom sys import *\nfrom math import *\nn = int(input())\nfor count in range(n):\n    s = input()\n    a = s[0]\n    c = s[-1]\n    a1 = 1\n    a2 = 1\n    l = 0\n    for i in s:\n        if i == a:\n            l += 1\n        else:\n            l -= 1\n            if l < 0:\n                a1 = 0\n                break\n    if l != 0:\n        a1 = 0\n    l = 0\n    for i in s:\n        if i == c:\n            l -= 1\n            if l < 0:\n                a1 = 0\n                break\n        else:\n            l += 1\n    if l != 0:\n        a2 = 0\n    if a1 or a2:\n        print('YES')\n    else:\n        print('NO')", "def check_paranthesis(A, o, c):\n    stack = []\n    for a in A:\n        if a in o:\n            stack.append(a)\n        elif stack and stack[-1] in o:\n            stack.pop()\n        else:\n            return False\n    return True if not stack else False\n\ndef solve(A):\n    arr = [('AB', 'C'), ('A', 'BC'), ('AC', 'B'), ('BC', 'A'), ('B', 'AC'), ('C', 'AB')]\n    for (o, c) in arr:\n        if check_paranthesis(A, o, c):\n            return 'YES'\n    return 'NO'\nx = int(input())\nfor _ in range(x):\n    A = input()\n    print(solve(A))", "import sys\n\ndef debug(*args):\n    print(*args, file=sys.stderr)\n\ndef read_str():\n    return sys.stdin.readline().strip()\n\ndef read_int():\n    return int(sys.stdin.readline().strip())\n\ndef read_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef read_str_split():\n    return list(sys.stdin.readline().strip())\n\ndef read_int_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef Main():\n    t = read_int()\n    for _ in range(t):\n        a = read_str()\n        flag = False\n        for A in ['(', ')']:\n            for B in ['(', ')']:\n                for C in ['(', ')']:\n                    S = a.replace('A', A).replace('B', B).replace('C', C)\n                    if S[0] == ')':\n                        continue\n                    if S[-1] == '(':\n                        continue\n                    tmp = 0\n                    for s in S:\n                        if s == '(':\n                            tmp += 1\n                        if s == ')':\n                            tmp -= 1\n                        if tmp < 0:\n                            break\n                    if tmp == 0:\n                        flag = True\n        if flag:\n            print('YES')\n        else:\n            print('NO')\nMain()", "import math\nfor T in range(int(input())):\n    s = input()\n    p = 0\n    m = 0\n    count = 0\n    if s[0] == s[-1]:\n        print('NO')\n    elif len(s) == 2:\n        print('YES')\n    else:\n        f = s[0]\n        l = s[-1]\n        pos = True\n        for i in range(len(s)):\n            if s[i] == f:\n                p += 1\n            elif s[i] == l:\n                p -= 1\n            else:\n                p -= 1\n            if p < 0:\n                pos = False\n                break\n        if p == 0 and pos:\n            print('YES')\n        else:\n            p = 0\n            f = s[0]\n            l = s[-1]\n            pos = True\n            for i in range(len(s)):\n                if s[i] == f:\n                    p += 1\n                elif s[i] == l:\n                    p -= 1\n                else:\n                    p += 1\n                if p < 0:\n                    pos = False\n                    break\n            if p == 0 and pos:\n                print('YES')\n            else:\n                print('NO')", "def check_formula(s):\n    state = 0\n    for i in s:\n        if i == '(':\n            state += 1\n        elif i == ')' and state > 0:\n            state -= 1\n        else:\n            return 'NO'\n    if state == 0:\n        return 'YES'\n    return 'NO'\n\ndef check_string(s):\n    start_el = s[0]\n    end_el = s[-1]\n    other_el = list({'A', 'B', 'C'} - {start_el, end_el})[0]\n    if start_el == end_el:\n        return 'NO'\n    counts = {'A': s.count('A'), 'B': s.count('B'), 'C': s.count('C')}\n    if counts[start_el] + counts[other_el] == counts[end_el]:\n        replaced_s = s.replace(start_el, '(').replace(other_el, '(').replace(end_el, ')')\n        return check_formula(replaced_s)\n    if counts[end_el] + counts[other_el] == counts[start_el]:\n        replaced_s = s.replace(start_el, '(').replace(other_el, ')').replace(end_el, ')')\n        return check_formula(replaced_s)\n    return 'NO'\n\ndef main():\n    n = input()\n    strings = []\n    answers = []\n    for _ in range(int(n)):\n        answers.append(check_string(input()))\n    for result in answers:\n        print(result)\nmain()", "t = int(input())\nfor _ in range(t):\n    s = input()\n    l = len(s)\n    ans = 'NO'\n    if s[0] != s[-1]:\n        if s.count(s[0]) == l // 2:\n            x = s[0]\n            c = 0\n            for i in range(l):\n                if s[i] == x:\n                    c += 1\n                else:\n                    c -= 1\n                if c < 0:\n                    break\n                if c == 0 and i == l - 1:\n                    ans = 'YES'\n        elif s.count(s[-1]) == l // 2:\n            x = s[-1]\n            c = 0\n            for i in range(l):\n                if s[i] == x:\n                    c -= 1\n                else:\n                    c += 1\n                if c < 0:\n                    break\n                if c == 0 and i == l - 1:\n                    ans = 'YES'\n    print(ans)", "import sys\n\ndef does_exist(s):\n    (f, l) = (s[0], s[-1])\n    m = [i for i in ['A', 'B', 'C'] if i != f and i != l][0]\n    if f == l:\n        return 'NO'\n    else:\n        a = s.count(f)\n        b = s.count(l)\n        c = s.count(m)\n        if a != b + c and b != c + a:\n            return 'NO'\n        else:\n            ls = [0, 0, 0]\n            if a == b + c:\n                for i in range(len(s)):\n                    if s[i] == f:\n                        ls[0] += 1\n                    elif s[i] == l:\n                        ls[1] += 1\n                    else:\n                        ls[2] += 1\n                    if ls[0] < ls[1] + ls[2]:\n                        return 'NO'\n            else:\n                for i in range(len(s)):\n                    if s[i] == f:\n                        ls[0] += 1\n                    elif s[i] == l:\n                        ls[1] += 1\n                    else:\n                        ls[2] += 1\n                    if ls[1] > ls[0] + ls[2]:\n                        return 'NO'\n        return 'YES'\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    s = sys.stdin.readline().rstrip()\n    print(does_exist(s))", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor t in range(T):\n    s = input().strip()\n    if len(s) % 2 == 1:\n        print('NO')\n        continue\n    s = s.replace(s[0], '(')\n    if s[-1] != '(':\n        s = s.replace(s[-1], ')')\n    else:\n        print('NO')\n        continue\n    l = set(s)\n    l = l - set(['(', ')'])\n    if l != set():\n        c = l.pop()\n        if s.count('(') + s.count(c) == s.count(')'):\n            s = s.replace(c, '(')\n        elif s.count(')') + s.count(c) == s.count('('):\n            s = s.replace(c, ')')\n        else:\n            print('NO')\n            continue\n    while s.count('()') > 0:\n        s = s.replace('()', '')\n    if len(s) > 0:\n        print('NO')\n    else:\n        print('YES')", "def find_if_regular(f, ch, st):\n    if f == 1:\n        temp = []\n        for x in st:\n            if x == ch:\n                temp.append(ch)\n            elif temp:\n                temp.remove(ch)\n            else:\n                return 0\n    else:\n        temp = []\n        for x in st:\n            if not x == ch:\n                temp.append(x)\n            elif temp:\n                temp = temp[:-1]\n            else:\n                return 0\n    return 1\n\ndef find_n2(str):\n    ca = st.count('A')\n    cb = st.count('B')\n    cc = st.count('C')\n    if ca == cb + cc:\n        return 'A'\n    elif cb == cc + ca:\n        return 'B'\n    elif cc == ca + cb:\n        return 'C'\n    else:\n        return 'D'\nt = int(input())\nfor _ in range(t):\n    st = input()\n    ch = find_n2(st)\n    if ch == 'D':\n        print('NO')\n        continue\n    if st[0] == ch and st[-1] == ch:\n        print('NO')\n        continue\n    if not st[0] == ch and (not st[-1] == ch):\n        print('NO')\n        continue\n    if st[0] == ch:\n        if not find_if_regular(1, ch, st):\n            print('NO')\n        else:\n            print('YES')\n    elif not find_if_regular(0, ch, st):\n        print('NO')\n    else:\n        print('YES')", "T = int(input())\n\ndef f(s):\n    A = 0\n    B = 0\n    C = 0\n    if s[0] == s[-1]:\n        return 'NO'\n    for i in s:\n        if i == 'A':\n            A += 1\n        elif i == 'B':\n            B += 1\n        else:\n            C += 1\n    if A + B == C:\n        if s[0] == 'C':\n            o = 'C'\n            e = 'AB'\n        else:\n            o = 'AB'\n            e = 'C'\n        l = []\n        for i in s:\n            if i in o:\n                l.append(1)\n            elif l:\n                l.pop()\n            else:\n                return 'NO'\n        if l:\n            return 'NO'\n        return 'YES'\n    if A + C == B:\n        if s[0] == 'B':\n            o = 'B'\n            e = 'AC'\n        else:\n            o = 'AC'\n            e = 'B'\n        l = []\n        for i in s:\n            if i in o:\n                l.append(1)\n            elif l:\n                l.pop()\n            else:\n                return 'NO'\n        if l:\n            return 'NO'\n        return 'YES'\n    if C + B == A:\n        if s[0] == 'A':\n            o = 'A'\n            e = 'CB'\n        else:\n            o = 'CB'\n            e = 'A'\n        l = []\n        for i in s:\n            if i in o:\n                l.append(1)\n            elif l:\n                l.pop()\n            else:\n                return 'NO'\n        if l:\n            return 'NO'\n        return 'YES'\n    return 'NO'\nfor t in range(T):\n    s = input()\n    print(f(s))", "def matched(s):\n    nesting = 0\n    for c in s:\n        if c == '(':\n            nesting = nesting + 1\n        elif c == ')':\n            nesting = nesting - 1\n        if nesting < 0:\n            return False\n    return nesting == 0\nk = []\nt = int(input())\nfor i in range(t):\n    temp = 0\n    a = input()\n    n = len(a)\n    fir = a[0]\n    las = a[n - 1]\n    if fir == las:\n        k.append('NO')\n    else:\n        b = a.replace(fir, '(')\n        b = b.replace(las, ')')\n        a = [i for i in 'ABC' if i != fir and i != las]\n        unkv = ''.join((str(x) for x in a))\n        if temp == 0:\n            p1 = b.replace(unkv, '(')\n            if matched(p1):\n                k.append('YES')\n                temp += 1\n        if temp == 0:\n            p2 = b.replace(unkv, ')')\n            if matched(p2):\n                k.append('YES')\n                temp += 1\n        if temp == 0:\n            k.append('NO')\nfor i in range(t):\n    print(k[i])", "def fn(s):\n    a = s.count('A')\n    b = s.count('B')\n    c = s.count('C')\n    d = max(a, b, c)\n    if d == a and a == b + c:\n        if s[0] == 'A':\n            ac = 1\n            bc = -1\n            cc = -1\n        else:\n            bc = 1\n            cc = 1\n            ac = -1\n    elif d == b and b == a + c:\n        if s[0] == 'B':\n            ac = -1\n            bc = 1\n            cc = -1\n        else:\n            bc = -1\n            cc = 1\n            ac = 1\n    elif d == c and c == a + b:\n        if s[0] == 'C':\n            ac = -1\n            bc = -1\n            cc = 1\n        else:\n            bc = 1\n            cc = -1\n            ac = 1\n    else:\n        return False\n    count = 0\n    for i in range(len(s)):\n        if count < 0:\n            return False\n        if s[i] == 'A':\n            count += ac\n        elif s[i] == 'B':\n            count += bc\n        else:\n            count += cc\n    if count == 0:\n        return True\n    return False\nt = int(input())\nfor i in range(t):\n    s = input()\n    if fn(s) == True:\n        print('YES')\n    else:\n        print('NO')", "def solve(s):\n    if s[0] == s[-1]:\n        return 'NO'\n    (a, b, c) = (0, 0, 0)\n    for i in s:\n        if i == 'A':\n            a += 1\n        elif i == 'B':\n            b += 1\n        else:\n            c += 1\n    if max(a, b, c) == a:\n        if s[0] == 'A':\n            s = s.replace('A', '(')\n            s = s.replace('B', ')')\n            s = s.replace('C', ')')\n        else:\n            s = s.replace('A', ')')\n            s = s.replace('B', '(')\n            s = s.replace('C', '(')\n    elif max(a, b, c) == b:\n        if s[0] == 'B':\n            s = s.replace('A', ')')\n            s = s.replace('B', '(')\n            s = s.replace('C', ')')\n        else:\n            s = s.replace('A', '(')\n            s = s.replace('B', ')')\n            s = s.replace('C', '(')\n    elif s[0] == 'C':\n        s = s.replace('A', ')')\n        s = s.replace('B', ')')\n        s = s.replace('C', '(')\n    else:\n        s = s.replace('A', '(')\n        s = s.replace('B', '(')\n        s = s.replace('C', ')')\n    l = len(s)\n    while l != 0:\n        s = s.replace('()', '')\n        if len(s) == l:\n            return 'NO'\n        l -= 2\n    return 'YES'\nfor _ in range(int(input())):\n    print(solve(input()))", "tc = int(input())\nfor _ in range(tc):\n    string = input()\n    temp = ['A', 'B', 'C']\n    l = string[0]\n    r = string[-1]\n    if l == r:\n        print('NO')\n    else:\n        temp.remove(l)\n        temp.remove(r)\n        other = temp.pop(0)\n        flag = False\n        cnt = 0\n        for ch in string:\n            if ch == l:\n                cnt += 1\n            elif ch == other:\n                cnt += 1\n            else:\n                cnt -= 1\n            if cnt < 0:\n                break\n        if cnt == 0:\n            flag = True\n        cnt = 0\n        for ch in string:\n            if ch == l:\n                cnt += 1\n            elif ch == other:\n                cnt -= 1\n            else:\n                cnt -= 1\n            if cnt < 0:\n                break\n        if cnt == 0:\n            flag = True\n        if flag:\n            print('YES')\n        else:\n            print('NO')", "def brute(a, b, c, string):\n    result = 0\n    for i in string:\n        if i == 'A':\n            result += a\n        elif i == 'B':\n            result += b\n        else:\n            result += c\n        if result < 0:\n            return False\n    if not result:\n        return True\n    return False\n\ndef main():\n    for _ in range(eval(input())):\n        a = input()\n        if a[0] == a[-1] or len(a) % 2 != 0:\n            print('NO')\n        elif brute(-1, 1, 1, a) or brute(1, -1, 1, a) or brute(1, 1, -1, a) or brute(1, -1, -1, a) or brute(-1, 1, -1, a) or brute(-1, -1, 1, a):\n            print('YES')\n        else:\n            print('NO')\nmain()", "def solve(s):\n    n = len(s)\n    (a, b, c) = (0, 0, 0)\n    for i in range(n):\n        if s[i] == 'A':\n            a += 1\n        elif s[i] == 'B':\n            b += 1\n        else:\n            c += 1\n    if a != b + c and b != a + c and (c != a + b):\n        return 'NO'\n    if s[0] == s[-1]:\n        return 'NO'\n    char = None\n    if s[0] == 'A' and a == max(a, b, c):\n        char = 'A'\n    elif s[0] == 'B' and b == max(a, b, c):\n        char = 'B'\n    elif s[0] == 'C' and c == max(a, b, c):\n        char = 'C'\n    flag = 1\n    if char == None:\n        if s[-1] == 'A' and a == max(a, b, c):\n            char = 'A'\n        elif s[-1] == 'B' and b == max(a, b, c):\n            char = 'B'\n        elif s[-1] == 'C' and c == max(a, b, c):\n            char = 'C'\n        flag = -1\n    count = 0\n    for i in range(n):\n        if s[i] == char:\n            count += flag\n        else:\n            count -= flag\n        if count < 0:\n            return 'NO'\n    if count == 0:\n        return 'YES'\n    else:\n        return 'NO'\nt = int(input())\nfor i in range(t):\n    print(solve(input()))", "def check(s):\n    ans = 0\n    for i in s:\n        if i == '(':\n            ans += 1\n        else:\n            ans -= 1\n        if ans < 0:\n            return False\n    return ans == 0\nfor _ in range(int(input())):\n    ip = input()\n    f = ip[0]\n    l = ip[-1]\n    ip = ip.replace(f, '(').replace(l, ')')\n    r = list({'A', 'B', 'C'} - {f, l})[0]\n    if check(ip.replace(r, '(')) or check(ip.replace(r, ')')):\n        print('YES')\n    else:\n        print('NO')", "def matched(str, k):\n    count = 0\n    for i in str:\n        if i == str[0]:\n            count += 1\n        elif i == str[-1:]:\n            count -= 1\n        elif k == 1:\n            count -= 1\n        else:\n            count += 1\n        if count < 0:\n            return False\n    return count == 0\nn = int(input())\nfor _ in range(n):\n    m = input()\n    if m[0] == m[-1:]:\n        print('NO')\n    elif matched(m, 1):\n        print('YES')\n    elif matched(m, 0):\n        print('YES')\n    else:\n        print('NO')", "def matched(str, k):\n    count = 0\n    for i in str:\n        if i == str[0]:\n            count += 1\n        elif i == str[-1:]:\n            count -= 1\n        elif k == 1:\n            count -= 1\n        else:\n            count += 1\n        if count < 0:\n            return False\n    return count == 0\nn = int(input())\nfor _ in range(n):\n    m = input()\n    if m[0] == m[-1:]:\n        print('NO')\n    elif matched(m, 1):\n        print('YES')\n    elif matched(m, 0):\n        print('YES')\n    else:\n        print('NO')", "def asekina(lin):\n    maccu = 0\n    for _ in lin:\n        if _ == '(':\n            maccu += 1\n        else:\n            maccu -= 1\n        if maccu < 0:\n            return False\n    return maccu == 0\nfor j in range(int(input())):\n    kas = input()\n    biri1 = kas[0]\n    biri2 = kas[-1]\n    kas = kas.replace(biri1, '(').replace(biri2, ')')\n    asik = list({'A', 'B', 'C'} - {biri1, biri2})[0]\n    if asekina(kas.replace(asik, '(')) or asekina(kas.replace(asik, ')')):\n        print('YES')\n    else:\n        print('NO')", "def solve(a):\n    if a[0] == a[-1]:\n        return 'NO'\n    s = a.count(a[0])\n    e = a.count(a[-1])\n    m = len(a) - s - e\n    li = [s, m, e]\n    count1 = 0\n    count2 = 0\n    if li[0] + li[1] == li[2]:\n        for i in a:\n            if i == a[0] or i != a[-1]:\n                count1 += 1\n            else:\n                count2 += 1\n            if count2 > count1:\n                return 'NO'\n    elif li[0] == li[1] + li[2]:\n        for k in a:\n            if k == a[0]:\n                count1 += 1\n            else:\n                count2 += 1\n            if count2 > count1:\n                return 'NO'\n    else:\n        return 'NO'\n    if count2 == count1:\n        return 'YES'\n    else:\n        return 'NO'\nt = int(input())\nfor i in range(t):\n    a = input()\n    print(solve(a))", "def iV(str):\n    o = 0\n    for ii in str:\n        if ii != '(':\n            o -= 1\n        else:\n            o += 1\n        if o < 0:\n            return False\n    return o == 0\nfor i in range(int(input())):\n    ip = input()\n    pelo = ip[0]\n    chhelo = ip[-1]\n    ip = ip.replace(pelo, '(').replace(chhelo, ')')\n    rr = list({'A', 'B', 'C'} - {pelo, chhelo})[0]\n    if iV(ip.replace(rr, '(')) or iV(ip.replace(rr, ')')):\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor count in range(n):\n    s = input()\n    a = s[0]\n    c = s[-1]\n    a1 = 1\n    a2 = 1\n    l = 0\n    for i in s:\n        if i == a:\n            l += 1\n        else:\n            l -= 1\n            if l < 0:\n                a1 = 0\n                break\n    if l != 0:\n        a1 = 0\n    l = 0\n    for i in s:\n        if i == c:\n            l -= 1\n            if l < 0:\n                a1 = 0\n                break\n        else:\n            l += 1\n    if l != 0:\n        a2 = 0\n    if a1 == 1 or a2 == 1:\n        print('YES')\n    else:\n        print('NO')", "trails = int(input())\nanswer_list = []\nfor q in range(trails):\n    leters = input()\n    num1 = 0\n    num2 = 0\n    first = leters[0]\n    last = leters[-1]\n    if first == last:\n        answer_list.append('NO')\n        continue\n    lenth = len(leters)\n    for a in leters:\n        if a == first:\n            num1 += 1\n        if a == last:\n            num2 += 1\n    if abs(num2 - num1) != lenth - (num2 + num1):\n        answer_list.append('NO')\n        continue\n    count = 0\n    problem = False\n    if num1 > num2:\n        other = -1\n    else:\n        other = 1\n    for s in leters:\n        if s == first:\n            count += 1\n        elif s == last:\n            count -= 1\n        else:\n            count += other\n        if count < 0:\n            answer_list.append('NO')\n            problem = True\n            break\n    if problem == False:\n        answer_list.append('YES')\nfor m in answer_list:\n    print(m)", "import sys\n\ndef readInts():\n    return [int(x) for x in sys.stdin.readline().split()]\n\ndef readInt():\n    return int(sys.stdin.readline())\n\ndef solve():\n    s = input()\n    if s[0] == s[-1]:\n        print('NO')\n        return\n    a = s.replace(s[0], '(').replace(s[-1], ')')\n    b = a\n    if 'A' in a:\n        a = a.replace('A', ')')\n    if 'B' in a:\n        a = a.replace('B', ')')\n    if 'C' in a:\n        a = a.replace('C', ')')\n    if 'A' in b:\n        b = b.replace('A', '(')\n    if 'B' in b:\n        b = b.replace('B', '(')\n    if 'C' in b:\n        b = b.replace('C', '(')\n    cnt1 = 0\n    cnt2 = 0\n    for c in a:\n        if c == '(':\n            cnt1 += 1\n        else:\n            cnt1 -= 1\n        if cnt1 < 0:\n            break\n    for c in b:\n        if c == '(':\n            cnt2 += 1\n        else:\n            cnt2 -= 1\n        if cnt2 < 0:\n            break\n    if cnt1 == 0 or cnt2 == 0:\n        print('YES')\n    else:\n        print('NO')\n\ndef main():\n    t = readInt()\n    for _ in range(t):\n        solve()\nmain()", "T = int(input())\nfor _ in range(T):\n    a = input()\n    N = len(a)\n    op = 0\n    cl = 0\n    fact = 0\n    ans = ''\n    if a[0] == a[-1]:\n        ans = 'NO'\n    else:\n        i1 = a.count(a[0])\n        i3 = a.count(a[-1])\n        i2 = N - (i1 + i3)\n        if 2 * i1 == N:\n            for i in a:\n                if i == a[0]:\n                    fact = fact + 1\n                else:\n                    fact = fact - 1\n                    if fact < 0:\n                        ans = 'NO'\n                        break\n            if fact == 0:\n                ans = 'YES'\n            else:\n                ans = 'NO'\n        elif 2 * i3 == N:\n            for i in a:\n                if i != a[-1]:\n                    fact = fact + 1\n                else:\n                    fact = fact - 1\n                    if fact < 0:\n                        ans = 'NO'\n                        break\n            if fact == 0:\n                ans = 'YES'\n            else:\n                ans = 'NO'\n        else:\n            ans = 'NO'\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    a = input()\n    N = len(a)\n    fact1 = 0\n    fact2 = 0\n    ans = ''\n    if a[0] == a[-1]:\n        ans = 'NO'\n    else:\n        for i in a:\n            if i == a[0]:\n                fact1 = fact1 + 1\n            else:\n                fact1 = fact1 - 1\n                if fact1 < 0:\n                    ans = 'NO'\n                    break\n        for i in a:\n            if i != a[-1]:\n                fact2 = fact2 + 1\n            else:\n                fact2 = fact2 - 1\n                if fact2 < 0:\n                    ans = 'NO'\n                    break\n        if fact1 == 0 or fact2 == 0:\n            ans = 'YES'\n        else:\n            ans = 'NO'\n    print(ans)", "def check(s):\n    c = 0\n    for i in s:\n        if i == '(':\n            c += 1\n        if i == ')':\n            c -= 1\n        if c < 0:\n            return False\n    if c == 0:\n        return True\n    else:\n        return False\nT = int(input())\nfor _ in range(T):\n    s = input()\n    a = s.count('A')\n    b = s.count('B')\n    c = s.count('C')\n    if a == b + c:\n        s1 = s.replace('A', '(').replace('B', ')').replace('C', ')')\n        s2 = s.replace('A', ')').replace('B', '(').replace('C', '(')\n    elif b == a + c:\n        s1 = s.replace('A', ')').replace('B', '(').replace('C', ')')\n        s2 = s.replace('A', '(').replace('B', ')').replace('C', '(')\n    elif c == a + b:\n        s1 = s.replace('A', '(').replace('B', '(').replace('C', ')')\n        s2 = s.replace('A', ')').replace('B', ')').replace('C', '(')\n    else:\n        print('NO\\n', end='')\n        continue\n    if check(s1) or check(s2):\n        print('YES\\n', end='')\n    else:\n        print('NO\\n', end='')", "import sys\ninput = sys.stdin.readline\n\ndef check(s):\n    c = 0\n    for i in s:\n        if i == '(':\n            c += 1\n        if i == ')':\n            c -= 1\n        if c < 0:\n            return False\n    if c == 0:\n        return True\n    else:\n        return False\nT = int(input())\nfor _ in range(T):\n    s = input()\n    a = s.count('A')\n    b = s.count('B')\n    c = s.count('C')\n    if a == b + c:\n        s1 = s.replace('A', '(').replace('B', ')').replace('C', ')')\n        s2 = s.replace('A', ')').replace('B', '(').replace('C', '(')\n    elif b == a + c:\n        s1 = s.replace('A', ')').replace('B', '(').replace('C', ')')\n        s2 = s.replace('A', '(').replace('B', ')').replace('C', '(')\n    elif c == a + b:\n        s1 = s.replace('A', '(').replace('B', '(').replace('C', ')')\n        s2 = s.replace('A', ')').replace('B', ')').replace('C', '(')\n    else:\n        sys.stdout.write('NO\\n')\n        continue\n    if check(s1) or check(s2):\n        sys.stdout.write('YES\\n')\n    else:\n        sys.stdout.write('NO\\n')", "def check1(s):\n    c = 0\n    for i in s:\n        if i == '(':\n            c = c + 1\n        elif i == ')':\n            c = c - 1\n        else:\n            c = c + 1\n        if c < 0:\n            return 0\n    if c == 0:\n        return 1\n    else:\n        return 0\n\ndef check2(s):\n    c = 0\n    for i in s:\n        if i == '(':\n            c = c + 1\n        elif i == ')':\n            c = c - 1\n        else:\n            c = c - 1\n        if c < 0:\n            return 0\n    if c == 0:\n        return 1\n    else:\n        return 0\n\ndef solve():\n    s = input()\n    n = len(s)\n    if s[0] == s[-1]:\n        print('NO')\n        return\n    s = s.replace(s[0], '(')\n    s = s.replace(s[-1], ')')\n    f = check1(s)\n    g = check2(s)\n    if f or g:\n        print('YES')\n    else:\n        print('NO')\nfor tetsis in range(int(input())):\n    solve()", "def true(s):\n    if s[0] == s[-1]:\n        return 'NO'\n    else:\n        pixi1 = 0\n        a1 = 1\n        for i in s:\n            if i == s[0]:\n                pixi1 += 1\n            elif i == s[-1]:\n                pixi1 -= 1\n            else:\n                pixi1 -= 1\n            if pixi1 < 0:\n                a1 = 5\n                break\n        pixi2 = 0\n        a2 = 1\n        for i in s:\n            if i == s[0]:\n                pixi2 += 1\n            elif i == s[-1]:\n                pixi2 -= 1\n            else:\n                pixi2 += 1\n            if pixi2 < 0:\n                a2 = 5\n                break\n        if a1 == 1 and pixi1 == 0 or (pixi2 == 0 and a2 == 1):\n            return 'YES'\n        else:\n            return 'NO'\nt = int(input())\nfor i in range(t):\n    s = input()\n    print(true(s))", "import math\n\ndef getint():\n    return [int(i) for i in input().split()]\n\ndef getstr():\n    return [str(i) for i in input().split()]\n\ndef solve():\n    s = input()\n    l = s[0]\n    r = s[-1]\n    res = list({l, r} ^ {'A', 'B', 'C'})[0]\n\n    def check(x):\n        judge = 0\n        for i in range(len(x)):\n            if x[i] == l:\n                judge += 1\n            elif x[i] == r:\n                if judge == 0:\n                    return False\n                else:\n                    judge -= 1\n        if judge == 0:\n            return True\n        else:\n            return False\n    s1 = s.replace(res, l)\n    s2 = s.replace(res, r)\n    if check(s1) or check(s2):\n        print('YES')\n    else:\n        print('NO')\nfor _ in range(int(input())):\n    solve()", "def checkBalancedArray(string, ch):\n    stack = 0\n    for i in string:\n        if stack < 0:\n            return 'NO'\n        if i in ch:\n            stack += 1\n        else:\n            stack -= 1\n    return 'NO' if stack else 'YES'\nfor _ in range(int(input())):\n    s = input()\n    count_A = s.count('A')\n    count_B = s.count('B')\n    count_C = s.count('C')\n    c = s[0]\n    x = None\n    if count_A + count_B == count_C:\n        if c == 'C':\n            x = [c]\n        else:\n            x = ['A', 'B']\n        print(checkBalancedArray(s, x))\n    elif count_B + count_C == count_A:\n        if c == 'A':\n            x = [c]\n        else:\n            x = ['B', 'C']\n        print(checkBalancedArray(s, x))\n    elif count_C + count_A == count_B:\n        if c == 'B':\n            x = [c]\n        else:\n            x = ['C', 'A']\n        print(checkBalancedArray(s, x))\n    else:\n        print('NO')", "def checkBalancedArray(string, ch):\n    stack = 0\n    for i in string:\n        if stack < 0:\n            return 'NO'\n        if i in ch:\n            stack += 1\n        else:\n            stack -= 1\n    return 'NO' if stack else 'YES'\nfor _ in range(int(input())):\n    s = input()\n    count_A = s.count('A')\n    count_B = s.count('B')\n    count_C = s.count('C')\n    c = s[0]\n    if count_A + count_B == count_C:\n        print(checkBalancedArray(s, [['A', 'B'], ['C']][c == 'C']))\n    elif count_B + count_C == count_A:\n        print(checkBalancedArray(s, [['B', 'C'], ['A']][c == 'A']))\n    elif count_C + count_A == count_B:\n        print(checkBalancedArray(s, [['C', 'A'], ['B']][c == 'B']))\n    else:\n        print('NO')", "def checkBalancedArray(string, ch):\n    stack = 0\n    for i in string:\n        if stack < 0:\n            return 'NO'\n        if i in ch:\n            stack += 1\n        else:\n            stack -= 1\n    return 'NO' if stack else 'YES'\nfor _ in range(int(input())):\n    s = input()\n    count_A = s.count('A')\n    count_B = s.count('B')\n    count_C = s.count('C')\n    c = s[0]\n    if count_A + count_B == count_C:\n        print(checkBalancedArray(s, [['A', 'B'], [c]][c == 'C']))\n    elif count_B + count_C == count_A:\n        print(checkBalancedArray(s, [['B', 'C'], [c]][c == 'A']))\n    elif count_C + count_A == count_B:\n        print(checkBalancedArray(s, [['C', 'A'], [c]][c == 'B']))\n    else:\n        print('NO')", "def solve():\n    s = input()\n    ca = s.count('A')\n    cb = s.count('B')\n    cc = s.count('C')\n    t = [ca, cb, cc]\n    t.sort()\n    if t[0] + t[1] != t[2]:\n        print('NO')\n        return\n    (cha, chb, chc) = ('', '', '')\n    mc = max(ca, cb, cc)\n    if ca == mc:\n        t = []\n        st = 0\n        for c in s:\n            if c == 'A':\n                st += 1\n            else:\n                st -= 1\n            t.append(st)\n        if all((x >= 0 for x in t)) or all((x <= 0 for x in t)):\n            print('YES')\n            return\n        print('NO')\n        return\n    if cb == mc:\n        t = []\n        st = 0\n        for c in s:\n            if c == 'B':\n                st += 1\n            else:\n                st -= 1\n            t.append(st)\n        if all((x >= 0 for x in t)) or all((x <= 0 for x in t)):\n            print('YES')\n            return\n        print('NO')\n        return\n    if cc == mc:\n        t = []\n        st = 0\n        for c in s:\n            if c == 'C':\n                st += 1\n            else:\n                st -= 1\n            t.append(st)\n        if all((x >= 0 for x in t)) or all((x <= 0 for x in t)):\n            print('YES')\n            return\n        print('NO')\n        return\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    s = input()\n    if s[0] == s[-1] or (s.count(s[0]) != len(s) // 2 and s.count(s[-1]) != len(s) // 2):\n        print('NO')\n    else:\n        a = s.count(s[0])\n        b = s.count(s[-1])\n        ff = ss = 0\n        flag = True\n        if a == len(s) // 2:\n            for i in s:\n                if i == s[0]:\n                    ff += 1\n                else:\n                    ss += 1\n                if ss > ff:\n                    print('NO')\n                    flag = False\n                    break\n            if flag:\n                print('YES')\n        else:\n            for i in s:\n                if i != s[-1]:\n                    ff += 1\n                else:\n                    ss += 1\n                if ss > ff:\n                    print('NO')\n                    flag = False\n                    break\n            if flag:\n                print('YES')", "def inp():\n    return int(input())\nfor tc in range(inp()):\n    b = input()\n    open = b[0]\n    close = b[-1]\n    if open == close:\n        print('NO')\n        continue\n    for unkvalue in (-1, 1):\n        count = 0\n        for c in b:\n            if c == open:\n                count += 1\n            elif c == close:\n                count -= 1\n            else:\n                count += unkvalue\n            if count < 0:\n                break\n        if count == 0:\n            print('YES')\n            break\n    if count != 0:\n        print('NO')", "def judge():\n    str = input()\n    arr = [0, 0, 0]\n    x = ord(str[0]) - ord('A')\n    y = ord(str[-1]) - ord('A')\n    if x == y:\n        return False\n    arr[x] = 1\n    arr[y] = -1\n    if str.count(chr(65 + x)) == len(str) / 2:\n        arr[3 ^ x ^ y] = -1\n    else:\n        arr[3 ^ x ^ y] = 1\n    c = 0\n    for ch in str:\n        c += arr[ord(ch) - 65]\n        if c < 0:\n            return False\n    return c == 0\nt = int(input())\nwhile t > 0:\n    t -= 1\n    if judge():\n        print('YES')\n    else:\n        print('NO')", "def bracketTest(s):\n    if s[0] == s[-1]:\n        return 'NO'\n    lis = list(s)\n    f = s[0]\n    l = s[-1]\n    for i in range(len(lis)):\n        if lis[i] == f:\n            lis[i] = 1\n        elif lis[i] == l:\n            lis[i] = -1\n        else:\n            lis[i] = 'k'\n    arr2 = []\n    arr2.extend(lis)\n    count = 0\n    for i in range(len(lis)):\n        if lis[i] == 'k':\n            lis[i] = 1\n        count += lis[i]\n        if count < 0:\n            count = -1\n            break\n    if count == 0:\n        return 'YES'\n    else:\n        pass\n    count2 = 0\n    for i in range(len(arr2)):\n        if arr2[i] == 'k':\n            arr2[i] = -1\n        count2 += arr2[i]\n        if count2 < 0:\n            return 'NO'\n    if count2 == 0:\n        return 'YES'\n    else:\n        return 'NO'\nn = int(input())\nfor i in range(n):\n    s = input()\n    print(bracketTest(s))", "def main():\n    cases = int(input())\n    newtest = ''\n    for i in range(cases):\n        newtest = input()\n        if test1(newtest) == True:\n            print('YES')\n        else:\n            print('NO')\n\ndef test1(newtest):\n    x = ''\n    p = newtest[0]\n    m = newtest[-1]\n    xT = 1\n    score = 0\n    numsC = {'A': 0, 'B': 0, 'C': 0, 'U': 0}\n    for i in newtest:\n        numsC[i] += 1\n        if i != p and i != m:\n            x = i\n    if p == m:\n        return False\n    if x == '':\n        x = 'U'\n    if abs(numsC[p] - numsC[m]) != numsC[x]:\n        return False\n    if numsC[p] > numsC[m]:\n        xT = -1\n    for j in newtest:\n        if j == p:\n            score += 1\n        elif j == m:\n            score -= 1\n        else:\n            score += xT\n        if score < 0:\n            return False\n    return True\nmain()", "t = int(input())\nfor _ in range(t):\n    str_abc = input()\n    cnt = list()\n    cnt.append([str_abc.count('A'), 'A'])\n    cnt.append([str_abc.count('B'), 'B'])\n    cnt.append([str_abc.count('C'), 'C'])\n    cnt.sort()\n    if cnt[-1][0] == cnt[0][0] + cnt[1][0]:\n        ans = 0\n        flag = True\n        str_abc = str_abc.replace(cnt[-1][1], '(').replace(cnt[0][1], ')').replace(cnt[1][1], ')')\n        for ch in str_abc:\n            if str_abc[0] == ch:\n                ans += 1\n            else:\n                ans -= 1\n            if ans < 0:\n                flag = False\n                break\n        print('YES' if flag else 'NO')\n    else:\n        print('NO')", "t = int(input())\n\ndef solve():\n    string = input()\n    (start, end) = (string[0], string[-1])\n    middle = ({'A', 'B', 'C'} - {start, end}).pop()\n    if start == end:\n        return False\n    count = {'A': 0, 'B': 0, 'C': 0}\n    for char in string:\n        count[char] += 1\n    if abs(count[start] - count[end]) != count[middle]:\n        return False\n    if count[start] > count[end]:\n        middle_type = -1\n    else:\n        middle_type = 1\n    types = {start: 1, end: -1, middle: middle_type}\n    state = 0\n    for char in string:\n        state += types[char]\n        if state < 0:\n            return False\n    return True\nfor _ in range(t):\n    if solve():\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    s = str(input())\n    ob = s[0]\n    cb = s[-1]\n    r = 0\n    for i in s:\n        if r < 0:\n            print('NO')\n            break\n        elif i == ob:\n            r += 1\n        elif i == cb:\n            r -= 1\n        elif s.count(ob) > s.count(cb):\n            r -= 1\n        else:\n            r += 1\n    if r == 0:\n        print('YES')\n    elif r > 0:\n        print('NO')", "(OPEN, CLOSE) = ('(', ')')\n\ndef validate(brackets: str) -> bool:\n\n    def check(brackets: str) -> bool:\n        stack = []\n        for item in brackets:\n            if item == CLOSE:\n                if stack:\n                    stack.pop()\n                    continue\n                return False\n            stack.append(item)\n        return not stack\n    superset = {'A', 'B', 'C'}\n    (start, end) = (brackets[0], brackets[-1])\n    middle = (superset - {start} - {end}).pop()\n    brackets = brackets.replace(start, OPEN).replace(end, CLOSE)\n    return check(brackets.replace(middle, OPEN)) or check(brackets.replace(middle, CLOSE))\n\ndef read_input(filename: str=None) -> None:\n    from sys import stdin\n    stdin = open(filename) if filename else stdin\n    cases = int(stdin.readline())\n    while cases:\n        cases = cases - 1\n        brackets = stdin.readline().strip()\n        print('YES') if validate(brackets) else print('NO')\n\ndef main():\n    read_input()\nmain()", "def valid(arr):\n    cnt = 0\n    for i in range(len(arr)):\n        if cnt < 0:\n            return False\n        if arr[i] == '(':\n            cnt += 1\n        else:\n            cnt -= 1\n    return cnt == 0\nt = int(input())\nfor i in range(t):\n    a = input()\n    l = a[0]\n    r = a[-1]\n    last = list(set(['A', 'B', 'C']) - set([l, r]))\n    el = last[0]\n    a = a.replace(l, '(')\n    a = a.replace(r, ')')\n    if valid(a.replace(el, '(')) or valid(a.replace(el, ')')):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    li = list(input())\n    tmp = []\n    n = len(li)\n    x = li[0]\n    y = li[-1]\n    x_cnt = li.count(x)\n    y_cnt = li.count(y)\n    z_cnt = n - (x_cnt + y_cnt)\n    if li[0] == li[-1]:\n        print('NO')\n    elif x_cnt == y_cnt and z_cnt != 0:\n        print('NO')\n    elif x_cnt > y_cnt and y_cnt + z_cnt != x_cnt:\n        print('NO')\n    elif x_cnt < y_cnt and x_cnt + z_cnt != y_cnt:\n        print('NO')\n    elif x_cnt > y_cnt:\n        for i in li:\n            if i == x:\n                tmp.append(1)\n            elif i == y:\n                if tmp == []:\n                    tmp.append(1)\n                    break\n                elif tmp[-1] == 1:\n                    tmp.pop()\n            elif tmp == []:\n                tmp.append(1)\n                break\n            elif tmp[-1] == 1:\n                tmp.pop()\n        if tmp == []:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        for i in li:\n            if i == x:\n                tmp.append(1)\n            elif i == y:\n                if tmp == []:\n                    tmp.append(1)\n                    break\n                elif tmp[-1] == 1:\n                    tmp.pop()\n            else:\n                tmp.append(1)\n        if tmp == []:\n            print('YES')\n        else:\n            print('NO')", "def check(x, a, b, e, c, f):\n    if e + c == f:\n        for j in l:\n            if j == a:\n                x += 1\n            else:\n                x -= 1\n            if x < 0:\n                return 'NO'\n        return 'YES'\n    elif f + c == e:\n        for j in l:\n            if j != b:\n                x += 1\n            else:\n                x -= 1\n            if x < 0:\n                return 'NO'\n        return 'YES'\n    else:\n        return 'NO'\nfor i in range(int(input())):\n    l = list(input())\n    a = l[0]\n    b = l[-1]\n    x = 0\n    f = l.count(a)\n    e = l.count(b)\n    le = len(l)\n    c = le - (f + e)\n    if l[0] != l[-1]:\n        print(check(x, a, b, e, c, f))\n    else:\n        print('NO')", "f = int(input())\nfor i in range(f):\n    li = input()\n    if li[0] == li[-1]:\n        print('NO')\n        continue\n    x = 0\n    y = 0\n    z = 0\n    a1 = li[0]\n    a2 = li[-1]\n    open1 = 0\n    close1 = 0\n    summ = 0\n    for i in range(len(li)):\n        if li[i] == a1:\n            open1 += 1\n        elif li[i] == a2:\n            close1 += 1\n        else:\n            summ += 1\n    c1 = 0\n    c2 = 0\n    if open1 + summ == close1:\n        for i in range(len(li)):\n            if li[i] == a2:\n                c2 += 1\n            else:\n                c1 += 1\n            if c2 > c1:\n                break\n    elif open1 == summ + close1:\n        for i in range(len(li)):\n            if li[i] == a1:\n                c1 += 1\n            else:\n                c2 += 1\n            if c2 > c1:\n                break\n    else:\n        print('NO')\n        continue\n    if c2 > c1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\n\ndef prueba(letras):\n    suma = 0\n    for l in letras:\n        if l == '(':\n            suma += 1\n        else:\n            suma -= 1\n        if suma < 0:\n            return 'NO'\n    if suma == 0:\n        return 'YES'\n    else:\n        return 'NO'\n\ndef abc(letras):\n    if letras[0] == letras[-1]:\n        return 'NO'\n    else:\n        lista = letras\n        lista = lista.replace(lista[0], '(').replace(lista[-1], ')')\n        if 'A' in lista or 'B' in lista or 'C' in lista:\n            if lista.count('(') - lista.count(')') > 0:\n                return prueba(lista.replace('A', ')').replace('B', ')').replace('C', ')'))\n            elif lista.count('(') - lista.count(')') < 0:\n                return prueba(lista.replace('A', '(').replace('B', '(').replace('C', '('))\n            else:\n                return 'NO'\n        else:\n            return prueba(lista)\nfor num in range(t):\n    letras = input()\n    print(abc(letras))", "def solve():\n    string = input()\n    if string[0] == string[-1]:\n        return 'NO'\n    first_char = string[0]\n    last_char = string[-1]\n    ans = 0\n    for i in string:\n        if i == first_char or i != last_char:\n            ans += 1\n        else:\n            ans -= 1\n            if ans < 0:\n                return 'NO'\n    if ans == 0:\n        return 'YES'\n    ans = 0\n    for i in string:\n        if i == last_char or i != first_char:\n            ans -= 1\n            if ans < 0:\n                return 'NO'\n        else:\n            ans += 1\n    if ans == 0:\n        return 'YES'\n    else:\n        return 'NO'\nt = int(input())\nfor i in range(t):\n    print(solve())", "for _ in range(int(input())):\n    string = input()\n    char1 = string[0]\n    char2 = string[-1]\n    char1cnt = string.count(char1)\n    char2cnt = string.count(char2)\n    if char1 == 'A' and char2 == 'B' or (char1 == 'B' and char2 == 'A'):\n        char3 = 'C'\n    elif char1 == 'A' and char2 == 'C' or (char1 == 'C' and char2 == 'A'):\n        char3 = 'B'\n    else:\n        char3 = 'A'\n    char3cnt = string.count(char3)\n    if char1 == char2:\n        print('NO')\n    elif char1cnt == char2cnt and char3cnt != 0:\n        print('NO')\n    elif char1cnt + char3cnt != char2cnt and char1cnt != char2cnt + char3cnt:\n        print('NO')\n    elif char1cnt + char3cnt == char2cnt:\n        char13counter = 0\n        char2counter = 0\n        for i in range(len(string)):\n            if string[i] == char1 or string[i] == char3:\n                char13counter += 1\n            else:\n                char2counter += 1\n            if char2counter > char13counter:\n                print('NO')\n                break\n        else:\n            print('YES')\n    elif char1cnt == char2cnt + char3cnt:\n        char23counter = 0\n        char1counter = 0\n        for i in range(len(string)):\n            if string[i] == char3 or string[i] == char2:\n                char23counter += 1\n            else:\n                char1counter += 1\n            if char23counter > char1counter:\n                print('NO')\n                break\n        else:\n            print('YES')", "for _ in range(int(input())):\n    s = input()\n    d = dict()\n    a = s.count('A')\n    b = s.count('B')\n    c = s.count('C')\n    z = max(a, b, c)\n    b1 = True\n    if z != len(s) - z or s[0] == s[-1]:\n        print('NO')\n    else:\n        d[s[0]] = 1\n        d[s[-1]] = -1\n        cnt = 0\n        if s.count(s[0]) == z:\n            for i in 'ABC':\n                if i not in d:\n                    d[i] = -1\n            for i in s:\n                cnt += d[i]\n                if cnt < 0:\n                    b1 = False\n                    break\n            if cnt:\n                b1 = False\n        elif s.count(s[-1]) == z:\n            for i in 'ABC':\n                if i not in d:\n                    d[i] = 1\n            for i in s:\n                cnt += d[i]\n                if cnt < 0:\n                    b1 = False\n                    break\n            if cnt:\n                b1 = False\n        else:\n            b1 = False\n        if b1:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor _ in range(t):\n    a = input()\n    ok = False\n    for r in (('A', 'B', 'C'), ('A', 'C', 'B'), ('B', 'C', 'A')):\n        _a = a.replace(*r[:-1])\n        for p in (r[1:], r[2:0:-1]):\n            brackets_count = 0\n            __a = _a.replace(p[0], '(')\n            __a = __a.replace(p[1], ')')\n            for c in __a:\n                if c == '(':\n                    brackets_count += 1\n                else:\n                    brackets_count -= 1\n                    if brackets_count < 0:\n                        break\n            if brackets_count == 0:\n                ok = True\n                break\n        if ok:\n            break\n    print('YES' if ok else 'NO')", "for _ in range(int(input())):\n    s = input()\n    o = s[0]\n    c = s[-1]\n    f = 1\n    r = -1\n    ss = 1\n    if o == c:\n        ss = 0\n    if ss == 0:\n        print('NO')\n    else:\n        j = 1\n        n = len(s)\n        oo = 0\n        for i in range(n):\n            if s[i] == o:\n                oo += 1\n            else:\n                oo -= 1\n            if oo < 0:\n                f = 0\n                break\n        if oo != 0:\n            f = 0\n        if f:\n            print('YES')\n        else:\n            f = 1\n            oo = 0\n            for i in range(n):\n                if s[i] == c:\n                    oo -= 1\n                else:\n                    oo += 1\n                if oo < 0:\n                    f = 0\n                    break\n            if oo != 0:\n                f = 0\n            if f:\n                print('YES')\n            else:\n                print('NO')", "f = int(input())\ntr = 'YES'\nmas = []\nfor i in range(f):\n    tr = 'YES'\n    strok = input()\n    a = strok[0]\n    b = strok[-1]\n    c = ''\n    ll = 0\n    if (a == 'A' or a == 'B') and (b == 'A' or b == 'B'):\n        c = 'C'\n    if (a == 'C' or a == 'B') and (b == 'C' or b == 'B'):\n        c = 'A'\n    if (a == 'A' or a == 'C') and (b == 'A' or b == 'C'):\n        c = 'B'\n    if strok.count(a) > strok.count(b):\n        b = b + c\n    else:\n        a = a + c\n    for i in range(len(strok)):\n        if strok[i] in a:\n            ll += 1\n        else:\n            ll -= 1\n        if ll < 0:\n            tr = 'NO'\n            break\n    if ll != 0:\n        tr = 'NO'\n    mas.append(tr)\nfor i in mas:\n    print(i)", "import sys\ninput = sys.stdin.readline\n\ndef isValid(a: str, b: str):\n    n = len(a)\n    for i in range(n):\n        for j in range(n):\n            if a[i] == a[j] and b[i] != b[j]:\n                return False\n    return True\n\ndef valPar(p):\n    stack = []\n    for b in p:\n        if b == '(':\n            stack += (b,)\n        elif stack:\n            stack.pop()\n        else:\n            return False\n    return len(stack) == 0\nfor _ in range(int(input())):\n    s = str(input()).strip()\n    (l, r) = ('(', ')')\n    llr = s.replace('A', l).replace('B', l).replace('C', r)\n    lrl = s.replace('A', l).replace('B', r).replace('C', l)\n    rll = s.replace('A', r).replace('B', l).replace('C', l)\n    rrl = s.replace('A', r).replace('B', r).replace('C', l)\n    rlr = s.replace('A', r).replace('B', l).replace('C', r)\n    lrr = s.replace('A', l).replace('B', r).replace('C', r)\n    pos = [llr, lrl, rll, rrl, rlr, lrr]\n    for c in pos:\n        if valPar(c):\n            print('YES')\n            break\n    else:\n        print('NO')"]