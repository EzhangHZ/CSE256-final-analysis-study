["for _ in range(int(input())):\n    length = int(input())\n    numbers = input().split()\n    result = ''\n    if length & 1:\n        while len(numbers) != 1:\n            result += numbers[0] + ' ' + numbers[-1] + ' '\n            del numbers[0]\n            del numbers[-1]\n        print(result + numbers[0])\n    else:\n        while len(numbers) != 0:\n            result += numbers[0] + ' ' + numbers[-1] + ' '\n            del numbers[0]\n            del numbers[-1]\n        print(result)", "n = int(input())\nfor x in range(n):\n    ans = ''\n    x = input()\n    l = ['0'] + input().split()\n    t = int(len(l) / 2)\n    if len(l) % 2 == 0:\n        for x in range(1, t):\n            ans += l[x] + ' ' + l[-x] + ' '\n        ans += l[t]\n        print(ans)\n    elif len(l) % 2 != 0:\n        for x in range(1, t + 1):\n            ans += l[x] + ' ' + l[-x] + ' '\n        print(ans.strip())", "def solve():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        m = input().split()\n        ans = []\n        l = 0\n        r = n - 1\n        while l < r:\n            ans.append(m[l])\n            ans.append(m[r])\n            l += 1\n            r -= 1\n        if l == r:\n            ans.append(m[l])\n        print(' '.join(ans))\nsolve()", "import sys\n\ndef favSequence(sequence):\n    ans = []\n    (left, right) = (0, len(sequence) - 1)\n    leftTurn = True\n    while left <= right:\n        if leftTurn:\n            ans.append(sequence[left])\n            left += 1\n        else:\n            ans.append(sequence[right])\n            right -= 1\n        leftTurn = not leftTurn\n    return ans\ncasos = int(sys.stdin.readline())\nfor i in range(casos):\n    valores = sys.stdin.readline()\n    line = sys.stdin.readline().rstrip('\\n').split(' ')\n    ans = favSequence(line)\n    sys.stdout.write(' '.join(ans) + '\\n')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    old = list(map(int, input().split()))\n    new = []\n    i = 0\n    for i in range(n):\n        if i % 2 == 0:\n            new.append(old.pop(0))\n        else:\n            new.append(old.pop())\n    print(' '.join(map(str, new)))", "import sys\n\ndef seqn(arr):\n    ans = []\n    l = 0\n    r = len(arr) - 1\n    turn = 0\n    while l <= r:\n        if turn == 0:\n            ans.append(arr[l])\n            l += 1\n            turn = 1\n        else:\n            ans.append(arr[r])\n            r -= 1\n            turn = 0\n    return ans\ncases = int(sys.stdin.readline())\nfor i in range(cases):\n    numCase = sys.stdin.readline()\n    line = map(int, sys.stdin.readline().split(' '))\n    ans = seqn(list(line))\n    print(' '.join(map(str, ans)))", "import sys\n\ndef polySecuence(arr):\n    secuen = []\n    final = ''\n    right = len(arr) - 1\n    left = 0\n    while left < right:\n        secuen.append(arr[left])\n        secuen.append(arr[right])\n        left += 1\n        right -= 1\n    if len(arr) % 2 != 0:\n        secuen.append(arr[left])\n    return ' '.join(secuen)\ncasos = int(sys.stdin.readline())\nfor i in range(casos):\n    numCase = sys.stdin.readline()\n    line = sys.stdin.readline().rstrip('\\n').split(' ')\n    resultado = polySecuence(line)\n    sys.stdout.write(str(resultado) + '\\n')", "from math import ceil\n\ndef solution(list):\n    originalList = []\n    i = 0\n    j = len(list) - 1\n    string = ''\n    for x in range(0, ceil(len(list) / 2)):\n        if j != i:\n            originalList.append(list[i])\n            originalList.append(list[j])\n            i += 1\n            j -= 1\n        else:\n            originalList.append(list[j])\n    for i in originalList:\n        string += i + ' '\n    print(string)\ntests = int(input())\nfor x in range(tests):\n    n = int(input())\n    cards = list(input().split())\n    solution(cards)", "n = int(input())\nfor i in range(n):\n    k = int(input())\n    li = input().split(' ')\n    res = li[0]\n    l = 1\n    r = k - 1\n    while l < r:\n        res += ' ' + li[r]\n        res += ' ' + li[l]\n        l += 1\n        r -= 1\n    if l == r:\n        res += ' ' + li[l]\n    print(res)", "def func(n):\n    for _ in range(n):\n        k = []\n        int(input())\n        m = list(input().split())\n        if len(m) % 2 != 0:\n            for _ in range(len(m) // 2):\n                k.append(m[0])\n                m.pop(0)\n                k.append(m[-1])\n                m.pop(-1)\n            k.append(m[0])\n            m.pop(0)\n        elif len(m) % 2 == 0:\n            for _ in range(len(m) // 2):\n                k.append(m[0])\n                m.pop(0)\n                k.append(m[-1])\n                m.pop(-1)\n        k_list.append(k)\n    for i in k_list:\n        print(' '.join(i))\nk_list = []\nfunc(int(input()))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    old = list(map(int, input().split()))\n    new = []\n    i = 0\n    for i in range(n):\n        if i % 2 == 0:\n            new.append(old.pop(0))\n        else:\n            new.append(old.pop())\n    print(' '.join(map(str, new)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input().split()\n    if len(a) == 1:\n        print(a[0])\n    else:\n        l1 = a[:n - n // 2]\n        l2 = a[-(n // 2):]\n        l2 = l2[::-1]\n        x = ''\n        for j in range(len(l1)):\n            x += l1[j] + ' '\n            try:\n                x += l2[j] + ' '\n            except:\n                pass\n        print(x)", "t = int(input())\nfor i in range(t):\n    l = int(input())\n    ina = input().split()\n    t = []\n    for ind in range(l):\n        if ind % 2:\n            t.append(ina[-((ind + 1) // 2)])\n        else:\n            t.append(ina[ind // 2])\n    print(' '.join(t))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = [str(item) for item in input().split(' ')]\n    m = []\n    for j in range(int(n / 2)):\n        m.append(x[j])\n        m.append(x[n - j - 1])\n    if n % 2 != 0:\n        m.append(x[int((n - 1) / 2)])\n    print(f\"{' '.join(m)}\")", "for _ in range(int(input())):\n    n = int(input())\n    b = list(input().split())\n    (s, i) = ('', 0)\n    while b:\n        s += ' ' + b.pop(i)\n        i = 0 if i else -1\n    print(s[1:])", "for i in range(int(input())):\n    seq_len = int(input())\n    seq = input().split()\n    restored_seq = [seq[i] + ' ' + seq[-i - 1] for i in range(seq_len // 2)]\n    if seq_len % 2 == 1:\n        restored_seq.append(seq[seq_len // 2])\n    print(' '.join(restored_seq))", "def ordenar(lista, n):\n    c = 1\n    i = 0\n    j = n - 1\n    policarp = []\n    if n == 1:\n        policarp.append(lista[0])\n        return policarp\n    while len(policarp) < n:\n        if c == 3:\n            c = 1\n        if c % 2 == 1:\n            policarp.append(lista[i])\n            i += 1\n            c += 1\n        elif c % 2 == 0:\n            policarp.append(lista[j])\n            j -= 1\n            c += 1\n    return policarp\n\ndef main():\n    t = int(input())\n    c = 0\n    string = ''\n    resultados = []\n    while c < t:\n        c += 1\n        n = int(input())\n        lista = input()\n        lista = lista.split()\n        result = ordenar(lista, n)\n        for i in result:\n            string += str(i) + ' '\n        string += '\\n'\n    string = string[0:-1]\n    print(string)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    array = input().split()\n    answer = [None for _ in range(n)]\n    l = 0\n    r = n - 1\n    for i in range(n):\n        if not i % 2:\n            answer[i] = array[l]\n            l += 1\n        else:\n            answer[i] = array[r]\n            r -= 1\n    print(' '.join(answer))", "def unravel(length, seq):\n    result = []\n    left = 0\n    right = length - 1\n    while left <= right:\n        if left == right:\n            result.append(seq[left])\n            return result\n        result.extend([seq[left], seq[right]])\n        left += 1\n        right -= 1\n    return result\nnum_cases = int(input())\nfor case in range(num_cases):\n    curr_length = int(input())\n    curr_seq = list(map(int, input().split()))\n    print(' '.join((str(e) for e in unravel(curr_length, curr_seq))))", "for _ in range(int(input())):\n    n = int(input())\n    a = input().split()\n    ans = []\n    half = n // 2\n    for i in range(half):\n        ans.append(a[i])\n        ans.append(a[n - 1 - i])\n    if n % 2 != 0:\n        ans.append(a[half])\n    print(' '.join(ans))", "n = int(input(''))\nfor i in range(n):\n    input('')\n    temp = input('').split(' ')\n    result = ''\n    if len(temp) % 2 == 0:\n        for j in range(len(temp)):\n            if j == len(temp) // 2:\n                break\n            result += temp[j] + ' '\n            result += temp[len(temp) - j - 1] + ' '\n    else:\n        for j in range(len(temp)):\n            result += temp[j] + ' '\n            if j == len(temp) // 2:\n                break\n            result += temp[len(temp) - j - 1] + ' '\n    if len(temp) == 1:\n        print(temp[0])\n    elif len(temp) % 2 == 0:\n        print(result[:-1])\n    else:\n        print(result)", "n = int(input())\nfor i in range(n):\n    l = int(input())\n    arr = input().split()\n    s = []\n    for x in range(l):\n        if len(arr) == 0:\n            break\n        s.append(arr[0])\n        arr.pop(0)\n        if len(arr) == 0:\n            break\n        s.append(arr[-1])\n        arr.pop(-1)\n    print(' '.join(s))", "n = int(input())\nwhile n > 0:\n    z = int(input())\n    x = input().split(' ')\n    new = ['0'] * z\n    new[0] = int(x[0])\n    count = 0\n    for i in range(0, z, 2):\n        new[i] = x[count]\n        count += 1\n    count = z - 1\n    for i in range(1, z, 2):\n        new[i] = x[count]\n        count -= 1\n    print(' '.join(new))\n    n -= 1", "n = int(input())\nwhile n > 0:\n    z = int(input())\n    x = input().split(' ')\n    new = ['0'] * z\n    new[0] = int(x[0])\n    count = 0\n    for i in range(0, z, 2):\n        new[i] = x[count]\n        count += 1\n    count = z - 1\n    for i in range(1, z, 2):\n        new[i] = x[count]\n        count -= 1\n    print(' '.join(new))\n    n -= 1", "t = int(input())\nfor turn in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    for i in range(n):\n        try:\n            q = a.pop(0)\n            b.append(q)\n        except:\n            break\n        try:\n            q = a.pop(-1)\n            b.append(q)\n        except:\n            break\n    print(' '.join(map(str, b)))", "n = int(input())\nwhile n:\n    n -= 1\n    l = int(input())\n    arr = input().split()\n    t = []\n    i = 0\n    j = l - 1\n    while i < j:\n        t.append(arr[i])\n        t.append(arr[j])\n        i += 1\n        j -= 1\n    if l % 2:\n        t.append(arr[l // 2])\n    print(' '.join(t))", "for _ in range(int(input())):\n    input()\n    a = input().split()\n    l = []\n    for i in range(len(a) // 2):\n        l.extend([a[i], a[len(a) - 1 - i]])\n    if len(a) % 2 != 0:\n        l.append(a[int(len(a) / 2)])\n    print(' '.join(l))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(input().split())\n    left = 0\n    right = n - 1\n    ans = []\n    while left <= right:\n        if left == right:\n            ans.append(arr[left])\n            break\n        else:\n            ans.append(arr[left])\n            ans.append(arr[right])\n            left += 1\n            right -= 1\n    print(' '.join(ans))", "t = eval(input())\nfor i in range(t):\n    n = eval(input())\n    input_list = input().split(' ')\n    output_list = []\n    p = 0\n    q = n - 1\n    for j in range(1, n + 1):\n        if j % 2 == 1:\n            output_list.append(input_list[p])\n            p += 1\n        else:\n            output_list.append(input_list[q])\n            q -= 1\n    print(' '.join(output_list))", "def favourite_sequence(n, a):\n    result = []\n    i = 0\n    j = n - 1\n    while i <= j:\n        if i < j:\n            result.append(a[i])\n            result.append(a[j])\n            i += 1\n            j -= 1\n        else:\n            result.append(a[i])\n            i += 1\n    return result\nn_test_cases = int(input())\nfor i in range(n_test_cases):\n    n = int(input())\n    my_list = [int(f) for f in input().split()]\n    res = favourite_sequence(n, my_list)\n    print(' '.join([str(f) for f in res]))", "import math\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(str, input().split()))\nx = inp()\nfor _ in range(x):\n    lis = []\n    n = inp()\n    s = inlt()\n    t = len(s)\n    right = len(s) - 1\n    for left in range(len(s) // 2):\n        lis.append(s[left])\n        lis.append(s[right])\n        right -= 1\n        if left > right:\n            break\n    if len(s) % 2 != 0:\n        lis.append(s[len(s) // 2])\n    result = ' '.join(lis)\n    print(result)", "for _ in range(int(input())):\n    length = input()\n    numbers = input().split()\n    result = ''\n    while len(numbers) != 1 and len(numbers) != 0:\n        result += numbers[0] + ' ' + numbers[-1] + ' '\n        del numbers[0]\n        del numbers[-1]\n    if len(numbers) & 1:\n        print(result + numbers[0])\n    else:\n        print(result)", "for i in range(int(input())):\n    n = int(input())\n    a = input().split()\n    b = []\n    if n % 2 == 0:\n        for i in range(n // 2):\n            b.append(a[i] + ' ' + a[-i - 1])\n        print(' '.join(b))\n    else:\n        for i in range(n // 2):\n            b.append(a[i] + ' ' + a[-i - 1])\n        b.append(a[n // 2])\n        print(' '.join(b))", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    b = input().split(' ')\n    result = []\n    central = a // 2\n    for j in range(central):\n        result.append(b[j])\n        result.append(b[-j - 1])\n    if a % 2 == 1:\n        result.append(b[central])\n    print(' '.join(result))", "from itertools import islice, cycle, compress, tee, zip_longest\nfrom sys import stdin\n\ndef solve(x):\n    n = len(x)\n    y = tee(map(lambda a: a.strip(), x), 2)\n    return ' '.join(list(map(lambda a: a[0] + ' ' + a[1], zip_longest(islice(y[0], n // 2 + n % 2), reversed(list(islice(y[1], n // 2 + n % 2, None))), fillvalue=''))))\nv = list(map(lambda x: x.split(' '), compress(islice(stdin.readlines(), 1, None), cycle([0, 1]))))\nprint('\\n'.join(list(map(solve, v))))", "import sys\n\ndef favSequence(sequence):\n    ans = []\n    (left, right) = (0, len(sequence) - 1)\n    leftTurn = True\n    while left <= right:\n        if leftTurn:\n            ans.append(sequence[left])\n            left += 1\n        else:\n            ans.append(sequence[right])\n            right -= 1\n        leftTurn = not leftTurn\n    return ans\ncasos = int(sys.stdin.readline())\nfor i in range(casos):\n    valores = sys.stdin.readline()\n    line = sys.stdin.readline().rstrip('\\n').split(' ')\n    ans = favSequence(line)\n    sys.stdout.write(' '.join(ans) + '\\n')", "def w(n, line):\n    first = line[:n // 2 + 1][::-1]\n    second = line[n // 2:]\n    total = []\n    for i in range(n):\n        if i % 2 == 0:\n            total.append(first.pop())\n        else:\n            total.append(second.pop())\n    ans = ' '.join(map(str, total))\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    line = list(map(int, input().split()))\n    print(w(n, line))", "number_of_testcase = int(input())\nresult = [''] * number_of_testcase\nfor i in range(number_of_testcase):\n    length = int(input())\n    tmp = [0] * length\n    arr = list(map(int, input().split()))\n    low = 0\n    high = length - 1\n    left_or_right = 0\n    for idx in range(len(tmp)):\n        if left_or_right == 0:\n            tmp[idx] = arr[low]\n            low += 1\n            left_or_right = 1\n        else:\n            tmp[idx] = arr[high]\n            high -= 1\n            left_or_right = 0\n    result[i] = ' '.join((str(e) for e in tmp))\nfor line in result:\n    print(line)", "def solve(n, b):\n    da = 1\n    ans = []\n    an = ''\n    for i in range(n):\n        ans.append(b[da])\n        an += str(b[da]) + ' '\n        b.pop(da)\n        da = -da\n    print(an)\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    b = list(input().split())\n    b.insert(0, '0')\n    a = solve(n, b)", "n_testcase = int(input())\nfor i in range(n_testcase):\n    n = int(input())\n    s = input().split()\n    lst = []\n    for j in range(n // 2):\n        lst.append(s[j])\n        lst.append(s[n - 1 - j])\n    if n == 1:\n        lst.append(s[0])\n    elif n % 2 != 0:\n        lst.append(s[j + 1])\n    print(' '.join(lst))", "n_testcase = int(input())\nfor i in range(n_testcase):\n    n = int(input())\n    s = input().split()\n    lst = []\n    for j in range(n // 2):\n        lst.append(s[j])\n        lst.append(s[n - 1 - j])\n    if n == 1:\n        lst.append(s[0])\n    elif n % 2 != 0:\n        lst.append(s[j + 1])\n    print(' '.join(lst))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input().split()\n    m = int(n / 2)\n    p = int((n - 1) / 2)\n    ns = []\n    fr = ''\n    if n % 2 == 0:\n        for j in range(m):\n            ns.append(s[j])\n            ns.append(s[n - 1 - j])\n    else:\n        for k in range(p):\n            ns.append(s[k])\n            ns.append(s[n - 1 - k])\n        ns.append(s[p])\n    for o in ns:\n        fr += str(o) + ' '\n    print(fr)", "for i in range(int(input())):\n    junk = input()\n    arr = input().split()\n    ans = ['0' for i in range(len(arr))]\n    i = j = 0\n    while True:\n        if i + 1 < len(ans):\n            ans[i] = arr[j]\n            ans[i + 1] = arr[len(arr) - 1 - j]\n        else:\n            break\n        i += 2\n        j += 1\n    if len(arr) % 2 != 0:\n        ans[-1] = arr[len(arr) // 2]\n    print(' '.join(ans))", "for i in range(int(input())):\n    lenn = int(input())\n    list1 = list(map(int, input().split()))\n    output = ''\n    count = 0\n    if lenn == 1:\n        print(list1[0])\n    elif lenn % 2 == 0:\n        for i in range(1, lenn):\n            output += str(list1[i - 1]) + ' ' + str(list1[-i]) + ' '\n            count += 2\n            if count == lenn:\n                print(output)\n                break\n            elif count > lenn:\n                print(output[:-3])\n                break\n    else:\n        for i in range(1, lenn // 2 + 1):\n            output += str(list1[i - 1]) + ' ' + str(list1[-i]) + ' '\n            count += 2\n            if count == lenn - 1:\n                print(output + str(list1[lenn // 2]))\n                break", "def solve(seq_len, seq):\n    (i, j, counter) = (0, seq_len - 1, 0)\n    new_seq = []\n    while i <= j:\n        if counter % 2 == 0:\n            new_seq.append(str(seq[i]))\n            i += 1\n            counter += 1\n        else:\n            new_seq.append(str(seq[j]))\n            j -= 1\n            counter += 1\n    return ' '.join(new_seq)\n\ndef read_input():\n    cases = int(input())\n    for t in range(cases):\n        seq_len = int(input())\n        seq = [int(n) for n in input().split()]\n        print(solve(seq_len, seq))\nread_input()", "def ordenar(lista, n):\n    c = 1\n    i = 0\n    j = n - 1\n    policarp = []\n    if n == 1:\n        policarp.append(lista[0])\n        return policarp\n    while len(policarp) < n:\n        if c == 3:\n            c = 1\n        if c % 2 == 1:\n            policarp.append(lista[i])\n            i += 1\n            c += 1\n        elif c % 2 == 0:\n            policarp.append(lista[j])\n            j -= 1\n            c += 1\n    return policarp\n\ndef main():\n    t = int(input())\n    c = 0\n    string = ''\n    resultados = []\n    while c < t:\n        c += 1\n        n = int(input())\n        lista = input()\n        lista = lista.split()\n        result = ordenar(lista, n)\n        for i in result:\n            string += str(i) + ' '\n        string += '\\n'\n    string = string[0:-1]\n    print(string)\nmain()", "import math\nt = int(input())\nresults = []\n\ndef calc(A):\n    l = math.ceil(len(A))\n    i = 0\n    j = len(A) - 1\n    result = []\n    start = True\n    while l:\n        if start:\n            result.append(A[i])\n            i += 1\n        else:\n            result.append(A[j])\n            j -= 1\n        l -= 1\n        start = not start\n    r = ''.join((str(e) + ' ' for e in result))\n    return r\nfor i in range(t):\n    n = int(input())\n    A = tuple(map(int, input().split()))\n    print(calc(A) + ' ')", "for _ in range(int(input())):\n    size = int(input())\n    arr = [int(i) for i in input().split()]\n    assert size == len(arr)\n    og = []\n    for i in range(size):\n        if i % 2 == 0:\n            og.append(arr[i // 2])\n        else:\n            og.append(arr[size - i // 2 - 1])\n    print(' '.join((str(i) for i in og)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    old = list(map(int, input().split()))\n    new = []\n    i = 0\n    for i in range(n):\n        if i % 2 == 0:\n            new.append(old.pop(0))\n        else:\n            new.append(old.pop())\n    print(' '.join(map(str, new)))", "def polycarp():\n    length = int(input())\n    d = input().split()\n    if length == len(d):\n        dier = []\n        x = 0\n        y = -1\n        for i in range(len(d) // 2):\n            dier.append(d[x])\n            dier.append(d[y])\n            x += 1\n            y -= 1\n        if len(d) % 2 > 0:\n            dier.append(d[len(d) // 2])\n        print(*dier)\nt = int(input())\nfor i in range(t):\n    polycarp()", "import sys\ninput = sys.stdin.readline\noutput = sys.stdout.write\n\ndef main():\n    tests = int(input().rstrip())\n    for i in range(tests):\n        length_ = int(input().rstrip())\n        list_ = list(map(int, input().rstrip().split()))\n        l = 0\n        r = length_ - 1\n        mid_ = length_ // 2\n        if length_ % 2 == 0:\n            state = True\n        else:\n            state = False\n        seq = []\n        for j in range(mid_):\n            seq.append(list_[l + j])\n            seq.append(list_[r - j])\n        if state is False:\n            seq.append(list_[mid_])\n        for num in seq:\n            output(str(num) + ' ')\n        output('\\n')\nmain()", "def polycarp():\n    length = int(input())\n    d = input().split()\n    if length == len(d):\n        dier = []\n        x = 0\n        y = -1\n        for i in range(len(d) // 2):\n            dier.append(d[x])\n            dier.append(d[y])\n            x += 1\n            y -= 1\n        if len(d) % 2 > 0:\n            dier.append(d[len(d) // 2])\n        print(*dier)\nt = int(input())\nfor i in range(t):\n    polycarp()", "skok = int(input())\nfor i in range(0, skok):\n    new = []\n    b = int(input())\n    c = list(map(int, input().split()))\n    while len(c) != 0:\n        if len(c) == 1:\n            new.append(c[0])\n            c.pop(0)\n        else:\n            new.append(c[0])\n            new.append(c[-1])\n            c.pop(0)\n            c.pop(-1)\n    new = list(map(str, new))\n    print(' '.join(new))", "ans = []\nfor x in range(int(input())):\n    elem = []\n    length = int(input())\n    nums = list(map(int, input().split()))\n    i = 0\n    j = len(nums) - 1\n    while j > i:\n        elem.append(nums[i])\n        elem.append(nums[j])\n        i += 1\n        j -= 1\n    if length % 2 != 0:\n        elem.append(nums[i])\n    ans.append(elem)\nfor i in ans:\n    print(' '.join((str(x) for x in i)))", "for _ in range(int(input())):\n    n = int(input())\n    b = [int(x) for x in input().split()]\n    a = []\n    for i in range(n):\n        if len(b) == 0:\n            break\n        a.append(b[0])\n        del b[0]\n        if len(b) == 0:\n            break\n        else:\n            a.append(b[-1])\n            del b[-1]\n    print(' '.join((repr(y) for y in a)))", "v = int(input())\nfor c in range(0, v):\n    a = input()\n    d = input()\n    new = []\n    str = ''\n    b = d.split(' ')\n    for i in range(0, len(b) // 2 + 1):\n        new.append(b[i])\n        new.append(b[-i - 1])\n    for k in range(0, len(b)):\n        str = str + new[k] + ' '\n    print(str.rstrip())", "vezes = int(input())\nfor i in range(vezes):\n    original = ''\n    quant = int(input())\n    lista = list(map(int, input().split()))\n    l = 0\n    r = quant - 1\n    while l < r:\n        original += str(lista[l]) + ' '\n        original += str(lista[r]) + ' '\n        l += 1\n        r -= 1\n    if quant % 2 == 1:\n        original += str(lista[int(quant / 2)]) + ' '\n    original = str.rstrip(original)\n    print(original)", "for i in range(int(input())):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    sequence = []\n    for i in range(len(ls) // 2):\n        sequence.append(ls[i])\n        sequence.append(ls[-i - 1])\n    if len(ls) % 2 == 0:\n        print(' '.join(map(str, sequence)))\n    else:\n        sequence.append(ls[len(ls) // 2])\n        print(' '.join(map(str, sequence)))", "for x in range(int(input())):\n    size = int(input())\n    l = list(map(int, input().split()))\n    fav_seq = [l[0]]\n    if size % 2 != 0:\n        for y in range(size // 2):\n            fav_seq.append(l[-(y + 1)])\n            fav_seq.append(l[y + 1])\n    else:\n        for y in range(size // 2):\n            fav_seq.append(l[-(y + 1)])\n            fav_seq.append(l[y + 1])\n        fav_seq.pop()\n    fav_seq = [str(i) for i in fav_seq]\n    print(' '.join(fav_seq))", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    b = [int(x) for x in input().split()]\n    r = [0 for x in range(n)]\n    i = 0\n    j = 0\n    while i < n:\n        r[i] = b[j]\n        if i + 1 != n:\n            r[i + 1] = b[n - (j + 1)]\n        i += 2\n        j += 1\n    print(' '.join(map(str, r)))", "def read_int():\n    return int(input())\n\ndef read_ints():\n    return map(int, input().split(' '))\nt = read_int()\nfor case_num in range(t):\n    n = read_int()\n    a = list(read_ints())\n    l = 0\n    r = n - 1\n    ans = []\n    for i in range(n):\n        if i % 2 == 0:\n            ans.append(a[l])\n            l += 1\n        else:\n            ans.append(a[r])\n            r -= 1\n    print(' '.join(map(str, ans)))", "def read_int():\n    return int(input())\n\ndef read_ints():\n    return map(int, input().split(' '))\nt = read_int()\nfor case_num in range(t):\n    n = read_int()\n    a = list(read_ints())\n    l = 0\n    r = n - 1\n    ans = []\n    for i in range(n):\n        if i % 2 == 0:\n            ans.append(a[l])\n            l += 1\n        else:\n            ans.append(a[r])\n            r -= 1\n    print(' '.join(map(str, ans)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = map(int, input().split())\n    ans = [0] * n\n    if n % 2 == 1:\n        v = n - 1\n    else:\n        v = n - 2\n    cur = 0\n    y = 2\n    for i in lst:\n        if cur > v:\n            if n % 2:\n                cur = n - 2\n            else:\n                cur = n - 1\n            y = -y\n        ans[cur] = i\n        cur += y\n    print(' '.join((str(x) for x in ans)))", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    res = []\n    p = 0\n    q = N - 1\n    while len(res) < len(A):\n        if len(res) % 2 == 0:\n            res.append(str(A[p]))\n            p += 1\n        else:\n            res.append(str(A[q]))\n            q -= 1\n    print(' '.join(res))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    if n % 2 == 0:\n        y = x[0:n // 2]\n        z = x[n // 2:]\n        z = z[::-1]\n        k = 0\n        for j in range(len(z)):\n            k = k + 1\n            y.insert(j + k, z[j])\n        print(*y)\n    else:\n        y = x[0:n // 2 + 1]\n        z = x[n // 2 + 1:]\n        z = z[::-1]\n        k = 0\n        for j in range(len(z)):\n            k = k + 1\n            y.insert(j + k, z[j])\n        print(*y)", "x = int(input())\nfor i in range(x):\n    m = []\n    y = int(input())\n    l = list(map(int, input().split()))\n    a = y // 2\n    for j in range(a):\n        m.append(l[j])\n        l.reverse()\n        m.append(l[j])\n        l.reverse()\n    if y % 2 != 0:\n        m.append(l[a])\n        print(*m)\n    else:\n        print(*m)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    old = list(map(int, input().split()))\n    new = []\n    i = 0\n    for i in range(n):\n        if i % 2 == 0:\n            new.append(old.pop(0))\n        else:\n            new.append(old.pop())\n    print(' '.join(map(str, new)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lista = list(map(int, input().split()))\n    x = 0\n    i = 0\n    j = n - 1\n    res = ''\n    while x < n:\n        if x == 0 or x % 2 == 0:\n            res += str(lista[i]) + ' '\n            i += 1\n        else:\n            res += str(lista[j]) + ' '\n            j -= 1\n        x += 1\n    print(res)", "def polycarp(Lst):\n    rst = []\n    r = True\n    for i in range(len(Lst)):\n        if r == True:\n            rst.append(Lst[0])\n            del Lst[0]\n            r = False\n        else:\n            rst.append(Lst[len(Lst) - 1])\n            del Lst[len(Lst) - 1]\n            r = True\n    return rst\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    Lista = input().split(' ')\n    lst = []\n    for i in Lista:\n        lst.append(int(i))\n    resultado = polycarp(lst)\n    for i in resultado:\n        (print(i, end=' '),)\n    print('')", "casos = int(input())\nnum = 0\nwhile num < casos:\n    i = 0\n    j = -1\n    nElementos = int(input())\n    elementos = list(input().split(' '))\n    listaNueva = []\n    for x in range(nElementos):\n        if x % 2 == 0:\n            if x == nElementos - 1:\n                print(elementos[i], end='\\n')\n            else:\n                print(elementos[i], end=' ')\n            i += 1\n        else:\n            if x == nElementos - 1:\n                print(elementos[j], end='\\n')\n            else:\n                print(elementos[j], end=' ')\n            j -= 1\n    num += 1", "for _ in range(int(input())):\n    n = int(input())\n    answer = [0] * n\n    seq = input().split()\n    for i in range(n):\n        if i % 2:\n            answer[i] = seq.pop()\n        else:\n            answer[i] = seq.pop(0)\n    print(*answer)", "for _ in range(int(input())):\n    n = int(input())\n    seq = input().split()\n    for i in range(n):\n        if i % 2:\n            print(seq.pop(), end=' ')\n        else:\n            print(seq.pop(0), end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    w = list(map(int, input().split()))\n    w1 = []\n    for j in range(n // 2):\n        w1.append(w[j])\n        w1.append(w[-j - 1])\n    if n % 2 == 1:\n        w1.append(w[n // 2])\n    print(*w1)", "ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    seq = [*map(int, input().split())]\n    tmp = [0] * n\n    for i in range(n):\n        if i % 2:\n            tmp[i] = seq[-(i // 2) - 1]\n        else:\n            tmp[i] = seq[i // 2]\n    ans += [tmp]\nfor a in ans:\n    print(*a)", "def func(arr, n):\n    i = 0\n    j = n - 1\n    fav_seq = []\n    t = 1\n    while i <= j:\n        if t % 2 != 0:\n            fav_seq.append(arr[i])\n            i += 1\n        else:\n            fav_seq.append(arr[j])\n            j -= 1\n        t += 1\n    return fav_seq\nfor i in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    fav_seq = func(A, n)\n    print(*fav_seq)", "from math import *\nimport sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\nclass Solution:\n\n    def __init__(self):\n        self.ans = 0\n\n    def solve(self, a, n):\n        helper = [0] * n\n        (left, right) = (0, n - 1)\n        (i, j) = (0, 1)\n        while left <= right:\n            if left == right:\n                helper[i] = a[left]\n            else:\n                helper[i] = a[left]\n                helper[j] = a[right]\n            left += 1\n            right -= 1\n            i += 2\n            j += 2\n        return helper\nsol = Solution()\nt = inp()\nans = []\nwhile t:\n    n = inp()\n    a = inlt()\n    ans.append(sol.solve(a, n))\n    t -= 1\nfor i in range(len(ans)):\n    print(*ans[i], end='\\n')", "t = int(input())\nwhile t > 0:\n    a = int(input())\n    b = list(map(int, input().split()))\n    Sol = []\n    while a > 1:\n        Sol.append(b.pop(0))\n        Sol.append(b.pop())\n        a -= 2\n    if len(b) > 0:\n        Sol.append(b.pop())\n    print(*Sol)\n    t -= 1", "t = int(input())\nfor o in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    j = n - 1\n    while i < j:\n        print(a[i], a[j], end=' ')\n        i += 1\n        j -= 1\n    if n % 2 != 0:\n        print(a[i], end=' ')\n    print()", "k = int(input())\nfor _ in range(k):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    j = n - 1\n    while i < j:\n        print(a[i], a[j], end=' ')\n        i += 1\n        j -= 1\n    if n % 2 == 1:\n        print(a[i], end=' ')\n    print()", "import math\nfor i in range(int(input())):\n    n = int(input())\n    q = []\n    l = list(map(int, input().split()))\n    p = math.ceil(n / 2)\n    for i in range(p):\n        q.append(l[i])\n        if i != len(l) - 1 - i:\n            q.append(l[len(l) - i - 1])\n    print(*q)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c1 = 0\n    c2 = -1\n    l1 = []\n    if n % 2 != 0:\n        for j in range(len(l) // 2):\n            l1.append(l[c1])\n            l1.append(l[c2])\n            c1 = c1 + 1\n            c2 = c2 - 1\n        l1.append(l[len(l) // 2])\n        print(*l1)\n    else:\n        for j in range(len(l) // 2):\n            l1.append(l[c1])\n            l1.append(l[c2])\n            c1 = c1 + 1\n            c2 = c2 - 1\n        print(*l1)", "n = int(input())\na = []\nfor i in range(n):\n    k = []\n    m = int(input())\n    p = [int(x) for x in input().split()]\n    if m % 2 == 0:\n        for i in range(1, int(m / 2) + 1):\n            k.append(p[i - 1])\n            k.append(p[-i])\n    else:\n        for i in range(1, (m + 2) // 2):\n            k.append(p[i - 1])\n            k.append(p[-i])\n        k.append(p[len(p) // 2])\n    a.append(k)\nfor i in a:\n    print(*i)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        if i % 2 == 0:\n            print(a[i // 2], end=' ')\n        else:\n            print(a[n - 1 - i // 2], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    a = []\n    l = 0\n    r = n - 1\n    for i in range(n):\n        if i % 2 == 0:\n            a.append(b[l])\n            l += 1\n        else:\n            a.append(b[r])\n            r -= 1\n    print(*a)", "for _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    a = [0] * n\n    l = 0\n    r = n - 1\n    for i in range(n):\n        if i % 2 == 0:\n            a[i] = b[l]\n            l += 1\n        else:\n            a[i] = b[r]\n            r -= 1\n    print(*a)", "Test = int(input())\nfor T in range(Test):\n    N = int(input())\n    A = list(map(int, input().split()))\n    Cad = ''\n    Izq = 0\n    Dere = N - 1\n    Fin = N // 2\n    while Izq < Fin:\n        Cad = Cad + str(A[Izq]) + ' '\n        Cad = Cad + str(A[Dere]) + ' '\n        Izq = Izq + 1\n        Dere = Dere - 1\n    if N % 2 == 0:\n        print(Cad[:len(Cad) - 1])\n    else:\n        Cad = Cad + str(A[Izq])\n        print(Cad)", "for i in range(int(input())):\n    a = int(input())\n    lis = list(map(int, input().split()))\n    ans = []\n    for i in range(a):\n        if i % 2 == 0:\n            ans.append(lis[0])\n            lis.pop(0)\n        else:\n            ans.append(lis[-1])\n            lis.pop(-1)\n    print(*ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    b = list(map(int, input().split()))\n    c = [0] * n\n    p = 0\n    q = n - 1\n    action = 0\n    for g in range(n):\n        if action == 0:\n            c[g] = b[p]\n            p += 1\n            action = 1\n        else:\n            c[g] = b[q]\n            q -= 1\n            action = 0\n    print(*c)", "t1 = int(input())\nfor i in range(t1):\n    n = int(input())\n    p = n // 2\n    t = ''\n    a = list(map(int, input().split()))\n    b = []\n    c = []\n    for j in range(p):\n        b.append(a[j])\n    for j in range(p, n):\n        c.append(a[j])\n    c.reverse()\n    if n % 2 == 1:\n        p += 1\n        for j in range(p):\n            if j + 1 < p:\n                t += str(b[j]) + ' '\n            t += str(c[j]) + ' '\n    else:\n        for j in range(p):\n            if j + 1 < p + 1:\n                t += str(b[j]) + ' '\n            t += str(c[j]) + ' '\n    print(t[:-1])", "ip = int(input())\nfor i in range(ip):\n    j = int(input())\n    k = [int(i) for i in input().split()]\n    m = []\n    n = []\n    s = ''\n    if j % 2 == 1:\n        m = k[0:j // 2 + 1]\n        n = k[j // 2 + 1:]\n    else:\n        m = k[0:j // 2]\n        n = k[j // 2:]\n    for i in range(j):\n        if i % 2 == 0:\n            s += str(m[0]) + ' '\n            del m[0]\n        else:\n            s += str(n[-1]) + ' '\n            del n[-1]\n    print(s)", "for _ in range(int(input())):\n    l = int(input())\n    a = list(map(int, input().split()))\n    for i in range(1, len(a), 2):\n        x = a.pop(-1)\n        a.insert(i, x)\n    print(*a)", "for i in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    if n % 2 == 0:\n        for i in range(n // 2 - 1):\n            print(s[i], end=' ')\n            print(s[n - i - 1], end=' ')\n        print(s[n // 2 - 1], end=' ')\n        print(s[n // 2])\n    if n % 2 == 1:\n        for i in range(n // 2):\n            print(s[i], end=' ')\n            print(s[n - i - 1], end=' ')\n        print(s[n // 2])", "caseNum = int(input())\ncases = [0] * caseNum\nlengths = [0] * caseNum\nfor i in range(caseNum):\n    lengthIn = int(input())\n    lengths[i] = lengthIn\n    arrayIn = input()\n    cases[i] = arrayIn.split()\nfor testNum in range(len(cases)):\n    indx = 0\n    for i in range(lengths[testNum]):\n        if i % 2 == 0:\n            print(cases[testNum][indx], end=' ')\n        else:\n            print(cases[testNum][lengths[testNum] - 1 - indx], end=' ')\n            indx += 1\n    print()", "def GetInputOfTest():\n    n = int(input())\n    b = list(map(int, input().split()))\n    return (n, b)\n\ndef SolOfTest(n, b):\n    shift = 0\n    a = list()\n    for i in range(n):\n        if i % 2 == 0:\n            a.append(b[shift])\n        else:\n            a.append(b[-(shift + 1)])\n            shift += 1\n    return a.copy()\nnum_tests = int(input())\nanswers = []\nfor test_ind in range(num_tests):\n    (n, b) = GetInputOfTest()\n    a = SolOfTest(n, b)\n    answers.append(a)\nfor a in answers:\n    n = len(a)\n    for i in range(n):\n        if i < n - 1:\n            print(a[i], end=' ')\n        else:\n            print(a[i])"]