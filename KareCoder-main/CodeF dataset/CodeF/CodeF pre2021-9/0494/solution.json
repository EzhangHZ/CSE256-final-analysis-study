["def permutations(num: int):\n    if num < 4:\n        return '-1'\n    if num == 4:\n        return '3 1 4 2'\n    else:\n        even = list()\n        odd = list()\n        for i in range(1, num + 1, 2):\n            odd.append(i)\n        for i in range(2, num + 1, 2):\n            even.append(i)\n        even.reverse()\n        if num % 2 == 0:\n            (even[1], even[2]) = (even[2], even[1])\n        (even[0], even[1]) = (even[1], even[0])\n        return ' '.join(map(str, odd + even))\nquant = int(input())\ninputs = list()\nfor i in range(quant):\n    inputs.append(int(input()))\nfor i in inputs:\n    print(permutations(i))", "t = int(input(''))\nwhile t:\n    t -= 1\n    n = list(range(1, int(input('')) + 1))\n    if len(n) < 4:\n        print(-1)\n    else:\n        a1 = [i for i in range(2, len(n) + 1, 2)][::-1]\n        a2 = [i for i in range(1, len(n) + 1, 2)]\n        (a1[len(a1) - 2], a1[len(a1) - 1]) = (a1[len(a1) - 1], a1[len(a1) - 2])\n        print(' '.join(map(str, a1 + a2)))", "def permutations(num: int):\n    if num < 4:\n        return '-1'\n    if num == 4:\n        return '3 1 4 2'\n    else:\n        odd = list()\n        for i in range(1, num + 1, 2):\n            odd.append(i)\n        even = [4, 2]\n        for i in range(6, num + 1, 2):\n            even.append(i)\n        odd.reverse()\n        return ' '.join(map(str, odd + even))\nquant = int(input())\ninputs = list()\nfor i in range(quant):\n    inputs.append(int(input()))\nfor i in inputs:\n    print(permutations(i))", "import sys\nsys.setrecursionlimit(1000000000)\nfor _ in range(int(input())):\n    n = int(input())\n    if n < 4:\n        print(-1)\n        continue\n    res = [n for n in range(1, n + 1, 2)]\n    evens = [n for n in range(2, n + 1, 2)]\n    res = evens[2:][::-1] + evens[:2] + res\n    print(' '.join(map(str, res)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    res = []\n    if n < 4:\n        print(-1)\n    elif n % 2:\n        for j in range(1, n + 1, 2):\n            res.append(j)\n        res.append(n - 3)\n        res.append(n - 1)\n        for j in range(n - 5, 0, -2):\n            res.append(j)\n        print(' '.join([str(k) for k in res]))\n    else:\n        for j in range(2, n + 1, 2):\n            res.append(j)\n        res.append(n - 3)\n        res.append(n - 1)\n        for j in range(n - 5, 0, -2):\n            res.append(j)\n        print(' '.join([str(k) for k in res]))", "for i in range(int(input())):\n    n = int(input())\n    s = ''\n    if n <= 3:\n        print(-1)\n        continue\n    if n % 2 == 0:\n        for j in range(2, n + 2, 2):\n            s += str(j) + ' '\n        s += str(n - 3) + ' ' + str(n - 1)\n        for j in range(n - 5, -1, -2):\n            s += ' ' + str(j)\n        print(s)\n    else:\n        for j in range(1, n + 2, 2):\n            s += str(j) + ' '\n        s += str(n - 3) + ' ' + str(n - 1)\n        for j in range(n - 5, 0, -2):\n            s += ' ' + str(j)\n        print(s)", "n = int(input())\n\ndef get_answer(v):\n    if v <= 3:\n        print(-1)\n    elif v == 4:\n        print('3 1 4 2')\n    elif v == 5:\n        print('1 3 5 2 4')\n    elif v == 6:\n        print('1 3 5 2 6 4')\n    elif v % 2 == 1:\n        a1 = [str(t) for t in range(1, v + 2, 2)]\n        a2 = [str(t) for t in range(v - 5, 0, -2)]\n        a = a1 + [str(v - 3), str(v - 1)] + a2\n        print(' '.join(a))\n    else:\n        a1 = [str(t) for t in range(1, v + 1, 2)]\n        a2 = [str(t) for t in range(v - 6, 0, -2)]\n        a = a1 + [str(v - 4), str(v), str(v - 2)] + a2\n        print(' '.join(a))\nfor _ in range(n):\n    v = int(input())\n    get_answer(v)", "t = int(input())\nfor tt in range(t):\n    n = int(input())\n    if n < 4:\n        print(-1)\n    else:\n        if n % 2 == 0:\n            a = [2 * i + 1 for i in range(n // 2)]\n            b = [2 * i + 2 for i in range(n // 2)]\n            b.reverse()\n            (a[-2], a[-1]) = (a[-1], a[-2])\n            sol = a + b\n        else:\n            a = [2 * i + 1 for i in range(n // 2 + 1)]\n            b = [2 * i + 2 for i in range(n // 2)]\n            b.reverse()\n            (b[0], b[1]) = (b[1], b[0])\n            sol = a + b\n        print(' '.join(map(str, sol)))", "def main():\n    t = ((1, 3, 5, 2, 4), (1, 3, 5, 2, 4, 6), (1, 3, 5, 2, 6, 4, 7), (1, 3, 5, 2, 6, 8, 4, 7), (1, 3, 5, 2, 4, 7, 9, 6, 8), (1, 3, 5, 2, 4, 6, 8, 10, 7, 9))\n    for _ in range(int(input())):\n        n = int(input())\n        if n < 5:\n            print(('-1', '2 4 1 3')[n == 4])\n            continue\n        (n, m) = (n // 5 - 1, n % 5)\n        l = [i + j for i in range(0, n * 5, 5) for j in (1, 3, 5, 2, 4)]\n        l += (n * 5 + i for i in t[m])\n        print(' '.join(map(str, l)))\nmain()", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    if n < 4:\n        print(-1)\n    else:\n        L = [str(x) for x in range(1, n + 1)]\n        a = L[1::2]\n        if n > 5:\n            if n & 1 == 0:\n                b = [L[-4], L[-2]]\n                b.extend(L[-6::-2])\n            else:\n                b = [L[-5], L[-1], L[-3]]\n                b.extend(L[-7::-2])\n        else:\n            b = L[0::2]\n        print(' '.join(a + b))", "def s_perm(n: int):\n    if n < 4:\n        return -1\n    even_list = []\n    for i in range(2, n + 1, 2):\n        even_list.append(i)\n    odd_list = []\n    for i in range(1, n + 1, 2):\n        odd_list.append(i)\n    odd_list.reverse()\n    if n // 2 * 2 == n:\n        (odd_list[0], odd_list[1]) = (odd_list[1], odd_list[0])\n    else:\n        (even_list[len(even_list) - 1], even_list[len(even_list) - 2]) = (even_list[len(even_list) - 2], even_list[len(even_list) - 1])\n    return ' '.join(map(str, even_list + odd_list))\nimport os\nimport sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = s_perm(n)\n    print(ans)", "def step_permutation(n):\n    if n == 0:\n        return []\n    elif n < 4:\n        return [-1]\n    elif n % 2 == 1:\n        return step_permutation(n - 1) + [n]\n    elif n % 4 == 2:\n        return step_permutation(n - 6) + [n - 5, n - 2, n - 4, n, n - 3, n - 1]\n    else:\n        ans = []\n        for j in range(int(n / 4)):\n            ans += [j * 4 + 2, j * 4 + 4, j * 4 + 1, j * 4 + 3]\n        return ans\nt = int(input())\nfor i in range(t):\n    ans = step_permutation(int(input()))\n    print(' '.join([str(i) for i in ans]))", "def solve():\n    n = int(input())\n    i = 0\n    a = [0] * n\n    if n < 4:\n        print(-1)\n        return\n    elif n == 4:\n        print(3, 1, 4, 2)\n        return\n    while i + 4 < n:\n        (a[i], a[i + 1], a[i + 2], a[i + 3], a[i + 4]) = (i + 1, i + 3, i + 5, i + 2, i + 4)\n        i += 5\n    if n % 5 == 4:\n        (a[i], a[i + 1], a[i + 2], a[i + 3]) = (i + 3, i + 1, i + 4, i + 2)\n    elif n % 5 == 3:\n        (a[i - 1], a[i], a[i + 1], a[i + 2]) = (i + 1, i + 3, i - 1, i + 2)\n    elif n % 5 == 2:\n        (a[i - 1], a[i], a[i + 1]) = (i + 1, i - 1, i + 2)\n    elif n % 5 == 1:\n        a[i] = i + 1\n    print(' '.join((str(x) for x in a)))\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "def permutation(n):\n    even = []\n    odd = []\n    if n < 4:\n        return -1\n    for number in range(1, n + 1):\n        if number % 2 == 0:\n            even.append(number)\n        else:\n            odd.append(number)\n    odd.reverse()\n    (even[0], even[1]) = (even[1], even[0])\n    perm = odd + even\n    permString = ''\n    for number in range(0, len(perm) - 1):\n        permString += str(perm[number]) + ' '\n    permString += str(perm[-1])\n    return permString\nnumberOfTestCases = int(input())\nfor cases in range(0, numberOfTestCases):\n    n = int(input())\n    print(permutation(n))", "for t in range(int(input())):\n    n = int(input())\n    if n < 4:\n        print(-1)\n    else:\n        a = list(range(1, n + 1, 2))[::-1] + [4, 2] + list(range(6, n + 1, 2))\n        print(*a)", "def f(n):\n    if n < 4:\n        print(-1)\n        return\n    a = list(range(n - 1, 0, -2))\n    (a[0], a[1]) = (a[1], a[0])\n    a = list(range((not n & 1) + 1, n + 1, 2)) + a\n    print(*a)\nt = int(input())\nfor _ in range(t):\n    f(int(input()))", "for _ in range(int(input())):\n    n = int(input())\n    if n <= 3:\n        print('-1')\n    elif n % 2 == 0:\n        res = []\n        for i in range(n, 4, -2):\n            res.append(i)\n        res.append(3)\n        res.append(1)\n        res.append(4)\n        res.append(2)\n        for i in range(5, n, 2):\n            res.append(i)\n        print(' '.join((str(x) for x in res)))\n    else:\n        res = []\n        for i in range(n, 4, -2):\n            res.append(i)\n        res.append(3)\n        res.append(1)\n        res.append(4)\n        res.append(2)\n        for i in range(6, n, 2):\n            res.append(i)\n        print(' '.join((str(x) for x in res)))", "t = int(input())\nfor we in range(t):\n    n = int(input())\n    l = [str(1)]\n    if n <= 3:\n        print('-1')\n    elif n == 4:\n        print('2 4 1 3')\n    elif n == 6:\n        print('1 3 5 2 6 4')\n    elif n == 5:\n        print('1 3 5 2 4')\n    else:\n        if n % 2 == 0:\n            k = 1\n            while k < n - 2:\n                k += 2\n                l.append(str(k))\n            k -= 3\n            l.append(str(k))\n            k += 4\n            l.append(str(k))\n            k -= 2\n            l.append(str(k))\n            k -= 4\n            l.append(str(k))\n            while k > 3:\n                k -= 2\n                l.append(str(k))\n        else:\n            k = 1\n            while k < n - 1:\n                k += 2\n                l.append(str(k))\n            k -= 3\n            l.append(str(k))\n            k += 2\n            l.append(str(k))\n            k -= 4\n            l.append(str(k))\n            while k > 3:\n                k -= 2\n                l.append(str(k))\n        print(' '.join(l))", "t = int(input())\nfor _ in range(t):\n    number = int(input())\n    if number < 4:\n        print(-1)\n        continue\n    ans = []\n    last_odd = number - (0 if number % 2 else 1)\n    while last_odd != -1:\n        ans.append(last_odd)\n        last_odd -= 2\n    ans.append(4)\n    ans.append(2)\n    curr = 6\n    while curr <= number:\n        ans.append(curr)\n        curr += 2\n    print(' '.join([str(i) for i in ans]))", "for _ in range(int(input())):\n    integer = int(input())\n    result = []\n    if integer % 2 == 0:\n        for i in range(integer, 4, -2):\n            result.append(i)\n        result.append(2)\n        result.append(4)\n        result.append(1)\n        result.append(3)\n        for i in range(5, integer, 2):\n            result.append(i)\n    elif integer % 2 != 0:\n        for i in range(integer - 1, 4, -2):\n            result.append(i)\n        result.append(2)\n        result.append(4)\n        result.append(1)\n        result.append(3)\n        for i in range(5, integer + 1, 2):\n            result.append(i)\n    if integer < 4:\n        result = [-1]\n    print(' '.join(list(map(str, result))))", "for _ in range(int(input())):\n    integer = int(input())\n    result = []\n    if integer % 2 == 0:\n        for i in range(integer, 4, -2):\n            result.append(i)\n        result.append(2)\n        result.append(4)\n        result.append(1)\n        result.append(3)\n        for i in range(5, integer, 2):\n            result.append(i)\n    elif integer % 2 != 0:\n        for i in range(integer - 1, 4, -2):\n            result.append(i)\n        result.append(2)\n        result.append(4)\n        result.append(1)\n        result.append(3)\n        for i in range(5, integer + 1, 2):\n            result.append(i)\n    if integer < 4:\n        result = [-1]\n    print(' '.join(map(str, result)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n <= 3:\n        print(-1)\n    elif n % 2 == 0:\n        print(*range(2, n + 1, 2), n - 3, n - 1, *range(n - 5, 0, -2))\n    else:\n        print(*range(1, n + 1, 2), n - 3, n - 1, *range(n - 5, 1, -2))", "def solve(n):\n    if n <= 3:\n        return ['-1']\n    (even, odd) = ([], [])\n    for i in range(1, n + 1):\n        if i % 2:\n            odd.append(i)\n        else:\n            even.append(i)\n    odd[:] = odd[::-1]\n    (even[0], even[1]) = (even[1], even[0])\n    ans = odd + even\n    return list(map(str, ans))\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    ans = solve(n)\n    print(' '.join(ans))", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    if n < 4:\n        print(-1)\n    else:\n        out = []\n        if n == 4:\n            print('3 1 4 2')\n        elif n % 2 == 0:\n            for i in range(2, n + 1, 2):\n                out.append(i)\n            out.append(n - 3)\n            out.append(n - 1)\n            out.append(n - 5)\n            for i in range(n - 7, 0, -2):\n                out.append(i)\n            print(' '.join([str(x) for x in out]))\n        elif n == 5:\n            print('4 2 5 3 1')\n        else:\n            for i in range(2, n - 5, 2):\n                out.append(i)\n            out.append(n - 5)\n            out.append(n - 1)\n            out.append(n - 3)\n            for i in range(n, 0, -2):\n                out.append(i)\n            print(' '.join([str(x) for x in out]))", "for i in range(int(input())):\n    n = int(input())\n    if n < 4:\n        print(-1)\n    elif n % 2 == 0:\n        odds = [j for j in range(1, n, 2)]\n        nums = [j for j in range(2, n + 1, 2)]\n        nums.append(odds.pop(-2))\n        odds.reverse()\n        nums.extend(odds)\n        print(' '.join((str(num) for num in nums)))\n    elif n % 2 == 1:\n        odds = [j for j in range(1, n + 1, 2)]\n        nums = [j for j in range(2, n, 2)]\n        nums.append(odds.pop(-3))\n        odds.reverse()\n        nums.extend(odds)\n        print(' '.join((str(num) for num in nums)))", "for i in range(int(input())):\n    q = int(input())\n    if q < 4:\n        print(-1)\n    else:\n        a = [0] * q\n        e = q // 4\n        r = q % 4\n        a[-4] = 3\n        a[-1] = 2\n        a[-2] = 4\n        a[-3] = 1\n        for i in range(q - 5, r - 1, -1):\n            a[i] = a[i + 4] + 4\n        if r == 1:\n            a[0] = q\n        elif r == 2:\n            a[1] = a[2]\n            a[2] = q - 1\n            a[0] = q\n        elif r == 3:\n            a[2] = a[3]\n            a[3] = a[4]\n            a[4] = a[5]\n            a[5] = q - 1\n            a[1] = q - 2\n            a[0] = q\n        a = list(map(str, a))\n        print(' '.join(a))", "t = int(input())\nout = ''\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    if n < 4:\n        out += '-1\\n'\n        continue\n    a = []\n    for i in reversed(range(1, n + 1, 2)):\n        a.append(i)\n    a.append(4)\n    a.append(2)\n    for i in range(6, n + 1, 2):\n        a.append(i)\n    out += ' '.join((str(i) for i in a)) + '\\n'\nprint(out)", "for _ in range(int(input())):\n    n = int(input())\n    if n < 4:\n        print(-1)\n    else:\n        lst = [4, 2]\n        lst2 = [1, 3]\n        for i in range(5, n + 1):\n            if i % 2 == 0:\n                lst.append(i)\n            else:\n                lst2.append(i)\n        lst2 = lst2[::-1]\n        lst3 = []\n        for i in lst2:\n            lst3.append(i)\n        for i in lst:\n            lst3.append(i)\n        lst3 = list(map(str, lst3))\n        print(' '.join(lst3))", "for _ in range(int(input())):\n    N = int(input())\n    A = [0] * N\n    if N > 3:\n        for I in range(0, N - N % 4, 4):\n            A[I] = I + 2\n            A[I + 1] = I + 4\n            A[I + 2] = I + 1\n            A[I + 3] = I + 3\n        if N % 4 == 1:\n            A[-1] = N\n        elif N % 4 == 2:\n            A[-3] = N - 1\n            A[-2] = N - 3\n            A[-1] = N\n        elif N % 4 == 3:\n            A[-2] = N - 4\n            A[-4] = N - 2\n            A[-1] = N - 1\n            A[-3] = N\n        print(' '.join(map(str, A)))\n    else:\n        print(-1)", "def g(n):\n    if n in (4, 5):\n        m = 2\n    else:\n        m = n - n % 2\n    mp = {6: 2, 2: 4, 4: 1}\n    while m <= n:\n        yield m\n        if m in mp:\n            m = mp[m]\n        elif m % 2 == 1:\n            m += 2\n        else:\n            m -= 2\nt = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    print(-1 if n < 4 else ' '.join(map(str, list(g(n)))))", "for i in range(int(input())):\n    n = int(input())\n    if n < 4:\n        print(-1)\n    else:\n        i = [x for x in range(n, 0, -1) if x % 2 == 1]\n        m = [4, 2]\n        u = [x for x in range(6, n + 1, 2)]\n        print(*i + m + u)", "t = int(input())\nwhile t:\n    t -= 1\n    a = int(input())\n    if a < 4:\n        print(-1)\n    else:\n        i = a - (a % 2 == 0)\n        while i >= 1:\n            print(i, end=' ')\n            i -= 2\n        print('4 2', end=' ')\n        for i in range(6, a + 1, 2):\n            print(i, end=' ')\n        print()", "from itertools import product, combinations\nfrom math import sqrt, gcd, ceil\nINF = int(1000000000.0 + 1)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n < 4:\n        print(-1)\n    elif n == 4:\n        print(3, 1, 4, 2)\n    elif n == 5:\n        print(3, 1, 4, 2, 5)\n    elif n % 2 == 0:\n        a = [i for i in range(1, n - 4, 2)]\n        b = [i for i in range(n - 4, 0, -2)]\n        print(*a, n - 2, n, n - 3, n - 1, *b)\n    else:\n        a = [i for i in range(1, n + 1, 2)]\n        b = [i for i in range(n - 5, 1, -2)]\n        print(*a, n - 3, n - 1, *b)", "for i in range(int(input())):\n    s = int(input())\n    print(*[[*range(s - s % 2, 4, -2), 2, 4, *range(1, s + 1, 2)], [-1]][s < 4])", "def solve():\n    n = int(input())\n    if n < 4:\n        print(-1)\n        return\n    ans = list(range(n, 4, -2)) + [3, 1, 4, 2] + list(range(n - 1, 4, -2))[::-1]\n    print(*ans)\nfor _ in range(int(input())):\n    solve()", "from heapq import heapify, heappop, heappush\nfor _ in range(int(input())):\n    n = int(input())\n    ans = []\n    k = n // 2 * 2\n    for i in range(k, 5, -2):\n        ans.append(i)\n    ans += [2, 4]\n    for i in range(1, n + 1, 2):\n        ans.append(i)\n    if n > 3:\n        print(*ans)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    if n < 4:\n        print(-1)\n    else:\n        even = []\n        odd = []\n        for i in range(1, n + 1):\n            if i % 2:\n                odd.append(i)\n            else:\n                even.append(i)\n        new = list(reversed(even))[:-2] + [2, 4, 1, 3] + odd[2:]\n        print(*new)", "from math import ceil\nfor _ in range(int(input())):\n    i = int(input())\n    if i <= 3:\n        print(-1)\n    elif i == 4:\n        print('3 1 4 2')\n    else:\n        s = i // 4 - 1\n        r = i % 4\n        x = i - r - 4\n        m = [2 + x, 4 + x, x + 1, 3 + x]\n        if r >= 1:\n            m.insert(4, x + 4 + 1)\n        if r >= 2:\n            m.insert(1, x + 4 + 2)\n        if r >= 3:\n            m.insert(5, x + 4 + 3)\n        t = []\n        for x in range(s):\n            t.append(x * 4 + 2)\n            t.append(x * 4 + 4)\n            t.append(x * 4 + 1)\n            t.append(x * 4 + 3)\n        t += m\n        print(*t)", "PRECALC = [(1, 3, 5, 2, 4), (1, 3, 5, 2, 4, 6), (1, 3, 5, 2, 6, 4, 7), (1, 3, 5, 2, 6, 8, 4, 7), (1, 3, 5, 2, 4, 7, 9, 6, 8)]\nfor _ in range(int(input())):\n    n = int(input())\n    if n < 4:\n        print(-1)\n        continue\n    if n == 4:\n        print(2, 4, 1, 3)\n        continue\n    a = []\n    for i in range(n // 5 - 1):\n        i *= 5\n        a += [i + 1, i + 3, i + 5, i + 2, i + 4]\n    i = (n // 5 - 1) * 5\n    a += [i + x for x in PRECALC[n % 5]]\n    print(*a)", "for _ in range(int(input())):\n    x = int(input())\n    l = []\n    if x < 4:\n        print(-1)\n    else:\n        if x % 2 == 0:\n            for i in range(2, x + 1, 2):\n                l.append(i)\n            l.append(x - 3)\n            l.append(x - 1)\n            for i in range(x - 5, 0, -2):\n                l.append(i)\n        else:\n            for i in range(1, x + 1, 2):\n                l.append(i)\n            l.append(x - 3)\n            l.append(x - 1)\n            for i in range(x - 5, 0, -2):\n                l.append(i)\n        print(*l)", "for i in range(int(input())):\n    n = int(input())\n    if n < 4:\n        print(-1)\n    else:\n        print(*list(range(1, n + 1, 2))[::-1] + [4, 2] + list(range(6, n + 1, 2)))", "for _ in range(int(input())):\n    n = int(input())\n    arr = ''\n    count = 0\n    mid = ''\n    lef = ''\n    rig = ''\n    if n < 4:\n        print('-1')\n    else:\n        if n % 2 == 1:\n            parity = 1\n        else:\n            parity = 0\n        n = n - 4\n        for i in range(n // 2 + parity):\n            lef += str(2 * (i + 1) - 1) + ' '\n            count += 1\n        for i in range(n // 2 - 1, -1, -1):\n            rig += ' ' + str(2 * (i + 1))\n            count += 1\n        if parity == 0:\n            mid = str(count + 2) + ' ' + str(count + 4) + ' ' + str(count + 1) + ' ' + str(count + 3)\n        else:\n            mid += str(count + 3) + ' ' + str(count + 1) + ' ' + str(count + 4) + ' ' + str(count + 2)\n        print(lef + mid + rig)", "def solve(n):\n    if n == 2 or n == 3:\n        print(-1)\n        return\n    if n == 4:\n        print(' '.join(list(map(str, [2, 4, 1, 3]))))\n        return\n    if n == 5:\n        print(' '.join(list(map(str, [1, 3, 5, 2, 4]))))\n        return\n    if n == 6:\n        print(' '.join(list(map(str, [1, 4, 6, 3, 5, 2]))))\n        print()\n    else:\n        arr1 = []\n        arr2 = []\n        for i in range(1, n + 1):\n            if i % 2 == 1:\n                arr1.append(i)\n            else:\n                arr2.append(i)\n        if n % 2 == 1:\n            t1 = arr2.pop()\n            t2 = arr2.pop()\n            arr2.append(t1)\n            arr2.append(t2)\n            arr2 = arr2[::-1]\n            print(' '.join(list(map(str, arr1 + arr2))))\n        else:\n            t1 = arr1.pop()\n            t2 = arr1.pop()\n            t3 = arr2.pop()\n            t4 = arr2.pop()\n            arr1.append(t4)\n            arr1.append(t3)\n            arr2.append(t1)\n            arr2.append(t2)\n            arr2 = arr2[::-1]\n            print(' '.join(list(map(str, arr1 + arr2))))\nT = int(input())\nfor ti in range(1, T + 1):\n    n = int(input())\n    solve(n)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    l = []\n    na = n\n    if n > 3:\n        for ii in range(int(n / 5) - 1):\n            l.append(na)\n            na -= 2\n            l.append(na)\n            na -= 2\n            l.append(na)\n            na += 3\n            l.append(na)\n            na -= 2\n            l.append(na)\n            na -= 2\n        x = n % 5 + 5\n        if x == 5:\n            l = l + [4, 2, 5, 3, 1]\n        elif x == 6:\n            l = l + [5, 3, 6, 2, 4, 1]\n        elif x == 7:\n            l = l + [5, 1, 3, 6, 2, 4, 7]\n        elif x == 8:\n            l = l + [8, 5, 1, 3, 6, 2, 4, 7]\n        else:\n            l = l + [9, 7, 4, 2, 6, 3, 1, 5, 8]\n        if n == 4:\n            l = [3, 1, 4, 2]\n        print(' '.join(map(str, l)))\n    else:\n        print(-1)", "import sys\nimport math\nfrom collections import defaultdict\n\ndef solve(test):\n    n = int(input())\n    if n < 4:\n        print(-1)\n        return\n    res = []\n    s = 1 if n & 1 else 2\n    while s <= n:\n        res.append(str(s))\n        s += 2\n    s -= 5\n    res.append(str(s))\n    s += 2\n    res.append(str(s))\n    s -= 4\n    while len(res) < n:\n        res.append(str(s))\n        s -= 2\n    print(' '.join(res))\ntest_cases = int(input())\nfor t in range(1, test_cases + 1):\n    solve(t)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n < 4:\n        print(-1)\n    else:\n        if n % 2 == 0:\n            p = n - 1\n        else:\n            p = n\n        result = ''\n        for i in range(p, 0, -2):\n            result += str(i) + ' '\n        result += '4 2 '\n        if n % 2 == 0:\n            p = n\n        else:\n            p = n - 1\n        for i in range(6, p + 1, 2):\n            result += str(i) + ' '\n        print(result)", "PATTERN = {0: [1, 4, 2, 5, 3], 1: [1, 4, 2, 6, 3, 5], 2: [1, 4, 2, 6, 3, 7, 5], 3: [1, 5, 2, 6, 3, 7, 4, 8], 4: [1, 4, 2, 5, 3, 7, 9, 6, 8]}\n\ndef solve(n):\n    if n < 4:\n        ans = -1\n    elif n == 4:\n        ans = [2, 4, 1, 3]\n    else:\n        ans = []\n        common = n // 5 - 1\n        mod = n % 5\n        for jj in range(common):\n            ans += [jj * 5 + k for k in PATTERN[0]]\n        ans += [common * 5 + k for k in PATTERN[mod]]\n    return ans\n\ndef output(arr):\n    if isinstance(arr, list):\n        print(' '.join((str(k) for k in arr)))\n    else:\n        print(arr)\nt = int(input())\nfor ___ in range(t):\n    n = int(input())\n    ans = solve(n)\n    output(ans)", "import sys, heapq\nfrom collections import *\nfrom functools import lru_cache\nsys.setrecursionlimit(10 ** 6)\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        if n < 4:\n            print(-1)\n            continue\n        res = [i for i in range(1, n + 1)[::-1] if i & 1]\n        res += [4, 2]\n        res += [i for i in range(6, n + 1) if i & 1 == 0]\n        print(' '.join(map(str, res)))\nmain()", "def solve():\n    n = int(input())\n    if n <= 3:\n        print(-1)\n        return\n    if n == 4:\n        print('3 1 4 2')\n        return\n    if n > 4:\n        final = '3 1 4 2'\n        for i in range(5, n + 1):\n            if i % 2 == 1:\n                final = str(i) + ' ' + final\n            else:\n                final = final + ' ' + str(i)\n        print(final)\nt = int(input())\nfor tt in range(0, t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 2 or n == 3:\n        print(-1)\n        continue\n    if n == 4:\n        print('3 1 4 2')\n        continue\n    ans = ''\n    start = 1\n    r = n % 5\n    if r == 1:\n        ans += '1 4 2 6 3 5 '\n        start = 7\n    elif r == 2:\n        ans += '1 3 6 2 4 7 5 '\n        start = 8\n    elif r == 3:\n        ans += '1 4 8 5 2 6 3 7 '\n        start = 9\n    elif r == 4:\n        ans += '1 3 5 9 7 4 2 6 8 '\n        start = 10\n    for i in range(start, n + 1, 5):\n        ans += str(i) + ' ' + str(i + 3) + ' ' + str(i + 1) + ' ' + str(i + 4) + ' ' + str(i + 2) + ' '\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = []\n    if n < 4:\n        print('-1')\n    else:\n        if n % 2 == 0:\n            b = n - 1\n        else:\n            b = n\n        for i in range(b, 0, -2):\n            a.append(i)\n        a.append(4)\n        a.append(2)\n        if n >= 6:\n            even = 6\n            for i in range(even, n + 1, 2):\n                a.append(i)\n        print(*a, sep=' ')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n <= 3:\n        print(-1)\n    elif n == 4:\n        print('3 1 4 2')\n    else:\n        for i in range(1, n + 1, 2):\n            print(i, end=' ')\n        if n % 2 == 1:\n            print(n - 3, n - 1, end=' ')\n            for i in range(n - 5, 1, -2):\n                print(i, end=' ')\n        else:\n            print(n - 4, n, n - 2, end=' ')\n            for i in range(n - 6, 1, -2):\n                print(i, end=' ')\n        print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n <= 3:\n        print(-1)\n    elif n == 4:\n        print('3 1 4 2')\n    else:\n        for i in range(1, n + 1, 2):\n            print(i, end=' ')\n        if n % 2 == 1:\n            print(n - 3, n - 1, end=' ')\n            for i in range(n - 5, 1, -2):\n                print(i, end=' ')\n        else:\n            print(n - 4, n, n - 2, end=' ')\n            for i in range(n - 6, 1, -2):\n                print(i, end=' ')\n        print()", "def solve():\n    N = int(input())\n    if N <= 3:\n        print(-1, end=' ')\n        return\n    f = N\n    if N % 2 == 0:\n        f -= 1\n    for i in range(f, 0, -2):\n        print(i, end=' ')\n    print('4 2', end=' ')\n    for i in range(6, N + 1, 2):\n        print(i, end=' ')\n\ndef main():\n    T = int(input())\n    while T != 0:\n        solve()\n        print()\n        T -= 1\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(1)\n    elif n <= 3:\n        print(-1)\n    elif n == 4:\n        print(*[3, 1, 4, 2])\n    elif n == 5:\n        print(*[3, 1, 4, 2, 5])\n    elif n == 6:\n        print(*[3, 1, 5, 2, 4, 6])\n    else:\n        x = n // 4\n        ans = [2, 4, 1, 3]\n        for i in range(x - 1):\n            (a, b, c, d) = (ans[-4], ans[-3], ans[-2], ans[-1])\n            ans.append(a + 4)\n            ans.append(b + 4)\n            ans.append(c + 4)\n            ans.append(d + 4)\n        x = n % 4\n        if x == 0:\n            print(*ans)\n        elif x == 1:\n            ans.insert(len(ans) - 1, n)\n            print(*ans)\n        elif x == 2:\n            ans.insert(len(ans) - 1, n - 1)\n            ans.append(n)\n            print(*ans)\n        else:\n            ans.insert(len(ans) - 1, n - 2)\n            ans.insert(len(ans) - 4, n - 1)\n            ans.append(n)\n            print(*ans)", "I = input\nfor i in ' ' * int(I()):\n    n = int(input())\n    if n < 4:\n        print(-1)\n    else:\n        print(*list(range(1, n + 1, 2))[::-1] + [4, 2] + list(range(6, n + 1, 2)))", "def f(n):\n    L = []\n    if n < 4:\n        return -1\n    for i in range(n, 0, -1):\n        if i % 2 == 1:\n            L.append(i)\n    L.append(4)\n    L.append(2)\n    for i in range(6, n + 1, 2):\n        L.append(i)\n    return L\nn = int(input())\nfor i in range(n):\n    j = int(input())\n    if j < 4:\n        print(-1)\n    else:\n        k = f(j)\n        for i in range(j - 1):\n            print(k[i], end=' ')\n        print(k[j - 1])", "for i in range(int(input())):\n    n = int(input())\n    if n <= 3:\n        print(-1)\n    else:\n        s = ' 3 1 4 2 '\n        f = 0\n        for i in range(5, n + 1):\n            if f == 0:\n                s = ' ' + str(i) + s\n                f = 1\n            else:\n                s = s + str(i) + ' '\n                f = 0\n        print(s[1:len(s)])", "import sys, heapq\nfrom collections import *\nfrom functools import lru_cache\nsys.setrecursionlimit(10 ** 6)\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        if n < 4:\n            print(-1)\n            continue\n        res = []\n        for i in range(n // 4):\n            res += [x + i * 4 for x in [2, 4, 1, 3]]\n        res += [i for i in range(n // 4 * 4 + 1, n + 1)]\n        if n % 4 == 2:\n            (res[-2], res[-3]) = (res[-3], res[-2])\n        elif n % 4 == 3:\n            p = [-7, -2, -6, -1, -3, -4, -5]\n            tmp = list(map(lambda x: res[p[x]], range(7)))\n            res = res[:-7] + tmp\n        print(' '.join(map(str, res)))\nmain()", "import sys\nimport math\nfrom bisect import bisect_right as br\nfrom itertools import combinations as cb\n\ndef int_arr():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef str_arr():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    n = int(input())\n    if n < 4:\n        print(-1)\n        continue\n    elif n == 4:\n        print(3, 1, 4, 2)\n        continue\n    ans = []\n    for i in range(1, n + 1, 2):\n        ans.append(i)\n    if n % 2 != 0:\n        ans.append(n - 3)\n        skip = n - 3\n        itr = n - 1\n    else:\n        ans.append(n - 4)\n        skip = n - 4\n        itr = n\n    for i in range(itr, 0, -2):\n        if i != skip:\n            ans.append(i)\n    print(*ans)", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    out = []\n    if n <= 3:\n        print(-1)\n    else:\n        for i in range(n, 0, -1):\n            if i % 2 != 0:\n                out.append(i)\n        ind = len(out)\n        for i in range(1, n + 1):\n            if i % 2 == 0:\n                out.append(i)\n        (out[ind], out[ind + 1]) = (out[ind + 1], out[ind])\n        print(*out)", "for _ in range(int(input())):\n    n = int(input())\n    if n < 4:\n        print(-1)\n    else:\n        ans = '3 1 4 2'\n        if n == 4:\n            print(ans)\n        else:\n            for i in range(4, n + 1):\n                if i % 2 == 1:\n                    ans = str(i) + ' ' + ans\n            for i in range(5, n + 1):\n                if i % 2 == 0:\n                    ans = ans + ' ' + str(i)\n            print(ans)", "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        if n <= 3:\n            print(-1)\n        elif n == 4:\n            ans = [3, 1, 4, 2]\n            print(*ans)\n        elif n == 5:\n            ans = [2, 4, 1, 3, 5]\n            print(*ans)\n        else:\n            if n % 2 == 0:\n                even = n\n                odd = n - 1\n            else:\n                even = n - 1\n                odd = n\n            L = []\n            while even > 6:\n                L.append(even)\n                even -= 2\n            R = []\n            while odd > 5:\n                R.append(odd)\n                odd -= 2\n            R.reverse()\n            ans = L + [6, 2, 4, 1, 3, 5] + R\n            print(*ans)\nmain()", "t = int(input())\nwhile t:\n    n = int(input())\n    if n < 4:\n        print(-1)\n    elif n == 4:\n        print(3, 1, 4, 2)\n    else:\n        o = []\n        e = []\n        for i in range(1, n + 1):\n            if i % 2 == 0:\n                e.append(i)\n            else:\n                o.append(i)\n        if abs(o[-1] - e[-2]) < 2:\n            o.append(e[-3])\n            o.append(e[-1])\n            o.append(e[-2])\n            for i in range(len(e) - 4, -1, -1):\n                o.append(e[i])\n        else:\n            o.append(e[-2])\n            o.append(e[-1])\n            for i in range(len(e) - 3, -1, -1):\n                o.append(e[i])\n        s = ''\n        for i in o:\n            s += str(i) + ' '\n        print(s)\n    t -= 1", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    s = ''\n    if n < 4:\n        print('-1')\n        continue\n    even = '4 2 '\n    for i in range(n, -1, -1):\n        if i % 2 == 1:\n            s += str(i) + ' '\n    for i in range(6, n + 1):\n        if i % 2 == 0:\n            even += str(i) + ' '\n    print(s + even)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    L = []\n    if n >= 5:\n        for i in range(1, n + 1, 2):\n            L.append(i)\n        L.append(L[-1] - 3)\n        if n % 2 == 0:\n            L.append(L[-1] + 4)\n            L.append(L[-1] - 2)\n        if n % 2 == 1:\n            L.append(L[-1] + 2)\n        L.append(L[-1] - 4)\n        while L[-1] > 0:\n            L.append(L[-1] - 2)\n        s = ''\n        for i in range(len(L) - 1):\n            s += str(L[i]) + ' '\n        print(s)\n    elif n == 4:\n        print('3 1 4 2')\n    else:\n        print(-1)", "tasks = int(input())\nl = []\nfor i in range(tasks):\n    n = int(input())\n    if n < 4:\n        l.append('-1')\n    else:\n        li = ['3', '1', '4', '2']\n        for j in range(4, n):\n            if j % 2 == 1:\n                li.append(str(j + 1))\n            else:\n                li.insert(0, str(j + 1))\n        l.append(li)\nfor ls in l:\n    if ls == '-1':\n        print('-1')\n    else:\n        print(' '.join(ls))", "def printer(lst):\n    print(' '.join(lst))\nt = int(input())\nfor i in range(t):\n    base = ['3', '1', '4', '2']\n    n = int(input())\n    check = 0\n    if n <= 3:\n        print(-1)\n    else:\n        for x in range(5, n + 1):\n            if check == 0:\n                check = 1\n                base.append(str(x))\n            else:\n                check = 0\n                base.insert(0, str(x))\n        printer(base)", "for i in range(int(input())):\n    n = int(input())\n    if n <= 3:\n        print(-1)\n        continue\n    mid = '3 1 4 2'\n    if n == 4:\n        print(mid)\n        continue\n    ans = mid\n    for i in range(5, n + 1):\n        if i & 1:\n            ans = ans + ' ' + str(i)\n        else:\n            ans = str(i) + ' ' + ans\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n >= 4:\n        if n % 4 < 2:\n            for i in range(0, n - 1, 4):\n                print(str(2 + i) + ' ' + str(4 + i) + ' ' + str(1 + i) + ' ' + str(3 + i), end=' ')\n            if n % 4 == 1:\n                print(n)\n            else:\n                print()\n        elif n % 4 == 2:\n            for i in range(0, n - 8, 4):\n                print(str(2 + i) + ' ' + str(4 + i) + ' ' + str(1 + i) + ' ' + str(3 + i), end=' ')\n            print(str(n - 5) + ' ' + str(n - 2) + ' ' + str(n - 4) + ' ' + str(n) + ' ' + str(n - 3) + ' ' + str(n - 1))\n        else:\n            for i in range(0, n - 8, 4):\n                print(str(2 + i) + ' ' + str(4 + i) + ' ' + str(1 + i) + ' ' + str(3 + i), end=' ')\n            print(str(n - 4) + ' ' + str(n) + ' ' + str(n - 2) + ' ' + str(n - 5) + ' ' + str(n - 1) + ' ' + str(n - 3) + ' ' + str(n - 6))\n    else:\n        print(-1)", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    l = list(range(2, n + 1, 2))\n    if l[-1] - 3 >= 1:\n        l.append(l[-1] - 3)\n        if l[-1] + 4 == n:\n            c = l[-1]\n            l.append(n)\n            num = n - 2\n            while num >= 1:\n                if num != c:\n                    l.append(num)\n                num -= 2\n        else:\n            l.append(l[-1] + 2)\n            num = l[-1] - 4\n            while num >= 1:\n                l.append(num)\n                num -= 2\n    if len(l) == n:\n        print(*l)\n    else:\n        print(-1)", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    if n < 4:\n        print(-1)\n        continue\n    ans = []\n    i = 2 - n % 2\n    while i <= n:\n        ans.append(i)\n        i = i + 2\n    ans.append(n - 3)\n    ans.append(n - 1)\n    j = n - 5\n    while j >= 1:\n        ans.append(j)\n        j = j - 2\n    print(*ans)", "n = int(input())\ne10 = [[], [], [], [], [3, 1, 4, 2], [3, 1, 4, 2, 5], [3, 6, 2, 4, 1, 5], [1, 3, 6, 2, 4, 7, 5], [1, 3, 6, 2, 4, 7, 5, 8], [2, 5, 1, 3, 7, 4, 8, 6, 9], [2, 5, 1, 3, 7, 4, 8, 10, 6, 9], [2, 5, 1, 3, 7, 4, 8, 10, 6, 9, 11], [2, 5, 1, 3, 7, 4, 8, 12, 10, 6, 9, 11], [2, 5, 1, 3, 7, 4, 8, 12, 10, 6, 9, 11, 13]]\nfor _ in range(n):\n    m = int(input())\n    if m <= 3:\n        print(-1)\n        continue\n    if m % 10 == 2 or m % 10 == 3 or m % 10 == 1:\n        cnt = m // 10 - 1\n        for i in range(cnt):\n            for j in range(10):\n                print(i * 10 + e10[10][j], end=' ')\n        for i in e10[10 + m % 10]:\n            print(i + 10 * cnt, end=' ')\n        print()\n    else:\n        cnt = m // 10\n        rem = m % 10\n        for i in range(cnt):\n            for j in range(10):\n                print(i * 10 + e10[10][j], end=' ')\n        if rem == 0:\n            print()\n            continue\n        else:\n            for i in e10[rem]:\n                print(i + 10 * cnt, end=' ')\n            print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n <= 3:\n        print('-1')\n        continue\n    cnt = int(n / 2) - 2\n    N = n\n    if n % 2 == 0:\n        N -= 1\n    while N > 0:\n        print(N, end=' ')\n        N -= 2\n    print('4 2', end=' ')\n    k = 6\n    while cnt > 0:\n        print(k, end=' ')\n        k += 2\n        cnt -= 1\n    print()", "t = int(input())\nflag = True\nwhile flag:\n    t -= 1\n    if t == 0:\n        flag = False\n    v = list(map(int, input().strip().split()))[:1]\n    ans = []\n    if v[0] < 4:\n        print('-1')\n    else:\n        x = v[0] if v[0] % 2 == 1 else v[0] - 1\n        while x >= 1:\n            print(x, end=' ')\n            x -= 2\n        print('4 2 ', end='')\n        x = 6\n        while x <= v[0]:\n            print(x, end=' ')\n            x += 2\n        print()", "test_size = int(input())\nn_arr = []\nfor i in range(test_size):\n    n = int(input())\n    if n < 4:\n        print(-1)\n    else:\n        res_str = '3 1 4 2'\n        for num in range(5, n + 1):\n            res_str = f'{str(num)} {res_str}' if num % 2 == 0 else f'{res_str} {str(num)}'\n        print(res_str)", "t = int(input())\ne = []\no = []\nans = ''\nfor i in range(t):\n    n = int(input())\n    if n < 4:\n        print(-1)\n    else:\n        for i in range(1, n + 1):\n            if i % 2 == 0 and (i != 2 and i != 4):\n                e.append(i)\n            elif i != 2 and i != 4:\n                o.append(i)\n        for c in o[::-1]:\n            ans += str(c) + ' '\n        ans += '4 2 '\n        for c in e:\n            ans += str(c) + ' '\n        print(ans)\n    e = []\n    o = []\n    ans = ''", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    d = []\n    if n <= 3:\n        print(-1)\n    else:\n        s = [i for i in range(1, n + 1)]\n        a = s[0::2]\n        b = s[1::2]\n        if n % 2 != 0:\n            r = b.pop(-2)\n            b.append(r)\n        else:\n            r = a.pop(-2)\n            a.append(r)\n        b.reverse()\n        d.append(a)\n        d.append(b)\n        print(*d[0], *d[1])", "for _ in range(int(input())):\n    n = int(input())\n    print(*[list(range(n - n % 2, 4, -2)) + [2, 4] + list(range(1, n + 1, 2)), [-1]][n < 4])", "def Zs():\n    return list(map(int, input().split()))\n\ndef Z():\n    return int(input())\n\ndef solve(n):\n    if n <= 3:\n        return None\n    ans = []\n    k = 1\n    while n >= 8:\n        ans.extend([k + 1, k + 3, k, k + 2])\n        n -= 4\n        k += 4\n    if n == 4:\n        ans.extend(map(lambda x: x + k, [2, 0, 3, 1]))\n    elif n == 5:\n        ans.extend(map(lambda x: x + k, [2, 0, 4, 1, 3]))\n    elif n == 6:\n        ans.extend(map(lambda x: x + k, [2, 0, 4, 1, 3, 5]))\n    else:\n        ans.extend(map(lambda x: x + k, [2, 0, 4, 1, 5, 3, 6]))\n    return ans\nfor _ in range(Z()):\n    n = Z()\n    ans = solve(n)\n    if ans is not None:\n        print(*ans)\n    else:\n        print(-1)", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    ans = []\n    if n == 2 or n == 3:\n        print('-1')\n    elif n == 4:\n        print(2, 4, 1, 3)\n    else:\n        for i in range(2 - n % 2, n + 1, 2):\n            ans.append(i)\n        ans.extend([n - 3, n - 1])\n        for i in range(n - 5, 0, -2):\n            ans.append(i)\n        print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    ans = []\n    if n <= 3:\n        print(-1)\n    elif n % 2 == 1:\n        val = n\n        while val >= 1:\n            ans.append(val)\n            val -= 2\n        if (n - 1) % 4 == 0:\n            val = 4\n            while val <= n - 1:\n                ans.append(val)\n                val += 4\n            val -= 4\n            val -= 2\n            while val > 1:\n                ans.append(val)\n                val -= 4\n        else:\n            val = 4\n            while val <= n - 1:\n                ans.append(val)\n                val += 4\n            val -= 4\n            val += 2\n            ans.append(val)\n            val -= 4\n            while val > 1:\n                ans.append(val)\n                val -= 4\n    else:\n        val = n - 1\n        while val >= 1:\n            ans.append(val)\n            val -= 2\n        if n % 4 == 0:\n            val = 4\n            while val <= n:\n                ans.append(val)\n                val += 4\n            val -= 4\n            val -= 2\n            while val > 1:\n                ans.append(val)\n                val -= 4\n        else:\n            val = 4\n            while val <= n:\n                ans.append(val)\n                val += 4\n            val -= 4\n            val += 2\n            ans.append(val)\n            val -= 4\n            while val > 1:\n                ans.append(val)\n                val -= 4\n    print(*ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 2 or n == 3:\n        print(-1)\n    elif n == 4:\n        print(2, 4, 1, 3)\n    else:\n        ans = []\n        i = 1\n        while i <= n:\n            ans.append(i)\n            i = i + 2\n        i = n if n % 2 == 0 else n - 1\n        while i > 0:\n            ans.append(i)\n            i = i - 2\n        f = 0\n        for i in range(n - 1):\n            if abs(ans[i] - ans[i + 1]) == 1:\n                if n % 2 == 0:\n                    if i + 3 <= n - 1:\n                        (ans[i + 1], ans[i + 3]) = (ans[i + 3], ans[i + 1])\n                        (ans[i + 2], ans[i + 3]) = (ans[i + 3], ans[i + 2])\n                    else:\n                        f = 1\n                elif i + 2 <= n - 1:\n                    (ans[i + 1], ans[i + 2]) = (ans[i + 2], ans[i + 1])\n                else:\n                    f = 1\n                break\n        if f:\n            print(-1)\n        else:\n            print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    if n <= 3:\n        print(-1)\n    else:\n        ans = []\n        for i in range(n, 0, -1):\n            if i % 2 == 1:\n                ans.append(i)\n        ans.append(4)\n        ans.append(2)\n        for i in range(6, n + 1):\n            if i % 2 == 0:\n                ans.append(i)\n        print(*ans)", "for q in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(1)\n    elif n < 4:\n        print(-1)\n    elif n == 4:\n        print(3, 1, 4, 2)\n    else:\n        ans = []\n        while n >= 10:\n            ans.extend([n, n - 3, n - 1, n - 4, n - 2])\n            n -= 5\n        if n == 5:\n            ans.extend([n, n - 3, n - 1, n - 4, n - 2])\n        elif n == 6:\n            ans.extend([n, n - 3, n - 1, n - 4, n - 2, n - 5])\n        elif n == 7:\n            ans.extend([n, n - 3, n - 1, n - 5, n - 2, n - 6, n - 4])\n        elif n == 8:\n            ans.extend([n, n - 3, n - 1, n - 5, n - 2, n - 6, n - 4, n - 7])\n        elif n == 9:\n            ans.extend([n, n - 3, n - 1, n - 4, n - 7, n - 5, n - 2, n - 6, n - 8])\n        print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    if n < 4:\n        print(-1)\n        continue\n    if n % 2 == 0:\n        a = list(range(2, n + 1, 2))\n    else:\n        a = list(range(1, n + 1, 2))\n    a.append(n - 3)\n    a.append(n - 1)\n    a.extend(range(n - 5, 0, -2))\n    print(*a)", "for q in range(int(input())):\n    n = int(input())\n    if n <= 3:\n        print('-1')\n    else:\n        res = []\n        ans = []\n        for i in range(1, n + 1, 2):\n            res.append(i)\n        for i in range(2, n + 1, 2):\n            ans.append(i)\n        (ans[0], ans[1]) = (ans[1], ans[0])\n        print(*res[::-1], *ans)", "from sys import stdin\n\ndef a4(p):\n    print(p + 1, p + 3, p, p + 2, end=' ')\n\ndef a5(p):\n    print(p, p + 3, p + 1, p + 4, p + 2, end=' ')\n\ndef a6(p):\n    print(p, p + 3, p + 1, p + 4, p + 2, p + 5, end=' ')\n\ndef a7(p):\n    print(p, p + 3, p + 1, p + 5, p + 2, p + 4, p + 6, end=' ')\n\ndef solve(n):\n    i = 1\n    while n >= 8:\n        a4(i)\n        i += 4\n        n -= 4\n    if n == 4:\n        a4(i)\n    elif n == 5:\n        a5(i)\n    elif n == 6:\n        a6(i)\n    elif n == 7:\n        a7(i)\n    print()\n\ndef main():\n    inp = stdin.readline\n    for _ in range(int(inp())):\n        n = int(inp())\n        if n <= 3:\n            print(-1)\n        else:\n            solve(n)\nmain()", "def solve():\n    n = int(input())\n    if n == 2 or n == 3:\n        print(-1)\n        return\n    if n % 2 != 0:\n        li = [i for i in range(1, n + 1, 2)]\n        li2 = [i for i in range(2, n, 2)]\n        li = li + li2[::-1]\n        x = n // 2 + 1\n        (li[x], li[x + 1]) = (li[x + 1], li[x])\n    else:\n        li = [i for i in range(1, n, 2)]\n        li2 = [i for i in range(2, n + 1, 2)]\n        li = li2 + li[::-1]\n        x = n // 2\n        (li[x], li[x + 1]) = (li[x + 1], li[x])\n    print(*li)\n    return\nt = int(input())\nfor i in range(t):\n    solve()", "for i in range(int(input())):\n    n = int(input())\n    if n < 4:\n        print(-1)\n    else:\n        i = [x for x in range(n, 0, -1) if x % 2 == 1]\n        m = [4, 2]\n        u = [x for x in range(6, n + 1, 2)]\n        print(*i + m + u)", "for t in range(int(input())):\n    n = int(input())\n    if n < 4:\n        print(-1)\n        continue\n    arr = []\n    if n % 2 == 0:\n        arr = [i for i in range(2, n + 1, 2)]\n    else:\n        arr = [i for i in range(1, n + 1, 2)]\n    arr.append(n - 3)\n    arr.append(n - 1)\n    for i in range(n - 5, 0, -2):\n        arr.append(i)\n    print(*arr)", "t = list(range(1001))\n(t[2], t[4]) = (4, 2)\nfor _ in range(int(input())):\n    n = int(input()) + 1\n    print(*([-1] if 2 < n < 5 else t[2:n:2][::-1] + t[1:n:2]))", "def solve():\n    n = int(input())\n    if n < 4:\n        print(-1)\n        return\n    ans = list(range(n, 4, -2)) + [3, 1, 4, 2] + list(range(n - 1, 4, -2))[::-1]\n    print(*ans)\nfor _ in range(int(input())):\n    solve()", "n = int(input())\nfor i in range(0, n):\n    l = int(input())\n    str_ = ''\n    if int(l) <= 3:\n        print('-1')\n    elif int(l) == 4:\n        print('3 1 4 2')\n    else:\n        k = int(l)\n        t = k - (k + 1) % 2\n        str_ = str_ + str(t)\n        t = t - 2\n        while t > 0:\n            str_ = str_ + ' ' + str(t)\n            t = t - 2\n        str_ = str_ + ' 4 2'\n        t = 6\n        while t <= k:\n            str_ = str_ + ' ' + str(t)\n            t = t + 2\n        print(str_)", "for i in range(int(input())):\n    n = int(input())\n    if n < 4:\n        print(-1)\n    else:\n        i = [x for x in range(n, 0, -1) if x % 2 == 1]\n        m = [4, 2]\n        u = [x for x in range(6, n + 1, 2)]\n        print(*i + m + u)", "def builder(n):\n    if n < 4:\n        return [-1]\n    else:\n        lst = list()\n        for i in range(n, -1, -1):\n            if i % 2 != 0:\n                lst.append(i)\n        lst.append(4)\n        lst.append(2)\n        for i in range(6, n + 1, 2):\n            lst.append(i)\n        return lst\nfor _ in range(int(input())):\n    m = int(input())\n    print(*builder(m))", "from math import sqrt\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    if n < 4:\n        print(-1)\n        continue\n    if n % 2 == 0:\n        xe = n\n        xo = n - 1\n    else:\n        xe = n - 1\n        xo = n\n    ans = []\n    while xo >= 1:\n        ans.append(xo)\n        xo -= 2\n    ans.append(4)\n    ans.append(2)\n    j = 6\n    while j <= xe:\n        ans.append(j)\n        j += 2\n    print(*ans, sep=' ')", "for _ in range(int(input())):\n    n = int(input())\n    if n < 4:\n        print(-1)\n    else:\n        r = list(range(1, n + 1, 2))[::-1] + [4, 2] + list(range(6, n + 1, 2))\n        print(*r)"]