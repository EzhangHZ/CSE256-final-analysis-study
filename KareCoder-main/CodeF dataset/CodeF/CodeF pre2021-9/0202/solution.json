["def f(n, k):\n    if n >= k:\n        if n % k == 0:\n            return 1\n        else:\n            return 2\n    elif k % n == 0:\n        return k // n\n    else:\n        return k // n + 1\nm = []\nx = int(input())\nfor i in range(x):\n    y = input()\n    y1 = y.split(' ')\n    y2 = [int(t) for t in y1]\n    m.append(y2)\nfor j in range(x):\n    print(f(m[j][0], m[j][1]))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n > k:\n        print(1 if n % k == 0 else 2)\n    elif n == k:\n        print(1)\n    else:\n        print(k // n + (0 if k % n == 0 else 1))", "k = int(input())\nwhile k > 0:\n    l = list(map(int, input().split()))\n    a = l[0]\n    b = l[1]\n    if a == b or a % b == 0:\n        print(1)\n    elif a > b:\n        print(2)\n    elif b / a > round(b / a):\n        print(round(b / a) + 1)\n    else:\n        print(round(b / a))\n    k -= 1", "from math import ceil\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k < n:\n        k *= ceil(n / k)\n    m = k / n\n    if m % 1 == 0:\n        print(int(m))\n    else:\n        print(ceil(m))", "t = int(input())\nfor _ in range(t):\n    inp = input().split()\n    n = int(inp[0])\n    k = int(inp[1])\n    dv = k // n\n    if dv > 0:\n        if k % n > 0:\n            dv += 1\n        print(dv)\n    else:\n        vd = n // k\n        if n % k > 0:\n            vd += 1\n        k *= vd\n        dv = k // n\n        if k % n > 0:\n            dv += 1\n        print(dv)", "import math\nfrom sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    k = k * ((n + k - 1) // k)\n    print((k + n - 1) // n)", "def ceil(x):\n    y = int(x)\n    return y + int(x != y)\n\ndef _que_40(N, K):\n    if N % K == 0:\n        return 1\n    return max(2, ceil(K / N))\n\ndef que_40():\n    for t in range(int(input())):\n        (N, K) = map(int, input().split())\n        print(_que_40(N, K))\nque_40()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k < n:\n        print(2 if n % k else 1)\n    else:\n        print((k + n - 1) // n)", "for _ in range(int(input())):\n    (n, k) = map(int, input().strip().split())\n    if n == 1:\n        print(k)\n    elif k == 1 or n % k == 0:\n        print(1)\n    elif k > n and k % n == 0:\n        print(k // n)\n    elif k > n:\n        print(k // n + 1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % k == 0:\n        print(1)\n    else:\n        print(max(2, (n + k - 1) // n))", "tc = int(input())\nfor i in range(tc):\n    (n, k) = list(map(int, input().split()))\n    if n % k == 0:\n        print(1)\n    elif n <= k:\n        if k % n == 0:\n            print(k // n)\n        else:\n            print(k // n + 1)\n    else:\n        print(2)", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print(1)\n    elif n > k:\n        if n % k == 0:\n            print(1)\n        else:\n            print(2)\n    elif n == k:\n        print(1)\n    else:\n        print(math.ceil(k / n))", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    cf = (n + k - 1) // k\n    k *= cf\n    print((k + n - 1) // n)", "def solve():\n    (n, k) = map(int, input().split())\n    if n > k:\n        if n % k == 0:\n            return 1\n        else:\n            return 2\n    if k % n == 0:\n        return k // n\n    else:\n        return k // n + 1\nfor _ in range(int(input())):\n    print(solve())", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    cf = (n + k - 1) // k\n    k *= cf\n    print((k + n - 1) // n)", "t = int(input())\nfor i in range(t):\n    (n, k) = [int(s) for s in input().split()]\n    if n > k:\n        x = (n - 1) // k\n        k += k * x\n    if k % n == 0:\n        print(k // n)\n    else:\n        print(k // n + 1)", "for _ in range(0, int(input())):\n    (n, k) = map(int, input().split())\n    if n >= k:\n        print(1 + 0 - -(n % k) // n)\n    else:\n        print(0 - -k // n)", "tcs = int(input())\nfor i in range(tcs):\n    (n, k) = list(map(int, input().split()))\n    cf = int((n + k - 1) / k)\n    k *= cf\n    print(int((k + n - 1) / n))", "import math\nn = int(input())\nfor _ in range(n):\n    (a, b) = map(int, input().split())\n    b = math.ceil(a / b) * b\n    print(math.ceil(b / a))", "nn = int(input())\nwhile nn != 0:\n    (n, k) = map(int, input().split())\n    if n % k == 0:\n        print(1)\n    elif n > k:\n        print(2)\n    else:\n        print(k // n + (k % n != 0))\n    nn -= 1", "for _ in [*open(0)][1:]:\n    (x, y) = map(int, _.split())\n    print(-(-x // y * y // x))", "for g in [*open(0)][1:]:\n    (n, k) = map(int, g.split())\n    print(((k + n - 1) // n, 2 - (n % k == 0))[k < n])", "import sys\nt = int(input().strip())\nfor i in range(t):\n    (n, k) = map(int, input().strip().split())\n    cf = (n + k - 1) // k\n    a_max = (cf * k + n - 1) // n\n    print(a_max)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n < k:\n        print(k // n + (k % n > 0))\n    elif n % k == 0:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nfor i in range(t):\n    s = [int(x) for x in input().split()]\n    n = s[0]\n    k = s[1]\n    m = int((n + k - 1) / k)\n    k *= m\n    answer = int((k + n - 1) / n)\n    print(answer)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % k == 0:\n        a = n // k\n    else:\n        a = n // k + 1\n    k = a * k\n    if k % n == 0:\n        print(k // n)\n    else:\n        print(k // n + 1)", "from math import ceil\nfor t in range(int(input())):\n    (n, k) = map(int, input().split())\n    max_elem = ceil(ceil(n / k) * k / n)\n    print(max_elem)", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n > k:\n        g = math.ceil(n / k)\n        print(math.ceil(k * g / n))\n    else:\n        print(math.ceil(k / n))", "t = int(input())\n\ndef f(n, k):\n    if n == k:\n        res = 1\n    else:\n        (a, b) = (k // n, k % n)\n        res = a if b == 0 else a + 1\n    return res\nfor i in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    if n > k:\n        (a, b) = (n // k, n % k)\n        k = a * k if b == 0 else (a + 1) * k\n    res = f(n, k)\n    print(res)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    new_k = k\n    if new_k < n:\n        if n % new_k != 0:\n            new_k *= n // k + 1\n    if new_k % n == 0:\n        print(new_k // n)\n    else:\n        print(new_k // n + 1)", "def max_element(n, k):\n    sum = (n - 1) / k + 1\n    sum = int(sum)\n    sum *= k\n    return int((sum - 1) / n + 1)\ntest_cases = int(input())\nstring = ''\nfor i in range(test_cases):\n    string += input() + '\\n'\nnum = string.split()\nnum = [int(i) for i in num]\nfor i in range(test_cases):\n    print(max_element(num[2 * i], num[2 * i + 1]))", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, k) = map(int, input().split())\n    if n < k:\n        v = k // n\n        v += 1 if k % n else 0\n    elif n % k == 0:\n        v = 1\n    else:\n        v = 2\n    return v\nfor _ in range(int(input())):\n    print(solve())", "for s in [*open(0)][1:]:\n    (n, k) = map(int, s.split())\n    print(0 - -n // k * k // n)", "import math\nt = int(input())\n(n_l, k_l) = ([], [])\nfor _ in range(t):\n    l = input().split(' ')\n    n_l.append(int(l[0]))\n    k_l.append(int(l[1]))\nfor i in range(t):\n    temp = k_l[i]\n    if n_l[i] > k_l[i]:\n        k_l[i] = math.ceil(n_l[i] / k_l[i]) * k_l[i]\n    print(math.ceil(k_l[i] / n_l[i]))", "import math\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    if b < a:\n        b = b * math.ceil(a / b)\n    print(math.ceil(b / a))", "cases = int(input().strip())\nfor i in range(cases):\n    (n, k) = map(int, input().strip().split())\n    time = 1\n    if k < n:\n        time = n // k\n        if n % k != 0:\n            time += 1\n    target = time * k\n    base = target // n\n    if target % n == 0:\n        print(int(base))\n    else:\n        print(int(base + 1))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    b = n + (k - n) % k\n    print((b + n - 1) // n)", "import sys\n\ndef solution(n: int, k: int):\n    if k % n == 0:\n        return k // n\n    elif n <= k:\n        return k // n + 1\n    elif n % k == 0:\n        return 1\n    else:\n        k = (n // k + 1) * k\n        return k // n + 1\nif sys.argv[-1] == 't':\n    for d in [[1, 5, 5], [2, 5, 3], [5, 3, 2], [4, 3, 2], [8, 8, 1], [4, 8, 2], [8, 4, 1], [3, 5, 2]]:\n        result = solution(d[0], d[1])\n        if result != d[-1]:\n            print(d, result)\nelse:\n    for _ in range(int(input())):\n        (n, k) = [int(d) for d in input().split(' ')]\n        print(solution(n, k))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if n > k:\n        if n % k == 0:\n            print(1)\n        else:\n            print(2)\n    elif k % n == 0:\n        print(k // n)\n    else:\n        print(k // n + 1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n > k:\n        if n % k == 0:\n            print(1)\n        else:\n            print(2)\n    elif k % n == 0:\n        print(k // n)\n    else:\n        print(k // n + 1)", "import math\ncases = int(input())\nwhile cases:\n    cases -= 1\n    (n, k) = map(int, input().split())\n    if k < n:\n        k = math.ceil(n / k) * k\n    print(math.ceil(k / n))", "for s in [*open(0)][1:]:\n    (n, k) = map(int, s.split())\n    print(0 - -n // k * k // n)", "import math\nt = int(input())\nfor x in range(t):\n    (n, k) = map(int, input().split())\n    if n <= k:\n        print(math.floor((n + k - 1) / n))\n    elif n % k == 0 or n % k == 1:\n        print(n % k + 1)\n    elif n % k == 2:\n        print(n % k)\n    else:\n        print(n % k - (n % k - 2))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 1:\n        print(k)\n    elif k == 1:\n        print(1)\n    elif n == k:\n        print(1)\n    elif n > k:\n        if n % k == 0:\n            print(1)\n        else:\n            tmp = n // k\n            k = (tmp + 1) * k\n            print(k // n + 1)\n    elif n < k:\n        if k % n == 0:\n            print(k // n)\n        else:\n            print(k // n + 1)", "import math\ntc = int(input())\nfor i in range(tc):\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    if k >= n:\n        print(int(math.ceil(k / n)))\n    else:\n        upn = int(math.ceil(n / k))\n        k2 = upn * k\n        print(int(math.ceil(k2 / n)))", "import math\n\ndef solve():\n    (n, m) = map(int, input().split())\n    print(math.ceil(math.ceil(n / m) * m / n))\nfor t in range(0, int(input())):\n    solve()", "import math\nt = int(input())\nans = []\nfor i in range(t):\n    nk = [int(j) for j in input().split()]\n    if nk[1] == 1:\n        ans.append(1)\n        continue\n    if nk[0] == nk[1]:\n        ans.append(1)\n    elif nk[1] > nk[0]:\n        ans.append(math.ceil(nk[1] / nk[0]))\n    elif nk[0] % nk[1] == 0:\n        ans.append(1)\n    else:\n        ans.append(2)\nfor i in ans:\n    print(i)", "import math\nt = int(input())\nans = []\nfor i in range(t):\n    nk = [int(j) for j in input().split()]\n    if nk[0] == nk[1]:\n        ans.append(1)\n    elif nk[1] > nk[0]:\n        ans.append(math.ceil(nk[1] / nk[0]))\n    elif nk[0] % nk[1] == 0:\n        ans.append(1)\n    else:\n        ans.append(2)\nfor i in ans:\n    print(i)", "from math import ceil\nt = int(input())\npairs = [list(map(int, input().split())) for i in range(t)]\nfor (n, k) in pairs:\n    sum_a = ceil(n / k) * k\n    y = ceil(sum_a / n)\n    print(y)", "import math\nfor i in range(int(input())):\n    inp = list(map(int, input().split()))\n    n = inp[0]\n    k = inp[1]\n    if k < n:\n        a = n // k + (n % k > 0)\n        print(a * k // n + (a * k % n > 0))\n    else:\n        print(k // n + (k % n > 0))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 1:\n        print(k)\n    elif n < k:\n        a = k // n\n        b = k % n\n        if b != 0:\n            a += 1\n        print(a)\n    elif n == k:\n        print(1)\n    else:\n        c = n // k\n        d = n % k\n        if d != 0:\n            c += 1\n        k *= c\n        a = k // n\n        b = k % n\n        if b != 0:\n            a += 1\n        print(a)", "import math\nfor tt in range(int(input())):\n    (n, k) = map(int, input().split())\n    cnt = 1\n    cnt = (n + k - 1) // k\n    k = k * cnt\n    print((n + k - 1) // n)", "import math\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    print(1 + math.ceil((k - n % k) % k / n))", "t = int(input())\nanswer = []\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    cf = (n + k - 1) // k\n    answer.append(str((cf * k + n - 1) // n))\nprint('\\n'.join(answer))", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    K = k\n    if n > k:\n        if n % k != 0:\n            k = n + k - n % k\n        else:\n            k = n\n    if k % n != 0:\n        k += n - k % n\n    print(k // n)", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    r = k * math.ceil(n / k)\n    if r % n == 0:\n        print(r // n)\n    else:\n        print(math.ceil(r / n))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if n > k:\n        if n % k == 0:\n            print(1)\n        else:\n            print(2)\n    elif n == k:\n        print(1)\n    elif n < k:\n        if k % n == 0:\n            print(int(k / n))\n        else:\n            print(int(k / n) + 1)", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k > n:\n        print(math.ceil(k / n))\n    else:\n        a = math.ceil(n / k)\n        print(math.ceil(k * a / n))", "from math import ceil\nfor _ in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    b = int(ceil(a / b)) * b\n    print(int(ceil(b / a)))", "import math\nt = int(input())\nfor c in range(t):\n    (n, k) = map(int, input().split(' '))\n    cf = math.ceil(n / k)\n    s = cf * k\n    r = math.ceil(s / n)\n    print(r)", "import math\ntestcase = int(input())\n\ndef enter():\n    rseq = input()\n    rseq = rseq.split(' ')\n    rseq = list(map(int, rseq))\n    return rseq\nwhile testcase:\n    c = 0\n    div = enter()\n    a = div[1] / div[0]\n    if div[1] == 1:\n        print(1)\n        testcase -= 1\n        continue\n    if a < 1:\n        c = math.ceil(div[0] / div[1])\n        a = c * div[1] / div[0]\n    print(math.ceil(a))\n    testcase -= 1", "t = int(input())\ni = 0\nans = []\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    if n == k or k == 1:\n        ans.append(1)\n    elif n < k:\n        a = k % n\n        b = int(k / n)\n        if a != 0:\n            b += 1\n        ans.append(b)\n    elif n > k:\n        c = n / k\n        d = n % k\n        if d != 0:\n            c += 1\n        k *= c\n        a = k % n\n        b = int(k / n)\n        if a != 0:\n            b += 1\n        ans.append(b)\n    t -= 1\n    i += 1\nfor i in ans:\n    print(i)", "def do(n, k) -> int:\n    if n <= k:\n        return k // n + (k % n > 0)\n    return 1 + (n % k > 0)\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    print(do(n, k))", "import sys\ninf = sys.stdin\ninput = inf.readline\n\ndef read_one_int():\n    return int(input().rstrip('\\n'))\n\ndef read_list_of_ints():\n    res = [int(val) for val in input().rstrip('\\n').split(' ')]\n    return res\nfrom itertools import permutations\n\ndef check_seq(n, k):\n    if k == n:\n        return 1\n    if k > n:\n        res = k // n\n        if k % n:\n            res += 1\n        return res\n    if not n % k:\n        res = 1\n    else:\n        res = 2\n    return res\n\ndef main():\n    samples = read_one_int()\n    res = ''\n    for _ in range(samples):\n        n_k = read_list_of_ints()\n        res = check_seq(n_k[0], n_k[1])\n        print(res)\nmain()", "def main():\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        print((k - 1) // n + 1 if n < k else 1 + bool(n % k))\nmain()", "t = int(input())\nfor j in range(0, t):\n    l1 = [int(x) for x in input().split()]\n    n = l1[0]\n    k = l1[1]\n    ini_n = n\n    val_to_add_to_n = 0\n    if n < k:\n        val_to_add_to_n = k - n\n    else:\n        val_to_add_to_n = n % k\n    n += val_to_add_to_n\n    ans = n // ini_n\n    if ans * ini_n == n:\n        print(ans)\n    else:\n        print(ans + 1)", "import math as m\nt = int(input())\nres = []\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    res.append(m.ceil(m.ceil(n / k) * k / n))\nfor i in res:\n    print(i)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n % m == 0:\n        print(1)\n        continue\n    a = m\n    if m < n:\n        m = m * (n // m) + m\n    f = m / n\n    if f > int(f):\n        print(int(f) + 1)\n    else:\n        print(int(f))", "for j in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k < n:\n        if n % k == 0:\n            print(1)\n        else:\n            print(2)\n    elif k % n == 0:\n        print(k // n)\n    else:\n        print(k // n + 1)", "import math\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == k:\n        print(1)\n    elif n > k:\n        if n % k == 0:\n            print(1)\n        else:\n            print(2)\n    else:\n        print(math.ceil(k / n))", "l = int(input())\nfor _ in range(l):\n    (n, k) = map(int, input().split())\n    cf = (n + k - 1) // k\n    s = (cf * k + n - 1) // n\n    print(s)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    i = 0\n    if k < n:\n        if n % k == 0:\n            print(1)\n            continue\n        else:\n            k = k * int(n / k + 1)\n    if k % n == 0:\n        print(int(k / n))\n    else:\n        print(int(k / n) + 1)", "from math import ceil\n\ndef fun(ls):\n    n = ls[0]\n    k = ls[1]\n    if n <= k:\n        print(ceil(k / n))\n    else:\n        if k == 1:\n            print(1)\n            return\n        if n % k == 0:\n            print(1)\n            return\n        else:\n            print(2)\nT = int(input())\nfor i in range(T):\n    ls = list(map(int, input().split()))\n    fun(ls)", "from math import ceil\n\ndef solve(n, k):\n    if k < n:\n        return 1 + (n % k != 0)\n    return ceil(k / n)\nt = int(input())\nans = []\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    ans.append(solve(n, k))\nfor i in ans:\n    print(i)", "def round_after(a, b):\n    remainder = 0\n    if a % b > 0:\n        remainder = 1\n    return a // b + remainder\n\ndef K_divisibleSum(n, k):\n    if n == k:\n        return 1\n    if n > k:\n        k = k * round_after(n, k)\n    return round_after(k, n)\nt = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    print(K_divisibleSum(n, k))", "a = int(input())\nfor i in range(a):\n    (N, K) = map(int, input().split())\n    if N <= K:\n        if K % N == 0:\n            print(K // N)\n        else:\n            print(K // N + 1)\n    elif N % K == 0:\n        print(1)\n    else:\n        temp = N // K\n        K = K * (temp + 1)\n        if K % N == 0:\n            print(K // N)\n        else:\n            print(K // N + 1)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k < n:\n        k = k * ((n + k - 1) // k)\n    print((n + k - 1) // n)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n > k:\n        if n % k == 0:\n            print(1)\n        else:\n            print(2)\n    elif k % n == 0:\n        print(k // n)\n    else:\n        print(k // n + 1)", "m = int(input())\nq = []\nfor i in range(m):\n    q.append(list(map(int, input().split())))\nfor x in q:\n    n = x[0]\n    k = x[1]\n    if k > n:\n        if k % n == 0:\n            print(k // n)\n        else:\n            print(k // n + 1)\n    if k < n:\n        if n % k == 0:\n            print(1)\n        else:\n            tk = k * (n // k + 1)\n            print(tk // n + 1)\n    if k == n:\n        print(1)", "l = int(input())\n\ndef up_division(a, b):\n    if a % b == 0:\n        return a // b\n    else:\n        return a // b + 1\nfor i in range(l):\n    (n, k) = list(map(int, input().split()))\n    x = up_division(n, k)\n    S = k * x\n    maks = up_division(S, n)\n    print(maks)", "import math\nimport sys\nli = []\nt = int(input())\nwhile t:\n    (n, k) = map(int, sys.stdin.readline().split())\n    if n <= k:\n        li.append(math.ceil(k / n))\n    elif n % k == 0:\n        li.append(1)\n    else:\n        li.append(2)\n    t = t - 1\nfor i in li:\n    print(i)", "import math\nn = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    print(math.ceil(math.ceil(a / b) * b / a))", "tot = int(input())\nfor x in range(tot):\n    (n, k) = map(int, input().split(' '))\n    exs = 0\n    p = n / k\n    if int(p) - p == 0:\n        exs = int(p) * k\n    else:\n        exs = int(p + 1) * k\n    p = exs / n\n    if int(p) - p == 0:\n        print(int(p))\n    else:\n        print(int(p + 1))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    i = 2\n    p = n\n    if k == 1:\n        print(1)\n        continue\n    if n <= k:\n        if k % n:\n            print(k // n + 1)\n        else:\n            print(k // n)\n    elif n % k == 0:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if n <= k:\n        if k % n == 0:\n            print(k // n)\n        else:\n            print(k // n + 1)\n    else:\n        if n % k != 0:\n            s = n + (k - n % k)\n        else:\n            s = n\n        k = s\n        if k % n == 0:\n            print(k // n)\n        else:\n            print(k // n + 1)", "from sys import *\nfrom math import *\nfrom bisect import bisect_left\ninput = lambda : stdin.readline()\nint_arr = lambda : list(map(int, stdin.readline().strip().split()))\nstr_arr = lambda : list(map(str, stdin.readline().split()))\nget_str = lambda : map(str, stdin.readline().strip().split())\nget_int = lambda : map(int, stdin.readline().strip().split())\nget_float = lambda : map(float, stdin.readline().strip().split())\nmod = 1000000007\nsetrecursionlimit(1000)\nfor _ in range(int(input())):\n    (n, k) = get_int()\n    val = (n + k - 1) // k\n    k *= val\n    print((k + n - 1) // n)", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    m = int(ceil(n / k))\n    k = m * k\n    ave = k / n\n    print(int(ceil(ave)))", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    m = int(ceil(n / k))\n    k = m * k\n    ave = k / n\n    print(int(ceil(ave)))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n > k:\n        a = n % k\n        if a == 0:\n            print(1)\n        else:\n            print(2)\n    else:\n        a = k // n\n        b = k % n\n        if b == 0:\n            print(a)\n        else:\n            print(a + 1)", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = (n // k + (n % k != 0)) * k\n    m = a // n + (a % n != 0)\n    print(m)", "answ = []\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = (n // k + (n % k != 0)) * k\n    answ.append(a // n + (a % n != 0))\nprint(*answ, sep='\\n')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = n // k + (n % k != 0)\n    m = a * k // n + (a * k % n != 0)\n    print(m)", "t = int(input())\nlist_ans = []\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    k = k * ((n - 1) // k + 1)\n    list_ans.append((k - 1) // n + 1)\nfor item in list_ans:\n    print(item)", "for i in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    k = ((n - 1) // k + 1) * k\n    print((k - 1) // n + 1)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    ku = k + k * ((n - k) // k)\n    if ku < n:\n        ku += k\n    maxm = ku // n\n    if ku % n != 0:\n        maxm += 1\n    print(maxm)", "from math import floor, log2, ceil\nt = int(input())\nres = []\nprev = ''\nfor _ in range(t):\n    [n, k] = list(map(int, input().split()))\n    if n < k:\n        res.append(ceil(k / n))\n    elif n % k == 0:\n        res.append(1)\n    else:\n        res.append(2)\nfor index in range(t):\n    print(res[index])", "n = int(input())\nfor i in range(n):\n    (p, q) = map(int, input().split())\n    if p <= q:\n        if q % p == 0:\n            a = q / p\n        else:\n            a = (q - q % p) / p + 1\n        print(int(a))\n    if p > q and p % q != 0:\n        q = p - p % q + q\n        a = (q - q % p) / p + 1\n        print(int(a))\n    if p > q and p % q == 0:\n        q = p - p % q\n        a = q / p\n        print(int(a))", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % k == 0:\n        print(1)\n    elif n > k:\n        print(2)\n    elif k % n == 0:\n        print(k // n)\n    else:\n        print(k // n + 1)", "t = int(input())\nfor i in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    if k < n:\n        if n % k == 0:\n            print(1)\n        else:\n            print(2)\n    elif k == n:\n        print(1)\n    elif k % n == 0:\n        print(k // n)\n    else:\n        print(k // n + 1)"]