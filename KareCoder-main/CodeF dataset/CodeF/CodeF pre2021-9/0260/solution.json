["t = int(input().strip())\nall_stamina = []\nfor _ in range(t):\n    (x, z) = map(int, input().split())\n    all_stamina.append([x, z])\nfor (x, z) in all_stamina:\n    win_x = x - 1\n    win_z = z\n    print(win_x, win_z, end=' ')\n    print()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    print(x - 1, y)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (x, y) = map(int, input().split())\n    return [x - 1, y]\nfor _ in range(int(input())):\n    print(*solve())", "t = int(input())\nrj = []\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    rj.append(x - 1)\n    rj.append(y)\nfor i in range(0, len(rj), 2):\n    print(rj[i], rj[i + 1])", "def pingPong(a, b):\n    return [a - 1, b]\nt = int(input())\nfinal = []\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    final.append(pingPong(a, b))\nfor _ in range(t):\n    print(final[_][0], final[_][1])", "t = int(input())\nX = []\nY = []\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    X.append(x)\n    Y.append(y)\nfor i in range(t):\n    print(X[i] - 1, Y[i])", "def Solve():\n    inputs = []\n    for t in range(int(input())):\n        inputs.append(input())\n    for l in inputs:\n        (x, y) = map(int, l.split())\n        (xa, ya) = (0, 0)\n        xa += x - 1\n        ya += y\n        print(xa, ya)\nSolve()", "T = int(input())\nans = ''\nfor _ in range(T):\n    xy = [int(i) for i in input().split()]\n    x = xy[0]\n    y = xy[1]\n    ans += str(x - 1) + ' ' + str(y) + '\\n'\nprint(ans)", "import sys\n\ndef answer(x, y):\n    print(x - 1, y)\n    return\n\ndef main():\n    t = int(input())\n    while t:\n        (x, y) = [int(i) for i in sys.stdin.readline().split()]\n        answer(x, y)\n        t -= 1\n    return\nmain()", "import sys\ninput = lambda : sys.stdin.readline().strip()\nt = int(input())\nwhile t:\n    t -= 1\n    (x, y) = map(int, input().split())\n    print(x - 1, y)", "t = int(input())\nfor _ in range(0, t):\n    inputs = [int(num) for num in input().split()]\n    x = inputs[0]\n    y = inputs[1]\n    print(f'{x - 1} {y}')", "t = int(input())\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    print(x - 1, y)", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_string():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_print_int(x):\n    sys.stdout.write(str(x) + '\\n')\n\ndef get_print(x):\n    sys.stdout.write(x + '\\n')\nfrom sys import maxsize\n\ndef solve():\n    for _ in range(get_int()):\n        (x, y) = get_ints()\n        get_print(str(x - 1) + ' ' + str(y))\nsolve()", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(a - 1, b)", "t = int(input())\nans = ''\nfor i in range(t):\n    (x, y) = input().split()\n    (x, y) = (int(x), int(y))\n    res = str(x - 1) + ' ' + str(y)\n    ans += res + '\\n'\nprint(ans)", "def main():\n    rounds = int(input())\n    results = []\n    for _ in range(rounds):\n        (a, b) = [int(item) for item in input().split()]\n        results.append(' '.join((str(a - 1), str(b))))\n    for item in results:\n        print(item)\nmain()", "import sys\ninput = iter(sys.stdin.read().splitlines()).__next__\nTC = int(input())\nfor tc in range(TC):\n    (x, y) = map(int, input().split())\n    print('%d %d' % (x - 1, y))", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    print(a - 1, b)", "n = int(input())\nfor i in range(n):\n    (x, y) = map(int, input().strip().split())\n    print(x - 1, y)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a - 1, b)", "for _ in range(int(input())):\n    (x, y) = list(map(int, input().split()))\n    print(x - 1, y)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    print(a - 1, b)", "for i in range(int(input())):\n    (x, y) = map(int, input().split())\n    print(x - 1, y)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    print(x - 1, y)", "def ping():\n    (x, y) = map(int, input().split())\n    print(x - 1, end=' ')\n    print(y)\nt = int(input())\nfor i in range(t):\n    ping()", "for i in range(int(input())):\n    (alice, bob) = map(int, input().split())\n    alice_wins = alice - 1\n    print(alice_wins, bob)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    print(x - 1, y)", "x = int(input())\nfor _ in range(x):\n    l = [int(i) for i in input().split()]\n    l[0] = l[0] - 1\n    print(*l)", "for j in range(0, int(input())):\n    (a, b) = map(int, input().split())\n    print(a - 1, b)", "for j in range(0, int(input())):\n    (a, b) = map(int, input().split())\n    print(a - 1, b)", "I = input\nfor _ in range(int(I())):\n    (a, b) = map(int, I().split())\n    print(a - 1, b)", "t = int(input())\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    if x >= y:\n        print(x - 1, y)\n    elif x < y:\n        print(x - 1, y)", "t = int(input())\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    print(x - 1, y)", "def Solve():\n    for t in range(int(input())):\n        (x, y) = map(int, input().split())\n        (xa, ya) = (0, 0)\n        xa += x - 1\n        ya += y\n        print(xa, ya)\nSolve()", "for i in range(int(input())):\n    (x, y) = map(int, input().split())\n    print(x - 1, y)", "o = int(input())\nfor j in range(o):\n    (h, l) = map(int, input().split())\n    print(h - 1, l)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a - 1, b)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    print(x - 1, y)", "answer = []\ninp = []\nT = int(input())\nfor i in range(0, T):\n    inp.append(input().split())\n\ndef process(player):\n    player[0] = int(player[0])\n    player[0] -= 1\n    answer.append(str(player[0]) + ' ' + str(player[1]))\nfor j in inp:\n    process(j)\nfor i in answer:\n    print(i)", "import sys\nt = int(input())\nfor i in range(t):\n    line = sys.stdin.readline().split()\n    x = int(line[0])\n    y = int(line[1])\n    if x == 0 and y == 0:\n        print(0, 0)\n    elif x == 1 and y == 0:\n        print(1, 0)\n    elif x == 0 and y == 1:\n        print(0, 1)\n    else:\n        print(x - 1, y)", "t = int(input())\nx = [list(map(int, input().split())) for i in range(t)]\nfor p in x:\n    if p[0] == 0:\n        print(f'0 {p[1]}')\n        continue\n    if p[1] == 0:\n        print(f'{p[0]} 0')\n        continue\n    alice = p[0] - 1\n    bob = p[1]\n    print(f'{alice} {bob}')", "t = int(input())\nz = 0\nscores = []\nwhile z < t:\n    z += 1\n    (a_sta, b_sta) = input().split()\n    a_sta = int(a_sta)\n    b_sta = int(b_sta)\n    if a_sta < b_sta:\n        if a_sta == 1:\n            a_scr = 0\n            b_scr = b_sta\n            scores.append([a_scr, b_scr])\n        elif a_sta < b_sta and a_sta != 0:\n            a_scr = a_sta - 1\n            b_scr = b_sta\n            scores.append([a_scr, b_scr])\n    elif a_sta == b_sta:\n        scores.append([a_sta - 1, b_sta])\n    else:\n        b_scr = b_sta\n        a_scr = a_sta - 1\n        scores.append([a_scr, b_scr])\nfor score in scores:\n    print(*score)", "n = int(input())\nalice = []\nbob = []\na_score = []\nb_score = []\nfor x in range(n):\n    stam = list(map(int, input().split()))\n    alice.append(stam[0])\n    bob.append(stam[1])\nfor stam in range(n):\n    alice[stam] -= 1\n    remove = alice[stam] - bob[stam]\n    print(f'{alice[stam]} {bob[stam]}')", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    print(x - 1, y)", "t = int(input())\nwhile t:\n    (a, b) = map(int, input().split())\n    print(a - 1, b)\n    t -= 1", "t = int(input())\nwhile t:\n    (a, b) = map(int, input().split())\n    print(a - 1, b)\n    t -= 1", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a - 1, b)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a - 1, b)", "import sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nf_inf = float('inf')\nmod = 10 ** 9 + 7\n\ndef resolve():\n    t = int(input())\n    for _ in range(t):\n        (x, y) = map(int, input().split())\n        (a, b) = (0, 0)\n        if x == 1:\n            if y == 0:\n                a = 1\n                b = 0\n            else:\n                a = 0\n                b = y\n        elif y == 0:\n            a = x\n            b = 0\n        else:\n            a = x - 1\n            b = y\n        print(a, b)\nresolve()", "answer = ''\nt = int(input())\nfor x in range(t):\n    (a, b) = map(int, input().split())\n    if a == 1:\n        answer += str(0) + ' ' + str(b) + '\\n'\n    elif b == 0:\n        answer += str(a) + ' ' + '0' + '\\n'\n    else:\n        answer += str(a - 1) + ' ' + str(b) + '\\n'\nprint(answer)", "a = int(input())\nst = [0 for i in range(a)]\nfor i in range(a):\n    st[i] = input().split()\n    st[i][0] = int(st[i][0])\n    st[i][1] = int(st[i][1])\nfor i in range(a):\n    print(st[i][0] - 1, end=' ')\n    print(st[i][1])", "rounds = int(input())\nscores = []\nfor _ in range(rounds):\n    (alice_power, bob_power) = list(map(int, input().split()))\n    scores.append((alice_power - 1, bob_power))\nfor score in scores:\n    print(score[0], score[1])", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(a - 1, b)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(a - 1, b)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(a - 1, b)", "import sys\na = 0\nb = 0\nt = int(sys.stdin.readline().split()[0])\nfor i in range(t):\n    line = sys.stdin.readline().split()\n    a = int(line[0])\n    b = int(line[1])\n    print(a - 1, b)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a - 1, b)", "T = int(input())\nfor _ in range(T):\n    (A, B) = map(int, input().split())\n    print(A - 1, B)", "T = int(input())\nfor t in range(T):\n    (a, b) = map(int, input().split())\n    print(a - 1, b)", "a = int(input())\nfor x in range(a):\n    (b, c) = map(int, input().split())\n    print(b - 1, c)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    print(x - 1, y)", "def call():\n    (x, y) = [int(x) for x in input().split()]\n    print(f'{x - 1} {y}')\nt = int(input())\nfor i in range(t):\n    call()", "t = int(input())\nfor i in range(t):\n    (x, y) = [int(x) for x in input().split()]\n    print(x - 1, y)", "x = int(input())\nfor m in range(x):\n    (y, z) = map(int, input().split())\n    print(y - 1, z)", "def ii():\n    return int(input())\n\ndef li():\n    return [int(i) for i in input().split()]\nfor t in range(ii()):\n    (x, y) = li()\n    print(x - 1, y)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a - 1, b)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a - 1, b)", "n = int(input())\nfor _ in range(n):\n    (a, b) = map(int, input().split())\n    print(a - 1, b)", "import math\nfor i in range(0, int(input())):\n    (x, y) = map(int, input().split())\n    print(x - 1, y)", "cas = int(input())\nfor _ in range(cas):\n    (x, y) = map(int, input().split())\n    print(x - 1, y)", "for i in range(int(input())):\n    (x, y) = map(int, input().split())\n    print(x - 1, y)", "n = int(input())\nfor i in range(n):\n    (x, y) = map(int, input().split())\n    x -= 1\n    print(x, y)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    print(x - 1, y)", "from sys import stdin\ncas = int(stdin.readline().strip())\nans = 0\n\ndef sm(x):\n    return x * (x + 1) // 2\nfor ca in range(cas):\n    (n, m) = map(int, stdin.readline().strip().split())\n    print(n - 1, m)", "t = int(input())\nall = []\nfor i in range(t):\n    x = input()\n    a = [int(i) for i in x.split()]\n    all.append(a)\nfor item in all:\n    (x, y) = (item[0], item[1])\n    print(x - 1, y)", "import sys, io, os, time\nfrom collections import defaultdict\nfrom collections import Counter\nfrom collections import deque\nfrom itertools import combinations\nfrom itertools import permutations\nimport bisect, math, heapq\nalphabet = 'abcdefghijklmnopqrstuvwxyz'\ninput = sys.stdin.readline\nfor ii in range(int(input())):\n    (x, y) = map(int, input().split())\n    print(x - 1, y)", "import math\nimport sys\nimport bisect\nfrom heapq import heapify, heappop, heappush\nfrom itertools import *\nfrom collections import deque, OrderedDict\nsys.setrecursionlimit(10 ** 6)\nII = lambda : sys.stdin.readline()\ninp = lambda : int(II())\ninpm = lambda : map(int, II().split())\ninpl = lambda : list(inpm())\narr_mn = lambda _n, _m: [[0 for __ in range(_m)] for _ in range(_n)]\narr_nn = lambda _n: arr_mn(_n, _n)\nEPS = 1e-09\nINF = int(1e+18)\nMOD = int(1000000000.0) + 7\nN = 2000009\n\ndef solve():\n    (a, b) = inpm()\n    print(a - 1, b)\n\ndef main():\n    t = inp()\n    for i in range(t):\n        solve()\nmain()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a - 1, b)", "import sys\nimport functools\ninput = sys.stdin.readlines()\nfor i in range(1, len(input)):\n    input[i] = input[i].split()\n    (x, y) = input[i]\n    (x, y) = (int(x), int(y))\n    print(x - 1, y)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(a - 1, b)", "def main(x, y, a, b):\n    a += x - 1\n    b += y\n    return (a, b)\nk = int(input())\nfor _ in range(k):\n    (x, y) = map(int, input().strip().split())\n    s = main(x, y, 0, 0)\n    print(s[0], s[1])", "k = int(input())\nfor _ in range(k):\n    (x, y) = map(int, input().strip().split())\n    print(x - 1, y)", "import sys\nimport math\nfrom collections import defaultdict as dd\nmod = 1000000007\nT = 1\nT = int(sys.stdin.readline())\nfor _ in range(T):\n    (x, y) = map(int, input().split())\n    print(x - 1, y)", "numberOfTestCases = int(input())\nfor _ in range(0, numberOfTestCases):\n    string = input().split()\n    (n, m) = map(int, string)\n    print(n - 1, m)", "T = int(input())\nr = 1\n\ndef getnext(x, y):\n    if x == 0:\n        return [0, y + 1]\n    if y == 0:\n        return [x, 0]\n    [me1, you1] = getnext(x, y - 1)\n    you1 += 1\n    if x > 0:\n        [you2, me2] = getnext(y, x - 1)\n    if me1 > me2:\n        return [me1, you1]\n    elif me1 < me2:\n        return [me2, you2]\n    if you1 < you2:\n        return [me1, you1]\n    elif you1 > you2:\n        return [me2, you2]\n    print('ERROR!', x, y)\nwhile r <= T:\n    (m, n) = map(int, input().split())\n    print(m - 1, n)\n    r += 1", "games = int(input())\nfor i in range(games):\n    (Alice, Bob) = input().split(' ')\n    Alice = int(Alice)\n    Bob = int(Bob)\n    if Alice > 0:\n        if Bob != 0:\n            print(Alice - 1, Bob)\n        else:\n            print(Alice, Bob)\n    else:\n        print(Alice, Bob)", "inn = lambda : int(input())\ninm = lambda : map(int, input().split())\nins = lambda : str(input())\nina = lambda : list(map(int, input().split()))\n\ndef solve():\n    (x, y) = inm()\n    print(x - 1, y)\n\ndef main():\n    t = 1\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "for _ in range(int(input())):\n    (a, b) = tuple(map(int, input().split()))\n    if a > 0:\n        a -= 1\n    else:\n        b -= 1\n    print(a, b)", "import sys, math\nsys.setrecursionlimit(10 ** 8)\nt = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    print(x - 1, y)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a - 1, b)", "for t in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    print(a - 1, b)", "def func(x, y):\n    print(x - 1, y)\nt = int(input())\nfor _ in range(t):\n    (x, y) = [int(i) for i in input().split()]\n    func(x, y)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    print(x - 1, y)", "t = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    print(x - 1, y)", "t = int(input())\nfor test in range(t):\n    (x, y) = map(int, input().split())\n    print(x - 1, y)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a - 1, b)"]