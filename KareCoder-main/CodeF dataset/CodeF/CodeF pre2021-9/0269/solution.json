["import math\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = set(map(int, input().split()))\n    mex = 0\n    while mex in a:\n        mex = mex + 1\n    if k == 0:\n        print(n)\n    elif mex != n:\n        x = math.ceil((mex + max(a)) / 2)\n        ans = n\n        if x not in a:\n            ans = ans + 1\n        print(ans)\n    elif mex == n:\n        ans = n + k\n        print(ans)", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    l = set(map(int, input().split()))\n    m1 = max(l)\n    m2 = 0\n    for i in range(m1 + 2):\n        if i not in l:\n            m2 = i\n            break\n    if m2 == m1 + 1:\n        print(len(l) + k)\n    else:\n        if k > 0:\n            l.add((m1 + m2 + 1) // 2)\n        print(len(l))\n    t -= 1", "I = lambda : map(int, input().split())\nfor i in '*' * int(input()):\n    (n, k) = I()\n    (a, q) = (set(I()), 0)\n    if k:\n        while q in a:\n            q += 1\n        w = max(a)\n        e = (w + q + 1) // 2\n        if e != q:\n            a.add(e)\n            k = 0\n    print(len(a) + k)", "def PROBLEM():\n    T = []\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        a = set(map(int, input().split()))\n        mex = 0\n        while mex in a:\n            mex += 1\n        if mex > max(a) or k == 0:\n            print(n + k)\n        elif (max(a) + mex + 1) // 2 in a:\n            print(n)\n        else:\n            print(n + 1)\nPROBLEM()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = set(map(int, input().split()))\n    m = max(a)\n    mex = 0\n    while mex in a:\n        mex += 1\n    if mex > m or k == 0:\n        print(n + k)\n    elif (m + mex + 1) // 2 in a:\n        print(n)\n    else:\n        print(n + 1)", "import math\n\ndef mexMax(n, k, array):\n    s = set(array)\n    m = len(s)\n    for x in range(m + 1):\n        if x not in s:\n            mex = x\n            break\n    maxi = max(s)\n    if mex < maxi and k > 0:\n        s.add(math.ceil((mex + maxi) / 2))\n        return len(s)\n    else:\n        return len(s) + k\nt = int(input())\nfinal = []\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    final.append(mexMax(n, k, l))\nfor _ in range(t):\n    print(final[_])", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    s = set(lis)\n    Max = max(lis)\n    min = 0\n    for i in range(Max + 2):\n        if i not in s:\n            min = i\n            break\n    if min == Max + 1:\n        print(n + k)\n        continue\n    if k > 0:\n        s.add((Max + min + 1) // 2)\n    print(len(s))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = set([int(x) for x in input().split()])\n    if k:\n        mex_num = 0\n        while mex_num in s:\n            mex_num += 1\n        max_num = max(s)\n        num_to_add = (max_num + mex_num + 1) // 2\n        if num_to_add != mex_num:\n            s.add(num_to_add)\n            k = 0\n    print(len(s) + k)", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_ls():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef main():\n    for _ in range(int(input())):\n        (n, k) = get_ints()\n        ls = get_ls()\n        st = set(ls)\n        ax = max(ls)\n        ex = 0\n        for i in range(ax + 2):\n            if i not in st:\n                ex = i\n                break\n        if ex == ax + 1:\n            print(n + k)\n            continue\n        if k > 0:\n            st.add((ax + ex + 1) // 2)\n        print(len(st))\nmain()", "import math\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    ar = list(map(int, input().split()))\n    al = True\n    ar = set(ar)\n    ar = list(ar)\n    n = len(ar)\n    for x in range(n):\n        if ar[x] != x:\n            mex = x\n            al = False\n            break\n    if al:\n        print(n + k)\n    elif math.ceil((mex + ar[n - 1]) / 2) in ar or k == 0:\n        print(n)\n    else:\n        print(n + 1)", "I = lambda : map(int, input().split())\nfor i in '*' * int(input()):\n    (n, k) = I()\n    (a, q) = (set(I()), 0)\n    if k:\n        while q in a:\n            q += 1\n        w = max(a)\n        e = (w + q + 1) // 2\n        if e != q:\n            a.add(e)\n            k = 0\n    print(len(a) + k)", "def solve(A, n, k):\n    setA = set(A)\n    ls = len(setA)\n    if k == 0:\n        return ls\n    mexVal = ls\n    for i in range(ls):\n        if i not in setA:\n            mexVal = i\n            break\n    if mexVal < ls:\n        result = ls\n        if (mexVal + max(setA) + 1) // 2 not in setA:\n            result += 1\n    else:\n        result = ls + k\n    return result\nt = int(input())\nfor tc in range(t):\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    result = solve(A, n, k)\n    print(result)", "import sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nf_inf = float('inf')\nMOD = 10 ** 9 + 7\n\ndef solve():\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    if k == 0:\n        print(n)\n        return\n    set_A = set(A)\n    if set_A == set(list(range(n))):\n        print(n + k)\n    else:\n        max_a = max(A)\n        mex = 0\n        while mex in set_A:\n            mex += 1\n        set_A.add((max_a + mex + 1) // 2)\n        print(len(set_A))\nt = int(input())\nfor _ in range(t):\n    solve()", "import math\nimport itertools as it\nx = int(input())\nfor i in range(x):\n    (n, k) = map(int, input().split())\n    s = [int(s) for s in input().split()]\n    if k > 0:\n        myset = set(s)\n        minn = next((i for i in it.count() if i not in myset))\n        if minn > max(s):\n            print(n + k)\n        elif max(s) - minn > 1:\n            if math.ceil((max(s) + minn) / 2) not in s:\n                print(n + 1)\n            else:\n                print(n)\n        else:\n            print(n)\n    else:\n        print(n)", "import sys\nfrom math import ceil as c\n\ndef mex(s, max):\n    res = 0\n    for i in range(max):\n        if i not in s:\n            return i\nfor _ in range(int(input())):\n    (n, k) = map(int, sys.stdin.readline().split())\n    s = set(map(int, sys.stdin.readline().split()))\n    m = max(s)\n    if m == n - 1:\n        print(n + k)\n    else:\n        for i in range(k):\n            new = c((mex(s, m) + m) / 2)\n            if new in s:\n                break\n            else:\n                s.add(new)\n        print(len(s))", "def mex(s, mi, mx):\n    if len(s) == mx + 1:\n        return mx + 1\n    for i in range(mi, mx + 2):\n        if i not in s:\n            return i\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = set(map(int, input().split()))\n    mx = max(s)\n    mex_v = mex(s, 0, mx)\n    flag = 0\n    while k > 0:\n        k -= 1\n        alp = (mex_v + mx + 1) // 2\n        s.add(alp)\n        if alp <= mx and alp > mex_v:\n            break\n        elif mex_v == mx + 1:\n            flag = 1\n            print(len(s) + k)\n            break\n        else:\n            if alp > mx:\n                mx = alp\n            mex_v = mex(s, mex_v, mx)\n    if flag == 0:\n        print(len(s))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    nums = set(map(int, input().split()))\n    maX = max(nums)\n    mex = 0\n    while mex in nums:\n        mex += 1\n    if mex > maX or k == 0:\n        print(n + k)\n    else:\n        print(n if (mex + maX + 1) // 2 in nums else n + 1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    s = set(lis)\n    Max = max(lis)\n    min = 0\n    for i in range(Max + 2):\n        if i not in s:\n            min = i\n            break\n    if min == Max + 1:\n        print(n + k)\n        continue\n    if k > 0:\n        s.add((Max + min + 1) // 2)\n    print(len(s))", "n = int(input())\nfor i1 in range(n):\n    seq = input()\n    A1 = seq.split()\n    length = int(A1[0])\n    k = int(A1[1])\n    seq = input()\n    if k == 0:\n        print(length)\n        continue\n    A2 = seq.split()\n    A2 = [int(x) for x in A2]\n    b = max(A2)\n    if b == length - 1:\n        print(length + k)\n        continue\n    count = 0\n    for i2 in A2:\n        if count not in A2:\n            mex = count\n            break\n        count += 1\n    S = round((mex + b) / 2 + 0.01)\n    if S not in A2:\n        print(length + 1)\n    else:\n        print(length)", "import math\n\ndef mex(a):\n    for i in range(len(a) + 1):\n        if i not in a:\n            return i\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = set(map(int, input().split()))\n    if mex(a) > max(a):\n        print(n + k)\n        continue\n    elif k > 0:\n        a.add(math.ceil((max(a) + mex(a)) / 2))\n    print(len(a))", "from math import ceil\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = set(map(int, input().split()))\n    answer = len(a)\n    a_max = max(a)\n    if len(a) < a_max + 1:\n        a_mex = a_max + 1\n        for i in range(a_max):\n            if i not in a:\n                a_mex = i\n                break\n        if ceil((a_mex + a_max) / 2) not in a and k != 0:\n            answer += 1\n    else:\n        answer += k\n    print(answer)", "import math\n\ndef mex(S):\n    i = 0\n    while i in S:\n        i += 1\n    return i\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = set(map(int, input().split()))\n    a = mex(s)\n    b = max(s)\n    if a == len(s):\n        print(n + k)\n    else:\n        if k > 0:\n            s.add(int(math.ceil((a + b) / 2)))\n        print(len(s))", "t = int(input())\nfor i in range(0, t):\n    f = input()\n    array = f.split(' ')\n    n = int(array[0])\n    k = int(array[1])\n    s = input()\n    s = list(map(int, s.split(' ')))\n    ss = set(s)\n    for j in range(n + 1):\n        if j not in ss:\n            break\n    MAX = max(ss)\n    e = -(-(j + MAX) // 2)\n    if len(ss) == MAX + 1:\n        print(len(ss) + k)\n    elif k >= 1 and e not in ss:\n        print(len(ss) + 1)\n    else:\n        print(len(ss))", "import math\nt = int(input())\nwhile t:\n    (n, k) = [int(x) for x in input().split()]\n    l = set([int(x) for x in input().split()])\n    ma = max(l)\n    me = ma\n    c = n\n    for i in range(ma):\n        if i not in l:\n            me = i\n            break\n    if me == ma or k == 0:\n        c = c + k\n    else:\n        x = math.ceil((ma + me) / 2)\n        if x not in l:\n            c = c + 1\n    print(c)\n    t = t - 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = set(map(int, input().split()))\n    m = max(a)\n    mex = 0\n    while mex in a:\n        mex += 1\n    if mex > m or k == 0:\n        print(n + k)\n    elif (m + mex + 1) // 2 in a:\n        print(n)\n    else:\n        print(n + 1)", "import math\n\ndef check(lis):\n    i = 0\n    while True:\n        if i not in lis:\n            return i\n        i += 1\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lis = set(map(int, input().split()))\n    mex = check(lis)\n    if k == 0 or mex > max(lis):\n        d = set(lis)\n        print(len(d) + k)\n    elif math.ceil((mex + max(lis)) / 2) in lis:\n        print(n)\n    else:\n        print(n + 1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = set(map(int, input().split()))\n    m = max(a)\n    mex = 0\n    while mex in a:\n        mex += 1\n    if mex > m or k == 0:\n        print(n + k)\n    elif (m + mex + 1) // 2 in a:\n        print(n)\n    else:\n        print(n + 1)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = set(l)\n    Max = max(l)\n    Mex = 0\n    while Mex in s:\n        Mex += 1\n    if Mex > Max or k == 0:\n        print(n + k)\n    else:\n        s.add((Max + Mex + 1) // 2)\n        print(len(s))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    b = set(map(int, input().split()))\n    a = 0\n    while a in b:\n        a += 1\n    mx = max(b)\n    if k == 0:\n        print(len(b))\n    elif a > mx:\n        print(len(b) + k)\n    else:\n        b.add((a + mx + 1) // 2)\n        print(len(b))", "from math import *\n\ndef solve():\n    (n, k) = map(int, input().split())\n    l = set(map(int, input().split()))\n    if k == 0:\n        print(n)\n        return\n    m = max(l)\n    val = -1\n    for i in range(n):\n        if i not in l:\n            val = i\n            break\n    else:\n        print(n + k)\n        return\n    if ceil((val + m) / 2) in l:\n        print(n)\n        return\n    print(n + 1)\nt = int(input())\nfor _ in range(t):\n    solve()", "import math\n\ndef give_me_meh(a):\n    for i in range(0, len(a)):\n        if a[i] != i:\n            return i\n    return len(a)\nfor j in range(0, int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    max_ = max(a)\n    mex = give_me_meh(a)\n    if k == 0:\n        print(len(a))\n        continue\n    if mex == len(a):\n        print(len(a) + k)\n    elif math.ceil((mex + max_) / 2) in a:\n        print(len(a))\n    else:\n        print(len(a) + 1)", "import math\n\ndef mex(nList):\n    nList = set(nList)\n    mex = 0\n    while mex in nList:\n        mex += 1\n    return mex\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    x = mex(a)\n    y = max(a)\n    if k == 0:\n        print(len(set(a)))\n        continue\n    if x < y:\n        if math.ceil((x + y) / 2) in a:\n            print(len(set(a)))\n        else:\n            print(len(set(a)) + 1)\n    else:\n        print(len(set(a)) + k)", "R = lambda : map(int, input().split())\n(t,) = R()\nexec(t * 'n,k=R();a={*R()};i=0\\nwhile{i}&a:i+=1\\nprint(n+(k>0)*(k,i+max(a)+1>>1not in a)[i<n])\\n')", "import math\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = set(map(int, input().split()))\n    l = []\n    for j in range(n):\n        if j not in a:\n            l.append(j)\n    l.append(n + 1)\n    if k == 0:\n        print(n)\n    elif l[0] != n + 1:\n        x = math.ceil((l[0] + max(a)) / 2)\n        ans = n\n        if x not in a:\n            ans = ans + 1\n        print(ans)\n    elif l[0] == n + 1:\n        ans = n + k\n        print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    (s, mex_num) = (set([int(x) for x in input().split()]), 0)\n    if k:\n        while mex_num in s:\n            mex_num += 1\n        max_num = max(s)\n        num_to_add = (max_num + mex_num + 1) // 2\n        if num_to_add != mex_num:\n            s.add(num_to_add)\n            k = 0\n    print(len(s) + k)", "class Solution:\n\n    def __init__(self):\n        pass\n\n    def findMEX(self, S):\n        N = len(S)\n        newArr = sorted([ele for ele in S if ele < N])\n        n = len(newArr)\n        for i in range(n):\n            if newArr[i] != i:\n                return i\n        return n\n\n    def distictElementAfterK(self, S, k):\n        if k == 0:\n            return len(S)\n        (mex, maxi, ans) = (self.findMEX(S), max(S), len(S))\n        if mex > maxi:\n            ans += k\n        else:\n            newEle = round((mex + maxi) / 2 + 0.01)\n            if newEle not in S:\n                ans += 1\n        return ans\nt = int(input())\nwhile t:\n    (n, k) = map(int, input().split(' '))\n    S = set(map(int, input().split(' ')))\n    s = Solution()\n    print(s.distictElementAfterK(S, k))\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    ls = list(map(int, input().split()))\n    ans = None\n    for turn in range(k):\n        s = set(ls)\n        non_ls = list(s)\n        max_num = max(s)\n        mex_num = None\n        for m in range(0, max_num + 2):\n            if m not in s:\n                mex_num = m\n                break\n        if mex_num == max_num + 1:\n            ans = len(s) + k\n            break\n        else:\n            if (max_num + mex_num) % 2 == 0:\n                half = (max_num + mex_num) // 2\n            else:\n                half = (max_num + mex_num + 1) // 2\n            if half in s:\n                ans = len(s)\n                break\n            else:\n                ls.append(half)\n    if ans == None:\n        print(len(set(ls)))\n    else:\n        print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = set(map(int, input().split()))\n    m = max(a)\n    mex = 0\n    while mex in a:\n        mex += 1\n    if mex > m or k == 0:\n        print(n + k)\n    elif (m + mex + 1) // 2 in a:\n        print(n)\n    else:\n        print(n + 1)", "t = int(input())\n\ndef mex(seq: set):\n    res = 0\n    while res in seq:\n        res += 1\n    return res\nwhile t:\n    inp = input().strip().split(' ')\n    n = int(inp[0])\n    k = int(inp[1])\n    seq = [int(i) for i in input().strip().split(' ')]\n    distinct = set(seq)\n    ma = max(seq)\n    me = mex(distinct)\n    res = len(distinct)\n    if k == 0:\n        pass\n    elif ma == me - 1:\n        res += k\n    elif (ma + me) // 2 + (ma + me) % 2 not in distinct:\n        res += 1\n    print(res)\n    t -= 1", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = set(l)\n    if k == 0:\n        print(len(s))\n        continue\n    for i in range(0, n + 1):\n        if i not in s:\n            mex = i\n            break\n    max1 = max(s)\n    if mex > max1:\n        print(len(s) + k)\n    else:\n        s.add(math.ceil((max1 + mex) / 2))\n        print(len(s))", "T = int(input())\nfor x in range(T):\n    b = [int(y) for y in input().split()]\n    n = b[0]\n    k = b[1]\n    a = [int(z) for z in input().split()]\n    d = 0\n    f = set(a)\n    c = len(f)\n    m = max(f)\n    if k == 0:\n        print(c)\n    else:\n        for p in range(m + 2):\n            if p not in f:\n                d = p\n                break\n        if d == m + 1:\n            print(c + k)\n        else:\n            e = 0\n            if (m + d) % 2 == 0:\n                e = int((m + d) / 2)\n            else:\n                e = int((m + d) / 2) + 1\n            if e in f:\n                print(c)\n            else:\n                print(c + 1)", "from math import ceil\n\ndef solve():\n    (n, k) = [int(x) for x in input().split()]\n    A = [int(x) for x in input().split()]\n    if k == 0:\n        print(n)\n        return\n    mx = max(A)\n    sA = set(A)\n    mex = 0\n    while mex in sA:\n        mex += 1\n    j = k\n    spre = -1\n    while j > 0:\n        if mex > mx:\n            print(mx + j + 1)\n            return\n        else:\n            s = ceil((mex + mx) / 2)\n            if s == spre:\n                print(len(sA))\n                return\n            else:\n                spre = s\n                if s > mx:\n                    mx = s\n                sA.add(s)\n                while mex in sA:\n                    mex += 1\n        j -= 1\n    print(len(sA))\n    return\nt = int(input())\nfor i in range(0, t):\n    solve()", "import math\n\ndef get_mex(sett, last):\n    for i in range(last, 10 ** 9 + 1):\n        if i not in sett:\n            return i\n\ndef solve(A, k):\n    sett = set()\n    for a in A:\n        sett.add(a)\n    mexx = get_mex(sett, 0)\n    maxx = max(A)\n    for i in range(k):\n        if maxx + 1 == mexx:\n            return len(sett) + (k - i)\n        next = math.ceil((mexx + maxx) / 2)\n        if next in sett:\n            return len(sett)\n        else:\n            sett.add(next)\n            mexx = get_mex(sett, mexx)\n    return len(sett)\nx = int(input())\nfor _ in range(x):\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    print(solve(B, A[1]))", "from math import ceil\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    li = sorted(map(int, input().split()))\n    mx = li[-1]\n    if k == 0 or mx == n - 1:\n        print(n + k)\n        continue\n    mex = 0\n    i = 0\n    while mex == li[i]:\n        i += 1\n        mex += 1\n    check = ceil((mx + mex) / 2)\n    if check in li:\n        print(n)\n    else:\n        print(n + 1)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    setA = set(A)\n    ma_x = max(A)\n    flag = 0\n    if k == 0:\n        print(n)\n        continue\n    for i in range(0, 999999999):\n        if i not in setA:\n            mex = i\n            break\n    if mex > ma_x:\n        print(n + k)\n    else:\n        p = mex + ma_x\n        if p % 2 != 0:\n            p = p / 2 * 10\n            if p % 10 >= 5:\n                p = int(p // 10) + 1\n            else:\n                p = int(p // 10)\n        else:\n            p = p // 2\n        if p not in setA:\n            print(n + 1)\n        else:\n            print(n)", "I = lambda : map(int, input().split())\nfor i in '*' * int(input()):\n    (n, k) = I()\n    (a, q) = (set(I()), 0)\n    if k:\n        while q in a:\n            q += 1\n        w = max(a)\n        e = (w + q + 1) // 2\n        if e != q:\n            a.add(e)\n            k = 0\n    print(len(a) + k)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    s = set(lis)\n    Max = max(lis)\n    min = 0\n    for i in range(Max + 2):\n        if i not in s:\n            min = i\n            break\n    if min == Max + 1:\n        print(n + k)\n        continue\n    if k > 0:\n        s.add((Max + min + 1) // 2)\n    print(len(s))", "for __ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = set(map(int, input().split()))\n    stat = 0\n    mesh = max_ = max(s)\n    if k == 0:\n        print(len(s))\n        continue\n    for i in range(max_):\n        if i not in s:\n            mesh = i\n            stat = 1\n            break\n    v = mesh + max_\n    if v % 2 == 0:\n        v = v // 2\n    else:\n        v = v // 2 + 1\n    if stat:\n        res = len(s)\n        if v not in s:\n            res += 1\n    else:\n        res = len(s) + k\n    print(res)", "def mex(l):\n    s = set(l)\n    z = 0\n    for i in range(max(l) + 2):\n        if i not in s:\n            z = i\n            break\n    return z\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = set(l)\n    if mex(l) == max(l) + 1:\n        print(a + b)\n        continue\n    if b > 0:\n        s.add((max(l) + mex(l) + 1) // 2)\n    print(len(s))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    s = set(lis)\n    Max = max(lis)\n    min = 0\n    for i in range(Max + 2):\n        if i not in s:\n            min = i\n            break\n    if min == Max + 1:\n        print(n + k)\n        continue\n    if k > 0:\n        s.add((Max + min + 1) // 2)\n    print(len(s))", "def rUp(a):\n    if int(a) == a:\n        return a\n    return int(a) + 1\n\ndef mex(s):\n    a = 0\n    while True:\n        if a in s:\n            a += 1\n        else:\n            return a\nt = int(input())\nfor _ in range(t):\n    (n, k) = input().split()\n    (n, k) = (int(n), int(k))\n    mset = set(map(int, input().split()))\n    if k == 0:\n        print(n)\n        continue\n    M = max(mset)\n    m = mex(mset)\n    if m > M:\n        print(n + k)\n        continue\n    if rUp((M + m) / 2) in mset:\n        pass\n    else:\n        n += 1\n    print(n)", "import math\n\ndef mex(items):\n    i = 0\n    while i in items:\n        i += 1\n    return i\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        (n, k) = list(map(int, input().split()))\n        multiset = list(map(int, input().split()))\n        num_set = set(multiset)\n        mex_val = mex(num_set)\n        max_val = max(num_set)\n        if k != 0 and mex_val < max_val:\n            val = math.ceil((max_val + mex_val) / 2)\n            multiset.append(val)\n            print(len(set(multiset)))\n        else:\n            print(len(set(multiset)) + k)\nmain()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    st = set(map(int, input().split()))\n    a = 0\n    if k:\n        while a in st:\n            a += 1\n        b = max(st)\n        tmp = (a + b + 1) // 2\n        if tmp != a:\n            st.add(tmp)\n            k = 0\n    print(len(st) + k)", "from math import ceil\nfor t in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = set([int(x) for x in input().split()])\n    for num in range(n):\n        if num not in s:\n            mex = num\n            break\n    else:\n        mex = n + 1\n    if mex < n + 1:\n        if k > 0:\n            s.add(ceil((max(s) + mex) / 2))\n        print(len(s))\n    else:\n        print(n + k)", "from math import ceil\n\ndef mex(se):\n    me = max(se)\n    check_for = 0\n    while True:\n        if check_for not in se:\n            return check_for\n        check_for += 1\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    v = set(map(int, input().split()))\n    if mex(v) > max(v):\n        print(len(v) + k)\n    elif k == 0:\n        print(len(v))\n    else:\n        mx = max(v)\n        mi = mex(v)\n        addd = ceil((mx + mi) / 2)\n        if addd not in v:\n            print(len(v) + 1)\n        else:\n            print(len(v))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    s = set(lis)\n    Max = max(lis)\n    min = 0\n    for i in range(Max + 2):\n        if i not in s:\n            min = i\n            break\n    if min == Max + 1:\n        print(n + k)\n        continue\n    if k > 0:\n        s.add((Max + min + 1) // 2)\n    print(len(s))", "from math import ceil\n\ndef find_mex(arr):\n    mex = 0\n    while True:\n        if mex not in arr:\n            return mex\n        mex += 1\n\ndef find_max(arr):\n    return max(arr)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = set(map(int, input().split()))\n    a = find_max(lst)\n    b = find_mex(lst)\n    if b > a:\n        print(len(lst) + k)\n    elif k == 0:\n        print(len(lst))\n    else:\n        ans = ceil((a + b) / 2)\n        if ans in lst:\n            print(len(lst))\n        else:\n            print(len(lst) + 1)", "import sys, math\ninput = sys.stdin.readline\nnumOfTests = int(input())\n\ndef invr():\n    return map(int, input().split())\n\ndef getMex(num, maximum, start):\n    for i in range(start, maximum):\n        if i not in num:\n            return i\n    return maximum + 1\nfor _ in range(numOfTests):\n    (n, k) = invr()\n    nums = list(set(invr()))\n    numsLength = len(nums)\n    if k == 0:\n        print(numsLength)\n        continue\n    writtenFlag = False\n    maxim = max(nums)\n    if maxim == numsLength - 1:\n        print(numsLength + k)\n        continue\n    mex = getMex(nums, maxim, 0)\n    if mex == maxim + 1:\n        print(numsLength + k)\n        continue\n    for i in range(k):\n        toAdd = math.ceil((maxim + mex) / 2)\n        if toAdd in nums:\n            break\n        nums.append(toAdd)\n        numsLength += 1\n        if toAdd <= maxim and toAdd != mex:\n            break\n        if toAdd > maxim:\n            maxim = toAdd\n        if toAdd == mex or mex == maxim + 1:\n            print(numsLength + k - i - 1)\n            writtenFlag = True\n            break\n    if not writtenFlag:\n        print(numsLength)", "import math\n\ndef mex(max, multiset):\n    for i in range(max):\n        if i not in multiset:\n            return i\n    return max + 1\nfor _ in range(int(input())):\n    (num_elems, num_opers) = map(int, input().split())\n    multi_set = set(map(int, input().split()))\n    length = len(multi_set)\n    if num_opers == 0:\n        print(length)\n        continue\n    max_elem = max(multi_set)\n    mex_elem = mex(max_elem, multi_set)\n    a = math.ceil((max_elem + mex_elem) / 2)\n    if a > max_elem:\n        print(length + num_opers)\n    elif a == max_elem:\n        print(length)\n    else:\n        if a not in multi_set:\n            length += 1\n        print(length)", "from math import ceil\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = set(map(int, input().split()))\n    if k == 0:\n        print(len(l))\n    else:\n        for i in range(n):\n            if i not in l:\n                mex = i\n                break\n        else:\n            mex = n\n        if mex != n:\n            if ceil((mex + max(l)) / 2) not in l:\n                print(len(l) + 1)\n            else:\n                print(len(l))\n        else:\n            print(len(l) + k)", "import math, sys\ninput = sys.stdin.readline\n\ndef mex(x):\n    i = 0\n    while i in x:\n        i += 1\n    return i\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    numbers = set([int(i) for i in input().split()])\n    if not k:\n        print(n)\n    elif mex(numbers) == max(numbers) + 1:\n        print(n + k)\n    else:\n        numbers.add(math.ceil((max(numbers) + mex(numbers)) / 2))\n        print(len(numbers))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    s = set(lis)\n    Max = max(lis)\n    min = 0\n    for i in range(Max + 2):\n        if i not in s:\n            min = i\n            break\n    if min == Max + 1:\n        print(n + k)\n        continue\n    if k > 0:\n        s.add((Max + min + 1) // 2)\n    print(len(s))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    s = set(lis)\n    Max = max(lis)\n    min = 0\n    for i in range(Max + 2):\n        if i not in s:\n            min = i\n            break\n    if min == Max + 1:\n        print(n + k)\n        continue\n    if k > 0:\n        s.add((Max + min + 1) // 2)\n    print(len(s))", "import sys\ninput = sys.stdin.readline\nfrom math import ceil\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = sorted(map(int, input().split()))\n    for i in range(n):\n        if w[i] != i:\n            if ceil((i + max(w)) / 2) in w:\n                print(n)\n            else:\n                print(min(k + n, n + 1))\n            break\n    else:\n        print(n + k)", "def mex(arr):\n    n = len(arr)\n    v = set(arr)\n    for i in range(0, n):\n        if i not in v:\n            return i\n    return n + 1\nfrom math import ceil\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    arr = [int(num) for num in input().split(' ')]\n    if k == 0:\n        ans = n\n    else:\n        a = mex(arr)\n        b = max(arr)\n        if a > b:\n            ans = n + k\n        else:\n            f = ceil((a + b) / 2)\n            if f not in arr:\n                ans = n + 1\n            else:\n                ans = n\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    setArr = list(set(arr))\n    if k == 0:\n        print(len(setArr))\n        continue\n    setArr.sort()\n    f = 1\n    mex = -1\n    for i in range(len(setArr)):\n        if setArr[i] == i:\n            pass\n        else:\n            f = 0\n            mex = i\n            break\n    from math import ceil\n    if f == 1:\n        print(len(setArr) + k)\n    elif ceil((setArr[-1] + mex) / 2) in setArr:\n        print(len(setArr))\n    else:\n        print(len(setArr) + 1)", "import math\n\ndef mex(S, i):\n    while i in S:\n        i += 1\n    return i\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    S = set(map(int, input().split()))\n    a = mex(S, 0)\n    b = max(S)\n    if a == len(S):\n        print(n + k)\n    else:\n        if k > 0:\n            S.add(int(math.ceil((a + b) / 2)))\n        print(len(S))", "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10000000)\n\ndef read_values():\n    return map(int, input().split())\n\ndef read_index():\n    return map(lambda x: int(x) - 1, input().split())\n\ndef read_list():\n    return list(read_values())\n\ndef read_lists(N):\n    return [read_list() for n in range(N)]\n\ndef solve():\n    (N, K) = read_values()\n    A = set(read_list())\n    b = max(A)\n    a = 0\n    while a in A:\n        a += 1\n    for k in range(K):\n        if a > b:\n            return len(A) + K - k\n        c = (a + b + 1) // 2\n        if c in A:\n            return len(A)\n        A.add(c)\n        while a in A:\n            a += 1\n    return len(A)\n\ndef main():\n    T = int(input())\n    res = []\n    for _ in range(T):\n        res.append(str(solve()))\n    for r in res:\n        print(r)\nmain()", "for y in range(int(input())):\n    (n, m) = map(int, input().split())\n    st = set(map(int, input().split()))\n    mex = -1\n    t = 0\n    foo = 0\n    lst = list(st)\n    lst.sort()\n    n = len(lst)\n    for i in range(n):\n        if i == lst[i]:\n            pass\n        else:\n            mex = i\n            foo = 1\n            break\n    ln = n\n    if m == 0:\n        print(n)\n        continue\n    if foo == 0:\n        print(ln + m)\n    else:\n        res = mex + lst[-1]\n        if res % 2 == 0:\n            if res // 2 in lst:\n                print(ln)\n            else:\n                print(ln + 1)\n        elif res // 2 + 1 in lst:\n            print(ln)\n        else:\n            print(ln + 1)", "import math\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    array = set(map(int, input().split()))\n    if k == 0:\n        print(n)\n        continue\n    maxx = max(array)\n    for i in range(0, maxx + 2):\n        if i not in array:\n            mexx = i\n            break\n    newEle = math.ceil((maxx + mexx) / 2)\n    if newEle == mexx:\n        print(len(array) + k)\n    else:\n        array.add(newEle)\n        print(len(array))", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(map(int, input().split()))\n    maxi = max(s)\n    mexi = -1\n    f = 0\n    a = set(s)\n    for i in range(maxi):\n        if i not in a:\n            mexi = i\n            f = 1\n            break\n    if f == 0:\n        mexi = maxi + 1\n        print(n + k)\n    else:\n        ans = math.ceil((maxi + mexi) / 2)\n        if ans in s or k == 0:\n            print(n)\n        else:\n            print(n + 1)", "from math import *\nt = int(input())\n\ndef mex(arr, n):\n    arr.sort()\n    for i in range(n):\n        if i != arr[i]:\n            return i\n    return arr[-1] + 1\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    a = mex(arr, n)\n    b = max(arr)\n    if k == 0:\n        print(n)\n    elif a > b:\n        print(n + k)\n    elif ceil((a + b) / 2) not in arr:\n        print(n + 1)\n    elif ceil((a + b) / 2) in arr:\n        print(n)", "ll = lambda : map(int, input().split())\nt = lambda : int(input())\nss = lambda : input()\nlx = lambda x: map(int, input().split(x))\nfrom math import log10, log2, ceil, factorial as f, gcd\nfor _ in range(t()):\n    (n, k) = ll()\n    a = list(ll())\n    s = sorted(set(a))\n    flag = -1\n    x = max(s)\n    for i in range(len(s)):\n        if s[i] != i:\n            flag = i\n            break\n    if flag == -1:\n        print(len(s) + k)\n    elif k > 0 and ceil((x + flag) / 2) not in s:\n        print(len(s) + 1)\n    else:\n        print(len(s))", "def search_mex(mex):\n    for element in S_set:\n        if element > mex:\n            break\n        elif element == mex:\n            mex += 1\n    return mex\nfor t in range(int(input())):\n    (n, k) = map(int, input().split())\n    S_set = list(set([int(i) for i in input().split()]))\n    mex = 0\n    a = search_mex(mex)\n    b = S_set[-1]\n    add = (a + b) // 2 + 1 if (a + b) % 2 else (a + b) // 2\n    if add in S_set or k == 0:\n        print(len(S_set))\n    else:\n        S_set.append(add)\n        if add == max(S_set[-2:]):\n            print(len(S_set) + k - 1)\n        else:\n            print(len(S_set))", "def mex(a):\n    i = 0\n    while i in a:\n        i += 1\n    return i\nfrom math import ceil\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ar = set((int(j) for j in input().split()))\n    a = mex(ar)\n    b = max(ar)\n    c = ceil((a + b) / 2)\n    if a == n:\n        print(n + k)\n    elif k != 0:\n        if c in ar:\n            print(n)\n        else:\n            print(n + 1)\n    else:\n        print(n)", "I = lambda : map(int, input().split())\nfor i in '*' * int(input()):\n    (n, k) = I()\n    a = set(I())\n    while k > 0:\n        q = 0\n        while q in a:\n            q += 1\n        w = max(a)\n        if q == w + 1:\n            break\n        e = (w + q + 1) // 2\n        if e in a:\n            k = 0\n        else:\n            a.add(e)\n        k -= 1\n    print(len(a) + max(k, 0))", "import math\n\ndef mex(arr):\n    i = 0\n    while i in arr:\n        i += 1\n    return i\nfor _ in range(int(input())):\n    (x, y) = list(map(int, input().split()))\n    arr = set(map(int, input().split()))\n    if mex(arr) > max(arr):\n        print(x + y)\n        continue\n    elif y > 0:\n        arr.add(math.ceil((mex(arr) + max(arr)) / 2))\n    print(len(arr))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = set(map(int, input().split()))\n    m = max(a)\n    mex = 0\n    while mex in a:\n        mex += 1\n    if mex > m or k == 0:\n        print(n + k)\n    elif (m + mex + 1) // 2 in a:\n        print(n)\n    else:\n        print(n + 1)", "import sys\nfrom math import ceil\n\ndef find_mex(nums, start):\n    while start in nums:\n        start += 1\n    return start\n\ndef perform(length, nums, k):\n    if k == 0:\n        return length\n    max_ = max(nums)\n    if max_ == length - 1:\n        return length + k\n    mex_ = find_mex(nums, 0)\n    new_elem = ceil((mex_ + max_) / 2)\n    nums.add(new_elem)\n    return len(nums)\nn = int(sys.stdin.readline().strip())\nans = 0\nfor i in range(n):\n    line = sys.stdin.readline().strip()\n    values = list(map(int, line.split()))\n    (n, k) = values\n    line = sys.stdin.readline().strip()\n    multi_set = set(map(int, line.split()))\n    res = perform(len(multi_set), multi_set, k)\n    print(res)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    s = set(lis)\n    Max = max(lis)\n    min = 0\n    for i in range(Max + 2):\n        if i not in s:\n            min = i\n            break\n    if min == Max + 1:\n        print(n + k)\n        continue\n    if k > 0:\n        s.add((Max + min + 1) // 2)\n    print(len(s))", "import math\n\ndef max_mex(num):\n    main_set = set(num)\n    check_set = set([x for x in range(n)])\n    a = check_set.difference(main_set)\n    b = max(num)\n    return math.ceil((a + b) / 2)\ntest_case = int(input())\nfor i in range(test_case):\n    (n, k) = [int(x) for x in input().split()]\n    num = [int(x) for x in input().split()]\n    main_set = set(num)\n    check_set = set([x for x in range(len(main_set))])\n    a = check_set.difference(main_set)\n    b = max(num)\n    if k == 0:\n        print(len(main_set))\n    elif a == set():\n        print(len(main_set) + k)\n    else:\n        a = min(a)\n        new_num = math.ceil((a + b) / 2)\n        if new_num in num:\n            print(len(main_set))\n        else:\n            print(len(main_set) + 1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    s = set(lis)\n    Max = max(lis)\n    min = 0\n    for i in range(Max + 2):\n        if i not in s:\n            min = i\n            break\n    if min == Max + 1:\n        print(n + k)\n        continue\n    if k > 0:\n        s.add((Max + min + 1) // 2)\n    print(len(s))", "import math\n\ndef maxAndMex(s, k):\n    if k == 0:\n        return len(s)\n    if sum(s) == len(s) * (len(s) - 1) // 2:\n        return k + len(s)\n    i = 0\n    while True:\n        if i not in s:\n            break\n        i += 1\n    if math.ceil((max(s) + i) / 2) in s:\n        return len(s)\n    else:\n        return len(s) + 1\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = set(map(int, input().split()))\n    print(maxAndMex(s, k))", "def mex(arr):\n    s = set(arr)\n    z = 0\n    for i in range(max(arr) + 2):\n        if i not in s:\n            z = i\n            break\n    return z\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    s = set(arr)\n    if mex(arr) == max(arr) + 1:\n        print(n + k)\n        continue\n    if k > 0:\n        s.add((max(arr) + mex(arr) + 1) // 2)\n    print(len(s))", "I = lambda : map(int, input().split())\nfor i in '*' * int(input()):\n    (n, k) = I()\n    (a, q) = (set(I()), 0)\n    if k:\n        while q in a:\n            q += 1\n        w = max(a)\n        e = (w + q + 1) // 2\n        if e != q:\n            a.add(e)\n            k = 0\n    print(len(a) + k)", "def main():\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        l = sorted(map(int, input().split()))\n        for (i, a) in enumerate(l):\n            if a != i:\n                if k:\n                    k = (i + l[-1] + 1) // 2 not in l\n                break\n        print(n + k)\nmain()", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    if k == 0:\n        print(n)\n    elif arr[-1] == n - 1:\n        print(n + k)\n    else:\n        mex = 0\n        for i in range(len(arr)):\n            if i != arr[i]:\n                mex = i\n                break\n        mx = arr[-1]\n        if int((mex + mx + 1) / 2) in arr:\n            print(len(arr))\n        else:\n            print(len(arr) + 1)", "import math\nt = int(input())\nfor i in range(t):\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    s = set(map(int, input().split()))\n    a = -1\n    a = max(s)\n    p = 0\n    b = 0\n    while b in s:\n        b = b + 1\n    ans = math.ceil((a + b) / 2)\n    if k > 0:\n        if a > b:\n            if ans in s:\n                print(n)\n            else:\n                print(n + 1)\n        else:\n            print(n + k)\n    else:\n        print(n)", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    elem = set(map(int, input().split()))\n\n    def max_mex(elements, n, k):\n        original_len = len(elements)\n        for i in range(len(elements) + 1):\n            if i not in elements:\n                a = max(elements)\n                b = i\n                if a < b:\n                    return n + k\n                elif k == 0:\n                    return len(elements)\n                else:\n                    for j in range(k):\n                        result = math.ceil((a + b) / 2)\n                        elements.add(result)\n                        if original_len == len(elements):\n                            return len(elements)\n                        elif j == k - 1:\n                            return len(elements)\n                        original_len = len(elements)\n    print(max_mex(elem, n, k))", "t = int(input())\nimport math\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = list(map(int, input().split()))\n    s = set(s)\n    b = max(s)\n    for i in range(b + 2):\n        if i not in s:\n            a = i\n            break\n    if a > b:\n        print(len(s) + k)\n    elif math.ceil((a + b) / 2) not in s:\n        print(len(s) + min(1, k))\n    else:\n        print(len(s))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = set(map(int, input().split()))\n    c = len(l)\n    m = max(l)\n    p = -1\n    if k == 0:\n        print(c)\n        continue\n    for i in range(m + 1):\n        if i not in l:\n            p = i\n            break\n    if p == -1:\n        print(c + k)\n    else:\n        x = p + m\n        y = 0\n        if x % 2 != 0:\n            y = x // 2 + 1\n        else:\n            y = x // 2\n        if y not in l:\n            print(c + 1)\n        else:\n            print(c)", "def mex(a):\n    x = 0\n    while x in a:\n        x += 1\n    return x\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if k == 0:\n        a = input()\n        print(n)\n    else:\n        a = set([int(x) for x in input().split()])\n        m = max(a)\n        me = mex(a)\n        if me > m:\n            print(n + k)\n        else:\n            a.add((me + m + 1) // 2)\n            print(len(a))", "def mex(check):\n    x = 0\n    while x in check:\n        x += 1\n    return x\nt = int(input())\notv = []\nfor p in range(t):\n    (n, k) = map(int, input().split())\n    mass = set(list(map(int, input().split())))\n    if k == 0:\n        otv.append(n)\n        continue\n    else:\n        b = max(mass)\n        a = mex(mass)\n        addition = (a + b + 1) // 2\n        if addition > b:\n            otv.append(n + k)\n        else:\n            mass.add(addition)\n            otv.append(len(mass))\nfor j in otv:\n    print(j)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    s = set(lis)\n    Max = max(lis)\n    min = 0\n    for i in range(Max + 2):\n        if i not in s:\n            min = i\n            break\n    if min == Max + 1:\n        print(n + k)\n        continue\n    if k > 0:\n        s.add((Max + min + 1) // 2)\n    print(len(s))", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    s = set(lis)\n    Max = max(lis)\n    min = 0\n    for i in range(Max + 2):\n        if i not in s:\n            min = i\n            break\n    if min == Max + 1:\n        print(n + k)\n        continue\n    if k > 0:\n        s.add((Max + min + 1) // 2)\n    print(len(s))", "from math import ceil\nimport sys\nfinput = input\nT = int(input())\nfrange = range\nflen = len\nfint = int\nfmap = map\nfprint = print\nfor i in frange(T):\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    s = dict()\n    for i in range(n):\n        s[lis[i]] = 1\n    Max = max(lis)\n    min = 0\n    for i in range(Max + 2):\n        if i not in s:\n            min = i\n            break\n    if min == Max + 1:\n        print(n + k)\n        continue\n    if k > 0:\n        s[(Max + min + 1) // 2] = 1\n    print(len(s))", "from math import ceil\nimport sys\nfinput = input\nT = int(input())\nfrange = range\nflen = len\nfint = int\nfmap = map\nfprint = print\nfor i in frange(T):\n    (n, k) = fmap(fint, finput().split())\n    arr = list(fmap(fint, finput().split()))\n    fmax = max(arr)\n    h = dict()\n    t = 0\n    for j in frange(n):\n        h[arr[j]] = 1\n    for i in range(fmax + 2):\n        if i not in h:\n            t = i\n            break\n    if fmax + 1 == t:\n        fprint(len(h) + k)\n    else:\n        if k != 0:\n            h[ceil((fmax + t) / 2)] = 1\n        fprint(flen(h))", "import math\n\ndef solve():\n    (n, k) = map(int, input().split())\n    a = set(map(int, input().split()))\n    inside = [False] * (n + 1)\n    maximal = max(a)\n    for num in a:\n        if num <= n:\n            inside[num] = True\n    mex = inside.index(False)\n    if k == 0:\n        return len(a)\n    if mex == maximal + 1:\n        return len(a) + k\n    if math.ceil((mex + maximal) / 2) > n or not inside[math.ceil((mex + maximal) / 2)]:\n        return len(a) + 1\n    return len(a)\nt = int(input())\nwhile t > 0:\n    t -= 1\n    print(solve())", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    num_list = list(map(int, input().split()))\n    num_list.sort()\n    MAX = num_list[-1]\n    i = 0\n    if k:\n        for _ in num_list:\n            if _ == i:\n                pass\n            else:\n                MEX = i\n                break\n            i += 1\n        if i == len(num_list):\n            MEX = num_list[-1] + 1\n        if MEX < MAX:\n            num_list.append(ceil((MEX + MAX) / 2))\n            print(len(set(num_list)))\n        elif MEX > MAX:\n            print(len(num_list) + k)\n    else:\n        print(len(num_list))"]