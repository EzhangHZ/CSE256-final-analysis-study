["def solve(n, d, arr):\n    i = 1\n    while d > 0 and i < n:\n        if arr[i] <= 0 or d < i:\n            i += 1\n        elif d >= i:\n            d -= i\n            arr[0] += 1\n            arr[i] -= 1\n    return arr[0]\nt = int(input())\nresults = list()\nfor _ in range(0, t):\n    (n, d) = list(map(int, input().split(' ')))\n    arr = list(map(int, input().split(' ')))\n    results.append(solve(n, d, arr))\nfor result in results:\n    print(result)", "def candh(l, d):\n    if len(l) == 1:\n        return l[0]\n    elif d < l[1]:\n        return d + l[0]\n    else:\n        i = 1\n        count = l[0]\n        while d - i >= 0 and i < len(l):\n            if i * l[i] < d:\n                count += l[i]\n                d = d - i * l[i]\n                i += 1\n            else:\n                for j in range(1, l[i] + 1):\n                    if d - i >= 0:\n                        d = d - i\n                        count += 1\n                    else:\n                        return count\n                i += 1\n        return count\nfor _ in range(int(input())):\n    (l, d) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(candh(arr, d))", "for _ in range(int(input())):\n    (a, b) = [int(x) for x in input().split()]\n    s = [int(x) for x in input().split()]\n    ans = s[0]\n    for i in range(1, a):\n        if b >= i:\n            k = min(b // i, s[i])\n            b -= k * i\n            ans += k\n    print(ans)", "t = int(input())\nfor tt in range(t):\n    (n, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = a[0]\n    r = 1\n    while d // r > 0 and r < n:\n        if a[r] > 0:\n            if a[r] >= d // r:\n                ans += d // r\n                d = 0\n            else:\n                ans += a[r]\n                d -= a[r] * r\n                r += 1\n        else:\n            r += 1\n    print(ans)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if len(l) == 1:\n        print(l[0])\n        continue\n    z = l[0]\n    x = 1\n    u = 0\n    o = 0\n    for i in l:\n        if u == 1:\n            break\n        if o == 0:\n            o = 1\n            continue\n        for j in range(i):\n            if x <= m:\n                m -= x\n                z += 1\n            else:\n                u = 1\n                break\n        x += 1\n    print(z)", "for _ in range(int(input())):\n    (n, d) = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    c = w[0]\n    for i in range(1, n):\n        a = min(d // i, w[i])\n        d -= i * a\n        c += a\n        if d < i:\n            break\n    print(c)", "def tst(n, d, l):\n    for i in range(1, n):\n        if d >= i * l[i]:\n            d -= l[i] * i\n            l[0] += l[i]\n        else:\n            l[0] += d // i\n            break\n    print(l[0])\n    pass\ns = int(input())\nfor i in range(s):\n    (n, d) = map(int, input().split())\n    l = list(map(int, input().split()))\n    tst(n, d, l)", "def solution(n, d, piles):\n    maxi = piles[0]\n    for (idx, pile) in enumerate(piles):\n        if idx == 0:\n            continue\n        while piles[idx] > 0 and d - idx >= 0:\n            d -= idx\n            piles[idx] -= 1\n            maxi += 1\n    return maxi\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (n, d) = [int(x) for x in input().split()]\n    piles = [int(x) for x in input().split()]\n    print(solution(n, d, piles))", "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n    (n, d) = R()\n    r = i = 0\n    for x in R():\n        m = min(d, i * x)\n        r += m // i if i else x\n        d -= m\n        i += 1\n    print(r)", "for t in range(int(input())):\n    (n, d) = map(int, input().split(' '))\n    a = list(map(int, input().split(' ')))\n    i = 1\n    while d > 0 and i < n:\n        m = min(d, a[i] * i) // i\n        d -= m * i\n        a[0] += m\n        i += 1\n    print(a[0])", "for _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    l = list(map(int, input().split()))\n    m_ = l[0]\n    w = 1\n    i = 1\n    while d > 0:\n        if i < n:\n            if l[i] > 0:\n                if d >= l[i] * w:\n                    m_ = m_ + l[i]\n                    d = d - l[i] * w\n                    l[i] = 0\n                    i += 1\n                    w += 1\n                else:\n                    q = d // w\n                    m_ = m_ + q\n                    d = 0\n            else:\n                i += 1\n                w += 1\n        else:\n            break\n    print(m_)", "t = int(input())\nfor _ in range(t):\n    (n, d) = (int(i) for i in input().split())\n    a = (int(i) for i in input().split())\n    res = next(a)\n    for (i, e) in enumerate(a):\n        res += min(d, (i + 1) * e) // (i + 1)\n        d -= (i + 1) * e\n        if d <= 0:\n            break\n    print(res)", "t = int(input())\nfor z in range(t):\n    (n, d) = input().split()\n    n = int(n)\n    d = int(d)\n    a = list(map(int, input().split()))\n    for i in range(1, n):\n        m = min(a[i], int(d / i))\n        a[0] += m\n        d -= m * i\n    print(a[0])", "n = int(input())\nfor _ in range(n):\n    (dlina, d) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    for i in range(1, dlina):\n        pr = arr[i] * i\n        if pr <= d:\n            arr[0] += arr[i]\n            d -= pr\n        else:\n            arr[0] += d // i\n            break\n    print(arr[0])", "n = int(input())\nfor _ in range(n):\n    (dlina, d) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    for i in range(1, dlina):\n        while arr[i] > 0 and d >= i:\n            arr[0] += 1\n            d -= i\n            arr[i] -= 1\n    print(arr[0])", "def maxOfCol1(a, k):\n    (res, i) = (a[0], 1)\n    while k > 0 and i < len(a):\n        if i * a[i] < k:\n            k -= i * a[i]\n            res += a[i]\n        else:\n            res += k // i\n            k = 0\n        i += 1\n    return res\nt = int(input())\nfor i in range(t):\n    (n, d) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    print(maxOfCol1(a, d))", "t = int(input())\nfor i in range(t):\n    (n, d) = map(int, input().split())\n    a = input().split()\n    a = [int(i) for i in a]\n    if n == 1:\n        print(a[0])\n        continue\n    sum = a[0]\n    i = 1\n    while i <= d and i < n:\n        if d > i * a[i]:\n            sum = sum + a[i]\n            d = d - i * a[i]\n        else:\n            k = d // i\n            sum = sum + k\n            d = 0\n        i = i + 1\n    print(sum)", "for t in range(int(input())):\n    (n, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    answer = a[0]\n    for i in range(1, n):\n        if a[i] * i > d:\n            answer += d // i\n            break\n        else:\n            answer += a[i]\n            d -= a[i] * i\n    print(answer)", "t = int(input())\nfor _ in range(t):\n    (n, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for _ in range(d):\n        for i in range(n):\n            if a[i] != 0 and i != 0:\n                a[i - 1] += 1\n                a[i] -= 1\n                break\n    print(a[0])", "for _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    for i in range(1, n):\n        if arr[i] * i >= d:\n            arr[0] += d // i\n            break\n        else:\n            arr[0] += arr[i]\n            d -= arr[i] * i\n    print(arr[0])", "cases = int(input())\nwhile cases:\n    cases -= 1\n    (n, d) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ans = arr[0]\n    sm = sum(arr)\n    i = 1\n    while d > 0 and ans != sm and (i < n):\n        piles = arr[i]\n        while piles > 0 and d >= i:\n            ans += 1\n            piles -= 1\n            d -= i\n        i += 1\n    print(ans)", "def main():\n    (n, d) = map(int, input().split())\n    aa = list(map(int, input().split()))\n    for (dist, val) in enumerate(aa[1:]):\n        dist += 1\n        if d < dist:\n            break\n        mn = min(val, d // dist)\n        aa[0] += mn\n        d -= mn * dist\n    print(aa[0])\nt = int(input())\nfor _ in range(t):\n    main()", "for _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = l[0]\n    for i in range(1, n):\n        if d == 0:\n            break\n        if l[i] * i <= d:\n            ans += l[i]\n            d -= l[i] * i\n        else:\n            ans += d // i\n            d = 0\n    print(ans)", "for _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    lst = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(1, n):\n        x = min(d, lst[i] * i)\n        ans += x // i\n        d -= x\n        if d == 0:\n            break\n    print(lst[0] + ans)", "def solve():\n    (n, k) = map(int, input().split())\n    arr = [int(i) for i in input().split()]\n    price = 1\n    while k >= price and price < len(arr):\n        if arr[price] == 0:\n            price += 1\n            continue\n        arr[price] -= 1\n        k -= price\n        arr[0] += 1\n    print(arr[0])\nt = int(input())\nwhile t:\n    solve()\n    t -= 1", "for _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = l[0]\n    for i in range(1, n):\n        if l[i] * i <= d:\n            s += l[i]\n            d -= l[i] * i\n        else:\n            s += d // i\n            d = 0\n        if d == 0:\n            break\n    print(s)", "n = int(input())\nfor t in range(n):\n    hy = []\n    (a, b) = input().split(' ')\n    a = int(a)\n    b = int(b)\n    s = input()\n    hy = s.split(' ')\n    for i in range(len(hy)):\n        hy[i] = int(hy[i])\n    a1 = 0\n    for i in range(1, a):\n        a1 = i * hy[i]\n        if a1 > b:\n            hy[0] += b // i\n            break\n        b = b - a1\n        hy[0] += hy[i]\n    print(hy[0])", "for _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    r = a[0]\n    for i in range(1, n):\n        x = min(d // i, a[i])\n        r += x\n        d -= x * i\n    print(r)", "for _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    a = [*map(int, input().split())]\n    cnt = a[0]\n    for i in range(1, n):\n        cnt = min(d // i, a[i])\n        a[0] += cnt\n        d = d - cnt * i\n        if d <= i:\n            break\n    print(a[0])", "import math\nk = int(input())\nalfabet = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8, 'i': 9, 'j': 10, 'k': 11, 'l': 12, 'm': 13, 'n': 14, 'o': 15, 'p': 16, 'q': 17, 'r': 18, 's': 19, 't': 20, 'u': 21, 'v': 22, 'w': 23, 'x': 24, 'y': 25, 'z': 26}\nwhile k > 0:\n    lista_1 = list(map(int, input().split()))\n    lista_2 = list(map(int, input().split()))\n    n = lista_1[0]\n    d = lista_1[1]\n    zile = d\n    total = lista_2[0]\n    for i in range(1, n):\n        if zile <= d:\n            punere = min(lista_2[i], int(math.floor(zile / i)))\n            zile -= punere * i\n            total += punere\n    print(total)\n    k = k - 1", "n = int(input())\nfor _ in range(n):\n    (dlina, d) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    for i in range(1, dlina):\n        pr = arr[i] * i\n        if pr <= d:\n            arr[0] += arr[i]\n            d -= pr\n        else:\n            arr[0] += d // i\n            break\n    print(arr[0])", "t = int(input())\nfor _ in range(t):\n    (n, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    r = a[1:]\n    if r:\n        while d:\n            if sum(r) == 0:\n                break\n            for i in range(len(r)):\n                if r[i] > 0:\n                    if d >= i + 1:\n                        a[0] += 1\n                        r[i] -= 1\n                        d -= i + 1\n                        break\n                    else:\n                        d = 0\n                        break\n        print(a[0])\n    else:\n        print(a[0])", "t = int(input())\nfor i in range(t):\n    temp = [int(x) for x in input().split()]\n    n = temp[0]\n    d = temp[1]\n    a = [int(x) for x in input().split()]\n    result = 0\n    for i in range(1, n):\n        if d // i >= a[i]:\n            result += a[i]\n            d -= a[i] * i\n        else:\n            result += d // i\n            break\n    print(a[0] + result)", "num_cases = int(input())\n\ndef move_hay(list_obj):\n    if len(list_obj) <= 1:\n        return list_obj\n    else:\n        index = 1\n        while index < len(list_obj):\n            if list_obj[index] <= 0:\n                index += 1\n            else:\n                break\n        if index == len(list_obj):\n            return list_obj\n        else:\n            list_obj[index] -= 1\n            list_obj[index - 1] += 1\n            return list_obj\nfor i in range(num_cases):\n    nums = list(map(int, input().split()))\n    hay_bales = list()\n    while len(hay_bales) != nums[0]:\n        hay_bales.extend(list(map(int, input().split())))\n    for j in range(nums[1]):\n        hay_bales = move_hay(hay_bales)\n    print(hay_bales[0])", "t = int(input())\nfor i in range(t):\n    (n, d) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = 0\n    chc = 0\n    add = 0\n    for i in range(1, len(l)):\n        for j in range(l[i]):\n            s += i\n            add += 1\n            if s == d:\n                print(l[0] + add)\n                chc = 1\n                break\n            if s > d:\n                print(add - 1 + l[0])\n                chc = 1\n                break\n        if chc == 1:\n            break\n    if chc == 0:\n        print(sum(l))", "def main_function():\n    output_list = []\n    t = int(input())\n    for i in range(t):\n        (n, d) = [int(i) for i in input().split(' ')]\n        if n == 1:\n            a = [int(i) for i in input().split(' ')]\n            output_list.append(str(a[0]))\n            continue\n        a = [int(i) for i in input().split(' ')]\n        b = [a[i] * i for i in range(1, len(a))]\n        count = a[0]\n        for i in range(len(b)):\n            if d >= b[i]:\n                count += b[i] // (i + 1)\n                d -= b[i]\n            elif d < i + 1:\n                break\n            elif d < b[i]:\n                count += d // (i + 1)\n                break\n        output_list.append(str(count))\n    return '\\n'.join(output_list)\nprint(main_function())", "from sys import *\ninput = stdin.readline\nlistInput = lambda : list(map(int, input().strip().split()))\nlineInput = lambda : map(int, input().strip().split())\nsJoin = lambda a, sep: f'{sep}'.join(a)\narrJoin = lambda a, sep: f'{sep}'.join(map(str, a))\n\ndef isPrime(n):\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    for i in range(5, int(math.sqrt(n) + 1), 6):\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n    return True\n\ndef main():\n    for _ in range(int(input())):\n        (n, d) = lineInput()\n        arr = listInput()\n        if len(arr) == 1:\n            print(arr[0])\n        else:\n            for i in range(1, n):\n                while arr[i] > 0:\n                    if d - i < 0:\n                        break\n                    arr[0] += 1\n                    arr[i] -= 1\n                    d -= i\n            print(arr[0])\nmain()", "for t in range(int(input())):\n    (n, d) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    for i in range(1, n):\n        check = min(d // i, arr[i])\n        d -= check * i\n        arr[0] += check\n    print(arr[0])", "t = int(input())\nfor i in range(t):\n    (n, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    while d > 0:\n        for j in range(1, n):\n            if a[j] > 0:\n                a[j] -= 1\n                a[j - 1] += 1\n                d -= 1\n                break\n        else:\n            d -= 1\n    print(a[0])", "t = int(input())\nfor _ in range(t):\n    (n, d) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    i = 1\n    while d >= i:\n        if i == n:\n            break\n        if arr[i] == 0:\n            i = i + 1\n        else:\n            arr[0] = arr[0] + 1\n            arr[i] = arr[i] - 1\n            d = d - i\n    print(arr[0])", "t = int(input())\nfor i in range(t):\n    (n, d) = map(int, input().split())\n    l = list(map(int, input().split()))\n    for i in range(1, n):\n        if d // i > 0:\n            if d // i >= l[i]:\n                l[0] += l[i]\n                d -= l[i] * i\n                l[i] = 0\n            else:\n                l[0] += d // i\n                d -= d // i * i\n                break\n    print(l[0])", "for a in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    i = 1\n    while k > 0 and i < n:\n        c = min(k // i, l[i])\n        if c != 0:\n            l[0] += c\n            k -= c * i\n        i += 1\n        if k < i:\n            break\n    print(l[0])", "t = int(input())\nfor _ in range(t):\n    (n, d) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    for i in range(1, n):\n        mn = min(d // i, a[i])\n        a[0] += mn\n        if d == mn:\n            break\n        d -= mn * i\n    print(a[0])", "for _ in range(int(input())):\n    (n, d) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    for i in range(1, n):\n        while a[i] > 0 and d >= i:\n            d -= i\n            a[i] -= 1\n            a[0] += 1\n    print(a[0])", "def solve():\n    (n, d) = map(int, input().split())\n    li = list(map(int, input().split()))\n    while d:\n        for i in range(1, n):\n            if li[i] > 0:\n                li[i] -= 1\n                li[i - 1] += 1\n                break\n        d -= 1\n    print(li[0])\nt = int(input())\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = a[0]\n    for i in range(1, n):\n        p = min(d // i, a[i])\n        ans += p\n        d -= p * i\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, d) = map(int, input().strip().split())\n    a = list(map(int, input().strip().split()))\n    for i in range(1, n):\n        if d == 0:\n            break\n        if a[i] == 0:\n            continue\n        if a[i] * i <= d:\n            a[0] += a[i]\n            d -= a[i] * i\n        else:\n            for j in range(a[i] - 1, 0, -1):\n                if j * i <= d:\n                    a[0] += j\n                    d -= j * i\n                    break\n    print(a[0])", "for _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(1, n):\n        m = min(a[i], int(d / i))\n        a[0] += m\n        d -= m * i\n    print(a[0])", "m = int(input())\nl = []\nfor _ in range(m):\n    (t, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(d):\n        for j in range(t - 1):\n            if a[j + 1] != 0:\n                a[j] += 1\n                a[j + 1] -= 1\n                break\n    l.append(a[0])\nfor i in l:\n    print(i)", "q = int(input())\nfor z in range(0, q):\n    n = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    j = 0\n    p = 0\n    l = 0\n    for i in range(1, n[0]):\n        l += i * a[i]\n        if l > n[1]:\n            j = 1\n            break\n        p += a[i]\n    if j == 1:\n        l = l - i * a[i]\n        for w in range(1, a[i] + 1):\n            if i * w > n[1] - l:\n                break\n    p = p + a[0]\n    if j == 1:\n        p = p + w - 1\n    print(p)", "def main():\n    t = int(input())\n    while t:\n        t -= 1\n        (n, d) = map(int, input().split())\n        a = list(map(int, input().split()))\n        for i in range(1, len(a)):\n            if i * a[i] <= d:\n                d -= i * a[i]\n                a[0] += a[i]\n            else:\n                a[0] += d // i\n                break\n        print(a[0])\nmain()", "t = int(input())\nfor i in range(t):\n    (n, d) = map(int, input().split())\n    l = list(map(int, input().split()))\n    for i in range(1, n):\n        p = min(d, i * l[i])\n        d = d - p\n        l[0] = l[0] + p // i\n    print(l[0])", "t = int(input())\nfor i in range(t):\n    (n, d) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    s = 0\n    i = 1\n    while i < n and d > 0:\n        w = a[i] * i\n        if w <= d:\n            s += a[i]\n            d = d - w\n        else:\n            s += d // i\n            d = 0\n        i += 1\n    print(s + a[0])", "for _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    t = 1\n    ans = lst[0]\n    for i in range(1, n):\n        if t * lst[i] < d:\n            ans += lst[i]\n            d -= t * lst[i]\n            t += 1\n        else:\n            ans += int(d / t)\n            break\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    data = list(map(int, input().split()))\n    for (index, value) in enumerate(data[1:]):\n        index += 1\n        potential = m // index\n        if potential == 0:\n            break\n        incr = min(potential, value)\n        data[0] += incr\n        m = m - incr * index\n    print(data[0])", "for _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    l = list(map(int, input().split()))\n    i = 1\n    if n > 1:\n        while d > 0:\n            if l[i] != 0 and i > 0:\n                l[i] -= 1\n                l[i - 1] += 1\n                d -= 1\n                i -= 1\n            else:\n                i += 1\n                if i > n - 1:\n                    break\n        print(l[0])\n    else:\n        print(*l)", "t = int(input())\nfor _ in range(t):\n    hello = list(map(int, input().split()))\n    n = hello[0]\n    d = hello[1]\n    hay = list(map(int, input().split()))\n    for i in range(1, n):\n        move = min(d // i, hay[i])\n        hay[0] += move\n        d -= move * i\n    print(hay[0])", "for _ in range(int(input())):\n    (n, days) = list(map(int, input().split()))\n    nums = list(map(int, input().split()))\n    i = 1\n    i = 1\n    while i < n:\n        if nums[i] * i > days:\n            break\n        days -= nums[i] * i\n        nums[0] += nums[i]\n        i += 1\n    if days > 0 and i < n:\n        k = days // i\n        nums[0] += k\n    print(nums[0])", "t = int(input())\nfor i in range(t):\n    (n, d) = [int(i) for i in input().split()]\n    haybales = [int(i) for i in input().split()]\n    res = haybales[0]\n    for i in range(1, n):\n        while d >= i and haybales[i] > 0:\n            d -= i\n            haybales[i] -= 1\n            res += 1\n    print(res)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, d) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(a[0])\n    elif a[1] >= d:\n        print(a[0] + d)\n    else:\n        s = a[0]\n        for i in range(1, n):\n            if a[i] > 0:\n                if a[i] < d // i:\n                    s += a[i]\n                    d -= a[i] * i\n                else:\n                    s += d // i\n                    break\n        print(s)", "for _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a1 = a[0]\n    for i in range(1, n):\n        if a[i] * i > d:\n            a1 += d // i\n            break\n        else:\n            a1 += a[i]\n            d -= a[i] * i\n    print(a1)", "t = int(input(''))\nfor _ in range(t):\n    [n, d] = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    ans = arr[0]\n    for i in range(1, n):\n        baki = d\n        lagbe = arr[i] * i\n        jabe = min(baki, lagbe)\n        ans += jabe // i\n        d -= jabe\n        if d < 0:\n            break\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, d) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    pos = 1\n    while d and pos < n:\n        if arr[pos] == 0:\n            pos += 1\n            continue\n        if d - pos < 0:\n            break\n        arr[pos] -= 1\n        arr[0] += 1\n        d -= pos\n    print(arr[0])", "t = int(input())\nfor _ in range(t):\n    (n, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    res = a[0]\n    for i in range(1, n):\n        if d // i > a[i]:\n            d -= a[i] * i\n            res += a[i]\n        elif d // i == a[i]:\n            res += a[i]\n            break\n        else:\n            res += d // i\n            break\n    print(res)", "for _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    maxx = a[0]\n    i = 1\n    while i < n:\n        if a[i] * i <= d:\n            maxx += a[i]\n            d -= a[i] * i\n        elif i > d:\n            break\n        else:\n            x = d // i\n            if x <= a[i]:\n                maxx += x\n                break\n        i += 1\n    print(maxx)", "t = int(input())\nfor _ in range(t):\n    (n, d) = map(int, input().split())\n    l = list(map(int, input().split()))\n    cnt = 0\n    for i in range(1, n):\n        cnt = i\n        while l[i] > 0 and d > 0:\n            d = d - cnt\n            if d >= 0:\n                l[0] += 1\n            l[i] -= 1\n        if d < 0:\n            break\n    print(l[0])", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().strip().split())\n    ls = list(map(int, input().strip().split()))\n    ans = ls[0]\n    for i in range(1, n):\n        if ls[i] * i <= k:\n            temp = ls[i]\n            k -= temp * i\n            ans += temp\n        elif i <= k:\n            temp = k // i\n            k -= temp * i\n            ans += temp\n        else:\n            break\n        if k == 0:\n            break\n    print(ans)", "def solution():\n    from sys import stdin, stdout\n    (_input, _print, _range, _int, _len, _str) = (stdin.readline, stdout.write, range, int, len, str)\n    for _ in _range(_int(_input())):\n        (n, d) = [_int(i) for i in _input().split()]\n        arr = [_int(i) for i in _input().split()]\n        current = 1\n        while d > 0 and current < n:\n            if d >= arr[current] * current:\n                arr[0] += arr[current]\n                d -= arr[current] * current\n            else:\n                temp = d // current\n                arr[0] += temp\n                d -= temp * current\n            current += 1\n        print(arr[0])\nsolution()", "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n    (n, d) = R()\n    a = (*R(),)\n    r = i = 0\n    while i < n and i * a[i] <= d:\n        d -= i * a[i]\n        r += a[i]\n        i += 1\n    if i < n:\n        r += d // i\n    print(r)", "import math\nx = int(input())\nfor a in range(x):\n    y = str(input()).split(' ')\n    z = str(input()).split(' ')\n    dias = int(y[1])\n    vetor = [int(z[b]) for b in range(len(z))]\n    total = vetor[0]\n    for b in range(1, len(z)):\n        if dias > 0:\n            custo = vetor[b] * b\n            if custo <= dias:\n                total += vetor[b]\n                dias -= custo\n            else:\n                total += dias // b\n                dias -= dias // b * b\n        else:\n            break\n    print(total)", "t = int(input())\nfor tc in range(1, t + 1):\n    (n, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(1, n):\n        if a[i]:\n            d -= i * a[i]\n            a[0] += a[i]\n        if d < 0:\n            a[0] += d // i\n            break\n    print(a[0])", "t = int(input())\nfor _ in range(t):\n    arr1 = list(map(int, input().strip().split()))\n    arr2 = list(map(int, input().strip().split()))\n    (n, d) = (arr1[0], arr1[1])\n    res = arr2[0]\n    i = 1\n    while i < n:\n        if arr2[i] == 0:\n            i += 1\n            continue\n        if d >= i:\n            res += 1\n            arr2[i] -= 1\n            d -= i\n        else:\n            break\n    print(res)", "for _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    i = 0\n    ans = a[0]\n    for j in range(1, n):\n        i += 1\n        if d == 0:\n            break\n        if d >= a[j] * i:\n            ans += a[j]\n            d -= a[j] * i\n        else:\n            ans += int(d / i)\n            d = 0\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, d) = map(int, input().split())\n    sum = 0\n    haybales = list(map(int, input().split()))\n    for i in range(n):\n        res = haybales[i]\n        if res * i <= d:\n            sum += res\n            d -= res * i\n        else:\n            res2 = d // i\n            sum += res2\n            break\n    print(sum)", "l = int(input())\ni = 0\nfor _ in range(l):\n    i += 1\n    (n, d) = map(int, input().split())\n    if n == 0:\n        print(0)\n    else:\n        i += 1\n        p = list(map(int, input().split()))\n        res = p[0]\n        used = 0\n        j = 1\n        while True:\n            if j >= len(p):\n                break\n            elif p[j] == 0:\n                j += 1\n            elif used + j > d:\n                break\n            else:\n                used += j\n                res += 1\n                p[j] -= 1\n        print(res)", "t = int(input())\nfor _ in range(t):\n    (n, d) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ans = arr[0]\n    for i in range(1, n):\n        if arr[i] * i <= d:\n            ans += arr[i]\n            d -= arr[i] * i\n        else:\n            ans += d // i\n            break\n    print(ans)", "t = int(input())\nnumh = []\nnumd = []\nfor i in range(t):\n    numh.append(list(map(int, input().split())))\n    numd.append(list(map(int, input().split())))\nfor i in range(t):\n    day = numh[i][1]\n    val = numd[i][0]\n    for j in range(1, len(numd[i])):\n        if day < j * numd[i][j]:\n            val += day // j\n            break\n        else:\n            val += numd[i][j]\n            day -= j * numd[i][j]\n    print(val)", "t = int(input())\nfor i in range(t):\n    (n, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    cost = a[0]\n    for j in range(1, n):\n        if d >= a[j] * j:\n            cost = cost + a[j]\n            d = d - a[j] * j\n        else:\n            cost = cost + d // j\n            break\n    print(cost)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [int(v) for v in input().split()]\n    for i in range(1, n):\n        if a[i] and k > 0:\n            while k > 0 and k >= i and (a[i] > 0):\n                k = k - i\n                a[0] += 1\n                a[i] -= 1\n    print(a[0])", "import math\nfor _ in range(int(input())):\n    (w, s) = map(int, input().split())\n    a = list(map(int, input().split()))\n    wasd = 0\n    m = 1\n    for m in range(1, len(a)):\n        if a[m] == 0:\n            continue\n        if a[m] * m <= s:\n            wasd += a[m]\n            s -= a[m] * m\n        else:\n            wasd += math.floor(s / m)\n            break\n    print(a[0] + wasd)", "def func(pile, day):\n    ret = pile[0]\n    for i in range(1, len(pile)):\n        cost = i * pile[i]\n        if day >= cost:\n            ret += pile[i]\n            day -= cost\n        else:\n            for j in range(1, pile[i] + 1):\n                if i * j > day:\n                    cost = i * (j - 1)\n                    ret += j - 1\n                    day -= cost\n                    break\n    return ret\nt = int(input())\npiles = []\ndays = []\nfor _ in range(t):\n    tmp = list(map(int, input().split()))\n    num_piles = tmp[0]\n    days.append(tmp[1])\n    tmp = list(map(int, input().split()))\n    piles.append(tmp)\nfor i in range(t):\n    print(func(piles[i], days[i]))", "x = int(input())\nfor i in range(x):\n    (n, d) = map(int, input().split())\n    l = list(map(int, input().split()))\n    a = l[0]\n    t = 0\n    for i in range(1, len(l)):\n        if d <= l[i] * i:\n            a += d // i\n            d -= d // i\n            break\n        else:\n            a += l[i]\n            d -= l[i] * i\n    print(a)", "t = int(input())\nres = []\nfor i in range(t):\n    params = list(map(int, input().split()))\n    n = params[0]\n    d = params[1]\n    piles = input()\n    piles = list(map(int, piles.split()))\n    sum = 0\n    score = 1\n    for i in range(1, len(piles)):\n        pile = piles[i]\n        max = pile * score\n        if max >= d:\n            piles[0] += d // score\n            break\n        else:\n            piles[0] += pile\n            d -= max\n        score += 1\n    res.append(piles[0])\nprint(*res, sep='\\n')", "count_test = int(input())\narrs = []\nres = []\n\ndef calc(count_day, count_in_one):\n    res_c = count_in_one[0]\n    count_in_one = count_in_one[1:]\n    steps_lost = count_day\n    for (current_pos, num_stocks) in enumerate(count_in_one):\n        if num_stocks == 0:\n            continue\n        if steps_lost < 0:\n            return res_c\n        for _ in range(num_stocks):\n            steps_lost -= current_pos + 1\n            if steps_lost < 0:\n                return res_c\n            res_c += 1\n    return res_c\nfor _ in range(count_test):\n    n1 = input()\n    n2 = input()\n    arr1 = [int(i) for i in n1.split(' ')]\n    arr2 = [int(i) for i in n2.split(' ')]\n    count_haystacks = arr1[0]\n    count_day = arr1[1]\n    count_in_one = [int(i) for i in arr2]\n    c = calc(count_day, count_in_one)\n    res.append(c)\nfor i in res:\n    print(i)", "t = int(input())\n\ndef find(y, arr):\n    days = y\n    res = arr[0]\n    for l in range(1, len(arr)):\n        for k in range(0, arr[l]):\n            if days < l:\n                break\n            res += 1\n            days -= l\n    print(res)\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    find(y, arr)", "def main():\n    for _ in range(int(input())):\n        (n, d) = map(int, input().split())\n        a = list(map(int, input().split()))\n        ans = a[0]\n        for i in range(1, n):\n            if a[i] * i <= d:\n                d -= a[i] * i\n                ans += a[i]\n            else:\n                ans += d // i\n                break\n        print(ans)\nmain()", "def checker(n, d, lst):\n    result = lst[0]\n    for i in range(1, n):\n        if lst[i] * i <= d:\n            d -= lst[i] * i\n            result += lst[i]\n        else:\n            result += d // i\n            break\n    return result\nfor _ in range(int(input())):\n    (N, D) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    print(checker(N, D, a))", "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n    (n, d) = R()\n    r = i = 0\n    for x in R():\n        if i * x > d:\n            r += d // i\n            break\n        d -= i * x\n        r += x\n        i += 1\n    print(r)", "n = int(input())\nfor i in range(n):\n    r = input()\n    arr1 = r.split()\n    for i in range(2):\n        arr1[i] = int(arr1[i])\n    x = input()\n    arr2 = x.split()\n    for i in range(arr1[0]):\n        arr2[i] = int(arr2[i])\n    day = arr1[1]\n    p = 1\n    p = int(p)\n    if arr1[0] == 1:\n        print(arr2[0])\n    else:\n        while day >= p & p < arr1[0]:\n            if arr2[p] != 0:\n                arr2[0] += 1\n                arr2[p] -= 1\n                day -= p\n            else:\n                p += 1\n        print(arr2[0])", "n = int(input())\n\ndef main():\n    temp = input().split()\n    num = int(temp[0])\n    day = int(temp[1])\n    temp = input().split()\n    arr = list(map(int, temp))\n    for i in range(1, num):\n        if day < i:\n            break\n        if arr[i] == 0:\n            continue\n        temp = min(day // i, arr[i])\n        arr[0] = arr[0] + temp\n        day = day - temp * i\n        arr[i] = arr[i] = temp\n    return arr[0]\nfor _ in range(n):\n    print(main())", "t = int(input())\n\ndef findAns(i, d, n, piles):\n    ans = piles[0]\n    count = d\n    for r in range(1, n):\n        rc = 0\n        if i + r < n:\n            rc = piles[i + r]\n        if count >= r:\n            bayles = min(rc, count // r)\n            change = r * bayles\n            ans += min(rc, count // r)\n            count -= change\n        else:\n            return ans\n        if count == 0:\n            return ans\n    return ans\nfor j in range(0, t):\n    (n, d) = list(map(int, input().split()))\n    piles = list(map(int, input().split()))\n    arrMax = piles.copy()\n    print(findAns(0, d, n, piles))", "def haybales(piles):\n    n = piles[0]\n    d = piles[1]\n    a = piles[2]\n    pile = a[0]\n    if n == 1:\n        return pile\n    i = 1\n    while True:\n        if d < 0:\n            return pile - 1\n        if d == 0 or i == n:\n            return pile\n        if a[i] > 0:\n            d -= i\n            pile += 1\n            a[i] -= 1\n        else:\n            i += 1\nt = int(input().rstrip())\nresult = list()\nfor i in range(t):\n    temp = list(map(int, input().rstrip().split()))\n    n = temp[0]\n    d = temp[1]\n    a = list(map(int, input().rstrip().split()))\n    result.append((n, d, a))\nfor i in result:\n    print(haybales(i))", "t = int(input())\nfor _ in range(t):\n    (n, d) = [int(i) for i in input().strip().split()]\n    piles = [int(i) for i in input().strip().split()]\n    sm = piles[0]\n    for i in range(1, n):\n        if int(d / i) == 0:\n            break\n        tmp = min(int(d / i), piles[i])\n        d -= i * tmp\n        sm += tmp\n    print(sm)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    piles = list(map(int, input().split()))\n    res = piles[0]\n    for i in range(1, len(piles)):\n        while piles[i] > 0 and i <= m:\n            res += 1\n            m -= i\n            piles[i] -= 1\n    print(res)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    piles = list(map(int, input().split()))\n    for i in range(1, len(piles)):\n        while piles[i] > 0 and i <= m:\n            piles[0] += 1\n            m -= i\n            piles[i] -= 1\n    print(piles[0])", "for _ in range(int(input())):\n    (nb_piles, days) = [int(x) for x in input().split()]\n    piles = [int(x) for x in input().split()]\n    for i in range(1, nb_piles):\n        can_move = min(days, piles[i] * i)\n        can_move -= can_move % i\n        move = can_move // i\n        piles[0] += move\n        days -= can_move\n    print(piles[0])", "t = int(input())\nwhile t > 0:\n    x = input().split()\n    n = int(x[0])\n    d = int(x[1])\n    x = input().split()\n    for i in range(len(x)):\n        x[i] = int(x[i])\n    sumi = x[0]\n    for i in range(1, len(x)):\n        if d <= 0:\n            break\n        if d >= i * x[i]:\n            d -= i * x[i]\n            sumi += x[i]\n        else:\n            sumi += d // i\n            d = -1\n    print(sumi)\n    t -= 1", "n = int(input())\nfor i in range(n):\n    (m, k) = map(int, input().split())\n    bi = list(map(int, input().split()))\n    d = k\n    for j in range(1, m):\n        while d >= j and bi[j] > 0:\n            d = d - j\n            bi[j] -= 1\n            bi[0] += 1\n    print(bi[0])"]