["cases = int(input())\nfor _ in range(cases):\n    string = input()\n    x = int(input())\n    originalString = ['1'] * len(string)\n    for i in range(len(string)):\n        if string[i] == '0':\n            if i - x >= 0:\n                originalString[i - x] = '0'\n            if i + x < len(string):\n                originalString[i + x] = '0'\n    for i in range(len(string)):\n        if string[i] == '1':\n            if i - x >= 0 and originalString[i - x] == '1' or (i + x < len(string) and originalString[i + x] == '1'):\n                continue\n            else:\n                print(-1)\n                break\n    else:\n        print(''.join(originalString))", "t = int(input())\n\ndef foo(s, x):\n    n = len(s)\n    y = n * ['1']\n    for i in range(n - x):\n        if s[i] == '0':\n            y[i + x] = '0'\n        if s[n - 1 - i] == '0':\n            y[n - 1 - i - x] = '0'\n    for i in range(n):\n        if i - x >= 0 and y[i - x] == '1' or (i + x < n and y[i + x] == '1'):\n            if s[i] == '0':\n                return '-1'\n        elif s[i] == '1':\n            return '-1'\n    return ''.join(y)\nfor _ in range(t):\n    s = input()\n    x = int(input())\n    print(foo(s, x))", "t = int(input())\nfor k in range(t):\n    (s, x) = (input(), int(input()))\n    n = len(s)\n    ans = ['1'] * len(s)\n    for i in range(len(s)):\n        if s[i] == '0':\n            if i - x >= 0:\n                ans[i - x] = '0'\n            if i + x < n:\n                ans[i + x] = '0'\n    flag = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            if i - x >= 0 and ans[i - x] == '1' or (i + x < n and ans[i + x] == '1'):\n                flag = 0\n            else:\n                flag = 1\n                break\n    ans2 = ''\n    for i in ans:\n        ans2 += i\n    if flag == 1:\n        print(-1)\n    else:\n        print(ans2)", "def solve():\n    t = int(input().strip())\n    for i in range(t):\n        s = [int(x) for x in input().strip()]\n        x = int(input())\n        n = len(s)\n        w = ['1'] * n\n        for i in range(n):\n            if s[i] == 0:\n                if i - x >= 0:\n                    w[i - x] = '0'\n                if i + x < n:\n                    w[i + x] = '0'\n        s_new = []\n        for i in range(n):\n            if i - x >= 0 and w[i - x] == '1':\n                s_new.append(1)\n            elif i + x < n and w[i + x] == '1':\n                s_new.append(1)\n            else:\n                s_new.append(0)\n        if s_new == s:\n            print(''.join(w))\n        else:\n            print('-1')\nsolve()", "t = int(input())\nfor _ in range(t):\n    ok = True\n    txt = input().strip()\n    n = int(input())\n    ans = ['1' for c in txt]\n    for i in range(len(txt)):\n        if txt[i] == '0':\n            if i - n >= 0:\n                ans[i - n] = '0'\n            if i + n < len(txt):\n                ans[i + n] = '0'\n    for i in range(len(txt)):\n        if txt[i] == '1':\n            if i - n >= 0 and ans[i - n] == '1':\n                continue\n            elif i + n < len(txt) and ans[i + n] == '1':\n                continue\n            else:\n                ok = False\n                break\n    print(''.join(ans) if ok else -1)", "t = int(input())\nwhile t > 0:\n    s = input()\n    x = int(input())\n    n = len(s)\n\n    def helper(n, s, x):\n        w = '1' * n\n        w = list(w)\n        for i in range(n):\n            if s[i] == '0':\n                if i + x < n:\n                    w[i + x] = '0'\n                if i - x >= 0:\n                    w[i - x] = '0'\n        for i in range(n):\n            if s[i] == '1':\n                if i + x < n and w[i + x] == '1' or (i - x >= 0 and w[i - x] == '1'):\n                    continue\n                else:\n                    return -1\n            elif i + x < n and w[i + x] == '1' or (i - x >= 0 and w[i - x] == '1'):\n                return -1\n        return ''.join(w)\n    print(helper(n, s, x))\n    t -= 1", "for _ in range(int(input())):\n    s = list(input())\n    x = int(input())\n    n = len(s)\n    w = ['1'] * n\n    for i in range(n):\n        if s[i] == '0':\n            if i - x >= 0:\n                w[i - x] = '0'\n            if i + x < n:\n                w[i + x] = '0'\n    s_recreated = ['?'] * n\n    for i in range(n):\n        if i - x >= 0 and w[i - x] == '1' or (i + x < n and w[i + x] == '1'):\n            s_recreated[i] = '1'\n        else:\n            s_recreated[i] = '0'\n    if s_recreated == s:\n        print(''.join(w))\n    else:\n        print('-1')", "import sys\n\ndef input():\n    return sys.stdin.readline().rstrip('\\r\\n')\n\ndef maps():\n    return [int(i) for i in input().split()]\n\ndef check(s, w, n, x):\n    for i in range(n):\n        ok = False\n        if s[i] == '1':\n            if i >= x and w[i - x] == '1':\n                ok = True\n            elif i + x < n and w[i + x] == '1':\n                ok = True\n        elif i - x < 0 and i + x >= n:\n            ok = True\n        elif i - x >= 0 and i + x < n:\n            if w[i - x] == w[i + x] == '0':\n                ok = True\n        elif i >= x and w[i - x] == '0':\n            ok = True\n        elif i + x < n and w[i + x] == '0':\n            ok = True\n        if not ok:\n            return False\n    return True\nfor _ in range(*maps()):\n    s = input()\n    n = len(s)\n    (x,) = maps()\n    w = ['1'] * n\n    for i in range(n):\n        if s[i] == '0':\n            if i >= x:\n                w[i - x] = '0'\n            if i + x < n:\n                w[i + x] = '0'\n    if check(s, w, n, x):\n        print(''.join(w))\n    else:\n        print('-1')", "import math, sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nmod1 = 1000000007\nmod2 = 998244353\nfor _ in range(I()):\n    s = S()\n    x = I()\n    l = ['1'] * len(s)\n    s1 = ''\n    for i in range(len(s)):\n        if s[i] == '1':\n            continue\n        if i - x >= 0:\n            l[i - x] = '0'\n        if i + x < len(s):\n            l[i + x] = '0'\n    for i in range(len(l)):\n        if i - x >= 0 and l[i - x] == '1':\n            s1 += '1'\n            continue\n        if i + x < len(l) and l[i + x] == '1':\n            s1 += '1'\n            continue\n        s1 += '0'\n    print(''.join(l) if s == s1 else -1)", "for _ in range(int(input())):\n    s = input()\n    x = int(input())\n    n = len(s)\n    ans = ['1'] * n\n    ok = True\n    for i in range(n):\n        if s[i] == '0':\n            if i > x - 1:\n                ans[i - x] = '0'\n            if i + x < n:\n                ans[i + x] = '0'\n    for i in range(n):\n        one = False\n        one = one | (i > x - 1 and ans[i - x] == '1')\n        one = one | (i + x < n and ans[i + x] == '1')\n        if not one:\n            if s[i] != '0':\n                ok = False\n    if ok:\n        print(''.join(ans))\n    else:\n        print(-1)", "for i in range(int(input())):\n    s = input()\n    x = int(input())\n    n = len(s)\n    ans = ['1'] * n\n    for i in range(n):\n        if s[i] == '0':\n            if i - x >= 0:\n                ans[i - x] = '0'\n            if i + x < n:\n                ans[i + x] = '0'\n    f = 0\n    for i in range(n):\n        if s[i] == '1':\n            if i - x >= 0 and ans[i - x] == '1' or (i + x < n and ans[i + x] == '1'):\n                f = 0\n            else:\n                f = 1\n                break\n    a = ''\n    for i in ans:\n        a += i\n    if f == 1:\n        print(-1)\n    else:\n        print(a)", "def solve(s, x, n):\n    arr = [1] * n\n    for i in range(n):\n        if s[i] == '0':\n            if i - x >= 0:\n                arr[i - x] = 0\n            if i + x < n:\n                arr[i + x] = 0\n    for i in range(n):\n        if s[i] == '1':\n            if i - x < 0 and i + x >= n:\n                return -1\n            if i - x < 0:\n                if i + x < n:\n                    if arr[i + x] == 0:\n                        return -1\n            if i + x >= n:\n                if i - x >= 0:\n                    if arr[i - x] == 0:\n                        return -1\n            if i - x >= 0 and i + x < n:\n                if arr[i - x] == 0 and arr[i + x] == 0:\n                    return -1\n    return ''.join(map(str, arr))\nt = int(input())\nfor i in range(t):\n    s = input()\n    x = int(input())\n    print(solve(s, x, len(s)))", "t = int(input())\n\ndef solve():\n    s = input()\n    x = int(input())\n    w = [None] * len(s)\n    for (i, dig) in enumerate(s):\n        if dig == '0':\n            if i + x < len(s):\n                w[i + x] = 0\n            if i - x >= 0:\n                w[i - x] = 0\n    for i in range(len(s)):\n        if w[i] == None:\n            w[i] = 1\n    recreated_s = [None] * len(s)\n    for i in range(len(s)):\n        if i + x < len(s) and w[i + x] == 1:\n            recreated_s[i] = '1'\n        elif i - x >= 0 and w[i - x] == 1:\n            recreated_s[i] = '1'\n        else:\n            recreated_s[i] = '0'\n    if ''.join(recreated_s) == s:\n        print(''.join(map(str, w)))\n    else:\n        print(-1)\nwhile t:\n    solve()\n    t -= 1", "def read_int():\n    return int(input().strip())\n\ndef read_ints():\n    return list(map(int, input().strip().split()))\n\ndef read_floats():\n    return list(map(float, input().strip().split()))\n\ndef read_str():\n    return input().strip()\n\ndef solve_t():\n    s = read_str()\n    x = read_int()\n    n = len(s)\n    w = list('1' * n)\n    for i in range(n):\n        if s[i] == '0':\n            if i - x >= 0:\n                w[i - x] = '0'\n            if i + x < n:\n                w[i + x] = '0'\n    for i in range(n):\n        if s[i] == '1':\n            invalid = True\n            if i - x >= 0 and w[i - x] == '1':\n                invalid = False\n            if i + x < n and w[i + x] == '1':\n                invalid = False\n            if invalid:\n                print(-1)\n                return\n    print(''.join(w))\n\ndef solve():\n    t = read_int()\n    for _ in range(t):\n        solve_t()\nsolve()", "def slv():\n    s = input()\n    k = int(input())\n    n = len(s)\n    pokita = 1\n    nes = ['?' for _ in range(n)]\n    for i in range(n):\n        if s[i] == '0':\n            if i + k < n:\n                nes[i + k] = '0'\n            if i - k >= 0:\n                nes[i - k] = '0'\n    gok = 1\n    for i in range(n):\n        if s[i] == '1':\n            pok = 0\n            if i + k < n and nes[i + k] != '0':\n                pok = 1\n                nes[i + k] = '1'\n            if i - k >= 0 and nes[i - k] != '0':\n                pok = 1\n                nes[i - k] = '1'\n            if not pok:\n                gok = 0\n    for i in range(n):\n        if nes[i] == '?':\n            nes[i] = '1'\n    if gok == 0:\n        print('-1')\n    else:\n        print(''.join(map(str, nes)))\nt = int(input())\nfor _ in range(t):\n    slv()", "for _ in range(int(input())):\n    (s, x) = (list(map(int, input())), int(input()))\n    n = len(s)\n    r = [1] * n\n    for i in range(n):\n        if s[i] < 1:\n            if i >= x:\n                r[i - x] = 0\n            if i + x < n:\n                r[i + x] = 0\n    w = []\n    for i in range(n):\n        b = 0\n        if i >= x and r[i - x] == 1:\n            b = 1\n        if i < n - x and r[i + x] == 1:\n            b = 1\n        w.append(b)\n    if w != s:\n        print(-1)\n    else:\n        print(''.join(map(str, r)))", "tests = int(input())\nfor _ in range(tests):\n    string = list(input())\n    n = len(string)\n    x = int(input())\n    ans = list(n * '1')\n    for i in range(n):\n        if string[i] == '0':\n            if i + x < n:\n                ans[i + x] = '0'\n            if i - x >= 0:\n                ans[i - x] = '0'\n    check = []\n    for i in range(n):\n        number = '0'\n        if i - x >= 0 and ans[i - x] == '1':\n            number = '1'\n        if i + x < n and ans[i + x] == '1':\n            number = '1'\n        check.append(number)\n    if check == string:\n        print(''.join(ans))\n    else:\n        print('-1')", "for _ in range(int(input())):\n    s = input()\n    x = int(input())\n    ls = len(s)\n    a = [1] * ls\n    for (i, k) in enumerate(s):\n        if k == '0':\n            if i - x >= 0:\n                a[i - x] = 0\n            if i + x < ls:\n                a[i + x] = 0\n    for (i, k) in enumerate(s):\n        if k == '1':\n            f = 0\n            if i - x >= 0:\n                f |= a[i - x]\n            if i + x < ls:\n                f |= a[i + x]\n            if not f:\n                print(-1)\n                break\n    else:\n        print(''.join((str(a) for a in a)))", "t = int(input().strip())\nfor i in range(t):\n    s = [int(x) for x in input().strip()]\n    x = int(input())\n    n = len(s)\n    w = ['1'] * n\n    for i in range(n):\n        if s[i] == 0:\n            if i - x >= 0:\n                w[i - x] = '0'\n            if i + x < n:\n                w[i + x] = '0'\n    s_new = []\n    for i in range(n):\n        if i - x >= 0 and w[i - x] == '1':\n            s_new.append(1)\n        elif i + x < n and w[i + x] == '1':\n            s_new.append(1)\n        else:\n            s_new.append(0)\n    if s_new == s:\n        print(''.join(w))\n    else:\n        print('-1')", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    s = input().strip()\n    n = len(s)\n    x = int(input())\n    outl = ['1'] * n\n    for i in range(n):\n        if s[i] == '0':\n            if i >= x:\n                outl[i - x] = '0'\n            if i + x < n:\n                outl[i + x] = '0'\n    out = ''.join(outl)\n    works = True\n    for i in range(n):\n        if s[i] == '1':\n            if (i < x or out[i - x] == '0') and (i + x >= n or out[i + x] == '0'):\n                works = False\n                break\n    if works:\n        print(out)\n    else:\n        print(-1)", "def controller(s, x):\n    n = len(s)\n    w = list('1' * n)\n    a = -x\n    b = x\n    for si in s:\n        if a >= 0 and si == '0':\n            w[a] = '0'\n        if b < n and si == '0':\n            w[b] = '0'\n        if a < 0 and b >= n and (si == '1'):\n            return '-1'\n        a += 1\n        b += 1\n    a = -x\n    b = x\n    for si in s:\n        if si == '1':\n            if a < 0:\n                if b < n and w[b] == '0':\n                    return '-1'\n            elif b < n:\n                if w[a] == '0' == w[b]:\n                    return '-1'\n            elif w[a] == '0':\n                return '-1'\n        a += 1\n        b += 1\n    return ''.join(w)\n\ndef c_in():\n    n_test_case = int(input())\n    for i in range(n_test_case):\n        s = input().rstrip()\n        x = int(input())\n        print(controller(s, x))\nc_in()", "import datetime\nt = int(input())\nfor _ in range(t):\n    string = input()\n    x = int(input())\n    original_string = ['1'] * len(string)\n    for i in range(len(string)):\n        if string[i] == '0':\n            if i - x >= 0:\n                original_string[i - x] = '0'\n            if i + x < len(string):\n                original_string[i + x] = '0'\n    for i in range(len(string)):\n        if string[i] == '1':\n            if i - x >= 0 and original_string[i - x] == '1' or (i + x < len(string) and original_string[i + x] == '1'):\n                continue\n            else:\n                print(-1)\n                break\n    else:\n        print(''.join(original_string))", "def fun(s, x):\n    n = len(s)\n    ans = ''\n    for i in range(n):\n        if i - x >= 0 and s[i - x] == '1' or (i + x < n and s[i + x] == '1'):\n            ans = ans + '1'\n        else:\n            ans = ans + '0'\n    return ans\nt = int(input())\nwhile t > 0:\n    s = input()\n    x = int(input())\n    n = len(s)\n    flag = 0\n    ans = ['1' for _ in range(n)]\n    for i in range(n):\n        if s[i] == '0':\n            if i - x >= 0:\n                ans[i - x] = '0'\n            if i + x < n:\n                ans[i + x] = '0'\n    if fun(ans, x) == s:\n        print(''.join(ans))\n    else:\n        print(-1)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    s = input()\n    n = len(s)\n    x = int(input())\n    w = ['1'] * n\n    S = ['0'] * n\n    for (i, si) in enumerate(s):\n        if si == '0':\n            if i >= x:\n                w[i - x] = '0'\n            if i + x < n:\n                w[i + x] = '0'\n    for i in range(n):\n        if i >= x and w[i - x] == '1' or (i + x < n and w[i + x] == '1'):\n            S[i] = '1'\n    print(''.join(w) if s == ''.join(S) else '-1')", "def fun(ans, s):\n    for i in range(len(s)):\n        if s[i] == '1':\n            if i - x >= 0 and ans[i - x] == '1':\n                continue\n            if i + x < len(s) and ans[i + x] == '1':\n                continue\n            return False\n    return True\nfor _ in range(int(input())):\n    s = input()\n    x = int(input())\n    n = len(s)\n    ans = ['1'] * n\n    for i in range(n):\n        if s[i] == '0':\n            if i - x >= 0:\n                ans[i - x] = '0'\n            if i + x < n:\n                ans[i + x] = '0'\n    ret = ''.join(ans)\n    chk = fun(ans, s)\n    if not chk:\n        print(-1)\n    else:\n        print(ret)", "def findEncoded(s, x):\n    enc = list(['0'] * len(s))\n    for i in range(len(s)):\n        if s[i] == '1':\n            if i - x >= 0:\n                enc[i - x] = '1'\n            if i + x < len(s):\n                enc[i + x] = '1'\n    return enc\n\ndef findOriginal(s, x):\n    orig = list(['1'] * len(s))\n    for i in range(len(s)):\n        if s[i] == '0':\n            if i - x >= 0:\n                orig[i - x] = '0'\n            if i + x < len(s):\n                orig[i + x] = '0'\n    return orig\nfor _ in range(int(input())):\n    s = list(input())\n    x = int(input())\n    orig = findOriginal(s, x)\n    enc = findEncoded(orig, x)\n    if enc == s:\n        print(''.join(orig))\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    s = list(input())\n    n = len(s)\n    x = int(input())\n    ans = ['1'] * n\n    b = ['0'] * n\n    for i in range(n):\n        if s[i] == '0':\n            if i - x >= 0:\n                ans[i - x] = '0'\n            if i + x < n:\n                ans[i + x] = '0'\n    for i in range(n):\n        if i - x >= 0 and ans[i - x] == '1':\n            b[i] = '1'\n        if i + x < n and ans[i + x] == '1':\n            b[i] = '1'\n    if s == b:\n        print(''.join(ans))\n    else:\n        print(-1)", "def func():\n    n = len(s)\n    w = ['_'] * n\n    for i in range(n):\n        if s[i] == '0':\n            flag = True\n            if i + x < n:\n                w[i + x] = '0'\n                flag = False\n            if i - x > -1:\n                w[i - x] = '0'\n                flag = False\n            if (i - x > -1 or i + x < n) and flag:\n                print(-1)\n                return\n    for i in range(n):\n        if s[i] == '1':\n            flag = True\n            if i + x < n and w[i + x] != '0':\n                w[i + x] = '1'\n                flag = False\n            if i - x > -1 and w[i - x] != '0':\n                w[i - x] = '1'\n                flag = False\n            if flag:\n                print(-1)\n                return\n    for i in range(n):\n        if w[i] == '_':\n            w[i] = '1'\n    print(''.join(w))\nfor _ in range(int(input())):\n    s = list(input())\n    x = int(input())\n    func()", "t = int(input())\nfor _ in range(t):\n    s = list(input())\n    x = int(input())\n    n = len(s)\n    res = ['1'] * n\n    for i in range(n):\n        if s[i] == '0':\n            if i + x < n:\n                res[i + x] = '0'\n            if i - x >= 0:\n                res[i - x] = '0'\n    flag = True\n    for i in range(n):\n        if s[i] == '1':\n            a = True\n            b = True\n            if i + x >= n:\n                b = False\n            if i - x < 0:\n                a = False\n            if i + x < n and res[i + x] == '0':\n                b = False\n            if i - x >= 0 and res[i - x] == '0':\n                a = False\n            if a == False and b == False:\n                flag = False\n                break\n    if flag == 0:\n        print(-1)\n    else:\n        print(''.join(res))", "for _ in range(int(input())):\n    s = list(map(int, input()))\n    x = int(input())\n    n = len(s)\n    r = [1] * n\n    for i in range(n):\n        if s[i] < 1:\n            if i >= x:\n                r[i - x] = 0\n            if i + x < n:\n                r[i + x] = 0\n    w = []\n    for i in range(n):\n        b = 0\n        if i >= x and r[i - x] == 1:\n            b = 1\n        if i < n - x and r[i + x] == 1:\n            b = 1\n        w.append(b)\n    print(-1 if w != s else ''.join(map(str, r)))", "for _ in range(int(input())):\n    (s, x) = (list(map(int, input())), int(input()))\n    n = len(s)\n    r = [1] * n\n    for i in range(n):\n        if s[i] < 1:\n            if i >= x:\n                r[i - x] = 0\n            if i + x < n:\n                r[i + x] = 0\n    w = []\n    for i in range(n):\n        b = 0\n        if i >= x and r[i - x] == 1:\n            b = 1\n        if i < n - x and r[i + x] == 1:\n            b = 1\n        w.append(b)\n    if w != s:\n        print(-1)\n    else:\n        print(''.join(map(str, r)))", "t = int(input())\n\ndef sxw(x, w):\n    s = ['1' for i in range(len(w))]\n    for i in range(len(s)):\n        if i - x >= 0 and w[i - x] == '1' or (i + x < len(w) and w[i + x] == '1'):\n            s[i] = '1'\n        else:\n            s[i] = '0'\n    return s\nwhile t != 0:\n    t -= 1\n    s = list(input())\n    x = int(input())\n    ns = list('1' * len(s))\n    for i in range(len(s)):\n        if s[i] == '0':\n            if i - x >= 0:\n                ns[i - x] = '0'\n            if i + x < len(s):\n                ns[i + x] = '0'\n    if sxw(x, ns) == s:\n        print(''.join(ns))\n    else:\n        print(-1)", "for _ in range(int(input())):\n    s = input()\n    x = int(input())\n    n = len(s)\n    ans = ['1'] * n\n    ok = True\n    for i in range(n):\n        if s[i] == '0':\n            if i - x >= 0:\n                ans[i - x] = '0'\n            if i + x < n:\n                ans[i + x] = '0'\n    for i in range(n):\n        one = False\n        one = one | (i > x - 1 and ans[i - x] == '1')\n        one = one | (i + x < n and ans[i + x] == '1')\n        if one:\n            l = '1'\n        else:\n            l = '0'\n        if s[i] != l:\n            ok = False\n    if ok:\n        print(''.join(ans))\n    else:\n        print(-1)", "for _ in range(int(input())):\n    s = list(map(int, input()))\n    x = int(input())\n    n = len(s)\n    r = [1] * n\n    for i in range(n):\n        if s[i] < 1:\n            if i >= x:\n                r[i - x] = 0\n            if i + x < n:\n                r[i + x] = 0\n    w = []\n    for i in range(n):\n        b = 0\n        if i >= x and r[i - x] == 1:\n            b = 1\n        if i < n - x and r[i + x] == 1:\n            b = 1\n        w.append(b)\n    print(-1 if w != s else ''.join(map(str, r)))", "T = int(input())\nfor _ in range(T):\n    s = input()\n    x = int(input())\n    n = len(s)\n    ans = ['1'] * len(s)\n    for i in range(len(s)):\n        if s[i] == '0':\n            if i - x >= 0:\n                ans[i - x] = '0'\n            if i + x < n:\n                ans[i + x] = '0'\n    f = 1\n    for i in range(len(s)):\n        if s[i] == '1':\n            if i - x >= 0 and ans[i - x] == '1' or (i + x < n and ans[i + x] == '1'):\n                continue\n            else:\n                f = 0\n                break\n    a = ''\n    if f:\n        print(a.join(ans))\n    else:\n        print(-1)", "for _ in range(int(input())):\n    s = input()\n    x = int(input())\n    n = len(s)\n    ans = ['1'] * n\n    for z in range(n):\n        if s[z] == '0':\n            if z - x >= 0:\n                ans[z - x] = '0'\n            if z + x < n:\n                ans[z + x] = '0'\n    c = 0\n    for z in range(n):\n        if s[z] == '1':\n            c = 0\n            v = z - x >= 0 and ans[z - x] == '1' or (z + x < n and ans[z + x] == '1')\n            if not v:\n                print(-1)\n                c = 1\n                break\n    if c == 0:\n        print(''.join(ans))", "for _ in range(int(input())):\n    s = input()\n    x = int(input())\n    n = len(s)\n    w = ['1'] * n\n    no = False\n    for i in range(n):\n        if s[i] == '0':\n            if i - x >= 0:\n                w[i - x] = '0'\n            if i + x < n:\n                w[i + x] = '0'\n    for i in range(n):\n        if s[i] == '1':\n            if i - x >= 0 and w[i - x] == '1' or (i + x < n and w[i + x] == '1'):\n                no = False\n            else:\n                no = True\n                break\n    if no:\n        print('-1')\n    else:\n        print(''.join(w))", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    x = int(input())\n    w = [''] * n\n    valid = True\n    for i in range(n):\n        if 0 <= i - x and i + x < n:\n            if s[i] == '1':\n                if w[i - x] == '':\n                    w[i - x] = '1'\n                elif w[i - x] == '0':\n                    w[i + x] = '1'\n            else:\n                if w[i - x] == '':\n                    w[i - x] = '0'\n                elif w[i - x] != '0':\n                    valid = False\n                    break\n                w[i + x] = '0'\n        elif 0 <= i - x and i + x >= n:\n            if s[i] == '1':\n                if w[i - x] == '':\n                    w[i - x] = '1'\n                elif w[i - x] == '0':\n                    valid = False\n                    break\n            elif w[i - x] == '':\n                w[i - x] = '0'\n            elif w[i - x] != '0':\n                valid = False\n                break\n        elif 0 > i - x and i + x < n:\n            w[i + x] = s[i]\n        else:\n            if s[i] != '0':\n                valid = False\n                break\n            w[i] = '0'\n    if valid:\n        for i in range(n):\n            if w[i] == '':\n                w[i] = '1'\n        print(''.join(w))\n    else:\n        print(-1)", "import sys\n\ndef main():\n    tn = int(input())\n    for ti in range(tn):\n        S = input().strip()\n        n = len(S)\n        W = [''] * n\n        x = int(input())\n        is_ok = True\n        for (i, s) in enumerate(S):\n            if s == '1':\n                continue\n            if i - x >= 0:\n                W[i - x] = '0'\n            if i + x < n:\n                W[i + x] = '0'\n        for (i, s) in enumerate(S):\n            if s == '0':\n                continue\n            c = 0\n            if i - x >= 0 and W[i - x] == '':\n                c += 1\n            if i + x < n and W[i + x] == '':\n                c += 1\n            if c == 0:\n                is_ok = False\n        print(''.join(map(lambda x: x if x == '0' else '1', W)) if is_ok else '-1')\nmain()", "t = int(input())\nwhile t:\n    s = input()\n    n = len(s)\n    x = int(input())\n    ans = ['1'] * n\n    for i in range(n):\n        if s[i] == '0':\n            if i + x < n:\n                ans[i + x] = '0'\n            if i - x >= 0:\n                ans[i - x] = '0'\n    sdash = ''\n    for i in range(n):\n        if i + x < n:\n            if ans[i + x] == '1':\n                sdash += '1'\n                continue\n        if i - x >= 0:\n            if ans[i - x] == '1':\n                sdash += '1'\n                continue\n        sdash += '0'\n    if s == sdash:\n        print(''.join(ans))\n    else:\n        print(-1)\n    t -= 1", "T = int(input())\nans = []\nfor i in range(T):\n    s = list(input())\n    x = int(input())\n    w = ['1'] * len(s)\n    for i in range(len(s)):\n        if s[i] == '0':\n            if i - x >= 0:\n                w[i - x] = '0'\n            if i + x < len(s):\n                w[i + x] = '0'\n    is_Ok = True\n    for i in range(len(s)):\n        if s[i] == '1':\n            if i - x >= 0:\n                if w[i - x] == '1':\n                    continue\n            if i + x < len(s):\n                if w[i + x] == '1':\n                    continue\n            is_Ok = False\n    if is_Ok:\n        ans.append(w)\n    else:\n        ans.append(['-1'])\nfor i in range(T):\n    print(''.join(ans[i]))", "def stringmaker(string1, x):\n    finder = ['1'] * len(string1)\n    output = ''\n    for i in range(len(string1)):\n        if string1[i] == '0':\n            if i - x >= 0:\n                finder[i - x] = '0'\n            if i + x < len(string1):\n                finder[i + x] = '0'\n    for i in range(len(string1)):\n        flag = 0\n        output += finder[i]\n        if string1[i] == '1':\n            if i - x >= 0:\n                if finder[i - x] == '0':\n                    flag += 1\n            else:\n                flag += 1\n            if i + x < len(string1):\n                if finder[i + x] == '0':\n                    flag += 1\n            else:\n                flag += 1\n            if flag == 2:\n                return -1\n    return output\nfor i in range(int(input())):\n    string1 = str(input())\n    x = int(input())\n    output = stringmaker(string1, x)\n    print(output)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    x = int(input())\n    w = ['1'] * n\n    for i in range(n):\n        if s[i] == '0':\n            if i + x < n:\n                w[i + x] = '0'\n            if i - x > -1:\n                w[i - x] = '0'\n    check = ['0'] * n\n    for i in range(n):\n        if i - x > -1 and w[i - x] == '1':\n            check[i] = '1'\n        elif i + x < n and w[i + x] == '1':\n            check[i] = '1'\n    ans = ''.join(check)\n    if s == ans:\n        print(''.join(w))\n    else:\n        print(-1)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    x = int(input())\n    w = ['1'] * n\n    for i in range(n):\n        if s[i] == '0':\n            if i >= x:\n                w[i - x] = '0'\n            if i + x < n:\n                w[i + x] = '0'\n    y = ['0'] * n\n    for i in range(n):\n        if w[i] == '1':\n            if i >= x:\n                y[i - x] = '1'\n            if i + x < n:\n                y[i + x] = '1'\n    y = ''.join(y)\n    if y == s:\n        print(''.join(w))\n    else:\n        print(-1)", "t = int(input())\nanswer = []\nfor _ in range(t):\n    string = input()\n    x = int(input())\n    n = len(string)\n    tempo = ['1' for i in range(n)]\n    for i in range(n):\n        if string[i] == '0':\n            if i + x < n:\n                tempo[i + x] = '0'\n            if i - x >= 0:\n                tempo[i - x] = '0'\n    for i in range(n):\n        if string[i] == '1':\n            bool = False\n            if i + x < n:\n                bool = bool or tempo[i + x] != '0'\n            if i - x >= 0:\n                bool = bool or tempo[i - x] != '0'\n            if not bool:\n                tempo = '-1'\n                break\n    if tempo != '-1':\n        tempo = ''.join(tempo)\n    answer.append(tempo)\nprint('\\n'.join(answer))", "t = int(input())\nfor i in range(t):\n    s = input()\n    x = int(input())\n    n = len(s)\n    w = ['1'] * n\n    for i in range(n):\n        if s[i] == '0':\n            if i + x < n:\n                w[i + x] = '0'\n            if i - x >= 0:\n                w[i - x] = '0'\n    for i in range(n):\n        t = i + x < n and w[i + x] == '1' or (i - x >= 0 and w[i - x] == '1')\n        c = '0'\n        if t:\n            c = '1'\n        if s[i] != c:\n            print(-1)\n            break\n    else:\n        print(''.join(w))", "def reconstruct(s, x):\n    w = '1' * len(s)\n    m = list(w)\n    l = []\n    for i in range(len(s)):\n        if s[i] == '0':\n            if i + 1 + x <= len(s):\n                m[i + x] = '0'\n            if i + 1 > x:\n                m[i - x] = '0'\n    for i in range(len(s)):\n        flag = 0\n        if s[i] == '1':\n            if i + 1 > x:\n                if m[i - x] == '1':\n                    flag = 1\n                    l.append(i - x)\n            if i + 1 + x <= len(s):\n                if m[i + x] == '1':\n                    flag = 1\n                    l.append(i + x)\n            if flag == 0:\n                return -1\n    ans = ''.join(m)\n    return ans\nt = int(input())\nfor _ in range(t):\n    s = input()\n    x = int(input())\n    print(reconstruct(s, x))", "for _ in range(int(input())):\n    s = input()\n    x = int(input())\n    s = '0' + s\n    n = len(s)\n    ans = ['1'] * n\n    flag = True\n    for i in range(1, n):\n        if s[i] == '0':\n            if i - x > 0:\n                ans[i - x] = '0'\n            if i + x < n:\n                ans[i + x] = '0'\n    for i in range(1, n):\n        if s[i] == '1':\n            if i - x > 0 and ans[i - x] == '1':\n                continue\n            elif i + x < n and ans[i + x] == '1':\n                continue\n            else:\n                print(-1)\n                flag = False\n                break\n    if flag:\n        print(''.join(ans[1:]))", "class Conflict(Exception):\n    pass\n\ndef controller(s, x):\n    n = len(s)\n    s = tuple((i == '1' for i in s))\n    w = [None] * n\n    constraints = []\n\n    def set(idx, val):\n        oldval = w[idx]\n        if oldval is None:\n            w[idx] = val\n        elif oldval is val:\n            pass\n        else:\n            raise Conflict()\n    try:\n        for (i, si) in enumerate(s):\n            a = i - x\n            b = i + x\n            has_a = 0 <= a\n            has_b = b < n\n            if has_a:\n                if has_b:\n                    if si:\n                        constraints.append(i)\n                    else:\n                        set(a, False)\n                        set(b, False)\n                else:\n                    set(a, si)\n            elif has_b:\n                set(b, si)\n            elif si:\n                raise Conflict()\n        for i in constraints:\n            a = w[i - x]\n            b = w[i + x]\n            if a or b:\n                pass\n            elif a is False and b is False:\n                raise Conflict()\n    except Conflict:\n        return -1\n    return ''.join(('0' if i is False else '1' for i in w))\n\ndef c_in():\n    import sys, os\n    file = sys.stdin\n    n_test_case = int(file.readline())\n    for i in range(n_test_case):\n        s = file.readline().rstrip()\n        x = int(file.readline())\n        print(controller(s, x))\nc_in()", "T = int(input())\noutput = ['0'] * T\nfor t in range(T):\n    s = input()\n    n = len(s)\n    x = int(input())\n    w = ['1'] * n\n    s_new = ['0'] * n\n    for (i, si) in enumerate(s):\n        if si == '0':\n            if i >= x:\n                w[i - x] = '0'\n            if i + x < n:\n                w[i + x] = '0'\n    for i in range(n):\n        if i >= x and w[i - x] == '1' or (i + x < n and w[i + x] == '1'):\n            s_new[i] = '1'\n    output[t] = ''.join(w) if s == ''.join(s_new) else '-1'\nprint('\\n'.join(output))", "for t in range(int(input())):\n    s = input()\n    x = int(input())\n    n = len(s)\n    flag = 0\n    w = ['1'] * len(s)\n    for i in range(n):\n        if s[i] == '0':\n            if i - x >= 0:\n                w[i - x] = '0'\n            if i + x < n:\n                w[i + x] = '0'\n    ws = ['0'] * n\n    for i in range(n):\n        if w[i] == '1':\n            if i - x >= 0:\n                ws[i - x] = '1'\n            if i + x < n:\n                ws[i + x] = '1'\n    s = list(s)\n    if s == ws:\n        print(''.join(w))\n    else:\n        print(-1)", "for t in range(int(input())):\n    s = input()\n    x = int(input())\n    n = len(s)\n    w = ['1'] * len(s)\n    for i in range(n):\n        if s[i] == '0':\n            if i - x >= 0:\n                w[i - x] = '0'\n            if i + x < n:\n                w[i + x] = '0'\n    ws = ['0'] * n\n    for i in range(n):\n        if w[i] == '1':\n            if i - x >= 0:\n                ws[i - x] = '1'\n            if i + x < n:\n                ws[i + x] = '1'\n    s = list(s)\n    if s == ws:\n        print(''.join(w))\n    else:\n        print(-1)", "for _ in range(int(input())):\n    s = list(input())\n    x = int(input())\n    n = len(s)\n    m = ['1'] * n\n    for i in range(n):\n        if s[i] == '0':\n            if i + x < n:\n                m[i + x] = '0'\n            if i - x >= 0:\n                m[i - x] = '0'\n    res = ['0'] * n\n    for i in range(n):\n        if i + x < n:\n            if m[i + x] == '1':\n                res[i] = '1'\n                continue\n        if i - x >= 0:\n            if m[i - x] == '1':\n                res[i] = '1'\n                continue\n    if res == s:\n        print(''.join(m))\n    else:\n        print(-1)", "for _ in range(int(input())):\n    s = input().strip()\n    x = int(input())\n    n = len(s)\n    w = ['1'] * n\n    for i in range(n):\n        if s[i] == '0':\n            if i + x < n:\n                w[i + x] = '0'\n            if i - x >= 0:\n                w[i - x] = '0'\n    ok = True\n    for i in range(n):\n        if s[i] == '1':\n            ok = False\n            if i + x < n and w[i + x] != '0':\n                ok = True\n            if i - x >= 0 and w[i - x] != '0':\n                ok = True\n            if not ok:\n                break\n    if ok:\n        print(''.join(w))\n    else:\n        print(-1)", "for _ in range(int(input())):\n    s = input()\n    k = int(input())\n    l = len(s)\n    ans = [1] * l\n    for i in range(l):\n        if s[i] == '0':\n            if i + k < l:\n                ans[i + k] = 0\n            if i - k >= 0:\n                ans[i - k] = 0\n    f = True\n    for i in range(l):\n        if s[i] == '1':\n            if i - k >= 0 and ans[i - k] == 1 or (i + k < l and ans[i + k] == 1):\n                f = True\n            else:\n                f = False\n                break\n    print(-1 if not f else ''.join((str(i) for i in ans)))", "def findStr(s, x, c):\n    enc = list(['0' if c == '1' else '1'] * len(s))\n    for i in range(len(s)):\n        if s[i] == c:\n            if i - x >= 0:\n                enc[i - x] = c\n            if i + x < len(s):\n                enc[i + x] = c\n    return enc\nfor _ in range(int(input())):\n    s = list(input())\n    x = int(input())\n    orig = findStr(s, x, '0')\n    enc = findStr(orig, x, '1')\n    if enc == s:\n        print(''.join(orig))\n    else:\n        print(-1)", "from sys import stdin\nnii = lambda : map(int, stdin.readline().split())\nlnii = lambda : list(map(int, stdin.readline().split()))\nt = int(input())\nfor tt in range(t):\n    s = list(map(lambda x: int(x), list(input())))\n    x = int(input())\n    n = len(s)\n    ans = [1 for i in range(n)]\n    for i in range(n):\n        if s[i] == 0:\n            if i - x >= 0:\n                ans[i - x] = 0\n            if i + x < n:\n                ans[i + x] = 0\n    for i in range(n):\n        if s[i] == 1:\n            if (i - x < 0 or ans[i - x] == 0) and (i + x >= n or ans[i + x] == 0):\n                ans = [-1]\n                break\n    print(''.join([str(i) for i in ans]))", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    s = stdin.readline().strip()\n    n = len(s)\n    x = int(stdin.readline())\n    res = ['1'] * n\n    for (i, c) in enumerate(s):\n        if c == '0':\n            if i + x < n:\n                res[i + x] = '0'\n            if i - x > -1:\n                res[i - x] = '0'\n    for i in range(n):\n        one = False\n        one = one or (i - x >= 0 and res[i - x] == '1')\n        one = one or (i + x < n and res[i + x] == '1')\n        cur = '1' if one else '0'\n        if s[i] != cur:\n            res = ['-1']\n            break\n    print(''.join(res))", "for i in range(int(input())):\n    old_string = input()\n    x = int(input())\n    n = len(old_string)\n    new_string = [1] * n\n    for j in range(n):\n        if old_string[j] == '0':\n            if j >= x:\n                new_string[j - x] = 0\n            if j + x < n:\n                new_string[j + x] = 0\n    good = True\n    for j in range(n):\n        if old_string[j] == '1':\n            good = False\n            if j >= x and new_string[j - x] == 1:\n                good = True\n            if j + x < n and new_string[j + x] == 1:\n                good = True\n            if not good:\n                print('-1')\n                break\n    if good:\n        print(''.join(map(str, new_string)))", "def main():\n    for _ in range(Iint()):\n        s = list(map(int, input()))\n        x = Iint()\n        n = len(s)\n        w = [1 for i in s]\n        for i in range(n):\n            if s[i] == 0:\n                if i >= x:\n                    w[i - x] = 0\n                if i + x < len(s):\n                    w[i + x] = 0\n        newString = []\n        for i in range(n):\n            temp = 0\n            if i >= x and w[i - x] == 1:\n                temp = 1\n            if i + x < len(s) and w[i + x] == 1:\n                temp = 1\n            newString.append(temp)\n        if newString == s:\n            Plist(w)\n        else:\n            print(-1)\n\ndef I():\n    return input()\n\ndef Iint():\n    return int(input())\n\ndef Ilist():\n    return list(map(int, input().split()))\n\ndef Imap():\n    return map(int, input().split())\n\ndef Plist(li, s=''):\n    print(s.join(map(str, li)))\nmain()", "import sys\nI = lambda : int(input())\nRL = readline = lambda : sys.stdin.readline().strip('\\n')\nRM = readmap = lambda x=int: map(x, readline().split(' '))\nfor _ in range(I()):\n    (s, x) = (RL(), I())\n    n = len(s)\n    w = ['1'] * n\n    for (ind, i) in enumerate(s):\n        if i == '0':\n            (i1, i2) = (ind - x, ind + x)\n            if i1 >= 0:\n                w[i1] = '0'\n            if i2 < n:\n                w[i2] = '0'\n    imp = False\n    for (ind, i) in enumerate(s):\n        (i1, i2) = (ind - x, ind + x)\n        flag = i1 >= 0 and w[i1] == '1' or (i2 < n and w[i2] == '1')\n        if '01'[flag] != i:\n            imp = True\n            break\n    print(''.join(w) if not imp else -1)", "n = int(input())\nfor i in range(n):\n    s = input()\n    t = int(input())\n    w = ['1'] * len(s)\n    flag = True\n    for i in range(len(s)):\n        if s[i] == '0':\n            if i - t > -1:\n                w[i - t] = '0'\n            if i + t < len(s):\n                w[i + t] = '0'\n    for i in range(len(s)):\n        if s[i] == '1':\n            if i - t > -1 and w[i - t] == '1' or (i + t < len(s) and w[i + t] == '1'):\n                continue\n            else:\n                print(-1)\n                flag = False\n                break\n        elif i - t > -1 and w[i - t] == '1' or (i + t < len(s) and w[i + t] == '1'):\n            print(-1)\n            flag = False\n            break\n    if flag:\n        print(''.join(w))", "for _ in range(int(input())):\n    s = input()\n    x = int(input())\n    n = len(s)\n    t = ['1'] * n\n    for i in range(n):\n        if s[i] == '0':\n            if i + x < n:\n                t[i + x] = '0'\n            if i - x >= 0:\n                t[i - x] = '0'\n    for i in range(n):\n        flag = i + x < n and t[i + x] == '1' or (i - x >= 0 and t[i - x] == '1')\n        c = '1' if flag else '0'\n        if s[i] != c:\n            print(-1)\n            break\n    else:\n        print(''.join(t))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    x = int(input())\n    n = len(s)\n    w = ['1'] * n\n    for i in range(n):\n        if s[i] == '0':\n            if i + x < n:\n                w[i + x] = '0'\n            if i >= x:\n                w[i - x] = '0'\n    ok = True\n    for i in range(n):\n        if s[i] == '1':\n            ok = False\n            if i + x < n and w[i + x] != '0':\n                ok = True\n            if i >= x and w[i - x] != '0':\n                ok = True\n            if not ok:\n                break\n    if ok:\n        print(''.join(w))\n    else:\n        print(-1)", "for _ in range(int(input())):\n    string = list(input())\n    x = int(input())\n    len_str = len(string)\n    w = ['1' for _ in range(len_str)]\n    for (ind, s) in enumerate(string):\n        if s == '0':\n            if ind - x >= 0:\n                w[ind - x] = '0'\n            if ind + x < len_str:\n                w[ind + x] = '0'\n    test = ['0' for _ in range(len_str)]\n    for ind in range(0, len_str):\n        if ind + x < len_str:\n            if w[ind + x] == '1':\n                test[ind] = '1'\n                continue\n        if ind - x >= 0:\n            if w[ind - x] == '1':\n                test[ind] = '1'\n                continue\n    if test == string:\n        print(''.join(w))\n    else:\n        print(-1)", "t = int(input())\nwhile t:\n    s = input()\n    x = int(input())\n    ans = ['1' for _ in range(len(s))]\n    for i in range(len(s)):\n        if s[i] == '0':\n            if i >= x:\n                ans[i - x] = '0'\n            if i + x < len(s):\n                ans[i + x] = '0'\n    ans2 = ['1' for _ in range(len(ans))]\n    for i in range(len(ans)):\n        if (i < x or ans[i - x] == '0') and (i + x >= len(ans) or ans[i + x] == '0'):\n            ans2[i] = '0'\n    s2 = ''.join(ans2)\n    if s == s2:\n        print(''.join(ans))\n    else:\n        print('-1')\n    t -= 1", "for _ in range(int(input())):\n    s = input().strip()\n    x = int(input())\n    n = len(s)\n    w = ['1'] * n\n    for i in range(n):\n        if s[i] == '0':\n            if i + x < n:\n                w[i + x] = '0'\n            if i - x >= 0:\n                w[i - x] = '0'\n    ok = True\n    for i in range(n):\n        if s[i] == '1':\n            ok = False\n            if i + x < n and w[i + x] != '0':\n                ok = True\n            if i - x >= 0 and w[i - x] != '0':\n                ok = True\n            if not ok:\n                break\n    if ok:\n        print(''.join(w))\n    else:\n        print(-1)", "import sys, os.path\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nfor _ in range(int(input())):\n    s = input()\n    n = len(s)\n    x = int(input())\n    ans = ['1' for i in range(n)]\n    for i in range(n):\n        if s[i] == '0':\n            if i + x <= n - 1:\n                ans[i + x] = '0'\n            if i - x >= 0:\n                ans[i - x] = '0'\n    w = ''.join(ans)\n    flag = True\n    for i in range(len(w)):\n        t1 = False\n        t2 = False\n        if s[i] == '1':\n            if i + x <= n - 1 and w[i + x] == '1':\n                t1 = True\n            if i - x >= 0 and w[i - x] == '1':\n                t2 = True\n            if not t1 and (not t2):\n                flag = False\n                break\n        else:\n            if i + x <= n - 1 and w[i + x] == '1':\n                flag = False\n                break\n            if i - x >= 0 and w[i - x] == '1':\n                flag = False\n                break\n    if flag:\n        print(w)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    s = input()\n    x = int(input())\n    n = len(s)\n    final = [1 for _ in range(n)]\n    for i in range(n):\n        if s[i] == '0':\n            if i + x < n:\n                final[i + x] = 0\n            if i - x > -1:\n                final[i - x] = 0\n    done = 0\n    for i in range(n):\n        if s[i] == '1':\n            if (i + x >= n or final[i + x] == 0) and (i - x < 0 or final[i - x] == 0):\n                done = 1\n                break\n    print(*([-1], final)[not done], sep='')", "t = int(input())\nfor _ in range(t):\n    s = input()\n    x = int(input())\n    n = len(s)\n    ans = ['1'] * len(s)\n    for i in range(len(s)):\n        if s[i] == '0':\n            if i - x >= 0:\n                ans[i - x] = '0'\n            if i + x < n:\n                ans[i + x] = '0'\n    f = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            if i - x >= 0 and ans[i - x] == '1' or (i + x < n and ans[i + x] == '1'):\n                f = 0\n            else:\n                f = 1\n                break\n    a = ''\n    for i in ans:\n        a += i\n    if f == 1:\n        print(-1)\n    else:\n        print(a)", "for _ in range(int(input())):\n    s = input()\n    x = int(input())\n    w1 = '1' * len(s)\n    w = list(w1)\n    f = 0\n    for i in range(len(s)):\n        if s[i] == '0':\n            if i - x >= 0 and i + x <= len(s) - 1:\n                w[i - x] = '0'\n                w[i + x] = '0'\n            elif i - x < 0 and i + x <= len(s) - 1:\n                w[i + x] = '0'\n            elif i - x >= 0 and i + x > len(s) - 1:\n                w[i - x] = '0'\n    for i in range(len(s)):\n        if s[i] == '1':\n            if i - x >= 0 and i + x <= len(s) - 1:\n                if w[i - x] == '0' and w[i + x] == '0':\n                    f = 1\n            elif i - x < 0 and i + x <= len(s) - 1:\n                if w[i + x] == '0':\n                    f = 1\n            elif i - x >= 0 and i + x > len(s) - 1:\n                if w[i - x] == '0':\n                    f = 1\n            else:\n                f = 1\n    if f == 1:\n        print(-1)\n    else:\n        print(''.join(w))", "for _ in range(int(input())):\n    s = input()\n    x = int(input())\n    (n, f) = (len(s), 0)\n    a = ''\n    ans = ['1'] * len(s)\n    for i in range(len(s)):\n        if s[i] == '0':\n            if i - x >= 0:\n                ans[i - x] = '0'\n            if i + x < n:\n                ans[i + x] = '0'\n    for i in range(len(s)):\n        if s[i] == '1':\n            if i - x >= 0 and ans[i - x] == '1' or (i + x < n and ans[i + x] == '1'):\n                f = 0\n            else:\n                f = 1\n                break\n    for i in ans:\n        a += i\n    print(-1) if f == 1 else print(a)", "def stringslicing(string, index):\n    if index >= 0 and index < len(string):\n        return string[index]\n    else:\n        return 'not defined'\nt = int(input())\nfor _ in range(t):\n    string = input().strip()\n    s = int(input())\n    answer = {}\n    answer = answer.fromkeys(range(0, len(string)), '1')\n    for i in range(len(string)):\n        if string[i] == '0':\n            a = i - s\n            b = i + s\n            if a >= 0 and a < len(string):\n                answer[a] = '0'\n            if b >= 0 and b < len(string):\n                answer[b] = '0'\n    ans = ''.join(answer.values())\n    wrong = 0\n    for k in range(len(string)):\n        if string[k] == '1':\n            if string[k] == stringslicing(ans, k + s) or string[k] == stringslicing(ans, k - s):\n                continue\n            else:\n                print(-1)\n                wrong = 1\n                break\n    if wrong == 0:\n        print(ans)", "from sys import stdin\nip = stdin.readline\nfor _ in range(int(ip())):\n    a = ip().strip()\n    x = int(ip())\n    n = len(a)\n    ans = ['1'] * n\n    for i in range(n):\n        val = a[i]\n        if val == '0':\n            if i - x >= 0:\n                ans[i - x] = '0'\n            if i + x < n:\n                ans[i + x] = '0'\n    reconstruct = ['0'] * n\n    flag = True\n    for i in range(n):\n        if i - x >= 0 and ans[i - x] == '1' or (i + x < n and ans[i + x] == '1'):\n            reconstruct[i] = '1'\n        if not a[i] == reconstruct[i]:\n            flag = False\n            break\n    if flag:\n        print(''.join(ans))\n    else:\n        print('-1')", "res = ''\nfor _ in range(int(input())):\n    s = input()\n    x = int(input())\n    ls = len(s)\n    a = ['1'] * ls\n    for (i, k) in enumerate(s):\n        if k == '0':\n            if i - x >= 0:\n                a[i - x] = '0'\n            if i + x < ls:\n                a[i + x] = '0'\n    for (i, k) in enumerate(s):\n        if k == '1':\n            f = 0\n            if i - x >= 0:\n                if a[i - x] == '1':\n                    f = 1\n            if i + x < ls:\n                if a[i + x] == '1':\n                    f = 1\n            if not f:\n                res += '-1\\n'\n                break\n    else:\n        res += ''.join(a) + '\\n'\nprint(res)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    s = list(input().strip())\n    n = len(s)\n    x = int(input())\n    r = [-1] * n\n    for i in range(n):\n        if s[i] == '0':\n            if i - x >= 0:\n                r[i - x] = '0'\n            if i + x < n:\n                r[i + x] = '0'\n    for i in range(n):\n        if r[i] == -1:\n            r[i] = '1'\n    for i in range(n):\n        if s[i] == '1':\n            if i - x >= 0 and r[i - x] == '1' or (i + x < n and r[i + x] == '1'):\n                continue\n            print(-1)\n            break\n    else:\n        print(''.join(r))", "T = int(input())\nfor _ in range(T):\n    w = input()\n    x = int(input())\n    n = len(w)\n    l = ['1' for k in range(n)]\n    for i in range(n):\n        if w[i] == '0':\n            if i - x >= 0:\n                l[i - x] = '0'\n            if i + x < n:\n                l[i + x] = '0'\n    flag = 0\n    for i in range(n):\n        if i + x < n and l[i + x] == '1':\n            if w[i] == '0':\n                flag += 1\n        elif i - x >= 0 and l[i - x] == '1':\n            if w[i] == '0':\n                flag += 1\n        elif w[i] == '1':\n            flag += 1\n    if flag != 0:\n        print(-1)\n    else:\n        print(''.join(l))", "import sys\n\ndef rl(proc=None):\n    if proc is not None:\n        return proc(sys.stdin.readline())\n    else:\n        return sys.stdin.readline().rstrip()\n\ndef srl(proc=None):\n    if proc is not None:\n        return list(map(proc, rl().split()))\n    else:\n        return rl().split()\n\ndef solve(s, x):\n    n = len(s)\n    w = [1] * n\n    for (i, v) in enumerate(s):\n        if v == 0:\n            if i - x >= 0:\n                w[i - x] = 0\n            if i + x < n:\n                w[i + x] = 0\n    for (i, v) in enumerate(s):\n        r = 0\n        if i - x >= 0:\n            r |= w[i - x]\n        if i + x < n:\n            r |= w[i + x]\n        if r != v:\n            return [-1]\n    return w\n\ndef main():\n    T = rl(int)\n    for t in range(1, T + 1):\n        s = list(map(int, rl()))\n        x = rl(int)\n        print(''.join(map(str, solve(s, x))))\nmain()", "t = int(input())\nfor _ in range(t):\n    s = [0] + list(map(int, input().strip()))\n    x = int(input())\n    n = len(s) - 1\n    ans = [1 for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        if s[i] == 0:\n            if i > x:\n                ans[i - x] = 0\n            if i + x <= n:\n                ans[i + x] = 0\n    for i in range(1, n + 1):\n        bit = False\n        bit |= i > x and ans[i - x] == 1\n        bit |= i + x <= n and ans[i + x] == 1\n        if int(bit) != s[i]:\n            print(-1)\n            break\n    else:\n        print(''.join(map(str, ans[1:])))", "for _ in range(int(input())):\n    s = input()\n    x = int(input())\n    a = ['?'] * len(s)\n    for i in range(len(s)):\n        if s[i] == '0':\n            if i + x < len(s):\n                a[i + x] = '0'\n            if i - x >= 0:\n                a[i - x] = '0'\n    temp = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            if i + x < len(s) and a[i + x] == '?':\n                continue\n            elif i - x >= 0 and a[i - x] == '?':\n                continue\n            else:\n                temp = 1\n    if temp == 1:\n        print(-1)\n    else:\n        ans = ''\n        for i in range(len(s)):\n            if a[i] == '?':\n                ans += '1'\n            else:\n                ans += '0'\n        print(ans)", "def main():\n    t = int(input())\n    for _ in range(t):\n        s = input()\n        x = int(input())\n        n = len(s)\n        w = ['1'] * n\n        for i in range(n):\n            if i + x < n:\n                if s[i + x] == '0':\n                    w[i] = '0'\n            if i - x >= 0:\n                if s[i - x] == '0':\n                    w[i] = '0'\n        ok = True\n        for i in range(n):\n            if s[i] == '0':\n                if i + x < n:\n                    if w[i + x] == '1':\n                        ok = False\n                        break\n                if i - x >= 0:\n                    if w[i - x] == '1':\n                        ok = False\n                        break\n            else:\n                if i + x < n and i - x >= 0:\n                    if w[i + x] == '0' and w[i - x] == '0':\n                        ok = False\n                        break\n                if i + x >= n and i - x >= 0:\n                    if w[i - x] == '0':\n                        ok = False\n                        break\n                if i + x < n and i - x < 0:\n                    if w[i + x] == '0':\n                        ok = False\n                        break\n                if i + x >= n and i - x < 0:\n                    ok = False\n                    break\n        print(''.join(w) if ok else -1)\n    return\nmain()", "import math, queue, heapq\nimport sys\nsys.setrecursionlimit(10 ** 6)\nfastinput = sys.stdin.readline\nfastout = sys.stdout.write\nt = int(fastinput())\nwhile t:\n    t -= 1\n    s = input()\n    x = int(fastinput())\n    w = ['1'] * len(s)\n    n = len(s)\n    ans = True\n    for i in range(len(s)):\n        if s[i] == '0':\n            if i - x >= 0:\n                w[i - x] = '0'\n            if i + x <= n - 1:\n                w[i + x] = '0'\n    result = ['0'] * n\n    for i in range(n):\n        if i - x >= 0 and w[i - x] == '1':\n            result[i] = '1'\n        elif i + x <= n - 1 and w[i + x] == '1':\n            result[i] = '1'\n    if ''.join(result) == s:\n        print(''.join(w))\n    else:\n        print(-1)", "def solve():\n    s = list(map(int, input()))\n    x = int(input())\n    w = [1] * len(s)\n    for i in range(len(s)):\n        if s[i] == 0:\n            if i + x < len(s):\n                w[i + x] = 0\n            if i - x >= 0:\n                w[i - x] = 0\n    s_2 = [1] * len(s)\n    for i in range(len(s)):\n        if i + x < len(s) and i - x >= 0:\n            if w[i - x] != 1 and w[i + x] != 1:\n                s_2[i] = 0\n        elif i + x < len(s) or i - x >= 0:\n            if i + x < len(s):\n                if w[i + x] != 1:\n                    s_2[i] = 0\n            elif w[i - x] != 1:\n                s_2[i] = 0\n        else:\n            s_2[i] = 0\n    if s_2 == s:\n        print(''.join(map(str, w)))\n    else:\n        print(-1)\nfor _ in range(int(input())):\n    solve()", "def solve(s, x):\n    ans = [None] * len(s)\n    for (i, char) in enumerate(s):\n        if char == '0':\n            if i + x < len(s):\n                ans[i + x] = '0'\n            if i - x >= 0:\n                ans[i - x] = '0'\n    for (i, char) in enumerate(s):\n        if char == '1':\n            if i + x < len(s) and ans[i + x] == '0' or i + x >= len(s):\n                if i - x >= 0 and ans[i - x] is None:\n                    ans[i - x] = '1'\n                elif i - x >= 0 and ans[i - x] == '0' or i - x < 0:\n                    return -1\n            elif i - x >= 0 and ans[i - x] == '0' or i - x < 0:\n                ans[i + x] = '1'\n    for i in range(len(ans)):\n        if ans[i] is None:\n            ans[i] = '1'\n    return ''.join(ans)\nt = int(input())\nfor _ in range(t):\n    s = input()\n    x = int(input())\n    print(solve(s, x))", "import sys, threading\nsys.setrecursionlimit(10 ** 6)\nfrom collections import Counter, defaultdict as dft\n\ndef mp():\n    return map(int, input().split())\n\ndef ml():\n    return list(map(int, input().split()))\n\ndef main():\n\n    def solve():\n        s = input()\n        x = int(input())\n        n = len(s)\n        res = ['0' for i in range(n)]\n        for i in range(n):\n            if s[i] == '1':\n                if i - x >= 0:\n                    res[i - x] = '1'\n                if i + x < n:\n                    res[i + x] = '1'\n        for i in range(n):\n            if s[i] == '0':\n                if i - x >= 0 and res[i - x] == '1':\n                    res[i - x] = '0'\n                if i + x < n and res[i + x] == '1':\n                    res[i + x] = '0'\n        news = ['0' for i in range(n)]\n        for i in range(n):\n            if res[i] == '1':\n                if i + x < n:\n                    news[i + x] = '1'\n                if i - x >= 0:\n                    news[i - x] = '1'\n        ss = ''.join(news)\n        if ss != s:\n            return '-1'\n        else:\n            return ''.join(res)\n    t = int(input())\n    for _ in range(t):\n        print(solve())\nsys.setrecursionlimit(10 ** 6)\nthreading.stack_size(1 << 27)\nthread = threading.Thread(target=main)\nthread.start()\nthread.join()", "for _ in range(int(input())):\n    s = input()\n    x = int(input())\n    n = len(s)\n    w = ['1'] * n\n    s2 = ['0'] * n\n    for i in range(n):\n        if s[i] == '0':\n            if i >= x:\n                w[i - x] = '0'\n            if i + x < n:\n                w[i + x] = '0'\n    for i in range(n):\n        if i >= x and w[i - x] == '1':\n            s2[i] = '1'\n        if i + x < n and w[i + x] == '1':\n            s2[i] = '1'\n    print(''.join(w)) if ''.join(s2) == s else print(-1)", "t = int(input(''))\narr = []\nx = []\nfor i in range(t):\n    arr.append(input(''))\n    x.append(int(input('')))\nfor i in range(t):\n    s = list(arr[i])\n    y = x[i]\n    n = len(s)\n    dp = ['1'] * n\n    flag = 0\n    for j in range(n):\n        if s[j] == '0':\n            if j - y >= 0:\n                dp[j - y] = '0'\n            if j + y < n:\n                dp[j + y] = '0'\n    sol = ''\n    for j in range(n):\n        flag = 0\n        if j - y >= 0:\n            if dp[j - y] == '1':\n                flag = 1\n        if j + y < n:\n            if dp[j + y] == '1':\n                flag = 1\n        if flag:\n            sol += '1'\n        else:\n            sol += '0'\n    if s == list(sol):\n        print(''.join(dp))\n    else:\n        print(-1)", "t = int(input())\nwhile t:\n    s = input()\n    x = int(input())\n    ans = ['1' for _ in range(len(s))]\n    for i in range(len(s)):\n        if s[i] == '0':\n            if i >= x:\n                ans[i - x] = '0'\n            if i + x < len(s):\n                ans[i + x] = '0'\n    ans2 = ['1' for _ in range(len(ans))]\n    for i in range(len(ans)):\n        if (i < x or ans[i - x] == '0') and (i + x >= len(ans) or ans[i + x] == '0'):\n            ans2[i] = '0'\n    s2 = ''.join(ans2)\n    if s == s2:\n        print(''.join(ans))\n    else:\n        print('-1')\n    t -= 1", "for _ in range(int(input())):\n    s = input()\n    x = int(input())\n    (n, f) = (len(s), 0)\n    a = ''\n    ans = ['1'] * n\n    for i in range(n):\n        if s[i] == '0':\n            if i - x >= 0:\n                ans[i - x] = '0'\n            if i + x < n:\n                ans[i + x] = '0'\n    for i in range(n):\n        if s[i] == '1':\n            if i - x >= 0 and ans[i - x] == '1' or (i + x < n and ans[i + x] == '1'):\n                f = 0\n            else:\n                f = 1\n                break\n    for i in ans:\n        a += i\n    print(-1) if f == 1 else print(a)", "n = int(input())\nfor i in range(n):\n    s = input()\n    k = int(input())\n    n1 = len(s)\n    ans = ['1'] * n1\n    for i in range(n1):\n        if s[i] == '0':\n            if i - k >= 0:\n                ans[i - k] = '0'\n            if i + k < n1:\n                ans[i + k] = '0'\n    for i in range(n1):\n        if s[i] == '1':\n            flag = 0\n            if i - k >= 0 and ans[i - k] == '1':\n                flag = 1\n            if i + k < n1 and ans[i + k] == '1':\n                flag = 1\n            if flag == 0:\n                print(-1)\n                break\n    else:\n        print(str(''.join(ans)))", "for _ in range(int(input())):\n    s = list(map(int, input()))\n    x = int(input())\n    n = len(s)\n    w = [1] * n\n    for i in range(n):\n        if s[i] == 0:\n            if i >= x:\n                w[i - x] = s[i]\n            if i + x < n:\n                w[i + x] = s[i]\n        is_there = 1\n    for i in range(n):\n        if s[i] == 1:\n            if (i - x < 0 or w[i - x] == 0) and (i + x >= n or w[i + x] == 0):\n                is_there = 0\n                break\n    if is_there == 0:\n        print(-1)\n    else:\n        print(''.join([str(x) for x in w]))", "import sys\n\ndef rs():\n    return sys.stdin.readline().rstrip()\n\ndef ri():\n    return int(sys.stdin.readline())\n\ndef ria():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef ws(s):\n    sys.stdout.write(s + '\\n')\n\ndef wi(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef wia(a):\n    sys.stdout.write(' '.join([str(x) for x in a]) + '\\n')\nimport math\nfrom collections import defaultdict\nfor _ in range(ri()):\n    s = rs()\n    x = ri()\n    n = len(s)\n    fuck = ['1' for i in range(n)]\n    for i in range(n):\n        if s[i] == '0':\n            if i >= x:\n                fuck[i - x] = '0'\n            if i + x < n:\n                fuck[i + x] = '0'\n    fuckoff = ''\n    for i in range(n):\n        if i >= x and fuck[i - x] == '1':\n            fuckoff += '1'\n        elif i + x < n and fuck[i + x] == '1':\n            fuckoff += '1'\n        else:\n            fuckoff += '0'\n    fuck = ''.join(fuck)\n    ws(fuck) if fuckoff == s else wi(-1)", "def solve(string, x):\n    n = len(string)\n    possible = [{0: True, 1: True} for i in range(n)]\n    for i in range(n):\n        if string[i] == '0':\n            if i >= x:\n                possible[i - x][1] = False\n            if i + x < n:\n                possible[i + x][1] = False\n        elif i < x and i + x >= n:\n            return -1\n        elif i < x:\n            possible[i + x][0] = False\n        elif i + x >= n:\n            possible[i - x][0] = False\n        elif not possible[i - x][1] and (not possible[i + x][1]):\n            return -1\n        elif not possible[i - x][1]:\n            possible[i + x][0] = False\n        elif not possible[i + x][1]:\n            possible[i - x][0] = False\n    output = ''\n    for p in possible:\n        if not p[0] and (not p[1]):\n            return -1\n        elif not p[0]:\n            output += '1'\n        elif not p[1]:\n            output += '0'\n        else:\n            output += '1'\n    return output\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        string = input()\n        x = int(input())\n        answer = solve(string, x)\n        print(answer)\nmain()", "T = int(input())\nfor _ in range(T):\n    S = input()\n    X = int(input())\n    N = len(S)\n    w = ['1'] * N\n    for i in range(N):\n        if S[i] == '0':\n            if i - X >= 0:\n                w[i - X] = '0'\n            if i + X < N:\n                w[i + X] = '0'\n    flag = 1\n    for i in range(N):\n        char = '0'\n        if i - X >= 0 and w[i - X] == '1':\n            char = '1'\n        if i + X < N and w[i + X] == '1':\n            char = '1'\n        if S[i] != char:\n            flag = 0\n            break\n    if flag:\n        print(''.join(w))\n    else:\n        print('-1')", "def solve(s, x):\n    n = len(s)\n    a = [None] * n\n    todos = []\n    for (i, c) in enumerate(s):\n        if i <= x - 1:\n            if i + x < n:\n                if a[i + x] == None:\n                    a[i + x] = int(c)\n                elif int(c) != a[i + x]:\n                    return -1\n            elif c == '1':\n                return -1\n        elif i >= n - x:\n            if i - x >= 0:\n                if a[i - x] == None:\n                    a[i - x] = int(c)\n                elif int(c) != a[i - x]:\n                    return -1\n            elif c == '1':\n                return -1\n        elif c == '0':\n            if a[i - x] == 1 or a[i + x] == 1:\n                return -1\n            a[i - x] = 0\n            a[i + x] = 0\n        else:\n            todos.append((i - x, i + x))\n    for (i, j) in todos:\n        if a[i] == 0 and a[j] == 0:\n            return -1\n    for i in range(n):\n        if a[i] == None:\n            a[i] = 1\n    return ''.join((str(x) for x in a))\ntn = int(input())\nfor ti in range(tn):\n    s = input()\n    x = int(input())\n    ans = solve(s, x)\n    print(ans)", "res = ''\nfor _ in range(int(input())):\n    s = input()\n    x = int(input())\n    ls = len(s)\n    a = [1] * ls\n    for (i, k) in enumerate(s):\n        if k == '0':\n            if i - x >= 0:\n                a[i - x] = 0\n            if i + x < ls:\n                a[i + x] = 0\n    for (i, k) in enumerate(s):\n        if k == '1':\n            f = 0\n            if i - x >= 0:\n                f |= a[i - x]\n            if i + x < ls:\n                f |= a[i + x]\n            if not f:\n                res += '-1\\n'\n                break\n    else:\n        res += ''.join((str(a) for a in a)) + '\\n'\nprint(res)", "t = int(input())\nfor i in range(t):\n    s = input()\n    x = int(input())\n    ans = ['1'] * len(s)\n    for j in range(len(s)):\n        if s[j] == '0':\n            if j - x >= 0:\n                ans[j - x] = '0'\n            if j + x < len(s):\n                ans[j + x] = '0'\n    for j in range(len(s)):\n        if s[j] == '1':\n            a = ans[j - x] if j - x >= 0 else -1\n            b = ans[j + x] if j + x < len(s) else -1\n            if a != '1' and b != '1':\n                print('-1')\n                break\n    else:\n        print(''.join(ans))", "t = int(input(''))\nfor k in range(t):\n    s = input('')\n    x = int(input(''))\n    w = []\n    f = 0\n    ws = ''\n    for l in range(len(s)):\n        w.append('1')\n    for i in range(len(s)):\n        if i >= x and s[i] == '0':\n            w[i - x] = '0'\n        if i + x < len(s) and s[i] == '0':\n            w[i + x] = '0'\n    for i in range(len(s)):\n        if s[i] == '1':\n            if i >= x and w[i - x] == '1' or (i + x < len(s) and w[i + x] == '1'):\n                f = 0\n            else:\n                f = 1\n                break\n    for i in w:\n        ws += i\n    if f == 1:\n        print(-1)\n    else:\n        print(ws)"]