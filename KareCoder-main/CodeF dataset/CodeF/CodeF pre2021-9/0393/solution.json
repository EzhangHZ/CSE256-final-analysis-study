["def CreateTheTeams(n, x, a):\n    c = 0\n    a.sort(reverse=True)\n    l = 0\n    for i in range(n):\n        l = l + 1\n        if a[i] * l >= x:\n            c = c + 1\n            l = 0\n    return c\nt = int(input())\nfor tt in range(t):\n    nx = list(map(int, input().rstrip().split()))\n    a = list(map(int, input().rstrip().split()))\n    ans = CreateTheTeams(nx[0], nx[1], a)\n    print(ans)", "p = lambda : map(int, input().split())\n(T,) = p()\nwhile T:\n    (n, x) = p()\n    a = sorted(p())\n    t = 0\n    while a:\n        c = 1\n        while a and c * a[-1] < x:\n            c += 1\n            a.pop()\n        if a:\n            t += 1\n            a.pop()\n    print(t)\n    T -= 1", "def helper(arr, n, x):\n    arr.sort(reverse=True)\n    (count, teams) = (1, 0)\n    for i in range(n):\n        if arr[i] * count >= x:\n            teams += 1\n            count = 1\n            continue\n        count += 1\n    return teams\ntest = int(input())\nfor i in range(test):\n    (n, x) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    ans = helper(arr, n, x)\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    (len, cnt) = (1, 0)\n    for ele in a:\n        if len * ele >= x:\n            cnt += 1\n            len = 0\n        len += 1\n    print(cnt)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    ans = 0\n    j = 1\n    for i in range(n):\n        if a[i] * j >= x:\n            j = 1\n            ans += 1\n        else:\n            j += 1\n    print(ans)", "var_d = lambda : map(int, input().split())\n(V,) = var_d()\nwhile V:\n    (an, ax) = var_d()\n    var_a = sorted(var_d())\n    iy = 0\n    while var_a:\n        var_c = 1\n        while var_a and var_c * var_a[-1] < ax:\n            var_c += 1\n            var_a.pop()\n        if var_a:\n            iy += 1\n            var_a.pop()\n    print(iy)\n    V -= 1", "var_d = lambda : map(int, input().split())\n(V,) = var_d()\nwhile V:\n    (an, ax) = var_d()\n    var_a = sorted(var_d())\n    iy = 0\n    while var_a:\n        var_c = 1\n        while var_a and var_c * var_a[-1] < ax:\n            var_c += 1\n            var_a.pop()\n        if var_a:\n            iy += 1\n            var_a.pop()\n    print(iy)\n    V -= 1", "feed = int(input())\nfor _ in range(feed):\n    (_, min) = list(map(int, input().split()))\n    arr = sorted(list(map(int, input().split())), reverse=True)\n    teams = 0\n    mul = 1\n    for x in arr:\n        if x * mul >= min:\n            teams += 1\n            mul = 1\n        else:\n            mul += 1\n    print(teams)", "masukan = lambda : map(int, input().split())\n(t,) = masukan()\nfor _ in [0] * t:\n    (n, x) = masukan()\n    c = a = 0\n    for i in sorted(masukan())[::-1]:\n        c += 1\n        if c * i >= x:\n            a += 1\n            c = 0\n    print(a)", "T = int(input())\nfor i in range(T):\n    (n, x) = map(int, input().split(' '))\n    a = list(map(int, input().split(' ')))\n    a.sort()\n    cnt = 0\n    o = 0\n    for u in a[::-1]:\n        cnt += 1\n        if cnt * u >= x:\n            o += 1\n            cnt = 0\n    print(o)", "def solve(n, score, seq):\n    seq.sort(reverse=True)\n    teams = 0\n    temp = 0\n    for x in seq:\n        temp += 1\n        if temp * x >= score:\n            teams += 1\n            temp = 0\n    return teams\nfor _ in range(int(input())):\n    (n, score) = list(map(int, input().split()))\n    seq = list(map(int, input().split()))\n    print(solve(n, score, seq))", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    (res, cur) = (0, 1)\n    for s in a:\n        if s * cur >= x:\n            res += 1\n            cur = 0\n        cur += 1\n    print(res)", "import math\n\ndef func(n, x, arr):\n    new_list = arr.copy()\n    num_teams = 0\n    while len(arr) != 0:\n        to_remove = math.ceil(x / arr[0])\n        if to_remove > n:\n            break\n        num_teams += 1\n        del arr[0:to_remove]\n    if len(new_list) == 1:\n        return num_teams\n    else:\n        del new_list[0]\n        return max(num_teams, func(n - 1, x, new_list))\n\ndef greedy(n, x, arr):\n    current_small = arr[0]\n    current_size = 0\n    num_teams = 0\n    for i in range(0, n):\n        current_small = arr[i]\n        current_size += 1\n        if current_small * current_size >= x:\n            num_teams += 1\n            current_size = 0\n    return num_teams\nt = int(input())\nns = []\nxs = []\narrs = []\nfor _ in range(t):\n    (cn, cx) = input().split(' ')\n    ns.append(int(cn))\n    xs.append(int(cx))\n    carr = input().split(' ')\n    carr = [int(x) for x in carr]\n    carr = sorted(carr)\n    carr = carr[::-1]\n    arrs.append(carr)\nfor j in range(t):\n    n = ns[j]\n    x = xs[j]\n    arr = arrs[j]\n    print(greedy(n, x, arr))", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    (res, cur) = (0, 1)\n    for s in a:\n        if s * cur >= x:\n            res += 1\n            cur = 0\n        cur += 1\n    print(res)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort(reverse=True)\n    ans = 0\n    c = 1\n    for i in A:\n        if i * c >= x:\n            ans += 1\n            c = 0\n        c += 1\n    print(ans)", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = sorted(map(int, input().split()))[::-1]\n    k = 0\n    p = 1\n    for i in range(n):\n        if l[i] * p >= x:\n            k += 1\n            p = 1\n        else:\n            p += 1\n    print(k)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    v = list(map(int, input().split()))\n    v.sort(reverse=True)\n    s = c = 0\n    for i in range(a):\n        c += 1\n        if c * v[i] >= b:\n            s += 1\n            c = 0\n    print(s)", "import bisect\nt = int(input())\nk = 0\nfor i in range(t):\n    len = 0\n    total = 0\n    (n, s) = map(int, input().split())\n    ls = list(map(int, input().split()))\n    ls.sort(reverse=True)\n    for i in ls:\n        len += 1\n        if len * i >= s:\n            total += 1\n            len = 0\n    print(total)", "import math\nx = int(input())\nfor i in range(x):\n    (n, z) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    kk = 0\n    ans = 0\n    count = 1\n    while kk < n:\n        if a[kk] >= z:\n            ans += 1\n        elif a[kk] * count >= z:\n            ans += 1\n            count = 1\n        else:\n            count += 1\n        kk += 1\n    print(ans)", "var_d = lambda : map(int, input().split())\n(V,) = var_d()\nwhile V:\n    (an, ax) = var_d()\n    var_a = sorted(var_d())\n    iy = 0\n    while var_a:\n        var_c = 1\n        while var_a and var_c * var_a[-1] < ax:\n            var_c += 1\n            var_a.pop()\n        if var_a:\n            iy += 1\n            var_a.pop()\n    print(iy)\n    V -= 1", "inp = int(input())\nwhile inp != 0:\n    inp -= 1\n    (x, y) = list(map(int, input().split()))\n    ls = sorted(list(map(int, input().split())), reverse=True)\n    (iter, awl) = (0, 1)\n    for x in ls:\n        if x * awl >= y:\n            iter += 1\n            awl = 0\n        awl += 1\n    print(iter)", "var_t = lambda : map(int, input().split())\n(V,) = var_t()\nwhile V:\n    (an, ax) = var_t()\n    var_y = sorted(var_t())\n    iy = 0\n    while var_y:\n        var_x = 1\n        while var_y and var_x * var_y[-1] < ax:\n            var_x += 1\n            var_y.pop()\n        if var_y:\n            iy += 1\n            var_y.pop()\n    print(iy)\n    V -= 1", "import sys\nfrom collections import Counter\n\ndef get_ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\nsys.setrecursionlimit(20000)\nT = int(input())\nfor _ in range(T):\n    (n, x) = get_ints()\n    A = get_ints()\n    A.sort(reverse=True)\n    teams = 0\n    to_be_teamed = 0\n    for i in range(len(A)):\n        if A[i] >= x:\n            teams += 1\n        else:\n            to_be_teamed += 1\n            if A[i] * to_be_teamed >= x:\n                teams += 1\n                to_be_teamed = 0\n    print(teams)", "t = int(input())\nfor _ in range(t):\n    (n, x) = tuple(map(int, input().split()))\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    index = 0\n    ret_count = 0\n    while index < n:\n        count = 1\n        while l[index] * count < x:\n            if index == n - 1:\n                ret_count -= 1\n                break\n            else:\n                index += 1\n                count += 1\n        index += 1\n        ret_count += 1\n    print(ret_count)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    (res, cur) = (0, 1)\n    for s in a:\n        if s * cur >= x:\n            res += 1\n            cur = 0\n        cur += 1\n    print(res)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split(' '))\n    a = list(map(int, input().split(' ')))\n    a.sort()\n    (p, c) = (n - 1, 0)\n    for i in range(n - 1, -1, -1):\n        v = a[i] * (p - i + 1)\n        if v >= x:\n            c += 1\n            p = i - 1\n    print(c)", "t = int(input())\nfor _ in range(t):\n    (n, restriction) = list(map(int, input().split(' ')))\n    li = list(map(int, input().split(' ')))\n    li.sort(reverse=True)\n    count = 0\n    i = 1\n    for x in li:\n        if x * i >= restriction:\n            count += 1\n            i = 1\n        else:\n            i += 1\n    print(count)", "import math\nfrom collections import defaultdict\na = []\nb = []\nt = int(input())\nfor i in range(t):\n    (c, x) = map(int, input().split())\n    a.append(x)\n    b.append(list(map(int, input().split())))\nfor i in range(t):\n    x = a[i]\n    ar = b[i]\n    ar.sort(reverse=True)\n    ans = 0\n    slen = 0\n    for j in range(len(ar)):\n        slen += 1\n        if ar[j] * slen >= x:\n            ans += 1\n            slen = 0\n    print(ans)", "for _ in range(int(input())):\n    (x, y) = [int(a) for a in input().split()]\n    ar = list(map(int, input().split()))[:x]\n    ar.sort(reverse=True)\n    s = 0\n    k = 0\n    for i in range(x):\n        if ar[i] >= y:\n            s = s + 1\n        elif (k + 1) * ar[i] >= y:\n            k = 0\n            s = s + 1\n        else:\n            k = k + 1\n    print(s)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    (res, cur) = (0, 1)\n    for s in a:\n        if s * cur >= x:\n            res += 1\n            cur = 0\n        cur += 1\n    print(res)", "import math\ncases = int(input())\nfor i in range(cases):\n    (n, x) = [int(x) for x in input().split(' ')]\n    numbers = [int(x) for x in input().split(' ')]\n    numbers.sort(reverse=True)\n    teams = 0\n    curr_count = 1\n    for j in range(n):\n        if curr_count * numbers[j] >= x:\n            teams += 1\n            curr_count = 1\n        else:\n            curr_count += 1\n    print(teams)", "var_d = lambda : map(int, input().split())\n(V,) = var_d()\nwhile V:\n    (an, ax) = var_d()\n    var_a = sorted(var_d())\n    iy = 0\n    while var_a:\n        var_c = 1\n        while var_a and var_c * var_a[-1] < ax:\n            var_c += 1\n            var_a.pop()\n        if var_a:\n            iy += 1\n            var_a.pop()\n    print(iy)\n    V -= 1", "for t in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    ans = 0\n    k = 0\n    for i in range(n):\n        k += 1\n        if a[i] * k >= x:\n            ans += 1\n            k = 0\n    print(ans)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, x) = input().split()\n    (n, x) = (int(n), int(x))\n    ar = [int(op) for op in input().split()]\n    ar = list(reversed(sorted(ar)))\n    k = 0\n    ln = 1\n    for i in range(len(ar)):\n        if ar[i] * ln >= x:\n            k += 1\n            ln = 1\n        else:\n            ln += 1\n    print(k)", "import sys\ninput = sys.stdin.readline\nimport math\nfor _ in range(int(input())):\n    c = 1\n    res = 0\n    (n, x) = list(map(int, input().split()))\n    z = list(map(int, input().split()))\n    z.sort(reverse=True)\n    for i in z:\n        if i * c >= x:\n            c = 0\n            res += 1\n        c += 1\n    print(res)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = sorted(list(map(int, input().split())), reverse=True)\n    x = 0\n    t = 0\n    for i in range(n):\n        x += 1\n        if s[i] * x >= m:\n            x = 0\n            t += 1\n    print(t)", "for _ in ' ' * int(input()):\n    (a, b) = map(int, input().split())\n    z = sorted(map(int, input().split()), reverse=True)\n    s = c = 0\n    for i in range(a):\n        c += 1\n        if c * z[i] >= b:\n            s += 1\n            c = 0\n    print(s)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    (res, cur) = (0, 1)\n    for s in a:\n        if s * cur >= x:\n            res += 1\n            cur = 0\n        cur += 1\n    print(res)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    (res, cur) = (0, 1)\n    for s in a:\n        if s * cur >= x:\n            res += 1\n            cur = 0\n        cur += 1\n    print(res)", "for t in range(0, int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))\n    count = 0\n    aws = 0\n    for i in range(n - 1, -1, -1):\n        count += 1\n        if a[i] * count >= x:\n            aws += 1\n            count = 0\n    print(aws)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    programmers = [int(a) for a in input().split()]\n    programmers.sort(reverse=True)\n    teams_counter = 0\n    aux_counter = 1\n    for j in range(n):\n        if aux_counter * programmers[j] >= x:\n            teams_counter += 1\n            aux_counter = 1\n        else:\n            aux_counter += 1\n    print(teams_counter)", "def pro(arr, x):\n    arr.sort(reverse=True)\n    n = len(arr)\n    c = 1\n    ans = 0\n    mini = arr[0]\n    for i in range(n):\n        if c * arr[i] >= x:\n            ans += 1\n            c = 1\n        else:\n            c += 1\n    print(ans)\nt = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    pro(arr, k)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    (res, cur) = (0, 1)\n    for s in a:\n        if s * cur >= x:\n            res += 1\n            cur = 0\n        cur += 1\n    print(res)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    (res, cur) = (0, 1)\n    for s in a:\n        if s * cur >= x:\n            res += 1\n            cur = 0\n        cur += 1\n    print(res)", "list_ans = []\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    list1 = list(map(int, input().split()))\n    list1.sort(reverse=True)\n    b = 0\n    ans = 0\n    for i in range(n):\n        a = list1[i]\n        b += 1\n        if a * b >= x:\n            ans += 1\n            b = 0\n    list_ans.append(ans)\nprint(*list_ans, sep='\\n')", "def single_trial(skills, x):\n    rev_skills = sorted(skills, reverse=True)\n    (mem, count) = (1, 0)\n    for s in rev_skills:\n        if s * mem >= x:\n            count += 1\n            mem = 1\n        else:\n            mem += 1\n    return count\nt = int(input())\ntrials = []\ntrial_skills = []\nfor i in range(t):\n    [n, x] = [int(i) for i in input().split()]\n    trials.append([n, x])\n    skills = [int(i) for i in input().split()]\n    trial_skills.append(skills)\nfor i in range(t):\n    result = single_trial(trial_skills[i], trials[i][1])\n    print(result)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split(' '))\n    arr = list(map(int, input().split(' ')))\n    arr.sort(reverse=True)\n    count = 0\n    teamcount = 0\n    for i in range(n):\n        teamcount += 1\n        if teamcount * arr[i] >= x:\n            teamcount = 0\n            count += 1\n    print(count)", "def main():\n    t = int(input())\n    for _ in range(t):\n        (n, x) = map(int, input().split())\n        a = list(map(int, input().split()))\n        a.sort(reverse=True)\n        length = 1\n        cnt = 0\n        for i in a:\n            if i * length >= x:\n                cnt += 1\n                length = 1\n            else:\n                length += 1\n        print(cnt)\n    return\nmain()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    (*li,) = map(int, input().split())\n    li.sort(reverse=True)\n    (cnt, ans) = (0, 0)\n    for i in range(x):\n        min1 = li[i]\n        cnt += 1\n        if min1 * cnt >= y:\n            ans += 1\n            cnt = 0\n    print(ans)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    (*li,) = map(int, input().split())\n    li.sort(reverse=True)\n    (cnt, ans) = (0, 0)\n    for i in range(x):\n        min1 = li[i]\n        cnt += 1\n        if min1 * cnt >= y:\n            ans += 1\n            cnt = 0\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    (count, ans) = (1, 0)\n    for i in l:\n        if i * count >= x:\n            ans += 1\n            count = 0\n        count += 1\n    print(ans)", "import random\nimport math\nfrom collections import defaultdict\nimport itertools\nfrom sys import stdin, stdout\nimport sys\nimport operator\nfrom decimal import Decimal\n\ndef call(a, pos, x):\n    p = 1\n    while a[pos] * p < x:\n        if pos > 0:\n            pos -= 1\n            p += 1\n        else:\n            return 0\n    if pos > 0:\n        cnt = call(a[:pos], pos - 1, x)\n    else:\n        cnt = 0\n    return 1 + cnt\n\ndef main():\n    mod = 10 ** 9 + 7\n    t = int(input())\n    for _ in range(t):\n        (n, x) = list(map(int, input().split()))\n        a = list(map(int, input().split()))\n        a.sort(reverse=True)\n        cnt = 0\n        for i in range(n):\n            if a[i] >= x:\n                cnt += 1\n            else:\n                break\n        while i < n - 1:\n            for j in range(i, n):\n                prev = a[j] * (j - i + 1)\n                if prev >= x:\n                    cnt += 1\n                    i = j + 1\n                    break\n            if j == n - 1:\n                break\n        print(cnt)\nmain()", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    count = 0\n    j = 1\n    while len(l) > 0:\n        if l[-j] * j >= x:\n            count += 1\n            for _ in range(j):\n                l.pop()\n            j = 1\n        elif j == len(l):\n            break\n        else:\n            j += 1\n    print(count)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ans = 0\n    n -= 1\n    while n >= 0:\n        tmp = 1\n        while arr[n] * tmp < x and n >= 0:\n            n -= 1\n            tmp += 1\n        if arr[n] * tmp >= x and n >= 0:\n            ans += 1\n            n -= 1\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort(reverse=True)\n    cur = [arr[0]]\n    count = 0\n    for i in range(1, n):\n        length = len(cur)\n        if length * cur[-1] < x:\n            cur.append(arr[i])\n        else:\n            count += 1\n            cur = [arr[i]]\n    if len(cur) * cur[-1] >= x:\n        count += 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split(' '))\n    num = input().split(' ')\n    nums = []\n    for j in num:\n        nums.append(int(j))\n    nums.sort(reverse=True)\n    ans = 0\n    length = 1\n    for j in range(n):\n        if nums[j] * length >= x:\n            ans += 1\n            length = 1\n        else:\n            length += 1\n    print(ans)", "def teams(n, x, a):\n    A = sorted(a, reverse=True)\n    (cnt, cur) = (0, 1)\n    for i in A:\n        if i * cur >= x:\n            cnt += 1\n            cur = 0\n        cur += 1\n    return cnt\nt = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(teams(n, x, a))", "import sys\nI = lambda : map(int, sys.stdin.readline().split())\npr = lambda x: sys.stdout.write(f'{x}\\n')\n\ndef solve():\n    (n, x, c, l) = (*I(), 0, 0)\n    a = sorted([*I()], reverse=True)\n    for (i, y) in enumerate(a):\n        if y * (i - l + 1) >= x:\n            l = i + 1\n            c += 1\n    pr(c)\n\ndef main():\n    for _ in range(*I()):\n        solve()\nmain()", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    (res, cur) = (0, 1)\n    for s in a:\n        if s * cur >= x:\n            res += 1\n            cur = 0\n        cur += 1\n    print(res)", "t = int(input())\nwhile t:\n    (n, x) = [int(a) for a in input().split()]\n    skill = [int(a) for a in input().split()]\n    for i in range(n):\n        if x % skill[i] == 0:\n            skill[i] = x / skill[i] - 1\n        else:\n            skill[i] = x // skill[i]\n    skill.sort()\n    count = 0\n    remaining_num = 0\n    for i in range(n):\n        if skill[i] == 0:\n            count += 1\n        elif remaining_num == skill[i]:\n            count += 1\n            remaining_num = 0\n        else:\n            remaining_num += 1\n    print(count)\n    t -= 1", "import sys\nimport math\ncases = int(input())\nwhile cases > 0:\n    (n, x) = [int(e) for e in input().split()]\n    arr = [int(e) for e in input().split()]\n    arr.sort(reverse=True)\n    tc = 0\n    cumm = 0\n    MAXX = 10 ** 9 + 1\n    minm = MAXX\n    gsize = 0\n    for i in range(n):\n        if minm > arr[i]:\n            minm = arr[i]\n        gsize += 1\n        cumm = minm * gsize\n        if cumm >= x:\n            tc += 1\n            gsize = 0\n            cumm = 0\n            minm = MAXX\n    print(tc)\n    cases -= 1", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    (res, cur) = (0, 1)\n    for s in a:\n        if s * cur >= x:\n            res += 1\n            cur = 0\n        cur += 1\n    print(res)", "def function(n, x, nums):\n    if n == 0:\n        return 0\n    nums1 = sorted(nums, reverse=True)\n    count = 0\n    l = []\n    c = 1\n    for j in nums1:\n        if j * c >= x:\n            count += 1\n            c = 0\n        c += 1\n    return count\nt = int(input())\nfor k1 in range(t):\n    l = list(map(int, input().rstrip().split()))\n    n = l[0]\n    x = l[1]\n    nums = list(map(int, input().rstrip().split()))\n    print(function(n, x, nums))", "def solve(n, x, arr):\n    arr = sorted(arr)\n    res = 0\n    temp_length_so_far = 0\n    for i in range(n - 1, -1, -1):\n        temp_length_so_far += 1\n        if arr[i] * temp_length_so_far >= x:\n            res += 1\n            temp_length_so_far = 0\n    return res\nT = int(input())\nfor _ in range(T):\n    (n, x) = map(int, input().split())\n    arr = map(int, input().split())\n    print(solve(n, x, arr))", "def solve_3(A, x):\n    A.sort()\n    n = len(A)\n    B = []\n    count = 0\n    for i in A:\n        if i < x:\n            B.append(i)\n        else:\n            count += 1\n    B.reverse()\n    skore = 0\n    size = 0\n    for i in range(len(B)):\n        size += 1\n        skore = size * B[i]\n        if skore >= x:\n            count += 1\n            skore = 0\n            size = 0\n    return count\nT = int(input())\nfor i in range(T):\n    (n, x) = input().split()\n    N = int(n)\n    X = int(x)\n    A = [int(i) for i in input().split()][:N]\n    print(solve_3(A, X))", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    c = 0\n    if l[0] * n < x:\n        print(0)\n    else:\n        for j in range(n):\n            if l[j] < x:\n                break\n            else:\n                c += 1\n        k = j\n        a = 1\n        if k == n - 1:\n            print(c)\n        else:\n            for j in range(k, n):\n                if l[j] * a >= x:\n                    c += 1\n                    a = 1\n                    k = j\n                else:\n                    a += 1\n            print(c)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    ans = 0\n    t = -1\n    for i in range(n):\n        if l[i] >= x:\n            ans += 1\n        else:\n            t = i\n            break\n    if t == -1:\n        print(ans)\n    else:\n        c = 1\n        for i in range(t, n):\n            if l[i] * c >= x:\n                ans += 1\n                c = 1\n            else:\n                c += 1\n        print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    a = a[::-1]\n    ans = 0\n    count = 0\n    mi = 999999999999\n    for i in range(n):\n        if count * mi >= x:\n            ans += 1\n            count = 1\n            mi = a[i]\n        else:\n            count += 1\n            mi = a[i]\n    if count * mi >= x:\n        ans += 1\n    print(ans)", "tc = int(input())\nwhile tc > 0:\n    tc -= 1\n    (n, x) = map(int, input().split())\n    k = list(map(int, input().split()))\n    k = sorted(k, reverse=True)\n    item = 1\n    ct = 0\n    for i in k:\n        if i * item >= x:\n            item = 0\n            ct += 1\n        item += 1\n    print(ct)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    (n, k) = [int(x) for x in s.split()]\n    s = input()\n    arr = [int(x) for x in s.split()]\n    arr.sort()\n    count = 0\n    j = 1\n    for i in range(n - 1, -1, -1):\n        if arr[i] * j >= k:\n            count += 1\n            j = 1\n        else:\n            j += 1\n    print(count)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    (res, cur) = (0, 1)\n    for s in a:\n        if s * cur >= x:\n            res += 1\n            cur = 0\n        cur += 1\n    print(res)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    (res, cur) = (0, 1)\n    for s in a:\n        if s * cur >= x:\n            res += 1\n            cur = 0\n        cur += 1\n    print(res)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    (res, cur) = (0, 1)\n    for s in a:\n        if s * cur >= x:\n            res += 1\n            cur = 0\n        cur += 1\n    print(res)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    (res, cur) = (0, 1)\n    for s in a:\n        if s * cur >= x:\n            res += 1\n            cur = 0\n        cur += 1\n    print(res)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    ans = 0\n    k = 1\n    for i in range(n):\n        if a[i] * k >= x:\n            ans += 1\n            k = 1\n        else:\n            k += 1\n    print(ans)", "def solution(arr, k):\n    arr.sort(reverse=True)\n    (count, curr) = (0, 1)\n    for i in arr:\n        if curr * i >= k:\n            count = count + 1\n            curr = 0\n        curr = curr + 1\n    return count\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [int(x) for x in input().split()]\n    print(solution(arr, k))", "import sys\nsys.setrecursionlimit(10 ** 5)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\nfor _ in range(II()):\n    (n, x) = MI()\n    aa = LI()\n    ans = 0\n    cnt = 0\n    aa.sort(reverse=True)\n    for a in aa:\n        cnt += 1\n        if a * cnt >= x:\n            ans += 1\n            cnt = 0\n    print(ans)", "testcases = int(input())\nfor _ in range(testcases):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))\n    a = a[::-1]\n    countr = 0\n    pos = 1\n    for i in range(n):\n        if pos * a[i] >= x:\n            countr += 1\n            pos = 1\n        else:\n            pos += 1\n    print(countr)", "from sys import stdin, stdout\ninput = stdin.readline\ntc = int(input())\nfor t in range(tc):\n    minimum = int(input().split()[1])\n    programmers = list(map(int, input().split()))\n    maximumTeams = 0\n    position = 1\n    programmers.sort()\n    programmers.reverse()\n    for i in range(len(programmers)):\n        if programmers[i] >= minimum:\n            maximumTeams = maximumTeams + 1\n        elif programmers[i] * position >= minimum:\n            maximumTeams = maximumTeams + 1\n            position = 1\n        else:\n            position = position + 1\n    print(maximumTeams)", "t = int(input())\nfor test in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    teams = 0\n    members = 0\n    for i in range(n):\n        members += 1\n        if a[i] * members >= x:\n            teams += 1\n            members = 0\n    print(teams)", "def solve():\n    (n, x) = map(int, input().split(' '))\n    a = list(map(int, input().split(' ')))\n    a = sorted(a)\n    a = a[::-1]\n    i = 0\n    t = 1\n    num = 0\n    while i < n:\n        while t * a[i] < x:\n            i += 1\n            t += 1\n            if i == n:\n                break\n        if i == n:\n            break\n        if a[i] * t >= x:\n            num += 1\n            t = 1\n            i += 1\n    print(num)\nt = int(input())\nwhile t:\n    t -= 1\n    solve()", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    size = 1\n    team = 0\n    for i in range(n):\n        if l[i] * size >= x:\n            team += 1\n            size = 1\n        else:\n            size += 1\n    print(team)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    (res, cur) = (0, 1)\n    for s in a:\n        if s * cur >= x:\n            res += 1\n            cur = 0\n        cur += 1\n    print(res)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    l = []\n    l = [int(num) for num in input().split()]\n    l.sort(reverse=True)\n    (m, g) = (1, 0)\n    for k in range(n):\n        if l[k] * m >= x:\n            g = g + 1\n            m = 1\n        else:\n            m = m + 1\n    print(g)", "def main():\n    for _ in range(int(input())):\n        (n, x) = list(map(int, input().split()))\n        arr = list(map(int, input().split()))\n        arr = sorted(arr, reverse=True)\n        k = 1\n        i = 0\n        count = 0\n        while i + k - 1 < n:\n            if arr[i + k - 1] >= x / k:\n                i += k\n                count += 1\n            else:\n                k += 1\n        print(count)\nmain()", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    (res, cur) = (0, 1)\n    for s in a:\n        if s * cur >= x:\n            res += 1\n            cur = 0\n        cur += 1\n    print(res)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    (res, cur) = (0, 1)\n    for s in a:\n        if s * cur >= x:\n            res += 1\n            cur = 0\n        cur += 1\n    print(res)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    num = list(map(int, input().split()))\n    num = sorted(num, reverse=True)\n    (ans, cnt) = (0, 1)\n    for s in num:\n        if s * cnt >= k:\n            ans += 1\n            cnt = 0\n        cnt += 1\n    print(ans)", "def createTeam(s, x):\n    s.sort()\n    j = len(s) - 1\n    num = 0\n    while s:\n        if s[-1] >= x:\n            num += 1\n            s.pop()\n        else:\n            break\n    if len(s) > 1:\n        put = 0\n        while s:\n            m = s.pop()\n            put += 1\n            if m * put >= x:\n                num += 1\n                put = 0\n    return num\nt = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    s = list(map(int, input().split()))\n    print(createTeam(s, x))", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr = sorted(arr, reverse=True)\n    cur = 1\n    ct = 0\n    for i in arr:\n        if cur * i >= x:\n            cur = 1\n            ct += 1\n            continue\n        cur += 1\n    print(ct)", "t = int(input())\nfor z in range(t):\n    (n, x) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    a.sort()\n    a.reverse()\n    team = 0\n    j = 1\n    for i in range(n):\n        if a[i] * j >= x:\n            team += 1\n            j = 1\n        else:\n            j += 1\n    print(team)", "import math\nn = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    c = 0\n    v = 0\n    ind = 0\n    if l[0] >= b:\n        for j in range(a):\n            if l[j] >= b:\n                c += 1\n            else:\n                ind = j\n                break\n        else:\n            ind = j\n    if ind == a - 1:\n        print(c)\n    else:\n        le = 0\n        for j in range(ind, a):\n            le += 1\n            if le * l[j] >= b:\n                c += 1\n                le = 0\n        print(c)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    (res, cur) = (0, 1)\n    for s in a:\n        if s * cur >= x:\n            res += 1\n            cur = 0\n        cur += 1\n    print(res)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    curr = 1\n    s = 0\n    for i in range(n - 1, -1, -1):\n        if a[i] * curr >= x:\n            curr = 1\n            s += 1\n        else:\n            curr += 1\n    print(s)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    (res, cur) = (0, 1)\n    for s in a:\n        if s * cur >= x:\n            res += 1\n            cur = 0\n        cur += 1\n    print(res)", "def solve_testcase(n: int, x: int, skills: list):\n    skills = sorted(skills, reverse=True)\n    new_team_members = 0\n    teams = 0\n    team_size = 1\n    min_skill = (x - 1) // team_size + 1\n    for i in range(n):\n        new_team_members += 1\n        if new_team_members == team_size:\n            if skills[i] >= min_skill:\n                teams += 1\n                new_team_members = 0\n            else:\n                team_size += 1\n                min_skill = (x - 1) // team_size + 1\n    print(teams)\n\ndef input_testcase():\n    (n, x) = [int(term) for term in input().split()]\n    skills = [int(term) for term in input().split()]\n    return (n, x, skills)\nt = int(input())\nfor i in range(t):\n    solve_testcase(*input_testcase())", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    a = sorted(a, reverse=True)\n    numberOfTeams = 0\n    programmerCount = 1\n    for s in a:\n        if s * programmerCount >= x:\n            numberOfTeams += 1\n            programmerCount = 0\n        programmerCount += 1\n    print(numberOfTeams)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    ans = 0\n    l = 0\n    for i in a:\n        l += 1\n        if i * l >= x:\n            ans += 1\n            l = 0\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    (res, cur) = (0, 1)\n    for s in a:\n        if s * cur >= x:\n            res += 1\n            cur = 0\n        cur += 1\n    print(res)"]