["for _ in [*open(0)][1:]:\n    (a, b) = map(int, _.split())\n    print(a ^ b)", "import sys\n\ndef main():\n    testcases = int(sys.stdin.readline().strip())\n    for i in range(testcases):\n        (a, b) = [int(i) for i in sys.stdin.readline().split()]\n        x = a & b\n        print((a ^ x) + (b ^ x))\nmain()", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(a ^ b)", "fptr = open(0)\nfor _ in range(int(next(fptr))):\n    (a, b) = map(int, next(fptr).split())\n    print(a ^ b)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print((a | b) ^ a & b)", "k = []\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    k.append(a ^ b)\nfor i in k:\n    print(i)", "import math\nt = int(input())\nout = ''\nfor i in range(t):\n\n    def op(a, b, x):\n        return (a ^ x) + (b ^ x)\n    (a, b) = map(int, input().split(' '))\n    x = a & b\n    best = op(a, b, x)\n    if i < t - 1:\n        out += f'{best}\\n'\n    else:\n        out += f'{best}'\nprint(out)", "for s in [*open(0)][1:]:\n    (A, B) = map(int, s.split())\n    print(A ^ B)", "for s in [*open(0)][1:]:\n    (A, B) = map(int, s.split())\n    print(A ^ B)", "t = int(input())\nans = []\nfor iters in range(t):\n    s = input()\n    arr = s.split()\n    a = int(arr[0])\n    b = int(arr[1])\n    ans.append(a ^ b)\nfor i in ans:\n    print(i)", "from sys import *\nimport math\ninput = stdin.readline\nI = int\nR = range\nlistInput = lambda : list(map(int, input().strip().split()))\nlineInput = lambda : map(int, input().strip().split())\nsJoin = lambda a, sep: '{}'.format(sep).join(a)\narrJoin = lambda a, sep: '{}'.format(sep).join(map(str, a))\n\ndef isPrime(n):\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    for i in range(5, int(math.sqrt(n) + 1), 6):\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n    return True\n\ndef main():\n    for _ in R(I(input())):\n        (a, b) = lineInput()\n        print(a ^ b)\nmain()", "t = int(input())\nl = []\nfor i in range(t):\n    sm = 10000000\n    a = [int(i) for i in input().split()]\n    x = a[0] & a[1]\n    sm = (a[0] ^ x) + (a[1] ^ x)\n    l.append(sm)\nfor i in l:\n    print(i)", "for s in [*open(0)][1:]:\n    (A, B) = map(int, s.split())\n    print(A ^ B)", "from sys import *\ninput = stdin.readline\nI = int\nR = range\nlistInput = lambda : list(map(int, input().strip().split()))\nlineInput = lambda : map(int, input().strip().split())\n\ndef main():\n    for _ in R(I(input())):\n        (a, b) = lineInput()\n        print(a ^ b)\nmain()", "import sys\nT = int(sys.stdin.readline())\nfor i in range(T):\n    (a, b) = map(int, sys.stdin.readline().split())\n    print(a ^ b)", "import sys\nMOD = 1000000007\n\ndef inp():\n    return sys.stdin.readline().strip()\n\ndef ii():\n    return int(inp())\n\ndef iis():\n    return [int(i) for i in inp().split()]\n\ndef solve():\n    (a, b) = iis()\n    return a ^ b\nt = ii()\nfor _ in range(t):\n    print(solve())", "from sys import *\ninput = lambda : stdin.readline()\nint_arr = lambda : list(map(int, stdin.readline().strip().split()))\nstr_arr = lambda : list(map(str, stdin.readline().split()))\nget_str = lambda : map(str, stdin.readline().strip().split())\nget_int = lambda : map(int, stdin.readline().strip().split())\nget_float = lambda : map(float, stdin.readline().strip().split())\nmod = 1000000007\nsetrecursionlimit(1000)\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\nfor _ in range(int(input())):\n    (a, b) = get_int()\n    print(a ^ 0 + b ^ 0)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print((a | b) ^ a & b)", "import math\nimport sys\nimport itertools\nimport fractions\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nfor t in wtf[1:]:\n    (a, b) = map(int, t.split())\n    c = min(a, b)\n    print((a ^ c) + (b ^ c))", "t = int(input())\narray = list()\nfor j in range(t):\n    array.append(list(map(int, input().split())))\nfor j in range(t):\n    print(array[j][0] ^ array[j][1])", "import sys\nfrom collections import defaultdict, Counter as CC\nfrom math import sqrt, ceil, floor, log2\nINF = float('inf')\nMOD = 10 ** 9 + 7\nread = lambda : [int(s) for s in sys.stdin.readline().split()]\n\ndef solve():\n    (a, b) = read()\n    print(a ^ b)\n_ = 1\n_ = int(input())\nwhile _:\n    solve()\n    _ -= 1", "t = int(input())\nsol = []\nfor i in range(0, t):\n    aux = input()\n    vari = aux.split(' ')\n    vari = list(map(int, vari))\n    a = vari[0]\n    b = vari[1]\n    x = min(a, b)\n    xop = a ^ x\n    xap = b ^ x\n    sum = xop + xap\n    sol.append(sum)\nfor j in sol:\n    print(j)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "from sys import stdin\n\ndef main(a, b):\n    print(a ^ b)\nt = int(stdin.readline())\ncases = [[int(s) for s in stdin.readline().split()] for _ in range(t)]\nfor (a, b) in cases:\n    main(a, b)", "import math\nimport sys\nif __debug__ == False:\n    sys.stdin = open('ip.txt', 'r')\n    sys.stdout = open('op.txt', 'w')\ntry:\n\n    def main():\n        t = 1\n        t = int(sys.stdin.readline())\n        while t:\n            (a, b) = [int(x) for x in sys.stdin.readline().split()]\n            sys.stdout.write(str(a ^ b) + '\\n')\n            t -= 1\n    main()\nexcept Exception as e:\n    sys.stdout.write('ErrOR : ' + str(e))", "import math\nimport sys\nif __debug__ == None:\n    sys.stdin = open('ip.txt', 'r')\n    sys.stdout = open('op.txt', 'w')\ntry:\n\n    def main():\n        t = 1\n        t = int(sys.stdin.readline())\n        while t:\n            (a, b) = [int(x) for x in sys.stdin.readline().split()]\n            sys.stdout.write(str(a ^ b) + '\\n')\n            t -= 1\n    main()\nexcept Exception as e:\n    sys.stdout.write('ErrOR : ' + str(e))", "def main():\n    for i in range(int(input())):\n        (a, b) = map(int, input().split())\n        print(a ^ b)\nmain()", "for i in range(int(input())):\n    values = input()\n    (a, b) = (int(values.split()[0]), int(values.split()[1]))\n    print(a ^ b)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a ^ a & b | b ^ a & b)", "def read_int():\n    return int(input())\n\ndef read_ints():\n    return map(int, input().split(' '))\nt = read_int()\nfor case_num in range(t):\n    (a, b) = read_ints()\n    print(a ^ b)", "t = int(input())\nfor k in range(t):\n    (a, b) = map(int, input().split(' '))\n    print(a ^ b)", "t = int(input())\nwhile t:\n    t -= 1\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "t = int(input())\nfor _ in range(t):\n    (a, b) = list(map(int, input().split()))\n    print(a ^ b)", "for _ in range(int(input())):\n    (a, b) = [int(i) for i in input().split()]\n    print(a ^ b)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    print((a ^ a & b) + (b ^ a & b))", "testcases = int(input())\nwhile testcases != 0:\n    testcases -= 1\n    (a, b) = input().split()\n    a = int(a)\n    b = int(b)\n    print(a ^ b)", "import math\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "for t in range(int(input())):\n    d = 0\n    (a, b) = map(int, input().split())\n    d = a ^ b\n    print(d)", "test = int(input())\nfor i in range(test):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "for _ in range(int(input())):\n    (a, b) = sorted(map(int, input().split()))\n    print(a ^ b)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    c = max(a, b)\n    print((c ^ a) + (c ^ b))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(b ^ a)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    x = a & b\n    print((a ^ x) + (b ^ x))", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "inpt = int(input())\nfor i in range(inpt):\n    (a, b) = map(int, input().split())\n    c = max(a, b)\n    print((c ^ a) + (c ^ b))", "for i in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    c = a & b\n    result = (a ^ c) + (b ^ c)\n    print(result)", "while True:\n    try:\n        t = eval(input())\n        for i in range(t):\n            (a, b) = map(int, input().split())\n            print(a ^ b)\n    except:\n        break", "t = int(input())\nfor i in range(t):\n    inp = list(map(int, input().split()))\n    a = inp[0]\n    b = inp[-1]\n    print((a ^ a) + (a ^ b))", "t = int(input())\nfor _ in range(t):\n    a = input().split()\n    x = int(a[0]) & int(a[1])\n    b = (int(a[0]) ^ x) + (int(a[1]) ^ x)\n    print(b)", "t = int(input())\nfor _ in range(t):\n    (a, b) = list(map(int, input().split()))\n    print(a ^ b)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "for _ in range(int(input())):\n    (a, b) = [int(i) for i in input().split()]\n    print(a ^ b)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "for t in range(int(input())):\n    d = 0\n    (a, b) = map(int, input().split())\n    d = a ^ b\n    print(d)", "import math\nt1 = int(input())\nfor _ in range(t1):\n    (a, b) = map(int, input().split())\n    b1 = []\n    t = ''\n    print(a ^ b)", "for i in range(int(input())):\n    (a, b) = tuple(map(int, input().split()))\n    print(a ^ b)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "for _ in range(0, int(input()), 1):\n    (a, b) = map(int, input().split())\n    temp = a & b\n    res = (a ^ temp) + (b ^ temp)\n    print(res)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    print(x ^ y)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "for _ in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    print(a ^ b)", "def eval(a, b):\n    return a ^ b\nt = int(input())\nwhile t:\n    (a, b) = map(int, input().split())\n    print(eval(a, b))\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (a, b) = list(map(int, input().split()))\n    print(a ^ b)", "n = int(input())\nfor _ in range(n):\n    (a, b) = map(int, input().split())\n    c = a & b\n    d = a ^ c\n    e = b ^ c\n    print(d + e)", "n = int(input())\nwhile n:\n    (a, b) = map(int, input().split())\n    print(a ^ b)\n    n -= 1", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "for t in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "for t in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "t = int(input())\nfor x in range(t):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a ^ b)", "t = int(input())\nfor k in range(t):\n    s = list(map(int, input().split(' ')))\n    a = s[0]\n    b = s[1]\n    print(a ^ b)", "for i in range(int(input())):\n    (t, k) = input().split()\n    (t, k) = (int(t), int(k))\n    print(t ^ k)", "tc = int(input())\nfor i in range(tc):\n    (x, y) = list(map(int, input().split()))\n    print(x ^ y)", "t = int(input())\nfor _ in range(0, t):\n    inputs = [int(num) for num in input().split()]\n    a = inputs[0]\n    b = inputs[1]\n    c = a & b\n    print((a ^ c) + (b ^ c))", "for j in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    print(a ^ 0 + b ^ 0)", "answers = []\nn = int(input())\nfor i in range(0, n):\n    (a, b) = map(int, input().split())\n    answers.append(a ^ b)\nfor i in answers:\n    print(i)", "from sys import stdin, stdout\nn = int(stdin.readline())\nfor i in range(n):\n    (a, b) = map(int, stdin.readline().split())\n    print(a ^ b)", "import sys\n\ndef minp():\n    return sys.stdin.readline().strip()\n\ndef mint():\n    return int(minp())\n\ndef mints():\n    return map(int, minp().split())\n\ndef solve():\n    (a, b) = mints()\n    x = a & b\n    print((a ^ x) + (b ^ x))\nfor i in range(mint()):\n    solve()", "n = int(input())\nlst = []\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    lst.append(a ^ b)\nfor elem in lst:\n    print(elem)", "for t in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    print(a ^ b)", "t = int(input())\nwhile t:\n    (a, b) = map(int, input().split())\n    print(a ^ b)\n    t -= 1"]