["for s in [*open(0)][1:]:\n    (w, h, n) = map(int, s.split())\n    print('YNEOS'[w * h & -w * h < n::2])", "for s in [*open(0)][1:]:\n    (w, h, n) = map(int, s.split())\n    print('YNEOS'[w * h & -w * h < n::2])", "for s in [*open(0)][1:]:\n    (w, h, n) = map(int, s.split())\n    print('YNEOS'[w * h & -w * h < n::2])", "for s in [*open(0)][1:]:\n    (w, h, n) = map(int, s.split())\n    print('YNEOS'[w * h & -w * h < n::2])", "for s in [*open(0)][1:]:\n    (w, h, n) = map(int, s.split())\n    print('YNEOS'[w * h & -w * h < n::2])", "f = lambda x: bin(x)[::-1].find('1')\nfor s in [*open(0)][1:]:\n    (w, h, n) = map(int, s.split())\n    print('YNEOS'[1 << f(w) + f(h) < n::2])", "for s in [*open(0)][1:]:\n    (w, h, n) = map(int, s.split())\n    print('YNEOS'[w * h & -w * h < n::2])", "for s in [*open(0)][1:]:\n    (w, h, n) = map(int, s.split())\n    print('YNEOS'[w * h & -w * h < n::2])", "for s in [*open(0)][1:]:\n    (w, h, n) = map(int, s.split())\n    print('YNEOS'[w * h & -w * h < n::2])", "for s in [*open(0)][1:]:\n    (w, h, n) = map(int, s.split())\n    print('YNEOS'[w * h & -w * h < n::2])", "for s in [*open(0)][1:]:\n    (w, h, n) = map(int, s.split())\n    print('YNEOS'[w * h & -w * h < n::2])", "for s in [*open(0)][1:]:\n    (w, h, n) = map(int, s.split())\n    print('YNEOS'[w * h & -w * h < n::2])", "for s in [*open(0)][1:]:\n    (w, h, n) = map(int, s.split())\n    print('YNEOS'[w * h & -w * h < n::2])", "for s in [*open(0)][1:]:\n    (w, h, n) = map(int, s.split())\n    print('YNEOS'[w * h & -w * h < n::2])", "for s in [*open(0)][1:]:\n    (w, h, n) = map(int, s.split())\n    print('YNEOS'[w * h & -w * h < n::2])", "for s in [*open(0)][1:]:\n    (w, h, n) = map(int, s.split())\n    print('YNEOS'[w * h & -w * h < n::2])", "for s in [*open(0)][1:]:\n    (w, h, n) = map(int, s.split())\n    print('YNEOS'[w * h & -w * h < n::2])", "import sys\nsys.setrecursionlimit(10 ** 6)\nfrom sys import stdin, stdout\nimport math\nfrom collections import defaultdict, Counter, deque\nfrom functools import lru_cache\nimport bisect\nfrom heapq import heapify, heappush, heappop\nfrom itertools import permutations, combinations\nmod = 10 ** 9 + 7\ninf = math.inf\n\n@lru_cache(None)\ndef get_max(w, h):\n    if w == 0 or h == 0:\n        return 0\n    ans = 1\n    if w % 2 == 0:\n        ans = max(ans, 2 * get_max(w // 2, h))\n    if h % 2 == 0:\n        ans = max(ans, 2 * get_max(w, h // 2))\n    return ans\n\ndef solve(w, h, n):\n    if get_max(w, h) >= n:\n        return 'YES'\n    return 'NO'\nt = int(input())\nfor _ in range(t):\n    line = stdin.readline()\n    (w, h, n) = map(int, line.split(' '))\n    print(solve(w, h, n))", "for s in [*open(0)][1:]:\n    (w, h, n) = map(int, s.split())\n    print('YNEOS'[w * h & -w * h < n::2])", "def power2(x):\n    t = 0\n    while x % 2 == 0:\n        t += 1\n        x //= 2\n    return t\nfor _ in [*open(0)][1:]:\n    (w, h, n) = map(int, _.split())\n    if n > 2 ** (power2(w) + power2(h)):\n        print('NO')\n    else:\n        print('YES')", "from sys import stdin\ninput = stdin.readline\n\ndef ii():\n    return int(input())\n\ndef li():\n    return list(map(int, input().split()))\n\ndef pow2(n):\n    c = 1\n    while n % 2 == 0:\n        n //= 2\n        c *= 2\n    return c\nfor _ in range(ii()):\n    (w, h, n) = li()\n    if pow2(w) * pow2(h) >= n:\n        print('YES')\n    else:\n        print('NO')", "def max_t(num):\n    count = 0\n    while num % 2 == 0:\n        count += 1\n        num //= 2\n    return count\nt = int(input())\nout = []\nfor i in range(t):\n    (w, h, n) = map(int, input().split())\n    if 2 ** (max_t(w) + max_t(h)) >= n:\n        out.append('YES')\n    else:\n        out.append('NO')\nprint('\\n'.join(out))", "t = int(input())\nrlist = []\n\ndef getcount(w, h, memory={}):\n    if (w, h) in memory:\n        return memory[w, h]\n    if w % 2 == 0:\n        value = 2 * getcount(w / 2, h)\n        memory[w, h] = value\n        return value\n    elif h % 2 == 0:\n        value = 2 * getcount(w, h / 2)\n        memory[w, h] = value\n        return value\n    return 1\nfor _ in range(t):\n    (w, h, n) = list(map(int, input().split(' ')))\n    count = getcount(w, h)\n    if count >= n:\n        rlist.append('YES')\n    else:\n        rlist.append('NO')\nfor i in rlist:\n    print(i)", "def f(width, height, numberOfPieces):\n    count = 1\n    while width % 2 == 0:\n        count = count * 2\n        width = width // 2\n    while height % 2 == 0:\n        count = count * 2\n        height = height // 2\n    return 'YES' if count >= numberOfPieces else 'NO'\nresult = []\ntestCases = int(input())\nfor idx in range(testCases):\n    (width, height, numberOfPieces) = [int(item) for item in input().split(' ')]\n    result.append(f(width, height, numberOfPieces))\nfor item in result:\n    print(item)", "def list_nechta_bulakka_bulinishi(w, h):\n    soni = 0\n    while w % 2 == 0:\n        w = w // 2\n        soni += 1\n    while h % 2 == 0:\n        h = h // 2\n        soni += 1\n    return 2 ** soni\nt = int(input())\nnatija = []\nfor i in range(t):\n    (w, h, n) = input().split(' ')\n    (w, h, n) = (int(w), int(h), int(n))\n    if list_nechta_bulakka_bulinishi(w, h) >= n:\n        natija.append('YES')\n    else:\n        natija.append('NO')\nfor i in range(t):\n    print(natija[i])", "t = int(input())\nfor _ in range(t):\n    (w, h, n) = map(int, input().split())\n    if w * h & -w * h < n:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    (w, h, n) = map(int, input().split())\n    value = w * h & -w * h\n    if value >= n:\n        print('YES')\n    else:\n        print('NO')", "for T in range(int(input())):\n    (w, h, n) = map(int, input().split())\n    print('NO' if (w & -w) * (h & -h) < n else 'YES')", "from math import gcd\nfor _ in range(int(input())):\n    (h, w, n) = map(int, input().split())\n    print('YES' if gcd(h * w, 2 ** 30) >= n else 'NO')", "for _ in range(int(input())):\n    (w, h, n) = map(int, input().split())\n    print('YNEOS'[w * h & -w * h < n::2])", "for s in [*open(0)][1:]:\n    (w, h, n) = map(int, s.split())\n    print('YNEOS'[w * h & -w * h < n::2])", "def number_papers():\n    (w, h, n) = input().split()\n    w = int(w)\n    h = int(h)\n    n = int(n)\n    count1 = 1\n    count2 = 1\n    while w % 2 == 0:\n        count1 *= 2\n        w = w / 2\n    while h % 2 == 0:\n        count2 *= 2\n        h = h / 2\n    res = count1 * count2\n    if res < n:\n        return 'NO'\n    return 'YES'\nno_tests = int(input())\nres = []\nfor i in range(no_tests):\n    res.append(number_papers())\nfor each in res:\n    print(each)", "def can_cut(width: int, height: int, cuts: int, parts: int=1) -> bool:\n    while not width % 2:\n        (parts, width) = (parts * 2, width // 2)\n    while not height % 2:\n        (parts, height) = (parts * 2, height // 2)\n    return parts >= cuts\n\ndef read_input(filename: str=None) -> None:\n    from sys import stdin\n    stdin = open(filename) if filename else stdin\n    cases = int(stdin.readline())\n    while cases:\n        cases = cases - 1\n        (width, height, cuts) = tuple(map(int, stdin.readline().split()))\n        print('YES') if can_cut(width, height, cuts) else print('NO')\n\ndef main():\n    read_input()\nmain()", "import math\ns = []\nfor i in range(int(input())):\n    (w, h, n) = map(int, input().split())\n    if n == 1:\n        s.append('YES')\n    elif w % 2 != 0 and h % 2 != 0:\n        s.append('NO')\n    else:\n        i = int(math.log(w * h, 2))\n        while i > 0:\n            if w * h % 2 ** i == 0:\n                if 2 ** i >= n:\n                    s.append('YES')\n                else:\n                    s.append('NO')\n                break\n            i = i - 1\nfor j in range(len(s)):\n    print(s[j])", "from sys import stdin\n\ndef A():\n    t = int(stdin.readline())\n    while t:\n        t -= 1\n        a = [int(x) for x in stdin.readline().split()]\n        (w, h, n) = (a[0], a[1], a[2])\n        cnt = 1\n        cnt1 = 1\n        while w % 2 == 0:\n            w /= 2\n            cnt *= 2\n        while h % 2 == 0:\n            h /= 2\n            cnt1 *= 2\n        if cnt * cnt1 >= n:\n            print('YES')\n        else:\n            print('NO')\nA()", "t = int(input())\nfor i in range(t):\n    (w, h, n) = map(int, input().split())\n    if w * h & -w * h < n:\n        print('NO')\n    else:\n        print('YES')", "for s in [*open(0)][1:]:\n    (w, h, n) = map(int, s.split())\n    print('YNEOS'[w * h & -w * h < n::2])", "import functools\n\n@functools.lru_cache(maxsize=None)\ndef get_max_cuts(w, h):\n    if w % 2 == 0 and h % 2 == 0:\n        return max(2 * get_max_cuts(w // 2, h), 2 * get_max_cuts(w, h // 2))\n    elif w % 2 == 0:\n        return 2 * get_max_cuts(w // 2, h)\n    elif h % 2 == 0:\n        return 2 * get_max_cuts(w, h // 2)\n    else:\n        return 1\n\ndef can_cut(w, h, n):\n    return get_max_cuts(w, h) >= n\nt = int(input())\nfor t_i in range(t):\n    (w, h, n) = map(int, input().split())\n    print('YES' if can_cut(w, h, n) else 'NO')", "t = int(input())\nans = []\nwhile t != 0:\n    t -= 1\n    (a, b, c) = tuple(map(int, input().split()))\n    count = 1\n    while a % 2 == 0:\n        a = a // 2\n        count *= 2\n    while b % 2 == 0:\n        b = b // 2\n        count *= 2\n    if count >= c:\n        ans.append('YES')\n    else:\n        ans.append('NO')\nfor i in ans:\n    print(i)", "t = int(input())\na = []\n\ndef Input(w, h, n):\n    count = 1\n    while w % 2 == 0:\n        w = w / 2\n        count = count * 2\n    while h % 2 == 0:\n        h = h / 2\n        count = count * 2\n    if count >= n:\n        a.append('YES')\n    else:\n        a.append('NO')\n    count = 1\nfor i in range(t):\n    (w, h, n) = map(int, input().split())\n    Input(w, h, n)\nfor i in range(t):\n    print(a[i])", "for _ in range(int(input())):\n    (w, h, n) = map(int, input().split())\n    print('NO') if w * h & -w * h < n else print('YES')", "import sys, math\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nT = int(wtf[0])\nassert T >= 1 and T <= int(10000.0), 'Precondition failure'\nfor t in wtf[1:]:\n    (w, h, n) = map(int, t.split())\n    ans = 1\n    while ans < n and (w != 0 or h != 0):\n        if w % 2 == 0:\n            w //= 2\n            ans *= 2\n        elif h % 2 == 0:\n            h //= 2\n            ans *= 2\n        else:\n            break\n    print('YES' if ans >= n else 'NO')", "def get_power_of_two(x):\n    power_of_two = 0\n    while x > 1:\n        if x % 2 == 1:\n            break\n        x //= 2\n        power_of_two += 1\n    return 2 ** power_of_two\ncases = int(input().strip())\nfor case in range(cases):\n    (w, h, n) = [int(x) for x in input().strip().split(' ')]\n    if get_power_of_two(w) * get_power_of_two(h) >= n:\n        print('YES')\n    else:\n        print('NO')", "res = ''\nfor _ in range(int(input())):\n    (w, h, n) = map(int, input().split())\n    x = 0\n    while not w & 1 or not h & 1:\n        if not w & 1:\n            w //= 2\n            x += 1\n        if not h & 1:\n            h //= 2\n            x += 1\n        if 2 ** x >= n:\n            break\n    res += ('NO\\n', 'YES\\n')[2 ** x >= n]\nprint(res)", "t = int(input())\nif t >= 1 and t <= 10 ** 4:\n    lan = []\n    for i in range(t):\n        (w, h, n) = map(int, input().split())\n        if w >= 1 and h <= 10 ** 4 and (n >= 1) and (n <= 10 ** 9):\n            sheet = 1\n            while w % 2 == 0:\n                w /= 2\n                sheet *= 2\n            while h % 2 == 0:\n                h /= 2\n                sheet *= 2\n            if sheet >= n:\n                lan.append('YES')\n            else:\n                lan.append('NO')\n    print(*lan, sep='\\n')", "n = int(input())\nfor i in range(n):\n    (w, h, n) = map(int, input().split())\n    k = 1\n    while w % 2 == 0:\n        w = w // 2\n        k = k * 2\n    while h % 2 == 0:\n        h = h // 2\n        k = k * 2\n    if k >= n:\n        print('YES')\n    else:\n        print('NO')", "def solve(w, h, n):\n    pieces = 1\n    while w % 2 == 0 or h % 2 == 0:\n        if w % 2 == 0:\n            w = w // 2\n            pieces *= 2\n        elif h % 2 == 0:\n            h = h // 2\n            pieces *= 2\n    return 'YES' if pieces >= n else 'NO'\n\ndef main():\n    test_cases = input()\n    for _ in range(int(test_cases)):\n        (w, h, n) = map(int, input().split())\n        print(solve(w, h, n))\nmain()", "t = int(input())\nfor i in range(t):\n    (a, b, c) = [int(x) for x in input().split()]\n    res = 0\n    while a % 2 == 0:\n        a //= 2\n        res += 1\n    while b % 2 == 0:\n        b //= 2\n        res += 1\n    if 2 ** res >= c:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    (w, h, n) = map(int, input().split(' '))\n    k = 1\n    while w % 2 == 0:\n        k *= 2\n        w //= 2\n    while h % 2 == 0:\n        k *= 2\n        h //= 2\n    if k >= n:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (w, h, n) = map(int, input().split())\n    f = 1\n    ans = 1\n    while f == 1:\n        if w % 2 == 0:\n            w = w // 2\n            ans = ans * 2\n        if h % 2 == 0:\n            h = h // 2\n            ans = ans * 2\n        if w % 2 != 0 and h % 2 != 0:\n            f = 0\n    if ans >= n:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (w, h, n) = map(int, input().split())\n    c = 1\n    while w % 2 == 0:\n        c *= 2\n        w = w // 2\n    while h % 2 == 0:\n        c *= 2\n        h = h // 2\n    if c >= n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (w, h, n) = list(map(int, input().strip().split()))[:3]\n    if n == 1:\n        print('YES')\n        continue\n    x = w * h\n    cou = 0\n    while x % 2 == 0:\n        x = x // 2\n        cou += 1\n    if 2 ** cou >= n:\n        print('YES')\n    else:\n        print('NO')", "(a, d) = (int(input()), [])\nfor i in range(0, a):\n    b = [int(i) for i in input().split()]\n    (t1, t2) = (1, 1)\n    while True:\n        u = 0\n        if b[0] % 2 == 0:\n            b[0] //= 2\n            t1 *= 2\n            u = 1\n        if b[1] % 2 == 0:\n            b[1] //= 2\n            t2 *= 2\n            u = 1\n        if u == 0:\n            break\n    if t1 * t2 >= b[2]:\n        d.append('YES')\n    else:\n        d.append('NO')\nprint(*d, sep='\\n')", "t = int(input())\nfor i in range(t):\n    whn = input().split()\n    w = int(whn[0])\n    h = int(whn[1])\n    n = int(whn[2])\n    counter = 1\n    while w % 2 == 0:\n        w //= 2\n        counter *= 2\n    while h % 2 == 0:\n        h //= 2\n        counter *= 2\n    if n > counter:\n        print('NO')\n    else:\n        print('YES')", "t = int(input(''))\nfor i in range(t):\n    (w, h, n) = map(int, input().split())\n    c = 1\n    while True:\n        if w % 2 == 0:\n            c = c * 2\n            w = w // 2\n        elif h % 2 == 0:\n            c = c * 2\n            h = h // 2\n        else:\n            break\n    if c >= n or n == 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (w, h, n) = map(int, input().split())\n    totw = 1\n    while w % 2 == 0:\n        w >>= 1\n        totw *= 2\n    toth = 1\n    while h % 2 == 0:\n        h >>= 1\n        toth *= 2\n    if totw * toth >= n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (w, h, n) = map(int, input().split())\n    totw = 1\n    while w % 2 == 0:\n        w >>= 1\n        totw *= 2\n    toth = 1\n    while h % 2 == 0:\n        h >>= 1\n        toth *= 2\n    if totw * toth >= n:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (w, h, n) = map(int, input().split())\n    x = w * h\n    c = 0\n    while x % 2 == 0:\n        x //= 2\n        c += 1\n    print('YES' if 2 ** c >= n else 'NO')", "t = int(input())\nfor i in range(t):\n    x = input()\n    x = x.split()\n    w = int(x[0])\n    h = int(x[1])\n    n = int(x[2])\n    i = 1\n    while w % 2 == 0:\n        i *= 2\n        w //= 2\n    while h % 2 == 0:\n        i *= 2\n        h //= 2\n    if i >= n:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (w, h, n) = map(int, input().split())\n    if n == 1:\n        print('YES')\n    elif w % 2 != 0 and h % 2 != 0:\n        print('NO')\n    else:\n        j = 1\n        while w % 2 == 0:\n            j = j * 2\n            w = w // 2\n        while h % 2 == 0:\n            j = j * 2\n            h = h // 2\n        if j >= n:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    (w, h, n) = map(int, input().split())\n    t = 1\n    while w % 2 == 0:\n        t *= 2\n        w //= 2\n    while h % 2 == 0:\n        t *= 2\n        h //= 2\n    print('YES' if t >= n else 'NO')", "t = int(input())\nfor turn in range(t):\n    (w, h, a) = map(int, input().split())\n    p = 1\n    while w % 2 == 0:\n        w = w // 2\n        p = p * 2\n    while h % 2 == 0:\n        h = h // 2\n        p = p * 2\n    if p >= a:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (w, h, n) = map(int, input().split())\n    c = 1\n    while w % 2 == 0:\n        w //= 2\n        c *= 2\n    while h % 2 == 0:\n        h //= 2\n        c *= 2\n    if c >= n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    count = 1\n    (w, h, n) = map(int, input().split())\n    if n < 2:\n        print('YES')\n    else:\n        while w % 2 == 0:\n            count *= 2\n            w = w // 2\n        while h % 2 == 0:\n            count *= 2\n            h = h // 2\n        if count >= n:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor i in range(t):\n    (w, h, n) = tuple(map(int, input().split()))\n    ww = 1\n    while w % 2 == 0:\n        ww *= 2\n        w //= 2\n    hh = 1\n    while h % 2 == 0:\n        hh *= 2\n        h //= 2\n    if ww * hh >= n:\n        print('YES')\n    else:\n        print('NO')", "def check(w, h, n):\n    res = 1\n    while w % 2 == 0:\n        res *= 2\n        w //= 2\n    while h % 2 == 0:\n        res *= 2\n        h //= 2\n    print('YNEOS'[res < n::2])\nfor _ in range(int(input())):\n    check(*map(int, input().split()))", "for t in range(int(input())):\n    (w, h, n) = map(int, input().split())\n    (i, j) = (1, 1)\n    while w % 2 == 0:\n        (w, i) = (w // 2, 2 * i)\n    while h % 2 == 0:\n        (h, j) = (h // 2, 2 * j)\n    print('YES' if i * j >= n else 'NO')", "for i in range(int(input())):\n    (width, height, req) = map(int, input().split())\n    prod = width * height\n    count = 1\n    while prod % 2 == 0:\n        prod = prod // 2\n        count *= 2\n    if count >= req:\n        print('YES')\n    else:\n        print('NO')", "def rd2(n):\n    rez = 1\n    while True:\n        if n % 2 == 0:\n            n //= 2\n            rez += 1\n        else:\n            ot = 1\n            for i in range(1, rez):\n                ot *= 2\n            return ot\nt = int(input())\nfor i in range(t):\n    (w, h, n) = input().split()\n    (w, h, n) = (int(w), int(h), int(n))\n    if rd2(w) * rd2(h) >= n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (w, h, n) = map(int, input().split())\n    res = 1\n    while w % 2 == 0:\n        w = w // 2\n        res += res\n    while h % 2 == 0:\n        h = h // 2\n        res += res\n    if res >= n:\n        print('YES')\n    else:\n        print('NO')", "def sol(w, h, n):\n    count = 1\n    A = w * h\n    while A % 2 != 1:\n        A = A // 2\n        count = count * 2\n    if count >= n:\n        return 'YES'\n    return 'NO'\nt = int(input())\nfor _ in range(t):\n    (w, h, n) = map(int, input().split())\n    print(sol(w, h, n))", "t = int(input())\nfor i in range(t):\n    res = 1\n    (w, h, n) = [int(x) for x in input().split()]\n    while w % 2 == 0:\n        w = w // 2\n        res *= 2\n    while h % 2 == 0:\n        h = h // 2\n        res *= 2\n    print('YES' if res >= n else 'NO')", "t = int(input())\nfor i in range(t):\n    c = 1\n    (w, h, n) = map(int, input().split())\n    if n == 1:\n        print('YES')\n        continue\n    while w % 2 == 0:\n        c = c * 2\n        w = w // 2\n    while h % 2 == 0:\n        c = c * 2\n        h = h // 2\n    if n <= c:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (w, h, n) = map(int, input().split())\n    x = w * h\n    c = 0\n    while x % 2 == 0:\n        x //= 2\n        c += 1\n    print('YES' if 2 ** c >= n else 'NO')", "for T in range(int(input())):\n    (w, h, n) = map(int, input().split())\n    (p1, p2) = (0, 0)\n    while w % 2 == 0:\n        p1 += 1\n        w //= 2\n    while h % 2 == 0:\n        p2 += 1\n        h //= 2\n    print('YES' if 2 ** p1 * 2 ** p2 >= n else 'NO')", "def solve():\n    (w, h, n) = map(int, input().split())\n    a = 1\n    b = 1\n    while w % 2 == 0:\n        w /= 2\n        a *= 2\n    while h % 2 == 0:\n        h /= 2\n        b *= 2\n    if n <= a * b:\n        print('YES')\n    else:\n        print('NO')\nt = 1\nt = int(input())\nfor i in range(t):\n    solve()", "for _ in range(int(input())):\n    (w, h, n) = map(int, input().split())\n    (wcut, hcut) = (1, 1)\n    while w % 2 == 0:\n        wcut *= 2\n        w //= 2\n    while h % 2 == 0:\n        hcut *= 2\n        h //= 2\n    if wcut * hcut >= n:\n        print('YES')\n    else:\n        print('NO')", "n = 0\nnum = int(input(''))\nempty = []\nwhile n < num:\n    arr = list(map(int, input('').split()))\n    area = arr[0] * arr[1]\n    count = 1\n    while area % 2 == 0:\n        count = count * 2\n        area = area / 2\n    if count >= arr[2]:\n        empty.append('YES')\n    else:\n        empty.append('NO')\n    n += 1\nfor i in empty:\n    print(i)", "strng = lambda : input()\ninp = lambda : int(input())\nmul = lambda : map(int, input().split())\njn = lambda x, l: x.join(map(str, l))\nstrlst = lambda : list(input())\nlst = lambda : list(map(int, input().split()))\ndd = lambda : defaultdict(lambda : 0)\nimport sys\ninput = sys.stdin.readline\nfrom collections import defaultdict\nfrom math import ceil, log, floor, sqrt, gcd, log10\nfor _ in range(inp()):\n    (w, h, n) = mul()\n    cnt = 1\n    hc = 1\n    while True:\n        if not h & 1:\n            h = h // 2\n            cnt += hc\n            hc += hc\n        if not w & 1:\n            w = w // 2\n            cnt += hc\n            hc += hc\n        if w & 1 and h & 1:\n            break\n    if cnt >= n:\n        print('YES')\n        continue\n    print('NO')", "cases = int(input())\nfor i in range(cases):\n    (w, h, n) = map(int, input().split())\n    count = 1\n    while w % 2 == 0:\n        w = w // 2\n        count *= 2\n    while h % 2 == 0:\n        h = h // 2\n        count *= 2\n    if count >= n:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (w, h, n) = map(int, input().split())\n    ans = 1\n    while w % 2 == 0:\n        w = w // 2\n        ans *= 2\n    while h % 2 == 0:\n        h = h // 2\n        ans *= 2\n    if ans >= n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (w, h, n) = map(int, input().split())\n    ans = 1\n    while w % 2 == 0:\n        w = w // 2\n        ans = ans * 2\n    while h % 2 == 0:\n        h = h // 2\n        ans = ans * 2\n    if ans >= n:\n        print('YES')\n    else:\n        print('NO')", "def splitter(D, Dans):\n    while D % 2 == 0:\n        D /= 2\n        Dans *= 2\n    return Dans\nt = int(input())\nfor i in range(t):\n    (w, h, n) = map(int, input().split())\n    if n == 1:\n        print('YES')\n        continue\n    ans = 1\n    ans = splitter(w, ans)\n    if ans >= n:\n        print('YES')\n        continue\n    if splitter(h, ans) >= n:\n        print('YES')\n        continue\n    print('NO')", "import math\nt = int(input())\n\ndef pow_2(n):\n    ans = 0\n    while n % 2 == 0:\n        n //= 2\n        ans += 1\n    return ans\n\ndef solve():\n    (w, h, n) = map(int, input().split())\n    if math.pow(2, pow_2(w) + pow_2(h)) >= n:\n        print('YES')\n    else:\n        print('NO')\nwhile t:\n    solve()\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (w, h, n) = [int(i) for i in input().split()]\n    if n == 1:\n        print('YES')\n        continue\n    count = 1\n    while w % 2 == 0:\n        count *= 2\n        w //= 2\n    while h % 2 == 0:\n        count *= 2\n        h //= 2\n    if count >= n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nresult = [1] * t\nfor i in range(t):\n    list1 = list(map(int, input().split(' ')))\n    (a, b, n) = (int(list1[0]), int(list1[1]), int(list1[2]))\n    box = [a, b]\n    p = a * b\n    while n > 1:\n        if p % 2 == 0:\n            p = p // 2\n            n = (n + 1) // 2\n        else:\n            result[i] = 0\n            break\nfor i in result:\n    print('YES') if i == 1 else print('NO')", "import math\nT = int(input())\nfor tc in range(T):\n    (w, h, n) = map(int, input().split())\n    s = w * h\n    c = 1\n    while s % 2 == 0:\n        s /= 2\n        c *= 2\n    print('YES' if c >= n else 'NO')", "t = int(input())\nfor i in range(0, t):\n    x = input().split()\n    a = int(x[0])\n    b = int(x[1])\n    c = int(x[2])\n    ans = 1\n    while a % 2 == 0:\n        ans *= 2\n        a /= 2\n    while b % 2 == 0:\n        ans *= 2\n        b /= 2\n    if ans >= c:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (w, h, n) = map(int, input().split())\n    count = 1\n    while w % 2 == 0:\n        count *= 2\n        w = w // 2\n    while h % 2 == 0:\n        count *= 2\n        h = h // 2\n    if count >= n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (w, h, n) = map(int, input().split())\n    if n == 1:\n        print('YES')\n        continue\n    ans = 1\n    while w % 2 == 0:\n        w /= 2\n        ans *= 2\n    while h % 2 == 0:\n        h /= 2\n        ans *= 2\n    if ans >= n:\n        print('YES')\n        continue\n    print('NO')", "t = int(input())\nfor _ in range(t):\n    (w, h, n) = list(map(int, input().split()))\n    (a, b) = (0, 0)\n    while w % 2 == 0:\n        a += 1\n        w //= 2\n    while h % 2 == 0:\n        b += 1\n        h //= 2\n    if 2 ** (a + b) >= n:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (w, h, n) = map(int, input().split())\n    u = 1\n    if w % 2 == 1 and h % 2 == 1:\n        if n > 1:\n            print('NO')\n        else:\n            print('YES')\n    else:\n        while w % 2 == 0:\n            w = w // 2\n            u *= 2\n        while h % 2 == 0:\n            h = h // 2\n            u *= 2\n        if u >= n:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    (h, w, n) = map(int, input().split())\n    m = 1\n    while h % 2 == 0 and h > 1:\n        m *= 2\n        h //= 2\n    while w % 2 == 0 and w > 1:\n        m *= 2\n        w //= 2\n    if n <= m:\n        print('YES')\n    else:\n        print('NO')"]