["a = int(input())\nfor i in range(a):\n    c = input().split()\n    n = int(c[0])\n    s = int(c[1])\n    e = list(map(int, input().split()))\n    min = n\n    for j in range(n):\n        if s + j <= n and s + j not in e:\n            print(j)\n            break\n        if s - j > 0 and s - j not in e:\n            print(j)\n            break", "t = int(input())\nfor _ in range(t):\n    (n, s, k) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    b = set(a)\n    if s in b:\n        d = 1\n        while True:\n            if s - d >= 1 and s - d not in b:\n                break\n            if s + d <= n and s + d not in b:\n                break\n            d += 1\n        print(d)\n    else:\n        print(0)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    w = set(map(int, input().split()))\n    a = b = s\n    while a in w and b in w:\n        if a > 1:\n            a -= 1\n        if b < n:\n            b += 1\n    print(b - s if a in w else s - a if b in w else min(s - a, b - s))", "def check(x):\n    (l, r) = (0, k)\n    while l < r:\n        m = l + (r - l) // 2\n        if arr[m] == x:\n            return m\n        elif arr[m] > x:\n            r = m\n        else:\n            l = m + 1\n    return -1\nfor _ in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    cnt = 0\n    (d, u) = (s - cnt, s + cnt)\n    while d >= 0 and u <= n:\n        if check(d) == -1 or check(u) == -1:\n            print(cnt)\n            break\n        else:\n            cnt += 1\n            if d > 1:\n                d = s - cnt\n            if u < n:\n                u = s + cnt", "def solve():\n    (n, s, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(0, k + 1):\n        if s - i >= 1 and (not s - i in a):\n            print(i)\n            break\n        if s + i <= n and (not s + i in a):\n            print(i)\n            break\n    else:\n        assert False\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = [1] + [(s - i < 1) + (s + i > n) for i in range(1, k)]\n    for x in a:\n        if abs(x - s) < k:\n            c[abs(x - s)] += 1\n    p = 0\n    while p < k and c[p] == 2:\n        p += 1\n    print(p)", "t = int(input())\nfor i in range(t):\n    (n, s, k) = map(int, input().split())\n    l = [int(j) for j in input().split()]\n    for j in range(k + 1):\n        if s - j > 0 and s - j not in l:\n            print(j, end='\\n')\n            break\n        if s + j <= n and s + j not in l:\n            print(j, end='\\n')\n            break", "for _ in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    num = list(map(int, input().split()))\n    for i in range(n):\n        left = s - i\n        right = s + i\n        if left >= 1 and left not in num:\n            print(i)\n            break\n        if right <= n and right not in num:\n            print(i)\n            break\n    else:\n        assert False", "CASES = int(input())\nfor _ in range(CASES):\n    (n, s, k) = map(int, input().split())\n    closed = set(map(int, input().split()))\n    for i in range(k + 1):\n        a = s + i\n        b = s - i\n        if a not in closed and a <= n and (a >= 1):\n            print(i)\n            break\n        if b not in closed and b <= n and (b >= 1):\n            print(i)\n            break", "def bs(a, n, x):\n    low = 0\n    high = n - 1\n    ans = -1\n    while low <= high:\n        mid = (low + high) // 2\n        if a[mid] == x:\n            return mid\n        if a[mid] < x:\n            low = mid + 1\n        else:\n            high = mid - 1\n    return ans\nfor t in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    i = bs(l, k, s)\n    if i == -1:\n        print(0)\n    else:\n        (le, re) = (-1, -1)\n        lj = i - 1\n        c = 1\n        while lj >= 0:\n            if l[lj] != s - c:\n                le = s - c\n                break\n            c += 1\n            lj -= 1\n        rj = i + 1\n        c = 1\n        while rj < k:\n            if l[rj] != s + c:\n                re = s + c\n                break\n            c += 1\n            rj += 1\n        if re == -1 and k < n and (l[k - 1] < n):\n            re = l[k - 1] + 1\n        if le == -1 and k < n and (l[0] > 1):\n            le = l[0] - 1\n        if le == -1 and re == -1:\n            print(le)\n        elif le == -1:\n            print(re - s)\n        elif re == -1:\n            print(s - le)\n        else:\n            print(min(s - le, re - s))", "ll = lambda : map(int, input().split())\nt = lambda : int(input())\nss = lambda : input()\nlx = lambda x: map(int, input().split(x))\nfrom math import log10, log2, ceil, factorial as fac, gcd, inf\nfor _ in range(1, t() + 1):\n    (n, s, k) = ll()\n    a = list(ll())\n    if s not in a:\n        print(0)\n        continue\n    a.sort()\n    l = []\n    b = 1\n    for i in range(k):\n        if a[i] != b:\n            l.append([b, a[i] - 1])\n            b = a[i] + 1\n        else:\n            b = a[i] + 1\n    if b <= n:\n        l.append([b, n])\n    ans = inf\n    for i in l:\n        (x, y) = i\n        if x <= s <= y:\n            ans = min(ans, abs(s - x), abs(y - s))\n        elif s <= x:\n            ans = min(ans, abs(x - s))\n        elif s >= y:\n            ans = min(ans, abs(y - s))\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, s, k) = map(int, input().split())\n    a = set(map(int, input().split()))\n    for j in range(k + 1):\n        if j + s < n + 1 and j + s not in a or (s - j > 0 and s - j not in a):\n            print(j)\n            break", "for _ in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    if s in a:\n        x = a.index(s)\n        y = s - 1\n        for i in range(x - 1, -1, -1):\n            if a[i] != y:\n                break\n            y -= 1\n        z = s + 1\n        for i in range(x + 1, k, 1):\n            if a[i] != z:\n                break\n            z += 1\n        if y <= 0:\n            print(z - s)\n        elif z >= n:\n            print(s - y)\n        else:\n            print(min(s - y, z - s))\n    else:\n        print(0)", "for z in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    a1 = n + 1\n    a2 = n + 1\n    if s not in a:\n        ans = 0\n    else:\n        for i in range(s + 1, n + 1):\n            if i not in a:\n                a1 = i - s\n                break\n        for i in range(s - 1, 0, -1):\n            if i not in a:\n                a2 = s - i\n                break\n        ans = min(a1, a2)\n    print(ans)", "import math\nfor i in range(0, int(input())):\n    (n, s, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    if s in a:\n        index = a.index(s)\n    else:\n        print(0)\n        continue\n    ind_1 = index\n    ind_2 = index\n    flag1 = 0\n    flag2 = 0\n    j = 0\n    while 1:\n        ind_1 -= 1\n        ind_2 += 1\n        if ind_1 < 0:\n            if a[0] != 1:\n                print(s - a[0] + 1)\n                break\n            flag1 = 1\n        if ind_2 == len(a):\n            if a[len(a) - 1] != n:\n                print(a[len(a) - 1] - s + 1)\n                break\n            flag2 = 1\n        if flag1 == 0:\n            if a[ind_1] != s - (index - ind_1):\n                print(index - ind_1)\n                break\n        if flag2 == 0:\n            if a[ind_2] != s + (ind_2 - index):\n                print(ind_2 - index)\n                break", "for _ in range(int(input())):\n    (n, s, k) = [int(x) for x in input().split()]\n    fl = {int(x) for x in input().split()}\n    i = 0\n    while 1:\n        if max(s - i, 1) not in fl or min(n, s + i) not in fl:\n            print(i)\n            break\n        i += 1", "for _ in range(int(input())):\n    (n, k, s) = map(int, input().split())\n    t = list(map(int, input().split()))\n    if k not in t:\n        print(0)\n    else:\n        dist = 1\n        while k + dist <= n or k - dist >= 1:\n            if k + dist > n:\n                if k - dist not in t:\n                    break\n            elif k - dist <= 0:\n                if k + dist not in t:\n                    break\n            elif k + dist not in t or k - dist not in t:\n                break\n            dist += 1\n        print(dist)", "T = int(input())\nfor test_no in range(T):\n    (n, s, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(0, k + 1):\n        if s - i >= 1 and (not s - i in a):\n            print(i)\n            break\n        if s + i <= n and (not s + i in a):\n            print(i)\n            break\n    else:\n        assert False", "for i in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    x = list(map(int, input().split()))\n    for j in range(0, k + 1):\n        if s - j >= 1 and s - j not in x:\n            print(j)\n            break\n        if s + j <= n and s + j not in x:\n            print(j)\n            break", "for _ in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    fl = {int(x) for x in input().split()}\n    x = 0\n    while True:\n        if x + s not in fl or s - x not in fl if x + s <= n and s - x > 0 else x + s not in fl and s - x not in fl:\n            break\n        else:\n            x += 1\n    print(x)", "t = int(input())\nfor i in range(t):\n    (n, s, k) = map(int, input().split())\n    arry = [int(a) for a in input().split()]\n    if s not in arry:\n        print(0)\n    else:\n        (a1, a2) = (n, n)\n        for j in range(s + 1, n + 1):\n            if j not in arry:\n                a1 = abs(s - j)\n                break\n        k = s - 1\n        while k >= 1:\n            if k not in arry:\n                a2 = s - k\n                break\n            k -= 1\n        print(min(a1, a2))", "t = int(input())\nfor i in range(t):\n    (n, s, k) = map(int, input().split())\n    a = set(map(int, input().split()))\n    for j in range(k + 1):\n        if max(1, s - j) not in a or min(n, s + j) not in a:\n            print(j)\n            break", "adet = int(input(''))\nliste = []\nfor _ in range(adet):\n    p1 = input('')\n    p2 = input('')\n    liste.append((p1, p2))\nfor __ in liste:\n    occ = __[1].split()\n    mevcut_konum = int(__[0].split()[1])\n    finder1 = mevcut_konum\n    finder2 = mevcut_konum\n    while True:\n        if str(finder1) not in occ:\n            print(abs(finder1 - mevcut_konum))\n            break\n        elif str(finder2) not in occ:\n            print(abs(finder2 - mevcut_konum))\n            break\n        if finder1 < int(__[0].split()[0]):\n            finder1 += 1\n        if finder2 > 1:\n            finder2 -= 1", "from collections import defaultdict\nfor _ in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    for i in range(k + 1):\n        if s - i > 0 and s - i not in l:\n            print(i)\n            break\n        if s + i <= n and s + i not in l:\n            print(i)\n            break", "t = int(input())\nfor k in range(0, t):\n    (n, s, k) = map(int, input().split())\n    close_rest = list(map(int, input().split()))\n    if s not in close_rest:\n        ans = 0\n        print(ans)\n    else:\n        ans1 = n + 1\n        ans2 = n + 1\n        for i in range(s + 1, n + 1):\n            if i not in close_rest:\n                ans1 = i - s\n                break\n        for j in range(s - 1, 0, -1):\n            if j not in close_rest:\n                ans2 = s - j\n                break\n        ans = min(ans1, ans2)\n        print(ans)", "t = int(input())\nfor i in range(t):\n    (n, s, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for j in range(k + 1):\n        if max(1, s - j) not in a or min(n, s + j) not in a:\n            print(j)\n            break", "r = lambda : map(int, input().split())\n(t,) = r()\nexec(t * 'n,s,k=r();a={*r()};i=0\\nwhile{max(1,s-i),min(n,s+i)}<=a:i+=1\\nprint(i);')", "for i in range(int(input())):\n    (n, s, k) = [int(i) for i in input().split()]\n    l = set([int(i) for i in input().split()])\n    i = 0\n    res = 0\n    while 1:\n        if s + i <= n and s + i not in l:\n            break\n        if s - i >= 1 and s - i not in l:\n            break\n        i += 1\n        res += 1\n    print(res)", "t = int(input())\nfor _ in range(t):\n    s1 = {}\n    (n, s, k) = map(int, input().split())\n    k1 = list(map(int, input().split()))\n    for i in k1:\n        s1[i] = 1\n    if s not in s1.keys():\n        t = 0\n    else:\n        i = s\n        j = s\n        i1 = False\n        j1 = False\n        t = 1\n        while i >= 1 or j <= n:\n            i -= 1\n            j += 1\n            if i >= 1:\n                i1 = True\n            if j <= n:\n                j1 = True\n            if i in s1.keys() and i >= 1:\n                i1 = False\n            if j in s1.keys() and j <= n:\n                j1 = False\n            if i1 or j1:\n                break\n            else:\n                t += 1\n    print(t)", "for _ in range(int(input())):\n    (n, a, k) = map(int, input().split())\n    s = set(list(map(int, input().split())))\n    ans = 0\n    m = 0\n    m = a\n    while True:\n        if a not in s or m not in s:\n            break\n        a = a + 1\n        m = m - 1\n        if m == 0:\n            m = 1\n        if a == n + 1:\n            a = n\n        ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, s, k) = list(map(int, input().split(' ')))\n    closed = set(map(int, input().split(' ')))\n    if s not in closed:\n        print(0)\n        continue\n    closestUp = closestDown = s\n    while closestUp in closed and closestUp < n + 1:\n        closestUp += 1\n    while closestDown in closed and closestDown > 0:\n        closestDown -= 1\n    if closestDown == 0:\n        print(closestUp - s)\n    elif closestUp == n + 1:\n        print(s - closestDown)\n    else:\n        print(min(s - closestDown, closestUp - s))", "t = int(input())\nMAXX = 99999999999999\nfor i in range(t):\n    (n, s, k) = list(map(int, input().split(' ')))\n    closed = sorted(list(map(int, input().split(' '))))\n    best = 0 if s not in closed else MAXX\n    for i in range(k):\n        el = closed[i]\n        l_n = el - 1 if (i == 0 or closed[i - 1] + 1 != el) and el - 1 > 0 else MAXX\n        l_r = el + 1 if (i == k - 1 or closed[i + 1] - 1 != el) and el + 1 <= n else MAXX\n        if abs(l_n - s) < best:\n            best = abs(l_n - s)\n        if abs(l_r - s) < best:\n            best = abs(l_r - s)\n    print(best)", "for _ in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    l1 = list(map(int, input().split()))\n    if s not in l1:\n        print(0)\n    else:\n        i = 1\n        while 1:\n            if s - i > 0 and s - i not in l1:\n                print(i)\n                break\n            elif s + i <= n and s + i not in l1:\n                print(i)\n                break\n            i = i + 1", "T = int(input())\nfor test_np in range(T):\n    (n, s, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(0, k + 1):\n        if s - i >= 1 and (not s - i in a):\n            print(i)\n            break\n        if s + i <= n and (not s + i in a):\n            print(i)\n            break\n    else:\n        assert False", "for _ in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    a = sorted(map(int, input().split()))\n    ans = n if s in a else 0\n    for i in range(k):\n        if i < 1 or a[i] - 1 != a[i - 1]:\n            if a[i] - 1 > 0:\n                ans = min(ans, abs(a[i] - 1 - s))\n        if i + 1 >= k or a[i] + 1 != a[i + 1]:\n            if a[i] + 1 <= n:\n                ans = min(ans, abs(a[i] + 1 - s))\n    print(ans)", "import sys\n\ndef minp():\n    return sys.stdin.readline().strip()\n\ndef mint():\n    return int(minp())\n\ndef mints():\n    return map(int, minp().split())\n\ndef solve():\n    (n, s, k) = mints()\n    a = list(mints())\n    a.sort()\n    r = int(1000000000.0)\n    for i in range(1, len(a)):\n        if a[i] - a[i - 1] > 1:\n            r = min(r, abs(s - (a[i] - 1)))\n            r = min(r, abs(s - (a[i - 1] + 1)))\n        if a[i - 1] < s and a[i] > s:\n            r = 0\n    if len(a) > 0:\n        if a[0] > 1:\n            r = min(r, abs(s - 1))\n            r = min(r, abs(s - (a[0] - 1)))\n            if s < a[0]:\n                r = 0\n        if n - a[-1] >= 1:\n            r = min(r, abs(n - s))\n            r = min(r, abs(s - (a[-1] + 1)))\n            if s > a[-1]:\n                r = 0\n    print(r)\nfor i in range(mint()):\n    solve()", "for t in range(int(input())):\n    (fl, s, k) = map(int, input().split())\n    (l, d) = ([], {})\n    l = [int(x) for x in input().split()]\n    (mx, mn) = (max(l), min(l))\n    d = {i: 1 for i in l}\n    if s < mn or s > mx:\n        print(0)\n    else:\n        (n, m, k) = (-1, -1, True)\n        for i in range(s, mx + 1):\n            if i not in d:\n                n += 1\n                k = False\n                break\n            else:\n                n += 1\n        if k == True and i < fl:\n            n += 1\n        elif i == fl:\n            k = True\n            n = 1000000000 + 4\n        for i in range(s, mn - 1, -1):\n            if i not in d:\n                m += 1\n                k = False\n                break\n            else:\n                m += 1\n        if k == True and i > 1:\n            m += 1\n        elif i == 1:\n            m = 1000000000 + 4\n        print(min(m, n))", "f = int(input())\nfor i in range(f):\n    (n, s, k) = map(int, input().split())\n    v = list(map(int, input().split()))\n    i = s\n    d = 0\n    i2 = s\n    d2 = 0\n    while (i in v) == True:\n        i = i + 1\n        d = d + 1\n        if i == n + 1:\n            d = n\n    while (i2 in v) == True:\n        i2 = i2 - 1\n        d2 = d2 + 1\n        if i2 == 0:\n            d2 = n\n    if d > d2:\n        print(d2)\n    else:\n        print(d)", "for i in range(int(input())):\n    (n, s, k) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    for i in range(k + 1):\n        if s - i >= 1 and s - i not in arr:\n            print(i)\n            break\n        if s + i <= n and s + i not in arr:\n            print(i)\n            break", "for _ in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    a = set(map(int, input().split()))\n    i = 0\n    while min(s + i, n) in a and max(s - i, 1) in a:\n        i += 1\n    print(i)", "for i in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    for x in range(n):\n        if s - x > 0 and s - x not in a:\n            print(x)\n            break\n        elif s + x <= n and s + x not in a:\n            print(x)\n            break", "for _ in range(int(input())):\n    (n, s, k) = [int(x) for x in input().split()]\n    arr = [int(x) for x in input().split()]\n    if k == 1:\n        if arr[0] != s:\n            print(0)\n        else:\n            print(1)\n    elif s not in arr:\n        print(0)\n    else:\n        i = 1\n        arr.sort()\n        ans = 10 ** 10\n        while i < k and arr[i] <= s:\n            if arr[i] - arr[i - 1] > 1:\n                ans = min(ans, s - arr[i] + 1)\n            i += 1\n        while i < k:\n            if arr[i] - arr[i - 1] > 1:\n                ans = min(ans, arr[i - 1] - s + 1)\n            i += 1\n        if arr[k - 1] < n:\n            ans = min(ans, arr[k - 1] - s + 1)\n        if arr[0] > 1:\n            ans = min(ans, s - (arr[0] - 1))\n        print(ans)", "t = int(input())\nwhile t:\n    (n, s, k) = list(map(int, input().split()))\n    k1 = list(map(int, input().split()))\n    res = []\n    for i in range(s, n + 1):\n        if i not in k1:\n            res.append(abs(s - i))\n            break\n    for i in range(s, 0, -1):\n        if i not in k1:\n            res.append(abs(s - i))\n            break\n    print(min(res))\n    t -= 1", "def get_shortest_path(floors, current, closed_foors, closed):\n    if current not in closed_floors:\n        return 0\n    highers = [i + current for i in range(0, closed + 1)]\n    lowers = [current - i for i in range(closed, 0, -1)]\n    (lower_h, lower_s) = (10000000000, -10000000000)\n    for i in highers:\n        if i < lower_h and i <= floors and (i not in closed_floors):\n            lower_h = i\n    for i in lowers:\n        if i > lower_s and i > 0 and (i not in closed_floors):\n            lower_s = i\n    lower_h = abs(abs(lower_h) - current)\n    lower_s = abs(abs(lower_s) - current)\n    return lower_h if lower_h < lower_s else lower_s\nn = int(input())\nfor i in range(n):\n    (floors, current, closed) = map(int, input().split())\n    closed_floors = set(map(int, input().split()))\n    print(get_shortest_path(floors, current, closed_floors, closed))", "def get_shortest_path(floors, current, closed_foors, closed):\n    if current not in closed_floors:\n        return 0\n    highers = set((i + current for i in range(0, closed + 1)))\n    lowers = set((current - i for i in range(closed, 0, -1)))\n    (lower_h, lower_s) = (10000000000, -10000000000)\n    for i in highers:\n        if i < lower_h and i <= floors and (i not in closed_floors):\n            lower_h = i\n    for i in lowers:\n        if i > lower_s and i > 0 and (i not in closed_floors):\n            lower_s = i\n    lower_h = abs(abs(lower_h) - current)\n    lower_s = abs(abs(lower_s) - current)\n    return lower_h if lower_h < lower_s else lower_s\nn = int(input())\nfor i in range(n):\n    (floors, current, closed) = map(int, input().split())\n    closed_floors = set(map(int, input().split()))\n    print(get_shortest_path(floors, current, closed_floors, closed))", "from bisect import bisect_left\n\ndef index(a, x):\n    i = bisect_left(a, x)\n    if i != len(a) and a[i] == x:\n        return i\n    return -1\n\ndef get_shortest_path(floors, current, closed_foors):\n    if current not in closed_floors:\n        return 0\n    i = 1\n    while True:\n        add = current + i\n        minus = current - i\n        if add <= floors and index(closed_floors, add) == -1:\n            return i\n        if minus > 0 and index(closed_floors, minus) == -1:\n            return i\n        i += 1\nn = int(input())\nfor i in range(n):\n    (floors, current, closed) = map(int, input().split())\n    closed_floors = list(map(int, input().split()))\n    closed_floors.sort()\n    print(get_shortest_path(floors, current, closed_floors))", "t = int(input())\nwhile t:\n    (n, s, k) = list(map(int, input().split()))\n    k1 = list(map(int, input().split()))\n    res = []\n    for i in range(s, n + 1):\n        if i not in k1:\n            res.append(abs(s - i))\n            break\n    for i in range(s, 0, -1):\n        if i not in k1:\n            res.append(abs(s - i))\n            break\n    print(min(res))\n    t -= 1", "for t in range(int(input())):\n    (n, s, k) = [int(x) for x in input().split()]\n    arr = [int(x) for x in input().split()]\n    rep = set()\n    for i in arr:\n        rep.add(i)\n    mind = k\n    for i in range(max(1, s - k), min(n, s + k) + 1):\n        if i not in rep:\n            mind = min(mind, abs(i - s))\n    print(mind)", "def find_dist(n, s, k, a):\n    a.sort()\n    p = -1\n    for pos in range(k):\n        if a[pos] == s:\n            p = pos\n            break\n        elif a[pos] > s:\n            return 0\n    if p == -1:\n        return 0\n    max_l = 0\n    max_r = 0\n    for d in range(1, 1001):\n        if p - d >= 0:\n            if a[p - d] != s - d:\n                max_l = d\n                break\n        else:\n            if a[0] != 1:\n                max_l = d\n            break\n    for d in range(1, 1001):\n        if p + d < k:\n            if a[p + d] != s + d:\n                max_r = d\n                break\n        else:\n            if a[k - 1] != n:\n                max_r = d\n            break\n    if max_l == 0:\n        return max_r\n    if max_r == 0:\n        return max_l\n    return min(max_l, max_r)\nq = int(input())\nfor i in range(q):\n    (n, s, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(find_dist(n, s, k, a))", "for _ in range(int(input())):\n    (n, d, k) = map(int, input().split())\n    arr = sorted(list(map(int, input().split())))\n    (hi, he) = (d, d)\n    if d not in arr:\n        print(0)\n        continue\n    while True:\n        hi -= 1\n        if hi > 0 and hi not in arr:\n            print(abs(hi - d))\n            break\n        he += 1\n        if he <= n and he not in arr:\n            print(abs(he - d))\n            break", "for _ in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    t = s\n    m = 999999\n    if s in a:\n        count = 1\n        l = 0\n        while t > 1:\n            if t - 1 in a:\n                count += 1\n                t = t - 1\n            else:\n                l = 1\n                break\n        if l == 1:\n            m = count\n        t = s\n        count = 1\n        l = 0\n        while t < n:\n            if t + 1 in a:\n                count += 1\n                t = t + 1\n            else:\n                l = 1\n                break\n        if l == 1:\n            if count < m:\n                m = count\n        print(m)\n    else:\n        print('0')", "t = int(input())\nfor _ in range(t):\n    (n, s, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    c1 = 1000\n    c2 = 1000\n    res = 1000\n    if s not in l:\n        print(0)\n    else:\n        r = l.index(s)\n        ll = min(l[-1] + 1, n)\n        if r != len(l) - 1:\n            for i in range(l[r] + 1, ll + 1, 1):\n                if i not in l:\n                    c1 = abs(s - i)\n                    break\n        elif l[-1] != n:\n            c1 = 1\n        for i in range(l[r] - 1, 0, -1):\n            if i not in l:\n                c2 = abs(s - i)\n                break\n        print(min(c1, c2))", "def solve(n, s, k_arr):\n    (up, down) = (0, 0)\n    (upFound, downFound) = (False, False)\n    for i in range(s, n + 1):\n        if i in k_arr:\n            up += 1\n        else:\n            upFound = True\n            break\n    for i in range(s, 0, -1):\n        if i in k_arr:\n            down += 1\n        else:\n            downFound = True\n            break\n    if upFound and downFound:\n        return min(up, down)\n    if upFound and (not downFound):\n        return up\n    if not upFound and downFound:\n        return down\nt = int(input())\nfor _ in range(t):\n    (n, s, k) = map(int, input().split())\n    k_arr = list(map(int, input().split()))\n    print(solve(n, s, k_arr))", "for x in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if s not in l:\n        print(0)\n    else:\n        for y in range(1, n):\n            if s - y > 0 and s - y not in l or (s + y <= n and s + y not in l):\n                print(y)\n                break", "t = int(input())\nfor _ in range(t):\n    (n, s, k) = map(int, input().split())\n    occ = []\n    a = list(map(int, input().split()))\n    dis = 0\n    for i in range(0, k + 1):\n        if s - i >= 1 and s - i not in a:\n            print(i)\n            break\n        if s + i <= n and s + i not in a:\n            print(i)\n            break", "t = int(input())\nb = []\nfor i in range(t):\n    a = []\n    (n, s, K) = input().split()\n    a = input().split()\n    a.append(n)\n    a.append(s)\n    a.append(K)\n    b.append(a)\nfor i in b:\n    p = 0\n    e = 0\n    k = int(i[-2])\n    q = []\n    for u in range(0, len(i) - 3):\n        q.append(int(i[u]))\n    while k <= int(i[-3]):\n        if k not in q:\n            p = abs(k - int(i[-2]))\n            break\n        k += 1\n    k = int(i[-2])\n    while k > 0:\n        if k not in q:\n            e = abs(k - int(i[-2]))\n            break\n        k += -1\n    if e != 0 and p != 0:\n        print(min(e, p))\n    elif p == 0:\n        print(e)\n    elif e == 0:\n        print(p)\n    else:\n        print(min(e, p))", "T = int(input())\nfor test_no in range(T):\n    (n, s, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(0, k + 1):\n        if s - i >= 1 and (not s - i in a):\n            print(i)\n            break\n        if s + i <= n and (not s + i in a):\n            print(i)\n            break", "for i in range(int(input())):\n    [n, s, k] = list(map(int, input().split()))\n    up = s\n    down = s\n    found_up = False\n    found_down = False\n    renovation = list(map(int, input().split()))\n    while up <= n and up in renovation:\n        up += 1\n        if up <= n and up not in renovation:\n            found_up = True\n            break\n    while down >= 1 and down in renovation:\n        down -= 1\n        if down >= 1 and down not in renovation:\n            found_down = True\n            break\n    if found_down == True and found_up == True:\n        print(min(up - s, s - down))\n    elif found_up == True and found_down == False:\n        print(up - s)\n    else:\n        print(s - down)", "def main():\n    t = int(input())\n    out_lst = []\n    for i in range(t):\n        a = list(map(int, input().strip().split()))[:3]\n        n = a[0]\n        s = a[1]\n        k = a[2]\n        if n < 1 or n > 1000000000:\n            return False\n        elif s > n or s < 1:\n            return False\n        elif k > n or k > 11000 or k < 1:\n            return False\n        else:\n            k_lst = list(map(int, input().strip().split()))[:k]\n            if s in k_lst:\n                p = s\n                m = s\n                p_c = 0\n                m_c = 0\n                while True:\n                    p += 1\n                    p_c += 1\n                    if p <= n:\n                        if p not in k_lst:\n                            break\n                    else:\n                        p_c = n\n                        break\n                while True:\n                    m -= 1\n                    m_c += 1\n                    if m > 0:\n                        if m not in k_lst:\n                            break\n                    else:\n                        m_c = n\n                        break\n                out_lst.append(min(p_c, m_c))\n            else:\n                out_lst.append(0)\n    for i in out_lst:\n        print(i)\nmain()", "I = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (n, s, _) = I()\n    A = set(I())\n    k = 0\n    while True:\n        if s - k > 0 and s - k not in A or (s + k <= n and s + k not in A):\n            print(k)\n            break\n        k += 1", "t = int(input())\nfor _ in range(t):\n    (n, s, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if not s in a:\n        print(0)\n        continue\n    else:\n        x = s - 1\n        y = s + 1\n        while x >= 0 or y <= n:\n            if not x in a and x > 0:\n                print(s - x)\n                break\n            if not y in a and y <= n:\n                print(y - s)\n                break\n            x = x - 1\n            y = y + 1", "t = int(input())\nfor _ in range(t):\n    (n, s, k) = map(int, input().split(' '))\n    x = list(map(int, input().split(' ')))\n    i = 0\n    for i in range(k + 1):\n        if s + i <= n and s + i not in x:\n            break\n        if s - i >= 1 and s - i not in x:\n            break\n    print(i)", "num = int(input())\nmas1 = [None] * num\nmas2 = [None] * num\nfor i in range(num):\n    mas1[i] = list(map(int, input().split()))\n    mas2[i] = sorted(list(map(int, input().split())))\nfor i in range(num):\n    cur1 = mas1[i]\n    cur2 = mas2[i]\n    a = cur1[1]\n    b = a\n    flag = True\n    while flag:\n        if a <= cur1[0] and a not in cur2 or (b >= 1 and b not in cur2):\n            flag = False\n            a -= 1\n            b += 1\n        a += 1\n        b -= 1\n    print(abs(cur1[1] - b))", "for _ in range(int(input())):\n    (n, s, k) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    if not s in a:\n        print(0)\n        continue\n    else:\n        for i in range(0, k + 1):\n            if s - i >= 1 and (not s - i in a):\n                print(i)\n                break\n            if s + i <= n and (not s + i in a):\n                print(i)\n                break", "def f(n, L, x):\n    if x not in L:\n        return 0\n    d = {}\n    for i in range(len(L)):\n        d[L[i]] = True\n    counter = x + 1\n    counter2 = x - 1\n    while counter <= n:\n        if counter not in d:\n            break\n        counter = counter + 1\n    while counter2 > 0:\n        if counter2 not in d:\n            break\n        counter2 = counter2 - 1\n    if counter2 == 0:\n        return abs(x - counter)\n    elif counter == n + 1:\n        return abs(x - counter2)\n    return min(abs(x - counter), abs(x - counter2))\ns = int(input(''))\nwhile s != 0:\n    z = [int(x) for x in input('').split()]\n    z2 = [int(x) for x in input('').split()]\n    print(f(z[0], z2, z[1]))\n    s = s - 1", "for _ in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(0, k + 1):\n        if s - i >= 1 and s - i not in a:\n            print(i)\n            break\n        elif s + i <= n and s + i not in a:\n            print(i)\n            break", "for _ in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    x = set()\n    for i in arr:\n        x.add(i)\n    if s not in x:\n        print(0)\n    else:\n        (v1, v2) = (-1, -1)\n        for i in range(s - 1, 0, -1):\n            if i not in x:\n                v1 = i\n                break\n        for i in range(s + 1, n + 1):\n            if i not in x:\n                v2 = i\n                break\n        if v1 == -1:\n            print(abs(s - v2))\n        elif v2 == -1:\n            print(abs(s - v1))\n        else:\n            print(min(abs(s - v1), abs(s - v2)))", "for _ in range(int(input())):\n    (n, s, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    for i in range(0, k + 1):\n        if s - i >= 1 and (not s - i in a):\n            print(i)\n            break\n        if s + i <= n and (not s + i in a):\n            print(i)\n            break", "def f(n, s, a):\n    t = 1\n    l = s - 1\n    r = s + 1\n    while l >= 1 or r <= n:\n        if l >= 1:\n            if l not in a:\n                return t\n            else:\n                l -= 1\n        if r <= n:\n            if r not in a:\n                return t\n            else:\n                r += 1\n        t += 1\nfor _ in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if s not in a:\n        print('0')\n    else:\n        print(f(n, s, a))", "t = int(input())\nfor i in range(t):\n    (n, s, k) = map(int, input().split(' '))\n    rc = list(map(int, input().split(' ')))\n    for x in range(0, k + 1):\n        if s - x >= 1 and (not s - x in rc):\n            print(x)\n            break\n        if s + x <= n and (not s + x in rc):\n            print(x)\n            break", "def solve(floors, floor, closed):\n    above = below = floor\n    while below > 0 or above <= floors:\n        if below > 0 and below not in closed:\n            return floor - below\n        if above <= floors and above not in closed:\n            return above - floor\n        below -= 1\n        above += 1\nfor T in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    print(solve(n, s, set(map(int, input().split()))))", "t = int(input())\nfor i in range(t):\n    (n, s, k) = list(map(int, input().split()))\n    closed = set(map(int, input().split()))\n    ans = 0\n    while ans <= n:\n        if s + ans not in closed and s + ans <= n:\n            print(ans)\n            break\n        elif s - ans not in closed and 1 <= s - ans:\n            print(ans)\n            break\n        else:\n            ans += 1", "t = int(input())\nfor _ in range(t):\n    (n, s, k) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    a.sort()\n    f = s\n    for i in a:\n        if i == f:\n            f = f + 1\n    f1 = s\n    a.sort(reverse=True)\n    for i in a:\n        if i > s:\n            continue\n        if f1 == i:\n            f1 -= 1\n    if f1 != 0 and f <= n:\n        f = min(f - s, s - f1)\n    elif f1 == 0:\n        f = f - s\n    else:\n        f = s - f1\n    print(f)", "t = int(input())\nfor _ in range(t):\n    (n, s, k) = map(int, input().split())\n    a = set(map(int, input().split()))\n    i = 0\n    while max(s - i, 1) in a and min(s + i, n) in a:\n        i += 1\n    print(i)", "s = int(input())\nrs = 0\nls_rs = []\nfor i in range(s):\n    (a, b, c) = list(map(int, input().split()))\n    lst = list(map(int, input().split()))\n    if b not in lst:\n        rs = 0\n    else:\n        l = a - b\n        k = b\n        lp = b\n        ds = b\n        rs_up = rs_down = a ** 10\n        while l:\n            k += 1\n            if k not in lst:\n                rs_up = k\n                break\n            else:\n                rs_up = a * 10\n            l -= 1\n        while lp:\n            if lp not in lst:\n                rs_down = lp\n                break\n            else:\n                rs_down = a * 10\n            lp -= 1\n        rs = min(abs(-b + rs_up), abs(b - rs_down))\n    ls_rs.append(rs)\nfor i in ls_rs:\n    print(i)", "for _ in range(int(input())):\n    (n, s, k) = list(map(int, input().split()))\n    d = {el: 0 for el in list(map(int, input().split()))}\n    res = 0\n    while True:\n        if s + res <= n and s + res not in d:\n            break\n        if s - res >= 1 and s - res not in d:\n            break\n        res += 1\n    print(res)", "for _ in range(int(input())):\n    (n, s, k) = list(map(int, input().split()))\n    d = {el: 0 for el in list(map(int, input().split()))}\n    res = 0\n    while True:\n        if s + res <= n and s + res not in d:\n            break\n        if s - res >= 1 and s - res not in d:\n            break\n        res += 1\n    print(res)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, s, k) = map(int, input().split())\n    arr = set(list(map(int, input().split())))\n    ans = 0\n    for i in range(k):\n        if max(s - ans, 1) not in arr or min(s + ans, n) not in arr:\n            break\n        else:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    c = list(map(int, input().split()))\n    for i in range(k):\n        c[i] = abs(c[i] - s)\n    c.sort()\n    j = 0\n    num = 0\n    while True:\n        if 0 < s - num <= s and s < s + num <= n:\n            if j < k and c[j] == num:\n                if j + 1 < k and c[j + 1] == num:\n                    j += 2\n                    num += 1\n                else:\n                    break\n            else:\n                break\n        elif j < k and c[j] == num:\n            j += 1\n            num += 1\n        else:\n            break\n    print(num)", "te = int(input())\nwhile te > 0:\n    te = te - 1\n    (n, s, q) = list(map(int, input().split()))\n    closedFloors = list(map(int, input().split()))\n    floors = {}\n    for i in closedFloors:\n        floors[i] = 0\n    f = s\n    b = s\n    ans = 0\n    while f > 0 and b <= n:\n        if floors.get(f) is None or floors.get(b) is None:\n            break\n        ans += 1\n        f -= 1\n        b += 1\n    if f <= 0:\n        while b <= n:\n            if floors.get(b) is None:\n                break\n            ans += 1\n            b += 1\n    if b > n:\n        while f > 0:\n            if floors.get(f) is None:\n                break\n            ans += 1\n            f -= 1\n    print(ans)", "for _ in [0] * int(input()):\n    (n, s, k) = map(int, input().split())\n    l = set(map(int, input().split()))\n    floors = 0\n    while max(s - floors, 1) in l and min(s + floors, n) in l:\n        floors += 1\n    print(floors)", "for _ in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    if s not in l:\n        print(0)\n    else:\n        b = s - 1\n        e = s + 1\n        while 1:\n            if b >= 1:\n                if b not in l:\n                    print(abs(s - b))\n                    break\n            b = b - 1\n            if e <= n:\n                if e not in l:\n                    print(abs(s - e))\n                    break\n            e += 1", "for x in range(int(input())):\n    (n, s, k) = list(map(int, input().split()))\n    h = list(map(int, input().split()))\n    i = 0\n    while max(s - i, 1) in h and min(s + i, n) in h:\n        i += 1\n    print(i)", "t = int(input())\nfor _ in range(t):\n    (n, s, k) = map(int, input().split())\n    se = set(map(int, input().split()))\n    i = 0\n    while True:\n        if s - i > 0 and s - i not in se or (s + i <= n and s + i not in se):\n            print(i)\n            break\n        else:\n            i += 1", "def binary_search(arr, l, r, elem):\n    if r >= l:\n        m = (l + r) // 2\n        if arr[m] == elem:\n            return m\n        elif elem > arr[m]:\n            return binary_search(arr, m + 1, r, elem)\n        elif elem < arr[m]:\n            return binary_search(arr, l, m - 1, elem)\n    else:\n        return -1\nfor _ in range(int(input())):\n    (num_floor, c_floor, num_closed) = map(int, input().split())\n    closed_arr = sorted(list(map(int, input().split())))\n    c_idx = None\n    r = binary_search(closed_arr, 0, num_closed - 1, c_floor)\n    if r == -1:\n        print(0)\n        continue\n    else:\n        c_idx = r\n    c_left = 0\n    c_right = 0\n    while True:\n        c_left -= 1\n        if c_idx + c_left >= 0:\n            if c_floor + c_left != closed_arr[c_idx + c_left]:\n                print(-1 * c_left)\n                break\n        c_right += 1\n        if c_idx + c_right <= num_closed - 1:\n            if c_floor + c_right != closed_arr[c_idx + c_right]:\n                print(c_right)\n                break\n        if c_idx + c_left < 0 and closed_arr[0] > 1:\n            print(-1 * c_left)\n            break\n        if c_idx + c_right > num_closed - 1 and closed_arr[-1] < num_floor:\n            print(c_right)\n            break", "for _ in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    (m1, m2) = (1001, 1001)\n    if s not in a:\n        print(0)\n        continue\n    for i in range(s - 1, 0, -1):\n        if i not in a:\n            m1 = s - i\n            break\n    for i in range(s + 1, n + 1):\n        if i not in a:\n            m2 = i - s\n            break\n    print(min(m1, m2))", "t = int(input())\nfor _ in range(t):\n    (n, s, k) = map(int, input().split())\n    ngs = set(map(int, input().split()))\n    ans = 10 ** 9\n    for i in range(max(1, s - k - 1), min(n + 1, s + k + 2)):\n        if i not in ngs and abs(i - s) < ans:\n            ans = abs(i - s)\n    print(ans)", "for _ in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    closed = set(list(map(int, input().split())))\n    ans = 0\n    (prev, nextt) = (s, s)\n    while True:\n        if prev >= 1 and prev not in closed or (nextt <= n and nextt not in closed):\n            print(ans)\n            break\n        ans += 1\n        prev -= 1\n        nextt += 1", "for _ in range(int(input())):\n    (w, find, si) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    if find not in l:\n        print(0)\n    else:\n        idx = l.index(find)\n        (upper, low) = (idx, idx)\n        while upper < si - 1 and l[upper] + 1 == l[1 + upper]:\n            upper += 1\n        while low > 0 and l[low - 1] + 1 == l[low]:\n            low -= 1\n        low_ = l[low]\n        upper_ = l[upper]\n        if low_ == 1 and l[low] == 1:\n            low_ = float('inf')\n        if upper_ == w and l[upper] == w:\n            upper_ = float('-inf')\n        if l[low] == 1:\n            print(l[upper] + 1 - find)\n        elif l[upper] == w:\n            print(find - (l[low] - 1))\n        else:\n            print(min(find - (low_ - 1), upper_ + 1 - find))", "from sys import stdin as st\nfor _ in range(int(st.readline())):\n    (n, s, k) = map(int, st.readline().split())\n    a = set(map(int, st.readline().split()))\n    i = 0\n    while max(s - i, 1) in a and min(s + i, n) in a:\n        i += 1\n    print(i)", "for i in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    closed = set(list(map(int, input().split())))\n    (down, up) = (0, 0)\n    if s not in closed:\n        print(0)\n    else:\n        for i in range(s - 1, 0, -1):\n            if i not in closed:\n                down = s - i\n                break\n        for j in range(s + 1, n + 1):\n            if j not in closed:\n                up = j - s\n                break\n        if up != 0 and down != 0:\n            print(min(down, up))\n        else:\n            print(max(down, up))", "T = int(input())\nfor test_no in range(T):\n    (n, s, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(0, k + 1):\n        if s - i >= 1 and (not s - i in a):\n            print(i)\n            break\n        if s + i <= n and (not s + i in a):\n            print(i)\n            break\n    else:\n        assert False", "t = int(input())\nfor _ in range(t):\n    l = list(map(int, input().split()))\n    (n, s, k) = (l[0], l[1], l[2])\n    p = list(map(int, input().split()))\n    a = s\n    for i in range(0, max(n - s, s) + 1):\n        if s - i not in p and s - i > 0:\n            key = i\n            break\n        elif s + i not in p and s + i <= n:\n            key = i\n            break\n    print(key)", "t = int(input())\nfor _ in range(t):\n    (n, s, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    for i in range(max(s, n - s + 1)):\n        if s - i > 0 and s - i not in arr:\n            print(i)\n            break\n        elif s + i < n + 1 and s + i not in arr:\n            print(i)\n            break", "for i in range(int(input())):\n    (n, s, k) = map(int, input().split())\n    karr = list(map(int, input().split()))\n    for i in range(k + 1):\n        if s - i >= 1 and (not s - i in karr):\n            print(i)\n            break\n        if s + i <= n and (not s + i in karr):\n            print(i)\n            break", "a = int(input())\nfor _ in range(a):\n    (x, y, z) = map(int, input().split())\n    li = list(map(int, input().split()))\n    li = set(li)\n    for i in range(x):\n        if y + i <= x and y + i not in li:\n            print(i)\n            break\n        elif y - i > 0 and y - i not in li:\n            print(i)\n            break", "t = int(input())\nfor _ in range(t):\n    (n, s, k) = map(int, input().split())\n    x = list(map(int, input().split()))\n    x.append(0)\n    x.append(n + 1)\n    x.sort()\n    c = 1000000000000.0\n    for i in range(k + 1):\n        if x[i + 1] - x[i] > 1:\n            if s < x[i + 1] and s > x[i]:\n                c = min(c, 0)\n            if s > x[i + 1]:\n                c = min(c, abs(x[i + 1] - 1 - s))\n            if s < x[i]:\n                c = min(c, abs(x[i] + 1 - s))\n            if s == x[i] or s == x[i + 1]:\n                c = min(c, 1)\n    print(c)", "for _ in range(int(input())):\n    (n, s, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    (x, y) = (s, s)\n    (p, q) = (0, 0)\n    for i in range(x, 0, -1):\n        if i not in a:\n            p += 1\n            break\n    for j in range(y, n + 1):\n        if j not in a:\n            q += 1\n            break\n    if p != 0 and q != 0:\n        print(min(s - i, j - s))\n    elif p == 0:\n        print(j - s)\n    elif q == 0:\n        print(s - i)", "import math\nfor _ in range(int(input())):\n    (n, s, k) = list(map(int, input().split()))\n    arr = sorted(list(map(int, input().split())))\n    ss = math.inf\n    sss = math.inf\n    for a in range(s, 0, -1):\n        if a not in arr:\n            ss = s - a\n            break\n    for aa in range(s, n + 1):\n        if aa not in arr:\n            sss = aa - s\n            break\n    print(min(ss, sss))"]