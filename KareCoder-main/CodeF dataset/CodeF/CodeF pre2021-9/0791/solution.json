["n = int(input())\nl = input()\nr = input()\nif n == 1:\n    print(r)\nelif l[0] == '0':\n    print('1' * n)\nelif r[-1] == '0' and int(l, 2) + 1 < int(r, 2):\n    print(r[:-1] + '1')\nelse:\n    print(r)", "n = int(input())\nl = input()\nr = input()\nif n == 1:\n    print(r)\nelif l[0] == '0':\n    print('1' * n)\nelif r[-1] == '0' and int(l, 2) + 1 < int(r, 2):\n    print(r[:-1] + '1')\nelse:\n    print(r)", "i = int\np = input\nN = i(p())\nL = p()\nR = p()\nl = i(L, 2)\nr = i(R, 2)\na = R\nif l - l % 2 < r:\n    a = R[:-1] + '1'\nif i(L[-1]) and l + 1 == r:\n    a = R\nif L == R:\n    a = L\nif L[0] < R[0]:\n    a = '1' * N\nprint(a)", "n = int(input())\nl = input()\nr = input()\nif n == 1:\n    print(r)\nelif l[0] == '0':\n    print('1' * n)\nelif r[-1] == '0' and int(l, 2) + 1 < int(r, 2):\n    print(r[:-1] + '1')\nelse:\n    print(r)", "N = int(input())\nL = input()\nl = int(L, 2)\nR = input()\nr = int(R, 2)\nif L[0] != R[0]:\n    print('1' * N)\n    exit()\nprint(R if R[-1] == '1' or r - l < 2 else R[:-1] + '1')", "i = int\np = input\nN = i(p())\nL = p()\nR = p()\nl = i(L, 2)\nr = i(R, 2)\na = R\nif l - l % 2 < r:\n    a = R[:-1] + '1'\nif i(L[-1]) and l + 1 == r:\n    a = R\nif L == R:\n    a = L\nif L[0] < R[0]:\n    a = '1' * N\nprint(a)", "n = input()\nl = input()\nr = input()\nans = ''\nif l[0] == '0' and r[0] == '1':\n    for _ in range(0, int(n)):\n        ans = ans + '1'\nelse:\n    numl = int(l, 2)\n    numr = int(r, 2)\n    if r[int(n) - 1] == '0' and numl + 1 < numr:\n        ans = bin(numr + 1)[2:]\n    else:\n        ans = r\nprint(ans)", "import sys\ninput = sys.stdin.readline\n\ndef solve2(l, r):\n    n = len(l)\n    if l[0] != r[0]:\n        return [1] * n\n    if r[-1] == 1:\n        return r\n    x = r.copy()\n    for j in range(2):\n        if x == l:\n            return r\n        for k in range(n - 1, -1, -1):\n            if x[k] == 1:\n                x[k] = 0\n                break\n            else:\n                x[k] = 1\n    x = r.copy()\n    r[-1] = 1\n    return r\n\ndef solve():\n    n = int(input())\n    l = list(map(int, input().strip()))\n    r = list(map(int, input().strip()))\n    ans = solve2(l, r)\n    print(''.join(map(str, ans)))\nsolve()", "import sys\ninput = sys.stdin.readline\n\ndef solve2(l, r):\n    n = len(l)\n    if l[0] != r[0]:\n        return [1] * n\n    rr = r.copy()\n    ans = r.copy()\n    for i in range(2):\n        ll = rr.copy()\n        if r[-1] == 0:\n            a = rr.copy()\n            for j in range(2):\n                if ll == l:\n                    break\n                for k in range(n - 1, -1, -1):\n                    if ll[k] == 1:\n                        ll[k] = 0\n                        break\n                    else:\n                        ll[k] = 1\n                if j == 1:\n                    a[-1] ^= 1\n                    if ans < a:\n                        ans = a.copy()\n            break\n        if rr == l:\n            break\n        for k in range(n - 1, -1, -1):\n            if rr[k] == 1:\n                rr[k] = 0\n                break\n            else:\n                rr[k] = 1\n    return ans\n\ndef solve():\n    n = int(input())\n    l = list(map(int, input().strip()))\n    r = list(map(int, input().strip()))\n    ans = solve2(l, r)\n    print(''.join(map(str, ans)))\nsolve()"]