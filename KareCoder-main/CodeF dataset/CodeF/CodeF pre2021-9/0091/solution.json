["t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    l.sort()\n    k = l[0:n]\n    m = l[n:]\n    f = []\n    for i in range(len(k)):\n        f.append(k[i])\n        f.append(m[i])\n    print(' '.join([str(x) for x in f]))", "t = int(input())\nfor _ in range(t):\n    n = int(input()) * 2\n    arr = list(map(int, input().split()))\n    arr.sort()\n    i = 1\n    while i < n - 1:\n        (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n        i += 2\n    print(' '.join(map(str, arr)))", "def mean(arr):\n    arr.sort()\n    s = []\n    for i in range(len(arr) // 2):\n        s.append(str(arr[i]))\n        s.append(str(arr[len(arr) // 2 + i]))\n    return ' '.join(s)\ns = int(input())\na = []\nfor i in range(s):\n    num = input()\n    ar = [int(x) for x in input().split()]\n    a.append(ar)\nfor i in a:\n    print(mean(i))", "m = int(input())\nfor i in range(0, m):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    b = a[0:n]\n    c = a[n:]\n    l = []\n    for (i, j) in zip(b, c):\n        l.append(i)\n        l.append(j)\n    l = [str(u) for u in l]\n    print(' '.join(l))", "import sys\nT = int(sys.stdin.readline())\nfor i in range(T):\n    N = int(sys.stdin.readline())\n    nums = list(map(int, sys.stdin.readline().split()))\n    nums.sort()\n    small = nums[:N]\n    big = nums[N:]\n    answer = []\n    for j in range(N):\n        answer.append(small[j])\n        answer.append(big[j])\n    print(' '.join((str(x) for x in answer)))", "def getlistint():\n    return list(map(int, stdin.readline().split()))\n\ndef getmapint():\n    return map(int, stdin.readline().split())\n\ndef getliststr():\n    return list(stdin.readline().split())\n\ndef getint():\n    return int(stdin.readline().strip())\n\ndef getstr():\n    return stdin.readline().strip()\n\ndef pr(s):\n    stdout.write(str(s) + '\\n')\n\ndef prlist(l):\n    stdout.write(' '.join(list(map(str, l))) + '\\n')\nfrom sys import stdin, stdout\nfor _ in range(getint()):\n    n = getint()\n    a = getlistint()\n    a.sort()\n    b = []\n    for i in range(n):\n        b.append(a[i])\n        b.append(a.pop())\n    prlist(b)", "t = int(input(''))\nfor i in range(t):\n    n = int(input(''))\n    a = list(map(int, input('').split()))\n    a.sort()\n    d = a[0:n:1]\n    b = a[n:]\n    i = 0\n    v = []\n    while i < n:\n        v.append(b[i])\n        v.append(d[i])\n        i += 1\n    print(' '.join(map(str, v)))", "def solve(l):\n    l.sort()\n    arr1 = l[:int(len(l) / 2)]\n    arr2 = l[int(len(l) / 2):]\n    j = 0\n    for i in range(1, len(l), 2):\n        arr1.insert(i, arr2[j])\n        j += 1\n    return ' '.join(list(map(str, arr1)))\nt = int(input())\nfor _ in range(1, t + 1):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(solve(arr))", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split(' '))))\n    for i in range(0, len(a) - 1, 2):\n        (a[i + 1], a[i]) = (str(a[i]), str(a[i + 1]))\n    (a[0], a[-1]) = (a[-1], a[0])\n    print(' '.join(a))", "def solve(n, a):\n    ans = []\n    if n == 1:\n        for i in a:\n            ans.append(str(i))\n        return ' '.join(ans)\n    a.sort()\n    mid_ele = a[n - 1]\n    i = 0\n    while i < n:\n        ans.append(str(a[n - 1 - i]))\n        ans.append(str(a[n + i]))\n        i += 1\n    return ' '.join(ans)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().strip().split()))[:2 * n]\n    print(solve(n, a))", "import sys\n\ndef solve():\n    sys.stdin.readline()\n    arr = sys.stdin.readline().rstrip('\\n').split(' ')\n    arr = [int(_) for _ in arr]\n    arr.sort()\n    l = 0\n    r = len(arr) - 1\n    res = []\n    while l < r:\n        res.append(arr[l])\n        res.append(arr[r])\n        l += 1\n        r -= 1\n    p = ''\n    for x in res:\n        p += str(x)\n        p += ' '\n    print(p)\nT = int(sys.stdin.readline().rstrip('\\n'))\nwhile T > 0:\n    solve()\n    T -= 1", "def solve(n, a):\n    a = sorted(a)\n    i = 0\n    while i < 2 * n:\n        (a[i], a[i + 1]) = (a[i + 1], a[i])\n        i += 2\n    (a[0], a[-1]) = (a[-1], a[0])\n    return ' '.join(map(str, a))\nT = int(input())\nfor case in range(T):\n    N = int(input())\n    A = map(int, input().split())\n    res = solve(N, A)\n    print(res)", "for _ in range(int(input())):\n    t = int(input())\n    l = list(map(int, input().split()))\n    l = sorted(l)\n    ll = []\n    l1 = l[0:len(l) // 2]\n    l2 = l[len(l) // 2:len(l)]\n    l2 = l2[::-1]\n    for i in range(0, len(l1)):\n        ll.append(l1[i])\n        ll.append(l2[i])\n    c = str(ll)[1:-1]\n    d = c.replace(',', '')\n    print(d)", "def solve(arr, n):\n    arr = sorted(arr)\n    res = []\n    for i in range(n):\n        res.append(arr[i])\n        res.append(arr[i + n])\n    return res\nT = int(input())\nfor i in range(T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    sol = solve(arr, n)\n    print(' '.join(map(str, sol)))", "for _ in range(int(input())):\n    n = int(input())\n    w = [int(i) for i in input().split()]\n    w.sort()\n    a = w[:n]\n    b = w[n:]\n    s = []\n    for i in range(n):\n        s.append(a[i])\n        s.append(b[i])\n    print(*s)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    ans = [str(a[i]) + ' ' + str(a[n + i]) for i in range(n)]\n    print(' '.join(ans))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    alow = a[0:n]\n    ahigh = a[n:]\n    b = []\n    for i in range(n):\n        b.append(str(alow[i]))\n        b.append(str(ahigh[i]))\n    separator = ' '\n    print(separator.join(b))", "def solve(n, iarr):\n    iarr.sort()\n    ans = []\n    for i in range(n):\n        ans.append(str(iarr[i]))\n        ans.append(str(iarr[n + i]))\n    return ' '.join(ans)\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    iarr = list(map(int, input().split()))\n    print(solve(n, iarr))", "def sol(A):\n    A = sorted(A)\n    ans = []\n    i = 0\n    j = len(A) - 1\n    while i < j:\n        ans.append(A[i])\n        ans.append(A[j])\n        i += 1\n        j -= 1\n    return ' '.join(map(str, ans))\nx = int(input())\nfor _ in range(x):\n    y = int(input())\n    A = list(map(int, input().split()))\n    print(sol(A))", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    L = []\n    for i in range(m):\n        L.append(l[2 * i + 1])\n        L.append(l[2 * i])\n    if 2 * L[2 * m - 1] == L[2 * (m - 1)] + L[0]:\n        a = L[0]\n        L[0] = L[2 * m - 1]\n        L[2 * m - 1] = a\n    elif 2 * L[0] == L[1] + L[2 * m - 1]:\n        a = L[0]\n        L[0] = L[2 * m - 1]\n        L[2 * m - 1] = a\n    else:\n        a = 1\n    print(' '.join(list(map(str, L))))", "import math\nt = int(input())\n\ndef solve(a):\n    n = len(a) // 2\n    a.sort()\n    b = [0] * 2 * n\n    b[1::2] = a[n:]\n    b[::2] = a[:n]\n    return b\nfor test in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = solve(a)\n    print(' '.join([str(x) for x in b]))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    b = list(zip([a[i] for i in range(n)], [a[i] for i in range(n, n + n)]))\n    c = ' '.join(map(lambda x: f'{str(x[0])} {str(x[1])}', b))\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    b = []\n    for i in range(n):\n        b.append(a[n + i])\n        b.append(a[i])\n    b = [str(s) for s in b]\n    print(' '.join(b))", "n = input()\nr = []\nfor i in range(int(n)):\n    nn = int(input())\n    intr = input().split()\n    intr = list(map(int, intr))\n    intr.sort()\n    intr.reverse()\n    re = []\n    (m, n) = (0, 2 * nn - 1)\n    while m < n:\n        re.append(str(intr[m]))\n        re.append(str(intr[n]))\n        m += 1\n        n -= 1\n    d = ' '.join(re)\n    r.append(d)\nfor i in r:\n    print(i)", "for i in range(int(input())):\n    t = int(input())\n    l = list(map(int, input().split()))\n    l = sorted(l)\n    ll = []\n    l1 = l[0:len(l) // 2]\n    l2 = l[len(l) // 2:len(l)]\n    l2 = l2[::-1]\n    for i in range(0, len(l1)):\n        ll.append(l1[i])\n        ll.append(l2[i])\n    c = str(ll)[1:-1]\n    d = c.replace(',', '')\n    print(d)", "for _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    nums.sort()\n    l = []\n    nl = len(nums)\n    for i in range(n):\n        l.append(nums[i])\n        l.append(nums[nl - i - 1])\n    print(' '.join(map(str, l)))", "[(lambda n: (lambda arr: [print(f'{arr[i]} {arr[i + n]}', end=' \\n'[i == n - 1]) for i in range(n)])(sorted(list(map(int, input().split())))))(int(input())) for _ in range(int(input()))]", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = []\n    a.sort()\n    for j in range(n):\n        l.append(a[j])\n        l.append(a[j + n])\n    string = [str(k) for k in l]\n    ans = ' '.join(string)\n    print(ans)", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    per = list(map(int, sys.stdin.readline().split()))\n    answer = []\n    per.sort()\n    for i in per:\n        answer.append(str(i))\n        answer.append(str(per.pop()))\n    print(' '.join(answer))", "m = int(input())\nfor i in range(0, m):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    b = a[0:n]\n    c = a[n:]\n    l = []\n    for (i, j) in zip(b, c):\n        l.append(i)\n        l.append(j)\n    l = [str(u) for u in l]\n    print(' '.join(l))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    new = []\n    (block1, block2) = (0, len(a) // 2)\n    while block1 < len(a) // 2:\n        new.append(a[block1])\n        new.append(a[block2])\n        block2 += 1\n        block1 += 1\n    new = [str(k) for k in new]\n    print(' '.join(new))", "m = int(input())\nl = []\nfor _ in range(m):\n    t = int(input())\n    a = sorted(list(map(int, input().split())))\n    s = 0\n    e = 1\n    b = ''\n    for i in range(2 * t):\n        if i % 2 == 0:\n            b += str(a[s]) + ' '\n            s += 1\n        else:\n            b += str(a[-e]) + ' '\n            e += 1\n    l.append(b[:-1])\nfor i in l:\n    print(i)", "[(lambda n: (lambda arr: [print(f'{arr[i]} {arr[i + n]}', end=' \\n'[i == n - 1]) for i in range(n)])(sorted(list(map(int, input().split())))))(int(input())) for _ in range(int(input()))]", "import math\nimport sys\nimport itertools\nimport fractions\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nfor t in [wtf[i:i + 2] for i in range(1, len(wtf), 2)]:\n    n = 2 * int(t[0])\n    A = sorted(map(int, t[1].split()))\n    for i in range(n):\n        if i % 2 != 0 and i + 1 < n:\n            (A[i], A[i + 1]) = (A[i + 1], A[i])\n    print(' '.join(map(str, A)))", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    x = len(a) - 1\n    my_list = []\n    for j in range(int(len(a) / 2)):\n        my_list.append(a[j])\n        my_list.append(a[x])\n        x = x - 1\n    for k in my_list:\n        print(k, end=' ')\n    print()", "[(lambda n: (lambda arr: [print(f'{arr[i]} {arr[i + n]}', end=' \\n'[i == n - 1]) for i in range(n)])(sorted(list(map(int, input().split())))))(int(input())) for _ in range(int(input()))]", "t1 = int(input())\nfor _ in range(t1):\n    n = int(input())\n    t = ''\n    a2 = list(map(int, input().split()))\n    a2.sort()\n    a = a2[:n]\n    a1 = a2[n:]\n    for i in range(n):\n        t += str(a[i]) + ' '\n        t += str(a1[i]) + ' '\n    print(t)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    for i in range(n):\n        print(a[i], a[n + i], end=' ')\n    print()", "num = int(input())\nfor i in range(num):\n    n = int(input())\n    arr = input()\n    arr = arr.split(' ')\n    arr = [int(x) for x in arr]\n    if len(arr) <= 2:\n        print(' '.join([str(x) for x in arr]))\n    else:\n        count = 1\n        while count > 0:\n            count = 0\n            for j in range(2 * n):\n                if j == 0:\n                    if (arr[1] + arr[2 * n - 1]) / 2 == arr[j]:\n                        temp = arr[j]\n                        arr[j] = arr[1]\n                        arr[1] = temp\n                        count += 1\n                elif j == 2 * n - 1:\n                    if (arr[j - 1] + arr[0]) / 2 == arr[j]:\n                        temp = arr[j]\n                        arr[j] = arr[0]\n                        arr[0] = temp\n                        count += 1\n                elif (arr[j - 1] + arr[j + 1]) / 2 == arr[j]:\n                    temp = arr[j]\n                    arr[j] = arr[j + 1]\n                    arr[j + 1] = temp\n                    count += 1\n        print(' '.join([str(x) for x in arr]))", "import math\nletters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    A1 = A[:n]\n    A2 = A[n:]\n    A2.reverse()\n    r = []\n    for i in range(n):\n        r.append(A1[i])\n        r.append(A2[i])\n    print(' '.join(map(str, r)))", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(y) for y in input().split()]\n    a.sort()\n    b = []\n    for i in range(n):\n        b.append(a[i])\n        b.append(a[-i - 1])\n    ans = ''\n    for i in b:\n        ans += str(i) + ' '\n    print(ans[:-1])", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    temp = []\n    j = 0\n    k = 2 * n - 1\n    for i in range(2 * n):\n        if i % 2 == 0:\n            temp.append(str(arr[j]))\n            j += 1\n        else:\n            temp.append(str(arr[k]))\n            k -= 1\n    print(' '.join(temp))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    elements = tuple(map(int, input().split()))\n    asc_sorted = sorted(elements)\n    desc_sorted = sorted(elements, reverse=True)\n    res = []\n    for i in range(n):\n        res.append(str(asc_sorted[i]))\n        res.append(str(desc_sorted[i]))\n    print(' '.join(res))", "m = int(input())\notv = []\nfor _ in range(m):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    b = []\n    i = 0\n    j = n\n    while j < n + n:\n        b.append(a[i])\n        i += 1\n        b.append(a[j])\n        j += 1\n    otv.append(b)\nfor i in range(m):\n    print(' '.join(map(str, otv[i])))", "for _ in range(int(input())):\n    n = int(input())\n    flst = list(map(int, input().split()))\n    flst.sort()\n    rlst = flst[:]\n    rlst.reverse()\n    final = []\n    for i in range(n):\n        final.append(flst[i])\n        final.append(rlst[i])\n    ans = ' '.join([str(elem) for elem in final])\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a = sorted(a)\n    s = ''\n    b = [a[0]]\n    for x in range(1, 2 * n - 1):\n        if x % 2 == 0:\n            b.append(a[x - 1])\n        else:\n            b.append(a[x + 1])\n    b.append(a[-1])\n    for x in b:\n        s += str(x) + ' '\n    print(s)", "import sys\ninput = iter(sys.stdin.read().splitlines()).__next__\nTC = int(input())\nfor tc in range(TC):\n    N = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    res = [A[i // 2] if i % 2 == 0 else A[i // 2 + N] for i in range(2 * N)]\n    print(' '.join(map(str, res)))", "def sol(array):\n    to_ret = []\n    array.sort()\n    (i, j) = (0, len(array) - 1)\n    while i <= j:\n        to_ret.append(str(array[j]))\n        to_ret.append(str(array[i]))\n        i += 1\n        j -= 1\n    return to_ret\na = int(input())\nfor i in range(a):\n    b = int(input())\n    c = input()\n    c = c.split()\n    temp = []\n    for char in c:\n        temp.append(int(char))\n    print(' '.join(sol(temp)))", "def f(A, B, n):\n    i = 0\n    C = ''\n    while i < n - 1:\n        C = C + '{} {} '.format(A[i], B[i])\n        i = i + 1\n    return C + '{} {}'.format(A[-1], B[-1])\nj = int(input())\nwhile j > 0:\n    k = int(input())\n    A = [int(i) for i in input().split(' ')]\n    A.sort()\n    B = A[0:k]\n    C = A[k:]\n    print(f(B, C, k))\n    j = j - 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    final = []\n    for (i, j) in zip(a[:n], a[-1:n - 1:-1]):\n        final.extend([i, j])\n    print(' '.join(map(str, final)))", "for _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    array.sort()\n    res = []\n    for i in range(n):\n        res.append(array[i])\n        res.append(array[-(i + 1)])\n    print(*res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    n = 2 * n\n    i = 0\n    j = n - 1\n    res = [None] * n\n    k = 0\n    while j > i:\n        res[k] = arr[i]\n        k += 1\n        res[k] = arr[j]\n        k += 1\n        i += 1\n        j -= 1\n    print(' '.join(map(str, res)))", "for i in range(int(input())):\n    n = int(input())\n    if n == 1:\n        a = input()\n        print(a)\n        continue\n    a = list(map(int, input().split()))\n    a.sort()\n    a0 = a[0:len(a) // 2]\n    a1 = a[len(a) // 2:]\n    a1.reverse()\n    l = []\n    i = 0\n    while len(a0) != 0 or len(a1) != 0:\n        x = a1.pop(i)\n        l.append(str(x))\n        y = a0.pop(i)\n        l.append(str(y))\n    print(' '.join(l))", "t = int(input())\nfor testcase in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    arr1 = arr[:n]\n    arr2 = arr[n:]\n    res = []\n    for i in range(n):\n        res.append(arr1[i])\n        res.append(arr2[i])\n    print(' '.join([str(num) for num in res]))", "[(lambda n: (lambda arr: [print(f'{arr[i]} {arr[i + n]}', end=' \\n'[i == n - 1]) for i in range(n)])(sorted(list(map(int, input().split())))))(int(input())) for _ in range(int(input()))]", "[(lambda n: (lambda arr: [print(f'{arr[i]} {arr[i + n]}', end=' \\n'[i == n - 1]) for i in range(n)])(sorted(list(map(int, input().split())))))(int(input())) for _ in range(int(input()))]", "def solve(a, n):\n    a = sorted(a)\n    l = []\n    for i in range(n):\n        l.extend([a[i], a[i + n]])\n    return ' '.join([str(x) for x in l])\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(a, n))", "[(lambda n: (lambda arr: [print(f'{arr[i]} {arr[i + n]}', end=' \\n'[i == n - 1]) for i in range(n)])(sorted(list(map(int, input().split())))))(int(input())) for _ in range(int(input()))]", "[(lambda n: (lambda arr: [print(f'{arr[i]} {arr[i + n]}', end=' \\n'[i == n - 1]) for i in range(n)])(sorted(list(map(int, input().split())))))(int(input())) for _ in range(int(input()))]", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ll = [int(x) for x in input().split(' ')]\n    ll.sort()\n    l = [str(x) for x in ll]\n    if n >= 2:\n        l1 = []\n        for j in range(n):\n            l1.append(l[j])\n            l1.append(l[j + n])\n        print(' '.join(l1))\n    else:\n        print(' '.join(l))", "[(lambda n: (lambda arr: [print(f'{arr[i]} {arr[i + n]}', end=' \\n'[i == n - 1]) for i in range(n)])(sorted(list(map(int, input().split())))))(int(input())) for _ in range(int(input()))]", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    b = a[:n]\n    c = a[n:]\n    r = []\n    for i in range(len(c)):\n        r.append(c[i])\n        r.append(b[i])\n    print(*r)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    (first, second) = (a[:n], a[n:])\n    for i in range(n):\n        print(first[i], second[i], end=' ')\n    print()", "from sys import stdin\ninput = stdin.readline\nfrom itertools import product\n\ndef solve():\n    n = int(input())\n    arr = sorted([int(char) for char in input().split()])\n    ans = []\n    for i in range(n):\n        ans.append(arr[i])\n        ans.append(arr[2 * n - 1 - i])\n    return ans\nfor _ in range(int(input())):\n    print(*solve())", "t = int(input())\nfor _ in range(t):\n    a = int(input())\n    b = list(map(int, input().split()))\n    b.sort()\n    ptr1 = 0\n    ptr2 = len(b) // 2\n    ans = []\n    while ptr2 < len(b):\n        ans.append(b[ptr1])\n        ans.append(b[ptr2])\n        ptr1 += 1\n        ptr2 += 1\n    print(*ans)", "for _ in range(int(input())):\n    a = int(input())\n    lst = [0] * (a * 2)\n    l = list(map(int, input().split()))\n    l.sort()\n    j = 0\n    for i in range(len(l) // 2):\n        lst[j] = l[i]\n        j += 2\n    j = 1\n    for i in range(len(l) // 2, len(l)):\n        lst[j] = l[i]\n        j += 2\n    print(*lst)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = []\n    a.sort()\n    for i in range(n):\n        b.append(a[i])\n        b.append(a[-i - 1])\n    print(*b)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    y = []\n    for x in zip(a[n:], a[:n]):\n        y += [x[0], x[1]]\n    print(*y)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split(' ')]\n    a.sort()\n    b = []\n    p1 = 0\n    p2 = 2 * n - 1\n    for i in range(2 * n):\n        if i % 2:\n            b.append(a[p1])\n            p1 += 1\n        else:\n            b.append(a[p2])\n            p2 -= 1\n    print(*b)", "def linput():\n    return list(map(int, input().split()))\nfor _ in range(int(input())):\n    n = int(input())\n    l = sorted(linput())\n    ans = [0 for i in range(2 * n)]\n    for i in range(n):\n        ans[2 * i] = l[i]\n        ans[2 * i + 1] = l[n + i]\n    print(*ans)", "for u in range(int(input())):\n    n = int(input())\n    x = [int(w) for w in input().split()]\n    x = sorted(x)\n    for i in range(1, 2 * n, 2):\n        (x[i], x[i - 1]) = (x[i - 1], x[i])\n    (x[0], x[-1]) = (x[-1], x[0])\n    print(*x)", "for _ in range(int(input())):\n    n = int(input())\n    s = sorted(list(map(int, input().split())))\n    for i in range(n):\n        print(s[i], s[-i - 1], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ans = []\n    for i in range(n):\n        ans.append(arr[i + n])\n        ans.append(arr[i])\n    print(*ans)", "def solveq1():\n    n = int(input())\n    arr = sorted([int(x) for x in input().split()])\n    changed = True\n    while changed:\n        changed = False\n        for i in range(len(arr) - 2):\n            if arr[i + 1] == (arr[i] + arr[i + 2]) / 2:\n                changed = True\n                (arr[i + 1], arr[i]) = (arr[i], arr[i + 1])\n    print(' '.join([str(x) for x in arr]))\nfor tc in range(int(input())):\n    solveq1()", "def answer():\n    b = [-1] * (2 * n)\n    ind = 0\n    for i in range(0, 2 * n, 2):\n        b[i] = a[ind]\n        ind += 1\n    ind = 2 * n - 1\n    for i in range(1, 2 * n, 2):\n        b[i] = a[ind]\n        ind -= 1\n    return b\nfor T in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    print(*answer())", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    for i in range(n):\n        print(a[i], a[-1 - i], end=' ')\n    print('', end='\\n')", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    l2 = []\n    for i in range(n):\n        l2.append(l[i])\n        l2.append(l[2 * n - i - 1])\n    print(*l2)", "answers = []\n\ndef solve(n, arr):\n    if n == 1:\n        answers.append(arr)\n        return\n    arr.sort()\n    start = 0\n    end = 2 * n - 1\n    final = []\n    while start < end:\n        final.append(arr[end])\n        final.append(arr[start])\n        start += 1\n        end -= 1\n    if start == end:\n        final.append(arr[start])\n    answers.append(final)\nT = int(input())\nwhile T:\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    solve(n, arr)\n    T -= 1\nfor ans in answers:\n    print(*ans)", "import sys\nfrom pprint import pprint\n\ndef do():\n    n = int(input())\n    dat = list(map(int, input().split()))\n    dat.sort()\n    res = []\n    for i in range(n):\n        res.append(dat[i])\n        res.append(dat[-i - 1])\n    print(' '.join(list(map(str, res))))\nq = int(input())\nfor _ in range(q):\n    do()", "from sys import stdin, stdout\nL = lambda : list(map(int, stdin.readline().strip().split()))\nI = lambda : int(stdin.readline().strip())\nT = I()\nwhile T > 0:\n    T = T - 1\n    n = I()\n    arrays = L()\n    arrays.sort()\n    now = 0\n    for i in range(0, n):\n        print(arrays[i], arrays[i + n], end=' ')\n    print()", "t = int(input())\nfor c in range(t):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    ls.sort()\n    ans = [0] * (n * 2)\n    for i in range(n):\n        (ans[i * 2], ans[i * 2 + 1]) = (ls[i], ls[n + i])\n    print(' '.join(map(str, ans)))", "for _ in range(0, int(input())):\n    n = int(input())\n    v = sorted(map(int, input().split()))\n    x = zip(v[0:n], v[n:2 * n])\n    a = []\n    for c in x:\n        a.append(c[0])\n        a.append(c[1])\n    print(*a)", "from collections import deque\nimport heapq\nfrom math import sqrt\nimport operator\nfrom operator import itemgetter\nimport sys\nimport copy\ninf_var = 0\nif inf_var == 1:\n    inf = open('input.txt', 'r')\nelse:\n    inf = sys.stdin\ninput = inf.readline\n\ndef read_one_int():\n    return int(input().rstrip('\\n'))\n\ndef read_one_float():\n    return float(input().rstrip('\\n'))\n\ndef read_list_of_ints():\n    res = [int(val) for val in input().rstrip('\\n').split()]\n    return res\n\ndef read_list_of_ints_zero():\n    return [int(val) - 1 for val in input().rstrip('\\n').split()]\n\ndef read_str():\n    return input().rstrip()\n\ndef find_perm(n, elements):\n    res = []\n    elements.sort()\n    for i in range(n):\n        res.append(elements[i])\n        res.append(elements[2 * n - i - 1])\n    print(' '.join(map(str, res)))\n\ndef main():\n    tests = read_one_int()\n    for _ in range(tests):\n        n = read_one_int()\n        elements = read_list_of_ints()\n        find_perm(n, elements)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    n = 2 * n\n    (l, r) = (0, n - 1)\n    lis = []\n    get = sorted(arr)\n    while l < r:\n        lis.append(get[l])\n        lis.append(get[r])\n        l += 1\n        r -= 1\n    print(*lis)", "for _ in range(int(input())):\n    n = int(input())\n    L = list(map(int, input().split()))\n    L.sort()\n    res = []\n    for i in range(n):\n        res.append(L[i])\n        res.append(L[2 * n - i - 1])\n    for x in res:\n        print(x, end=' ')\n    print()", "test = int(input())\nfor i in range(test):\n    n = int(input())\n    m = 2 * n\n    arr = list(map(int, input().split()))\n    marr = sorted(arr)\n    (ans1, ans2) = ([], [])\n    for j in range(m):\n        if j < n:\n            ans1.append(marr[j])\n        else:\n            ans2.append(marr[j])\n    ans = []\n    for j in range(len(ans1)):\n        ans.append(ans1[j])\n        ans.append(ans2[j])\n    print(*ans)"]