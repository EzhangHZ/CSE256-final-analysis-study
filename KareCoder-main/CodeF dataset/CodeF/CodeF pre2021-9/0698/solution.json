["t = int(input())\nfor z in range(t):\n    n = int(input())\n    arr = []\n    count = [0, 0, 0]\n    for i in range(n):\n        arr.append(list(input()))\n    for i in range(n):\n        for j in range(n):\n            if arr[i][j] == 'X':\n                count[(i + j) % 3] += 1\n    k = count.index(min(count))\n    for i in range(n):\n        for j in range(n):\n            if (i + j) % 3 == k and arr[i][j] == 'X':\n                arr[i][j] = 'O'\n        arr[i] = ''.join(arr[i])\n    for s in arr:\n        print(s)", "def ticTackToe():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        grid = []\n        for i in range(n):\n            grid.append(list(input()))\n        p0 = 0\n        p1 = 0\n        p2 = 0\n        for i in range(n):\n            for j in range(n):\n                if grid[i][j] == 'X':\n                    if (i + j) % 3 == 0:\n                        p0 += 1\n                    elif (i + j) % 3 == 1:\n                        p1 += 1\n                    else:\n                        p2 += 1\n        parity = 0\n        if p1 <= min(p2, p0):\n            parity = 1\n        elif p2 <= min(p1, p0):\n            parity = 2\n        for i in range(n):\n            for j in range(n):\n                if grid[i][j] == 'X':\n                    if (i + j) % 3 == parity:\n                        grid[i][j] = 'O'\n        for g in grid:\n            print(''.join(g))\nticTackToe()", "for _ in range(int(input())):\n    n = int(input())\n    ar = [[x for x in input()] for _ in range(n)]\n    c = [0, 0, 0]\n    for i in range(n):\n        for j in range(n):\n            if ar[i][j] == 'X':\n                c[(i + j) % 3] += 1\n    e = c.index(min(c))\n    for i in range(n):\n        for j in range(n):\n            if ar[i][j] == 'X' and (i + j) % 3 == e:\n                ar[i][j] = 'O'\n    for e in ar:\n        print(''.join(e))", "import sys\nreader = (s.rstrip() for s in sys.stdin)\ninput = reader.__next__\n\ndef gift():\n    for _ in range(t):\n        n = int(input())\n        s = []\n        for i in range(n):\n            array = list(input())\n            s.append(array)\n        f = [0] * 3\n        for (i, r) in enumerate(s):\n            for (j, c) in enumerate(r):\n                if c == 'X':\n                    f[(i + j) % 3] += 1\n        rKey = min(range(3), key=lambda x: f[x])\n        for (i, r) in enumerate(s):\n            for (j, c) in enumerate(r):\n                if c == 'X' and (i + j) % 3 == rKey:\n                    s[i][j] = 'O'\n            yield ''.join(s[i])\nt = int(input())\nans = gift()\nprint(*ans, sep='\\n')", "def solve():\n    n = int(input())\n    g = []\n    for _ in range(n):\n        s = input()\n        g.append(s)\n    mod0 = 0\n    mod1 = 0\n    mod2 = 0\n    for i in range(n):\n        for j in range(n):\n            if g[i][j] == 'X':\n                if (i + j) % 3 == 0:\n                    mod0 += 1\n                elif (i + j) % 3 == 1:\n                    mod1 += 1\n                else:\n                    mod2 += 1\n    min_ope = min(mod0, mod1, mod2)\n    if min_ope == mod0:\n        for i in range(n):\n            ans = ''\n            for j in range(n):\n                if (i + j) % 3 == 0 and g[i][j] == 'X':\n                    ans += 'O'\n                else:\n                    ans += g[i][j]\n            print(ans)\n    elif min_ope == mod1:\n        for i in range(n):\n            ans = ''\n            for j in range(n):\n                if (i + j) % 3 == 1 and g[i][j] == 'X':\n                    ans += 'O'\n                else:\n                    ans += g[i][j]\n            print(ans)\n    elif min_ope == mod2:\n        for i in range(n):\n            ans = ''\n            for j in range(n):\n                if (i + j) % 3 == 2 and g[i][j] == 'X':\n                    ans += 'O'\n                else:\n                    ans += g[i][j]\n            print(ans)\nt = int(input())\nfor _ in range(t):\n    solve()", "try:\n    inp = open('file.txt').readline\nexcept:\n    inp = input\nt = int(inp().strip())\nfor _ in range(t):\n    n = int(inp().strip())\n    rows = []\n    for __ in range(n):\n        arr = list(inp().strip())\n        rows.append(arr)\n    box = [[], [], []]\n    for i in range(n):\n        for j in range(n):\n            if rows[i][j] == 'X':\n                box[(i + j) % 3].append((i, j))\n    l0 = len(box[0])\n    l1 = len(box[1])\n    l2 = len(box[2])\n    mi = min(l0, l1, l2)\n    ans = []\n    if mi == l0:\n        ans = box[0]\n    elif mi == l1:\n        ans = box[1]\n    else:\n        ans = box[2]\n    for a in ans:\n        (i, j) = a\n        rows[i][j] = 'O'\n    for row in rows:\n        print(''.join(row))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = []\n    for i in range(n):\n        r = list(input())\n        s.append(r)\n    cnt = [0, 0, 0]\n    for i in range(n):\n        for j in range(n):\n            if s[i][j] == 'X':\n                cnt[(i + j) % 3] += 1\n    m = 2 ** 32\n    index = -3\n    for i in range(3):\n        if cnt[i] < m:\n            index = i\n            m = cnt[i]\n    for i in range(n):\n        for j in range(n):\n            if (i + j) % 3 == index and s[i][j] == 'X':\n                s[i][j] = 'O'\n    for i in s:\n        print(''.join(i))", "def main():\n    t = int(input())\n    while t > 0:\n        t -= 1\n        n = int(input())\n        mp = [''] * n\n        X = [0] * 3\n        O = [0] * 3\n        for i in range(n):\n            mp[i] = list(input().strip())\n            for j in range(n):\n                if mp[i][j] == 'X':\n                    X[(i + j) % 3] += 1\n                elif mp[i][j] == 'O':\n                    O[(i + j) % 3] += 1\n        tp = [0, 1]\n        mins = X[0] + O[1]\n        for i in range(3):\n            for j in range(3):\n                if i == j:\n                    continue\n                if mins > X[i] + O[j]:\n                    mins = X[i] + O[j]\n                    tp = [i, j]\n        for i in range(n):\n            for j in range(n):\n                k = (i + j) % 3\n                if k == tp[0] and mp[i][j] == 'X':\n                    mp[i][j] = 'O'\n                elif k == tp[1] and mp[i][j] == 'O':\n                    mp[i][j] = 'X'\n        for i in range(n):\n            print(''.join(mp[i]))\nmain()", "def solve(a):\n    c = [0, 0, 0]\n    for i in range(len(a)):\n        for j in range(len(a)):\n            if a[i][j] == 'X':\n                c[(i + j) % 3] += 1\n    Min = float('inf')\n    for i in range(len(c)):\n        if c[i] < Min:\n            Min = c[i]\n            idx = i\n    for i in range(len(a)):\n        for j in range(len(a)):\n            if a[i][j] == 'X' and (i + j) % 3 == idx:\n                a[i][j] = 'O'\n    return a\nt = int(input())\nans = []\ntp = ''\nwhile t > 0:\n    n = int(input(''))\n    a = []\n    for i in range(n):\n        x = input('')\n        a.append(list(x))\n    a = solve(a)\n    for i in range(len(a)):\n        for j in range(len(a)):\n            tp += a[i][j]\n        tp += '\\n'\n    t -= 1\nprint(tp.strip())", "for t in range(int(input())):\n    n = int(input())\n    store = []\n    count = [0, 0, 0]\n    for i in range(n):\n        val = list(input())\n        for j in range(n):\n            if val[j] == 'X':\n                count[(i + j) % 3] += 1\n        store.append(val)\n    mini_value = count[0]\n    mini_index = 0\n    for i in range(3):\n        if count[i] < mini_value:\n            mini_value = count[i]\n            mini_index = i\n    for i in range(n):\n        for j in range(n):\n            if store[i][j] == 'X' and (i + j) % 3 == mini_index:\n                store[i][j] = 'O'\n        print(''.join(map(str, store[i])))", "nbTests = int(input())\nfor i in range(nbTests):\n    taille = int(input())\n    grille = [list(input()) for _ in range(taille)]\n    mini = 100000000000000\n    meilleur = -1\n    for k in range(3):\n        nb = 0\n        for i in range(taille):\n            for j in range(taille):\n                if (i + j) % 3 == k and grille[i][j] == 'X':\n                    nb += 1\n        if nb < mini:\n            mini = nb\n            meilleur = k\n    for i in range(taille):\n        for j in range(taille):\n            if (i + j) % 3 == meilleur and grille[i][j] == 'X':\n                grille[i][j] = 'O'\n    for i in range(taille):\n        print(''.join(grille[i]))", "from sys import stdin\nip = stdin.readline\nfor _ in range(int(ip())):\n    n = int(ip())\n    a = [list(ip().strip()) for _ in range(n)]\n    x = [0, 0, 0]\n    o = [0, 0, 0]\n    for i in range(n):\n        for j in range(n):\n            (v, p) = (a[i][j], (i + j) % 3)\n            if v == 'X':\n                x[p] += 1\n            elif v == 'O':\n                o[p] += 1\n    (p, q) = (-1, -1)\n    mn = float('inf')\n    for i in range(3):\n        for j in range(3):\n            sm = x[i] + o[j]\n            if not i == j and sm < mn:\n                (p, q) = (i, j)\n                mn = sm\n    for i in range(n):\n        for j in range(n):\n            (v, pt) = (a[i][j], (i + j) % 3)\n            if pt == p and v == 'X':\n                a[i][j] = 'O'\n            elif pt == q and v == 'O':\n                a[i][j] = 'X'\n    print(*[''.join(i) for i in a], sep='\\n')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = []\n    b = [0] * 3\n    for i in range(n):\n        a.append([0] * n)\n        s = input()\n        for j in range(n):\n            if s[j] == 'X':\n                a[i][j] = 1\n                if (i + j) % 3 == 0:\n                    b[0] += 1\n                elif (i + j) % 3 == 1:\n                    b[1] += 1\n                elif (i + j) % 3 == 2:\n                    b[2] += 1\n    min_i = 0\n    min1 = 100000000\n    for i in range(3):\n        if b[i] < min1:\n            min1 = b[i]\n            min_i = i\n    for i in range(n):\n        new_s = ''\n        for j in range(n):\n            if a[i][j] == 1 and (i + j) % 3 == min_i:\n                new_s += 'O'\n            elif a[i][j] == 1:\n                new_s += 'X'\n            else:\n                new_s += '.'\n        print(new_s)", "for i in range(int(input())):\n    (n, lst, r) = (int(input()), [], [0, 0, 0])\n    for i in range(n):\n        a = input()\n        for j in range(n):\n            if a[j] == 'X':\n                r[(i + j) % 3] += 1\n        lst.append(list(a))\n    m = r.index(min(r))\n    for i in range(n):\n        for j in range(n):\n            print('O' if lst[i][j] == 'X' and (i + j) % 3 == m else lst[i][j], end='')\n        print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    g = [input() for _ in range(n)]\n    grille = [[[g[i][j] for j in range(n)] for i in range(n)] for _ in range(3)]\n    best = n * n\n    ibest = 0\n    for h in range(3):\n        count = 0\n        for i in range(n):\n            for j in range(n):\n                if (i + j + h) % 3 == 0:\n                    if g[i][j] == 'X':\n                        grille[h][i][j] = 'O'\n                        count += 1\n        if best > count:\n            ibest = h\n            best = count\n    for l in grille[ibest]:\n        mot = ''\n        for ll in l:\n            mot += ll\n        print(mot)", "for _ in ' ' * int(input()):\n    (n, lst, rr) = (int(input()), [], [0, 0, 0])\n    for i in range(n):\n        a = input()\n        for j in range(n):\n            if a[j] == 'X':\n                rr[(i + j) % 3] += 1\n        lst.append(list(a))\n    mn = rr.index(min(rr))\n    for i in range(n):\n        for j in range(n):\n            print('O' if lst[i][j] == 'X' and (i + j) % 3 == mn else lst[i][j], end='')\n        print()", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = [input() for i in range(n)]\n    cnt = [0, 0, 0]\n    for i in range(n):\n        for j in range(n):\n            if a[i][j] == 'X':\n                cnt[(i + j) % 3] += 1\n    mc = min(cnt)\n    for k in range(3):\n        if mc == cnt[k]:\n            for i in range(n):\n                for j in range(n):\n                    if a[i][j] == 'X' and (i + j) % 3 == k:\n                        print('O', end='')\n                    else:\n                        print(a[i][j], end='')\n                print()\n            break", "for _ in range(int(input())):\n    (n, lst, rr) = (int(input()), [], [0, 0, 0])\n    for i in range(n):\n        a = input()\n        for j in range(n):\n            if a[j] == 'X':\n                rr[(i + j) % 3] += 1\n        lst.append(list(a))\n    mn = rr.index(min(rr))\n    for i in range(n):\n        for j in range(n):\n            print('O' if lst[i][j] == 'X' and (i + j) % 3 == mn else lst[i][j], end='')\n        print()", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    a = []\n    for i in range(n):\n        b = []\n        a.append(input())\n    dp = [[0] * n for i in range(n)]\n    coun = 0\n    dic = {1: 0, 2: 0, 3: 0}\n    for i in range(n):\n        coun = coun % 3 + 1\n        temp = coun\n        for j in range(n):\n            dp[i][j] = temp\n            if a[i][j] == 'X':\n                dic[temp] += 1\n            temp = temp % 3 + 1\n    mi = min(dic.values())\n    yo = 0\n    for i in dic:\n        if dic[i] == mi:\n            yo = i\n            break\n    for i in range(n):\n        for j in range(n):\n            if dp[i][j] == yo and a[i][j] == 'X':\n                print('O', end='')\n            else:\n                print(a[i][j], end='')\n        print()", "def solve():\n    n = int(input())\n    board = [[] for _ in range(n)]\n    boardX = [0, 0, 0]\n    for i in range(3):\n        boardX[i] = [[[] for _ in range(n)] for _ in range(n)]\n    changeX = [0, 0, 0]\n    for x in range(n):\n        board[x] = input()\n        for y in range(n):\n            for i in range(3):\n                boardX[i][x][y] = board[x][y]\n    for x in range(n):\n        for y in range(n):\n            if board[x][y] == '.':\n                continue\n            changeX[(x + y) % 3] += 1\n            boardX[(x + y) % 3][x][y] = 'O'\n    ans = [[]]\n    if changeX[0] <= changeX[1] and changeX[0] <= changeX[2]:\n        ans = boardX[0]\n    elif changeX[1] <= changeX[2]:\n        ans = boardX[1]\n    else:\n        ans = boardX[2]\n    for x in range(n):\n        for y in range(n):\n            print(ans[x][y], end='')\n        print()\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    mat = []\n    for i in range(n):\n        mat.append(list(input()))\n    score = []\n    for i in range(n):\n        score.append([0] * n)\n    for i in range(n):\n        for j in range(n):\n            if mat[i][j] != '.':\n                for di in [-2, -1, 0]:\n                    if 0 <= i + di and i + di + 2 < n:\n                        trio = True\n                        if mat[i + di][j] != 'X' or mat[i + di + 1][j] != 'X' or mat[i + di + 2][j] != 'X':\n                            trio = False\n                        if trio:\n                            score[i][j] += 1\n                for dj in [-2, -1, 0]:\n                    if 0 <= j + dj and j + dj + 2 < n:\n                        trio = True\n                        if mat[i][j + dj] != 'X' or mat[i][j + dj + 1] != 'X' or mat[i][j + dj + 2] != 'X':\n                            trio = False\n                        if trio:\n                            score[i][j] += 1\n    oo = [0, 0, 0]\n    for i in range(n):\n        for j in range(n):\n            if score[i][j] > 0:\n                oo[(i + j) % 3] += 1\n    m = 0\n    if oo[1] < oo[m]:\n        m = 1\n    if oo[2] < oo[m]:\n        m = 2\n    for i in range(n):\n        for j in range(n):\n            if (i + j) % 3 == m:\n                if score[i][j] > 0:\n                    mat[i][j] = 'O'\n    for i in range(n):\n        print(''.join(mat[i]))"]