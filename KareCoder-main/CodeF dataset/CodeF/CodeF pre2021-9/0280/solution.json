["import sys\ninput = lambda : sys.stdin.readline()\nint_arr = lambda : list(map(int, input().split()))\nstr_arr = lambda : list(map(str, input().split()))\nget_str = lambda : map(str, input().split())\nget_int = lambda : map(int, input().split())\nget_flo = lambda : map(float, input().split())\nmod = 1000000007\n\ndef solve(n, arr):\n    tot = 0\n    if arr[0] > 0:\n        fg = 0\n        mx = arr[0]\n    else:\n        fg = 1\n        mi = arr[0]\n    for i in range(1, n):\n        if fg == 1:\n            if arr[i] > 0:\n                fg = 0\n                tot += mi\n                mx = arr[i]\n            elif arr[i] > mi:\n                mi = arr[i]\n        elif arr[i] < 0:\n            fg = 1\n            tot += mx\n            mi = arr[i]\n        elif arr[i] > mx:\n            mx = arr[i]\n    if arr[-1] < 0:\n        tot += mi\n    else:\n        tot += mx\n    print(tot)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = int_arr()\n    solve(n, arr)", "from itertools import *\nfor s in [*open(0)][2::2]:\n    print(sum((max(g) for (k, g) in groupby(map(int, s.split()), key=lambda x: x > 0))))", "n = int(input())\nfor i in range(n):\n    N = int(input())\n    numbers = list(map(int, input().split()))\n    eligible = [numbers[0]]\n    for j in range(1, len(numbers)):\n        current = numbers[j]\n        if current * eligible[-1] < 0:\n            eligible.append(current)\n        elif current > eligible[-1]:\n            eligible[-1] = current\n    print(sum(eligible))", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    sub_arr = [arr[0]]\n    for i in range(1, len(arr)):\n        if arr[i] > 0 and sub_arr[-1] > 0 or (arr[i] < 0 and sub_arr[-1] < 0):\n            if arr[i] > sub_arr[-1]:\n                sub_arr.pop()\n                sub_arr.append(arr[i])\n        else:\n            sub_arr.append(arr[i])\n    print(sum(sub_arr))", "from sys import stdin\ninp = stdin.readline\nt = int(inp().strip())\nwhile t:\n    t -= 1\n    n = int(inp().strip())\n    a = [int(k) for k in inp().strip().split()]\n    lastvalue = a[0]\n    maxSum = 0\n    for num in a:\n        if lastvalue > 0:\n            if num > 0:\n                if num > lastvalue:\n                    lastvalue = num\n            else:\n                maxSum += lastvalue\n                lastvalue = num\n        elif num > 0:\n            maxSum += lastvalue\n            lastvalue = num\n        elif num > lastvalue:\n            lastvalue = num\n    maxSum += lastvalue\n    print(maxSum)", "import sys\ninput = lambda : sys.stdin.readline()\nint_arr = lambda : list(map(int, input().split()))\nstr_arr = lambda : list(map(str, input().split()))\nget_str = lambda : map(str, input().split())\nget_int = lambda : map(int, input().split())\nget_flo = lambda : map(float, input().split())\nmod = 1000000007\n\ndef solve(n, arr):\n    tot = 0\n    i = 0\n    check = True\n    val = arr[0]\n    if val < 0:\n        check = False\n    for i in range(n):\n        curr = True\n        if arr[i] < 0:\n            curr = False\n        if check == curr:\n            val = max(arr[i], val)\n        else:\n            tot += val\n            val = arr[i]\n        check = curr\n    print(tot + val)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = int_arr()\n    solve(n, arr)", "from sys import stdin\ninput = stdin.readline\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = []\n    mx = a[0]\n    for i in range(1, n):\n        if a[i] * mx < 0:\n            b.append(mx)\n            mx = a[i]\n        elif mx < a[i]:\n            mx = a[i]\n    b.append(mx)\n    print(sum(b))", "N = int(input())\nfor _ in range(N):\n    L = int(input())\n    list1 = list(map(int, input().split()))\n    max_length_seq = []\n    if list1[0] > 0:\n        max_finder_positive = True\n    else:\n        max_finder_positive = False\n    current_max = None\n    for num in list1:\n        if (num >= 0) == max_finder_positive:\n            if current_max is None:\n                current_max = num\n            elif num > current_max:\n                current_max = num\n        else:\n            max_finder_positive = not max_finder_positive\n            max_length_seq.append(current_max)\n            current_max = num\n    max_length_seq.append(current_max)\n    print(sum(max_length_seq))", "t = int(input())\nans = []\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    (num, t) = (0, a[0])\n    for i in range(n):\n        if a[i] * t > 0:\n            t = max(a[i], t)\n        else:\n            num += t\n            t = a[i]\n    ans.append(num + t)\nprint('\\n'.join(map(str, ans)))", "all_ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    (*a,) = map(int, input().split())\n    pre = a[0]\n    ans = 0\n    for i in range(1, n):\n        now = a[i]\n        if pre * now < 0:\n            ans += pre\n            pre = now\n        else:\n            pre = max(pre, now)\n    else:\n        ans += pre\n    all_ans.append(ans)\nprint('\\n'.join(map(str, all_ans)))", "import sys\nimport math\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef rs():\n    return sys.stdin.readline().rstrip()\n\ndef ri():\n    return int(sys.stdin.readline())\n\ndef ria():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef ws(s):\n    sys.stdout.write(s + '\\n')\n\ndef wi(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef wia(a):\n    sys.stdout.write(' '.join([str(x) for x in a]) + '\\n')\n\ndef main():\n    n = ri()\n    a = ria()\n    b = []\n    mx = -1 * 10000000000.0\n    sum = 0\n    i = 0\n    while i < n:\n        p = i\n        mx = -1 * 10000000000.0\n        while i < n and a[i] < 0:\n            mx = max(mx, a[i])\n            i += 1\n        if mx != -1 * 10000000000.0:\n            sum += mx\n        mx = -1 * 10000000000.0\n        while i < n and a[i] > 0:\n            mx = max(mx, a[i])\n            i += 1\n        if mx != -1 * 10000000000.0:\n            sum += mx\n    wi(sum)\nt = ri()\nfor _ in range(t):\n    main()", "from itertools import *\nfor _ in range(int(input())):\n    n = int(input())\n    print(sum((max(map(int, v)) for (_, v) in groupby(input().split(), str.isdigit))))", "import math as m\ni = input()\ninp = []\nfor a in range(0, int(i)):\n    input()\n    inp += [[int(x) for x in input().split()]]\nfor arr in inp:\n    s = 0\n    seg = [arr[0]]\n    pos = arr[0] > 0\n    for i in arr[1:]:\n        if (i > 0) == pos:\n            seg += [i]\n        else:\n            pos = not pos\n            s += max(seg)\n            seg = [i]\n    s += max(seg)\n    print(s)", "import math as m\ni = input()\ninp = []\nfor a in range(0, int(i)):\n    input()\n    inp += [[int(x) for x in input().split()]]\nfor arr in inp:\n    s = 0\n    pos = arr[0] > 0\n    m = arr[0]\n    for i in arr[1:]:\n        if (i > 0) == pos:\n            m = max(m, i)\n        else:\n            pos = not pos\n            s += m\n            m = i\n    s += m\n    print(s)", "n = int(input())\n\ndef problem1343C(L):\n    S = 0\n    partial_max = L[0]\n    for ele in L:\n        if ele * partial_max > 0:\n            if ele > partial_max:\n                partial_max = ele\n        else:\n            S += partial_max\n            partial_max = ele\n    S += partial_max\n    return S\nfor ligne in range(n):\n    N = int(input())\n    L = list(map(int, input().split()))\n    print(problem1343C(L))", "t = int(input())\nfor _ in range(t):\n    input()\n    a = list(map(int, input().split()))\n    b = a[0]\n    sum = 0\n    for i in a:\n        if i // b < 0:\n            sum += b\n            b = i\n        if i > b:\n            b = i\n    print(sum + b)", "num_tests = int(input())\nanswers = []\nfor test in range(num_tests):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    answers.append([])\n    next_wanted = None\n    curr = None\n    for num in arr:\n        if next_wanted == None:\n            curr = num\n            next_wanted = not num > 0\n        elif next_wanted:\n            if num < 0:\n                curr = max(curr, num)\n            else:\n                answers[-1].append(curr)\n                curr = num\n                next_wanted = not next_wanted\n        elif num > 0:\n            curr = max(curr, num)\n        else:\n            answers[-1].append(curr)\n            curr = num\n            next_wanted = not next_wanted\n    answers[-1].append(curr)\nfor answer in answers:\n    print(sum(answer))", "def alternateSequence(sequence: list, length):\n    alternate_sequence = [sequence[0]]\n    flag = sequence[0] > 0\n    for num in sequence:\n        if flag and num > 0 or (not flag and num < 0):\n            alternate_sequence[-1] = max(alternate_sequence[-1], num)\n        elif not flag and num > 0 or (flag and num < 0):\n            alternate_sequence.append(num)\n            flag = num > 0\n    print(sum(alternate_sequence))\ntestcases = int(input())\nsequences = []\nfor _ in range(testcases):\n    length = int(input())\n    sequences.append([length, list(map(int, input().split()))])\nfor (length, sequence) in sequences:\n    alternateSequence(sequence, length)", "def alternatingSubsequence(a):\n    n = len(a)\n    if n == 1:\n        return a[0]\n    max_sum = 0\n    i = 0\n    while i < n:\n        j = i + 1\n        while j < n and a[j] * a[i] > 0:\n            j += 1\n        max_sum += max(a[i:j])\n        i = j\n    return max_sum\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(alternatingSubsequence(a))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    j = 0\n    while j < n:\n        limit = 0\n        while j < n and a[j] < 0:\n            if a[j] > limit or limit == 0:\n                limit = a[j]\n            j += 1\n        ans += limit\n        limit = 0\n        while j < n and a[j] > 0:\n            if a[j] > limit:\n                limit = a[j]\n            j += 1\n        ans += limit\n    print(ans)", "test_cases = int(input())\n\ndef handle():\n    input()\n    values = [int(s) for s in input().split(' ')]\n    sign_is_positive = True if values[0] >= 0 else False\n    current_sum = 0\n    current_max = values[0]\n    for value in values:\n        if value >= 0 and sign_is_positive:\n            current_max = max(current_max, value)\n        elif value < 0 and (not sign_is_positive):\n            current_max = max(current_max, value)\n        else:\n            sign_is_positive = not sign_is_positive\n            current_sum += current_max\n            current_max = value\n    return current_sum + current_max\nfor _ in range(test_cases):\n    print(handle())", "rng = int(input())\n\ndef finder(arr):\n    lst = [arr[0]]\n    for i in range(1, len(arr)):\n        if lst[-1] < 0 and arr[i] < 0:\n            if arr[i] > lst[-1]:\n                lst.pop()\n                lst.append(arr[i])\n        elif lst[-1] > 0 and arr[i] > 0:\n            if arr[i] > lst[-1]:\n                lst.pop()\n                lst.append(arr[i])\n        else:\n            lst.append(arr[i])\n    add = sum(lst)\n    print(add)\nfor i in range(rng):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    finder(arr)", "test = int(input())\nfor i in range(test):\n    size = int(input())\n    lis = list(map(int, input().split()))\n    pos = True if lis[0] > 0 else False\n    maxi = lis[0]\n    ans = 0\n    for i in range(size):\n        if pos != (lis[i] > 0):\n            pos = not pos\n            ans += maxi\n            maxi = lis[i]\n        elif lis[i] > maxi:\n            maxi = lis[i]\n    ans += maxi\n    print(ans)", "def subsequence():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    postive = True if arr[0] > 0 else False\n    max_num = arr[0]\n    answer = 0\n    for num in range(n):\n        if postive != (arr[num] > 0):\n            answer += max_num\n            max_num = arr[num]\n            postive = not postive\n        elif arr[num] > max_num:\n            max_num = arr[num]\n    answer += max_num\n    return answer\nt = int(input())\nfor test_case in range(t):\n    print(subsequence())", "def checker():\n    testcases = int(input())\n    for _ in range(testcases):\n        n = int(input())\n        arr = list(map(int, input().split(' ')))\n        if len(arr) < 2:\n            print(sum(arr))\n            continue\n        chosen = [arr[0]]\n        idx = 1\n        while idx < n:\n            if chosen[-1] < 0:\n                if arr[idx] < 0 and arr[idx] > chosen[-1]:\n                    chosen[-1] = arr[idx]\n                elif arr[idx] > 0:\n                    chosen.append(arr[idx])\n            elif arr[idx] > chosen[-1]:\n                chosen[-1] = arr[idx]\n            elif arr[idx] < 0:\n                chosen.append(arr[idx])\n            idx += 1\n        print(sum(chosen))\nchecker()", "from sys import stdin\ninput = stdin.readline\n\ndef main():\n    test = int(input())\n    for t in range(test):\n        n = int(input()) // 2\n        l = [int(i) for i in input().split(' ')]\n        pos = False\n        if l[0] > 0:\n            pos = True\n        maxi = l[0]\n        sum = 0\n        for i in range(len(l)):\n            if pos:\n                if l[i] > 0:\n                    maxi = max(maxi, l[i])\n                else:\n                    sum += maxi\n                    maxi = l[i]\n                    pos = False\n            elif l[i] < 0:\n                maxi = max(maxi, l[i])\n            else:\n                sum += maxi\n                maxi = l[i]\n                pos = True\n        sum += maxi\n        print(sum)\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        A = tuple(map(int, input().split()))\n        sgn = A[0] > 0\n        ans = [A[0]]\n        for a in A:\n            if sgn == (a > 0):\n                ans[-1] = max(ans[-1], a)\n            else:\n                ans.append(a)\n                sgn = a > 0\n        print(sum(ans))\nmain()", "def alternating():\n    cases = int(input())\n    length = []\n    array = []\n    for i in range(cases):\n        length.append(int(input()))\n        array.append(list(map(int, input().split())))\n    for i in range(len(array)):\n        maximum = array[i][0]\n        output = 0\n        if array[i][0] < 0:\n            positive = False\n        else:\n            positive = True\n        for j in range(len(array[i])):\n            if positive:\n                if array[i][j] < 0:\n                    positive = False\n                    output += maximum\n                    maximum = array[i][j]\n                elif array[i][j] > maximum:\n                    maximum = array[i][j]\n            elif array[i][j] > 0:\n                positive = True\n                output += maximum\n                maximum = array[i][j]\n            elif array[i][j] > maximum:\n                maximum = array[i][j]\n        output += maximum\n        print(output)\nalternating()", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    nums = list(map(int, sys.stdin.readline().split()))\n    tot = 0\n    neg = nums[0] < 0\n    maxn = nums[0]\n    nums += [-nums[-1]]\n    for num in nums:\n        if num < 0:\n            if neg:\n                if maxn < num:\n                    maxn = num\n            else:\n                neg = True\n                tot += maxn\n                maxn = num\n        elif not neg:\n            if maxn < num:\n                maxn = num\n        else:\n            neg = False\n            tot += maxn\n            maxn = num\n    print(tot)", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    test = int(input())\n    for _ in range(test):\n        n = int(input())\n        ara = [int(num) for num in input().split()]\n        if ara[0] < 0:\n            sign = -1\n        else:\n            sign = 1\n        ans = 0\n        current = ara[0]\n        for num in ara:\n            if num * sign > 0:\n                current = max(current, num)\n            else:\n                sign *= -1\n                ans += current\n                current = num\n        ans += current\n        print(ans)\nmain()", "def solve(n, seq):\n    nextState = None\n    tempSum = 0\n    maxSum = 0\n    for x in seq:\n        if nextState == None:\n            if x < 0:\n                nextState = 'P'\n            else:\n                nextState = 'N'\n            tempSum = x\n        elif x > 0:\n            if nextState == 'P':\n                maxSum += tempSum\n                tempSum = x\n                nextState = 'N'\n            elif x > tempSum:\n                tempSum = x\n        elif x < 0:\n            if nextState == 'N':\n                maxSum += tempSum\n                tempSum = x\n                nextState = 'P'\n            elif x > tempSum:\n                tempSum = x\n    maxSum += tempSum\n    return maxSum\nn = int(input())\nfor x in range(n):\n    m = int(input())\n    seq2 = list(map(int, input().split()))\n    print(solve(m, seq2))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    res = [l[0]]\n    total = 0\n    for i in l[1:]:\n        if i > 0 and res[-1] < 0 or (i < 0 and res[-1] > 0):\n            total += max(res)\n            res.clear()\n            res.append(i)\n        else:\n            res.append(i)\n    print(total + max(res))", "count = int(input())\ngroups = []\nfor i in range(count):\n    le = int(input())\n    massive = list(map(int, input().split()))\n    maxi = massive[0]\n    if maxi < 0:\n        sign = '-'\n    else:\n        sign = '+'\n    cur = 1\n    group = []\n    while cur != le:\n        if massive[cur] > 0:\n            if sign == '+':\n                if maxi < massive[cur]:\n                    maxi = massive[cur]\n            elif sign == '-':\n                group.append(maxi)\n                maxi = massive[cur]\n                sign = '+'\n        if massive[cur] < 0:\n            if sign == '-':\n                if maxi < massive[cur]:\n                    maxi = massive[cur]\n            elif sign == '+':\n                group.append(maxi)\n                maxi = massive[cur]\n                sign = '-'\n        cur += 1\n    group.append(maxi)\n    g = 0\n    for x in group:\n        g += x\n    groups.append(g)\nfor x in groups:\n    print(x)", "def solve():\n    n = int(input())\n    lis = input().split()\n    lis = [int(i) for i in lis]\n    sum = 0\n    curr = ''\n    recent = 0\n    for i in range(n):\n        if lis[i] > 0:\n            if curr == '' or curr == 'neg':\n                recent = lis[i]\n                sum += recent\n                curr = 'pos'\n            elif lis[i] > recent:\n                sum -= recent\n                recent = lis[i]\n                sum += recent\n        elif curr == '' or curr == 'pos':\n            recent = lis[i]\n            sum += recent\n            curr = 'neg'\n        elif lis[i] > recent:\n            sum -= recent\n            recent = lis[i]\n            sum += recent\n    print(sum)\n    return\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "import sys, random, bisect\nfrom collections import deque, defaultdict\nfrom heapq import heapify, heappop, heappush\nmod = int(1000000000.0 + 7)\ninf = int(1e+20)\ninput = lambda : sys.stdin.readline().rstrip()\nmi = lambda : map(int, input().split())\nli = lambda : list(mi())\nii = lambda : int(input())\npy = lambda : print('YES')\npn = lambda : print('NO')\nt = ii()\nfor _ in range(t):\n    n = ii()\n    arr = li()\n    res = arr[0]\n    pre = -arr[0]\n    for a in arr:\n        if a * pre > 0:\n            pre = max(pre, a)\n        else:\n            res += pre\n            pre = a\n    print(res + pre)", "from sys import stdin, exit\ninput = stdin.readline\n\ndef i():\n    return input()\n\ndef ii():\n    return int(input())\n\ndef iis():\n    return map(int, input().split())\n\ndef liis():\n    return list(map(int, input().split()))\n\ndef print_array(a):\n    print(' '.join(map(str, a)))\nt = ii()\nfor _ in range(t):\n    n = ii()\n    a = liis()\n    soma = 0\n    positive = True\n    maxi = 0\n    for i in a:\n        if positive:\n            if i > 0:\n                maxi = max(maxi, i)\n            else:\n                soma += maxi\n                positive = False\n                maxi = i\n        elif i < 0:\n            maxi = max(maxi, i)\n        else:\n            soma += maxi\n            positive = True\n            maxi = i\n    soma += maxi\n    print(soma)", "import sys\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    for _ in range(II()):\n        inf = 10 ** 16\n        n = II()\n        aa = LI()\n        pos = aa[0] > 0\n        mx = -inf\n        s = 0\n        for a in aa:\n            if pos:\n                if a > 0:\n                    mx = max(mx, a)\n                else:\n                    s += mx\n                    mx = a\n                    pos = False\n            elif a < 0:\n                mx = max(mx, a)\n            else:\n                s += mx\n                mx = a\n                pos = True\n        s += mx\n        print(s)\nmain()", "MOD = 10 ** 9 + 7\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 9)\n\ndef main():\n    test = int(input())\n    for iteration in range(test):\n        n = int(input())\n        arr = [int(i) for i in input().split()]\n        sum = 0\n        if arr[0] > 0:\n            max_pos = arr[0]\n            max_neg = MOD * -1\n            prev = 'pos'\n        else:\n            max_neg = arr[0]\n            max_pos = 0\n            prev = 'neg'\n        for i in range(1, n):\n            if arr[i] > 0:\n                if prev == 'pos':\n                    if arr[i] > max_pos:\n                        max_pos = arr[i]\n                else:\n                    sum += max_neg\n                    max_pos = arr[i]\n                    max_neg = MOD * -1\n                prev = 'pos'\n            else:\n                if prev == 'neg':\n                    if arr[i] > max_neg:\n                        max_neg = arr[i]\n                else:\n                    sum += max_pos\n                    max_neg = arr[i]\n                    max_pos = 0\n                prev = 'neg'\n        if prev == 'pos':\n            sum += max_pos\n        else:\n            sum += max_neg\n        print(sum)\nmain()", "t = int(input())\nAns = ''\nfor p in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    last = a[0]\n    best = last\n    for num in a:\n        if last > 0:\n            if num < 0:\n                best += num\n                last = num\n            elif num > last:\n                best = best - last + num\n                last = num\n        if last < 0:\n            if num > 0:\n                best += num\n                last = num\n            elif num > last:\n                best = best - last + num\n                last = num\n    Ans += str(best) + '\\n'\nprint(Ans)", "import sys\nt = int(input())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    arr = list(map(int, sys.stdin.readline().split()))\n    ans = []\n    val = arr[0]\n    if val > 0:\n        flag = 1\n    else:\n        flag = 0\n    for i in arr:\n        if flag:\n            if i > val:\n                val = i\n            elif i < 0:\n                ans.append(val)\n                val = i\n                flag = 0\n        elif i > 0:\n            ans.append(val)\n            val = i\n            flag = 1\n        elif i > val:\n            val = i\n    if len(ans):\n        if ans[-1] != val:\n            ans.append(val)\n    if len(ans):\n        print(sum(ans))\n    else:\n        print(max(arr))", "from itertools import *\nfor s in [*open(0)][2::2]:\n    print(sum((max(g) for (k, g) in groupby(map(int, s.split()), key=lambda x: x > 0))))", "def msms(a):\n    rmax = a[0]\n    ss = rmax\n    for i in range(1, len(a)):\n        if a[i] * rmax < 0:\n            ss += a[i]\n            rmax = a[i]\n            continue\n        if a[i] > rmax:\n            ss += a[i] - rmax\n            rmax = a[i]\n    return ss\nrl = []\nfor i in range(int(input())):\n    _ = int(input())\n    a = list(map(int, input().split()))\n    rl.append(msms(a))\n[print(r) for r in rl]", "from itertools import groupby\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = 0\n    for (key, group) in groupby(s.split(), str.isdigit):\n        ans += max(map(int, group))\n    print(ans)", "for t in range(0, int(input())):\n    Sm = p = lst = 0\n    l = 1\n    input()\n    for i in map(int, input().split()):\n        if p > 0 and i > 0 or (p < 0 and i < 0):\n            if i > lst:\n                Sm += i - lst\n                lst = i\n        else:\n            l += 1\n            Sm += i\n            lst = i\n        p = i\n    print(Sm)", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    i = 0\n    while i < n:\n        k = 0\n        while i < n and a[i] > 0:\n            if a[i] > k:\n                k = a[i]\n            i += 1\n        b.append(k)\n        k = -10 ** 10\n        while i < n and a[i] < 0:\n            if a[i] > k:\n                k = a[i]\n            i += 1\n        if k > -10 ** 10:\n            b.append(k)\n    print(sum(b))", "from itertools import *\nfor s in [*open(0)][2::2]:\n    print(sum((max(g) for (k, g) in groupby(map(int, s.split()), key=lambda x: x > 0))))", "from itertools import *\nfor s in [*open(0)][2::2]:\n    print(sum((max(map(int, g)) for (k, g) in groupby(s.split(), key=str.isdigit))))", "import sys\ninput = sys.stdin.readline\na = int(input())\nfor x in range(a):\n    b = int(input())\n    c = list(map(int, input().split()))\n    j = 0\n    for y in range(b):\n        if c[y] < 0:\n            j += 1\n    if j == b:\n        print(max(c))\n    else:\n        n = -1\n        if c[0] > 0:\n            n = 0\n        s = -9999999999999\n        p = 0\n        for y in range(b):\n            if n == 0:\n                if c[y] > 0:\n                    if s < c[y]:\n                        s = c[y]\n                elif c[y] < 0:\n                    p += s\n                    s = c[y]\n                    n = -1\n            elif n == -1:\n                if c[y] < 0:\n                    if c[y] > s:\n                        s = c[y]\n                else:\n                    p += s\n                    s = c[y]\n                    n = 0\n        p += s\n        print(p)", "def answer():\n    s = 0\n    if a[0] >= 0:\n        p = True\n    else:\n        p = False\n    m = a[0]\n    for v in a[1:]:\n        if v < 0 and p:\n            s += m\n            m = v\n            p = False\n        if v > 0 and (not p):\n            s += m\n            m = v\n            p = True\n        if v > 0:\n            m = max(m, v)\n        else:\n            m = max(m, v)\n    s += m\n    return s\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(answer())", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    L = []\n    L.append(a[0])\n    for i in range(1, n):\n        if a[i] >= 0:\n            if L[-1] >= 0:\n                if a[i] > L[-1]:\n                    L.remove(L[-1])\n                    L.append(a[i])\n                else:\n                    continue\n            else:\n                L.append(a[i])\n        elif L[-1] >= 0:\n            L.append(a[i])\n        elif a[i] > L[-1]:\n            L.remove(L[-1])\n            L.append(a[i])\n        else:\n            continue\n    print(sum(L))", "for _ in range(int(input())):\n    (n, a) = (int(input()), list(map(int, input().split())))\n    m = a[0]\n    summa = 0\n    for i in range(1, len(a)):\n        if (a[i] > 0) == (a[i - 1] > 0):\n            if a[i] > m:\n                m = a[i]\n        else:\n            summa += m\n            m = a[i]\n    print(summa + m)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    summ = 0\n    keep = l[0]\n    for i in range(n - 1):\n        if l[i] * l[i + 1] < 0:\n            summ += keep\n            keep = l[i + 1]\n        elif l[i + 1] > keep:\n            keep = l[i + 1]\n    print(summ + keep)", "for _ in range(int(input())):\n    a = int(input())\n    b = [int(i) for i in input().split()]\n    maxc = 0\n    minc = 0\n    ans = 0\n    for i in range(a):\n        if b[i] > 0:\n            ans += minc\n            minc = 0\n            if maxc != 0 and maxc < b[i]:\n                maxc = b[i]\n            elif maxc == 0:\n                maxc = b[i]\n        else:\n            ans += maxc\n            maxc = 0\n            if minc != 0 and minc < b[i]:\n                minc = b[i]\n            elif minc == 0:\n                minc = b[i]\n    print(ans + maxc + minc)", "def check(p, q):\n    if p * q > 0:\n        return True\n    return False\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    l = [a[0]]\n    for i in range(1, n):\n        if check(l[-1], a[i]):\n            if l[-1] < a[i]:\n                l[-1] = a[i]\n        else:\n            l.append(a[i])\n    print(sum(l))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = 0\n    r = 1\n    b = list()\n    c = list()\n    b.append(a[l])\n    if n == 1:\n        print(a[0])\n    else:\n        while l < n and r < n:\n            while r < n and a[r] * a[l] > 0:\n                b.append(a[r])\n                r += 1\n            c.append(max(b))\n            l = r\n            if l < n:\n                b = [a[l]]\n            r += 1\n        if l < n and a[l] * a[l - 1] < 0:\n            c.append(a[l])\n        print(sum(c))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    aux = a[0]\n    sum = 0\n    for num in a:\n        if num * aux > 0:\n            aux = max(num, aux)\n        else:\n            sum += aux\n            aux = num\n    sum += aux\n    print(sum)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    summa = 0\n    x = a[0]\n    for j in a:\n        if x * j < 0:\n            summa += x\n            x = j\n        x = max(x, j)\n    summa += x\n    print(summa)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    pos = []\n    neg = []\n    res = 0\n    i = 0\n    while i < n:\n        if a[i] < 0:\n            neg.append(a[i])\n            if len(pos) > 0:\n                res += max(pos)\n                pos.clear()\n        else:\n            pos.append(a[i])\n            if len(neg) > 0:\n                res += max(neg)\n                neg.clear()\n        i += 1\n    if len(pos) > 0:\n        res += max(pos)\n    if len(neg) > 0:\n        res += max(neg)\n    print(res)", "kl = int(input())\nfor l in range(kl):\n    n = int(input())\n    t = 0\n    s = 0\n    for i in input().split():\n        i = int(i)\n        if t * i > 0:\n            t = max(t, i)\n        else:\n            s += t\n            t = i\n    print(s + t)", "from collections import defaultdict, deque\nfrom heapq import heappush, heappop\nfrom bisect import bisect_left, bisect_right\nimport sys, random, itertools, math\nsys.setrecursionlimit(10 ** 5)\ninput = sys.stdin.readline\nsqrt = math.sqrt\n\ndef LI():\n    return list(map(int, input().split()))\n\ndef LF():\n    return list(map(float, input().split()))\n\ndef LI_():\n    return list(map(lambda x: int(x) - 1, input().split()))\n\ndef II():\n    return int(input())\n\ndef IF():\n    return float(input())\n\ndef S():\n    return input().rstrip()\n\ndef LS():\n    return S().split()\n\ndef IR(n):\n    return [II() for _ in range(n)]\n\ndef LIR(n):\n    return [LI() for _ in range(n)]\n\ndef FR(n):\n    return [IF() for _ in range(n)]\n\ndef LFR(n):\n    return [LI() for _ in range(n)]\n\ndef LIR_(n):\n    return [LI_() for _ in range(n)]\n\ndef SR(n):\n    return [S() for _ in range(n)]\n\ndef LSR(n):\n    return [LS() for _ in range(n)]\nmod = 1000000007\ninf = float('INF')\n\ndef solve(x):\n    a = LI()\n    ans = 0\n    tern = a[0] > 0\n    tmp = [a[0]]\n    for i in range(1, x):\n        if tern:\n            if a[i] > 0:\n                tmp.append(a[i])\n            else:\n                ans += max(tmp)\n                tmp = [a[i]]\n                tern = 0\n        elif a[i] < 0:\n            tmp.append(a[i])\n        else:\n            ans += max(tmp)\n            tmp = [a[i]]\n            tern = 1\n    print(ans + max(tmp))\n    return\nfor _ in range(II()):\n    solve(II())", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    pos = 1\n    if arr[0] < 0:\n        pos = 0\n        mn = arr[0]\n    else:\n        mx = arr[0]\n    su = 0\n    for a in arr[1:]:\n        if pos == 1:\n            if a > 0 and mx < a:\n                mx = a\n            elif a < 0:\n                su += mx\n                mx = 0\n                pos = 0\n                mn = a\n        elif a < 0 and mn < a:\n            mn = a\n        elif a > 0:\n            su += mn\n            mn = -10000000000000\n            pos = 1\n            mx = a\n    if pos == 1:\n        su += mx\n    else:\n        su += mn\n    print(su)", "import sys\ninp = sys.stdin.readline\nread = lambda : list(map(int, inp().split()))\n\ndef a():\n    ans = ''\n    for _ in range(int(inp())):\n        n = int(inp())\n        s = '11'\n        while n % int(s, 2) != 0:\n            s += '1'\n        ans += str(n // int(s, 2)) + '\\n'\n    print(ans)\n\ndef b():\n    ans = ''\n    for _ in range(int(inp())):\n        n = int(inp())\n        if not n // 2 % 2:\n            ans += 'YES\\n'\n            arr = [[], []]\n            for i in range(1, n + 2):\n                if i != (n + 2) // 2:\n                    arr[i % 2].append(str(i))\n            ans += ' '.join(arr[0] + arr[1]) + '\\n'\n        else:\n            ans += 'NO\\n'\n    print(ans)\n\ndef c():\n    ans = ''\n    for _ in range(int(inp())):\n        n = int(inp())\n        arr = read() + [0]\n        s = 0\n        m = arr[0]\n        for i in range(1, n + 1):\n            if arr[i] < 0 < arr[i - 1] or arr[i] > 0 > arr[i - 1] or arr[i] == 0:\n                s += m\n                m = arr[i]\n            else:\n                m = max(arr[i], m)\n        ans += str(s) + '\\n'\n    print(ans)\nc()", "t = int(input())\nres = []\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().strip().split()]\n    res_t = []\n    t_g = []\n    t_l = []\n    for i in arr:\n        if i < 0:\n            if t_g:\n                res_t.append(max(t_g))\n                t_g = []\n            t_l.append(i)\n        else:\n            if t_l:\n                res_t.append(max(t_l))\n                t_l = []\n            t_g.append(i)\n    if t_g:\n        res_t.append(max(t_g))\n    if t_l:\n        res_t.append(max(t_l))\n    res.append(res_t)\nfor r in res:\n    print(sum(r))", "num_test_cases = int(input())\nns = []\nlists = []\nfor i in range(num_test_cases):\n    ns.append(int(input()))\n    lists.append([int(s) for s in input().split(' ')])\nfor (n, a) in zip(ns, lists):\n    b = [a[0]]\n    for ai in a[1:]:\n        if ai * b[-1] > 0:\n            b[-1] = max(ai, b[-1])\n        else:\n            b.append(ai)\n    print(sum(b))", "def main():\n    n_s = int(input())\n    for x in range(n_s):\n        int(input())\n        sec = list(map(int, input().split(' ')))\n        ant = sec[0]\n        max = ant\n        sum = 0\n        for n in sec[1:]:\n            if ant * n > 0:\n                if n > max:\n                    max = n\n            else:\n                sum += max\n                max = n\n            ant = n\n        print(sum + max)\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l[0] > 0:\n        positive = True\n    else:\n        positive = False\n    ans = [l[0]]\n    for i in l[1:]:\n        if positive == True and i < 0:\n            ans.append(i)\n            positive = False\n        elif positive == True and ans[-1] < i:\n            ans[-1] = i\n        elif positive == False and i > 0:\n            ans.append(i)\n            positive = True\n        elif positive == False and ans[-1] < i:\n            ans[-1] = i\n    print(sum(ans))", "def solve():\n    n = int(input())\n    ar = [int(i) for i in input().split()]\n    s = 0\n    m = ar[0]\n    for i in ar[1:]:\n        if m > 0 and i > 0 or (m < 0 and i < 0):\n            if m < i:\n                m = i\n        else:\n            s += m\n            m = i\n    s += m\n    return s\ntc = int(input())\nfor i in range(tc):\n    print(solve())", "def func1(n, A):\n    som = 0\n    a = int(A[0])\n    for i in range(1, n):\n        inte_i = int(A[i])\n        if a > 0 and inte_i > 0:\n            if inte_i > a:\n                a = inte_i\n        elif a < 0 and inte_i < 0:\n            if a < inte_i:\n                a = inte_i\n        else:\n            som += a\n            a = inte_i\n    som += a\n    print(som)\nnumber_test = input()\nfor i in range(int(number_test)):\n    size = input()\n    array = input().split()\n    func1(int(size), list(array))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    prev = arr[0]\n    ans = 0\n    for elem in arr[1:]:\n        if prev ^ elem < 0:\n            ans += prev\n            prev = elem\n        elif elem > prev:\n            prev = elem\n    ans += prev\n    print(ans)", "from itertools import groupby\n\ndef read_int():\n    return int(input().strip())\n\ndef read_ints():\n    return list(map(int, input().strip().split(' ')))\n(POSITIVE, NEGATIVE) = (0, 1)\n\ndef get_key(a):\n    return POSITIVE if a > 0 else NEGATIVE\n\ndef solve():\n    n = read_int()\n    arr = read_ints()\n    S = 0\n    for (_, numbers) in groupby(arr, key=get_key):\n        S += max(numbers)\n    return S\nT = read_int()\nfor _ in range(T):\n    print(solve())", "t = int(input())\nanslist = []\nfor i in range(t):\n    n = int(input())\n    li = list(map(int, input().split()))\n    key = li[0]\n    total = li[0]\n    for i in range(1, n):\n        if li[i] > 0 and li[i - 1] > 0 or (li[i] < 0 and li[i - 1] < 0):\n            if li[i] > key:\n                total = total + li[i] - key\n                key = li[i]\n        else:\n            total = total + li[i]\n            key = li[i]\n    anslist.append(total)\nfor i in anslist:\n    print(i)", "def subseq(n, A):\n    count = 0\n    state = 0\n    last = A[0]\n    if A[0] > 0:\n        state = 1\n    for i in range(1, n):\n        if state == 0:\n            if A[i] > 0:\n                count += last\n                last = A[i]\n                state = 1\n            elif A[i] > last:\n                last = A[i]\n        elif A[i] > 0:\n            if A[i] > last:\n                last = A[i]\n        else:\n            count += last\n            last = A[i]\n            state = 0\n    return count + last\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(subseq(n, arr))", "st = ''\n\ndef func(n, l):\n    s = i = 0\n    while i < n:\n        j = i\n        m1 = 0\n        m2 = -1000000000\n        while i < n and l[i] < 0:\n            m2 = max(m2, l[i])\n            i += 1\n        if j != i:\n            s += m2\n        j = i\n        while i < n and l[i] > 0:\n            m1 = max(m1, l[i])\n            i += 1\n        if j != i:\n            s += m1\n    return s\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    st += str(func(n, l)) + '\\n'\nprint(st)", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    temp = [arr[0]]\n    sign = 1 if temp[0] > 0 else -1\n    maxArr = []\n    for i in range(1, n):\n        if sign * arr[i] < 0:\n            sign *= -1\n            maxArr.append(max(temp))\n            temp = []\n        temp.append(arr[i])\n    if len(temp) > 0:\n        maxArr.append(max(temp))\n    print(sum(maxArr))\nt = int(input())\nfor i in range(t):\n    solve()", "t = int(input())\n\ndef f(n, l):\n    a = l[0]\n    sum = 0\n    for i in l:\n        if a // i < 0:\n            sum += a\n            a = i\n        elif a < i:\n            a = i\n        else:\n            continue\n    print(sum + a)\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    f(n, l)", "el = int(input())\nfor x in range(el):\n    nums = int(input())\n    ch = 0\n    tempval = 0\n    count = 0\n    for y in input().split(' '):\n        temp = int(y)\n        if ch == -1:\n            if temp > 0:\n                ch = 1\n                count = count + tempval\n                tempval = temp\n            elif temp > tempval:\n                tempval = temp\n        elif ch == 1:\n            if temp < 0:\n                ch = -1\n                count = count + tempval\n                tempval = temp\n            elif temp > tempval:\n                tempval = temp\n        else:\n            tempval = temp\n            if temp > 0:\n                ch = 1\n            else:\n                ch = -1\n    print(count + tempval)", "def get_max_sum_subseq(sequence):\n    max_subseq = [sequence[0]]\n    for element in sequence:\n        if is_different_sign(max_subseq[-1], element):\n            max_subseq.append(element)\n        else:\n            max_subseq[-1] = max(max_subseq[-1], element)\n    return sum(max_subseq)\n\ndef is_different_sign(element1, element2):\n    return element2 < 0 < element1 or element1 < 0 < element2\nsequences = []\nfor i in range(int(input())):\n    _ = input()\n    sequences.append([int(s) for s in input().split()])\nmax_subseqs = [str(get_max_sum_subseq(s)) for s in sequences]\nprint('\\n'.join(max_subseqs), sep='')", "def maximum_subsequence(l):\n    n = len(l)\n    b = [[]]\n    b[-1].append(l[0])\n    if l[0] > 0:\n        a = 1\n    else:\n        a = -1\n    for i in range(1, n):\n        if a == 1:\n            if l[i] > 0:\n                b[-1].append(l[i])\n            else:\n                b.append([l[i]])\n                a = -1\n        elif l[i] < 0:\n            b[-1].append(l[i])\n        else:\n            b.append([l[i]])\n            a = 1\n    s = 0\n    for j in b:\n        s += max(j)\n    return s\n\ndef maximum_subsequence1(l):\n    n = len(l)\n    if l[0] > 0:\n        a = 1\n    else:\n        a = -1\n    g = l[0]\n    s = 0\n    for i in range(1, n):\n        if a == 1:\n            if l[i] > 0:\n                if l[i] > g:\n                    g = l[i]\n            else:\n                s += g\n                g = l[i]\n                a = -1\n        elif l[i] < 0:\n            if l[i] > g:\n                g = l[i]\n        else:\n            s += g\n            g = l[i]\n            a = 1\n    return s + g\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(maximum_subsequence1(l))", "def solution(t):\n    for i in range(t):\n        input()\n        m1 = [int(x) for x in input().split()]\n        last = count = 0\n        sign = -1 if m1[0] > 0 else 1\n        for v in m1:\n            t = 1 if v > 0 else -1\n            if t != sign:\n                last = v\n                sign = t\n                count += v\n            elif v > last:\n                count -= last\n                last = v\n                count += v\n        print(count)\n\ndef main():\n    t = int(input())\n    solution(t)\nmain()", "import sys\ninput = sys.stdin.readline\nins = lambda : input().rstrip()\nini = lambda : int(input().rstrip())\ninm = lambda : map(int, input().split())\ninl = lambda : list(map(int, input().split()))\nout = lambda x: print('\\n'.join(map(str, x)))\nans = []\nt = ini()\nfor _ in range(t):\n    n = ini()\n    a = inl()\n    count = 0\n    tmp = a[0]\n    prev = True if a[0] > 0 else False\n    for i in range(1, n):\n        actual = True if a[i] > 0 else False\n        if actual == prev:\n            tmp = max(tmp, a[i])\n        else:\n            count += tmp\n            tmp = a[i]\n        prev = actual\n    ans.append(count + tmp)\nout(ans)", "import sys\ninput = sys.stdin.readline\nins = lambda : input().rstrip()\nini = lambda : int(input().rstrip())\ninm = lambda : map(int, input().split())\ninl = lambda : list(map(int, input().split()))\nout = lambda x: print('\\n'.join(map(str, x)))\nans = []\nt = ini()\nfor _ in range(t):\n    n = ini()\n    a = inl()\n    count = 0\n    tmp = a[0]\n    prev = True if a[0] > 0 else False\n    for i in range(1, n):\n        actual = True if a[i] > 0 else False\n        if actual == prev:\n            tmp = max(tmp, a[i])\n        else:\n            count += tmp\n            tmp = a[i]\n        prev = actual\n    ans.append(count + tmp)\nprint('\\n'.join(map(str, ans)))", "def solution():\n    n = int(input())\n    for _ in range(n):\n        m = int(input())\n        nums = list(map(int, input().split()))\n        current_max = nums[0]\n        i = 1\n        negative = False\n        if current_max < 0:\n            negative = True\n        result_sum = 0\n        while i < m:\n            if negative:\n                if nums[i] > 0:\n                    result_sum += current_max\n                    current_max = nums[i]\n                    negative = False\n                elif nums[i] > current_max:\n                    current_max = nums[i]\n            elif nums[i] < 0:\n                result_sum += current_max\n                current_max = nums[i]\n                negative = True\n            elif nums[i] > current_max:\n                current_max = nums[i]\n            i += 1\n        result_sum += current_max\n        print(result_sum)\nsolution()", "for i in range(int(input())):\n    n = int(input())\n    L = list(map(int, input().split()))\n    sum = 0\n    a = L[0]\n    for i in L:\n        if a // i < 0:\n            sum += a\n            a = i\n        if a < i:\n            a = i\n    print(sum + a)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().rstrip().split()))\n    pos = 0\n    neg = 0\n    i = 0\n    while i < n:\n        if a[i] > 0:\n            pos = a[i]\n            j = i + 1\n            while j < n and a[j] > 0:\n                if a[j] > pos:\n                    pos = a[j]\n                j += 1\n            neg += pos\n            i = j\n        elif a[i] < 0:\n            pos = a[i]\n            j = i + 1\n            while j < n and a[j] < 0:\n                if a[j] > pos:\n                    pos = a[j]\n                j += 1\n            neg += pos\n            i = j\n    print(neg)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (s, m) = (0, l[0])\n    for i in range(1, n):\n        if m * l[i] < 0:\n            s += m\n            m = l[i]\n        elif m < l[i]:\n            m = l[i]\n    s += m\n    print(s)", "for t in range(int(input())):\n    n = int(input())\n    L = [int(X) for X in input().split()]\n    list = [L[0]]\n    for i in range(1, n):\n        if list[-1] > 0:\n            if L[i] > 0 and L[i] > list[-1]:\n                list[-1] = L[i]\n            elif L[i] < 0:\n                list.append(L[i])\n        elif L[i] < 0 and L[i] > list[-1]:\n            list[-1] = L[i]\n        elif L[i] > 0:\n            list.append(L[i])\n    print(sum(list))", "def convert(list):\n    n = len(list)\n    if n == 1:\n        return list[0]\n    else:\n        s = 0\n        i = 0\n        while i < n - 1:\n            if list[i] * list[i + 1] < 0:\n                s += list[i]\n                i += 1\n            elif list[i] < 0:\n                min = list[i]\n                j = 1\n                while i + j < n and list[i + j] < 0:\n                    if list[i + j] > min:\n                        min = list[i + j]\n                        j += 1\n                    else:\n                        j += 1\n                else:\n                    s += min\n                    i += j\n            else:\n                max = list[i]\n                j = 0\n                while i + j < n and list[i + j] > 0:\n                    if list[i + j] > max:\n                        max = list[i + j]\n                        j += 1\n                    else:\n                        j += 1\n                else:\n                    s += max\n                    i += j\n        else:\n            if list[-1] * list[-2] < 0:\n                s += list[-1]\n                return s\n            else:\n                return s\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().rstrip().split()))\n    ans = convert(arr)\n    print(ans)", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    i = 0\n    while i < n:\n        k = 0\n        while i < n and a[i] > 0:\n            if a[i] > k:\n                k = a[i]\n            i += 1\n        b.append(k)\n        if i < n and a[i] < 0:\n            k = -10 ** 9\n            while i < n and a[i] < 0:\n                if a[i] > k:\n                    k = a[i]\n                i += 1\n            b.append(k)\n    print(sum(b))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    p = []\n    i = 0\n    while i < n:\n        if l[i] > 0:\n            mx = 0\n            while i < n and l[i] > 0:\n                mx = max(mx, l[i])\n                i += 1\n            p.append(mx)\n        else:\n            mx = -10 ** 9\n            while i < n and l[i] < 0:\n                mx = max(mx, l[i])\n                i += 1\n            p.append(mx)\n    print(sum(p))", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.append(-a[-1])\n    pre_index = 0\n    sum = 0\n    for j in range(n):\n        if a[j] * a[j + 1] < 0:\n            sum += max(a[pre_index:j + 1])\n            pre_index = j + 1\n    print(sum)", "for i in range(int(input())):\n    n = int(input())\n    data = list(map(int, input().split()))\n    for j in range(n):\n        if j == 0:\n            if data[j] > 0:\n                flag = 0\n            else:\n                flag = 1\n            temp = data[j]\n            sum = 0\n        if flag == 0:\n            if data[j] > temp:\n                temp = data[j]\n            if j < n - 1:\n                if data[j + 1] < 0:\n                    flag = 1\n                    sum = sum + temp\n                    temp = data[j + 1]\n            else:\n                sum = sum + temp\n        else:\n            if data[j] > temp:\n                temp = data[j]\n            if j < n - 1:\n                if data[j + 1] > 0:\n                    flag = 0\n                    sum = sum + temp\n                    temp = data[j + 1]\n            else:\n                sum = sum + temp\n    print(sum)", "import math\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    nums = []\n    pos_max = 0\n    neg_max = -10 ** 10\n    if len(a) == 1:\n        return a[0]\n    for i in range(1, n):\n        if a[i] > 0 and a[i - 1] > 0:\n            pos_max = max(pos_max, a[i], a[i - 1])\n        elif a[i] < 0 and a[i - 1] < 0:\n            neg_max = max(neg_max, a[i], a[i - 1])\n        elif a[i] > 0 and a[i - 1] < 0:\n            neg_max = max(neg_max, a[i - 1])\n            pos_max = a[i]\n            nums.append(neg_max)\n        elif a[i] < 0 and a[i - 1] > 0:\n            pos_max = max(pos_max, a[i - 1])\n            neg_max = a[i]\n            nums.append(pos_max)\n    if len(nums) == 0:\n        nums.append(max(a))\n    elif nums[-1] < 0:\n        nums.append(pos_max)\n    elif nums[-1] > 0:\n        nums.append(neg_max)\n    return sum(nums)\nt = int(input())\nwhile t > 0:\n    t -= 1\n    print(solve())", "cases = int(input().strip())\nfor case in range(cases):\n    n = int(input().strip())\n    accepted_numbers = []\n    numbers = [int(x) for x in input().strip().split(' ')]\n    same_sign = []\n    for number in numbers:\n        if len(same_sign) == 0:\n            same_sign += [number]\n        elif same_sign[0] * number < 0:\n            accepted_numbers += [max(same_sign)]\n            same_sign = [number]\n        else:\n            same_sign += [number]\n    accepted_numbers += [max(same_sign)]\n    print(sum(accepted_numbers))", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    temp = []\n    ans = 0\n    val = l[0] // abs(l[0])\n    for i in range(len(l)):\n        if l[i] // abs(l[i]) == val:\n            temp.append(l[i])\n        else:\n            ans += max(temp)\n            temp = [l[i]]\n            val = -val\n    if temp:\n        ans = ans + max(temp)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    groups = []\n    i = 0\n    while i < len(A):\n        t = []\n        while i < len(A) and A[i] < 0:\n            t.append(A[i])\n            i += 1\n        if t:\n            groups.append(max(t))\n        t = []\n        while i < len(A) and A[i] > 0:\n            t.append(A[i])\n            i += 1\n        if t:\n            groups.append(max(t))\n    print(sum(groups))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = 0\n    val = arr[0]\n    for i in range(1, n):\n        if arr[i] > 0 and arr[i - 1] < 0:\n            s += val\n            val = arr[i]\n        elif arr[i] < 0 and arr[i - 1] > 0:\n            s += val\n            val = arr[i]\n        else:\n            val = max(val, arr[i])\n    s += val\n    print(s)", "def F(a, lst):\n    ans = 0\n    cur = []\n    lst.append(1)\n    for i in range(1, len(lst)):\n        if abs(lst[i]) / lst[i] == abs(lst[i - 1]) / lst[i - 1]:\n            cur.append(lst[i - 1])\n        else:\n            cur.append(lst[i - 1])\n            ans += max(cur)\n            cur = []\n    if cur != []:\n        cur.append(lst[-1])\n        ans += max(cur)\n        cur = []\n    return ans\nn = int(input())\nfor i in range(n):\n    a = int(input())\n    lst = list(map(int, input().split()))\n    print(F(a, lst))", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    s = 0\n    (i, j) = (0, 0)\n    while j != n - 1:\n        if (a[j] > 0) == (a[j + 1] > 0):\n            j += 1\n        else:\n            s += max(a[i:j + 1])\n            j += 1\n            i = j\n    s += max(a[i:j + 1])\n    print(s)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mx = a[0]\n    ans = 0\n    for i in range(n - 1):\n        if a[i] > 0 and a[i + 1] < 0 or (a[i] < 0 and a[i + 1] > 0):\n            ans += mx\n            mx = a[i + 1]\n        mx = max(a[i + 1], mx)\n    ans += mx\n    print(ans)"]