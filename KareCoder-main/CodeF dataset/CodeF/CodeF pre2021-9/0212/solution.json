["from itertools import accumulate\nfor _ in range(int(input())):\n    n = int(input())\n    A = list(accumulate(map(int, input().split()), initial=0))\n    m = int(input())\n    B = list(accumulate(map(int, input().split()), initial=0))\n    print(max(0, max(A) + max(0, max(B))))", "t = int(input())\n\ndef arrayMax(a):\n    maxi = 0\n    value = 0\n    for x in a:\n        value += x\n        if value > maxi:\n            maxi = value\n    return maxi\nwhile t > 0:\n    t -= 1\n    ans = 0\n    a = input()\n    ans += arrayMax(list(map(int, input().split())))\n    b = input()\n    ans += arrayMax(list(map(int, input().split())))\n    print(ans)", "from itertools import accumulate\nt = int(input())\nwhile t > 0:\n    t -= 1\n    n = input()\n    MPR = max(accumulate(map(int, input().split(' '))))\n    m = input()\n    MPB = max(accumulate(map(int, input().split(' '))))\n    print(max(0, MPR, MPB, MPR + MPB))", "def take(a):\n    l = list(map(int, input().split()))\n    v = 0\n    n = l[0]\n    if n > v:\n        v = n\n    for t in range(a - 1):\n        n += l[t + 1]\n        if n > v:\n            v = n\n    return v\nfor _ in range(int(input())):\n    l1 = []\n    l2 = []\n    a = int(input())\n    v = take(a)\n    b = int(input())\n    vv = take(b)\n    print(v + vv)", "def solve(r, b):\n    r = [0] + r\n    b = [0] + b\n    for i in range(1, len(r)):\n        r[i] = r[i - 1] + r[i]\n    for i in range(1, len(b)):\n        b[i] = b[i - 1] + b[i]\n    answer = max(r) + max(b)\n    return 0 if answer <= 0 else answer\n\ndef main():\n    test_cases = int(input())\n    for _ in range(test_cases):\n        input()\n        r = list(map(int, input().split()))\n        input()\n        b = list(map(int, input().split()))\n        print(solve(r, b), end='\\n')\nmain()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (c1, s1) = (0, 0)\n    input()\n    for i in map(int, input().split()):\n        c1 += i\n        if s1 < c1:\n            s1 = c1\n    (c2, s2) = (0, 0)\n    input()\n    for i in map(int, input().split()):\n        c2 += i\n        if s2 < c2:\n            s2 = c2\n    print(s1 + s2)", "def leftmss(x):\n    summ = 0\n    maxsum = 0\n    for i in x:\n        summ += i\n        maxsum = summ if summ > maxsum else maxsum\n    return maxsum\nt = int(input())\nans = []\nfor _ in range(t):\n    n = int(input())\n    r = list(map(int, input().split(' ')))\n    m = int(input())\n    b = list(map(int, input().split(' ')))\n    rsum = leftmss(r)\n    bsum = leftmss(b)\n    rbsum = rsum + bsum\n    ans.append(max(rsum, bsum, rbsum))\nfor i in range(t):\n    print(ans[i])", "import sys\nimport math\n\ndef solve(arr, n):\n    s = 0\n    acc = 0\n    for x in arr:\n        acc += x\n        if acc > 0:\n            s += acc\n            acc = 0\n    return s\nlines = [list(map(int, line.split())) for line in sys.stdin.readlines()]\nlines.pop(0)\ni = 1\nwhile lines:\n    n = lines[0][0]\n    r = lines[1]\n    m = lines[2][0]\n    b = lines[3]\n    while r and r[-1] < 0:\n        r.pop(-1)\n    while b and b[-1] < 0:\n        b.pop(-1)\n    R = solve(r, n) if r else 0\n    B = solve(b, m) if b else 0\n    print(R + B)\n    i += 1\n    lines = lines[4:]", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    r = list(map(int, stdin.readline().split()))\n    m = int(stdin.readline())\n    b = list(map(int, stdin.readline().split()))\n    (mr, mb) = (r[0], b[0])\n    (cr, cb) = (r[0], b[0])\n    for i in r[1:]:\n        cr += i\n        if cr > mr:\n            mr = cr\n    for i in b[1:]:\n        cb += i\n        if cb > mb:\n            mb = cb\n    print(max(0, mr + mb, mr, mb))", "t = int(input())\nres = []\n\ndef maxser(a, n):\n    m = 0\n    s = a[0]\n    if s > m:\n        m = s\n    for i in range(1, n):\n        s += a[i]\n        if s > m:\n            m = s\n    return m\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    res.append(maxser(a, n) + maxser(b, m))\nfor i in res:\n    print(i)", "t = int(input())\n\ndef sumbest(a, l):\n    s = 0\n    sbest = 0\n    for i in range(l):\n        s += a[i]\n        if s > sbest:\n            sbest = s\n    return sbest\nfor _ in range(t):\n    n = int(input())\n    red = list(map(int, input().split()))\n    m = int(input())\n    blue = list(map(int, input().split()))\n    print(sumbest(red, n) + sumbest(blue, m))", "def kadane(l):\n    m = max(l)\n    if m <= 0:\n        return 0\n    maxi = 0\n    add = 0\n    for i in l:\n        add += i\n        if add > maxi:\n            maxi = add\n    return maxi\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = int(input())\n    l1 = list(map(int, input().split()))\n    n1 = kadane(l)\n    n2 = kadane(l1)\n    print(n1 + n2)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    lis1 = list(map(int, input().split()))\n    m = int(input())\n    lis2 = list(map(int, input().split()))\n    p_max = -1000000\n    s = 0\n    for j in lis1:\n        s = s + j\n        if s > p_max:\n            p_max = s\n        else:\n            pass\n    p2_max = -1000000\n    s = 0\n    for j in lis2:\n        s = s + j\n        if s > p2_max:\n            p2_max = s\n        else:\n            pass\n    if p_max <= 0 and p2_max > 0:\n        print(p2_max)\n    elif p2_max <= 0 and p_max > 0:\n        print(p_max)\n    elif p_max <= 0 and p2_max <= 0:\n        print(0)\n    else:\n        print(p2_max + p_max)", "n = int(input())\n\ndef f(t):\n    ans = [0]\n    ans.append(t[0])\n    for i in range(1, len(t)):\n        ans.append(ans[i] + t[i])\n    return max(ans)\nfor i in range(n):\n    a = int(input())\n    r = list(map(int, input().split()))\n    b = int(input())\n    l = list(map(int, input().split()))\n    print(f(r) + f(l))", "def maxSumPrefix(A):\n    (Sum, maxSum) = (A[0], A[0])\n    for i in range(1, len(A)):\n        Sum += A[i]\n        if maxSum < Sum:\n            maxSum = Sum\n    return maxSum\nfor t in range(int(input())):\n    n = int(input())\n    N = [int(c) for c in input().split()]\n    m = int(input())\n    M = [int(c) for c in input().split()]\n    (maxN, maxM) = (maxSumPrefix(N), maxSumPrefix(M))\n    print(max(0, maxN, maxM, maxN + maxM))", "from typing import List\n\ndef check_max(some_list: List[int]) -> int:\n    s_max = 0\n    cum_sum = 0\n    for s in some_list:\n        cum_sum += s\n        if s_max < cum_sum:\n            s_max = cum_sum\n    return s_max\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    r = [int(item) for item in input().split(' ')]\n    m = int(input())\n    b = [int(item) for item in input().split(' ')]\n    print(check_max(r) + check_max(b))", "t = int(input())\n\ndef find_max(numbers):\n    max_count = 0\n    count = 0\n    for number in numbers:\n        count += number\n        max_count = max(max_count, count)\n    return max_count\nfor tests in range(t):\n    n = int(input())\n    redlist = list(map(int, input().split()))\n    m = int(input())\n    bluelist = list(map(int, input().split()))\n    print(find_max(redlist) + find_max(bluelist))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = int(input())\n    l1 = list(map(int, input().split()))\n    p = [l[0]]\n    for x in l[1:]:\n        p.append(p[-1] + x)\n    p1 = [l1[0]]\n    for x in l1[1:]:\n        p1.append(p1[-1] + x)\n    m1 = max(max(p), 0)\n    m2 = max(max(p1), 0)\n    print(m1 + m2)", "def solve(a, n):\n    (s, l) = (0, [])\n    for i in range(n):\n        l.append(s)\n        s += a[i]\n    l.append(s)\n    return max(l)\nfor pratyush in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    print(solve(a, n) + solve(b, m))", "case = int(input())\nfor i in range(case):\n    n = int(input())\n    nn = list(map(int, input().split()))\n    m = int(input())\n    mm = list(map(int, input().split()))\n    nnmax = 0\n    mmmax = 0\n    ncurrent = 0\n    mcurrent = 0\n    for t in range(n):\n        ncurrent += nn[t]\n        if ncurrent > nnmax:\n            nnmax = ncurrent\n    for tt in range(m):\n        mcurrent += mm[tt]\n        if mcurrent > mmmax:\n            mmmax = mcurrent\n    print(mmmax + nnmax)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    reds = list(map(int, input().split()))\n    m = int(input())\n    blues = list(map(int, input().split()))\n    prefix_red = [0]\n    prefix_blue = [0]\n    for red in reds:\n        prefix_red.append(prefix_red[-1] + red)\n    for blue in blues:\n        prefix_blue.append(prefix_blue[-1] + blue)\n    print(max(prefix_red) + max(prefix_blue))", "def maxsubsum(n, l):\n    maxsum = l[0]\n    t = l[0]\n    for i in range(1, n):\n        t = t + l[i]\n        if maxsum < t:\n            maxsum = t\n    if maxsum < 0:\n        maxsum = 0\n    return maxsum\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    r = list(map(int, input().rstrip().split()))\n    m = int(input())\n    b = list(map(int, input().rstrip().split()))\n    m1 = maxsubsum(n, r)\n    m2 = maxsubsum(m, b)\n    print(m1 + m2)", "from itertools import accumulate as acc\nfor _ in range(int(input())):\n    n = int(input())\n    a1 = list(acc(map(int, input().split())))\n    m = int(input())\n    a2 = list(acc(map(int, input().split())))\n    print(max(a1 + [0]) + max(a2 + [0]))", "from itertools import *\nf = lambda : max(0, *accumulate(map(int, input().split())))\nexec(f() * 'f();r=f();f();print(r+f());')", "def answer(n, r, m, b):\n    rsum = 0\n    max_rsum = 0\n    for i in range(len(r)):\n        rsum += r[i]\n        if rsum > max_rsum:\n            max_rsum = rsum\n    bsum = 0\n    max_bsum = 0\n    for i in range(len(b)):\n        bsum += b[i]\n        if bsum > max_bsum:\n            max_bsum = bsum\n    return max_rsum + max_bsum\n\ndef main():\n    t = int(input())\n    n = [0] * t\n    r = [0] * t\n    m = [0] * t\n    b = [0] * t\n    for j in range(t):\n        n[j] = int(input())\n        r[j] = [int(i) for i in input().split()]\n        m[j] = int(input())\n        b[j] = [int(i) for i in input().split()]\n    for j in range(t):\n        print(answer(n[j], r[j], m[j], b[j]))\nmain()", "def AddFunction(li):\n    ans = [0]\n    n = len(li)\n    a = 0\n    for i in range(n):\n        a += li[i]\n        ans.append(a)\n    return ans\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    r = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    i = 0\n    j = 0\n    ans1 = AddFunction(r)\n    ans2 = AddFunction(b)\n    print(max(ans1) + max(ans2))", "def prefixSum(array):\n    total = 0\n    maximum = 0\n    for j in range(len(array)):\n        total += array[j]\n        maximum = max(maximum, total)\n    return maximum\n\ndef listInput():\n    return list(map(int, input().split()))\n\ndef integerInput():\n    return int(input())\ntest_cases = int(input())\nfor _ in range(test_cases):\n    (n, red) = (integerInput(), listInput())\n    (m, blue) = (integerInput(), listInput())\n    print(prefixSum(red) + prefixSum(blue))", "import sys, threading, heapq\nfrom collections import defaultdict\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef main():\n    for _ in range(inp()):\n        nr = inp()\n        red = inlt()\n        nb = inp()\n        blue = inlt()\n        maxSubA = 0\n        prev = 0\n        for num in red:\n            prev += num\n            maxSubA = max(maxSubA, prev)\n        prev = 0\n        maxSubB = 0\n        for num in blue:\n            prev += num\n            maxSubB = max(maxSubB, prev)\n        print(maxSubA + maxSubB)\nmain()", "for _ in range(int(input())):\n    ans = 0\n    n1 = int(input())\n    R = list(map(int, input().split()))\n    n2 = int(input())\n    B = list(map(int, input().split()))\n    for i in range(1, n1):\n        R[i] += R[i - 1]\n    for i in range(1, n2):\n        B[i] += B[i - 1]\n    mr = max(R)\n    mb = max(B)\n    ans = mr + mb\n    if mr < 0:\n        mr = 0\n    if mb < 0:\n        mb = 0\n    ans = mr + mb\n    print(ans)", "def cnt(i, s):\n    sm = 0\n    smd = 0\n    for j in range(i):\n        smd += s[j]\n        if smd > 0:\n            sm += smd\n            smd = 0\n    return sm\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    r = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    print(cnt(n, r) + cnt(m, b))", "for _ in range(int(input())):\n    n = int(input())\n    r = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    c = 0\n    arr1 = []\n    for x in r:\n        c += x\n        arr1.append(c)\n    c = 0\n    arr2 = []\n    for x in b:\n        c += x\n        arr2.append(c)\n    print(max(arr1 + [0]) + max(arr2 + [0]))", "for _ in range(int(input())):\n    n = int(input())\n    r = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    pr = [0]\n    pb = [0]\n    for i in r:\n        pr.append(i + pr[-1])\n    for i in b:\n        pb.append(i + pb[-1])\n    ans = max(pr) + max(pb)\n    print(ans)", "def func(x):\n    s = 0\n    maxs = 0\n    for i in x:\n        s += i\n        if s > maxs:\n            maxs = s\n    return maxs\nfor t in range(int(input())):\n    n = int(input())\n    r = [int(i) for i in input().split()]\n    m = int(input())\n    b = [int(i) for i in input().split()]\n    print(func(r) + func(b))", "for _ in range(int(input())):\n    n = int(input())\n    red = list(map(int, input().split()))\n    m = int(input())\n    blue = list(map(int, input().split()))\n    temp1 = 0\n    s = 0\n    for i in red:\n        s += i\n        if s > temp1:\n            temp1 = s\n    temp2 = 0\n    s = 0\n    for i in blue:\n        s += i\n        if s > temp2:\n            temp2 = s\n    print(max(0, temp1 + temp2))", "def maxsum(r, b):\n    maxr = 0\n    s1 = 0\n    for i in range(len(r)):\n        s1 = s1 + r[i]\n        if s1 > maxr:\n            maxr = s1\n    s2 = 0\n    maxb = 0\n    for j in range(len(b)):\n        s2 = s2 + b[j]\n        if s2 > maxb:\n            maxb = s2\n    return maxr + maxb\nx = int(input())\nm = []\nfor i in range(x):\n    a = input()\n    b = input()\n    c = input()\n    d = input()\n    b1 = b.split(' ')\n    b2 = [int(t) for t in b1]\n    d1 = d.split(' ')\n    d2 = [int(t) for t in d1]\n    m.append((b2, d2))\nfor j in range(x):\n    print(maxsum(m[j][0], m[j][1]))", "def probB(n, r, m, b):\n    prefix1 = []\n    prefix2 = []\n    sum = 0\n    for i in r:\n        sum += i\n        prefix1.append(sum)\n    sum = 0\n    for j in b:\n        sum += j\n        prefix2.append(sum)\n    return max(max(prefix1) + max(prefix2), max(prefix2), max(prefix1), 0)\nt = int(input())\nfor y in range(t):\n    n = int(input())\n    A = [int(i) for i in input().split()][:n]\n    m = int(input())\n    B = [int(i) for i in input().split()][:m]\n    print(probB(n, A, m, B))", "import math\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    inp = input()\n    red = list(map(int, inp.split(' ')))\n    m = int(input())\n    inp = input()\n    blue = list(map(int, inp.split(' ')))\n    sum1 = 0\n    max1 = 0\n    for i in range(0, n):\n        sum1 += red[i]\n        if sum1 > max1:\n            max1 = sum1\n    sum2 = 0\n    max2 = 0\n    for i in range(0, m):\n        sum2 += blue[i]\n        if sum2 > max2:\n            max2 = sum2\n    print(max1 + max2)\n    t -= 1", "def vivod(max):\n    if max < 0:\n        print(0)\n    else:\n        print(max)\nfor i in range(int(input())):\n    n = int(input())\n    mass_n = list(map(int, input().split()))\n    m = int(input())\n    mass_m = list(map(int, input().split()))\n    max_1 = -100000\n    sum = 0\n    for i in range(0, n):\n        sum += mass_n[i]\n        if sum > max_1:\n            max_1 = sum\n    max_2 = -100000\n    sum = 0\n    for i in range(0, m):\n        sum += mass_m[i]\n        if sum > max_2:\n            max_2 = sum\n    if (max_1 < 0) & (max_2 > max_1):\n        vivod(max_2)\n    elif (max_2 < 0) & (max_1 > max_2):\n        vivod(max_1)\n    elif max_1 + max_2 < 0:\n        print(0)\n    else:\n        vivod(max_1 + max_2)", "from math import *\nfrom math import factorial as fact, comb as ncr\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom collections import Counter as ctr\nfrom collections import deque as dq\nfrom array import array\nfrom re import search\nli = lambda : list(map(int, input().split()))\narr = lambda a: array('i', a)\nbi = lambda n: bin(n).replace('0b', '')\nyn = lambda f: print('NYOE S'[f::2])\nsbstr = lambda a, s: search('.*'.join(a), s)\n\ndef solve():\n    for _ in range(int(input())):\n        n = int(input())\n        r = li()\n        for i in range(1, n):\n            r[i] += r[i - 1]\n        m = int(input())\n        b = li()\n        for i in range(1, m):\n            b[i] += b[i - 1]\n        print(max(max(r) + max(b), 0, max(r), max(b)))\nsolve()", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    m = int(input())\n    B = list(map(int, input().split()))\n    for i in range(1, n):\n        A[i] += A[i - 1]\n    for i in range(1, m):\n        B[i] += B[i - 1]\n    print(max(0, max(0, max(A)) + max(0, max(B))))", "tc = int(input())\nfor _ in range(tc):\n    x = int(input())\n    listred = list(map(int, input().split()))\n    maxred = []\n    countred = 0\n    y = int(input())\n    listblue = list(map(int, input().split()))\n    maxblue = []\n    countblue = 0\n    for i in listred:\n        maxred += [countred]\n        countred += i\n    maxred += [countred]\n    for i in listblue:\n        maxblue += [countblue]\n        countblue += i\n    maxblue += [countblue]\n    print(max(maxred) + max(maxblue))", "def main():\n    for _ in range(int(input())):\n        dp = [0, 0]\n        for i in range(2):\n            res = 0\n            input()\n            for j in map(int, input().split()):\n                res += j\n                dp[i] = max(dp[i], res)\n        print(sum(dp))\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    R = list(map(int, input().split()))\n    m = int(input())\n    B = list(map(int, input().split()))\n    ma1 = ma2 = 0\n    curr = 0\n    for i in range(n):\n        curr += R[i]\n        ma1 = max(ma1, curr)\n    curr = 0\n    for i in range(m):\n        curr += B[i]\n        ma2 = max(ma2, curr)\n    return max(ma1 + ma2, 0)\nfor _ in range(int(input())):\n    print(solve())", "for _ in range(int(input())):\n    ans = 0\n    for i in range(2):\n        n = int(input())\n        l = list(map(int, input().split(' ')))\n        for j in range(1, n):\n            l[j] += l[j - 1]\n        ans += max(0, max(l))\n    print(ans)\narr_inp = lambda : list(map(int, input().split()))\nsp_inp = lambda : map(int, input().split())\nstr_inp = lambda : input()", "import math\nimport collections\nimport itertools\nimport functools\n\ndef fun(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    m = int(input())\n    b = list(map(int, input().split(' ')))\n    sumi = 0\n    m1 = 0\n    for i in range(n):\n        sumi += a[i]\n        m1 = max(m1, sumi)\n    sumi = 0\n    m2 = 0\n    for i in range(m):\n        sumi += b[i]\n        m2 = max(m2, sumi)\n    print(max(m1 + m2, max(m1, max(0, m2))))\nfor tc in range(int(input())):\n    fun(tc)", "for _ in range(0, int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    if n > m:\n        t = a\n        a = b\n        b = t\n    a += [0] * abs(m - n)\n    tot = 0\n    atot = 0\n    btot = 0\n    for (x, y) in zip(a, b):\n        atot += x\n        btot += y\n        if atot > 0:\n            tot += atot\n            atot = 0\n        if btot > 0:\n            tot += btot\n            btot = 0\n    print(tot)", "t = int(input())\n\ndef dp(arr):\n    prev = 0\n    for i in range(len(arr) - 1, -1, -1):\n        prev = max(0, prev + arr[i])\n    return prev\nfor k in range(t):\n    r = int(input())\n    red = list(map(int, input().split(' ')))\n    b = int(input())\n    blue = list(map(int, input().split(' ')))\n    print(dp(red) + dp(blue))", "from itertools import *\nf = lambda : max(0, *accumulate(map(int, input().split())))\nexec(f() * 'f();r=f();f();print(r+f());')", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    ln = list(map(int, input().split()))\n    for y in range(1, n):\n        ln[y] += ln[y - 1]\n    m = int(input())\n    lm = list(map(int, input().split()))\n    for y in range(1, m):\n        lm[y] += lm[y - 1]\n    print(max([0, max(lm) + max(ln), max(lm), max(ln)]))", "answer = ''\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    r = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    for _ in range(1, n):\n        r[_] += r[_ - 1]\n    for _ in range(1, m):\n        b[_] += b[_ - 1]\n    max_total = max(0, max(r), max(b), max(r) + max(b))\n    answer += '%d\\n' % max_total\nprint(answer.strip())", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    r = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    r_max = 0\n    r_curr = 0\n    for q in range(n):\n        r_curr += r[q]\n        if r_curr > r_max:\n            r_max = r_curr\n    b_max = 0\n    b_curr = 0\n    for q in range(m):\n        b_curr += b[q]\n        if b_curr > b_max:\n            b_max = b_curr\n    print(b_max + r_max)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    r = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    nums = []\n    nums1 = []\n    a = 0\n    e = 0\n    for k in range(len(r)):\n        a += r[k]\n        nums.append(a)\n    for d in range(len(b)):\n        e += b[d]\n        nums1.append(e)\n    w = max(0, max(nums)) + max(0, max(nums1))\n    print(w)", "for i in range(int(input())):\n    input()\n    n = list(map(int, input().split()))\n    input()\n    m = list(map(int, input().split()))\n    n1 = [0]\n    m1 = [0]\n    n2 = 0\n    m2 = 0\n    for z in n:\n        n2 += int(z)\n        n1.append(n2)\n    for j in m:\n        m2 += int(j)\n        m1.append(m2)\n    print(max(n1) + max(m1))", "for k in range(int(input())):\n    answer = 0\n    for i in range(2):\n        n = int(input())\n        l = list(map(int, input().split(' ')))\n        for j in range(1, n):\n            l[j] += l[j - 1]\n        answer += max(0, max(l))\n    print(answer)", "def rb(n, r, m, b):\n    (p1, p2) = (0, 0)\n    (sum1, sum2) = (0, 0)\n    for i in r:\n        sum1 += i\n        if p1 <= sum1:\n            p1 = sum1\n    for j in b:\n        sum2 += j\n        if p2 <= sum2:\n            p2 = sum2\n    return p1 + p2\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    r = [int(i) for i in input().split()]\n    m = int(input())\n    b = [int(i) for i in input().split()]\n    print(rb(n, r, m, b))", "import sys\nsys.setrecursionlimit(1000000)\nfrom collections import defaultdict, deque, Counter\nfrom itertools import permutations\nfrom math import sqrt, gcd, pi, factorial\nfrom functools import reduce\nfrom sys import stdin\nfrom bisect import bisect_right, bisect_left\nfrom copy import copy\n\ndef calc(x):\n    n = len(x)\n    ret = [0 for _ in range(n + 1)]\n    for i in range(n):\n        ret[i + 1] = x[i] + ret[i]\n    return max(ret)\n\ndef solve(n, r, m, b):\n    return calc(r) + calc(b)\nt = int(input())\nanss = [0 for _ in range(t)]\nfor i in range(t):\n    n = int(input())\n    r = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    anss[i] = solve(n, r, m, b)\nfor ans in anss:\n    print(ans)", "def solve():\n    n = int(input())\n    r = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    res = 0\n    prev = 0\n    maxim = 0\n    for el in r:\n        prev += el\n        maxim = max(maxim, prev)\n    res += maxim\n    prev = 0\n    maxim = 0\n    for el in b:\n        prev += el\n        maxim = max(maxim, prev)\n    res += maxim\n    print(res)\n    return\nt = int(input())\nfor _ in range(t):\n    solve()", "from itertools import *\nf = lambda : max(0, *accumulate(map(int, input().split())))\nexec(f() * 'f();r=f();f();print(r+f());')", "def max_sum(l):\n    (s, s1) = (l[0], l[0])\n    for i in l[1:]:\n        s1 += i\n        if s < s1:\n            s = s1\n    return s\nfor _ in range(int(input())):\n    n = int(input())\n    l1 = [int(i) for i in input().split()]\n    m = int(input())\n    l2 = [int(i) for i in input().split()]\n    (max1, max2) = (max_sum(l1), max_sum(l2))\n    print(max(0, max1, max2, max1 + max2))", "def max(l, len):\n    max = 0\n    total = 0\n    for i in range(len):\n        total += l[i]\n        if total > max:\n            max = total\n    return max\nfor i in range(int(input())):\n    size_red = int(input())\n    red = list(map(lambda x: int(x), input().split(' ')))\n    size_blue = int(input())\n    blue = list(map(lambda x: int(x), input().split(' ')))\n    print(max(red, size_red) + max(blue, size_blue))", "innum = lambda : int(input())\ninmul = lambda : map(int, input().split())\ninstr = lambda : str(input())\ninarr = lambda : list(map(int, input().split()))\n\ndef solve():\n    n = innum()\n    a = inarr()\n    m = innum()\n    b = inarr()\n    mxa = 0\n    mxb = 0\n    s = 0\n    for i in a:\n        s += i\n        mxa = max(mxa, s)\n    s = 0\n    for i in b:\n        s += i\n        mxb = max(mxb, s)\n    print(mxa + mxb)\n\ndef main():\n    t = 1\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "import random\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        r = list(map(int, input().split()))\n        m = int(input())\n        b = list(map(int, input().split()))\n        i = 0\n        j = 0\n        s = 0\n        while i != n:\n            if r[i] >= 0:\n                s += r[i]\n                i += 1\n            else:\n                sr = 0\n                while i != n and sr <= 0:\n                    sr += r[i]\n                    i += 1\n                if sr > 0:\n                    s += sr\n        while j != m:\n            if b[j] >= 0:\n                s += b[j]\n                j += 1\n            else:\n                sb = 0\n                while j != m and sb <= 0:\n                    sb += b[j]\n                    j += 1\n                if sb > 0:\n                    s += sb\n        print(s)\nmain()", "res = ''\nfor _ in range(int(input())):\n    n = int(input())\n    reds = tuple(map(int, input().split()))\n    m = int(input())\n    blues = tuple(map(int, input().split()))\n    red_presum = [0]\n    blue_presum = [0]\n    for i in reds:\n        red_presum.append(red_presum[-1] + i)\n    for i in blues:\n        blue_presum.append(blue_presum[-1] + i)\n    res += str(max(red_presum) + max(blue_presum)) + '\\n'\nprint(res)", "n = int(input())\nfor j in range(n):\n    r = int(input())\n    red = list(map(int, input().split()))\n    b = int(input())\n    blue = list(map(int, input().split()))\n    dpr = [0] * r\n    dpb = [0] * b\n    dpr[0] = red[0]\n    dpb[0] = blue[0]\n    for i in range(1, r):\n        dpr[i] = dpr[i - 1] + red[i]\n    for i in range(1, b):\n        dpb[i] = dpb[i - 1] + blue[i]\n    print(max(max(dpb), 0) + max(max(dpr), 0))", "for i in range(int(input())):\n    n = input()\n    lst1 = list(map(int, input().split()))\n    m = input()\n    lst2 = list(map(int, input().split()))\n    s = s1 = mx1 = mx2 = 0\n    for i in lst1:\n        s += i\n        mx1 = max(mx1, s)\n    for i in lst2:\n        s1 += i\n        mx2 = max(mx2, s1)\n    print(mx1 + mx2)", "size = int(input())\nfor i in range(size):\n    size1 = int(input())\n    l1 = list(map(int, input().split()))\n    size2 = int(input())\n    l2 = list(map(int, input().split()))\n    t1 = [l1[0]]\n    for i in range(size1 - 1):\n        t1.append(t1[i] + l1[i + 1])\n    t2 = [l2[0]]\n    for i in range(size2 - 1):\n        t2.append(t2[i] + l2[i + 1])\n    print(max(0, max(t1) + max(t2), max(t1), max(t2)))", "for _ in range(int(input())):\n    n = int(input())\n    red = list(map(int, input().split()))\n    m = int(input())\n    blue = list(map(int, input().split()))\n    max_red = 0\n    max_blue = 0\n    cur_sum = 0\n    for i in range(n):\n        cur_sum += red[i]\n        max_red = max(max_red, cur_sum)\n    cur_sum = 0\n    for j in range(m):\n        cur_sum += blue[j]\n        max_blue = max(max_blue, cur_sum)\n    print(max_red + max_blue)", "a = int(input())\nfor i in range(a):\n    B = input()\n    b = list(map(int, input().split()))\n    C = input()\n    c = list(map(int, input().split()))\n    D = []\n    k = 0\n    for j in b:\n        k += j\n        D.append(k)\n    s = max(D)\n    D = []\n    k = 0\n    for j in c:\n        k += j\n        D.append(k)\n    p = max(D)\n    if p > 0 and s > 0:\n        print(s + p)\n    elif p > 0:\n        print(p)\n    elif s > 0:\n        print(s)\n    else:\n        print('0')", "for _ in range(int(input())):\n    n = int(input())\n    r = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    for i in range(1, n):\n        r[i] = r[i - 1] + r[i]\n    for i in range(1, m):\n        b[i] = b[i - 1] + b[i]\n    print(max(0, max(r)) + max(0, max(b)))", "class Solution:\n\n    def getMax(self, red, n, blue, m):\n        mx1 = 0\n        local = 0\n        for x in red:\n            local += x\n            mx1 = max(mx1, local)\n        mx2 = 0\n        local = 0\n        for x in blue:\n            local += x\n            mx2 = max(mx2, local)\n        print(mx1 + mx2)\n        return\n\ndef main():\n    t = int(input())\n    sol = Solution()\n    while t:\n        n = int(input())\n        red = list(map(int, input().strip().split()))\n        m = int(input())\n        blue = list(map(int, input().strip().split()))\n        sol.getMax(red, n, blue, m)\n        t -= 1\nmain()", "def maxSubArraySum(a, size):\n    max_so_far = 0\n    curr_max = 0\n    for i in range(size):\n        curr_max += a[i]\n        max_so_far = max(curr_max, max_so_far)\n    return max_so_far\nt = int(input())\nfor _ in range(t):\n    fans = 0\n    ans = 0\n    for _ in range(2):\n        n = int(input())\n        l = [int(x) for x in input().split()]\n        ans += max(maxSubArraySum(l, n), 0)\n    fans += ans\n    print(fans)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = int(input())\n    s = list(map(int, input().split()))\n    l1 = [0]\n    ls = 0\n    s1 = [0]\n    ss = 0\n    for i in range(n):\n        ls = ls + l[i]\n        l1.append(ls)\n    for i in range(m):\n        ss = ss + s[i]\n        s1.append(ss)\n    print(max(l1) + max(s1))", "for i in range(int(input())):\n    input()\n    n = list(map(int, input().split()))\n    input()\n    m = list(map(int, input().split()))\n    n1 = [0]\n    m1 = [0]\n    n2 = 0\n    m2 = 0\n    for z in n:\n        n2 += int(z)\n        n1.append(n2)\n    for j in m:\n        m2 += int(j)\n        m1.append(m2)\n    print(max(n1) + max(m1))", "from itertools import *\nf = lambda : max(0, *accumulate(map(int, input().split())))\nfor _ in [0] * f():\n    f()\n    r = f()\n    f()\n    print(r + f())", "def summaMax(n, r):\n    sum = 0\n    msum = 0\n    for j in range(n):\n        sum += r[j]\n        if sum > msum:\n            msum = sum\n    return msum\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    r = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    mr = summaMax(n, r)\n    mb = summaMax(m, b)\n    if mr + mb < 0:\n        print(0)\n    else:\n        print(mr + mb)", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    r = list(map(int, input().split()))\n    for i in range(1, n):\n        r[i] += r[i - 1]\n    a = max(r)\n    m = int(input())\n    b = list(map(int, input().split()))\n    for i in range(1, m):\n        b[i] += b[i - 1]\n    c = max(b)\n    print(max(0, a, c, a + c))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    r = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    p1 = [0]\n    for i in range(n):\n        p1.append(p1[-1] + r[i])\n    p2 = [0]\n    for j in range(m):\n        p2.append(p2[-1] + b[j])\n    print(max(p1) + max(p2))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    m = int(input())\n    b = list(map(int, input().strip().split()))\n    pa = [a[0]]\n    pb = [b[0]]\n    mxa = pa[0]\n    mxb = pb[0]\n    for i in range(1, n):\n        c = a[i] + pa[-1]\n        pa.append(c)\n        if mxa < c:\n            mxa = c\n    for i in range(1, m):\n        d = b[i] + pb[-1]\n        pb.append(d)\n        if mxb < d:\n            mxb = d\n    if mxa >= 0 and mxb >= 0:\n        print(mxa + mxb)\n    elif mxa < 0 and mxb >= 0:\n        print(mxb)\n    elif mxa >= 0 and mxb < 0:\n        print(mxa)\n    else:\n        print(0)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    for (idx, n) in enumerate(a[1:], 1):\n        a[idx] = a[idx - 1] + n\n    for (idx, n) in enumerate(b[1:], 1):\n        b[idx] = b[idx - 1] + n\n    print(max(0, max(a) + max(b), max(a), max(b)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    r = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    sm_mx = 0\n    num_list = []\n    sm = 0\n    for j in range(n):\n        sm += r[j]\n        num_list.append(sm)\n    if max(num_list) > 0:\n        sm_mx += max(num_list)\n    num_list = []\n    sm = 0\n    for j in range(m):\n        sm += b[j]\n        num_list.append(sm)\n    if max(num_list) > 0:\n        sm_mx += max(num_list)\n    print(sm_mx)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    r = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    sm_mx = 0\n    num_list = []\n    sm = 0\n    for j in range(n):\n        sm += r[j]\n        num_list.append(sm)\n    if max(num_list) > 0:\n        sm_mx += max(num_list)\n    num_list = []\n    sm = 0\n    for j in range(m):\n        sm += b[j]\n        num_list.append(sm)\n    if max(num_list) > 0:\n        sm_mx += max(num_list)\n    print(sm_mx)", "for _ in range(int(input())):\n    n = int(input())\n    r = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    ans_r = 0\n    sum_r = 0\n    for i in r:\n        sum_r += i\n        ans_r = max(ans_r, sum_r)\n    ans_b = 0\n    sum_b = 0\n    for i in b:\n        sum_b += i\n        ans_b = max(ans_b, sum_b)\n    print(ans_b + ans_r)", "import sys\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef solve():\n    for t in range(int(input())):\n        n = int(input())\n        r = list(map(int, input().split()))\n        m = int(input())\n        b = list(map(int, input().split()))\n        s = 0\n        rs = [0]\n        for i in r:\n            s += i\n            rs.append(s)\n        s = 0\n        bs = [0]\n        for i in b:\n            s += i\n            bs.append(s)\n        print(max(rs) + max(bs))\nsolve()", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef st():\n    return input().rstrip('\\n')\n\ndef lis():\n    return list(map(int, input().split()))\n\ndef maa():\n    return map(int, input().split())\nt = inp()\nwhile t:\n    t -= 1\n    n = inp()\n    a = lis()\n    m = inp()\n    b = lis()\n    p1 = [0]\n    p2 = [0]\n    for i in a:\n        p1.append(p1[-1] + i)\n    for i in b:\n        p2.append(p2[-1] + i)\n    print(max(p1) + max(p2))", "def readInt():\n    return int(input())\n\ndef readLine():\n    return [int(s) for s in input().split(' ')]\n\ndef readString():\n    return input()\n\ndef ask(a, b):\n    maxsuma = 0\n    suma = 0\n    for x in a:\n        suma += x\n        if suma > maxsuma:\n            maxsuma = suma\n    maxsumb = 0\n    sumb = 0\n    for x in b:\n        sumb += x\n        if sumb > maxsumb:\n            maxsumb = sumb\n    return maxsuma + maxsumb\nt = readInt()\nfor _ in range(t):\n    a = readInt()\n    aa = readLine()\n    b = readInt()\n    bb = readLine()\n    print(ask(aa, bb))", "def solve(r, b, n, m):\n    ri = []\n    bi = []\n    for i in range(n):\n        try:\n            ri.append(ri[-1] + r[i])\n        except:\n            ri.append(r[0])\n    for i in range(m):\n        try:\n            bi.append(bi[-1] + b[i])\n        except:\n            bi.append(b[0])\n    return max(0, max(ri), max(bi), max(ri) + max(bi))\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    r = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    print(solve(r, b, n, m))", "maxint = 9223372036854775807\n\ndef maxSubArraySum(a, size):\n    max_so_far = 0\n    max_ending_here = 0\n    for i in range(0, size):\n        max_ending_here = max_ending_here + a[i]\n        if max_so_far < max_ending_here:\n            max_so_far = max_ending_here\n    return max_so_far\nfor i in range(int(input())):\n    n = int(input())\n    r = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    print(maxSubArraySum(r, n) + maxSubArraySum(b, m))", "def ccc(l):\n    ans = [0]\n    m = 0\n    for i in l:\n        m += i\n        ans.append(m)\n    return max(ans)\n\ndef solve():\n    n = int(input())\n    ln = list(map(int, input().split()))\n    m = int(input())\n    lm = list(map(int, input().split()))\n    return max(0, ccc(ln) + ccc(lm))\nfor _ in range(int(input())):\n    print(solve())", "from sys import stdin\ninput = stdin.readline\n\ndef checkMax(l):\n    ans = [0]\n    m = 0\n    for i in l:\n        m += i\n        ans.append(m)\n    return max(ans)\n\ndef solve():\n    n = int(input())\n    ln = list(map(int, input().split()))\n    m = int(input())\n    lm = list(map(int, input().split()))\n    return max(0, checkMax(ln) + checkMax(lm))\nfor _ in range(int(input())):\n    print(solve())", "import itertools\nfor _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    m = int(input())\n    y = list(map(int, input().split()))\n    a = list(itertools.accumulate(x))\n    b = list(itertools.accumulate(y))\n    print(max(0, max(a)) + max(0, max(b)))", "def massivy(n, r):\n    sum = 0\n    msum = 0\n    for j in range(n):\n        sum += r[j]\n        if sum > msum:\n            msum = sum\n    return msum\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    r = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    mr = massivy(n, r)\n    mb = massivy(m, b)\n    if mr + mb < 0:\n        print(0)\n    else:\n        print(mr + mb)", "def fun(arr):\n    mx = 0\n    cs = 0\n    for x in arr:\n        cs += x\n        if cs > mx:\n            mx = cs\n    return mx\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = fun(arr)\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans += fun(arr)\n    print(ans)\n    t -= 1", "def solve(a):\n    maxv = 0\n    c = 0\n    for i in a:\n        c = c + i\n        if c > maxv:\n            maxv = c\n    return maxv\nt = int(input().strip())\nfor _ in range(t):\n    rn = int(input().strip())\n    r = list(map(int, input().strip().split()))\n    bn = int(input().strip())\n    b = list(map(int, input().strip().split()))\n    print(solve(r) + solve(b))", "def summax(l):\n    n = len(l)\n    (sumy, maxy) = (0, 0)\n    for i in range(n):\n        sumy += l[i]\n        if sumy > maxy:\n            maxy = sumy\n    return maxy\nn1 = int(input())\nfor _ in range(n1):\n    n2 = int(input())\n    p = input()\n    x = [int(num) for num in p.split()]\n    n3 = int(input())\n    q = input()\n    y = [int(num) for num in q.split()]\n    print(summax(x) + summax(y))", "def max_value(list_1, list_2):\n    max_1 = 0\n    sum_1 = 0\n    max_2 = 0\n    sum_2 = 0\n    for item_1 in list_1:\n        sum_1 = sum_1 + item_1\n        if max_1 < sum_1:\n            max_1 = sum_1\n    for item_2 in list_2:\n        sum_2 = sum_2 + item_2\n        if max_2 < sum_2:\n            max_2 = sum_2\n    return max_1 + max_2\nfor i in range(0, int(input())):\n    input()\n    list_1 = [int(x) for x in input().split()]\n    input()\n    list_2 = [int(x) for x in input().split()]\n    print(max_value(list_1, list_2))", "from itertools import accumulate\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l1 = [int(i) for i in input().split()]\n    m = int(input())\n    l2 = [int(i) for i in input().split()]\n    l1 = accumulate(l1)\n    l2 = accumulate(l2)\n    print(max(0, max(l1)) + max(0, max(l2)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    aa = 0\n    bb = 0\n    c = 0\n    for i in range(n):\n        a[i] += c\n        c = a[i]\n    c = 0\n    for j in range(m):\n        b[j] += c\n        c = b[j]\n    aa = max(0, max(a))\n    bb = max(0, max(b))\n    print(aa + bb)"]