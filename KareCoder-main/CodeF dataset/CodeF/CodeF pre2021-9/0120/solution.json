["from math import ceil\nfor t in range(int(input())):\n    (n, k) = map(int, input().split())\n    result = list(range(ceil(k / 2), k)) + list(range(k + 1, n + 1))\n    result = list(map(str, result))\n    string = ' '.join(result)\n    print(len(result))\n    print(string)", "t = int(input())\n(x1, x2) = ([], [])\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    m = [i for i in range((k + 1) // 2, n + 1)]\n    m.remove(k)\n    x1.append(len(m))\n    x2.append(' '.join(map(str, m)))\nfor (i, j) in zip(x1, x2):\n    print(i)\n    print(j)", "def solve(n, k):\n    number_set = list(range((k + 1) // 2, k)) + list(range(k + 1, n + 1))\n    print(len(number_set))\n    print(' '.join(map(str, number_set)))\n\ndef anti_knapsack():\n    for _ in range(int(input())):\n        (n, k) = input().split()\n        solve(int(n), int(k))\nanti_knapsack()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    li = list(range((k + 1) // 2, k)) + list(range(k + 1, n + 1))\n    print(len(li))\n    print(' '.join(map(str, li)))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k % 2 == 0:\n        a = int(k / 2)\n        print(n - k + a)\n        if n - k + a == 0:\n            continue\n    else:\n        a = k // 2 + 1\n        print(n - k + a - 1)\n        if n - k + a - 1 == 0:\n            continue\n    l = [j for j in range(a, k)] + [l for l in range(k + 1, n + 1)]\n    pr = ' '.join((str(ele) for ele in l))\n    print(pr)", "for _ in [*open(0)][1:]:\n    (n, k) = map(int, _.split())\n    print(n - (k + 1) // 2)\n    print(' '.join([str(i) for i in range((k + 1) // 2, k)]) + ' ' + ' '.join([str(j) for j in range(k + 1, n + 1)]))", "def find_numbers(n, k):\n    numbers = list(range(1, n + 1))\n    k -= 1\n    result = numbers[k + 1:]\n    half_numbers = numbers[k // 2:k]\n    result += half_numbers\n    return result\n\ndef main():\n    numbers = int(input())\n    results = []\n    for i in range(numbers):\n        (n, k) = list(map(int, input().split(' ')))\n        results.append(find_numbers(n, k))\n    for r in results:\n        print(len(r))\n        if len(r) != 0:\n            print(' '.join(map(str, r)))\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        res = list(range(2, n + 1))\n    elif k == 2:\n        res = [1] + list(range(3, n + 1))\n    else:\n        res = list(range((k + 1) // 2, k)) + list(range(k + 1, n + 1))\n    print(len(res))\n    print(' '.join(map(str, res)))\nfor i in range(int(input())):\n    solve()", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    li = []\n    li = [str(i) for i in range(math.ceil(k / 2), k) if i != 0]\n    li += [str(i) for i in range(k + 1, n + 1)]\n    print(len(li))\n    if len(li) == 0:\n        pass\n    else:\n        print(' '.join(li))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(n - (k + 1) // 2)\n    subset = list(range((k + 1) // 2, n + 1))\n    subset.pop(k // 2)\n    print(' '.join(map(str, subset)))", "def solve():\n    (n, k) = map(int, input().split())\n    print(n - k + k // 2)\n    final_list = []\n    if n == 1:\n        return\n    elif k % 2 == 0:\n        for i in range(int(k / 2), n + 1):\n            final_list.append(i)\n        final_list.remove(k)\n    elif k % 2 == 1:\n        for i in range(k // 2 + 1, n + 1):\n            final_list.append(i)\n        final_list.remove(k)\n    print(' '.join(map(str, final_list)))\n\ndef main():\n    for case in range(int(input())):\n        solve()\nmain()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(n - (k + 1) // 2)\n    subset = list(range((k + 1) // 2, n + 1))\n    subset.pop(k // 2)\n    print(' '.join(map(str, subset)))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    li = list(range((k + 1) // 2, k)) + list(range(k + 1, n + 1))\n    print(len(li))\n    print(' '.join(map(str, li)))", "t = int(input())\nwhile t > 0:\n    (n, k) = list(map(int, input().split()))\n    if k % 2 == 0:\n        res = [i for i in range(k // 2, n + 1)]\n    else:\n        res = [i for i in range(k // 2 + 1, n + 1)]\n    if k in res:\n        res.remove(k)\n    print(len(res))\n    print(' '.join(map(str, res)))\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    res = [str(i) for i in range((k + 1) // 2, k)] + [str(i) for i in range(k + 1, n + 1)]\n    print(len(res))\n    print(' '.join(res))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    count = 0\n    answer = [str(i) for i in range((k + 1) // 2, k)]\n    answer += [str(i) for i in range(k + 1, n + 1)]\n    print(len(answer))\n    if len(answer) != 0:\n        print(' '.join(answer))\n    else:\n        print()", "from math import ceil\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    c = [i for i in range(n + 1)]\n    for i in range(ceil(k / 2)):\n        c.remove(i)\n    c.remove(k)\n    print(len(c))\n    print(' '.join(map(str, c)))", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    subset = []\n    for i in range(ceil(k / 2), k):\n        subset.append(str(i))\n    for i in range(k + 1, n + 1):\n        subset.append(str(i))\n    print(len(subset))\n    print(' '.join(subset))", "t = int(input())\nfor i in range(t):\n    s = input().split(' ')\n    n = int(s[0])\n    k = int(s[1])\n    m = k // 2\n    if k % 2 != 0:\n        m += 1\n    s = ''\n    c = 0\n    for j in range(m, n + 1):\n        if j != k:\n            c += 1\n            s += str(j) + ' '\n    if c != 0:\n        print(c)\n        print(s[:-1])\n    else:\n        print(0)", "import math\nimport sys\nimport itertools\nimport fractions\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nfor t in wtf[1:]:\n    (n, k) = map(int, t.split())\n    N = math.ceil(k / 2) - 1\n    ans = []\n    for i in range(1, n + 1):\n        if i <= N or i == k:\n            continue\n        ans.append(i)\n    if len(ans) > 0:\n        print(f'{len(ans)}' + '\\n' + ' '.join(map(str, ans)))\n    else:\n        print(len(ans))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(range((k + 1) // 2, k)) + list(range(k + 1, n + 1))\n    print(len(a))\n    print(' '.join(map(str, a)))", "def answer(n, k):\n    lst = []\n    for i in range(1, n + 1):\n        if i == k:\n            pass\n        elif i <= k // 2 and k % 2 == 1:\n            pass\n        elif i < k // 2 and k % 2 == 0:\n            pass\n        else:\n            lst.append(i)\n    print(len(lst))\n    print(' '.join(map(str, lst)))\n    return\n\ndef main():\n    t = int(input())\n    n = [0] * t\n    k = [0] * t\n    for j in range(t):\n        (n[j], k[j]) = [int(i) for i in input().split()]\n    for j in range(t):\n        answer(n[j], k[j])\nmain()", "from math import ceil\nresults = []\nt = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    numbers = list(range(k + 1, n + 1))\n    numbers += list(range(ceil(k / 2), k))\n    results.append([len(numbers), ' '.join(map(str, numbers))])\nfor item in results:\n    print(item[0])\n    if item[0] != 0:\n        print(item[1])", "import math\nfor _ in range(int(input())):\n    c = 0\n    arr = []\n    (n, k) = map(int, input().split())\n    for x in range(n, k, -1):\n        arr.append(str(x))\n        c += 1\n    for x in range(math.ceil(k / 2), k):\n        arr.append(str(x))\n        c += 1\n    if not c:\n        print(0)\n    else:\n        print(c)\n        print(' '.join(arr))", "t = int(input())\nfor i in range(t):\n    (n, k) = [int(j) for j in input().split()]\n    res = []\n    if k % 2:\n        for j in range(k // 2 + 1, k):\n            res.append(j)\n    else:\n        for j in range(k // 2, k):\n            res.append(j)\n    for j in range(k + 1, n + 1):\n        res.append(j)\n    print(len(res))\n    print(' '.join([str(j) for j in res]))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    res = []\n    if n != 1:\n        for i in range(n, k, -1):\n            if i != 0:\n                res.append(i)\n        if k % 2 == 0:\n            for i in range(k // 2, k):\n                if i != 0:\n                    res.append(i)\n        else:\n            for i in range(k // 2 + 1, k):\n                if i != 0:\n                    res.append(i)\n    print(len(res))\n    if len(res) != 0:\n        print(' '.join(map(str, res)))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(n - (k + 1) // 2)\n    subset = list(range((k + 1) // 2, n + 1))\n    subset.pop(k // 2)\n    print(' '.join(map(str, subset)))", "T = int(input())\nfor t in range(T):\n    (n, k) = map(int, input().split())\n    s = []\n    for i in range((k + 1) // 2, k):\n        s.append(i)\n    for i in range(k + 1, n + 1):\n        s.append(i)\n    print(len(s))\n    print(' '.join(map(str, s)))", "from math import ceil\nfor _ in range(int(input())):\n    (n, k) = [i for i in list(map(int, input().split()))]\n    li = [i for i in range(ceil(k / 2), n + 1)]\n    li.remove(k)\n    li = list(map(str, li))\n    print(len(li))\n    print(' '.join(li))", "t = int(input())\nfor i in range(t):\n    temp = [int(x) for x in input().split()]\n    n = temp[0]\n    k = temp[1]\n    result = []\n    if k % 2 == 0:\n        x = k // 2\n    else:\n        x = k // 2 + 1\n    for i in range(x, k):\n        result.append(i)\n    for i in range(k + 1, n + 1):\n        result.append(i)\n    result = [str(x) for x in result]\n    print(len(result))\n    print(' '.join(result))", "k = int(input())\nwhile k > 0:\n    lista = list(map(int, input().split()))\n    n = lista[0]\n    x = lista[1]\n    raspunsul = ''\n    if x % 2 == 0:\n        jos = int(x / 2)\n    else:\n        jos = int((x + 1) / 2)\n    cate = n - jos\n    print(cate)\n    if cate > 0:\n        for j in range(jos, n + 1):\n            if j != x:\n                raspunsul = raspunsul + str(j) + ' '\n        print(raspunsul)\n    k = k - 1", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    r = []\n    for i in range((k + 1) // 2, k):\n        r.append(i)\n    for i in range(k + 1, n + 1):\n        r.append(i)\n    print(len(r))\n    res = ' '.join((str(x) for x in r))\n    print(res)", "import math\n\ndef solve(n, k):\n    ans = [i for i in range(math.ceil(k / 2), k)] + [a for a in range(k + 1, n + 1)]\n    print(len(ans))\n    string = ' '.join(map(str, ans))\n    print(string)\nx = int(input())\nfor _ in range(x):\n    A = list(map(int, input().split()))\n    solve(A[0], A[1])", "def enka(n, k):\n    m = 0\n    lista = ''\n    if n > k:\n        m += n - k\n        t = k + 1\n        while t <= n:\n            lista += str(t)\n            lista += ' '\n            t += 1\n    if k % 2 == 0:\n        f = (k - 1) // 2 + 1\n    else:\n        f = (k - 1) // 2\n    m += f\n    z = k - f\n    while z < k:\n        lista += str(z)\n        lista += ' '\n        z += 1\n    print(m)\n    print(lista)\nprim = int(input())\nwhile prim > 0:\n    ucita = input().split(' ')\n    n = int(ucita[0])\n    k = int(ucita[1])\n    enka(n, k)\n    prim -= 1", "import math\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    A = math.ceil(k / 2)\n    m = n - k\n    answer = ''\n    while A < k:\n        m += 1\n        answer += str(A) + ' '\n        A += 1\n    k += 1\n    while k <= n:\n        answer += str(k) + ' '\n        k += 1\n    print(m)\n    print(answer)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = set()\n    tmp = set()\n    for x in range(1, n + 1):\n        tmp.add(x)\n    ans.add(k)\n    if k % 2:\n        for x in range(1, k // 2 + 1):\n            ans.add(x)\n    else:\n        for x in range(1, k // 2):\n            ans.add(x)\n    tmp = list(tmp - ans)\n    print(len(tmp))\n    print(' '.join(map(str, tmp)))", "T = int(input())\nfor t in range(T):\n    (n, k) = map(int, input().split())\n    start = (k + 1) // 2\n    print(n - start)\n    l = []\n    for i in range(start, n + 1):\n        if i == k:\n            continue\n        l.append(str(i))\n    print(' '.join(l))", "import math\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n    else:\n        f = 0\n        if k % 2 == 0:\n            f = math.floor(k / 2)\n        else:\n            f = math.floor(k / 2) + 1\n        lst = [i for i in range(f, k)]\n        if k != n:\n            lst = lst + [i for i in range(k + 1, n + 1)]\n        print(len(lst))\n        s = ' '.join([str(i) for i in lst])\n        print(s)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    res = []\n    for i in range((k + 1) // 2, n + 1):\n        if i != k:\n            res.append(i)\n    res = [str(i) for i in res]\n    print(len(res))\n    print(' '.join(res))", "import math\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = [j for j in range(1, n + 1)]\n    l.remove(k)\n    l = l[math.floor((k - 1) / 2):]\n    print(len(l))\n    s = ''\n    for i in l:\n        s += str(i) + ' '\n    print(s)", "import math\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    listt = [x for x in range(1, n + 1)]\n    listt.remove(k)\n    listt = listt[math.floor((k - 1) / 2):]\n    stringg = ''\n    for j in listt:\n        stringg += str(j) + ' '\n    print(len(listt))\n    print(stringg)", "t = int(input())\np = []\nq = []\nr = []\nfor i in range(t):\n    x = list(map(int, input().split()))\n    n = x[0]\n    k = x[1]\n    l = n - k\n    if k % 2 == 0:\n        l = l + k / 2\n    else:\n        l = l + (k - 1) / 2\n    p.append(int(l))\n    q.append(k)\n    r.append(n)\nfor i in range(t):\n    print(str(p[i]))\n    k = q[i]\n    n = r[i]\n    if k % 2 == 0:\n        print(' '.join((str(x) for x in range(int(k / 2), k))) + ' ' + ' '.join((str(x) for x in range(k + 1, n + 1))))\n    else:\n        print(' '.join((str(x) for x in range(int((k - 1) / 2) + 1, k))) + ' ' + ' '.join((str(x) for x in range(k + 1, n + 1))))", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    count = 0\n    s = ''\n    l = math.ceil(k / 2)\n    for i in range(l, k):\n        s = s + str(i) + ' '\n        count += 1\n    for j in range(k + 1, n + 1):\n        s = s + str(j) + ' '\n        count += 1\n    print(count)\n    print(s)", "t = int(input())\nfor j in range(t):\n    (n, k) = map(int, input().split())\n    a = ''\n    c = 0\n    for i in range(k + 1, n + 1):\n        a += '{} '.format(i)\n        c += 1\n    for i in range((k + 1) // 2, k):\n        a += '{} '.format(i)\n        c += 1\n    print(c)\n    print(a)", "import math\nimport operator as op\nfrom functools import reduce\nfrom collections import defaultdict\nfrom math import comb\nfrom sys import stdout\nNO = 'NO'\nYES = 'YES'\nMOD = 1000000007\n\ndef input_int():\n    return int(input())\n\ndef input_list():\n    return input().split(' ')\n\ndef input_list_int():\n    return list(map(int, input_list()))\n\ndef z_func(s):\n    n = len(s)\n    z = [0] * n\n    l = r = 0\n    for i in range(1, n):\n        if r >= i:\n            z[i] = min(z[i - l], r - i + 1)\n        while z[i] + i < n and s[z[i]] == s[z[i] + i]:\n            z[i] += 1\n        if i + z[i] - 1 > r:\n            l = i\n            r = i + z[i] - 1\n    return z\nglobal_ans = []\n\ndef pr(a):\n    global_ans.append(a)\n\ndef solve():\n    (n, k) = input_list_int()\n    ans = []\n    for i in range(k + 1, n + 1):\n        ans.append(i)\n    for i in range(math.ceil(k / 2), k):\n        ans.append(i)\n    pr(len(ans))\n    if len(ans):\n        pr(' '.join((str(x) for x in ans)))\nquery_count = 1\nquery_count = input_int()\nwhile query_count:\n    query_count -= 1\n    solve()\nfor global_ans_line in global_ans:\n    print(global_ans_line)", "import math\n\ndef main():\n    t = int(input())\n    result = []\n    for _ in range(t):\n        (n, k) = map(int, input().split())\n        ans = []\n        half = math.ceil(k / 2)\n        for v in range(n, 0, -1):\n            if v > k:\n                ans.append(str(v))\n            elif half <= v < k:\n                ans.append(str(v))\n        n = len(ans)\n        result.append(f\"{n}\\n{' '.join(ans)}\")\n    print('\\n'.join(result))\nmain()", "def solve(n, k):\n    nums = set(range(1, n + 1))\n    nums.discard(k)\n    for i in range(k):\n        if k - i != i and k - i in nums:\n            nums.discard(i)\n    return nums\n\ndef verify(nums, k):\n    snums = sorted(nums)\n    for i in reversed(range(len(nums))):\n        if snums[i] <= k:\n            k -= snums[i]\n    return k != 0\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    res = solve(n, k)\n    if verify(res, k):\n        print(len(res))\n        print(' '.join(map(str, res)))\n    else:\n        raise Exception", "import math\nt = int(input())\npos = 0\nwhile t:\n    pos += 1\n    t -= 1\n    (n, k) = map(int, input().split())\n    A = []\n    s = 0\n    for i in range(math.ceil(k / 2), k):\n        if i > n:\n            continue\n        A.append(i)\n    A.extend([x for x in range(k + 1, n + 1, 1)])\n    print(len(A))\n    print(' '.join(map(str, A)))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = ''\n    ans = n - k + k - (k + 1) // 2\n    for i in range(k + 1, n + 1):\n        s += str(i) + ' '\n    for i in range((k + 1) // 2, k):\n        s += str(i) + ' '\n    if n == 1:\n        ans = 0\n    print(ans)\n    print(s)", "t = int(input())\nfor k in range(t):\n    (n, k) = map(int, input().split())\n    print(n - k + k // 2)\n    s = ''\n    for i in range(k + 1, n + 1):\n        s += str(i) + ' '\n    for i in range((k + 1) // 2, k):\n        s += str(i) + ' '\n    print(s)", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    ret = list(range(k + 1 >> 1, k)) + list(range(k + 1, n + 1))\n    print(len(ret))\n    print(' '.join(map(str, ret)))", "m = int(input())\nl = []\nfor i in range(m):\n    (a, b) = map(int, input().split())\n    if b % 2 == 0:\n        j = 1\n    else:\n        j = 0\n    l.append(a - b + b // 2)\n    s = ''\n    for i in range(a, b, -1):\n        s += str(i) + ' '\n    for i in range(b, b // 2 - j, -1):\n        if i != b:\n            s += str(i) + ' '\n    l.append(s[:-1])\nfor i in l:\n    print(i)", "t = int(input())\nfor q in range(t):\n    ch = input()\n    L = [int(i) for i in ch.split()]\n    (n, k) = (L[0], L[1])\n    ch = ''\n    nb = 0\n    for i in range(k - 1, 0, -1):\n        if i <= k // 2:\n            if k % 2 == 0:\n                ch += str(k // 2) + ' '\n                nb += 1\n            break\n        ch += str(i) + ' '\n        nb += 1\n    for i in range(k + 1, n + 1):\n        ch += str(i) + ' '\n        nb += 1\n    print(nb)\n    print(ch)", "def solution(count):\n    for counting in range(count):\n        integer_list = input().split(' ')\n        integer_list = list(map(int, integer_list))\n        answer_list = []\n        n = integer_list[0]\n        k = integer_list[1]\n        for i in range(k, n):\n            now = i + 1\n            answer_list.append(now)\n        if n == 1:\n            print('0')\n            continue\n        elif k % 2 == 0:\n            for j in range(k // 2, k):\n                answer_list.append(j)\n        else:\n            for j in range(k // 2 + 1, k):\n                answer_list.append(j)\n        print(len(answer_list))\n        answer = ''\n        for i in answer_list:\n            answer = answer + str(i) + ' '\n        print(answer)\na = int(input())\nsolution(a)", "from math import ceil\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [i for i in range(n + 1)]\n    for i in range(ceil(k / 2)):\n        a.remove(i)\n    a.remove(k)\n    print(len(a))\n    print(*a)", "import sys\n\ndef inp():\n    return sys.stdin.readline().strip()\n\ndef map_inp(v_type):\n    return map(v_type, inp().split())\nfor x in range(int(inp())):\n    (n, k) = map_inp(int)\n    a = [i for i in range(n, (k + 1) // 2 - 1, -1) if i != k]\n    print(len(a))\n    print(*a)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [i for i in range((k + 1) // 2, n + 1) if i != k]\n    print(len(arr))\n    print(*arr)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [i for i in range((k + 1) // 2, n + 1) if i != k]\n    print(len(arr))\n    print(*arr)", "for _ in range(int(input())):\n    arr = [int(_) for _ in input().split()]\n    l = []\n    if arr[1] % 2 != 0:\n        for i in range(arr[0], arr[1] // 2, -1):\n            if i != arr[1]:\n                l.append(i)\n    else:\n        for i in range(arr[0], arr[1] // 2 - 1, -1):\n            if i != arr[1]:\n                l.append(i)\n    print(len(l))\n    print(*l)", "t = int(input())\nfor _ in range(t):\n    (n, k) = (int(i) for i in input().split())\n    res = [i for i in range((k + 1) // 2, k)] + [i for i in range(k + 1, n + 1)]\n    print(len(res))\n    if res:\n        print(*res)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [i for i in range((k + 1) // 2, n + 1) if i != k]\n    print(len(arr))\n    print(*arr)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [i for i in range((k + 1) // 2, n + 1) if i != k]\n    print(len(arr))\n    print(*arr)", "def main():\n    t = int(input())\n    for _ in range(t):\n        (n, k) = list(map(int, input().split()))\n        num = []\n        x = n\n        if n >= k:\n            while x != k:\n                num.append(x)\n                x -= 1\n        x -= 1\n        y = k - x\n        while x >= y:\n            num.append(x)\n            x -= 1\n            y = k - x\n        print(len(num))\n        s = ''\n        for i in range(len(num)):\n            s += str(num[i]) + ' '\n        print(s)\nmain()", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = input().split()\n    (n, k) = (int(n), int(k))\n    val = ''\n    count = 0\n    for i in range(k + 1, n + 1):\n        count += 1\n        val += str(i) + ' '\n    for i in range(k - 1, 0, -1):\n        if i + i + 1 > k:\n            val += str(i) + ' '\n            count += 1\n    print(count)\n    print(val)", "import sys\nt = int(input())\nfor i in range(0, t):\n    [n, k] = input().split()\n    n = int(n)\n    k = int(k)\n    count = 0\n    result = ''\n    for j in range(k + 1, n + 1):\n        count += 1\n        result += str(j) + ' '\n    for j in range(int((k + 1) / 2), k):\n        count += 1\n        result += str(j) + ' '\n    print(count)\n    if count > 0:\n        print(result)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = []\n    memo = {i: True for i in range(1, n + 1)}\n    for i in range(n, 0, -1):\n        if memo[i] and i != k:\n            ans.append(i)\n            if k > i:\n                memo[k - i] = False\n    print(len(ans))\n    if ans:\n        ans = list(map(str, ans))\n        print(' '.join(ans))", "def solve(n, k):\n    response = [x for x in range(k + 1, n + 1)]\n    options = [x for x in range(1, k)]\n    while options:\n        if len(options) == 1:\n            response.append(options[0])\n            del options[0]\n        elif options[0] + options[-1] == k:\n            del options[0]\n            response.append(options[-1])\n            del options[-1]\n        else:\n            response.append(options[-1])\n            del options[-1]\n    return response\nt = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    r = solve(n, k)\n    print(len(r))\n    if r:\n        print(' '.join(map(str, r)))", "import math\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = []\n    if n == 1:\n        print('0')\n    else:\n        for i in range(k + 1, n + 1):\n            a.append(i)\n        for j in range(math.ceil(k / 2), k):\n            a.append(j)\n        print(len(a))\n        print(*a)", "import math\nfor _ in range(0, int(input())):\n    (n, k) = [int(j) for j in input().split()]\n    l = []\n    for i in range(1, n + 1):\n        l.append(i)\n    a = math.ceil(k / 2) - 1\n    main = l[a:]\n    del main[main.index(k)]\n    print(len(main))\n    d = ''\n    for e in main:\n        d = str(e) + ' ' + d\n    print(d)", "t = int(input())\nfor i in range(t):\n    (n, k) = [int(w) for w in input().split()]\n    m = []\n    s = ''\n    if k % 2 != 0 or k == 1:\n        print(int(n - int(k / 2) - 1))\n    else:\n        print(int(n - int(k / 2)))\n    for j in range(k + 1, n + 1):\n        s += str(j) + ' '\n    for p in range(int((k + 1) / 2), k):\n        s += str(p) + ' '\n    print(s)", "import math\nimport sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (x, k) = map(int, input().split())\n    arr = []\n    for i in range(k + 1, x + 1):\n        arr.append(i)\n    for i in range(math.ceil(k / 2), k):\n        arr.append(i)\n    print(len(arr))\n    for i in arr:\n        print(i, end=' ')\n    print()", "t = int(input())\nfor inh in range(0, t):\n    (n, k) = map(int, input().split())\n    ans = []\n    if k != n:\n        for i in range(k + 1, n + 1):\n            ans.append(i)\n    j = k // 2\n    if k % 2 == 1:\n        j += 1\n    for i in range(j, k):\n        ans.append(i)\n    print(len(ans))\n    if len(ans) != 0:\n        print(*ans)", "import math\nt = int(input())\nfor k in range(t):\n    (n, k) = map(int, input().split(' '))\n    a = []\n    for i in range(k + 1, n + 1):\n        a.append(i)\n    b = []\n    for i in range(k - 1, 0, -1):\n        b.append(i)\n    if len(b) > 1:\n        if len(b) % 2 == 0:\n            b = b[0:len(b) // 2]\n        else:\n            b = b[0:len(b) // 2 + 1]\n    print(len(a) + len(b))\n    print(*b, *a)", "from collections import Counter, deque, defaultdict\nfrom itertools import accumulate, product, groupby\nimport operator\nimport math\nfrom functools import reduce\n\ndef solve():\n    (n, k) = [int(char) for char in input().split()]\n    right = list(range(k + 1, n + 1))\n    mid = math.ceil(k / 2)\n    left = [i for i in range(mid, k)]\n    rs = left + right\n    print(len(rs))\n    print(*rs)\nfor _ in range(int(input())):\n    solve()"]