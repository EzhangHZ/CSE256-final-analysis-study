["I = input\nans = ''\nfor _ in range(int(I())):\n    (n, k) = map(int, I().split())\n    if n < k * k or n % 2 != k % 2:\n        ans += 'NO\\n'\n    else:\n        ans += 'YES\\n'\nprint(ans)", "import sys\nI = sys.stdin.readline\nans = ''\nfor _ in range(int(I())):\n    (n, k) = map(int, I().split())\n    if n % 2 == k % 2 and k * k <= n:\n        ans += 'YES\\n'\n    else:\n        ans += 'NO\\n'\nprint(ans)", "ans = []\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k ** 2 > n or k % 2 != n % 2:\n        ans.append('NO')\n    else:\n        ans.append('YES')\nprint('\\n'.join(ans))", "import sys\ninp = sys.stdin.readline\nread = lambda : list(map(int, inp().split()))\n\ndef a():\n    ans = ''\n    for _ in range(read()[0]):\n        (n, k) = read()\n        if n % 2 == k % 2 and n >= k ** 2:\n            ans += 'YES\\n'\n        else:\n            ans += 'NO\\n'\n    print(ans)\n\ndef c():\n    pass\na()", "t = int(input())\nans = ''\nfor _ in range(t):\n    nk = input().split()\n    n = int(nk[0])\n    k = int(nk[1])\n    if (n - k) % 2 == 0 and n >= k * k:\n        ans += 'YES \\n'\n    else:\n        ans += 'NO \\n'\nprint(ans)", "for _ in [*open(0)][1:]:\n    (n, k) = map(int, _.split())\n    print(['NO', 'YES'][not (n - k) % 2 and n >= k * k])", "for b in [*open(0)][1:]:\n    (n, k) = map(int, b.split())\n    print('YNEOS'[k * k > n or k % 2 != n % 2::2])", "for f in [*open(0)][1:]:\n    (n, k) = map(int, f.split())\n    print('YNEOS'[n - k & 1 or k * k > n::2])", "for f in [*open(0)][1:]:\n    (n, k) = map(int, f.split())\n    print('YNEOS'[n - k & 1 or k * k > n::2])", "for s in [*open(0)][1:]:\n    (n, k) = map(int, s.split())\n    if n % 2 == k % 2 and k * k <= n:\n        print('YES')\n    else:\n        print('NO')", "import sys\nimport math\nfrom sys import stdin, stdout\n\ndef get_ints_in_variables():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_int():\n    return int(input())\n\ndef get_ints_in_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_of_list(n):\n    return [list(map(int, sys.stdin.readline().strip().split())) for _ in range(n)]\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef main():\n    for t in range(get_int()):\n        (n, k) = get_ints_in_variables()\n        if k * k > n:\n            print('NO')\n        elif n % 2 != k % 2:\n            print('NO')\n        else:\n            print('YES')\nmain()", "import sys\n\ndef read_strings():\n    return list(sys.stdin.readline().split())\n\ndef read_inline_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef read_multiline_ints():\n    return list(map(int, ' '.join(sys.stdin.readlines()).split()))\n\ndef convert_2d(L, cols):\n    return [L[k:k + cols] for k in range(0, len(L), 2)]\n(yes, no) = ('YES', 'NO')\n(t,) = read_inline_ints()\ntests = read_multiline_ints()\ntests = convert_2d(tests, 2)\n\ndef representable(n, k):\n    if not n % 2 == k % 2:\n        return no\n    if n < k * k:\n        return no\n    return yes\nfor (n, k) in tests:\n    print(representable(n, k))", "for f in [*open(0)][1:]:\n    (n, k) = map(int, f.split())\n    print('YNEOS'[n - k & 1 or k * k > n::2])", "import sys\nm = 10 ** 4\ntable = [None] * (m + 1)\ntable[0] = 0\nfor i in range(1, m + 1):\n    table[i] = table[i - 1] + (2 * i - 1)\n    if table[i] > 10 ** 7:\n        border = i\n        break\nt = int(sys.stdin.readline().rstrip())\n\ndef main():\n    for _ in range(t):\n        (n, k) = map(int, sys.stdin.readline().split())\n        if k >= border:\n            yield 'NO'\n        elif n < table[k] or not n & 1 == k & 1:\n            yield 'NO'\n        else:\n            yield 'YES'\nans = main()\nprint(*ans, sep='\\n')", "t = int(input())\noo = 10000\ndp = [0]\nfor i in range(1, oo):\n    dp.append(i * 2 - 1 + dp[-1])\nsol = []\nfor tc in range(t):\n    (n, k) = map(int, input().split())\n    k -= 1\n    if k < oo and n > dp[k] and (n - dp[k] > 2 * k - 1) and ((n - dp[k]) % 2 == 1):\n        sol.append('YES')\n    else:\n        sol.append('NO')\nprint('\\n'.join(sol))", "def main():\n    result = str()\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        if (n % 2 and k % 2 or (n % 2 == 0 and k % 2 == 0)) and n >= k * k:\n            result += 'YES\\n'\n        else:\n            result += 'NO\\n'\n    print(result.strip())\nmain()", "a = []\nres = ''\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    b = False\n    if k * k <= n:\n        if n % 2 == k % 2:\n            b = True\n    res += 'NYOE S'[b::2] + '\\n'\nprint(res)", "from sys import stdin\ninput = stdin.readline\n\ndef solve():\n    (n, k) = map(int, input().split())\n    print('NYOE S'[k * k <= n and n % 2 == k % 2::2])\nfor _ in ' ' * int(input()):\n    solve()", "c = int(input())\nres = ''\nfor _ in range(c):\n    (n, k) = [int(x) for x in input().split()]\n    if (n + k) % 2 == 0:\n        if n / k >= k:\n            res += 'YES\\n'\n        else:\n            res += 'NO\\n'\n    else:\n        res += 'NO\\n'\nprint('\\n' + res)", "import math, string, itertools, fractions, heapq, collections, re, array, bisect, sys, copy, functools\nsys.setrecursionlimit(10 ** 7)\ninf = 10 ** 20\neps = 1.0 / 10 ** 10\nmod = 10 ** 9 + 7\nmod2 = 998244353\ndd = [(-1, 0), (0, 1), (1, 0), (0, -1)]\nddn = [(-1, 0), (-1, 1), (0, 1), (1, 1), (1, 0), (1, -1), (0, -1), (-1, -1)]\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI():\n    return [list(map(int, l.split())) for l in sys.stdin.readlines()]\n\ndef LI_():\n    return [int(x) - 1 for x in sys.stdin.readline().split()]\n\ndef LF():\n    return [float(x) for x in sys.stdin.readline().split()]\n\ndef LS():\n    return sys.stdin.readline().split()\n\ndef I():\n    return int(sys.stdin.readline())\n\ndef F():\n    return float(sys.stdin.readline())\n\ndef S():\n    return input()\n\ndef pf(s):\n    return print(s, flush=True)\n\ndef pe(s):\n    return print(str(s), file=sys.stderr)\n\ndef JA(a, sep):\n    return sep.join(map(str, a))\n\ndef JAA(a, s, t):\n    return s.join((t.join(map(str, b)) for b in a))\n\ndef main():\n    t = I()\n    rr = []\n    for _ in range(t):\n        (n, k) = LI()\n        nk = n - k * 2 * k // 2\n        if nk % 2 == 0 and nk >= 0:\n            rr.append('YES')\n        else:\n            rr.append('NO')\n    return JA(rr, '\\n')\nprint(main())", "from sys import stdin\ninput = stdin.readline\nfor _ in ' ' * int(input()):\n    (n, k) = map(int, input().split())\n    print('NYOE S'[k * k <= n and n % 2 == k % 2::2])", "def is_possible_sum_of_odd_integers(n, k):\n    if n % 2 != k % 2:\n        return False\n    if k ** 2 > n:\n        return False\n    return True\n\ndef solve():\n    num_of_tests = int(input())\n    tests = []\n    for _ in range(0, num_of_tests):\n        line = input()\n        pair = tuple([int(num_str) for num_str in line.split()])\n        tests.append(pair)\n    is_possible_list = [is_possible_sum_of_odd_integers(n, k) for (n, k) in tests]\n    output = '\\n'.join(['YES' if is_possible else 'NO' for is_possible in is_possible_list])\n    print(output)\nsolve()", "ans = []\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k * k > n or n % 2 != k % 2:\n        ans.append('NO')\n    else:\n        ans.append('YES')\nprint('\\n'.join(map(str, ans)))", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solve(n, k):\n    if k * k <= n and n % 2 == k % 2:\n        return 'YES'\n    else:\n        return 'NO'\n\ndef output():\n    t = inp()\n    for i in range(t):\n        (n, k) = invr()\n        print(solve(n, k))\noutput()", "from sys import stdin\na = int(stdin.readline())\nfor b in range(0, a):\n    c = stdin.readline().split()\n    d = int(c[0])\n    e = int(c[1])\n    if d < e * e:\n        print('NO')\n        continue\n    if d % 2 == 1 and e % 2 == 0:\n        print('NO')\n        continue\n    if d % 2 == 0 and e % 2 == 1:\n        print('NO')\n        continue\n    print('YES')", "from math import sqrt\nimport sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef check(n, k):\n    return (n - k) % 2 == 0 and k <= sqrt(n)\n\ndef solve(list_input):\n    for list in list_input:\n        (n, k) = (list[0], list[1])\n        if check(n, k):\n            print('YES')\n        else:\n            print('NO')\n\ndef main():\n    n = inp()\n    list = []\n    for i in range(0, n):\n        list.append(inlt())\n    solve(list)\nmain()", "n = int(input())\nyes_no_vector = []\nfor i in range(n):\n    (sum, odd_numbers) = [int(numero) for numero in input().split(' ')]\n    if sum % 2 == odd_numbers % 2:\n        if odd_numbers * odd_numbers > sum:\n            yes_no_vector.append('NO')\n        else:\n            yes_no_vector.append('YES')\n    else:\n        yes_no_vector.append('NO')\nfor i in range(len(yes_no_vector)):\n    print(yes_no_vector[i])", "a = []\nres = ''\nfor _ in range(int(input())):\n    a.append(list(map(int, input().split())))\nfor (n, k) in a:\n    b = False\n    if k * k <= n:\n        if n % 2 == k % 2:\n            b = True\n    res += 'NYOE S'[b::2] + '\\n'\nprint(res)", "t = int(input())\nlist_ans = []\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if n >= k ** 2 and (n + k) % 2 == 0:\n        list_ans.append('YES')\n    else:\n        list_ans.append('NO')\nfor item in list_ans:\n    print(item)", "t = int(input())\nlist_ans = []\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    list_ans.append(['NO', 'YES'][n >= k ** 2 and (n + k) % 2 == 0])\nfor item in list_ans:\n    print(item)", "input = __import__('sys').stdin.readline\nprint = __import__('sys').stdout.write\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k % 2 == 0 and n % 2 == 1:\n        print('NO\\n')\n        continue\n    if k % 2 == 1 and n % 2 == 0:\n        print('NO\\n')\n        continue\n    if n < k ** 2:\n        print('NO\\n')\n        continue\n    else:\n        print('YES\\n')", "def solve_1327A():\n    n = int(input())\n    A = []\n    for i in range(n):\n        line = input()\n        A += [[int(line.split(' ')[0]), int(line.split(' ')[1])]]\n    for pair in A:\n        sum = pair[1] * pair[1]\n        if sum > pair[0]:\n            print('NO')\n        elif (pair[0] - sum) % 2 == 0:\n            print('YES')\n        else:\n            print('NO')\nsolve_1327A()", "n = int(input())\narr = []\nfor _ in range(n):\n    arr.append(list(map(int, input().split())))\nfor i in range(n):\n    if arr[i][0] % 2 == arr[i][1] % 2 and arr[i][0] >= arr[i][1] ** 2:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nli = [[int(j) for j in input().split()] for i in range(n)]\nfor ele in li:\n    if ele[0] % 2 == 0:\n        if ele[1] % 2 == 0 and ele[0] >= ele[1] ** 2 and (ele[0] != 0) and (ele[1] != 0):\n            print('YES')\n        else:\n            print('NO')\n    elif ele[0] % 2 != 0:\n        if ele[1] % 2 != 0 and ele[0] >= ele[1] ** 2:\n            print('YES')\n        else:\n            print('NO')", "x = input()\ny = int(x)\nlis = []\nfor i in range(y):\n    x2 = input()\n    spl = x2.split()\n    i1 = int(spl[0])\n    i2 = int(spl[1])\n    if i1 % 2 != i2 % 2:\n        lis.append('NO')\n    elif int(i2 ** 2 + 0.5) > i1:\n        lis.append('NO')\n    else:\n        lis.append('YES')\nfor i in lis:\n    print(i)", "t = int(input())\nd = []\nfor i in range(0, t):\n    b = input().split(' ')\n    c = [int(x) for x in b]\n    n = c[0]\n    k = c[1]\n    if n < k ** 2:\n        d.append('NO')\n    elif n % 2 != k % 2:\n        d.append('NO')\n    else:\n        d.append('YES')\nfor i in d:\n    print(i)", "t = int(input())\nlist_ = []\nfor i in range(t):\n    a = input().split(' ')\n    a = list(map(int, a))\n    list_.append(a)\nfor l in list_:\n    if l[0] == 0:\n        print('NO')\n        continue\n    if l[0] < l[1]:\n        print('NO')\n        continue\n    if (l[0] - l[1]) % 2 == 0 and (l[0] - l[1]) / 2 >= l[1] * (l[1] - 1) / 2:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nresult = []\nwhile t:\n    (n, k) = list(map(int, input().split()))\n    sum_before_k = (k - 1) ** 2\n    if n > sum_before_k:\n        max_last_dig = n - sum_before_k\n        if max_last_dig % 2 == 1 and max_last_dig >= 2 * k - 1:\n            result.append('YES')\n        else:\n            result.append('NO')\n    else:\n        result.append('NO')\n    t -= 1\nfor res in result:\n    print(res)", "a = int(input())\nr = range(a)\nd = []\ne = []\nfor x in r:\n    b = input()\n    c = b.split()\n    d.append(int(c[0]))\n    e.append(int(c[1]))\nyes = 'YES'\nno = 'NO'\nf = []\nfor x in r:\n    if d[x] & 1 == 1 and e[x] & 1 == 0 or (d[x] & 1 == 0 and e[x] & 1 == 1):\n        f.append(no)\n    if d[x] & 1 == 0 and e[x] & 1 == 0:\n        if d[x] >= e[x] * e[x]:\n            f.append(yes)\n        else:\n            f.append(no)\n    if d[x] & 1 == 1 and e[x] & 1 == 1:\n        if d[x] >= e[x] * e[x]:\n            f.append(yes)\n        else:\n            f.append(no)\nfor x in r:\n    print(f[x])", "temp = True\nip_ls = []\nop_ls = []\ni = 0\n\ndef func(collection):\n    if len(collection) == 2:\n        if collection[0] % 2 == 0 and collection[1] % 2 == 0 or (collection[0] % 2 == 1 and collection[1] % 2 == 1):\n            if collection[1] ** 2 <= collection[0]:\n                return 'YES'\n            else:\n                return 'NO'\n        else:\n            return 'NO'\nwhile temp == True:\n    if i == 0:\n        message = int(input(''))\n    elif i <= message:\n        ip_ls = list(map(int, input('').split(' ')))\n        op_ls.append(func(ip_ls))\n    else:\n        temp = False\n    i += 1\nfor i in range(len(op_ls)):\n    print(f'{op_ls[i]}', end='\\n')", "from math import sqrt, fabs\nt = int(input())\nres = []\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if (n - k) % 2 == 0 and n >= k ** 2:\n        if fabs(int(sqrt(n)) - sqrt(n)) < 10 ** (-8):\n            if (int(sqrt(n)) - k) % 2 == 0:\n                res.append('YES')\n            else:\n                res.append('NO')\n        elif int((1 + int(sqrt(n))) ** 2 - n - (1 + int(sqrt(n)) - k)) % 2 == 0:\n            res.append('YES')\n        else:\n            res.append('NO')\n    else:\n        res.append('NO')\nfor i in range(t):\n    print(res[i])", "from math import sqrt, fabs\nt = int(input())\nres = []\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if (n - k) % 2 == 0 and n >= k ** 2:\n        if fabs(int(sqrt(n)) - sqrt(n)) < 10 ** (-8):\n            if (int(sqrt(n)) - k) % 2 == 0:\n                res.append('YES')\n            else:\n                res.append('NO')\n        elif int((1 + int(sqrt(n))) ** 2 - n - (1 + int(sqrt(n)) - k)) % 2 == 0:\n            res.append('YES')\n        else:\n            res.append('NO')\n    else:\n        res.append('NO')\nfor i in range(t):\n    print(res[i])", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    print('YES' if k * k <= n and n % 2 == k % 2 else 'NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print('YES' if k * k <= n and k % 2 == n % 2 else 'NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print('YES' if n >= k * k and n % 2 == k % 2 else 'NO')", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if k * k <= n and n % 2 == k % 2:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    print('YES' if k * k <= n and n % 2 == k % 2 else 'NO')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    print('YES' if k * k <= n and n % 2 == k % 2 else 'NO')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    print('YES' if k * k <= n and n % 2 == k % 2 else 'NO')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k * k <= n and n % 2 == k % 2:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    print('YES' if k * k <= n and n % 2 == k % 2 else 'NO')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    print('YES' if k * k <= n and n % 2 == k % 2 else 'NO')", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if b * b <= a and a % 2 == b % 2:\n        print('YES')\n    else:\n        print('NO')", "import atexit\nimport io\nimport sys\n\ndef main():\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split(' '))\n        if n >= k * k and (n - k * k) % 2 == 0:\n            print('YES')\n        else:\n            print('NO')\nmain()", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    print('YES' if k * k <= n and n % 2 == k % 2 else 'NO')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    print('YES' if k * k <= n and n % 2 == k % 2 else 'NO')", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if x % 2 == y % 2:\n        if y * y > x:\n            print('NO')\n        else:\n            print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    if m * m <= n and n % 2 == m % 2:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print('NO' if k * k > n or k % 2 != n % 2 else 'YES')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    print('YES' if k * k <= n and n % 2 == k % 2 else 'NO')", "t = int(input())\nfor x in range(t):\n    (n, k) = map(int, input().split())\n    if k * k <= n and n % 2 - k % 2 == 0 or (n % 2 != 0 and k == 1):\n        print('YES')\n    else:\n        print('NO')", "def main():\n    tests = int(input())\n    for _ in range(tests):\n        (p, q) = map(int, input().split())\n        if q ** 2 > p or p % 2 != q % 2:\n            print('NO')\n        else:\n            print('YES')\nmain()", "t = int(input())\nfor i in range(t):\n    (x, n) = map(int, input().split())\n    if n * n <= x:\n        if (n + x) % 2 == 0:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n >= k * k and n % 2 == k % 2:\n        print('YES')\n    else:\n        print('NO')", "test_cases = int(input())\n\ndef handle():\n    (n, k) = input().split(' ')\n    n = int(n)\n    k = int(k)\n    if k == 1 and n % 2 == 0:\n        return 'NO'\n    if k ** 2 > n:\n        return 'NO'\n    if n % 2 == 1:\n        if k % 2 == 1:\n            return 'YES'\n        return 'NO'\n    if k % 2 == 0:\n        return 'YES'\n    return 'NO'\nfor _ in range(test_cases):\n    print(handle())", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    if a % 2 == b % 2 and b * b <= a:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if k ** 2 <= n and k % 2 == n % 2:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k ** 2 <= n and n % 2 == k % 2:\n        print('YES')\n    else:\n        print('NO')", "I = input\nfor _ in range(int(I())):\n    (n, k) = map(int, I().split())\n    if n < k * k or n % 2 != k % 2:\n        print('NO')\n    else:\n        print('YES')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    print('YES' if k * k <= n and n % 2 == k % 2 else 'NO')", "t = int(input())\nfor i in range(t):\n    (a, b) = [int(i) for i in input().split()]\n    if b * b <= a:\n        if (a + b) % 2 == 0:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print('YES' if k * k <= n and n % 2 == k % 2 else 'NO')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    print('YES' if k * k <= n and n % 2 == k % 2 else 'NO')", "def solve(n, k):\n    if n < k * k:\n        return 'NO'\n    if n % 2 != k % 2:\n        return 'NO'\n    return 'YES'\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        (n, k) = map(int, input().split())\n        print(solve(n, k))\nmain()", "TC = int(input())\nfor x in range(TC):\n    INPUT = input().split()\n    n = int(INPUT[0])\n    k = int(INPUT[1])\n    if k ** 2 <= n and n % 2 == k % 2:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    if a >= b * b and a % 2 == b * b % 2:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    print('YES' if k * k <= n and n % 2 == k % 2 else 'NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k * k > n or k % 2 != n % 2:\n        print('NO')\n    else:\n        print('YES')", "T = int(input())\nwhile T:\n    (n, k) = map(int, input().split())\n    print('YES' if k * k <= n and n % 2 == k % 2 else 'NO')\n    T -= 1", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k * k <= n and n % 2 == k % 2:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    minVal = k ** 2\n    if n < minVal:\n        print('NO')\n    elif n % 2 == 0 and k % 2 == 0 or (n % 2 != 0 and k % 2 != 0):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if k <= n and n % 2 == k % 2 and (k ** 2 <= n):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    if n % 2 == 0 and k % 2 or (n % 2 and k % 2 == 0) or k * k > n:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nwhile t:\n    (n, k) = [int(i) for i in input().split()]\n    if (n + k) % 2 == 0 and k * k <= n:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "def havesum(number, knum):\n    paritynum = number % 2\n    parityk = knum % 2\n    if parityk != paritynum:\n        return False\n    if number >= knum ** 2:\n        return True\n    return False\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        x = input().split()\n        number = int(x[0])\n        knum = int(x[1])\n        if havesum(number, knum):\n            print('YES')\n        else:\n            print('NO')\nmain()", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(i) for i in input().split()]\n    if n % 2 == k % 2 and n >= k * k:\n        print('YES')\n    else:\n        print('NO')", "tc = int(input())\nfor _ in range(tc):\n    (n, x) = list(map(int, input().split()))\n    if n % 2 == x % 2:\n        if x * x > n:\n            print('NO')\n        else:\n            print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    print('YES' if n % 2 == k % 2 and k * k <= n else 'NO')", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k ** 2 > n or k % 2 != n % 2:\n        print('NO')\n    else:\n        print('YES')"]