["for _ in [*open(0)][2::2]:\n    _ = _.split()\n    print('YNEOS'[int(_[0]) > int(_[-1])::2])", "import sys\ninput = sys.stdin.readline\n\ndef ans():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[-1] > a[0]:\n        print('YES')\n    else:\n        print('NO')\nfor t in range(int(input())):\n    ans()", "import math\nfrom sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    if a[0] > a[n - 1]:\n        print('NO')\n    else:\n        print('YES')", "import sys\ninput = sys.stdin.readline\n\ndef ans(ar):\n    if ar[-1] > ar[0]:\n        return 'YES'\n    else:\n        return 'NO'\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(ans(a))", "for a in [*open(0)][2::2]:\n    a = a.split()\n    print('YNEOS'[int(a[0]) >= int(a[-1])::2])", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print('YNEOS'[int(a[0]) > int(a[-1])::2])", "from sys import stdin as std\n_ = [print('YES' if arr[0] < arr[-1] else 'NO') for (n, arr) in ([int(std.readline()), list(map(int, std.readline().split()))] for y in range(int(std.readline())))]", "import sys\ninput = sys.stdin.readline\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[-1] > a[0]:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    stdin.readline()\n    a = list(map(int, stdin.readline().split()))\n    if a[0] < a[-1]:\n        print('YES')\n    else:\n        print('NO')", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print('YNEOS'[int(a[0]) > int(a[-1])::2])", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print('YNEOS'[int(a[0]) > int(a[-1])::2])", "print('\\n'.join(['YES' if (a := list(map(int, input().split())))[0] < a[-1] else 'NO' for t in range(2 * int(input()))][1::2]))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    x = int(input())\n    (*li,) = map(int, input().split())\n    print('YES' if li[0] < li[-1] else 'NO')", "def solve(n, a):\n    if a[0] < a[-1]:\n        return 'YES'\n    return 'NO'\n\ndef main():\n    t = int(input())\n    cases = []\n    for i in range(t):\n        cases.append([int(input()), list(map(int, input().split()))])\n    for i in cases:\n        print(solve(*i))\nmain()", "import sys\nn = int(sys.stdin.readline().strip())\ninp = []\nfor i in range(n):\n    sys.stdin.readline()\n    inp.append(sys.stdin.readline().strip().split(' '))\nfor each in inp:\n    if int(each[-1]) < int(each[0]):\n        print('NO')\n    else:\n        print('YES')", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print('YNEOS'[int(a[0]) > int(a[-1])::2])", "import sys\ninput = sys.stdin.readline\nins = lambda : input().rstrip()\nini = lambda : int(input().rstrip())\ninm = lambda : map(int, input().split())\ninl = lambda : list(map(int, input().split()))\nout = lambda x: print('\\n'.join(map(str, x)))\nans = []\nt = ini()\nfor _ in range(t):\n    n = ini()\n    a = inl()\n    ans.append('YES' if a[0] < a[n - 1] else 'NO')\nout(ans)", "import sys\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\nfor _ in range(II()):\n    n = II()\n    aa = LI()\n    if aa[0] < aa[-1]:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\nins = lambda : input().rstrip()\nini = lambda : int(input().rstrip())\ninm = lambda : map(int, input().split())\ninl = lambda : list(map(int, input().split()))\nout = lambda x: print('\\n'.join(map(str, x)))\nt = ini()\nfor _ in range(t):\n    n = ini()\n    a = inl()\n    print('YES' if a[0] < a[n - 1] else 'NO')", "list_ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    m = max(list1[1:])\n    x = list1.index(m)\n    a = list1[0]\n    b = list1[-1]\n    if a < b:\n        list_ans.append('YES')\n    else:\n        list_ans.append('NO')\nprint(*list_ans, sep='\\n')", "import sys\n\ndef minp():\n    return sys.stdin.readline().strip()\n\ndef mint():\n    return int(minp())\n\ndef mints():\n    return map(int, minp().split())\n\ndef solve():\n    n = mint()\n    a = list(mints())\n    if a[0] <= a[-1]:\n        print('YES')\n    else:\n        print('NO')\nfor i in range(mint()):\n    solve()", "def remove_elements(permutations):\n    if permutations[0] < permutations[-1]:\n        return 'YES'\n    return 'NO'\nresults = []\nfor _ in range(int(input())):\n    _ = input()\n    permutation = [int(el) for el in input().split()]\n    results.append(remove_elements(permutation))\nprint('\\n'.join(results))", "for _ in range(int(input())):\n    s = input()\n    l = input().split()\n    print('YES' if int(l[0]) < int(l[-1]) else 'NO')", "import sys, os\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\ninput = lambda : sys.stdin.readline().strip()\nli = lambda : list(map(int, input().split()))\nI = lambda : int(input())\nfor _ in range(I()):\n    n = I()\n    l = li()\n    if l[0] < l[-1]:\n        print('YES')\n    else:\n        print('NO')", "from collections import deque\nimport sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    seq = list(map(int, input().split()))\n    print('YES' if seq[0] < seq[-1] else 'NO')", "from sys import *\ninput = stdin.readline\nT = int(input())\nfor case in range(T):\n    n = int(input())\n    Arr = [*map(int, input().split())]\n    if Arr[0] < Arr[-1]:\n        print('YES')\n    else:\n        print('NO')", "import sys\nfrom sys import stdin, stdout\nfrom math import ceil, floor, sqrt, log, log2, log10\nfrom collections import Counter\nint_max = float('inf')\nint_min = -float('inf')\nANS = []\ninput = stdin.readline\n\ndef solve():\n    pass\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if arr[0] < arr[n - 1]:\n        ANS.append('YES')\n    else:\n        ANS.append('NO')\nprint('\\n'.join(ANS))", "import math\nimport collections\nfrom sys import stdin, stdout, setrecursionlimit\nfrom bisect import bisect_left as bsl\nfrom bisect import bisect_right as bsr\nimport heapq as hq\nsetrecursionlimit(2 ** 20)\nt = 1\nt = int(stdin.readline())\nfor _ in range(t):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().rstrip().split()))\n    mi = 10 ** 6\n    pos = -1\n    if a[0] == 1 or a[-1] == n:\n        print('YES')\n    elif a[0] < a[n - 1]:\n        print('YES')\n    else:\n        print('NO')", "import sys\nfrom collections import deque\ninput = lambda : sys.stdin.readline().strip()\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] < a[n - 1]:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nwhile t:\n    t -= 1\n    solve()", "t = int(input())\nans = []\nfor _ in range(t):\n    n = int(input())\n    nums = list(map(int, input().split(sep=' ')))\n    ans.append('YES' if nums[-1] > nums[0] else 'NO')\nfor i in ans:\n    print(i)", "t = int(input())\nres = []\nfor i in range(t):\n    m = input()\n    m = [int(j) for j in input().split()]\n    if m[0] < m[-1]:\n        res.append('YES')\n    else:\n        res.append('NO')\nfor i in res:\n    print(i)", "t = int(input())\ncases = []\nfor i in range(t):\n    n = int(input())\n    cases.append(list(map(int, input().strip().split())))\n\ndef solve(case):\n    if case[0] > case[-1]:\n        print('NO')\n    else:\n        print('YES')\nfor case in cases:\n    solve(case)", "import sys\nimport os\nimport math\nimport copy\nfrom math import gcd\nfrom bisect import bisect\nfrom io import BytesIO, IOBase\nfrom math import sqrt, floor, factorial, gcd, log, ceil\nfrom collections import deque, Counter, defaultdict\nfrom itertools import permutations, combinations\n\ndef Int():\n    return int(sys.stdin.readline())\n\ndef Mint():\n    return map(int, sys.stdin.readline().split())\n\ndef Lstr():\n    return list(sys.stdin.readline().strip())\n\ndef Str():\n    return sys.stdin.readline().strip()\n\ndef Mstr():\n    return map(str, sys.stdin.readline().strip().split())\n\ndef List():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef Hash():\n    return dict()\n\ndef Mod():\n    return 1000000007\n\ndef Ncr(n, r, p):\n    return fact[n] * (ifact[r] * ifact[n - r] % p) % p\n\ndef Most_frequent(list):\n    return max(set(list), key=list.count)\n\ndef Mat2x2(n):\n    return [List() for _ in range(n)]\n\ndef Divisors(n):\n    l = []\n    for i in range(1, int(math.sqrt(n) + 1)):\n        if n % i == 0:\n            if n // i == i:\n                l.append(i)\n            else:\n                l.append(i)\n                l.append(n // i)\n    return l\n\ndef GCD(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\n\ndef solution():\n    for _ in range(Int()):\n        n = Int()\n        a = List()\n        if a[0] < a[-1]:\n            print('YES')\n        else:\n            print('NO')\nsolution()", "import sys\ninput = sys.stdin.readline\nI = lambda : list(map(int, input().split()))\n(n,) = I()\nfor _ in range(n):\n    (m,) = I()\n    arr = I()\n    if arr[0] < arr[-1]:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin, stdout\nfrom collections import Counter\nI = lambda : map(int, stdin.readline().split())\nI1 = lambda : stdin.readline()\nfor _ in range(int(I1())):\n    n = int(I1())\n    a = list(I())\n    print('YES' if a[0] < a[-1] else 'NO')", "t = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] > a[-1]:\n        ans.append('NO')\n    else:\n        ans.append('YES')\nfor an in ans:\n    print(an)", "t = int(input())\narr = [[]] * t\nfor i in range(t):\n    n = int(input())\n    arr[i] = list(map(int, input().strip().split()))[:n]\nfor i in range(t):\n    if arr[i][0] < arr[i][-1]:\n        print('YES')\n    else:\n        print('NO')", "def tran(arr):\n    if arr[-1] > arr[0]:\n        return 'YES'\n    else:\n        return 'NO'\nt = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().rstrip().split()))\n    p = tran(arr)\n    ans.append(p)\nfor i in ans:\n    print(i)", "import sys\nimport math\nfrom sys import stdin, stdout\nfrom collections import deque, defaultdict\nfrom math import ceil, floor, inf, sqrt, factorial, gcd, log2\nfrom copy import deepcopy\nii1 = lambda : int(stdin.readline().strip())\nis1 = lambda : stdin.readline().strip()\niia = lambda : list(map(int, stdin.readline().strip().split()))\nisa = lambda : stdin.readline().strip().split()\nmod = 1000000007\nfor i in range(ii1()):\n    n = ii1()\n    arr = iia()\n    if arr[0] < arr[-1]:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nq = []\np = []\nfor i in range(t):\n    e = int(input())\n    y = list(map(int, input().split()))\n    p.append(y)\n    q.append(e)\n\ndef oe(n, arr):\n    if arr[0] > arr[-1]:\n        print('NO')\n    else:\n        print('YES')\nfor i in range(t):\n    oe(q[i], p[i])", "import sys\nimport math\nimport collections\nfrom sys import stdin, stdout, setrecursionlimit\nimport bisect as bs\nsetrecursionlimit(2 ** 20)\nM = 10 ** 9 + 7\nT = int(stdin.readline())\nfor _ in range(T):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    res = a[0] < a[-1]\n    if res:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nc = []\nfor i in range(t):\n    n = int(input())\n    a = [int(u) for u in input().split()]\n    if a[0] < a[-1]:\n        c.append('YES')\n    else:\n        c.append('NO')\nfor k in c:\n    print(k)", "t = int(input())\na = []\nfor i in range(t):\n    n = int(input())\n    array = list(map(int, input().split(' ')))\n    a.append([n, array])\nfor x in a:\n    if x[1][0] < x[1][-1]:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = input()\n    a = input().split()\n    print(['NO', 'YES'][int(a[0]) < int(a[-1])])", "t = int(input())\nfor i in range(t):\n    n = input()\n    a = input().split()\n    if int(a[0]) < int(a[-1]):\n        print('YES')\n    else:\n        print('NO')", "import random\nimport math\nfrom collections import defaultdict\nimport itertools\nfrom sys import stdin, stdout\nimport sys\nimport operator\nfrom decimal import Decimal\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.buffer.readline())\n\ndef MI():\n    return map(int, sys.stdin.buffer.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.buffer.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef BI():\n    return sys.stdin.buffer.readline().rstrip()\n\ndef SI():\n    return sys.stdin.buffer.readline().rstrip().decode()\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = input().split()\n        if int(a[0]) > int(a[-1]):\n            print('NO')\n        else:\n            print('YES')\nmain()", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l[0] < l[-1]:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l[0] < l[-1]:\n        print('YES')\n    else:\n        print('NO')", "t = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    a = list(map(int, input().strip().split()))\n    if a[0] < a[-1]:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] < a[-1]:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] < a[n - 1]:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    if l[0] < l[n - 1]:\n        print('YES')\n    else:\n        print('NO')", "import sys\nfrom collections import defaultdict\n\ndef printMat(mat):\n    for i in range(len(mat)):\n        mat_str = map(str, mat[i])\n        print(' '.join(mat_str))\n\ndef printList(l):\n    l_str = map(str, l)\n    print(' '.join(l_str))\n\ndef helper(a, b, n):\n    (offset, a2i, ans) = (defaultdict(int), {}, 0)\n    for (i, v) in enumerate(a):\n        a2i[v] = i\n    for (i, v) in enumerate(b):\n        off = (i - a2i[v]) % n\n        offset[off] += 1\n    for (off, cnt) in offset.items():\n        ans = max(ans, cnt)\n    return ans\n\ndef helper(nums, n):\n    if nums[0] < nums[-1]:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    helper(nums, n)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    if a[0] < a[-1]:\n        print('YES')\n    else:\n        print('NO')", "import sys\ntry:\n\n    def main():\n        n = int(input())\n        l = list(map(int, input().split()))\n        if l[0] < l[-1]:\n            print('YES')\n        else:\n            print('NO')\nexcept:\n    pass\nfor _ in range(int(input())):\n    main()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    if ls[0] < ls[-1]:\n        print('YES')\n    else:\n        print('NO')", "test = int(input())\nfor i in range(test):\n    a = int(input())\n    i = list(map(int, input().split()))\n    if i[0] < i[-1]:\n        print('YES')\n    else:\n        print('NO')", "def canBe(l):\n    if l[0] < l[-1]:\n        return 'YES'\n    return 'NO'\ntest = int(input().strip())\nfor i in range(test):\n    bleh = input()\n    l = list(map(int, input().strip().split()))\n    print(canBe(l))", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(num) for num in input().split()]\n    if a[-1] > a[0]:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    if l[n - 1] > l[0]:\n        print('YES')\n    else:\n        print('NO')", "for test in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    if l[0] < l[n - 1]:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l[0] < l[-1]:\n        print('YES')\n    else:\n        print('NO')", "def cast(cre, typ):\n    return type(typ)(map(cre, typ))\n\ndef input_list(cre):\n    return cast(cre, input().split())\n\ndef solution():\n    for t in range(int(input())):\n        n = int(input())\n        l = input_list(int)\n        print(['YES', 'NO'][0 if l[0] < l[-1] else 1])\n    return\nsolution()", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    arr = list(map(int, input().split()))[:n]\n    if arr[0] < arr[n - 1]:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    if A[0] < A[-1]:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    mi = l[0]\n    ma = l[-1]\n    if ma > mi:\n        print('YES')\n    else:\n        print('NO')", "import sys\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(['NO', 'YES'][l[0] < l[n - 1]])", "t = int(input())\nfor w in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    if a[0] <= a[-1]:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    if lst[0] < lst[-1]:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    if lst[0] < lst[-1]:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    if lst[0] < lst[-1]:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l[0] < l[-1]:\n        print('YES')\n        continue\n    print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l[0] < l[-1]:\n        print('YES')\n        continue\n    print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l[0] < l[-1]:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mn = a[0]\n    if a[-1] > mn:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[-1] > a[0]:\n        print('YES')\n    else:\n        print('NO')", "t = int(input(''))\nmat = []\nfor i in range(t):\n    x = int(input(''))\n    mat.append(list(map(int, input().split())))\nfor i in range(t):\n    y = mat[i]\n    if y[len(y) - 1] > y[0]:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    li = input()\n    first = ''\n    for x in li:\n        if x == ' ':\n            break\n        else:\n            first += x\n    first = int(first)\n    last = ''\n    i = len(li) - 1\n    while True:\n        if li[i] == ' ':\n            break\n        else:\n            last += li[i]\n        i -= 1\n    last = int(last[::-1])\n    if first < last:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l[0] < l[-1]:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l[0] < l[n - 1]:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "def check():\n    t = int(input())\n    while t:\n        t -= 1\n        n = int(input())\n        arr = list(map(int, input().strip().split()))\n        if arr[0] < arr[-1]:\n            print('YES')\n        else:\n            print('NO')\ncheck()", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l[n - 1] > l[0]:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] < a[len(a) - 1]:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    if ar[0] < ar[-1]:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    lst = list(map(int, input().split()))[:a]\n    if lst[0] < lst[-1]:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l[0] < l[len(l) - 1]:\n        print('YES')\n    else:\n        print('NO')", "from math import *\nfor _ in range(int(input())):\n    m = int(input())\n    n = list(map(int, input().split()))\n    if n[-1] < n[0]:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    n = input()\n    nums = list(map(int, input().split()))\n    if nums[-1] > nums[0]:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    input()\n    a = list(map(int, input().split()))\n    print('YES' if a[0] < a[-1] else 'NO')", "import heapq\nfrom collections import *\nimport math\n\ndef solve():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    if a[0] < a[-1]:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nfor _ in range(t):\n    solve()", "for _ in range(int(input().strip())):\n    n = int(input().strip())\n    a = list(map(int, input().strip().split()))\n    print('YES' if a[0] < a[n - 1] else 'NO')"]