["from math import sqrt\n\ndef read_int():\n    return int(input())\n\ndef read_ints():\n    return map(int, input().split(' '))\nt = read_int()\nfor case_num in range(t):\n    (d, k) = read_ints()\n    h = int(d / sqrt(2) / k)\n    if (h * h + (h + 1) * (h + 1)) * k * k > d * d:\n        print('Utkarsh')\n    else:\n        print('Ashish')", "for _ in range(int(input())):\n    (d, k) = map(int, input().split())\n    r2 = 2 ** (1 / 2)\n    diag = int(d / (k * r2)) * k\n    maxi = (diag + k) ** 2 + diag ** 2\n    print(('Utkarsh', 'Ashish')[maxi <= d ** 2])", "for _ in range(int(input())):\n    (d, k) = map(int, input().split())\n    t = k * 2 ** 0.5\n    a = d // t\n    x = 2 * a\n    p = k * a\n    if ((p + k) ** 2 + p ** 2) ** 0.5 <= d:\n        x += 1\n    if x % 2 == 1:\n        print('Ashish')\n    else:\n        print('Utkarsh')", "import math\nn = int(input())\nres = []\nfor t in range(n):\n    (d, k) = map(int, input().split())\n    d /= k\n    x = d // math.sqrt(2)\n    y = x\n    x += 1\n    if x * x + y * y <= d * d:\n        res.append('Ashish')\n    else:\n        res.append('Utkarsh')\nfor i in res:\n    print(i)", "import math\nt = int(input())\nfor h in range(t):\n    (d, k) = [int(x) for x in input().split(' ')]\n    thingy = math.floor(math.sin(math.pi / 4) * d / k)\n    output = 2 * thingy\n    if (thingy + 1) ** 2 + thingy ** 2 <= (d / k) ** 2:\n        output += 1\n    if output % 2 == 0:\n        print('Utkarsh')\n    else:\n        print('Ashish')", "from math import floor, sqrt\n\ndef readints():\n    return list(map(int, input().split(' ')))\nt = readints()[0]\nfor _ in range(t):\n    (d, k) = readints()\n    z = floor(sqrt(d ** 2 / 2 / k ** 2))\n    if (k * z) ** 2 + k ** 2 * (z + 1) ** 2 <= d ** 2:\n        print('Ashish')\n    else:\n        print('Utkarsh')", "import sys, functools, collections, bisect, math, heapq\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (d, k) = map(int, input().strip().split())\n    z = d // (2 ** 0.5 * k)\n    dis = (k * z) ** 2 + (k * (z + 1)) ** 2\n    if dis <= d * d:\n        print('Ashish')\n    else:\n        print('Utkarsh')", "from math import sqrt\n\ndef read_int():\n    return int(input())\n\ndef read_ints():\n    return map(int, input().split(' '))\nt = read_int()\nfor case_num in range(t):\n    (d, k) = read_ints()\n    h = int(d / sqrt(2) / k)\n    if (h * h + (h + 1) * (h + 1)) * k * k > d * d:\n        print('Utkarsh')\n    else:\n        print('Ashish')", "import math\ntc = int(input())\nz = []\nfor i in range(tc):\n    (d, k) = map(int, input().split())\n    n = d // (math.sqrt(2) * k)\n    if math.sqrt(n * k * n * k + (n + 1) * k * (n + 1) * k) <= d:\n        z.append('Ashish')\n    else:\n        z.append('Utkarsh')\nfor i in range(tc):\n    print(z[i])", "for _ in range(int(input())):\n    (d, k) = map(int, input().split())\n    r2 = 2 ** (1 / 2)\n    diag = int(d / (k * r2)) * k\n    maxi = (diag + k) ** 2 + diag ** 2\n    print(('Utkarsh', 'Ashish')[maxi <= d ** 2])", "a = int(input())\nimport math\n\ndef flip(n):\n    if n == 0:\n        return 1\n    else:\n        return 0\nd = 0\nk = 0\n\ndef mind(x, y):\n    a = math.sqrt(d * d - y * y) - x\n    b = math.sqrt(d * d - x * x) - y\n    print(a, b, k)\n    if a < k and b < k:\n        return -1\n    if a >= k and b >= k:\n        if a < b:\n            return 1\n        else:\n            return 0\n    if a >= k:\n        return 1\n    else:\n        return 0\nfor i in range(a):\n    (d, k) = map(int, input().split())\n    rem = d / math.sqrt(2) // k\n    x = rem * k\n    y = rem * k\n    if x * x + (y + k) ** 2 <= d * d:\n        print('Ashish')\n    else:\n        print('Utkarsh')", "test = int(input())\nfor testcase in range(test):\n    arr = [int(x) for x in input().split()]\n    (d, k) = (arr[0], arr[1])\n    (x, y) = (k, k)\n    x = d // 2 ** 0.5\n    x = x - x % k\n    y = x\n    if x == 0 and y == 0:\n        print('Ashish')\n    elif (x + k) * (x + k) + y * y <= d * d:\n        print('Ashish')\n    else:\n        print('Utkarsh')", "for _ in range(int(input())):\n    (d, k) = map(int, input().split())\n    x = 0\n    while True:\n        if 2 * (x + 1000 * k) ** 2 <= d ** 2:\n            x += 1000 * k\n        elif 2 * (x + 100 * k) ** 2 <= d ** 2:\n            x += 100 * k\n        elif 2 * (x + 10 * k) ** 2 <= d ** 2:\n            x += 10 * k\n        elif 2 * (x + k) ** 2 <= d ** 2:\n            x += k\n        else:\n            break\n    if x ** 2 + (x + k) ** 2 <= d ** 2:\n        print('Ashish')\n    else:\n        print('Utkarsh')", "for _ in range(int(input())):\n    (d, k) = map(int, input().split())\n    x = 0\n    while True:\n        if 2 * (x + 10000 * k) ** 2 <= d ** 2:\n            x += 10000 * k\n        elif 2 * (x + 1000 * k) ** 2 <= d ** 2:\n            x += 1000 * k\n        elif 2 * (x + 100 * k) ** 2 <= d ** 2:\n            x += 100 * k\n        elif 2 * (x + 10 * k) ** 2 <= d ** 2:\n            x += 10 * k\n        elif 2 * (x + k) ** 2 <= d ** 2:\n            x += k\n        else:\n            break\n    if x ** 2 + (x + k) ** 2 <= d ** 2:\n        print('Ashish')\n    else:\n        print('Utkarsh')", "for _ in range(int(input())):\n    (d, k) = map(int, input().split())\n    x = int((d * d / (k * k * 2)) ** 0.5)\n    if k ** 2 * (x ** 2 + (x + 1) ** 2) <= d ** 2:\n        print('Ashish')\n    else:\n        print('Utkarsh')", "import math\nt = int(input())\nfor _ in range(t):\n    (d, k) = map(int, input().split())\n    m = d // (k * math.sqrt(2))\n    if m < 1:\n        print('Ashish')\n    elif (m * k) ** 2 + ((m + 1) * k) ** 2 > d ** 2:\n        print('Utkarsh')\n    else:\n        print('Ashish')", "for t in range(int(input())):\n    (d, k) = map(int, input().split())\n    x = int(int(d / 2 ** (1 / 2)) / k) * k\n    if x ** 2 + (x + k) ** 2 <= d ** 2:\n        print('Ashish')\n    else:\n        print('Utkarsh')", "for _ in range(int(input())):\n    (d, k) = map(int, input().split())\n    r2 = 2 ** (1 / 2)\n    diag = int(d / (k * r2)) * k\n    maxi = (diag + k) ** 2 + diag ** 2\n    print(('Utkarsh', 'Ashish')[maxi <= d ** 2])", "from math import ceil, sqrt\nfor _ in range(int(input())):\n    (d, k) = map(int, input().split(' '))\n    d1 = d / sqrt(2)\n    x = ceil(d / (k * sqrt(2)))\n    (x1, y1) = (x * k, (x - 1) * k)\n    if x1 ** 2 + y1 ** 2 - d ** 2 <= 0:\n        ans = 'Ashish'\n    else:\n        ans = 'Utkarsh'\n    print(ans)", "for _ in range(int(input())):\n    (d, k) = map(int, input().split())\n    x = int((d * d / (k * k * 2)) ** 0.5)\n    if k ** 2 * (x ** 2 + (x + 1) ** 2) <= d ** 2:\n        print('Ashish')\n    else:\n        print('Utkarsh')", "for _ in range(int(input())):\n    (d, k) = map(int, input().split())\n    r2 = 2 ** (1 / 2)\n    diag = int(d / (k * r2)) * k\n    maxi = (diag + k) ** 2 + diag ** 2\n    print(('Utkarsh', 'Ashish')[maxi <= d ** 2])", "for _ in range(int(input())):\n    (d, k) = map(int, input().split())\n    r2 = 2 ** (1 / 2)\n    diag = int(d / (k * r2)) * k\n    maxi = (diag + k) ** 2 + diag ** 2\n    print(('Utkarsh', 'Ashish')[maxi <= d ** 2])", "for _ in range(int(input())):\n    (d, k) = map(int, input().split())\n    r2 = 2 ** (1 / 2)\n    diag = int(d / (k * r2)) * k\n    maxi = (diag + k) ** 2 + diag ** 2\n    print(('Utkarsh', 'Ashish')[maxi <= d ** 2])", "def whowin(r, k=1):\n    r = r / k\n    m = r // 2 ** 0.5\n    if (m + 1) ** 2 + m ** 2 <= r * r:\n        print('Ashish')\n    else:\n        print('Utkarsh')\nn = int(input())\nlst = []\nfor i in range(n):\n    lst.append(input().split())\nfor i in lst:\n    whowin(int(i[0]), int(i[1]))", "t = int(input())\nfor _ in range(t):\n    (d, k) = map(int, input().split())\n    val = int(d // (2 ** 0.5 * k))\n    p = q = val * k\n    i = 0\n    while p ** 2 + q ** 2 <= d ** 2:\n        if p != q:\n            q += k\n        else:\n            p += k\n        i += 1\n    if i % 2 == 1:\n        print('Utkarsh')\n    else:\n        print('Ashish')", "cnt = int(input())\nfor cont in range(cnt):\n    (r, k) = input().split()\n    r = int(r)\n    k = int(k)\n    xy = int(r / 2 ** 0.5)\n    nn = int(xy / k)\n    val = (nn * k) ** 2 + ((nn + 1) * k) ** 2\n    if val > r ** 2:\n        print('Utkarsh')\n    else:\n        print('Ashish')", "for _ in range(int(input())):\n    (d, k) = map(int, input().split())\n    r2 = 2 ** (1 / 2)\n    diag = int(d / (k * r2)) * k\n    maxi = (diag + k) ** 2 + diag ** 2\n    print(('Utkarsh', 'Ashish')[maxi <= d ** 2])", "for _ in range(int(input())):\n    (d, k) = map(int, input().split())\n    r2 = 2 ** (1 / 2)\n    diag = int(d / (k * r2)) * k\n    maxi = (diag + k) ** 2 + diag ** 2\n    print(('Utkarsh', 'Ashish')[maxi <= d ** 2])", "for _ in range(int(input())):\n    (d, k) = map(int, input().split())\n    x = int((d * d / (k * k * 2)) ** 0.5)\n    if k ** 2 * (x ** 2 + (x + 1) ** 2) <= d ** 2:\n        print('Ashish')\n    else:\n        print('Utkarsh')", "t = int(input(''))\nwhile t > 0:\n    (d, k) = [int(x) for x in input().split()]\n    val = int(d // 2 ** 0.5)\n    val -= val % k\n    maxi = int((d ** 2 - val ** 2) ** 0.5)\n    diff = maxi // k - val // k\n    if diff % 2 == 0:\n        print('Utkarsh')\n    else:\n        print('Ashish')\n    t -= 1", "import math\nq = int(input())\nfor i in range(q):\n    x = input()\n    d = int(x.split(' ')[0])\n    k = int(x.split(' ')[1])\n    a = 2 * k * k\n    b = -1 * a\n    c = k * k - d * d\n    l = b * b - 4 * a * c\n    x1 = (-b + math.sqrt(l)) / (2 * a)\n    x = float(math.sqrt(2) * int(x1) * k * 1.0)\n    if x < float(d):\n        print('Utkarsh')\n    else:\n        print('Ashish')", "t = int(input())\nfor i in range(t):\n    (d, k) = map(int, input().split())\n    C = d * d\n    C /= 2\n    C = C ** (1 / 2)\n    C = int(C // 1)\n    Z = C / k\n    Z = int(Z // 1)\n    if (k * Z + k) ** 2 + (k * Z) ** 2 <= d * d:\n        print('Ashish')\n    else:\n        print('Utkarsh')", "t = int(input())\nfor nbt in range(t):\n    (d, k) = [int(i) for i in input().split()]\n    tt = 1 << 20\n    mi = 0\n    while tt:\n        if (mi + tt) * (mi + tt) * k * k * 2 <= d * d:\n            mi += tt\n        tt >>= 1\n    if mi * k * k * mi + ((mi + 1) * k) ** 2 <= d * d:\n        print('Ashish')\n    else:\n        print('Utkarsh')", "import sys\nimport math\nimport bisect\nfrom sys import stdin, stdout\nfrom math import gcd, floor, sqrt, log, ceil\nfrom collections import defaultdict as dd\nfrom collections import Counter as cc\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nsys.setrecursionlimit(100000000)\nintinp = lambda : int(input().strip())\nstripinp = lambda : input().strip()\nfltarr = lambda : list(map(float, input().strip().split()))\nintarr = lambda : list(map(int, input().strip().split()))\nceildiv = lambda x, d: x // d if x % d == 0 else x // d + 1\nMOD = 1000000007\nnum_cases = intinp()\nfor _ in range(num_cases):\n    (d, k) = intarr()\n    mi = int(d / (2 ** 0.5 * k))\n    q = [mi * k, mi * k]\n    ans = ['Ashish', 'Utkarsh']\n    op = [[0, k], [k, 0]]\n    curr = 0\n    while q[0] ** 2 + q[1] ** 2 <= d ** 2:\n        curr ^= 1\n        q[0] += op[curr][0]\n        q[1] += op[curr][1]\n    print(ans[curr])", "for _ in range(int(input())):\n    (d, k) = map(int, input().split())\n    x = 0\n    while True:\n        if 2 * (x + 100 * k) ** 2 <= d ** 2:\n            x += 100 * k\n        elif 2 * (x + 10 * k) ** 2 <= d ** 2:\n            x += 10 * k\n        elif 2 * (x + k) ** 2 <= d ** 2:\n            x += k\n        else:\n            break\n    if x ** 2 + (x + k) ** 2 <= d ** 2:\n        print('Ashish')\n    else:\n        print('Utkarsh')", "t = int(input())\nwhile t:\n    t -= 1\n    (d, k) = map(int, input().split())\n    x = d ** 2\n    x = x // 2\n    y = x ** 0.5\n    y = y - y % k\n    z = y + k\n    if z * z + y * y <= d ** 2:\n        print('Ashish')\n    else:\n        print('Utkarsh')", "t = int(input())\nfor _ in range(t):\n    (d, k) = (int(number) for number in input().split(' '))\n    diagonal_point = int((d ** 2 / 2) ** 0.5 / k + 1)\n    if ((diagonal_point - 1) * k) ** 2 + (diagonal_point * k) ** 2 > d ** 2:\n        print('Utkarsh')\n    else:\n        print('Ashish')", "for _ in range(int(input())):\n    (d, k) = map(int, input().split())\n    val = d / pow(2, 0.5)\n    ans = 0\n    q = val // k\n    r = val % k\n    if r == 0:\n        if pow(val + k, 2) + pow(val, 2) <= pow(d, 2):\n            ans = 1\n        else:\n            ans = 2\n        if ans == 1:\n            print('Ashish')\n        else:\n            print('Utkarsh')\n    else:\n        val1 = (q + 1) * k\n        val2 = k * q\n        val3 = pow(val1, 2) + pow(val2, 2)\n        if val3 <= pow(d, 2):\n            ans = 1\n        else:\n            ans = 2\n        if ans == 1:\n            print('Ashish')\n        else:\n            print('Utkarsh')", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    x = int(n / k / 2 ** 0.5)\n    a = (x + 1) ** 2 + x ** 2\n    b = (n / k) ** 2\n    if a > b:\n        print('Utkarsh')\n    else:\n        print('Ashish')", "import math\nfor i in range(int(input())):\n    (d, k) = map(int, input().split())\n    a = int(d / math.sqrt(2))\n    a = a // k * k\n    b = int(math.sqrt(d * d - a * a)) // k * k\n    if (a // k + b // k) % 2 == 0:\n        print('Utkarsh')\n    else:\n        print('Ashish')", "from math import sqrt\nfor _ in range(int(input())):\n    (d, k) = [int(i) for i in input().split()]\n    sq = d ** 2\n    a = int(d / (sqrt(2) * k))\n    z = a * k\n    if (z + k) ** 2 + z ** 2 <= sq:\n        print('Ashish')\n    else:\n        print('Utkarsh')", "MOD = 1000000007\nfrom collections import defaultdict as dd, Counter, deque\n\ndef si():\n    return input()\n\ndef ii():\n    return int(input())\n\ndef li():\n    return list(map(int, input().split()))\n\ndef mi():\n    return map(int, input().split())\n\ndef out(v):\n    print(v)\n\ndef spout():\n    print(v, end=' ')\n\ndef d2b(n):\n    return bin(n).replace('0b', '')\n\ndef twod(n, m, num):\n    return [[num for x in range(m)] for y in range(n)]\n\ndef vow():\n    return ['a', 'e', 'i', 'o', 'u']\n\ndef let():\n    return [chr(i) for i in range(97, 123)]\n\ndef gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\n\ndef ispow2(x):\n    return x and (not x & x - 1)\n\ndef prime_factors(n):\n    i = 2\n    factors = []\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n            factors.append(i)\n    if n > 1:\n        factors.append(n)\n    return list(factors)\nt = ii()\nwhile t:\n    t -= 1\n    (d, k) = mi()\n    x = y = i = 0\n    n = int(d / pow(2, 0.5))\n    n = n // k\n    n = n * k\n    while True:\n        if pow(n, 2) + pow(n + k, 2) <= pow(d, 2):\n            print('Ashish')\n            break\n        elif pow(n, 2) + pow(n, 2) <= pow(d, 2):\n            print('Utkarsh')\n            break\n        elif pow(n, 2) + pow(n - k, 2) <= pow(d, 2):\n            print('Ashish')\n            break\n        n = n - k", "import math\nimport bisect\nMAX_D = int(math.sqrt(2) * (100000 + 7))\nseq = [float(math.ceil(n * n / 2.0)) for n in range(MAX_D)]\nt = int(input())\nfor g in range(1, t + 1):\n    dk = input().split(' ')\n    d = float(dk[0])\n    k = float(dk[1])\n    if d == k:\n        print('Ashish')\n        continue\n    ratio = d * d / (k * k)\n    left = 1\n    right = len(seq) - 1\n    marker = None\n    while left <= right:\n        middle = math.floor((left + right) / 2)\n        if seq[middle] == ratio:\n            marker = middle\n            break\n        elif seq[middle] < ratio:\n            marker = middle\n            left = middle + 1\n        elif seq[middle] > ratio:\n            right = middle - 1\n    if marker % 2 == 0:\n        print('Utkarsh')\n    else:\n        print('Ashish')", "import math\nimport bisect\nMAX_D = int(math.sqrt(2) * (100000 + 7))\nseq = [float(math.ceil(n * n / 2.0)) for n in range(MAX_D)]\nt = int(input())\nfor g in range(1, t + 1):\n    dk = input().split(' ')\n    d = float(dk[0])\n    k = float(dk[1])\n    ratio = d * d / (k * k)\n    left = 1\n    right = len(seq) - 1\n    marker = None\n    while left <= right:\n        middle = math.floor((left + right) / 2)\n        if seq[middle] == ratio:\n            marker = middle\n            break\n        elif seq[middle] < ratio:\n            marker = middle\n            left = middle + 1\n        elif seq[middle] > ratio:\n            right = middle - 1\n    if marker % 2 == 0:\n        print('Utkarsh')\n    else:\n        print('Ashish')", "import math\nimport bisect\nMAX_D = int(math.sqrt(2) * (100000 + 7))\nseq = [float(math.ceil(n * n / 2.0)) for n in range(MAX_D)]\nt = int(input())\nfor g in range(1, t + 1):\n    dk = input().split(' ')\n    d = float(dk[0])\n    k = float(dk[1])\n    if d == k:\n        print('Ashish')\n        continue\n    ratio = d * d / (k * k)\n    left = 1\n    right = len(seq) - 1\n    marker = None\n    while left <= right:\n        middle = math.floor((left + right) / 2)\n        if seq[middle] == ratio:\n            marker = middle\n            break\n        elif seq[middle] < ratio:\n            marker = middle\n            left = middle + 1\n        elif seq[middle] > ratio:\n            right = middle - 1\n    if marker % 2 == 0:\n        print('Utkarsh')\n    else:\n        print('Ashish')", "t = int(input())\nfor i in range(t):\n    (d, k) = [int(v) for v in input().split()]\n    c = int(2 * d / 3) // k * k\n    while (c + k) ** 2 + (c + k) ** 2 <= d ** 2:\n        c += k\n    if (c + k) ** 2 + c ** 2 <= d ** 2:\n        print('Ashish')\n    else:\n        print('Utkarsh')", "import math\nimport bisect\nMAX_D = 500000 + 7\nseq = [float(math.ceil(n * n / 2.0)) for n in range(MAX_D)]\nt = int(input())\nfor g in range(1, t + 1):\n    dk = input().split(' ')\n    d = float(dk[0])\n    k = float(dk[1])\n    if d == k:\n        print('Ashish')\n        continue\n    ratio = d * d / (k * k)\n    left = 1\n    right = len(seq) - 1\n    marker = None\n    prec = 20\n    while left <= right:\n        middle = math.floor((left + right) / 2)\n        if seq[middle] == ratio:\n            marker = middle\n            break\n        elif seq[middle] < ratio:\n            marker = middle\n            left = middle + 1\n        elif seq[middle] > ratio:\n            right = middle - 1\n    if marker % 2 == 0:\n        print('Utkarsh')\n    else:\n        print('Ashish')", "import math\nt = int(input())\nfor r in range(t):\n    (d, k) = list(map(int, input().split()))\n    p = 0\n    q = 0\n    w = ''\n    m = -2 + math.pow(4 - 8 * (1 - math.pow(d / k, 2)), 0.5)\n    n = -2 - math.pow(4 - 8 * (1 - math.pow(d / k, 2)), 0.5)\n    a = m / 4\n    b = n / 4\n    if a > b:\n        (a, b) = (b, a)\n    for i in range(int(a), math.ceil(b)):\n        if i > 0:\n            p += 1\n    if math.pow(int(b + 1) * k, 2) + math.pow(int(b + 1) * k, 2) <= d ** 2:\n        w = 'Utkarsh'\n    else:\n        w = 'Ashish'\n    print(w)"]