["for _ in range(int(input())):\n    n = int(input())\n    a = 0\n    b = 0\n    if n == 2:\n        print(2)\n        continue\n    for j in range(1, n // 2):\n        a += 2 ** j\n    a += 2 ** n\n    for j in range(n // 2, n):\n        b += 2 ** j\n    print(abs(a - b))", "import math\nt = int(input())\nfor q in range(t):\n    n = int(input())\n    arr = [2 ** (i + 1) for i in range(n)]\n    a = 0\n    b = sum(arr)\n    for i in range(n // 2, n):\n        a += 2 ** i\n    b -= a\n    print(abs(a - b))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = []\n    sm = 0\n    for i in range(1, n + 1):\n        l.append(2 ** i)\n    ns = n // 2 - 2\n    for i in range(n - 2, ns, -1):\n        sm = sm + l[i]\n        l.remove(l[i])\n    n = sum(l)\n    mode = abs(sm - n)\n    print(mode)", "while True:\n    try:\n        t = eval(input())\n        for i in range(t):\n            n = eval(input())\n            print(pow(2, n // 2 + 1) - 2)\n    except:\n        break", "n = int(input())\nfor _ in range(n):\n    a = int(input())\n    count = 0\n    for i in range(1, a // 2 + 1):\n        count += 2 ** i\n    print(count)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    calc = 2 ** (n // 2 + 1) - 2\n    print(calc)", "for _ in range(int(input())):\n    n = int(input())\n    k = n // 2 + 1\n    print(2 ** k - 2)", "t = int(input())\nfor _ in range(t):\n    a = 0\n    b = 0\n    w = 1\n    n = int(input())\n    for i in range(1, n // 2):\n        w *= 2\n        a += w\n    for i in range(n // 2, n):\n        w *= 2\n        b += w\n    w *= 2\n    a += w\n    print(abs(a - b))", "[print(2 ** (int(input()) // 2 + 1) - 2) for _ in range(int(input()))]", "t = int(input())\ncases = []\nwhile t > 0:\n    cases.append(int(input()))\n    t -= 1\nfor case in cases:\n    result = 0\n    b = 0\n    for n in range(1, case // 2):\n        result += 2 ** n\n    for n in range(1, case):\n        b += 2 ** n\n    print(2 ** case + 2 * result - b)", "for i in range(int(input())):\n    print(2 ** ((int(input()) + 2) // 2) - 2)", "a = [2 ** i for i in range(1, 31)]\nfor _ in range(int(input())):\n    n = int(input())\n    b = [a[n - 1]] + a[:n // 2 - 1]\n    c = a[n // 2 - 1:n - 1]\n    print(sum(b) - sum(c))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    count = 0\n    for i in range(1, n + 1):\n        if i < n // 2 or i == n:\n            count += 2 ** i\n        else:\n            count -= 2 ** i\n    count = abs(count)\n    print(count)", "n = int(input())\na = []\nfor i in range(1, n + 1):\n    s = int(input())\n    tot = 0\n    for j in range(1, int(s / 2) + 1):\n        tot = tot + 2 ** j\n    a.append(tot)\nfor i in a:\n    print(i)", "for i in range(int(input())):\n    print(2 ** (int(input()) // 2 + 1) - 2)", "for _ in range(int(input())):\n    n = int(input())\n    a = []\n    for i in range(1, n + 1):\n        a.append(2 ** i)\n    k = a[-1] + sum(a[:n // 2 - 1])\n    j = sum(a) - k\n    print(k - j)", "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = 2 ** n\n        b = 0\n        for i in range(1, n):\n            if i < n // 2:\n                a += 2 ** i\n            else:\n                b += 2 ** i\n        print(a - b)\nmain()", "t = int(input())\nfor _ in range(t):\n    counter = a = b = 0\n    coins = []\n    n = int(input())\n    if n == 2:\n        print(2)\n        continue\n    for i in range(1, n + 1):\n        coins.append(2 ** i)\n    a += coins[-1]\n    a += sum(coins[:n // 2 - 1])\n    b += sum((x for x in coins[n // 2 - 1:-1]))\n    print(abs(a - b))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = pow(2, n) + pow(2, n / 2) - 2\n    b = pow(2, n) - 2 - pow(2, n / 2) + 2\n    print(int(a - b))", "l = []\nfor i in range(1, 32):\n    l.append(2 ** i)\nn = int(input())\ns = []\nfor k in range(0, n):\n    v = int(input())\n    s.append(v)\nfor m in range(0, n):\n    s1 = l[0:s[m] // 2 - 1]\n    s2 = l[s[m] // 2 - 1:s[m]]\n    sum1 = sum(s1) + l[s[m]]\n    sum2 = sum(s2)\n    print(abs(sum2 - sum1))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(2 ** (n // 2 + 1) - 2)", "def solve():\n    n = int(input())\n    q = 0\n    for i in range(n // 2 - 1):\n        q += 2 ** (i + 1)\n    for i in range(n // 2 - 1, n - 1):\n        q -= 2 ** (i + 1)\n    q += 2 ** n\n    return q\nt = int(input())\nans = []\nwhile t:\n    ans.append(str(solve()))\n    t -= 1\nprint('\\n'.join(ans))", "t = int(input())\nwhile t > 0:\n    a = int(input())\n    print(int(2 ** (a / 2 + 1)) - 2)\n    t -= 1", "for _ in range(int(input())):\n    print((1 << (int(input()) >> 1)) - 1 << 1)", "for t in range(int(input())):\n    n = int(input())\n    all_nums = []\n    for i in range(1, n + 1):\n        all_nums.append(2 ** i)\n    print(all_nums[-1] + sum(all_nums[:n // 2 - 1]) - sum(all_nums[n // 2 - 1:-1]))", "for _ in range(int(input())):\n    n = int(input())\n    weights = [2 ** i if i <= n // 2 - 1 else -2 ** i for i in range(1, n)]\n    print(sum(weights) + 2 ** n)", "for _ in range(int(input())):\n    n = int(input())\n    weights = [2 ** i if i <= n // 2 - 1 else -2 ** i for i in range(1, n)]\n    print(sum(weights) + 2 ** n)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n == 2:\n        print(2)\n        continue\n    else:\n        a = n // 2\n        sum_1 = 2 ** n + 2 * (2 ** (a - 1) - 1)\n        sum_2 = 2 * (2 ** (n - 1) - 1) - 2 * (2 ** (a - 1) - 1)\n        print(sum_1 - sum_2)", "for i in range(int(input())):\n    n = int(input())\n    print(2 * (2 ** (n // 2 - 1) - 1) + 2 ** n - (2 * (2 ** (n - 1) - 1) - 2 * (2 ** (n // 2 - 1) - 1)))", "t = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    l = []\n    for j in range(n):\n        l.append(2 ** (j + 1))\n    half = n // 2\n    left = l[-1]\n    for m in range(half - 1):\n        left += l[m]\n    right = 0\n    for h in range(half - 1, n - 1):\n        right += l[h]\n    ans.append(abs(left - right))\nfor item in ans:\n    print(item)", "for i in range(int(input())):\n    n = int(input())\n    print(2 ** (n // 2 + 1) - 2)", "for i in range(int(input())):\n    n = int(input())\n    k = 2\n    z = 4\n    for j in range(1, n // 2):\n        k += z\n        z *= 2\n    print(k)", "for q in range(int(input())):\n    n = int(input())\n    s = []\n    s1 = []\n    for i in range(1, n + 1):\n        s.append(2 ** i)\n    s1.append(s[n - 1])\n    s.pop(n - 1)\n    for i in range(n // 2 - 1):\n        s1.append(s[0])\n        s.pop(0)\n    print(abs(sum(s) - sum(s1)))", "t = int(input())\nfor i in range(t):\n    x = int(input())\n    first = [2 ** i for i in range(1, x // 2)]\n    second = [2 ** i for i in range(x // 2, x)]\n    print(sum(first) + 2 ** x - sum(second))", "res = dict()\nx = 4\ny = 1\nwhile x <= 30:\n    res[x] = y\n    x += 2\n    y += 1\nk = int(input())\nfor i in range(k):\n    n = int(input())\n    a = 0\n    b = 0\n    if n == 2:\n        print(2)\n    else:\n        for j in range(1, res[n] + 1):\n            a += 1 << j\n        a += 1 << n\n        for j in range(res[n] + 1, n):\n            b += 1 << j\n        print(abs(a - b))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [2 ** i for i in range(1, n // 2)]\n    l1 = [2 ** i for i in range(n // 2, n)]\n    print(2 ** n + sum(l) - sum(l1))", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    ans = 2\n    for i in range(int(n / 2) - 1):\n        ans += ans + 2\n    print(ans)", "import sys\n\ndef main():\n    queries = map(int, sys.stdin.readlines()[1:])\n    lookup = [2, 6, 14, 30, 62, 126, 254, 510, 1022, 2046, 4094, 8190, 16382, 32766, 65534]\n    output = [lookup[q // 2 - 1] for q in queries]\n    print(*output, sep='\\n')\nBUFSIZE = 8192\n\ndef print_int_lines(lst):\n    print('\\n'.join(map(str, lst)))\nmain()", "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        print(case(n))\n\ndef sum2(n):\n    return 2 ** (n + 1) - 2\n\ndef case(n):\n    i = n // 2\n    a = 2 ** n + sum2(i - 1)\n    b = sum2(n) - a\n    return abs(a - b)\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = []\n    sm = 0\n    for i in range(1, n + 1):\n        l.append(2 ** i)\n    ns = n // 2 - 2\n    for i in range(n - 2, ns, -1):\n        sm = sm + l[i]\n        l.remove(l[i])\n    n = sum(l)\n    mode = abs(sm - n)\n    print(mode)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = r = 0\n    for i in range(1, n // 2):\n        l = l + pow(2, i)\n    l = l + pow(2, n)\n    for i in range(n // 2, n):\n        r = r + pow(2, i)\n    print(abs(l - r))\n    t = t - 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = []\n    b = []\n    a.append(pow(2, n))\n    (s1, s2) = (0, 0)\n    for i in range(n - 1):\n        if len(a) < n / 2:\n            a.append(pow(2, i + 1))\n        else:\n            b.append(pow(2, i + 1))\n    for i in range(int(n / 2)):\n        s1 += a[i]\n        s2 += b[i]\n    print(abs(s1 - s2))", "for i in range(int(input())):\n    b = int(input())\n    value = 2 ** ((b + 2) // 2) - 2\n    print(value)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = b = 0\n    a = 2 ** n\n    for i in range(1, n // 2):\n        a += 2 ** i\n    for i in range(n // 2, n):\n        b += 2 ** i\n    print(abs(a - b))", "tests = int(input())\nwg = [2 ** i for i in range(31)]\nfor _ in range(tests):\n    n = int(input())\n    print(wg[n] + sum(wg[1:n // 2]) - sum(wg[n // 2:n]))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = 2 ** n\n    d = 0\n    for i in range(1, n // 2):\n        s = s + 2 ** i\n    for i in range(n // 2, n):\n        d = d + 2 ** i\n    print(s - d)", "tc = int(input())\nfor i in range(tc):\n    x = int(input())\n    count = 0\n    for i in range(1, x // 2 + 1):\n        count += 2 ** i\n    print(count)", "x = int(input())\nfor j in range(x):\n    a = int(input())\n    count = 0\n    for i in range(1, a // 2 + 1):\n        count += 2 ** i\n    print(count)", "for i in range(int(input())):\n    print(2 ** ((int(input()) + 2) // 2) - 2)", "for s in [*open(0)][1:]:\n    print(2 ** (int(s) // 2 + 1) - 2)", "for _ in range(int(input())):\n    n = int(input())\n    coins = [2 ** n for n in range(1, n + 1)]\n    first_sum = coins[-1] + sum(coins[:n // 2 - 1])\n    second_sum = sum(coins[n // 2 - 1:-1])\n    print(first_sum - second_sum)", "n = int(input())\nfor _ in range(n):\n    a = int(input())\n    count = 0\n    for i in range(1, a // 2 + 1):\n        count += 2 ** i\n    print(count)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l_coins = []\n    for j in range(1, n + 1):\n        l_coins.append(2 ** j)\n    print(l_coins[-1] + sum(l_coins[0:int(n / 2) - 1]) - sum(l_coins[int(n / 2) - 1:n - 1]))", "num = int(input())\nfor i in range(num):\n    n = int(input())\n    lis = []\n    for i in range(1, n + 1):\n        z = (lambda x: 2 ** x)(i)\n        lis.append(z)\n    l1 = lis[:n // 2]\n    l2 = lis[n // 2:]\n    ma = max(l1)\n    ma2 = max(l2)\n    print(sum(l1) - ma + ma2 - (sum(l2) + ma - ma2))", "num = int(input())\nfor i in range(num):\n    n = int(input())\n    lis = []\n    for i in range(1, n + 1):\n        z = (lambda x: 2 ** x)(i)\n        lis.append(z)\n    l1 = lis[:n // 2]\n    l2 = lis[n // 2:]\n    ma = max(l1)\n    ma2 = max(l2)\n    print(sum(l1) - ma + ma2 - (sum(l2) + ma - ma2))", "for _ in [0] * int(input()):\n    print((1 << int(input()) // 2 + 1) - 2)", "for _ in range(int(input())):\n    x = int(input())\n    c = 0\n    for i in range(1, x // 2):\n        c += 2 ** i\n    for j in range(x // 2, x):\n        c -= 2 ** j\n    print(2 ** x + c)", "n = int(input())\nfor i in range(n):\n    numCoin = int(input())\n    a = 0\n    b = 0\n    a += 2 ** numCoin\n    for i in range(1, numCoin // 2):\n        a += 2 ** i\n    for i in range(numCoin // 2, numCoin):\n        b += 2 ** i\n    print(abs(a - b))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(2 ** (n // 2 + 1) - 2)", "case = int(input())\nfor i in range(case):\n    n = int(input())\n    p1 = 0\n    p2 = 0\n    for j in range(1, n):\n        if j < n / 2:\n            p1 += 2 ** j\n        else:\n            p2 += 2 ** j\n    p1 += 2 ** n\n    ans = p1 - p2\n    print(ans)", "n = int(input())\nTestCases = []\nfor i in range(0, n, 1):\n    TestCases.append(int(input()))\nfor i in range(0, n, 1):\n    sum1 = 2 ** TestCases[i]\n    sum2 = 0\n    for k in range(1, TestCases[i], 1):\n        if k < TestCases[i] // 2:\n            sum1 += 2 ** k\n        else:\n            sum2 += 2 ** k\n    print(abs(sum1 - sum2))", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    last = 2 ** n\n    sec_large = 2 ** (n - 1)\n    no_large = int(n // 2) - 1\n    large_sum = 2 * (2 ** no_large - 1) + last\n    a = 2 ** (no_large + 1)\n    power = int(n // 2)\n    small_sum = a * (2 ** power - 1)\n    print(large_sum - small_sum)", "for i in range(int(input())):\n    n = int(input())\n    a = 2 ** (n // 2) - 2 + 2 ** n\n    b = 2 ** n - 2 ** (n // 2)\n    print(abs(a - b))", "s = input()\nwhile True:\n    try:\n        s = int(input())\n        t = [int(pow(2, i)) for i in range(1, s + 1)]\n        if len(t) == 2:\n            print(abs(t[0] - t[1]))\n        else:\n            a = sum(t[0:len(t) // 2 - 1]) + t[-1]\n            b = sum(t[len(t) // 2 - 1:-1])\n            print(abs(a - b))\n    except:\n        break", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    print(2 ** (a // 2 + 1) - 2)", "R = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    print(2 ** (int(input()) // 2 + 1) - 2)", "for _ in range(int(input())):\n    n = int(input())\n    print(2 ** (n // 2 + 1) - 2)", "def answer(n):\n    pwr = n // 2 + 1\n    return 2 ** pwr - 2\n\ndef main():\n    t = int(input())\n    n = [0] * t\n    for j in range(t):\n        n[j] = int(input())\n    for j in range(t):\n        print(answer(n[j]))\nmain()", "[print(2 ** (int(input()) // 2 + 1) - 2) for _ in range(int(input()))]", "t = int(input())\nresult = []\nfor i in range(t):\n    arr = []\n    n = int(input())\n    mid = n // 2\n    for i in range(1, n + 1):\n        arr.append(2 ** i)\n    a = arr[-1] + sum(arr[:mid - 1])\n    b = sum(arr[mid - 1:-1])\n    if n == 2:\n        result.append(2)\n    else:\n        result.append(abs(b - a))\nfor i in result:\n    print(i)", "t = int(input())\nl = []\nfor i in range(1, 31):\n    l.append(pow(2, i))\nfor j in range(t):\n    x = int(input())\n    y = l[0:x]\n    temp = 0\n    for k in range(x - 2, x // 2 - 2, -1):\n        temp = temp + y[k]\n    print(sum(y) - 2 * temp)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    m = 2 * (2 ** (n // 2 - 1) - 1) + 2 ** n\n    k = 2 * (2 ** n - 1) - m\n    j = m - k\n    print(j)", "for _ in range(int(input())):\n    l = []\n    for i in range(1, int(input()) + 1):\n        l.append(2 ** i)\n    s = sum(l[:len(l) // 2 - 1]) + l[-1]\n    print(abs(sum(l) - 2 * s))", "t = int(input())\nres = []\nfor i in range(t):\n    n = int(input())\n    arr = []\n    for i in range(1, n + 1):\n        arr.append(2 ** i)\n    end = n // 2\n    sum1 = arr[len(arr) - 1] + sum(arr[0:end - 1])\n    sum2 = sum(arr[end - 1:len(arr) - 1])\n    res.append(abs(sum1 - sum2))\nfor r in res:\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    print(2 ** (1 + n // 2) - 2)", "t = int(input())\nwhile t:\n    n = int(input())\n    if n == 2:\n        print(2)\n    else:\n        arr = [2 ** i for i in range(1, n + 1)]\n        till = n // 2\n        onehalf = 0\n        for i in range(len(arr) - 2, 0, -1):\n            if till:\n                onehalf = onehalf + arr[i]\n                arr[i] = -1\n                till = till - 1\n        secondhalf = 0\n        for i in range(len(arr)):\n            if arr[i] == -1:\n                continue\n            else:\n                secondhalf = secondhalf + arr[i]\n        print(abs(onehalf - secondhalf))\n    t = t - 1", "a = int(input())\nfor i in range(a):\n    n = int(input())\n    print(2 ** (n // 2 + 1) - 2)", "t = int(input())\nfor rep in range(0, t):\n    n = int(input())\n    a_sum = 2 ** n\n    b_sum = 0\n    for i in range(1, n // 2):\n        a_sum += 2 ** i\n    for j in range(n // 2, n):\n        b_sum += 2 ** j\n    print(abs(a_sum - b_sum))", "input_ints = input()\ntests = []\nfor _ in range(int(input_ints)):\n    tests.append(int(input()))\nfor iterator in range(len(tests)):\n    coins_list = []\n    for discriminator in range(1, tests[iterator] + 1):\n        coins_list.append(2 ** discriminator)\n    pile_one = []\n    pile_two = []\n    pile_one = sum(coins_list[:len(coins_list) // 2 - 1]) + coins_list[-1]\n    pile_two = sum(coins_list[len(coins_list) // 2 - 1:-1])\n    print(pile_one - pile_two)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n == 2:\n        print(2)\n    else:\n        l = []\n        for j in range(1, n + 1):\n            l.append(2 ** j)\n        x = l[0:n // 2 - 1]\n        y = l[n // 2 - 1:n - 1]\n        s1 = sum(x) + l[n - 1]\n        s2 = sum(y)\n        print(abs(s1 - s2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    po = n // 2\n    print(2 * (2 ** po - 2) + 2)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    if n == 2:\n        print(2)\n        continue\n    else:\n        a = [2 ** n] + [2 ** i for i in range(1, n // 2)]\n        b = [2 ** (n - 1)] + [2 ** i for i in range(n // 2, n - 1)]\n        print(sum(a) - sum(b))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = n // 2\n    print(2 ** (x + 1) - 2)", "t = int(input())\nfor i in range(t):\n    b = int(input())\n    c = int(2 * (2 ** (b / 2) - 1))\n    print(c)", "for x in range(int(input())):\n    n = int(input())\n    (a, b) = (2 ** n, 0)\n    for x in range(1, n // 2):\n        a += 2 ** x\n    for x in range(n // 2, n):\n        b += 2 ** x\n    print(abs(a - b))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    side = n // 2\n    main = []\n    j = 1\n    while j <= n:\n        main.append(2 ** j)\n        j += 1\n    left = []\n    right = []\n    left.append(main[-1])\n    j = 0\n    while j < side - 1:\n        left.append(main[j])\n        j += 1\n    j = side - 1\n    while j < len(main) - 1:\n        right.append(main[j])\n        j += 1\n    print(abs(sum(left) - sum(right)))", "for _ in range(int(input())):\n    coins = int(input())\n    arr = [1 << i for i in range(1, coins + 1)]\n    a = arr[-1]\n    b = arr[-2]\n    i = 0\n    j = len(arr) - 3\n    while i < j:\n        a += arr[i]\n        b += arr[j]\n        i += 1\n        j -= 1\n    print(abs(a - b))", "def fun():\n    n = int(input(''))\n    c = 0\n    d = 0\n    c = c + 2 ** n\n    for i in range(1, n // 2):\n        c = c + 2 ** i\n    for i in range(n // 2, n):\n        d = d + 2 ** i\n    print(c - d)\nn = int(input(''))\nfor i in range(n):\n    fun()", "t = int(input())\nwhile t > 0:\n    t -= 1\n    a = int(input())\n    res = 0\n    for i in range(1, int(a / 2)):\n        res += 2 ** i\n    print(res * 2 + 2)", "for i in range(int(input())):\n    print(2 ** ((int(input()) + 2) // 2) - 2)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    p1 = 0\n    p2 = 0\n    ct = 0\n    for i in range(n, 0, -1):\n        a = 2 ** i\n        if p1 < p2 and ct < n // 2:\n            p1 += a\n            ct += 1\n        else:\n            p2 += a\n    print(abs(p1 - p2))\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = 2 ** n + sum([2 ** i for i in range(1, n // 2)])\n    b = sum([2 ** i for i in range(n // 2, n)])\n    print(a - b)", "for i in range(int(input())):\n    n = int(input())\n    for i in range(n):\n        res = pow(2, n // 2 + 1) - 2\n    print(res)", "for i in '_' * int(input()):\n    n = int(input())\n    array = [2 ** i for i in range(1, n + 1)]\n    a = array[-1:] + array[:n // 2 - 1]\n    b = array[n // 2 - 1:n - 1]\n    print(abs(sum(a) - sum(b)))", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    for i in range(n):\n        ans = pow(2, n // 2 + 1) - 2\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    (total1, total2) = (0, 0)\n    total1 += 2 ** n\n    x = n // 2\n    n -= 1\n    for i in range(x):\n        total2 += 2 ** n\n        n -= 1\n    while n > 0:\n        total1 += 2 ** n\n        n -= 1\n    print(abs(total1 - total2))", "for i in range(int(input())):\n    a = int(input())\n    b = []\n    for j in range(1, a + 1):\n        b.append(pow(2, j))\n    if a <= 2:\n        print(b[-1] - b[0])\n    else:\n        c = sum(b[0:a // 2 - 1]) + b[-1]\n        d = sum(b[a // 2 - 1:a - 1])\n        print(c - d)", "for i in range(int(input())):\n    print(2 ** ((int(input()) + 2) // 2) - 2)", "a = int(input())\nfor i in range(a):\n    n = int(input())\n    print(2 ** (n // 2 + 1) - 2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = 0\n    for i in range(1, int(n / 2)):\n        ans += 2 ** i\n    ans += 2 ** n\n    for i in range(int(n / 2), n):\n        ans -= 2 ** i\n    print(abs(ans))"]