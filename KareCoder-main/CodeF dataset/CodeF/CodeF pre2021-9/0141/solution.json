["m = int(input())\nl = []\nfor _ in range(m):\n    t = int(input())\n    a = input().split()\n    for i in range(0, t - 1, 2):\n        b = a[i]\n        c = a[i + 1]\n        a[i] = f'{-int(c)}'\n        a[i + 1] = b\n    l.append(' '.join(a))\nfor i in l:\n    print(i)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    result = []\n    if n % 2 == 0:\n        for i in range(0, n, 2):\n            result.append(-a[i + 1])\n            result.append(a[i])\n    else:\n        result.append(a[1] + a[2])\n        result.append(-a[0])\n        result.append(-a[0])\n        if n > 3:\n            for i in range(4, n, 2):\n                result.append(-a[i + 1])\n                result.append(a[i])\n    result = [str(x) for x in result]\n    print(' '.join(result))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r = []\n    for (i, item) in enumerate(reversed(a)):\n        if i % 2 == 0:\n            r.append(item * -1)\n        else:\n            r.append(item)\n    print(' '.join(map(str, r)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    res = []\n    for i in range(0, n, 2):\n        res.append(-a[i + 1])\n        res.append(a[i])\n    res = list(map(str, res))\n    print(' '.join(res))", "t = int(input())\nfor i in range(t):\n    result = []\n    n = int(input())\n    pechat = [int(n) for n in input().split()]\n    for k in range(0, len(pechat)):\n        if k % 2 == 0:\n            result.append(-1 * pechat[k + 1])\n        else:\n            result.append(pechat[k - 1])\n    print(' '.join(map(str, result)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [int(j) for j in input().split()]\n    s = ''\n    for a in range(n):\n        if a % 2 == 0:\n            s += str(-l[a + 1]) + ' '\n        else:\n            s += str(l[a - 1]) + ' '\n    print(s)", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    massiv = list(map(int, input().split()))\n    for j in range(1, len(massiv), 2):\n        (massiv[j - 1], massiv[j]) = (massiv[j] * -1, massiv[j - 1])\n    print(' '.join([str(j) for j in massiv]))", "t = int(input())\nfor _ in range(t):\n    nSelos = int(input())\n    selos = input().split()\n    resposta = [0 for _ in range(nSelos)]\n    for i in range(0, nSelos, 2):\n        resposta[i + 1] = selos[i]\n        resposta[i] = str(int(selos[i + 1]) * -1)\n    print(' '.join(resposta))", "def solution(doors_a):\n    doors_b = [[] for i in range(len(doors_a))]\n    for da_idx in range(len(doors_a)):\n        da = doors_a[da_idx]\n        db = doors_b[da_idx]\n        for s_idx in range(len(da) - 1):\n            if s_idx % 2 != 0:\n                continue\n            db.append(-1 * da[s_idx + 1])\n            db.append(da[s_idx])\n    return doors_b\nT = int(input())\ndoors_a = [[] for i in range(T)]\nfor d in doors_a:\n    _ = input()\n    d += list(map(int, input().split()))\ndoors_b = solution(doors_a)\nfor d in doors_b:\n    print(' '.join(map(str, d)))", "for l in [*open(0)][2::2]:\n    q = [*map(int, l.split())]\n    r = []\n    for i in range(0, len(q), 2):\n        r += [-q[i + 1], q[i]]\n    print(*r)", "def main():\n    tc_count = int(input())\n    for tc in range(tc_count):\n        n = int(input())\n        lst = list(map(int, input().split()))\n        sol = []\n        for i in range(0, n, 2):\n            sol.append(lst[i + 1] * -1)\n            sol.append(lst[i])\n        print('{}'.format(' '.join(map(str, sol))))\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    for i in range(0, len(a), 2):\n        b.append(-a[i + 1])\n        b.append(a[i])\n    print(' '.join(map(str, b)))", "for i in range(int(input())):\n    n = int(input())\n    a = [int(s) for s in input().split()][::-1]\n    print(' '.join([str(k) for k in [-a[i] if i % 2 == 0 else a[i] for i in range(n)]]))", "T = int(input())\nlst = []\nfor i in range(T):\n    lst1 = []\n    n = int(input())\n    lst2 = input().split(' ')\n    for b in range(n // 2):\n        lst1.append(str(int(lst2.pop(1)) * -1))\n        lst1.append(str(int(lst2.pop(0))))\n    lst.append(lst1)\nfor i in lst:\n    print(' '.join(i))", "cases = int(input())\narr = []\nfor i in range(cases):\n    n = int(input())\n    arr.append(list(map(int, input().split(' ', n))))\nfor item in arr:\n    result = []\n    for i in range(0, len(item) - 1, 2):\n        result.append(-item[i + 1])\n        result.append(item[i])\n    print(str(result).replace('[', '').replace(']', '').replace(',', ''))", "a = []\nc = ' '\nT = int(input())\nfor i in range(T):\n    b = []\n    n = int(input())\n    a = input().split()\n    for j in range(int(n / 2)):\n        j += j + 1\n        b.insert(0, a[j - 1])\n        b.insert(0, str(-int(a[j])))\n    print(c.join(b))", "T = int(input())\ns = ''\nfor i in range(T):\n    pech = int(input())\n    p = input()\n    k = p.split()\n    for j in range(pech // 2):\n        a = int(k[j * 2])\n        b = int(k[j * 2 + 1])\n        s += f'{-b} {a} '\n    s += '\\n'\nprint(s)", "def solve():\n    n = int(input().strip())\n    a = [int(x) for x in input().strip().split()]\n    b = list(range(n))\n    i = 0\n    while i + 1 < n:\n        (b[i], b[i + 1]) = (-a[i + 1], a[i])\n        i += 2\n    print(' '.join((str(x) for x in b)))\nfor _ in range(int(input().strip())):\n    solve()", "T = int(input())\na = list()\nfor j in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list()\n    for i in range(0, n, 2):\n        b += (-a[i + 1], a[i])\n    print(' '.join(map(str, b)))", "tc = int(input())\nwhile tc > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    newarr = []\n    for i in range(0, n, 2):\n        newarr.extend([str(-arr[i + 1]), str(arr[i])])\n    print(' '.join(newarr))\n    tc -= 1", "t = int(input())\nfor _ in range(t):\n    nSelos = int(input())\n    selos = input().split()\n    resposta = [0 for _ in range(nSelos)]\n    for i in range(0, nSelos, 2):\n        resposta[i + 1] = selos[i]\n        resposta[i] = str(int(selos[i + 1]) * -1)\n    print(' '.join(resposta))", "for l in [*open(0)][2::2]:\n    q = [*map(int, l.split())]\n    r = []\n    for i in range(0, len(q), 2):\n        r += [-q[i + 1], q[i]]\n    print(*r)", "for l in [*open(0)][2::2]:\n    q = [*map(int, l.split())]\n    r = []\n    for i in range(0, len(q), 2):\n        r += [-q[i + 1], q[i]]\n    print(*r)", "T = int(input())\nmas_all = []\nfor i in range(T):\n    mas_b = []\n    n = int(input())\n    mas_a = input().split(' ')\n    for b in range(n // 2):\n        mas_b.append(str(int(mas_a.pop(1)) * -1))\n        mas_b.append(str(int(mas_a.pop(0))))\n    mas_all.append(mas_b)\nfor i in mas_all:\n    print(' '.join(i))", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    seals_orochi = [int(x) for x in input().split()]\n    k = n // 2\n    a = 0\n    b = 1\n    seals_naruto = [0] * n\n    for j in range(k):\n        seals_naruto[a] = -seals_orochi[b]\n        seals_naruto[b] = seals_orochi[a]\n        a += 2\n        b += 2\n    print(' '.join(map(str, seals_naruto)))", "def p(d):\n    s = ''\n    for i in range(0, len(d), 2):\n        s += str(d[i + 1] * -1) + ' '\n        s += str(d[i]) + ' '\n    return s\na = int(input())\ns = ''\nfor i in range(a):\n    a = int(input())\n    d = list(map(int, input().split()))\n    s += p(d) + '\\n'\nprint(s)", "def p(d):\n    s = ''\n    for i in range(0, len(d), 2):\n        s += str(d[i + 1] * -1) + ' '\n        s += str(d[i]) + ' '\n    return s\na = int(input())\ns = ''\nfor i in range(a):\n    a = int(input())\n    d = list(map(int, input().split()))\n    s += p(d) + '\\n'\nprint(s)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(0, len(arr), 2):\n        (arr[i], arr[i + 1]) = (-arr[i + 1], arr[i])\n    print(' '.join(map(str, arr)))", "n = int(input())\nfor _ in range(n):\n    n_seals = int(input())\n    a_seals = [int(seal) for seal in input().split()]\n    b_seals = []\n    counter = 0\n    while counter < n_seals:\n        b_seals.append(-a_seals[counter + 1])\n        b_seals.append(a_seals[counter])\n        counter += 2\n    print(' '.join((str(x) for x in b_seals)))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in range(n):\n        if i & 1:\n            l[i] = -l[i]\n    print(*l[::-1])", "T = int(input())\nfor _ in range(T):\n    (n, a) = (int(input()), [int(i) for i in input().split()])\n    res = [0] * n\n    for i in range(0, n, 2):\n        (res[i], res[i + 1]) = (-a[i + 1], a[i])\n    print(*res)", "def solution(door):\n    i = 0\n    door_len = len(door)\n    result = ''\n    while i < door_len:\n        result += str(door[i + 1] * -1) + ' ' + str(door[i]) + ' '\n        i += 2\n    return result\nT = int(input())\ndoors = []\nfor i in range(T):\n    n = input()\n    doors.append(list(map(int, input().split())))\nfor door in doors:\n    print(solution(door))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    als = list(map(int, input().split()))\n    ansls = [0 for _ in range(n)]\n    for i in range(n // 2):\n        ansls[2 * i] = -1 * als[2 * i + 1]\n        ansls[2 * i + 1] = als[2 * i]\n    print(' '.join(map(str, ansls)))", "import sys\nrooms = int(sys.stdin.readline())\nfor _ in range(rooms):\n    nr_seals = int(sys.stdin.readline())\n    seals = list(map(int, sys.stdin.readline().split()))\n    energies = []\n    for i in range(int(len(seals) / 2)):\n        b1 = str(-seals[2 * i + 1])\n        b2 = str(seals[2 * i])\n        energies.append(b1)\n        energies.append(b2)\n    print(' '.join(energies))", "t = int(input())\nresult = []\nfor i in range(t):\n    n = int(input())\n    strengths = list(map(int, input().split()))\n    ans = [0] * n\n    for j in range(n // 2):\n        ans[2 * j] = str(-strengths[2 * j + 1])\n        ans[2 * j + 1] = str(strengths[2 * j])\n    result.append(ans)\nfor r in result:\n    print(' '.join(r))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    for i in range(n):\n        if i % 2 == 0:\n            b.append(-a[i + 1])\n        else:\n            b.append(a[i - 1])\n    print(' '.join([str(item) for item in b]))", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    i = 0\n    ans = []\n    while i < n:\n        ans.append(-l[i + 1])\n        ans.append(l[i])\n        i += 2\n    print(' '.join((str(i) for i in ans)))", "for l in [*open(0)][2::2]:\n    q = [*map(int, l.split())]\n    r = []\n    for i in range(0, len(q), 2):\n        r += [-q[i + 1], q[i]]\n    print(*r)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    answer = []\n    for i in range(0, n, 2):\n        answer.append(a[i + 1] * -1)\n        answer.append(a[i])\n    print(*answer)", "t = int(input())\nfor z in range(t):\n    sum = 0\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(0, n - 1, 2):\n        print(-a[i + 1], end=' ')\n        print(a[i], end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    answer = ''\n    for j in range(n):\n        if j % 2 == 0:\n            answer += str(-a[j + 1]) + ' '\n        else:\n            answer += str(a[j - 1]) + ' '\n    print(answer)", "t = int(input())\nb__ = []\nfor _ in range(t):\n    n = int(input())\n    a_ = [int(i) for i in input().split()]\n    b_ = []\n    for i in range(0, len(a_), 2):\n        a1 = a_[i]\n        a2 = a_[i + 1]\n        b_.append(-a2)\n        b_.append(a1)\n    b__.append(b_)\nfor b_ in b__:\n    print(' '.join([str(i) for i in b_]))", "T = int(input())\ninputs = []\noutputs = []\nfor i in range(0, T):\n    n = int(input())\n    k = [int(p) for p in input().split(' ')]\n    inputs.append(k)\nfor i in inputs:\n    for j in range(0, len(i)):\n        if j % 2 == 0:\n            outputs.append(str(-i[j + 1]))\n        else:\n            outputs.append(str(i[j - 1]))\n    print(' '.join(outputs))\n    outputs = []", "t = int(input())\ns = ''\nfor i in range(t):\n    n = int(input())\n    g = list(input().split())\n    for j in range(0, n, 2):\n        a = int(g[j])\n        b = int(g[j + 1])\n        s += str(-b) + ' '\n        s += str(a) + ' '\n    s += '\\n'\nprint(s)", "N = int(input())\nreses = []\nfor i in range(N):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    lsres = []\n    i = 0\n    for el in ls:\n        if i % 2 == 0:\n            lsres.append(-ls[i + 1])\n        else:\n            lsres.append(ls[i - 1])\n        i += 1\n    reses.append(lsres)\nfor el in reses:\n    print(' '.join(map(str, el)))", "def p(d):\n    s = ''\n    for i in range(0, len(d), 2):\n        s += str(d[i + 1] * -1) + ' '\n        s += str(d[i]) + ' '\n    return s\na = int(input())\ns = ''\nfor i in range(a):\n    a = int(input())\n    d = list(map(int, input().split()))\n    s += p(d) + '\\n'\nprint(s)", "def p(d):\n    s = ''\n    for i in range(0, len(d), 2):\n        s += str(d[i + 1] * -1) + ' '\n        s += str(d[i]) + ' '\n    return s\na = int(input())\ns = ''\nfor i in range(a):\n    a = int(input())\n    d = list(map(int, input().split()))\n    s += p(d) + '\\n'\nprint(s)", "for i in range(int(input())):\n    n = int(input())\n    sp = input().split()\n    sp1 = []\n    for j in range(0, n, 2):\n        a = int(sp[j])\n        b = int(sp[j + 1])\n        sp1.append(str(-1 * b))\n        sp1.append(str(a))\n    print(' '.join(sp1))", "komnaty = int(input())\nfor i in range(komnaty):\n    pechat = []\n    dveri = int(input())\n    pechat = input().split(' ')\n    b = []\n    n = 1\n    while n <= round(dveri / 2):\n        b.append(str(int(pechat[2 * n - 1]) * -1))\n        b.append(pechat[2 * n - 2])\n        n += 1\n    print(' '.join(b))", "T = int(input())\na = []\nb = []\ni = 0\nj = 0\nn = 0\nfor i in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b.append([])\n    for j in range(int(n / 2)):\n        if a[j * 2] > a[j * 2 + 1]:\n            b[i].append(a[j * 2 + 1])\n            b[i].append(-a[j * 2])\n        elif a[j * 2 + 1] >= a[j * 2]:\n            b[i].append(-a[j * 2 + 1])\n            b[i].append(a[j * 2])\ni = 0\nfor i in range(T):\n    print(' '.join(map(str, b[i])))"]