["import sys\ninput = sys.stdin.readline\nimport bisect\nfor _ in range(int(input())):\n    n = int(input())\n    w = sorted(map(int, input().split()))\n    c = bisect.bisect_right(w, 0)\n    if n > c > 1:\n        d = min((abs(j - i) for (i, j) in zip(w[:c], w[:c][1:])))\n        if d >= w[c]:\n            print(c + 1)\n        else:\n            print(c)\n    elif c == n:\n        print(c)\n    elif c == 0:\n        print(1)\n    else:\n        print(2)", "def main():\n    import sys\n    n = int(sys.stdin.readline())\n    b = int(sys.stdin.readline())\n    lines = sys.stdin.readlines()\n    for i in range(0, len(lines), 2):\n        x = [int(a) for a in lines[i].split()]\n        neg = [a for a in x if a <= 0]\n        pos = [a for a in x if a > 0]\n        neg = list(sorted(neg))\n        o = len(neg) + 1\n        if len(pos) == 0:\n            o = len(neg)\n        else:\n            min_element = min(pos)\n            for j in range(len(neg) - 1):\n                if neg[j + 1] - neg[j] < min_element:\n                    o = len(neg)\n        sys.stdout.write(str(o) + '\\n')\nmain()", "def strangeSubsequences(n, array):\n    positives = 0\n    negetives = 0\n    zeros = 0\n    for x in array:\n        if x < 0:\n            negetives += 1\n        elif x == 0:\n            zeros += 1\n        else:\n            positives += 1\n    if negetives == 0:\n        if zeros == 0:\n            return min(1, positives)\n        elif zeros == 1:\n            return 1 + min(1, positives)\n        elif zeros > 1:\n            return zeros\n    elif zeros > 1:\n        return negetives + zeros\n    else:\n        if positives == 0:\n            return negetives + zeros\n        m = []\n        pos = []\n        min_diff = float('inf')\n        for x in array:\n            if x <= 0:\n                m.append(x)\n            else:\n                pos.append(x)\n        m.sort()\n        for x in range(1, len(m)):\n            min_diff = min(min_diff, abs(m[x] - m[x - 1]))\n        min_pos = min(pos)\n        if min_diff >= min_pos:\n            return negetives + min(1, zeros) + min(1, positives)\n        else:\n            return negetives + min(1, zeros)\nt = int(input())\nfinal = []\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    final.append(strangeSubsequences(n, l))\nfor _ in range(t):\n    print(final[_])", "import sys\nimport math\nfrom math import gcd, inf, sqrt, pi, cos, sin, ceil, log2, floor, log\nfrom sys import stdin, stdout, setrecursionlimit\nsetrecursionlimit(2 ** 20)\nN = 20005\n\ndef isPowerOfTwo(x):\n    return x and (not x & x - 1)\nT = 1\nT = int(stdin.readline())\nfor _ in range(T):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().rstrip().split()))\n    mn = -1\n    nc = 0\n    a.sort()\n    for i in range(n):\n        if a[i] <= 0:\n            nc += 1\n        else:\n            mn = a[i]\n            break\n    if mn == -1:\n        print(nc)\n    else:\n        isOk = True\n        for i in range(nc):\n            if abs(a[i + 1] - a[i]) < mn:\n                isOk = False\n                break\n        if isOk:\n            print(nc + 1)\n        else:\n            print(nc)", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    m = 1000000000.0\n    i = 0\n    for (x, y) in zip(a, a[1:] + [0]):\n        i += 1\n        m = min(m, y - x)\n        if y > m:\n            break\n    print(i)", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    m = 1000000000.0\n    i = 1\n    while i < len(a) and (m := min(m, a[i] - a[i - 1])) >= a[i]:\n        i += 1\n    print(i)", "import sys\nn = int(sys.stdin.readline())\nfor i in range(n):\n    b = int(sys.stdin.readline())\n    x = [int(a) for a in sys.stdin.readline().split()]\n    neg = [a for a in x if a <= 0]\n    pos = [a for a in x if a > 0]\n    neg = list(sorted(neg))\n    o = len(neg) + 1\n    if len(pos) == 0:\n        o = len(neg)\n    else:\n        min_element = min(pos)\n        for j in range(len(neg) - 1):\n            if neg[j + 1] - neg[j] < min_element:\n                o = len(neg)\n    sys.stdout.write(str(o) + '\\n')", "for s in [*open(0)][2::2]:\n    m = 1000000000.0\n    i = 1\n    for (x, y) in zip((a := sorted(map(int, s.split()))), a[1:]):\n        m = min(m, y - x)\n        i += m >= y\n    print(i)", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    m = 1000000000.0\n    i = 1\n    for (x, y) in zip(a, a[1:]):\n        m = min(m, y - x)\n        i += m >= y\n    print(i)", "import sys\n\ndef get_io():\n    if '--local' in sys.argv:\n        return (open('input.txt', 'r'), open('output.txt', 'w'))\n    else:\n        return (sys.stdin, sys.stdout)\n\ndef solve(fin, fout):\n    n = int(fin.readline())\n    a = list(map(int, fin.readline().split()))\n    pos = [x for x in a if x > 0]\n    non_pos = [x for x in a if x <= 0]\n    non_pos.sort()\n    dist = min([non_pos[i] - non_pos[i - 1] for i in range(1, len(non_pos))], default=2000000000)\n    answer = len(non_pos) + (1 if any(map(lambda x: x <= dist, pos)) else 0)\n    print(answer, file=fout)\n\ndef main():\n    (fin, fout) = get_io()\n    tests = int(fin.readline())\n    for test in range(tests):\n        solve(fin, fout)\nmain()", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    dif = 10 ** 10\n    mark = None\n    for (i, aa) in enumerate(a):\n        if aa <= 0:\n            ans += 1\n        else:\n            mark = aa\n            break\n        if i:\n            dif = min(dif, a[i] - a[i - 1])\n    if not mark is None:\n        if dif >= mark:\n            ans += 1\n    print(ans)", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    m = 1000000000.0\n    i = 1\n    while i < len(a) and (m := min(m, a[i] - a[i - 1])) >= a[i]:\n        i += 1\n    print(i)", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    m = 1000000000.0\n    i = 1\n    while i < len(a) and (m := min(m, a[i] - a[i - 1])) >= a[i]:\n        i += 1\n    print(i)", "for s in [*open(0)][2::2]:\n    a = (*sorted(map(int, s.split())), 0)\n    m = 1000000000.0\n    i = 0\n    for (x, y) in zip(a, a[1:]):\n        i += 1\n        m = min(m, y - x)\n        if y > m:\n            break\n    print(i)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if len(a) < 2:\n        print(len(a))\n        continue\n    if a[len(a) - 1] <= 0:\n        print(len(a))\n        continue\n    p = 0\n    diff = a[1] - a[0]\n    for i in range(1, n):\n        if a[i] > 0:\n            p = i\n            break\n        d = a[i + 1] - a[i]\n        if d < diff:\n            diff = d\n    if a[p] <= diff:\n        print(p + 1)\n    else:\n        print(p)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    data = list(map(int, sys.stdin.readline().split()))\n    data.sort()\n    (ans, diff) = ([data[0]], float('inf'))\n    for i in range(1, len(data)):\n        diff = min(diff, abs(ans[-1] - data[i]))\n        if data[i] > diff:\n            break\n        ans.append(data[i])\n    print(len(ans))", "import sys\nt = int(sys.stdin.readline())\nfor k in range(t):\n    n = int(sys.stdin.readline())\n    strnums = sys.stdin.readline().replace('\\n', '').split()\n    nums = list(map(int, strnums))\n    nums.sort()\n    maximum = 10000000000\n    len_max = 1\n    for i in range(1, n):\n        maximum = min(maximum, nums[i] - nums[i - 1])\n        if nums[i] > maximum:\n            break\n        len_max += 1\n    print(len_max)", "from sys import stdin\ninput = stdin.readline\nfrom collections import Counter\n\ndef solve():\n    n = int(input())\n    smallest_positive_num = float('inf')\n    negative_arr = []\n    for char in input().split():\n        num = int(char)\n        if num <= 0:\n            negative_arr.append(num)\n        else:\n            smallest_positive_num = min(smallest_positive_num, num)\n    if len(negative_arr) == n:\n        return n\n    smallest_positive_diff = float('inf')\n    negative_arr.sort()\n    for i in range(len(negative_arr) - 1):\n        smallest_positive_diff = min(smallest_positive_diff, negative_arr[i + 1] - negative_arr[i])\n    ans = len(negative_arr)\n    if smallest_positive_diff >= smallest_positive_num:\n        ans += 1\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "import sys\nsys.setrecursionlimit(10 ** 6)\nINF = float('inf')\nMOD = 10 ** 9 + 7\n\ndef solve():\n\n    def II():\n        return int(sys.stdin.readline())\n\n    def LI():\n        return list(map(int, sys.stdin.readline().split()))\n\n    def LC():\n        return list(input())\n\n    def IC():\n        return [int(c) for c in input()]\n\n    def MI():\n        return map(int, sys.stdin.readline().split())\n    T = II()\n    for t in range(T):\n        N = II()\n        A = LI()\n        A.sort()\n        Minabs = INF\n        MAX = A[0]\n        Ans = 1\n        for n in range(1, N):\n            if Minabs > abs(A[n] - A[n - 1]):\n                Minabs = abs(A[n] - A[n - 1])\n            MAX = A[n]\n            if Minabs >= MAX:\n                Ans += 1\n        print(Ans)\n    return\nsolve()", "from sys import stdin\nfrom bisect import bisect\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    arr = list(map(int, stdin.readline().split()))\n    arr.sort()\n    x = bisect(arr, 0)\n    if n == 1:\n        print(1)\n    else:\n        m = abs(arr[0] - arr[1])\n        for i in range(x - 1):\n            m = min(m, abs(arr[i] - arr[i + 1]))\n        if (x == n or arr[x] > min(m, abs(arr[x] - arr[x - 1]))) and x != 0:\n            ans = x\n        else:\n            ans = x + 1\n        print(ans)", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    m = 1000000000.0\n    i = 0\n    for (x, y) in zip(a, a[1:] + [0]):\n        i += 1\n        m = min(m, y - x)\n        if y > m:\n            break\n    print(i)", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    m = 1000000000.0\n    i = 0\n    for (x, y) in zip(a, a[1:] + [-1000000000.0]):\n        i += 1\n        m = min(m, y - x)\n        if y > m:\n            break\n    print(i)", "out = []\n\ndef f(x):\n    for el in enumerate(x):\n        try:\n            q = abs(el[1] - x[el[0] + 1])\n            if q == 1 and q < x[-1]:\n                return False\n            elif q < x[-1]:\n                return False\n        except:\n            pass\n    return True\nfor _ in range(int(input())):\n    lst = int(input())\n    s = False\n    t = input()\n    st = sorted(list(map(int, t.split())))\n    for i in range(len(st)):\n        if st[i] <= 0:\n            continue\n        else:\n            st = st[:i + 1]\n            break\n    while len(st) != 0:\n        if f(st):\n            out.append(len(st))\n            break\n        else:\n            st = st[:-1]\nfor e in out:\n    print(e)", "def check(cnt, list, n):\n    if cnt == 0:\n        return 1\n    for i in range(1, len(list)):\n        if list[i] > 0:\n            break\n        if list[i] - list[i - 1] < n:\n            return 0\n    return 1\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    list = [int(item) for item in input().split()]\n    list.sort()\n    cnt = 0\n    flag = 0\n    for i in list:\n        if i <= 0:\n            cnt += 1\n        else:\n            flag = check(cnt, list, i)\n            break\n    print(cnt + flag)\n    t -= 1", "from sys import stdin\nT = int(stdin.readline())\nwhile T:\n    n = int(stdin.readline())\n    l = list(map(int, stdin.readline().split()))\n    p = 0\n    ne = 0\n    z = 0\n    pa = []\n    na = []\n    for i in range(n):\n        if l[i] > 0:\n            p += 1\n            pa.append(l[i])\n        elif l[i] == 0:\n            z += 1\n        else:\n            ne += 1\n            na.append(l[i])\n    if z > 0:\n        na.append(0)\n    na = sorted(na)\n    diff = []\n    for i in range(len(na) - 1):\n        diff.append(abs(na[i + 1] - na[i]))\n    a1 = ne + z\n    a2 = 1\n    try:\n        if min(diff) >= min(pa):\n            a2 = ne + min(1, p) + min(1, z)\n    except:\n        a2 = 1\n    if ne == 0:\n        a2 = max(a2, min(1, p) + min(1, z))\n    elif ne == 1:\n        a2 = max(a2, min(1, ne) + min(1, p))\n    print(max(a1, a2))\n    T -= 1", "for s in [*open(0)][2::2]:\n    a = (*sorted(map(int, s.split())), 0)\n    m = 1000000000.0\n    i = 0\n    for (x, y) in zip(a, a[1:]):\n        i += 1\n        m = min(m, y - x)\n        if y > m:\n            break\n    print(i)", "for s in [*open(0)][2::2]:\n    m = 1000000000.0\n    i = 1\n    for (x, y) in zip((a := sorted(map(int, s.split()))), a[1:]):\n        m = min(m, y - x)\n        i += m >= y\n    print(i)", "for s in [*open(0)][2::2]:\n    m = 1000000000.0\n    i = 1\n    for (x, y) in zip((a := sorted(map(int, s.split()))), a[1:]):\n        m = min(m, y - x)\n        i += m >= y\n    print(i)", "for s in [*open(0)][2::2]:\n    m = 1000000000.0\n    i = 1\n    for (x, y) in zip((a := sorted(map(int, s.split()))), a[1:]):\n        m = min(m, y - x)\n        i += m >= y\n    print(i)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    a.sort()\n    ans = sum([x <= 0 for x in a])\n    mn = min([x if x > 0 else 10 ** 9 + 7 for x in a])\n    flag = mn < 10 ** 9 + 7\n    for i in range(1, n):\n        if a[i] <= 0:\n            flag &= a[i] - a[i - 1] >= mn\n    if flag == True:\n        print(ans + 1)\n    else:\n        print(ans)", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    n = int(sys.stdin.readline())\n    data = list(map(int, sys.stdin.readline().split()))\n    data.sort()\n    cnt = 1\n    prev = data[0]\n    diff = float('INF')\n    for j in range(1, len(data)):\n        temp = data[j]\n        if diff > abs(prev - temp):\n            diff = abs(prev - temp)\n        if diff >= temp:\n            cnt += 1\n            prev = temp\n    print(cnt)", "def check(arr):\n    for i in arr:\n        if i > 0:\n            return i\n        else:\n            continue\n    return 0\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    a = check(lst)\n    count = 0\n    if a == 0:\n        print(n)\n    else:\n        for j in range(0, lst.index(a) - 1):\n            x = lst[j]\n            y = lst[j + 1]\n            if y - x >= a:\n                continue\n            else:\n                count = count + 1\n                break\n        if count > 0:\n            print(lst.index(a))\n        else:\n            print(lst.index(a) + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = sorted([int(x) for x in input().split()])\n    dis = 10 ** 10\n    for i in range(1, n):\n        dis = min(dis, a[i] - a[i - 1])\n        if a[i] > 0:\n            print(i + 1 if a[i] <= dis else i)\n            break\n    else:\n        print(n)", "answers = []\n\ndef solve(n, arr):\n    store = []\n    posStore = []\n    for ele in arr:\n        if ele <= 0:\n            store.append(ele)\n        else:\n            posStore.append(ele)\n    store.sort()\n    minDiff = float('inf')\n    length = len(store)\n    for i in range(length - 1):\n        if store[i + 1] - store[i] < minDiff:\n            minDiff = store[i + 1] - store[i]\n    if len(posStore) == 0:\n        answers.append(len(store))\n        return\n    else:\n        temp = min(posStore)\n        if temp <= minDiff:\n            answers.append(len(store) + 1)\n        else:\n            answers.append(len(store))\nT = int(input())\nwhile T:\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    solve(n, arr)\n    T -= 1\nfor ans in answers:\n    print(ans)", "t = int(input())\nout = []\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    min_pos = -1\n    neg_list = []\n    diff = -1\n    count = 0\n    for j in l:\n        if j <= 0:\n            neg_list.append(j)\n            count += 1\n        elif j > 0:\n            if min_pos == -1 or min_pos > j:\n                min_pos = j\n    neg_list.sort()\n    for j in range(len(neg_list) - 1):\n        if diff == -1 or diff > abs(neg_list[j] - neg_list[j + 1]):\n            diff = abs(neg_list[j] - neg_list[j + 1])\n    if min_pos != -1 and (diff == -1 or diff >= min_pos):\n        count += 1\n    out.append(count)\nfor i in range(len(out)):\n    print(out[i])", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    cnt = 0\n    if n <= 1:\n        print(1)\n    else:\n        max1 = a[-1]\n        for i in range(1, len(a)):\n            if max1 > a[i] - a[i - 1]:\n                max1 = a[i] - a[i - 1]\n            if max1 >= a[i]:\n                cnt += 1\n            else:\n                break\n        print(cnt + 1)", "def mindiff(a, m):\n    for i in range(len(a) - 1):\n        if abs(a[i] - a[i + 1]) < m:\n            return True\n            break\n    return False\n\ndef weird(l):\n    if len(l) == 1:\n        return 1\n    else:\n        a = sorted(l)\n        cond = False\n        i = 0\n        m = 0\n        while cond == False and i <= len(a) - 1:\n            if a[i] > 0:\n                m = a[i]\n                cond = True\n            else:\n                i = i + 1\n        if mindiff(a[0:i + 1], m) == True:\n            return len(a[0:i])\n        else:\n            return len(a[0:i + 1])\nx = int(input())\nm = []\nfor i in range(x):\n    y = input()\n    z = input()\n    z1 = z.split(' ')\n    z2 = [int(t) for t in z1]\n    m.append(z2)\nfor j in range(x):\n    print(weird(m[j]))", "for z in [*open(0)][2::2]:\n    b = 1000000000.0\n    i = 1\n    for (x, y) in zip((a := sorted(map(int, z.split()))), a[1:]):\n        b = min(b, y - x)\n        i += b >= y\n    print(i)", "def solve(n, a):\n    a.sort()\n    b = []\n    for elem in a:\n        if elem < 0:\n            b.append(elem)\n        if elem == 0:\n            b.append(elem)\n        if elem > 0:\n            for i in range(1, len(b)):\n                if b[i] - b[i - 1] < elem:\n                    return len(b)\n            return len(b) + 1\n    return len(b)\nt = int(input())\nfor test in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    print(solve(n, a))", "inp = int(input())\nfor _ in range(inp):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    a.sort()\n    m = a[-1]\n    count = 0\n    while count < n and a[count] <= 0:\n        count += 1\n    if count == n:\n        print(count)\n        continue\n    for i in range(1, count):\n        if a[i] - a[i - 1] < a[count]:\n            count -= 1\n            break\n    print(count + 1)", "for s in [*open(0)][2::2]:\n    m = 1000000000.0\n    i = 1\n    for (x, y) in zip((a := sorted(map(int, s.split()))), a[1:]):\n        m = min(m, y - x)\n        i += m >= y\n    print(i)", "def take_or_leave(list, maxi, cnt):\n    if cnt == 0:\n        return 1\n    for i in range(1, len(list)):\n        if list[i] > 0:\n            break\n        if abs(list[i] - list[i - 1]) < maxi:\n            return 0\n    return 1\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    list = [int(item) for item in input().split()]\n    list.sort()\n    cnt = 0\n    flag = 0\n    for i in list:\n        if i <= 0:\n            cnt += 1\n        else:\n            flag = take_or_leave(list, i, cnt)\n            if flag == 1:\n                cnt += 1\n            break\n    t -= 1\n    print(cnt)", "def Solve():\n    for t in range(int(input())):\n        n = int(input())\n        l = sorted(list(map(int, input().split())))\n        p = 99999999999999999\n        k = 0\n        for i in range(1, n):\n            x = l[i - 1]\n            y = l[i]\n            if y - x < y or y > p:\n                break\n            else:\n                p = min(p, y - x)\n                k += 1\n        print(k + 1)\nSolve()", "from sys import stdin, stdout\nfrom collections import defaultdict as dd\nfrom collections import deque\nfrom math import gcd, ceil, comb, perm\ninput = stdin.readline\nflush = stdout.flush\ntc = 1\ntc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    (neg, zero, pos) = (0, 0, 0)\n    maxneg = float('-inf')\n    for i in l:\n        if i > 0:\n            pos += 1\n        elif i < 0:\n            neg += 1\n        else:\n            zero += 1\n    ans1 = neg + zero\n    mn = float('inf')\n    i = 1\n    while i < n and l[i] <= 0:\n        mn = min(mn, abs(l[i] - l[i - 1]))\n        i += 1\n    if i == n:\n        print(max(ans1, 1))\n        continue\n    if mn >= l[i]:\n        print(ans1 + 1)\n        continue\n    print(max(1, ans1))", "from sys import stdin\nimport math\n\ndef ii():\n    return int(stdin.readline())\n\ndef mi():\n    return map(int, stdin.readline().split())\n\ndef li():\n    return list(mi())\n\ndef si():\n    return stdin.readline()\nt = 1\nt = ii()\nfor _ in range(t):\n    n = ii()\n    l1 = li()\n    cnt = 0\n    min1 = 1000000000000\n    min1_dif = min1 - 1\n    for i in l1:\n        if i <= 0:\n            cnt += 1\n        else:\n            min1 = min(min1, i)\n    l1.sort()\n    for i in range(1, n):\n        if l1[i] > 0:\n            break\n        else:\n            min1_dif = min(min1_dif, abs(l1[i] - l1[i - 1]))\n    if min1_dif >= min1:\n        cnt += 1\n    print(cnt)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    i = 0\n    while i < n and a[i] <= 0:\n        i += 1\n    if i == n:\n        print(n)\n        continue\n    for j in range(1, i):\n        if a[j] - a[j - 1] < a[i]:\n            i -= 1\n            break\n    print(i + 1)", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    m = 1000000000.0\n    i = 1\n    for (x, y) in zip(a, a[1:]):\n        m = min(m, y - x)\n        i += m >= y\n    print(i)", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    m = 1000000000.0\n    i = 1\n    for (x, y) in zip(a, a[1:]):\n        m = min(m, y - x)\n        i += m >= y\n    print(i)", "import sys\nfor j in range(int(sys.stdin.readline().strip())):\n    N = int(sys.stdin.readline().strip())\n    arr = list(map(int, sys.stdin.readline().strip().split()))\n    arr.sort()\n    answer = 1\n    minimum = float('inf')\n    for i in range(1, N):\n        if abs(arr[i - 1] - arr[i]) < minimum:\n            minimum = abs(arr[i - 1] - arr[i])\n        if arr[i] <= minimum:\n            answer += 1\n    print(answer)", "def Solve():\n    for t in range(int(input())):\n        n = int(input())\n        l = sorted(list(map(int, input().split())))\n        p = 10 ** 9 + 1\n        k = 0\n        for i in range(1, n):\n            x = l[i - 1]\n            y = l[i]\n            if y - x < y or y > p:\n                break\n            else:\n                p = min(p, y - x)\n                k += 1\n        print(k + 1)\nSolve()", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = 0\n    arr.sort()\n    min = arr[0]\n    i = 0\n    flag = False\n    for i in range(n):\n        if arr[i] > 0:\n            flag = True\n            break\n        count += 1\n    if flag:\n        flag2 = False\n        max = i\n        max2 = arr[max]\n        for i in range(1, max + 1, 1):\n            if arr[i] - arr[i - 1] < max2:\n                flag2 = True\n                break\n        if flag2:\n            print(count)\n        else:\n            print(count + 1)\n    else:\n        print(count)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    k = 0\n    p = -10000000000000\n    m_dif = 1000000000000\n    for x in a:\n        if x > 0:\n            break\n        k += 1\n        m_dif = min(m_dif, x - p)\n        p = x\n    if k < n and m_dif >= a[k]:\n        k += 1\n    print(max(k, 1))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 1\n    m = float('inf')\n    a.sort()\n    for i in range(1, len(a)):\n        if a[i] - a[i - 1] < m:\n            m = a[i] - a[i - 1]\n        if a[i] <= m:\n            c += 1\n        else:\n            break\n    print(c)", "import sys\ninput = sys.stdin.readline\nRI = lambda : [int(x) for x in sys.stdin.readline().strip().split()]\nrw = lambda : input().strip().split()\nfrom collections import defaultdict as df\nrn = lambda : int(input().strip())\ninfinite = float('inf')\nt = rn()\nfor i in range(t):\n    n = rn()\n    l = RI()\n    neg = []\n    pos = []\n    zero = 0\n    ans = 0\n    for j in range(len(l)):\n        if l[j] <= 0:\n            neg.append(l[j])\n            zero += 1 if l[j] == 0 else 0\n        else:\n            pos.append(l[j])\n    if len(pos) == 0:\n        ans = n\n    elif len(pos) == n:\n        ans = 1\n    else:\n        mini = min(pos)\n        neg.sort()\n        mindiff = infinite\n        for j in range(0, len(neg) - 1, 1):\n            mindiff = min(mindiff, neg[j + 1] - neg[j])\n        if mindiff >= mini:\n            ans = len(neg) + 1\n        else:\n            ans = len(neg)\n    print(ans)", "def sol(A):\n    neg = []\n    pos = []\n    for a in A:\n        if a <= 0:\n            neg.append(a)\n        else:\n            pos.append(a)\n    neg = sorted(neg)\n    if not pos:\n        return len(neg)\n    if len(neg) == 1:\n        return 2\n    if len(neg) == 0:\n        return 1\n    minn = min(pos)\n    diff = 2 ** 31\n    for i in range(len(neg) - 1):\n        diff = min(diff, neg[i + 1] - neg[i])\n    if diff >= minn:\n        return len(neg) + 1\n    else:\n        return len(neg)\nx = int(input())\nfor _ in range(x):\n    y = int(input())\n    A = list(map(int, input().split()))\n    print(sol(A))", "t = int(input())\nsizes = []\nnums = []\nfor i in range(t):\n    size = int(input())\n    l = list(map(int, input().split()))\n    sizes.append(size)\n    nums.append(l)\nfor i in range(t):\n    flag = 0\n    currentArr = nums[i]\n    currentArr.sort()\n    right = sizes[i] - 1\n    for left in range(sizes[i] - 1):\n        minDiff = abs(currentArr[left] - currentArr[left + 1])\n        while right > left and currentArr[right] > minDiff:\n            right -= 1\n        if left == right:\n            flag = 1\n            break\n    if flag:\n        print(left + 1)\n    else:\n        print(sizes[i])", "def solution(n, a):\n    a.sort()\n    min_diff = 10 ** 10\n    fin_idx = 0\n    for i in range(1, len(a)):\n        if abs(a[i] - a[i - 1]) < min_diff:\n            min_diff = abs(a[i] - a[i - 1])\n        if a[i] > 0:\n            if a[i] > min_diff:\n                break\n            fin_idx = i\n            break\n        fin_idx = i\n    return fin_idx + 1\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solution(n, a))", "_ = int(input())\nfor i in range(_):\n    l = int(input())\n    word = [int(x) for x in input().split()]\n    word.sort()\n    for i in range(0, l - 1):\n        if word[i] >= 1:\n            l = i + 1\n            break\n    done = 0\n    for i in range(0, l - 1):\n        if word[i + 1] - word[i] < word[l - 1]:\n            l = l - 1\n            break\n    print(l)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(1)\n    else:\n        l.sort()\n        m = abs(l[0] - l[1])\n        f = n\n        if l[0] <= 0:\n            for i in range(1, n):\n                if l[i] <= 0:\n                    k = abs(l[i - 1] - l[i])\n                    m = min(m, k)\n                else:\n                    f = i\n                    break\n            if f < n and m >= l[f]:\n                print(f + 1)\n            else:\n                print(f)\n        else:\n            print(1)", "T = int(input())\nwhile T:\n    T -= 1\n    n = int(input())\n    s = list(map(int, input().split()))\n    s.sort()\n    cnt = 0\n    p = -1\n    for i in range(n):\n        if s[i] <= 0:\n            cnt += 1\n        else:\n            p = i\n            break\n    if p != -1:\n        tag = True\n        for i in range(p):\n            if s[i + 1] - s[i] < s[p]:\n                tag = False\n        if tag:\n            cnt += 1\n    print(max(1, cnt))", "def main():\n    num_tests = int(input())\n    count = 0\n    while count < num_tests:\n        length = int(input())\n        array = [int(num) for num in input().strip().split()]\n        array = sorted(array)\n        (negative_nums, postive_nums) = ([], [])\n        for num in array:\n            if num <= 0:\n                negative_nums.append(num)\n            else:\n                postive_nums.append(num)\n        if len(negative_nums) == 0:\n            print(1)\n        elif len(postive_nums) == 0:\n            print(len(negative_nums))\n        elif len(negative_nums) == 1 and len(postive_nums) >= 1:\n            print(2)\n        else:\n            for i in range(0, len(negative_nums) - 1):\n                if negative_nums[i + 1] - negative_nums[i] < postive_nums[0]:\n                    break\n                if i == len(negative_nums) - 2:\n                    negative_nums.append(postive_nums[0])\n            print(len(negative_nums))\n        count += 1\nmain()", "t = int(input())\nfor t in range(t):\n    q = int(input())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    j = 0\n    if q <= 1:\n        print(1)\n    else:\n        max1 = lst[-1]\n        for i in range(1, len(lst)):\n            if max1 > lst[i] - lst[i - 1]:\n                max1 = lst[i] - lst[i - 1]\n            if max1 >= lst[i]:\n                j += 1\n            else:\n                break\n        print(j + 1)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = []\n    a = list(map(int, input().split()))\n    a.sort()\n    min1 = 0\n    if n >= 2:\n        min1 = abs(a[1] - a[0])\n    else:\n        min1 = a[0]\n    j = 1\n    index1 = 0\n    while j < n and min1 >= a[j]:\n        if abs(a[j] - a[j - 1]) < min1:\n            min1 = abs(a[j] - a[j - 1])\n        if a[j] <= min1:\n            index1 = j\n        j += 1\n    print(index1 + 1)", "import math\nt = int(input())\n\ndef solve(a):\n    a.sort()\n    L = len(a)\n    if a[0] > 0 or L == 1:\n        return 1\n    min_diff = math.inf\n    idx = 1\n    while idx < L and a[idx] <= 0:\n        curr = a[idx] - a[idx - 1]\n        if min_diff > curr:\n            min_diff = curr\n        idx += 1\n    if idx < L:\n        return idx if min_diff < a[idx] else idx + 1\n    return idx\nfor test in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    print(solve(a))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    neg = []\n    pos = []\n    for i in a:\n        if i <= 0:\n            neg.append(i)\n        else:\n            pos.append(i)\n    res = len(neg)\n    if res:\n        if len(pos):\n            m = min(pos)\n            neg.sort()\n            if len(neg) > 1:\n                good = True\n                for i in range(1, len(neg)):\n                    if abs(neg[i - 1] - neg[i]) < m:\n                        good = False\n                        break\n                print(res + (1 if good else 0))\n            else:\n                print(res + 1)\n        else:\n            print(res)\n    else:\n        print(1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    neg = []\n    pos = []\n    for i in arr:\n        if i <= 0:\n            neg.append(i)\n        else:\n            pos.append(i)\n            break\n    if len(pos) > 0:\n        mx = pos[0]\n        flag = False\n        for i in range(len(neg) - 1):\n            if abs(arr[i] - arr[i + 1]) < mx:\n                flag = True\n                break\n        if flag:\n            print(len(neg))\n        else:\n            print(len(neg) + 1)\n    else:\n        print(len(neg))", "for tt in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    if l[0] > 0:\n        print(1)\n        continue\n    neg = 1\n    mi = 10 ** 9 + 7\n    idx = -1\n    for i in range(1, n):\n        if l[i] <= 0:\n            neg += 1\n            mi = min(mi, l[i] - l[i - 1])\n        else:\n            idx = i\n            break\n    if neg == n:\n        print(neg)\n        continue\n    if mi >= l[idx]:\n        print(neg + 1)\n    else:\n        print(neg)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    cnt = 0\n    l.sort()\n    x = None\n    for i in l:\n        if i <= 0:\n            cnt = cnt + 1\n        else:\n            x = i\n            break\n    f = 1\n    if cnt == 0:\n        print(1)\n        continue\n    if x == None:\n        print(cnt)\n        continue\n    for i in range(len(l) - 1):\n        if l[i + 1] <= 0:\n            if abs(l[i] - l[i + 1]) < x:\n                f = 0\n                break\n    if f == 0:\n        print(cnt)\n    else:\n        print(cnt + 1)", "t = int(input())\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    for (i, x) in enumerate(a):\n        if x > 0:\n            j = i\n            break\n        else:\n            j = -1\n    if j == 0:\n        return 1\n    if j == -1:\n        return n\n    if j == 1:\n        return 2\n    ar = a[:j]\n    ds = [ar[i + 1] - ar[i] for i in range(j - 1)]\n    if min(ds) >= a[j]:\n        return j + 1\n    else:\n        return j\nfor _ in range(t):\n    print(main())", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = 1\n    m = 10000000000\n    while c < n and l[c] <= 0:\n        m = min(l[c] - l[c - 1], m)\n        c += 1\n    if c < n:\n        if m >= l[c] and l[c] - l[c - 1] >= l[c]:\n            c += 1\n    print(c)", "n = int(input())\nfor i in range(n):\n    y = int(input())\n    x = list(map(int, input().split()))\n    l = []\n    flag1 = 0\n    flag2 = 0\n    x.sort()\n    for i in range(y):\n        if x[i] > 0:\n            l = x[0:i + 1]\n            flag1 = 1\n            max_pos = x[i]\n            break\n    if flag1 == 0:\n        print(y)\n        continue\n    j = 0\n    k = 1\n    y = len(l)\n    while k < y:\n        m = abs(l[k] - l[j])\n        if max_pos > m:\n            print(y - 1)\n            flag2 = 1\n            break\n        j = j + 1\n        k = k + 1\n    if flag2 == 0:\n        print(y)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(d) for d in input().split()]\n    a.sort()\n    idx = 0\n    flag = False\n    for i in range(0, len(a)):\n        if a[i] > 0:\n            idx = i\n            flag = True\n            break\n    if flag == False:\n        print(len(a))\n    else:\n        prev = a[idx]\n        diff = a[idx]\n        j = idx - 1\n        c = 1\n        while j >= 0:\n            if abs(a[j] - prev) >= diff:\n                c = c + 1\n                prev = a[j]\n            j = j - 1\n        print(max(c, idx))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = sorted(a)\n    m = []\n    s = 0\n    h = 0\n    for j in range(n):\n        if b[j] > 0:\n            s = b[j]\n            break\n        else:\n            m.append(b[j])\n    if s != 0:\n        for j in range(len(m) - 1):\n            q = m[j + 1] - m[j]\n            if q < s:\n                h = 1\n                break\n            else:\n                continue\n    if s != 0 and h == 0:\n        print(len(m) + 1)\n    else:\n        print(len(m))", "for s in [*open(0)][2::2]:\n    m = 1000000000.0\n    i = 1\n    for (x, y) in zip((a := sorted(map(int, s.split()))), a[1:]):\n        m = min(m, y - x)\n        i += m >= y\n    print(i)", "for s in [*open(0)][2::2]:\n    m = 1000000000.0\n    i = 1\n    for (x, y) in zip((a := sorted(map(int, s.split()))), a[1:]):\n        m = min(m, y - x)\n        i += m >= y\n    print(i)", "for s in [*open(0)][2::2]:\n    m = 1000000000.0\n    i = 1\n    for (x, y) in zip((a := sorted(map(int, s.split()))), a[1:]):\n        m = min(m, y - x)\n        i += m >= y\n    print(i)", "for i in range(int(input())):\n    a = input()\n    b = [int(i) for i in input().split()]\n    if max(b) <= 0:\n        print(len(b))\n    else:\n        i = len([i for i in b if i <= 0])\n        b.sort()\n        for j in range(1, i):\n            if b[j] - b[j - 1] < b[i]:\n                i -= 1\n                break\n        print(i + 1)", "for s in [*open(0)][2::2]:\n    m = 1000000000.0\n    i = 1\n    for (x, y) in zip((a := sorted(map(int, s.split()))), a[1:]):\n        m = min(m, y - x)\n        i += m >= y\n    print(i)", "for s in [*open(0)][2::2]:\n    m = 1000000000.0\n    i = 1\n    for (x, y) in zip((a := sorted(map(int, s.split()))), a[1:]):\n        m = min(m, y - x)\n        i += m >= y\n    print(i)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    x = float('inf')\n    for i in range(n - 1):\n        x = min(x, l[i + 1] - l[i])\n        if l[i + 1] > x:\n            print(i + 1)\n            break\n    else:\n        print(n)", "def solve(arr):\n    arr.sort()\n    neg = [el for el in arr if el <= 0]\n    pos = [el for el in arr if el > 0]\n    ans = len(neg)\n    neg.sort()\n    if pos:\n        ans += 1\n        candidate = min(pos)\n        for i in range(len(neg) - 1):\n            if abs(neg[i] - neg[i + 1]) < candidate:\n                ans -= 1\n                break\n    return ans\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(solve(arr))\nt = int(input())\nfor i in range(t):\n    main()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    i = 0\n    while i < n and a[i] <= 0:\n        i += 1\n    if i == n:\n        print(n)\n        continue\n    for j in range(1, i):\n        if a[j] - a[j - 1] < a[i]:\n            i -= 1\n            break\n    print(i + 1)", "import sys\n\ndef ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\ntc = int(input())\nwhile tc:\n    tc -= 1\n    n = int(input())\n    ls = ints()\n    ls.sort()\n    (ans, c0, cp) = (1, 0, 9999999999999999)\n    for i in range(1, n):\n        if ls[i] <= 0:\n            cp = min(cp, abs(ls[i] - ls[i - 1]))\n            ans += 1\n        elif ls[i] <= cp and ls[i - 1] < 1:\n            ans += 1\n            break\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = []\n    mindiff = float('inf')\n    for i in a:\n        if len(ans) >= 1 and abs(ans[-1] - i) < mindiff:\n            mindiff = abs(ans[-1] - i)\n        if i <= mindiff:\n            ans.append(i)\n        else:\n            break\n    print(len(ans))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    last = mindiff = float('inf')\n    for i in a:\n        if abs(last - i) < mindiff:\n            mindiff = abs(last - i)\n        if i <= mindiff:\n            ans += 1\n        else:\n            break\n        last = i\n    print(ans)", "t = int(input())\ntemp1 = []\ntemp2 = []\n\ndef reg(a):\n    a.sort()\n    negatives = [item for item in a if item <= 0]\n    positives = [item for item in a if item > 0]\n    if len(positives) != 0:\n        num = positives[0]\n        negatives.append(num)\n    return negatives\n\ndef isStrange(a):\n    a = reg(a)\n    i = 0\n    n = len(a) - 1\n    maxx = max(a)\n    if a[-1] == 0:\n        print(len(a))\n    else:\n        while i < n:\n            if abs(a[i] - a[i + 1]) < maxx:\n                a.remove(max(a))\n                break\n            i = i + 1\n        print(len(a))\nfor f in range(t):\n    n = int(input())\n    temp1 = [int(x) for x in input().split()]\n    isStrange(temp1)", "import math\nimport sys\nimport queue\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    res = 0\n    negative = 0\n    last = -10 ** 18\n    min_diff = 10 ** 18\n    for i in range(n):\n        if a[i] <= 0:\n            negative += 1\n        min_diff = min(min_diff, abs(last - a[i]))\n        if min_diff >= a[i]:\n            last = a[i]\n            res += 1\n    print(max(negative, res))\nmulti_test = 1\nif multi_test:\n    t = int(input())\n    for _ in range(t):\n        solve()\nelse:\n    solve()", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    (i, m) = (1, 1000000000.0)\n    while i < len(a) and (m := min(m, a[i] - a[i - 1])) >= a[i]:\n        i += 1\n    print(i)", "for x in range(int(input())):\n    n = int(input())\n    c = 1\n    m = 10000000000.0\n    arr = sorted([int(i) for i in input().split()])\n    for i in range(n - 1):\n        m = min(m, arr[i + 1] - arr[i])\n        if m >= arr[i + 1]:\n            c += 1\n    print(c)", "for j in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    pos = 0\n    var = 0\n    neg = []\n    for k in range(n):\n        if a[k] < 1:\n            neg.append(a[k])\n        else:\n            var = k\n            break\n    pos = a[k]\n    flag = True\n    for j in range(len(neg) - 1):\n        if abs(a[j + 1] - a[j]) < pos:\n            flag = False\n            break\n    if len(neg) == n:\n        print(n)\n    elif flag:\n        print(len(neg) + 1)\n    else:\n        print(len(neg))", "for t in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    ans = 0\n    m = a[-1]\n    for i in range(1, n):\n        m = min(m, a[i] - a[i - 1])\n        if a[i] <= m:\n            ans += 1\n        else:\n            break\n    print(ans + 1)", "def res():\n    ans = 0\n    m = a[-1]\n    for i in range(1, n):\n        m = min(m, a[i] - a[i - 1])\n        if a[i] <= m:\n            ans += 1\n        else:\n            break\n    print(ans + 1)\nfor t in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    res()", "def res(m):\n    ans = 0\n    for i in range(1, n):\n        m = min(m, a[i] - a[i - 1])\n        if a[i] <= m:\n            ans += 1\n        else:\n            break\n    print(ans + 1)\nfor t in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    m = a[-1]\n    res(m)", "def main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    fpos = False\n    f1 = 0\n    x = 0\n    for i in range(n):\n        if arr[i] > 0:\n            fpos = True\n            f1 = arr[i]\n            break\n        x += 1\n    if fpos == False:\n        print(n)\n        return\n    maxi = x\n    pre = arr[0]\n    ans = 1\n    if x:\n        ans += 1\n    for i in range(1, x):\n        if abs(arr[i] - pre) >= f1:\n            ans += 1\n            pre = arr[i]\n    maxi = max(maxi, ans)\n    print(maxi)\nt = int(input())\nfor i in range(t):\n    main()", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    i = 0\n    while i < n and a[i] <= 0:\n        i += 1\n    if i == n:\n        print(n)\n        continue\n    for j in range(1, i):\n        if a[j] - a[j - 1] < a[i]:\n            i -= 1\n            break\n    print(i + 1)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(1)\n        continue\n    a.sort()\n    cnt = 0\n    mp = 0\n    for i in range(n):\n        if a[i] <= 0:\n            cnt += 1\n        else:\n            mp = a[i]\n            break\n    if cnt == 0:\n        print(1)\n        continue\n    if cnt == 1:\n        print(2)\n        continue\n    if cnt == n:\n        print(n)\n        continue\n    flag = True\n    for i in range(1, n):\n        if a[i] <= 0 and a[i] - a[i - 1] < mp:\n            flag = False\n            break\n        elif a[i] > 0:\n            break\n    if flag:\n        print(cnt + 1)\n    else:\n        print(cnt)"]