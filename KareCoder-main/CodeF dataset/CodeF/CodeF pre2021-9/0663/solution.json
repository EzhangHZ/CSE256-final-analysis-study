["def calc(nums):\n    for i in range(30, -1, -1):\n        count = 0\n        for num in nums:\n            if num & 1 << i > 0:\n                count += 1\n        if count % 2 != 0:\n            return count\n    return -1\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    flag = calc(nums)\n    if flag == -1:\n        print('DRAW')\n    elif (flag - 1) // 2 % 2 != 0 and n % 2 != 0:\n        print('LOSE')\n    else:\n        print('WIN')", "def DecimalToBinary(a):\n    s = []\n    while a >= 1:\n        s.append(a % 2)\n        a = a // 2\n    return s\n\ndef find_sum(a, p, sum):\n    for i in range(len(a)):\n        if a[i] // 2 ** p > 0:\n            for j in range(p):\n                a[i] = a[i] // 2\n            sum = sum + a[i] % 2\n    return sum\nt = int(input())\nl = []\nfor i in range(t):\n    n = int(input())\n    sum = 0\n    a = list(map(int, input().split()))\n    xor = a[0]\n    for i in range(1, n):\n        xor = xor ^ a[i]\n    xor = DecimalToBinary(xor)\n    lenth = len(xor) - 1\n    sum = find_sum(a, lenth, sum)\n    if sum == 1:\n        l.append('WIN')\n    elif sum % 2 == 0:\n        l.append('DRAW')\n    elif (n - sum) % 2 == 0:\n        if sum % 4 == 1:\n            l.append('WIN')\n        else:\n            l.append('LOSE')\n    else:\n        l.append('WIN')\nfor i in l:\n    print(i)", "import sys\ninput = sys.stdin.readline\nd = {1: 'WIN', 0: 'LOSE', -1: 'DRAW'}\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = map(int, input().split())\n        f = [0] * 30\n        for x in a:\n            for b in range(30):\n                if x >> b & 1:\n                    f[b] += 1\n        ans = -1\n        for x in reversed(range(30)):\n            if f[x] % 2 == 1:\n                ans = 0 if f[x] % 4 == 3 and (n - f[x]) % 2 == 0 else 1\n                break\n        print(d[ans])\nmain()", "for i in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    for i in range(30, -1, -1):\n        c = 0\n        for j in s:\n            if j & 1 << i:\n                c += 1\n        if c % 4 == 1 or (c % 4 == 3 and n - c & 1):\n            print('WIN')\n            break\n        elif c % 4 == 3:\n            print('LOSE')\n            break\n    else:\n        print('DRAW')", "for i in range(int(input())):\n    N = int(input())\n    S = list(map(int, input().split()))\n    for i in range(30, -1, -1):\n        count = 0\n        for j in S:\n            if j & 1 << i:\n                count += 1\n        if count % 4 == 1 or (count % 4 == 3 and N - count & 1):\n            print('WIN')\n            break\n        elif count % 4 == 3:\n            print('LOSE')\n            break\n    else:\n        print('DRAW')", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in range(30, -1, -1):\n        cnt = 0\n        for j in l:\n            if j & 1 << i:\n                cnt += 1\n        if cnt % 4 == 1 or (cnt % 4 == 3 and n - cnt & 1):\n            print('WIN')\n            break\n        elif cnt % 4 == 3:\n            print('LOSE')\n            break\n    else:\n        print('DRAW')", "def find(A):\n    M = max(A)\n    s = bin(M)[2:]\n    L = len(s)\n    A_temp = []\n    for x in A:\n        temp = bin(x)[2:]\n        temp = '0' * (L - len(temp)) + temp\n        A_temp += [temp]\n    N = len(A)\n    for i in range(L):\n        count = 0\n        for x in A_temp:\n            count += int(x[i])\n        if count % 2 == 1:\n            if count % 4 == 1:\n                return 'WIN'\n            else:\n                zeros = N - count\n                if zeros % 2 == 0:\n                    return 'LOSE'\n                else:\n                    return 'WIN'\n    return 'DRAW'\nANS = []\nfor _ in range(int(input())):\n    input()\n    A = list(map(int, input().strip().split()))\n    ANS += [find(A)]\nprint('\\n'.join(ANS))", "d = {1: 'WIN', 0: 'LOSE', -1: 'DRAW'}\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = map(int, input().split())\n        f = [0] * 30\n        for x in a:\n            for b in range(30):\n                if x >> b & 1:\n                    f[b] += 1\n        ans = -1\n        for x in reversed(range(30)):\n            if f[x] % 2 == 1:\n                ans = 0 if f[x] % 4 == 3 and (n - f[x]) % 2 == 0 else 1\n                break\n        print(d[ans])\nmain()", "import sys\nsys.setrecursionlimit(10 ** 5)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\nfor _ in range(II()):\n    n = II()\n    aa = LI()\n    for k in range(32, -1, -1):\n        cnt = 0\n        for a in aa:\n            cnt += a >> k & 1\n        if cnt & 1:\n            break\n    else:\n        print('DRAW')\n        continue\n    if cnt % 4 == 3 and (n - cnt) % 2 == 0:\n        print('LOSE')\n    else:\n        print('WIN')", "loop = int(input())\nresult = []\nfor y in range(0, loop):\n    l = int(input())\n    arr = list(map(int, input().split()))\n    p1 = 0\n    p2 = 0\n    for j in range(30, -1, -1):\n        sum = 0\n        for i in range(0, l):\n            if arr[i] & 1 << j:\n                sum = sum + 1\n        if sum % 2 == 1:\n            if sum % 4 == 1:\n                p1 = 1\n            elif l % 2 == 1:\n                p2 = 1\n            else:\n                p1 = 1\n            break\n    if p1 > p2:\n        result.append('WIN')\n    elif p2 > p1:\n        result.append('LOSE')\n    else:\n        result.append('DRAW')\nprint(*result, sep='\\n')", "import sys\ninput = sys.stdin.readline\nR = lambda : map(int, input().split())\nI = lambda : int(input())\nS = lambda : input().rstrip('\\n')\nL = lambda : list(R())\nfor _ in range(I()):\n    n = I()\n    a = L()\n    cnt = [0] * 30\n    for x in a:\n        for j in range(30):\n            if x & 1 << j:\n                cnt[j] += 1\n    ans = 'DRAW'\n    for j in range(29, -1, -1):\n        if cnt[j] % 2 == 1:\n            rem = n - cnt[j]\n            if rem % 2 == 0 and cnt[j] % 4 == 3:\n                ans = 'LOSE'\n            else:\n                ans = 'WIN'\n            break\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 'DRAW'\n    for i in range(32, -1, -1):\n        (x, y) = (0, 0)\n        for num in arr:\n            if num & 1 << i == 0:\n                y += 1\n            else:\n                x += 1\n        if x % 2 == 1:\n            if x % 4 == 3 and y % 2 == 0:\n                ans = 'LOSE'\n                break\n            else:\n                ans = 'WIN'\n                break\n    print(ans)", "import math as mt\nimport collections as cc\nimport sys\n\ndef binpow(n, x, m):\n    n %= m\n    temp = 1\n    while x:\n        if x & 1:\n            temp *= n % m\n        n *= n % m\n        n >>= 1\n    return temp\ninput = sys.stdin.readline\nI = lambda : list(map(int, input().split()))\nfor tc in range(int(input())):\n    (n,) = I()\n    l = I()\n    f = cc.defaultdict(int)\n    ans = 'DRAW'\n    for i in l:\n        for j in range(30):\n            if i & 1 << j:\n                f[j] += 1\n    for i in range(29, -1, -1):\n        if f[i] % 2:\n            temp = n - f[i]\n            ans = 'LOSE' if f[i] % 4 == 3 and temp % 2 == 0 else 'WIN'\n            break\n    print(ans)"]