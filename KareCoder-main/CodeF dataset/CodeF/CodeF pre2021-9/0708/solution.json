["for _ in range(int(input())):\n    (n, k) = input().split()\n    k = int(k)\n    m = len(n)\n    d = {}\n    i = 0\n    for i in range(m):\n        if n[i] not in d:\n            if len(d) == k:\n                break\n            d[n[i]] = 0\n        d[n[i]] += 1\n    else:\n        print(n)\n        continue\n    n = list(n)\n    while True:\n        if n[i] == '9' or (len(d) == k and max(d) <= n[i]):\n            i -= 1\n            d[n[i]] -= 1\n            if d[n[i]] == 0:\n                del d[n[i]]\n        else:\n            if len(d) < k:\n                n[i] = str(int(n[i]) + 1)\n                if n[i] not in d:\n                    d[n[i]] = 0\n                d[n[i]] += 1\n                p = '0' if len(d) < k else min(d)\n                for i in range(i + 1, m):\n                    n[i] = p\n            else:\n                n[i] = min((j for j in d if j > n[i]))\n                for i in range(i + 1, m):\n                    n[i] = min(d)\n            break\n    print(''.join(n))", "import sys\nt = int(input())\nfor i in range(t):\n    (n, k) = sys.stdin.readline().split()\n    n = n.lstrip('000000000')\n    k = int(k)\n    L = []\n    for s in n:\n        if int(s) not in L:\n            L.append(int(s))\n    if len(L) <= k:\n        print(n)\n    else:\n        L = L[:k]\n        Num = list(map(int, n))\n        ind = Num.index(L[-1])\n        maxL = max(L)\n        bada = False\n        i = 0\n        while i < len(n):\n            if bada:\n                Num[i] = 0\n            elif Num[i] > maxL:\n                bada = True\n                while Num[i] + 1 > maxL and i > ind:\n                    i -= 1\n                Num[i] += 1\n                if i == ind:\n                    L[-1] += 1\n                    if L[-1] in L[:-1]:\n                        L[-1] = 0\n            elif Num[i] not in L:\n                bada = True\n            i += 1\n        L.sort()\n        Go = dict()\n        ind = 0\n        for i in range(L[-1] + 1):\n            while i > L[ind]:\n                ind += 1\n            Go[i] = str(L[ind])\n        minL = str(L[0])\n        bada = False\n        for i in range(len(Num)):\n            if bada == True:\n                Num[i] = minL\n            else:\n                if Num[i] not in L:\n                    bada = True\n                Num[i] = Go[Num[i]]\n        print(int(''.join(Num)))", "import sys\nt = int(input())\nfor i in range(t):\n    (n, k) = sys.stdin.readline().split()\n    n = n.lstrip('000000000')\n    k = int(k)\n    L = []\n    for s in n:\n        if int(s) not in L:\n            L.append(int(s))\n    if len(L) <= k:\n        print(n)\n    else:\n        L = L[:k]\n        Num = list(map(int, n))\n        ind = Num.index(L[-1])\n        maxL = max(L)\n        bada = False\n        i = 0\n        while i < len(n):\n            if bada:\n                Num[i] = 0\n            elif Num[i] > maxL:\n                bada = True\n                while Num[i] + 1 > maxL and i > ind:\n                    i -= 1\n                Num[i] += 1\n                if i == ind:\n                    L[-1] += 1\n                    if L[-1] in L[:-1]:\n                        L[-1] = 0\n            elif Num[i] not in L:\n                bada = True\n            i += 1\n        L.sort()\n        Go = dict()\n        ind = 0\n        for i in range(L[-1] + 1):\n            while i > L[ind]:\n                ind += 1\n            Go[i] = str(L[ind])\n        minL = str(L[0])\n        bada = False\n        for i in range(len(Num)):\n            if bada == True:\n                Num[i] = minL\n            else:\n                if Num[i] not in L:\n                    bada = True\n                Num[i] = Go[Num[i]]\n        print(int(''.join(Num)))", "import sys\nt = int(input())\nfor i in range(t):\n    (n, k) = sys.stdin.readline().split()\n    n = n.lstrip('000000000')\n    k = int(k)\n    L = []\n    for s in n:\n        if int(s) not in L:\n            L.append(int(s))\n    if len(L) <= k:\n        print(n)\n    else:\n        L = L[:k]\n        Num = list(map(int, n))\n        ind = Num.index(L[-1])\n        maxL = max(L)\n        bada = False\n        i = 0\n        while i < len(n):\n            if bada:\n                Num[i] = 0\n            elif Num[i] > maxL:\n                bada = True\n                while Num[i] + 1 > maxL and i > ind:\n                    i -= 1\n                Num[i] += 1\n                if i == ind:\n                    L[-1] += 1\n                    if L[-1] in L[:-1]:\n                        L[-1] = 0\n            elif Num[i] not in L:\n                bada = True\n            i += 1\n        L.sort()\n        Go = dict()\n        ind = 0\n        for i in range(L[-1] + 1):\n            while i > L[ind]:\n                ind += 1\n            Go[i] = str(L[ind])\n        minL = str(L[0])\n        bada = False\n        for i in range(len(Num)):\n            if bada == True:\n                Num[i] = minL\n            else:\n                if Num[i] not in L:\n                    bada = True\n                Num[i] = Go[Num[i]]\n        print(int(''.join(Num)))", "def int_(l):\n    return int(''.join((str(kk) for kk in l)))\n\ndef f(n, k):\n    if k == 1:\n        fdig = n[0]\n        ff = int_([fdig] * len(n))\n        nn = int_(n)\n        if ff >= nn:\n            return ff\n        else:\n            return int_([fdig + 1] * len(n))\n    digs = set()\n    ii = -1\n    for i in range(len(n)):\n        if len(digs) == k and n[i] not in digs:\n            ii = i\n            break\n        digs.add(n[i])\n    if ii == -1:\n        return int_(n)\n    dg = n[ii]\n    for ddd in range(dg + 1, 10):\n        if ddd in digs:\n            ans = n[:ii] + [ddd] + [min(digs)] * (len(n) - ii - 1)\n            return int_(ans)\n    nw = n[:ii - 1] + [n[ii - 1] + 1] + [0] * (len(n) - ii)\n    return f(nw, k)\nfor _ in range(int(input())):\n    (n_, b) = input().split()\n    k = int(b)\n    n = [int(ii) for ii in n_]\n    print(f(n, k))", "import sys\nt = int(input())\nfor i in range(t):\n    (n, k) = sys.stdin.readline().split()\n    n = n.lstrip('000000000')\n    k = int(k)\n    L = []\n    for s in n:\n        if int(s) not in L:\n            L.append(int(s))\n    if len(L) <= k:\n        print(n)\n    else:\n        L = L[:k]\n        Num = list(map(int, n))\n        ind = Num.index(L[-1])\n        bada = False\n        i = 0\n        maxL = max(L)\n        while i < len(n):\n            if bada:\n                Num[i] = 0\n            elif Num[i] > maxL:\n                bada = True\n                while Num[i] + 1 > maxL and i > ind:\n                    i -= 1\n                Num[i] += 1\n                if i == ind:\n                    L[-1] += 1\n                    if L[-1] in L[:-1]:\n                        L[-1] = 0\n                    maxL = max(L)\n            elif Num[i] not in L:\n                bada = True\n            i += 1\n        bada = False\n        minL = min(L)\n        L.sort()\n        Go = dict()\n        ind = 0\n        for i in range(max(L) + 1):\n            while i > L[ind]:\n                ind += 1\n            Go[i] = L[ind]\n        for i in range(len(Num)):\n            if bada == True:\n                Num[i] = minL\n            else:\n                if Num[i] not in L:\n                    bada = True\n                Num[i] = Go[Num[i]]\n        print(int(''.join(list(map(str, Num)))))", "import sys\nt = int(input())\nfor i in range(t):\n    (n, k) = sys.stdin.readline().split()\n    k = int(k)\n    L = []\n    for s in n:\n        if int(s) not in L:\n            L.append(int(s))\n    if len(L) <= k:\n        print(n)\n    else:\n        L = L[:k]\n        Num = list(map(int, n))\n        ind = Num.index(L[-1])\n        maxL = max(L)\n        bada = False\n        i = 0\n        while i < len(n):\n            if bada:\n                Num[i] = 0\n            elif Num[i] > maxL:\n                bada = True\n                while Num[i] + 1 > maxL and i > ind:\n                    i -= 1\n                Num[i] += 1\n                if i == ind:\n                    L[-1] += 1\n                    if L[-1] in L[:-1]:\n                        L[-1] = 0\n            elif Num[i] not in L:\n                bada = True\n            i += 1\n        L.sort()\n        Go = dict()\n        ind = 0\n        for i in range(L[-1] + 1):\n            while i > L[ind]:\n                ind += 1\n            Go[i] = str(L[ind])\n        minL = str(L[0])\n        bada = False\n        ret = ''\n        for i in range(len(Num)):\n            if bada == True:\n                ret += minL\n            else:\n                if Num[i] not in L:\n                    bada = True\n                ret += Go[Num[i]]\n        print(ret)", "import sys\nt = int(input())\nfor i in range(t):\n    (n, k) = sys.stdin.readline().split()\n    n = n.lstrip('000000000')\n    k = int(k)\n    L = []\n    for s in n:\n        if int(s) not in L:\n            L.append(int(s))\n    if len(L) <= k:\n        print(n)\n    else:\n        L = L[:k]\n        Num = list(map(int, n))\n        ind = Num.index(L[-1])\n        maxL = max(L)\n        bada = False\n        i = 0\n        while i < len(n):\n            if bada:\n                Num[i] = 0\n            elif Num[i] > maxL:\n                bada = True\n                while Num[i] + 1 > maxL and i > ind:\n                    i -= 1\n                Num[i] += 1\n                if i == ind:\n                    L[-1] += 1\n                    if L[-1] in L[:-1]:\n                        L[-1] = 0\n            elif Num[i] not in L:\n                bada = True\n            i += 1\n        L.sort()\n        Go = dict()\n        ind = 0\n        for i in range(L[-1] + 1):\n            while i > L[ind]:\n                ind += 1\n            Go[i] = str(L[ind])\n        minL = str(L[0])\n        bada = False\n        for i in range(len(Num)):\n            if bada == True:\n                Num[i] = minL\n            else:\n                if Num[i] not in L:\n                    bada = True\n                Num[i] = Go[Num[i]]\n        print(int(''.join(Num)))", "import sys\nt = int(input())\nfor i in range(t):\n    (n, k) = sys.stdin.readline().split()\n    n = n.lstrip('000000000')\n    k = int(k)\n    L = []\n    for s in n:\n        if int(s) not in L:\n            L.append(int(s))\n    if len(L) <= k:\n        print(n)\n    else:\n        L = L[:k]\n        Num = list(map(int, n))\n        ind = Num.index(L[-1])\n        maxL = max(L)\n        bada = False\n        i = 0\n        while i < len(n):\n            if bada:\n                Num[i] = 0\n            elif Num[i] > maxL:\n                bada = True\n                while Num[i] + 1 > maxL and i > ind:\n                    i -= 1\n                Num[i] += 1\n                if i == ind:\n                    L[-1] += 1\n                    if L[-1] in L[:-1]:\n                        L[-1] = 0\n            elif Num[i] not in L:\n                bada = True\n            i += 1\n        L.sort()\n        Go = dict()\n        ind = 0\n        for i in range(L[-1] + 1):\n            while i > L[ind]:\n                ind += 1\n            Go[i] = str(L[ind])\n        minL = str(L[0])\n        bada = False\n        for i in range(len(Num)):\n            if bada == True:\n                Num[i] = minL\n            else:\n                if Num[i] not in L:\n                    bada = True\n                Num[i] = Go[Num[i]]\n        print(int(''.join(Num)))", "def solve(n, k):\n    a = sorted(((n.index(x), int(x)) for x in set(n)))\n    if len(a) <= k:\n        return n\n    d = {x[1] for x in a[:k]}\n    for i in range(a[k][1], 10):\n        if i in d:\n            m = n[:a[k][0]] + str(i)\n            break\n    else:\n        m = solve(str(int(n[:a[k][0]]) + 1), k)\n    return m + (min(m) if len(set(m)) == k else '0') * (len(n) - len(m))\nfor _ in range(int(input())):\n    (n, k) = input().split()\n    print(solve(n, int(k)))", "def f(n, k):\n    dig_set = set()\n    pre = ''\n    for x in n:\n        dig_set.add(x)\n        if len(dig_set) > int(k):\n            post_head = x\n            dig_set.remove(x)\n            break\n        pre += x\n        post_head = ''\n    post = n[len(pre):]\n    if post_head:\n        min_dig = min(dig_set)\n        poss_digs = {i for i in dig_set if i > x}\n        if poss_digs:\n            min_poss_dig = min(poss_digs)\n            ans = pre + min_poss_dig + min_dig * (len(post) - 1)\n        else:\n            pre = str(int(pre) + 1)\n            if len(set(pre)) == int(k):\n                ans = pre + min(set(pre)) * len(post)\n            elif len(set(pre)) < int(k):\n                ans = pre + '0' * len(post)\n            else:\n                ans = f(pre + '0' * len(post), k)\n    else:\n        ans = pre\n    return ans\nfor i in range(int(input())):\n    (n, k) = input().split()\n    print(f(n, k))", "for s in [*open(0)][1:]:\n    (prefix, k) = map(int, s.split())\n    n = str(prefix)\n    while len(set(str(prefix))) > k:\n        prefix = prefix // 10 if not prefix % 10 else prefix + 1\n    prefix = str(prefix)\n    x = len(n) - len(prefix)\n    suffix = str(min(prefix) * x)\n    print(prefix + suffix)", "def find_nearest(s, k):\n    ln = len(s)\n    if max(s[:ln - 1]) > s[ln - 1]:\n        x = list(set(s[:ln - 1]))\n        x.sort()\n        for it in x:\n            if it > s[-1]:\n                s = s[:ln - 1] + it\n                return s\n    else:\n        for i in range(ln - 1, -1, -1):\n            x = s[:i]\n            while x[-1] < '9':\n                x = str(int(x) + 1)\n                if len(set(x)) <= k:\n                    if len(set(x)) == k:\n                        x = x + (ln - len(x)) * min(set(x))\n                        return x\n                    else:\n                        x = x + (ln - len(x)) * '0'\n                        return x\n\ndef solve(s, k):\n    if len(set(str(s))) <= k:\n        return s\n    s = str(s)\n    for i in range(len(s)):\n        if len(set(s[:i + 1])) > k:\n            break\n    i += 1\n    x = s[:i]\n    x = find_nearest(x, k)\n    ans = x + (len(s) - i) * min(set(x))\n    return ans\nn = int(input())\nfor _ in range(n):\n    (s, k) = [int(i) for i in input().split()]\n    print(solve(s, k))", "for i in range(int(input())):\n    (n, k, x, tt) = map(int, input().split() * 2)\n    while len(set(str(x))) > k:\n        x = x // 10 if not x % 10 else x + 1\n    print(str(x) + ('0' if len(set(str(x))) < k else min(str(x))) * (len(str(n)) - len(str(x))))", "for i in range(int(input())):\n    (n, k, x, tt) = map(int, input().split() * 2)\n    while len(set(str(x))) > k:\n        x = x // 10 if not x % 10 else x + 1\n    print(str(x) + ('0' if len(set(str(x))) < k else min(str(x))) * (len(str(n)) - len(str(x))))", "t = int(input())\nsome_list = []\nfor i in range(t):\n    some_list.append(input())\nfor i in range(t):\n    n_k = some_list[i].split()\n    n = int(n_k[0])\n    k = int(n_k[1])\n    x = n\n    while len(set(str(n))) > k:\n        if n % 10 == 0:\n            n = n // 10\n        else:\n            n += 1\n    end = str(min(str(n))) * (len(str(x)) - len(str(n)))\n    print(int(str(n) + end))", "t = int(input())\nwhile t:\n    (num, k) = [int(tok) for tok in input().split()]\n    ans = 111111111111111\n    num = str(num)\n    n = len(num)\n    s = set()\n    for ch in num:\n        s.add(ch)\n    if len(s) <= k:\n        print(int(num))\n    else:\n        for ind in range(0, n):\n            if num[ind] == '9':\n                continue\n            done = set()\n            for i in range(0, ind):\n                done.add(num[i])\n            if len(done) > k:\n                continue\n            elif len(done) == k:\n                to_fill = None\n                mi = '9'\n                for el in done:\n                    mi = min(mi, el)\n                    if el > num[ind]:\n                        if to_fill is None:\n                            to_fill = el\n                        else:\n                            to_fill = min(to_fill, el)\n                if to_fill is not None:\n                    ans = min(ans, int(num[:ind] + to_fill + mi * (n - ind - 1)))\n            else:\n                mi = '9'\n                for i in range(0, 9):\n                    if str(i) > num[ind]:\n                        mi = str(i)\n                        break\n                done.add(mi)\n                if len(done) == k:\n                    ans = min(ans, int(num[:ind] + mi + min(done) * (n - ind - 1)))\n                else:\n                    ans = min(ans, int(num[:ind] + mi + '0' * (n - ind - 1)))\n        print(ans)\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = n\n    while len(set(str(n))) > k:\n        if n % 10 == 0:\n            n = n // 10\n        else:\n            n += 1\n    end = str(min(str(n))) * (len(str(l)) - len(str(n)))\n    print(int(str(n) + end))", "for i in range(int(input())):\n    (n, k, x, tt) = map(int, input().split() * 2)\n    while len(set(str(x))) > k:\n        x = x // 10 if not x % 10 else x + 1\n    print(str(x) + ('0' if len(set(str(x))) < k else min(str(x))) * (len(str(n)) - len(str(x))))", "for i in range(int(input())):\n    (n, k, x, tt) = map(int, input().split() * 2)\n    while len(set(str(x))) > k:\n        x = x // 10 if not x % 10 else x + 1\n    print(str(x) + ('0' if len(set(str(x))) < k else min(str(x))) * (len(str(n)) - len(str(x))))", "for _ in range(int(input())):\n    (x, k) = input().split()\n    k = int(k)\n    n = len(x)\n    while len(set(x)) > k:\n        x = str(int(x) + 1).rstrip('0')\n    print(x + (min(x) if len(set(x)) == k else '0') * (n - len(x)))", "from math import floor, log\n\ndef upper_bound(s, n):\n    mn = ':'\n    for x in s:\n        if x > n and x < mn:\n            mn = x\n    return max(s) if mn == ':' else mn\nfor input_number in range(int(input())):\n    (n, k) = map(int, input().split())\n    while True:\n        s = str(n)\n        d = set(s[0])\n        for i in range(1, len(s)):\n            if s[i] not in d:\n                if len(d) == k:\n                    if s[i] >= upper_bound(d, s[i]):\n                        n += (10 - int(s[i])) * 10 ** (len(s) - i - 1)\n                    else:\n                        n += (int(upper_bound(d, s[i])) - int(s[i])) * 10 ** (len(s) - i - 1)\n                    n -= int('0' if s[i + 1:] == '' else s[i + 1:])\n                    break\n                else:\n                    d.add(s[i])\n        else:\n            break\n    print(n)", "for i in range(int(input())):\n    (n, k, x, tt) = map(int, input().split() * 2)\n    while len(set(str(x))) > k:\n        x = x // 10 if not x % 10 else x + 1\n    print(str(x) + ('0' if len(set(str(x))) < k else min(str(x))) * (len(str(n)) - len(str(x))))"]