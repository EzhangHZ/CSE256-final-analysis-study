["n = int(input())\ns = input()\nc = 1\nk = [0 for i in range(26)]\ncode = ord('a')\nk[0] = 1\nans = []\nfor i in range(n):\n    letter = ord(s[i]) - code\n    if k[letter] != 0:\n        ans.append(k[letter])\n    else:\n        for j in range(letter, -1, -1):\n            if k[j] != 0:\n                ans.append(k[j])\n                k[letter] = k[j]\n                k[j] = 0\n                break\n            if j == 0:\n                c += 1\n                k[letter] = c\n                ans.append(c)\nprint(c)\nprint(*ans)", "import sys\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    n = II()\n    s = SI()\n    col = [0] * 27\n    ans = [0] * n\n    a = ord('a')\n    for (i, c) in enumerate(s):\n        code = ord(c) - a\n        cur = max(col[code + 1:]) + 1\n        ans[i] = cur\n        col[code] = cur\n    print(max(col))\n    print(*ans)\nmain()", "n = int(input())\ns = input()\ncol = [1] * n\nprev = [0] * 26\nfor i in range(n):\n    code = ord(s[i]) - ord('a')\n    if code != 25:\n        col[i] = max(prev[code + 1:]) + 1\n    prev[code] = col[i]\nprint(max(col))\nprint(*col)", "n = int(input())\ns = input()\ncol = [1] * n\nprev = [0] * 27\nfor i in range(n):\n    code = ord(s[i]) - ord('a')\n    col[i] = max(prev[code + 1:]) + 1\n    prev[code] = col[i]\nprint(max(col))\nprint(*col)", "n = int(input())\ns = input()\ncolors = ['_'] * 26\nans = [''] * n\nidx = 0\nfor c in s:\n    for i in range(26):\n        if c >= colors[i]:\n            ans[idx] = str(i + 1)\n            colors[i] = c\n            break\n    idx += 1\nprint(26 - colors.count('_'))\nprint(' '.join(ans))", "n = int(input())\ns = str(input())\nlit = ['Z'] * 26\nwyn = ''\nm = -1\nfor x in s:\n    for y in range(26):\n        if lit[y] <= x:\n            wyn += str(y + 1) + ' '\n            lit[y] = x\n            if y + 1 >= m:\n                m = y + 1\n            break\nprint(m)\nprint(wyn)", "(n, s) = (int(input()), input())\nk = {0: 'a', 1: 'a'}\nans = ''\nmaxColor = 1\nfor symb in s:\n    for i in range(len(k)):\n        if symb >= k[i]:\n            ans += str(i + 1) + ' '\n            if i + 1 > maxColor:\n                maxColor = i + 1\n                k[i + 1] = 'a'\n            k[i] = symb\n            break\nprint(maxColor)\nprint(ans)", "def binSearch(a, n):\n    (i, j) = (0, len(a) - 1)\n    while i != j:\n        if (j - i) % 2 == 1:\n            if a[i + (j - i) // 2] > n:\n                i = i + (j - i) // 2 + 1\n            else:\n                j = i + (j - i) // 2\n        elif a[i + (j - i) // 2] > n:\n            i = i + (j - i) // 2\n        else:\n            j = i + (j - i) // 2\n    return i\n(n, s) = (int(input()), input())\nk = ['a', 'a']\nans = ''\nmaxColor = 1\nfor symb in s:\n    i = binSearch(k, symb)\n    ans += str(i + 1) + ' '\n    if i + 1 > maxColor:\n        maxColor = i + 1\n        k.append('a')\n    k[i] = symb\nprint(maxColor)\nprint(ans)", "def binSearch(a, n):\n    (i, j) = (0, len(a) - 1)\n    while i != j:\n        if (j - i) % 2 == 1:\n            if a[i + (j - i) // 2] > n:\n                i = i + (j - i) // 2 + 1\n            else:\n                j = i + (j - i) // 2\n        elif a[i + (j - i) // 2] > n:\n            i = i + (j - i) // 2\n        else:\n            j = i + (j - i) // 2\n    return i\ninput()\nk = ['a', 'a']\nans = ''\nmaxColor = 1\nfor symb in input():\n    i = binSearch(k, symb)\n    ans += str(i + 1) + ' '\n    if i + 1 > maxColor:\n        maxColor = i + 1\n        k.append('a')\n    k[i] = symb\nprint(maxColor)\nprint(ans)", "(n, s) = (int(input()), input())\nk = ['a', 'a']\nans = ''\nmaxColor = 1\nfor symb in s:\n    for i in range(len(k)):\n        if symb >= k[i]:\n            ans += str(i + 1) + ' '\n            if i + 1 > maxColor:\n                maxColor = i + 1\n                k.append('a')\n            k[i] = symb\n            break\nprint(maxColor)\nprint(ans)", "n = int(input())\ns = input()\nans = 1\nd = ''\narr = ['a']\nfor i in range(n):\n    if s[i] < arr[-1]:\n        d += str(len(arr) + 1) + ' '\n        arr.append(s[i])\n    else:\n        for j in range(len(arr)):\n            if s[i] >= arr[j]:\n                d += str(j + 1) + ' '\n                arr[j] = s[i]\n                break\nprint(len(arr))\nprint(d)", "input()\ns = input()\na = []\nans = [0] * len(s)\nfor (i, c) in enumerate(s):\n    if not a or c < a[-1]:\n        a.append(c)\n        ans[i] = len(a)\n    else:\n        l = 0\n        r = len(a) - 1\n        while l < r:\n            mid = l + r >> 1\n            if a[mid] > c:\n                l = mid + 1\n            else:\n                r = mid\n        a[l] = c\n        ans[i] = l + 1\nprint(len(a))\nprint(*ans)", "def binSearch(a, n):\n    (i, j) = (0, len(a) - 1)\n    while i != j:\n        if (j - i) % 2 == 1:\n            if a[i + (j - i) // 2] > n:\n                i = i + (j - i) // 2 + 1\n            else:\n                j = i + (j - i) // 2\n        elif a[i + (j - i) // 2] > n:\n            i = i + (j - i) // 2\n        else:\n            j = i + (j - i) // 2\n    return i\n(n, s) = (int(input()), input())\nk = 'aa'\nans = ''\nmaxColor = 1\nfor symb in s:\n    i = binSearch(k, symb)\n    ans += str(i + 1) + ' '\n    if i + 1 > maxColor:\n        maxColor = i + 1\n        k += 'a'\n    k = k[:i] + symb + k[i + 1:]\nprint(maxColor)\nprint(ans)", "def binSearch(a, n):\n    (i, j) = (0, len(a) - 1)\n    while i != j:\n        if (j - i) % 2 == 1:\n            if a[i + (j - i) // 2] > n:\n                i = i + (j - i) // 2 + 1\n            else:\n                j = i + (j - i) // 2\n        elif a[i + (j - i) // 2] > n:\n            i = i + (j - i) // 2\n        else:\n            j = i + (j - i) // 2\n    return i\ninput()\nk = ['a'] * 26\nans = ''\nmaxColor = 1\nfor symb in input():\n    i = binSearch(k, symb)\n    ans += str(i + 1) + ' '\n    if i + 1 > maxColor:\n        maxColor = i + 1\n    k[i] = symb\nprint(maxColor)\nprint(ans)", "(n, s) = (int(input()), input())\nk = ['a']\nans = ''\nmaxColor = 1\nfor symb in s:\n    k.append('a')\n    for i in range(len(k)):\n        if symb >= k[i]:\n            ans += str(i + 1) + ' '\n            if i + 1 > maxColor:\n                maxColor = i + 1\n            k[i] = symb\n            break\nprint(maxColor)\nprint(ans)", "def binSearch(a, n):\n    n = ord(n)\n    (i, j) = (0, len(a) - 1)\n    while i != j:\n        if (j - i) % 2 == 1:\n            if ord(a[i + (j - i) // 2]) > n:\n                i = i + (j - i) // 2 + 1\n            else:\n                j = i + (j - i) // 2\n        elif ord(a[i + (j - i) // 2]) > n:\n            i = i + (j - i) // 2\n        else:\n            j = i + (j - i) // 2\n    return i\n(n, s) = (int(input()), input())\nk = ['a', 'a']\nans = ''\nmaxColor = 1\nfor symb in s:\n    i = binSearch(k, symb)\n    ans += str(i + 1) + ' '\n    if i + 1 > maxColor:\n        maxColor = i + 1\n        k.append('a')\n    k[i] = symb\nprint(maxColor)\nprint(ans)", "n = int(input())\ns = input()\n(c, res) = (['0'] * 26, [''] * n)\nfor i in range(n):\n    for j in range(26):\n        if s[i] >= c[j]:\n            res[i] = str(j + 1)\n            c[j] = s[i]\n            break\nprint(26 - c.count('0'))\nprint(' '.join(res))", "n = int(input())\ns = input()\narr = ['a' for i in range(n)]\nl = []\nfor i in s:\n    for j in range(n):\n        if i >= arr[j]:\n            arr[j] = i\n            l.append(j + 1)\n            break\nprint(max(l))\nprint(*l)", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    N = int(input())\n    S = input().strip()\n    color = []\n    ans = []\n    for (i, s) in enumerate(S):\n        if i == 0:\n            color.append(ord(s) - ord('a'))\n            ans.append(1)\n        else:\n            for j in range(len(color)):\n                if ord(s) - ord('a') >= color[j]:\n                    color[j] = ord(s) - ord('a')\n                    ans.append(j + 1)\n                    break\n            else:\n                ans.append(len(color) + 1)\n                color.append(ord(s) - ord('a'))\n    else:\n        print(len(color))\n        print(*ans)\nmain()", "n = int(input())\ns = input()\nans = [1]\ncc = 0\ncolor = ['z'] * 26\ncolor[0] = s[0]\nfor i in range(1, n):\n    flag = False\n    for j in range(cc + 1):\n        if color[j] <= s[i]:\n            ans.append(j + 1)\n            flag = True\n            color[j] = s[i]\n            break\n    if not flag:\n        cc += 1\n        color[cc] = s[i]\n        ans.append(cc + 1)\nprint(cc + 1)\nfor i in range(n):\n    print(ans[i], end=' ')", "n = int(input())\ns = [ord(i) - ord('a') + 1 for i in input()]\nclr = ['1'] * n\ncurrent = 1\nx = s[0]\nlast = [27, 1]\nfor i in range(n):\n    if s[i] >= x:\n        x = s[i]\n        last[1] = s[i]\n    else:\n        check = [s[i] < j for j in last]\n        if False in check:\n            c = check.index(False)\n            last[c] = s[i]\n        else:\n            current += 1\n            c = current\n            last.append(s[i])\n        clr[i] = str(c)\nprint(len(set(clr)))\nprint(' '.join(clr))"]