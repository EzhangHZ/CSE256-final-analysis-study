["import sys\nfrom bisect import bisect_left\nfrom collections import defaultdict\nimport random\nfrom math import gcd\ninput = sys.stdin.readline\nflush = sys.stdout.flush\nget_int = lambda : int(input().rstrip())\nget_arr = lambda : [int(w) for w in input().split()]\nget_str = lambda : input().rstrip()\nmod = 998244353\n(n, m) = get_arr()\nds = sorted(get_arr())\nsds = sum(ds) % mod\nps = [0]\nfor d in ds:\n    ps.append((ps[-1] + d) % mod)\nget_sum = lambda l, r: ps[r + 1] - ps[l]\nfor _ in range(m):\n    (a, b) = get_arr()\n    ind = bisect_left(ds, b)\n    t = n - ind\n    if a > t:\n        print(0)\n        continue\n    ans = a * pow(t, -1, mod) * get_sum(ind, n - 1)\n    ans = (ans + a * pow(t + 1, -1, mod) * get_sum(0, ind - 1)) % mod\n    print((sds - ans) % mod)", "import sys\nfrom bisect import bisect_left\nfrom collections import defaultdict\nimport random\nfrom math import gcd\ninput = sys.stdin.readline\nflush = sys.stdout.flush\nget_int = lambda : int(input().rstrip())\nget_arr = lambda : [int(w) for w in input().split()]\nget_str = lambda : input().rstrip()\nmod = 998244353\n(n, m) = get_arr()\nds = sorted(get_arr())\nsds = sum(ds) % mod\nps = [0]\nfor d in ds:\n    ps.append((ps[-1] + d) % mod)\nget_sum = lambda l, r: ps[r + 1] - ps[l]\nfor _ in range(m):\n    (a, b) = get_arr()\n    ind = bisect_left(ds, b)\n    t = n - ind\n    if a > t:\n        print(0)\n        continue\n    ans = pow(t, -1, mod) * get_sum(ind, n - 1)\n    ans = (ans + pow(t + 1, -1, mod) * get_sum(0, ind - 1)) % mod\n    print((sds - a * ans) % mod)"]