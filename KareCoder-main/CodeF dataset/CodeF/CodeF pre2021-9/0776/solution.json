["T = int(input())\nans = [0] * T\nfor t in range(T):\n    (X, Y) = ([0] * 4, [0] * 4)\n    A = [0] * 4\n    for i in range(4):\n        (X[i], Y[i]) = map(int, input().split())\n        A[i] = [X[i], Y[i]]\n    X.sort()\n    Y.sort()\n    A.sort()\n    cnt = 0\n    for i in range(2):\n        rank = 1\n        for j in range(4):\n            if A[i][1] < A[j][1]:\n                rank += 1\n        if rank <= 2:\n            cnt += 1\n    if cnt != 1:\n        ans[t] += min(Y[2] - Y[1], X[2] - X[1]) * 2\n    x_min = X[2] - X[1]\n    x_max = X[3] - X[0]\n    y_min = Y[2] - Y[1]\n    y_max = Y[3] - Y[0]\n    if x_max < y_min:\n        ans[t] += X[3] - X[2] + (X[1] - X[0])\n        ans[t] += Y[3] - Y[2] + (Y[1] - Y[0]) + 2 * (y_min - x_max)\n    elif y_max < x_min:\n        ans[t] += X[3] - X[2] + (X[1] - X[0]) + 2 * (x_min - y_max)\n        ans[t] += Y[3] - Y[2] + (Y[1] - Y[0])\n    else:\n        ans[t] += X[3] - X[2] + (X[1] - X[0])\n        ans[t] += Y[3] - Y[2] + (Y[1] - Y[0])\nprint(*ans, sep='\\n')", "T = int(input())\nans = [0] * T\nfor t in range(T):\n    (X, Y) = ([0] * 4, [0] * 4)\n    A = [0] * 4\n    for i in range(4):\n        (X[i], Y[i]) = map(int, input().split())\n        A[i] = [X[i], Y[i]]\n    X.sort()\n    Y.sort()\n    A.sort()\n    cnt = 0\n    for i in range(2):\n        rank = 1\n        for j in range(4):\n            if A[i][1] < A[j][1]:\n                rank += 1\n        if rank <= 2:\n            cnt += 1\n    if cnt != 1:\n        ans[t] += min(Y[2] - Y[1], X[2] - X[1]) * 2\n    x_min = X[2] - X[1]\n    x_max = X[3] - X[0]\n    y_min = Y[2] - Y[1]\n    y_max = Y[3] - Y[0]\n    if x_max < y_min:\n        ans[t] += X[3] - X[2] + (X[1] - X[0])\n        ans[t] += Y[3] - Y[2] + (Y[1] - Y[0]) + 2 * (y_min - x_max)\n    elif y_max < x_min:\n        ans[t] += X[3] - X[2] + (X[1] - X[0]) + 2 * (x_min - y_max)\n        ans[t] += Y[3] - Y[2] + (Y[1] - Y[0])\n    else:\n        ans[t] += X[3] - X[2] + (X[1] - X[0])\n        ans[t] += Y[3] - Y[2] + (Y[1] - Y[0])\nprint(*ans, sep='\\n')", "import itertools\n\ndef four_points(P):\n    min_cost = 4 * int(1000000000.0)\n    for p in itertools.permutations(range(4)):\n        ((ax, ay), (bx, by), (cx, cy), (dx, dy)) = (P[i] for i in p)\n        x1 = (min(ax, bx), max(ax, bx))\n        x2 = (min(cx, dx), max(cx, dx))\n        cost = x1[1] - x1[0] + x2[1] - x2[0]\n        y1 = (min(ay, cy), max(ay, cy))\n        y2 = (min(by, dy), max(by, dy))\n        cost += y1[1] - y1[0] + y2[1] - y2[0]\n        x_seg = (max(x1[0] - x2[1], x2[0] - x1[1]), max(x1[1] - x2[0], x2[1] - x1[0]))\n        y_seg = (max(y1[0] - y2[1], y2[0] - y1[1]), max(y1[1] - y2[0], y2[1] - y1[0]))\n        cost += 2 * max(0, max(x_seg[0], y_seg[0]) - min(x_seg[1], y_seg[1]))\n        min_cost = min(min_cost, cost)\n    return min_cost\nt = int(input())\nfor _ in range(t):\n    P = [[int(xy) for xy in input().split()] for _ in range(4)]\n    ans = four_points(P)\n    print(ans)"]