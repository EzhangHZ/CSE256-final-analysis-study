["import math\nfrom sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    if n & 1:\n        print('NO')\n        continue\n    n = n >> 1\n    s = int(n ** 0.5)\n    if s * s == n:\n        print('YES')\n        continue\n    if n & 1:\n        print('NO')\n        continue\n    n = n >> 1\n    s = int(n ** 0.5)\n    if s * s == n:\n        print('YES')\n        continue\n    print('NO')", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    if n & 1:\n        print('NO')\n        continue\n    n = n >> 1\n    s = int(n ** 0.5)\n    if s * s == n:\n        print('YES')\n        continue\n    if n & 1:\n        print('NO')\n        continue\n    n = n >> 1\n    s = int(n ** 0.5)\n    if s * s == n:\n        print('YES')\n        continue\n    print('NO')", "import sys\n\ndef solve(k):\n    if k % 2:\n        return 'NO'\n    k //= 2\n    side = int(k ** 0.5)\n    if side * side == k or (side + 1) * (side + 1) == k or (side - 1) * (side - 1) == k:\n        return 'YES'\n    if k % 2:\n        return 'NO'\n    k //= 2\n    side = int(k ** 0.5)\n    if side * side == k or (side + 1) * (side + 1) == k or (side - 1) * (side - 1) == k:\n        return 'YES'\n    return 'NO'\n\ndef main():\n    res = ''\n    input = sys.stdin.readline\n    print = sys.stdout.write\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        res += str(solve(n)) + '\\n'\n    print(res)\nmain()", "t = int(input())\nns = []\nfor i in range(0, t):\n    ns.append(int(input()))\nfor n in ns:\n    if ((n / 2) ** (1 / 2)).is_integer():\n        print('YES')\n    elif ((n / 4) ** (1 / 2)).is_integer():\n        print('YES')\n    else:\n        print('NO')", "import math\nr = []\nfor x in range(int(input())):\n    n = int(input())\n    if math.sqrt(n / 2) % 1 == 0 or math.sqrt(n / 4) % 1 == 0:\n        r.append('YES')\n    else:\n        r.append('NO')\nfor x in r:\n    print(x)", "for s in [*open(0)][1:]:\n    n = int(s)\n    f = 0\n    while n & 1 ^ 1:\n        n >>= 1\n        f = 1\n    print('YNEOS'[f * int(n ** 0.5) ** 2 < n::2])", "for s in [*open(0)][1:]:\n    n = int(s)\n    f = 0\n    while n & 1 ^ 1:\n        n >>= 1\n        f = 1\n    print('YNEOS'[f * int(n ** 0.5) ** 2 < n::2])", "for s in [*open(0)][1:]:\n    n = int(s)\n    f = 0\n    while n & 1 ^ 1:\n        n >>= 1\n        f = 1\n    print('YNEOS'[f * int(n ** 0.5) ** 2 < n::2])", "import sys\nimport math\nmod = 10 ** 9 + 7\nLI = lambda : [int(k) for k in input().split()]\ninput = lambda : sys.stdin.readline().rstrip()\nIN = lambda : int(input())\nS = lambda : input()\nfor t in range(IN()):\n    n = IN()\n    if math.sqrt(n / 2) % 1 == 0 or math.sqrt(n / 4) % 1 == 0:\n        print('YES')\n    else:\n        print('NO')", "num_inp = lambda : int(input())\narr_inp = lambda : list(map(int, input().split()))\nsp_inp = lambda : map(int, input().split())\nstr_inp = lambda : input()\nfor s in [*open(0)][1:]:\n    n = int(s)\n    f = 0\n    while n & 1 ^ 1:\n        n >>= 1\n        f = 1\n    print('YNEOS'[f * int(n ** 0.5) ** 2 < n::2])", "from sys import stdin, stdout\nimport math\n\ndef ii():\n    return int(stdin.readline())\n\ndef mi():\n    return map(int, stdin.readline().split())\n\ndef li():\n    return list(mi())\n\ndef si():\n    return stdin.readline()\n\ndef div2(n):\n    if n % 2 != 0:\n        return False\n    n //= 2\n    a = int(math.sqrt(n))\n    if a * a == n:\n        return True\n    return False\n\ndef div4(n):\n    if n % 4 != 0:\n        return False\n    n //= 4\n    a = int(math.sqrt(n))\n    if a * a == n:\n        return True\n    return False\nfor _ in range(ii()):\n    n = ii()\n    if n == 1:\n        print('NO')\n    elif div2(n) or div4(n):\n        print('YES')\n    else:\n        print('NO')", "for s in [*open(0)][1:]:\n    n = int(s)\n    f = 1\n    while n & 1 ^ 1:\n        n >>= 1\n        f = 0\n    print('YNEOS'[f | (int(n ** 0.5) ** 2 < n)::2])", "import sys, math\ninput = sys.stdin.readline\nout = []\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    o1 = math.isqrt(n // 2)\n    o2 = math.isqrt(n // 4)\n    if 2 * o1 * o1 == n or 4 * o2 * o2 == n:\n        out.append('YES')\n    else:\n        out.append('NO')\nprint('\\n'.join(out))", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nallTriangles = set()\nii = 1\nwhile ii * ii * 2 <= 10 ** 9:\n    allTriangles.add(ii * ii * 2)\n    ii += 1\nii = 1\nwhile ii * ii * 4 <= 10 ** 9:\n    allTriangles.add(ii * ii * 4)\n    ii += 1\ntests = inp()\nfor _ in range(tests):\n    n = inp()\n    if n in allTriangles:\n        print('YES')\n    else:\n        print('NO')", "import math\nimport sys\nn_cases = int(sys.stdin.readline().strip())\nfor _ in range(n_cases):\n    n = int(sys.stdin.readline().strip())\n    cond = n in (2 * int(math.sqrt(n // 2)) ** 2, 4 * int(math.sqrt(n // 4)) ** 2)\n    print('YES' if cond else 'NO')", "import random\nimport math\nfrom collections import defaultdict\nimport itertools\nfrom sys import stdin, stdout\n\ndef main():\n    z = ''\n    for _ in range(int(stdin.readline())):\n        n = int(stdin.readline())\n        if n % 2 == 1:\n            print('NO')\n        else:\n            n = n // 2\n            x = n\n            if x % 2 == 0:\n                x = x // 2\n                r = int(math.sqrt(x))\n                if x == r * r:\n                    print('YES')\n                else:\n                    x = x * 2\n                    r = int(math.sqrt(x))\n                    if x == r * r:\n                        print('YES')\n                    else:\n                        print('NO')\n            else:\n                r = int(math.sqrt(x))\n                if x == r * r:\n                    print('YES')\n                else:\n                    print('NO')\nmain()", "import math\nn = int(input())\nm = []\nfor i in range(n):\n    a = int(input())\n    if math.sqrt(a / 2) % 1 == 0 or math.sqrt(a / 4) % 1 == 0:\n        m.append('YES')\n    else:\n        m.append('NO')\nfor i in range(n):\n    print(m[i])", "from sys import stdin, stdout\nfrom math import sqrt\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    if n % 2 == 0 and int(sqrt(n // 2) + 0.5) ** 2 == n // 2 or (n % 4 == 0 and int(sqrt(n // 4) + 0.5) ** 2 == n // 4):\n        print('YES')\n    else:\n        print('NO')", "for s in [*open(0)][1:]:\n    n = int(s)\n    f = 0\n    while n & 1 ^ 1:\n        n >>= 1\n        f = 1\n    print('YNEOS'[f * int(n ** 0.5) ** 2 < n::2])", "import sys\nimport math\n\ndef get_array():\n    return list(map(int, sys.stdin.readline().rstrip().split()))\n\ndef get_num():\n    return int(sys.stdin.readline())\nt = get_num()\nfor i in range(t):\n    n = get_num()\n    if math.floor(math.sqrt(n / 4)) == math.ceil(math.sqrt(n / 4)) or math.floor(math.sqrt(n / 2)) == math.ceil(math.sqrt(n / 2)):\n        print('YES')\n    else:\n        print('NO')", "for s in [*open(0)][1:]:\n    n = int(s)\n    f = 0\n    while n & 1 ^ 1:\n        n >>= 1\n        f = 1\n    print('YNEOS'[f * int(n ** 0.5) ** 2 < n::2])", "for s in [*open(0)][1:]:\n    n = int(s)\n    f = 0\n    while n & 1 ^ 1:\n        n >>= 1\n        f = 1\n    print('YNEOS'[f * int(n ** 0.5) ** 2 < n::2])", "import math\nfrom sys import stdin\n\ndef A():\n    t = stdin.readline()\n    t = int(t)\n    while t:\n        t -= 1\n        a = [int(x) for x in stdin.readline().split()]\n        (n, x) = (a[0], a[1])\n        w = [int(x) for x in stdin.readline().split()]\n        w.sort()\n        res = 0\n        res_b = True\n        for i in range(0, n):\n            res += w[i]\n            if res == x:\n                l = i\n                while res == x:\n                    if l >= n:\n                        res_b = False\n                        break\n                    res -= w[l]\n                    l += 1\n                    if l >= n:\n                        res_b = False\n                        break\n                    res += w[l]\n                if l >= n:\n                    res_b = False\n                    break\n                (w[i], w[l]) = (w[l], w[i])\n        if res_b:\n            print('YES')\n            for i in w:\n                print(i, end=' ')\n            print()\n        else:\n            print('NO')\n\ndef sq(c):\n    d = int(math.sqrt(c))\n    if d * d == c:\n        return 1\n    return 0\n\ndef B():\n    t = stdin.readline()\n    t = int(t)\n    while t:\n        t -= 1\n        b = int(stdin.readline())\n        res = True\n        if b % 2 == 0 and sq(b / 2) or (b % 4 == 0 and sq(b / 4)):\n            print('YES')\n        else:\n            print('NO')\nB()", "for s in [*open(0)][1:]:\n    n = int(s)\n    f = 0\n    while n & 1 ^ 1:\n        n >>= 1\n        f = 1\n    print('YNEOS'[f * int(n ** 0.5) ** 2 < n::2])", "for s in [*open(0)][1:]:\n    n = int(s)\n    f = 0\n    while n & 1 ^ 1:\n        n >>= 1\n        f = 1\n    print('YNEOS'[f * int(n ** 0.5) ** 2 < n::2])", "from math import floor, sqrt\nfrom sys import stdin\n\ndef read_int():\n    return int(stdin.readline())\n\ndef is_square(x):\n    s = int(floor(sqrt(x)))\n    return s * s == x\nt = read_int()\nfor case_num in range(t):\n    n = read_int()\n    print('YES' if n % 2 == 0 and is_square(n // 2) or (n % 4 == 0 and is_square(n // 4)) else 'NO')", "import math\n\ndef isPerfectSquare(n):\n    sqrt = math.ceil(math.sqrt(n // 2))\n    if sqrt ** 2 * 2 == n:\n        return True\n    return False\nt = int(input())\nresult = []\nfor i in range(t):\n    n = int(input())\n    if n % 2 != 0:\n        result.append('NO')\n    elif isPerfectSquare(n) | isPerfectSquare(n // 2):\n        result.append('YES')\n    else:\n        result.append('NO')\nfor i in result:\n    print(i)", "import math\ntestcase = int(input())\ncan = [False] * testcase\nfor i in range(testcase):\n    number = int(input())\n    if int(math.sqrt(number / 2)) ** 2 == number / 2 or int(math.sqrt(float(number) / 4)) ** 2 == number / 4:\n        can[i] = True\nfor i in can:\n    if i:\n        print('YES')\n    else:\n        print('NO')", "import sys\nimport math as mt\ninput = sys.stdin.readline\nI = lambda : list(map(int, input().split()))\nfor tc in range(int(input())):\n    (n,) = I()\n    a = mt.isqrt(n // 2)\n    b = mt.isqrt(n // 4)\n    if a * a * 2 == n or b * b * 4 == n:\n        print('YES')\n    else:\n        print('NO')", "for s in [*open(0)][1:]:\n    n = int(s)\n    f = 0\n    while n & 1 ^ 1:\n        n >>= 1\n        f = 1\n    print('YNEOS'[f * int(n ** 0.5) ** 2 < n::2])", "for s in [*open(0)][1:]:\n    n = int(s)\n    f = 0\n    while n & 1 ^ 1:\n        n >>= 1\n        f = 1\n    print('YNEOS'[f * int(n ** 0.5) ** 2 < n::2])", "for s in [*open(0)][1:]:\n    n = int(s)\n    if n % 2 == 0:\n        n //= 2\n        i = int(n ** 0.5)\n        if i * i == n:\n            print('YES')\n            continue\n        elif n % 2 == 0:\n            n //= 2\n            i = int(n ** 0.5)\n            if i * i == n:\n                print('YES')\n                continue\n    print('NO')", "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\nsq = set()\nfor i in range(1, 10 ** 5):\n    sq.add(i * i)\nn = int(input())\nfor _ in range(n):\n    x = int(input())\n    if x % 2 == 0 and x // 2 in sq:\n        print('YES')\n    elif x % 4 == 0 and x // 4 in sq:\n        print('YES')\n    else:\n        print('NO')", "from math import sqrt\nlist1 = []\nfor i in range(int(input())):\n    n = int(input())\n    if n % 2 == 0 and sqrt(n // 2).is_integer():\n        list1.append('YES')\n    elif n % 4 == 0 and sqrt(n // 4).is_integer():\n        list1.append('YES')\n    else:\n        list1.append('NO')\nprint(*list1, sep='\\n')", "for s in [*open(0)][1:]:\n    n = int(s)\n    b = bin(n)\n    k = len(b) - len(b.rstrip('0'))\n    n //= 2 ** k\n    print('YNEOS'[k < 1 or int(n ** 0.5) ** 2 < n::2])", "import math\n\ndef canFormSquare(n):\n    if n == 2 or n == 4:\n        return True\n    f = n / 2.0\n    if isPerfectSquare(f):\n        return True\n    f = n / 4.0\n    if isPerfectSquare(f):\n        return True\n    return False\n\ndef isPerfectSquare(n):\n    sq = math.sqrt(n)\n    if float(int(sq)) == sq:\n        return True\n    return False\nnumInputs = int(input())\nout = list()\nfor i in range(numInputs):\n    inp = int(input())\n    if canFormSquare(inp):\n        out.append('YES')\n    else:\n        out.append('NO')\nfor line in out:\n    print(line)", "from sys import *\nimport math\ninput = stdin.readline\nI = int\nR = range\nlistInput = lambda : list(map(int, input().strip().split()))\nlineInput = lambda : map(int, input().strip().split())\nsJoin = lambda a, sep: '{}'.format(sep).join(a)\narrJoin = lambda a, sep: '{}'.format(sep).join(map(str, a))\n\ndef isPrime(n):\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    for i in range(5, int(math.sqrt(n) + 1), 6):\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n    return True\n\ndef main():\n    for _ in R(I(input())):\n        (n,) = lineInput()\n        div2 = n // 2\n        div4 = n // 4\n        sqrt = lambda x: int(math.sqrt(x))\n        if 2 * sqrt(div2) ** 2 == n or 4 * sqrt(div4) ** 2 == n:\n            print('YES')\n        else:\n            print('NO')\nmain()", "from math import sqrt\ng = int(input())\nf = [None for i in range(g)]\nfor i in range(g):\n    n = int(input())\n    a = sqrt(n / 2)\n    b = sqrt(n / 4)\n    if a == int(a) or b == int(b) or (a == int(a) and b == int(b)):\n        f[i] = 'YES'\n    else:\n        f[i] = 'NO'\nfor i in range(g):\n    print(f[i])", "from math import *\nr = []\nt = int(input())\nfor i in range(t):\n    a = int(input())\n    if log(a, 2) == int(log(a, 2)) and a != 1 or (a % 2 == 0 and sqrt(a // 2) == int(sqrt(a // 2))) or (a % 2 == 0 and sqrt(a) == int(sqrt(a))):\n        r.append('YES')\n    else:\n        r.append('NO')\nfor i in range(t):\n    print(r[i])", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    c = (n / 2) ** 0.5\n    d = (n / 4) ** 0.5\n    if int(c) == c or int(d) == d:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    if ((n / 2) ** 0.5).is_integer() or ((n / 4) ** 0.5).is_integer():\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    if ((n / 2) ** 0.5).is_integer() or ((n / 4) ** 0.5).is_integer():\n        print('YES')\n    else:\n        print('NO')", "import math\nt = int(input())\nfor i in range(t):\n    res = 'NO'\n    n = int(input())\n    if n % 2 == 0 and math.sqrt(n // 2) == int(math.sqrt(n // 2)):\n        res = 'YES'\n    if n % 4 == 0 and math.sqrt(n // 4) == int(math.sqrt(n // 4)):\n        res = 'YES'\n    print(res)", "from math import sqrt\n\ndef main():\n    t = int(input())\n    while t:\n        n = int(input())\n        if n % 2 != 0:\n            print('NO')\n        else:\n            v = n / 2\n            if sqrt(v) - int(sqrt(v)) == 0 or sqrt(v / 2) - int(sqrt(v / 2)) == 0:\n                print('YES')\n            else:\n                print('NO')\n        t -= 1\nmain()", "def is_square(x):\n    return x ** 0.5 % 1 == 0\n\ndef solve(n):\n    if n % 2 == 0 and is_square(n / 2):\n        return 'YES'\n    elif n % 4 == 0 and is_square(n / 4):\n        return 'YES'\n    return 'NO'\nfor _ in range(int(input())):\n    print(solve(int(input())))", "import math\nfor _ in range(int(input())):\n    v = int(input())\n    if math.sqrt(v / 2) % 1 == 0 or math.sqrt(v / 4) % 1 == 0:\n        print('YES')\n    else:\n        print('NO')", "import math\ninputs = []\nwhile True:\n    try:\n        line = input()\n    except EOFError:\n        break\n    inputs.append(line)\n\ndef Log2(x):\n    return math.log10(x) / math.log10(2)\n\ndef Pof2(n):\n    return math.ceil(Log2(n)) == math.floor(Log2(n))\n\ndef is_perfect_square(number: int) -> bool:\n    return int(math.sqrt(number) + 0.5) ** 2 == number\nt = int(inputs[0])\nfor i in range(1, t + 1):\n    if int(inputs[i]) % 2 == 0:\n        if int(inputs[i]) == 2:\n            print('YES')\n        elif Pof2(int(inputs[i])):\n            print('YES')\n        elif is_perfect_square(int(int(inputs[i]) / 2)):\n            print('YES')\n        elif is_perfect_square(int(inputs[i])):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "import math\n\ndef main():\n    t = int(input())\n    for x in range(t):\n        n = int(input())\n        if math.sqrt(n / 2) % 1 == 0 or math.sqrt(n / 4) % 1 == 0:\n            print('YES')\n        else:\n            print('NO')\nmain()", "t = int(input())\nimport math\nfor j in range(1, t + 1):\n    n = int(input())\n    if n % 2 != 0:\n        print('NO')\n    elif n % 2 == 0:\n        n = n // 2\n        if math.sqrt(n) % 1 == 0:\n            print('YES')\n        elif n % 2 == 0:\n            n = n // 2\n            if math.sqrt(n) % 1 == 0:\n                print('YES')\n            else:\n                print('NO')\n        else:\n            print('NO')\n    else:\n        print('NO')", "for t in range(int(input())):\n    x = int(input())\n    if (x / 2) ** 0.5 == float(int((x // 2) ** 0.5)) or (x / 4) ** 0.5 == float(int((x / 4) ** 0.5)):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nf = 0\nx = 0\ny = 0\nfor i in range(t):\n    n = int(input())\n    x = n / 2\n    y = n / 4\n    f = x ** 0.5\n    f = f * int(f)\n    m = y ** 0.5\n    m = m * int(m)\n    if m == y or f == x:\n        print('YES')\n    else:\n        print('NO')", "import math\n\ndef main():\n    t = int(input())\n    while t:\n        t -= 1\n        n = int(input())\n        if math.sqrt(n / 2.0) % 1 == 0 or math.sqrt(n / 4.0) % 1 == 0:\n            print('YES')\n        else:\n            print('NO')\nmain()", "import math\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    a = (n / 2) ** 0.5\n    b = (n / 4) ** 0.5\n    print(('NO', 'YES')[a % 1 == 0 or b % 1 == 0])\n    t -= 1", "n = int(input())\nfor i in range(0, n):\n    rect = int(input())\n    if (rect / 2) ** 0.5 % 1 == 0 or (rect / 4) ** 0.5 % 1 == 0:\n        print('YES')\n    else:\n        print('NO')", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    if (n / 2) ** 0.5 % 1 == 0 or (n / 4) ** 0.5 % 1 == 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    if (n / 2) ** 0.5 % 1 == 0 or (n / 4) ** 0.5 % 1 == 0:\n        print('YES')\n    else:\n        print('NO')", "def fun(n):\n    h = int(n ** 0.5)\n    if n == h ** 2:\n        return True\n    return False\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        if fun(n // 2):\n            print('YES')\n        elif fun(n // 4) and n % 4 == 0:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "from math import sqrt\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n in (1,):\n        print('NO')\n        continue\n    if n in (2, 4):\n        print('YES')\n        continue\n    if not n % 2:\n        a = n // 2\n        if sqrt(a).is_integer():\n            print('YES')\n        elif not a % 2 and sqrt(a // 2).is_integer():\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "from math import sqrt\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n in (1,):\n        print('NO')\n        continue\n    if n in (2, 4):\n        print('YES')\n        continue\n    if not n % 2:\n        a = n // 2\n        if sqrt(a).is_integer():\n            print('YES')\n        elif not a % 2 and sqrt(a // 2).is_integer():\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "from math import sqrt\n\ndef main(n):\n    if not n % 2:\n        if sqrt(n // 2).is_integer() or (not n // 2 % 2 and sqrt(n // 4).is_integer()):\n            return 'YES'\n        else:\n            return 'NO'\n    else:\n        return 'NO'\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(main(n))", "def main(n):\n    if not n % 2:\n        if ((n // 2) ** (1 / 2)).is_integer() or (not n // 2 % 2 and ((n // 4) ** (1 / 2)).is_integer()):\n            return 'YES'\n        else:\n            return 'NO'\n    else:\n        return 'NO'\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(main(n))", "for t in range(int(input())):\n    n = int(input())\n    if (n / 2) ** 0.5 % 1 == 0 or (n / 4) ** 0.5 % 1 == 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    if ((n / 2) ** 0.5).is_integer() or ((n / 4) ** 0.5).is_integer():\n        print('YES')\n    else:\n        print('NO')", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    n1 = math.sqrt(n / 2)\n    n2 = math.sqrt(n / 4)\n    if n1 == int(n1) or n2 == int(n2):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2 or ((n / 2) ** 0.5 != int((n / 2) ** 0.5) and (n / 4) ** 0.5 != int((n / 4) ** 0.5)):\n        print('NO')\n    else:\n        print('YES')", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    x = n / 2\n    y = n / 4\n    if math.sqrt(x) == int(math.sqrt(x)) or math.sqrt(y) == int(math.sqrt(y)):\n        print('YES')\n    else:\n        print('NO')", "from math import *\n\ndef isSquare(x):\n    return int(0.5 + sqrt(x)) ** 2 == x\n\ndef solve():\n    n = int(input())\n    if n % 2 == 0 and isSquare(n / 2):\n        print('YES')\n    elif n % 4 == 0 and isSquare(n / 4):\n        print('YES')\n    else:\n        print('NO')\nfor _ in range(int(input())):\n    solve()", "import math\n\ndef isSquare(num):\n    sr = int(math.sqrt(num))\n    return sr * sr == num\n\ndef solve(s):\n    if (s % 2 == 0 and isSquare(s / 2) or math.sqrt(s) % 2 == 0) and s != 1:\n        print('YES')\n    else:\n        print('NO')\ntcs = int(input())\nfor i in range(tcs):\n    s = int(input())\n    solve(s)", "def square(n):\n    x = n ** 0.5\n    x1 = int(x)\n    if x1 * x1 == n:\n        return 1\n    else:\n        return 0\nfor i in range(0, int(input())):\n    n = int(input())\n    if square(n / 2) == 1 or square(n / 4) == 1:\n        print('YES')\n    else:\n        print('NO')", "q = int(input())\nfor _ in range(q):\n    n = int(input())\n    if n % 2 == 0:\n        if (n // 2) ** 0.5 == int((n // 2) ** 0.5):\n            print('YES')\n        elif n ** 0.5 == int(n ** 0.5):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "import math\n\ndef is_square(n):\n    root = math.sqrt(n)\n    if root % 1 == 0:\n        if int(root) * int(root) == n:\n            return True\n    return False\nnumOf = int(input())\nfor i in range(numOf):\n    t = int(input())\n    numOfTwoPiece = t % 2\n    numOfFourPiece = t % 4\n    if t % 4 == 0:\n        numOfSquare = t / 4\n        if is_square(numOfSquare):\n            print('YES')\n            continue\n    if t % 2 == 0:\n        numOfSquare = t / 2\n        if is_square(numOfSquare):\n            print('YES')\n            continue\n    print('NO')", "import math\n\ndef is_square(n):\n    y = int(math.sqrt(n))\n    return y * y == n\n\ndef its_possible(n):\n    if not n % 2 and is_square(n // 2):\n        return 'YES'\n    if not n % 4 and is_square(n // 4):\n        return 'YES'\n    return 'NO'\n\ndef main():\n    for i in range(int(input())):\n        print(its_possible(int(input())))\nmain()", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    p = n / 2\n    q = n / 4\n    if math.sqrt(p).is_integer() or math.sqrt(q).is_integer():\n        print('YES')\n    else:\n        print('NO')", "from math import sqrt\nI = input\n\ndef issquare(n):\n    sq = sqrt(n)\n    return sq == int(sq)\nfor _ in range(int(I())):\n    n = int(I())\n    if n % 2 == 0 and issquare(n // 2) or (n % 4 == 0 and issquare(n // 4)):\n        print('YES')\n    else:\n        print('NO')", "for x in range(int(input())):\n    n = int(input())\n    if (n / 2) ** (1 / 2) == int((n / 2) ** (1 / 2)) or (n / 4) ** (1 / 2) == int((n / 4) ** (1 / 2)):\n        print('YES')\n    else:\n        print('NO')", "for x in range(int(input())):\n    n = int(input())\n    if (n / 2) ** (1 / 2) == int((n / 2) ** (1 / 2)) or (n / 4) ** (1 / 2) == int((n / 4) ** (1 / 2)):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n % 2 == 0 and int((n / 2) ** 0.5) == (n / 2) ** 0.5:\n        print('YES')\n    elif n % 4 == 0 and int((n / 4) ** 0.5) == (n / 4) ** 0.5:\n        print('YES')\n    else:\n        print('NO')", "import math\n\ndef EsCuad(x: int) -> bool:\n    if math.sqrt(x).is_integer():\n        return True\n    else:\n        return False\nt = int(input())\nfor x in range(t):\n    n = int(input())\n    n2 = int(n / 2)\n    if (EsCuad(n) or EsCuad(n / 2)) and n % 2 == 0:\n        print('YES')\n    else:\n        print('NO')", "from math import *\nfor _ in range(int(input())):\n    n = int(input())\n    if int(sqrt(n / 2)) == sqrt(n / 2) or int(sqrt(n / 4)) == sqrt(n / 4):\n        print('YES')\n    else:\n        print('NO')", "for k in range(int(input())):\n    n = int(input())\n    if n % 2 == 1:\n        print('NO')\n    elif (n / 2) ** 0.5 % 1 == 0 or (n / 4) ** 0.5 % 1 == 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    c1 = n % 2 == 0 and (n // 2) ** 0.5 % 1 == 0\n    c2 = n % 4 == 0 and (n // 4) ** 0.5 % 1 == 0\n    if c1 or c2:\n        print('YES')\n    else:\n        print('NO')", "def per_sq(n):\n    sq = int(pow(n, 0.5))\n    if sq * sq == n:\n        return 1\n    return 0\nfor i in range(int(input())):\n    n = int(input())\n    if n % 2 == 1:\n        print('NO')\n    elif per_sq(n) == 1:\n        print('YES')\n    else:\n        n //= 2\n        if per_sq(n) == 1:\n            print('YES')\n        else:\n            print('NO')", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    if (n / 2) ** 0.5 == int((n / 2) ** 0.5) or (n / 4) ** 0.5 == int((n / 4) ** 0.5):\n        print('YES')\n    else:\n        print('NO')", "import math\nt = int(input())\nfor i in range(t):\n    x = int(input())\n    if x % 2 == 0 and ((x / 2) ** (1 / 2)).is_integer() or ((x / 4) ** (1 / 2)).is_integer():\n        print('YES')\n    else:\n        print('NO')", "import math\n\ndef square(a):\n    b = int(math.sqrt(a))\n    return b * b == a\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    if n % 2 == 0 and square(n // 2):\n        print('YES')\n    elif n % 4 == 0 and square(n // 4):\n        print('YES')\n    else:\n        print('NO')", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    if (n / 2) ** 0.5 % 1 == 0 or (n / 4) ** 0.5 % 1 == 0:\n        print('YES')\n    else:\n        print('NO')", "import math\nt = int(input())\ni = 1\nwhile True:\n    if i > t:\n        break\n    n = int(input())\n    if n % 2 == 0:\n        if math.sqrt(n / 2) % 1 == 0 or math.sqrt(n / 4) % 1 == 0:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')\n    i = i + 1", "import math as m\nn = int(input())\nfor i in range(n):\n    k = int(input())\n    j = k / 2\n    o = k / 4\n    if int(m.sqrt(j)) == m.sqrt(j):\n        print('YES')\n    elif int(m.sqrt(o)) == m.sqrt(o):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = (n / 2) ** 0.5\n    b = (n / 4) ** 0.5\n    print('NYOE S'[a == int(a) or b == int(b)::2])"]