["def func(n, a):\n    (iteration, i) = (0, 0)\n    sort = sorted(a)\n    while a != sort:\n        if iteration % 2 == 0:\n            i = 0\n            for j in range(i, n - 1, 2):\n                if a[j] > a[j + 1]:\n                    (a[j], a[j + 1]) = (a[j + 1], a[j])\n        else:\n            i = 1\n            for j in range(i, n, 2):\n                if a[j] > a[j + 1]:\n                    (a[j], a[j + 1]) = (a[j + 1], a[j])\n        iteration += 1\n    return iteration\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(func(n, a))", "def funod(n):\n    for i in range(0, len(n) - 2, 2):\n        if n[i] > n[i + 1]:\n            (n[i], n[i + 1]) = (n[i + 1], n[i])\n    return n\n\ndef funeve(n):\n    for i in range(1, len(n) - 1, 2):\n        if n[i] > n[i + 1]:\n            (n[i], n[i + 1]) = (n[i + 1], n[i])\n    return n\nflag = 1\ncoount = 0\nw = int(input())\nfor i in range(w):\n    k = int(input())\n    t = list(map(int, input().split()))\n    b = list(t)\n    b.sort()\n    while t != b:\n        if flag % 2 == 0:\n            t = funeve(t)\n            flag += 1\n            coount += 1\n        else:\n            t = funod(t)\n            flag += 1\n            coount += 1\n    print(coount)\n    coount = 0\n    flag = 1", "def sorte(arr):\n    ans = True\n    for i in range(0, len(arr)):\n        if arr[i] != i + 1:\n            ans = False\n            break\n    return ans\n\ndef odd(arr, n):\n    for i in range(1, n - 1, 2):\n        if arr[i - 1] > arr[i]:\n            c = arr[i]\n            d = arr[i - 1]\n            arr[i] = d\n            arr[i - 1] = c\n\ndef even(arr, n):\n    for i in range(2, n, 2):\n        if arr[i - 1] > arr[i]:\n            c = arr[i]\n            d = arr[i - 1]\n            arr[i] = d\n            arr[i - 1] = c\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    num = list(set(arr))\n    if sorte(arr):\n        print(0)\n    else:\n        ans = 0\n        for i in range(1, n + 1):\n            if sorte(arr):\n                break\n            elif i % 2 == 1:\n                odd(arr, n)\n                ans += 1\n            elif i % 2 == 0:\n                even(arr, n)\n                ans += 1\n        print(ans)", "def func(n, a):\n    i = 0\n    sort = sorted(a)\n    while a != sort:\n        if i % 2 == 0:\n            for j in range(0, n - 1, 2):\n                if a[j] > a[j + 1]:\n                    (a[j], a[j + 1]) = (a[j + 1], a[j])\n        else:\n            for j in range(1, n, 2):\n                if a[j] > a[j + 1]:\n                    (a[j], a[j + 1]) = (a[j + 1], a[j])\n        i += 1\n    return i\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(func(n, a))", "import sys\nfrom math import sqrt, ceil, floor, gcd\nfrom collections import Counter\ninput = lambda : sys.stdin.readline()\n\ndef int_arr():\n    return list(map(int, input().split()))\n\ndef str_arr():\n    return list(map(str, input().split()))\n\ndef get_str():\n    return map(str, input().split())\n\ndef get_int():\n    return map(int, input().split())\n\ndef get_flo():\n    return map(float, input().split())\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\nmod = 1000000007\n\ndef solve(n, a):\n    sortedA = sorted(a)\n    c = 0\n    while sortedA != a:\n        for i in range(c % 2, n - 1, 2):\n            if a[i] > a[i + 1]:\n                (a[i + 1], a[i]) = (a[i], a[i + 1])\n        c += 1\n    print(c)\nfor _ in range(int(input())):\n    n = int(input())\n    a = int_arr()\n    solve(n, a)", "def main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        iter = 0\n        a_out = a\n        while True:\n            if issorted(a_out):\n                break\n            iter += 1\n            a_out = ssort(a, iter)\n        print(iter)\n\ndef issorted(a):\n    for i in range(len(a) - 1):\n        if a[i] > a[i + 1]:\n            return False\n    return True\n\ndef ssort(a, i):\n    n = len(a)\n    if i % 2 == 0:\n        for i in range(1, n - 1, 2):\n            if a[i + 1] < a[i]:\n                (a[i], a[i + 1]) = (a[i + 1], a[i])\n    else:\n        for i in range(0, n - 2, 2):\n            if a[i + 1] < a[i]:\n                (a[i], a[i + 1]) = (a[i + 1], a[i])\n    return a\nmain()", "def sp(arr, x):\n    for i in range(1 - x, n - x - 1, 2):\n        if arr[i] > arr[i + 1]:\n            (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n\ndef solve():\n    for j in range(n):\n        if arr[j] == j + 1:\n            pass\n        else:\n            break\n    else:\n        return 0\n    i = 1\n    while True:\n        if i % 2 == 0:\n            sp(arr, 0)\n        else:\n            sp(arr, 1)\n        for j in range(n):\n            if arr[j] == j + 1:\n                pass\n            else:\n                break\n        else:\n            return i\n        i += 1\nfrom sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    print(solve())", "def f(n, a):\n    a_sort = sorted(a)\n    s = 0\n    ind = 1\n    while a != a_sort:\n        if ind == 1:\n            ind = 0\n        else:\n            ind = 1\n        for i in range(ind, n - 1, 2):\n            if a[i] > a[i + 1]:\n                (a[i], a[i + 1]) = (a[i + 1], a[i])\n        s += 1\n    return s\nn = int(input())\nlst = []\nfor item in range(n):\n    lst.append(f(int(input()), [int(item) for item in input().split()]))\nprint(*lst, sep='\\n')", "def sort(arr, n):\n    ans = True\n    for i in range(0, n):\n        if arr[i] != i + 1:\n            ans = False\n            break\n    return ans\n\ndef itrodd(arr, n):\n    for i in range(1, n - 1, 2):\n        if arr[i - 1] > arr[i]:\n            b = arr[i]\n            h = arr[i - 1]\n            arr[i] = h\n            arr[i - 1] = b\n\ndef itreven(arr, n):\n    for i in range(2, n, 2):\n        if arr[i - 1] > arr[i]:\n            b = arr[i]\n            h = arr[i - 1]\n            arr[i] = h\n            arr[i - 1] = b\ntest = int(input())\nwhile test > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    total = 0\n    for i in range(1, n + 1):\n        if sort(arr, n):\n            break\n        elif i % 2 == 0:\n            itreven(arr, n)\n            total += 1\n        else:\n            itrodd(arr, n)\n            total += 1\n    print(total)\n    test -= 1", "def odd(n, a):\n    for i in range(0, n - 1, 2):\n        if a[i] > a[i + 1]:\n            z = a[i]\n            a[i] = a[i + 1]\n            a[i + 1] = z\n    return a\n\ndef even(n, a):\n    for i in range(1, n, 2):\n        if a[i] > a[i + 1]:\n            z = a[i]\n            a[i] = a[i + 1]\n            a[i + 1] = z\n    return a\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = sorted(a)\n    i = 0\n    while a != b:\n        if i % 2 != 0:\n            even(n, a)\n        else:\n            odd(n, a)\n        i += 1\n    print(i)", "from collections import defaultdict\n\ndef solve():\n    test_case = int(input())\n    while test_case > 0:\n        n = int(input())\n        arr = list(map(int, input().split()))\n        answer = sorted(arr)\n        iteration = 1\n        while arr != answer:\n            if iteration % 2 == 1:\n                for i in range(0, len(arr) - 2, 2):\n                    if arr[i] > arr[i + 1]:\n                        (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n            else:\n                for i in range(1, len(arr) - 1, 2):\n                    if arr[i] > arr[i + 1]:\n                        (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n            iteration += 1\n        print(iteration - 1)\n        test_case -= 1\nsolve()", "def IsSort(A):\n    return all((A[i] < A[i + 1] for i in range(len(A) - 1)))\n\ndef solve(A, n):\n    iter = 0\n    while not IsSort(A):\n        for i in range(iter % 2, n - 1, 2):\n            if A[i] > A[i + 1]:\n                (A[i], A[i + 1]) = (A[i + 1], A[i])\n        iter += 1\n    return iter\nt = int(input())\nfor c in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    print(solve(A, n))", "t = int(input())\n\ndef odd(a, n):\n    for i in range(0, n - 1, 2):\n        if a[i] > a[i + 1]:\n            tmp = a[i]\n            a[i] = a[i + 1]\n            a[i + 1] = tmp\n    return a\n\ndef even(a, n):\n    for i in range(1, n - 1, 2):\n        if a[i] > a[i + 1]:\n            tmp = a[i]\n            a[i] = a[i + 1]\n            a[i + 1] = tmp\n    return a\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = sorted(a)\n    ans = 0\n    while b != a:\n        if ans % 2 == 0:\n            a = odd(a, n)\n        else:\n            a = even(a, n)\n        ans += 1\n    print(ans)", "def func():\n    t = int(input().strip())\n    cases = []\n    for _ in range(t):\n        n = int(input().strip())\n        a = list(map(int, input().strip().split()))\n        cases.append([a, n])\n    for case in cases:\n        print(simple_sort(case[0], case[1]))\n\ndef simple_sort(nums, n):\n    ans = 0\n    nums_sorted = sorted(nums)\n    while nums != nums_sorted:\n        for i in range(ans % 2, n - 1, 2):\n            if nums[i] > nums[i + 1]:\n                (nums[i], nums[i + 1]) = (nums[i + 1], nums[i])\n        ans += 1\n    return ans\nfunc()", "def solve(length, nums):\n    sort = sorted(nums)\n    idx = 0\n    while True:\n        if nums == sort:\n            return idx\n        idx += 1\n        if idx % 2 == 1:\n            for i in range(1, length - 1, 2):\n                if nums[i - 1] > nums[i]:\n                    (nums[i - 1], nums[i]) = (nums[i], nums[i - 1])\n        else:\n            for i in range(2, length, 2):\n                if nums[i - 1] > nums[i]:\n                    (nums[i - 1], nums[i]) = (nums[i], nums[i - 1])\nnum = int(input())\nfor n in range(num):\n    length = int(input())\n    nums = [int(i) for i in input().split()]\n    print(solve(length, nums))", "def solution():\n    for _ in range(int(input())):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        c = 0\n        b = sorted(a)\n        if a == b:\n            print(0)\n            continue\n        i = 0\n        while a != b:\n            d = 0\n            if i % 2 == 0:\n                for j in range(0, n - 2, 2):\n                    if a[j] > a[j + 1]:\n                        (a[j], a[j + 1]) = (a[j + 1], a[j])\n            else:\n                for j in range(1, n - 1, 2):\n                    if a[j] > a[j + 1]:\n                        (a[j], a[j + 1]) = (a[j + 1], a[j])\n            c += 1\n            i += 1\n        print(c)\nsolution()", "def count_iterations(n, a):\n    iter = 0\n    s_copy = []\n    s_copy = list(a)\n    s_copy.sort()\n    while a != s_copy:\n        if iter % 2 == 0:\n            for j in range(0, n - 1, 2):\n                if a[j] > a[j + 1]:\n                    (a[j], a[j + 1]) = (a[j + 1], a[j])\n        else:\n            for j in range(1, n - 1, 2):\n                if a[j] > a[j + 1]:\n                    (a[j], a[j + 1]) = (a[j + 1], a[j])\n        iter += 1\n    return iter\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().rstrip().split()))\n    response = count_iterations(n, a)\n    print(f'{response}')", "def solve(n, p):\n    r = 0\n    while p != sorted(p):\n        r += 1\n        if r & 1:\n            for i in range(0, n - 1, 2):\n                if p[i] > p[i + 1]:\n                    (p[i], p[i + 1]) = (p[i + 1], p[i])\n        else:\n            for i in range(1, n, 2):\n                if p[i] > p[i + 1]:\n                    (p[i], p[i + 1]) = (p[i + 1], p[i])\n    return r\nfor _ in range(int(input())):\n    print(solve(int(input()), list((int(i) for i in input().split()))))", "import sys\ninput = sys.stdin.readline\n\ndef solution(n, arr):\n    ans = 0\n    while True:\n        is_sorted = True\n        for i in range(n):\n            if arr[i] != i + 1:\n                is_sorted = False\n                break\n        if is_sorted:\n            return ans\n        if (ans + 1) % 2 != 0:\n            for i in range(0, n, 2):\n                if i + 1 < n and arr[i] > arr[i + 1]:\n                    tmp = arr[i]\n                    arr[i] = arr[i + 1]\n                    arr[i + 1] = tmp\n        else:\n            for i in range(1, n, 2):\n                if i + 1 < n and arr[i] > arr[i + 1]:\n                    tmp = arr[i]\n                    arr[i] = arr[i + 1]\n                    arr[i + 1] = tmp\n        ans += 1\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    arr = [int(x) for x in input().strip().split(' ')]\n    print(solution(n, arr))", "from collections import Counter, deque\nfrom math import *\nmod = 1000000007\n\ndef solve():\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = sorted(l)\n    count = 0\n    while l1 != l:\n        check = False\n        for i in range(0, n - 1, 2):\n            if l[i] > l[i + 1]:\n                (l[i], l[i + 1]) = (l[i + 1], l[i])\n                check = True\n        if True:\n            count += 1\n        check = False\n        if l == l1:\n            break\n        for i in range(1, n - 1, 2):\n            if l[i] > l[i + 1]:\n                (l[i], l[i + 1]) = (l[i + 1], l[i])\n                check = True\n        if True:\n            count += 1\n    print(count)\nfor _ in range(int(input())):\n    solve()", "def run():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        L = []\n        L = [int(i) for i in input().split(' ')]\n        print(str(ans(L)))\n\ndef ans(L, acc=0, i=1):\n    while not sortedp(L):\n        L = f(L, i)\n        acc = acc + 1\n        i = 1 - i\n    return acc\n\ndef sortedp(L):\n    x = L[0]\n    for i in L[1:]:\n        if i != x + 1:\n            return False\n        x = i\n    return True\n\ndef f(L, i):\n    if L == []:\n        return L\n    if L[1:] == []:\n        return L\n    if i == 1:\n        k = len(L)\n        for i in range(0, k - 1, 2):\n            if L[i] > L[i + 1]:\n                c = L[i]\n                L[i] = L[i + 1]\n                L[i + 1] = c\n        return L\n    else:\n        L = [L[0]] + f(L[1:], 1 - i)\n        return L\n\ndef srt(a, b):\n    if a > b:\n        return [b, a]\n    else:\n        return [a, b]\nrun()", "def sortInWave(arr):\n    n = len(arr)\n    c = 0\n    dummy = list(range(1, n + 1))\n    i = 0\n    while arr != dummy:\n        if i % 2 == 0:\n            for j in range(0, n - 2, 2):\n                if arr[j] > arr[j + 1]:\n                    (arr[j], arr[j + 1]) = (arr[j + 1], arr[j])\n        else:\n            for j in range(1, n - 1, 2):\n                if arr[j] > arr[j + 1]:\n                    (arr[j], arr[j + 1]) = (arr[j + 1], arr[j])\n        i += 1\n        c += 1\n    return c\ntest = int(input())\nfor i in range(test):\n    nnn = int(input())\n    arr = list(map(int, input().split()))\n    print(sortInWave(arr))", "def main():\n    test = int(input())\n    i = 0\n    while i < test:\n        num = int(input())\n        if num % 2 != 0:\n            array = [int(x) for x in input().split(' ')]\n            iter_no = strange_sort(num, array)\n            print(iter_no)\n            i += 1\n\ndef strange_sort(n, a):\n    ite = 0\n    checked = check_sort(n, a)\n    if checked == 1:\n        ite = 0\n    else:\n        while checked != 1:\n            if ite % 2 != 0:\n                start = 1\n                ending = n\n            else:\n                start = 0\n                ending = n - 1\n            for i in range(start, ending, 2):\n                if a[i] > a[i + 1]:\n                    temp = a[i]\n                    a[i] = a[i + 1]\n                    a[i + 1] = temp\n            ite += 1\n            checked = check_sort(n, a)\n    return ite\n\ndef check_sort(l, arr):\n    check = 1\n    for i in range(l - 1):\n        if arr[i] > arr[i + 1]:\n            check = -1\n            break\n    return check\nmain()", "def odd(l):\n    for i in range(0, n - 2, 2):\n        if l[i] > l[i + 1]:\n            k = l[i]\n            l[i] = l[i + 1]\n            l[i + 1] = k\n\ndef even(l):\n    for i in range(1, n - 1, 2):\n        if l[i] > l[i + 1]:\n            k = l[i]\n            l[i] = l[i + 1]\n            l[i + 1] = k\nt = int(input())\nwhile t:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    a = sorted(l)\n    c = 0\n    while l != a:\n        if c % 2 == 0:\n            odd(l)\n            c += 1\n        else:\n            even(l)\n            c += 1\n    print(c)\n    t -= 1", "from collections import Counter\nfrom itertools import accumulate, product, groupby\nimport operator\nimport math\n\ndef solve():\n    n = int(input())\n    arr = [-1] + [int(char) for char in input().split()]\n    n += 1\n\n    def odd_sort():\n        something_changed = False\n        for i in range(1, n - 1, 2):\n            if arr[i] > arr[i + 1]:\n                (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n                something_changed = True\n        return something_changed\n\n    def even_sort():\n        something_changed = False\n        for i in range(2, n, 2):\n            if arr[i] > arr[i + 1]:\n                (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n                something_changed = True\n        return something_changed\n    (prev_changed, cur_is_odd) = (True, True)\n    ans = 0\n    while True:\n        if cur_is_odd:\n            cur_changed = odd_sort()\n        else:\n            cur_changed = even_sort()\n        cur_is_odd = not cur_is_odd\n        if not prev_changed and (not cur_changed):\n            break\n        ans += 1\n        prev_changed = cur_changed\n    return ans - 1\nfor _ in range(int(input())):\n    print(solve())", "def sp(arr, x):\n    for i in range(1 - x, n - x - 1, 2):\n        if arr[i] > arr[i + 1]:\n            (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n\ndef solve():\n    if arr == sorted(arr):\n        return 0\n    i = 1\n    while True:\n        sp(arr, i % 2)\n        if arr == sorted(arr):\n            return i\n        i += 1\nfrom sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    print(solve())", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_list_strings():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef solve(n, arr):\n    count = 0\n    final = arr[:]\n    final.sort()\n    while final != arr:\n        for i in range(0, n - 2, 2):\n            if arr[i] > arr[i + 1]:\n                (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n        count += 1\n        if final == arr:\n            break\n        for i in range(1, n - 1, 2):\n            if arr[i] > arr[i + 1]:\n                (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n        count += 1\n    sys.stdout.write(str(count) + '\\n')\n    return\nT = get_int()\nwhile T:\n    n = get_int()\n    arr = get_list()\n    solve(n, arr)\n    T -= 1", "n = int(input())\n\ndef check(nums):\n    if nums == sorted(nums):\n        return True\n    else:\n        return False\n\ndef oddChange(nums, length):\n    for i in range(1, length, 2):\n        if nums[i] > nums[i + 1]:\n            (nums[i], nums[i + 1]) = (nums[i + 1], nums[i])\n    return nums\n\ndef evenChange(nums, length):\n    for i in range(0, length - 1, 2):\n        if nums[i] > nums[i + 1]:\n            (nums[i], nums[i + 1]) = (nums[i + 1], nums[i])\n    return nums\nfor i in range(n):\n    length = int(input())\n    nums = [int(i) for i in input().split()]\n    times = 0\n    while True:\n        if check(nums) == False:\n            times += 1\n            nums = evenChange(nums, length)\n        else:\n            break\n        if check(nums) == False:\n            times += 1\n            nums = oddChange(nums, length)\n        else:\n            break\n    print(times)", "T = int(input().strip())\nfor t in range(T):\n    N = int(input().strip())\n    A = list(map(int, input().split()))\n    AS = sorted(A)\n    iterations = 0\n    if A == AS:\n        print(0)\n        continue\n\n    def func(i):\n        if i % 2 == 1:\n            for idx in range(1, N - 1, 2):\n                if A[idx] > A[idx + 1]:\n                    (A[idx], A[idx + 1]) = (A[idx + 1], A[idx])\n        else:\n            for idx in range(0, N - 2, 2):\n                if A[idx] > A[idx + 1]:\n                    (A[idx], A[idx + 1]) = (A[idx + 1], A[idx])\n    while True:\n        for i in range(N + 1):\n            func(i)\n            iterations += 1\n            if A == AS:\n                print(iterations)\n                break\n        break", "def bubbleSort(n, arr):\n    count = 0\n    k = 0\n    flag = False\n    if arr == sorted(arr):\n        return 0\n    for i in range(n):\n        if arr == sorted(arr):\n            break\n        else:\n            count += 1\n        if i % 2 == 0:\n            k = 0\n        else:\n            k = 1\n        for j in range(k, n - 1, 2):\n            if arr[j] > arr[j + 1]:\n                (arr[j], arr[j + 1]) = (arr[j + 1], arr[j])\n    return count\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = bubbleSort(n, arr)\n    print(res)", "from string import ascii_lowercase\nfrom decimal import Decimal\nfrom random import randrange, choice, randint\nimport time\nfrom heapq import heappop, heappush, heapify\nfrom copy import copy\nfrom bisect import bisect_right, bisect_left\nfrom sys import stdin\nfrom functools import reduce\nfrom math import sqrt, gcd, pi, factorial, ceil, floor, sin\nfrom itertools import permutations\nfrom collections import defaultdict, deque, Counter\nimport sys\nsys.setrecursionlimit(1000000)\n\ndef sorted(a):\n    n = len(a)\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            return False\n    return True\n\ndef solve(n, a):\n    i = 0\n    while not sorted(a):\n        if i % 2 == 0:\n            for j in range(0, n - 1, 2):\n                if a[j] > a[j + 1]:\n                    (a[j], a[j + 1]) = (a[j + 1], a[j])\n        else:\n            for j in range(1, n - 1, 2):\n                if a[j] > a[j + 1]:\n                    (a[j], a[j + 1]) = (a[j + 1], a[j])\n        i += 1\n    return i\nt = int(input())\nans = [0 for _ in range(t)]\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans[i] = solve(n, a)\nfor a in ans:\n    print(a)", "test = int(input())\n\ndef f(i):\n    a = list[i - 1]\n    b = list[i]\n    if a > b:\n        list[i - 1] = b\n        list[i] = a\n        return list\n    else:\n        return list\n\ndef iteration():\n    iter = 1\n    true_list = [0] * n\n    for y in range(n):\n        true_list[y] = y + 1\n    while list != true_list:\n        if iter % 2 == 1:\n            for num in range(1, n - 1, 2):\n                f(num)\n        if iter % 2 == 0:\n            for num in range(2, n, 2):\n                f(num)\n        iter += 1\n    return iter - 1\nfor case in range(test):\n    n = int(input())\n    list = input().split()\n    list = [int(x) for x in list]\n    print(iteration())", "def issorted(n, a):\n    for i in range(1, n):\n        if a[i] < a[i - 1]:\n            return False\n    return True\n\ndef solve(n, a):\n    i = 0\n    while not issorted(n, a):\n        if i % 2 == 0:\n            for j in range(0, n, 2):\n                if j + 1 < n and a[j] > a[j + 1]:\n                    (a[j], a[j + 1]) = (a[j + 1], a[j])\n        else:\n            for j in range(1, n, 2):\n                if j + 1 < n and a[j] > a[j + 1]:\n                    (a[j], a[j + 1]) = (a[j + 1], a[j])\n        i += 1\n    return i\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    print(solve(n, a))", "from cmath import *\nfrom decimal import *\nimport sys\nfrom tkinter import N\ninput_ = sys.stdin.readline\n\ndef _input():\n    return map(int, input().split())\n\ndef _list():\n    return list(map(int, input().split()))\n\ndef swap(a, b):\n    return (b, a)\n\ndef f(a, i):\n    if i % 2 == 0:\n        for i in range(0, len(a) - 2, 2):\n            if a[i] > a[i + 1]:\n                (a[i], a[i + 1]) = (a[i + 1], a[i])\n    else:\n        for i in range(1, len(a) - 1, 2):\n            if a[i] > a[i + 1]:\n                (a[i], a[i + 1]) = (a[i + 1], a[i])\n    return a\n\ndef solves():\n    n = int(input())\n    ans = 0\n    a = _list()\n    b = sorted(a)\n    i = 0\n    while True:\n        if a == b:\n            break\n        a = f(a, i)\n        i += 1\n        ans += 1\n    print(ans)\nt = 1\nt = int(input())\nfor _ in range(0, t):\n    solves()", "def foo(arr, i):\n    if arr[i - 1] > arr[i]:\n        (arr[i - 1], arr[i]) = (arr[i], arr[i - 1])\n\ndef manyFoo(arr, start, end, step):\n    for i in range(start, end, step):\n        foo(arr, i)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    sortArr = sorted(arr)\n    step = 0\n    while arr != sortArr:\n        step += 1\n        if step % 2 == 0:\n            manyFoo(arr, 2, n, 2)\n        else:\n            manyFoo(arr, 1, n - 1, 2)\n    print(step)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0]\n\n    def odd(a):\n        for i in range(0, n - 1, 2):\n            if a[i] > a[i + 1]:\n                (a[i], a[i + 1]) = (a[i + 1], a[i])\n\n    def even(a):\n        for i in range(1, n - 1, 2):\n            if a[i] > a[i + 1]:\n                (a[i], a[i + 1]) = (a[i + 1], a[i])\n    i = 0\n    while sorted(a) != a:\n        if i % 2 == 0:\n            odd(a)\n        else:\n            even(a)\n        i += 1\n    print(i)", "def ordered(arr):\n    for idx in range(1, len(arr)):\n        if arr[idx] < arr[idx - 1]:\n            return False\n    return True\n\ndef f(arr, i):\n    if arr[i] > arr[i + 1]:\n        (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n\ndef step(arr, i):\n    if i % 2 == 1:\n        for j in range(0, n - 2, 2):\n            f(arr, j)\n    else:\n        for j in range(1, n - 1, 2):\n            f(arr, j)\n\ndef get_num_iter(perm):\n    iterations = 0\n    while not ordered(perm):\n        step(perm, iterations + 1)\n        iterations += 1\n    return iterations\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    arr = [int(el) for el in s.split(' ')]\n    print(get_num_iter(arr))", "tc = int(input())\nanswer = []\n\ndef helper(i: int, a: list):\n    if i % 2 == 0:\n        for x in range(1, len(a) - 1, 2):\n            if a[x] > a[x + 1]:\n                (a[x], a[x + 1]) = (a[x + 1], a[x])\n    else:\n        for x in range(0, len(a) - 1, 2):\n            if a[x] > a[x + 1]:\n                (a[x], a[x + 1]) = (a[x + 1], a[x])\nfor i in range(tc):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    i = 1\n    count = 0\n    while sorted(a) != a:\n        helper(i, a)\n        count += 1\n        i += 1\n    answer.append(count)\nfor i in answer:\n    print(i)", "def eve(l):\n    for i in range(0, n - 1, 2):\n        if l[i] > l[i + 1]:\n            (l[i], l[i + 1]) = (l[i + 1], l[i])\n    return l\n\ndef odd(l):\n    for i in range(1, n - 1, 2):\n        if l[i] > l[i + 1]:\n            (l[i], l[i + 1]) = (l[i + 1], l[i])\n    return l\nx = int(input())\nwhile x:\n    x -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = l\n    if m == sorted(l):\n        print(0)\n    else:\n        c = 0\n        for i in range(n):\n            if i & 1:\n                m = odd(m)\n                if m == sorted(l):\n                    print(c + 1)\n                    break\n                else:\n                    c += 1\n            else:\n                m = eve(m)\n                if m == sorted(l):\n                    print(c + 1)\n                    break\n                else:\n                    c += 1", "def strangeSort(ar, n):\n    sortedAry = sorted(ar)\n    count = 0\n    for i in range(n):\n        if ar == sortedAry:\n            return count\n        count += 1\n        if (i + 1) % 2 == 0:\n            for j in range(1, n - 1, 2):\n                if ar == sortedAry:\n                    return count\n                if ar[j] > ar[j + 1]:\n                    (ar[j], ar[j + 1]) = (ar[j + 1], ar[j])\n        else:\n            for k in range(0, n - 2, 2):\n                if ar == sortedAry:\n                    return count\n                if ar[k] > ar[k + 1]:\n                    (ar[k], ar[k + 1]) = (ar[k + 1], ar[k])\n    return count\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    print(strangeSort(ar, n))", "import sys\n\ndef issorted(vals):\n    for idx in range(len(vals) - 1):\n        if vals[idx] > vals[idx + 1]:\n            break\n    else:\n        return True\n    return False\n\ndef swap(idx, vals):\n    if vals[idx] > vals[idx + 1]:\n        (vals[idx], vals[idx + 1]) = (vals[idx + 1], vals[idx])\n\ndef sort(vals):\n    iter = 0\n    while not issorted(vals):\n        iter += 1\n        if iter % 2 != 0:\n            for idx in range(0, len(vals) - 1, 2):\n                swap(idx, vals)\n        else:\n            for idx in range(1, len(vals), 2):\n                swap(idx, vals)\n    return iter\nt = int(sys.stdin.readline())\nwhile t:\n    size = int(sys.stdin.readline())\n    vals = [int(i) for i in sys.stdin.readline().split()]\n    t -= 1\n    print(sort(vals))", "def main():\n    T = int(input())\n    k = 0\n    while k < T:\n        n = int(input())\n        array = list(map(int, input().split(' ')))\n        iter = 0\n        end_1 = n - 1 if n % 2 == 0 else n\n        copy_arr = array[:]\n        copy_arr.sort()\n        if array == copy_arr:\n            print(0)\n        else:\n            for i in range(n):\n                (check_1, check_2) = (False, False)\n                if (i + 1) % 2 != 0:\n                    end_1 = n - 1 if n % 2 != 0 else n\n                    for p in range(0, end_1, 2):\n                        if array[p] > array[p + 1]:\n                            check_1 = True\n                            (array[p], array[p + 1]) = (array[p + 1], array[p])\n                else:\n                    end_2 = n - 1 if n % 2 == 0 else n\n                    for q in range(1, end_2, 2):\n                        if array[q] > array[q + 1]:\n                            check_2 = True\n                            (array[q], array[q + 1]) = (array[q + 1], array[q])\n                if copy_arr == array:\n                    iter = i\n                    break\n            print(iter + 1)\n        k += 1\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sort = sorted(a)\n    if a == sort:\n        print(0)\n    else:\n        count = 0\n        while a != sort:\n            if count % 2 == 0:\n                for i in range(0, n - 1, 2):\n                    if a[i + 1] < a[i]:\n                        (a[i + 1], a[i]) = (a[i], a[i + 1])\n            else:\n                for i in range(1, n - 1, 2):\n                    if a[i + 1] < a[i]:\n                        (a[i], a[i + 1]) = (a[i + 1], a[i])\n            count = count + 1\n        print(count)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt = 0\n    i = 1\n    b = sorted(a)\n    while a != b:\n        if i % 2 != 0:\n            for j in range(0, n - 2, 2):\n                if a[j] > a[j + 1]:\n                    (a[j], a[j + 1]) = (a[j + 1], a[j])\n        else:\n            for j in range(1, n - 1, 2):\n                if a[j] > a[j + 1]:\n                    (a[j], a[j + 1]) = (a[j + 1], a[j])\n        i = i + 1\n    print(i - 1)\n    t = t - 1", "def isSorted(a):\n    return all((a[i] <= a[i + 1] for i in range(len(a) - 1)))\n\ndef f(a, i):\n    if a[i + 1] < a[i]:\n        (a[i + 1], a[i]) = (a[i], a[i + 1])\n\ndef iterate(a, i, n):\n    m = i % 2\n    for i in range(2 - m, n - m, 2):\n        f(a, i)\n\ndef solve(a, n):\n    i = 0\n    while not isSorted(a):\n        i += 1\n        iterate(a, i, n)\n    print(i)\n\ndef main():\n    t = int(input())\n    ax = []\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        a = [0] + a\n        ax.append((a, n))\n    for (a, n) in ax:\n        solve(a, n)\nmain()", "def main():\n\n    def f(a, i):\n        i -= 1\n        if (save := a[i]) > a[i + 1]:\n            a[i] = a[i + 1]\n            a[i + 1] = save\n        return a\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        sa = list(sorted(a))\n        c = 1\n        while a != sa:\n            if c % 2:\n                for i in range(1, n - 1, 2):\n                    a = f(a, i)\n            else:\n                for i in range(2, n, 2):\n                    a = f(a, i)\n            if c > 1000:\n                break\n            c += 1\n        print(c - 1)\nmain()", "def bs(a, f):\n    k = 0\n    if f:\n        k = 1\n    for j in range(k, len(a) - 1, 2):\n        if a[j] > a[j + 1] and j + 1 < len(a):\n            (a[j], a[j + 1]) = (a[j + 1], a[j])\nt = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    l = a.copy()\n    l.sort()\n    for i in range(0, n):\n        if l == a:\n            break\n        bs(a, i % 2)\n        ans += 1\n    print(ans)", "def question1():\n    total = int(input())\n    arr = list(map(int, input().split()))\n    ongoing = 1\n    count = 0\n    times = 0\n    while True:\n        if ongoing % 2 == 0:\n            j = 1\n            found = False\n            while j < total:\n                if j != total - 1 and arr[j] > arr[j + 1]:\n                    (arr[j], arr[j + 1]) = (arr[j + 1], arr[j])\n                    found = True\n                j += 2\n            if found:\n                count += 1\n                times = 0\n            else:\n                times += 1\n        else:\n            found = False\n            j = 0\n            while j < total:\n                if j != total - 1 and arr[j] > arr[j + 1]:\n                    (arr[j], arr[j + 1]) = (arr[j + 1], arr[j])\n                    found = True\n                j += 2\n            if found:\n                count += 1\n                times = 0\n            else:\n                times += 1\n        if times >= 2:\n            return ongoing - 2\n        ongoing += 1\nremained_test_cases = 1\nremained_test_cases = int(input())\nwhile remained_test_cases > 0:\n    print(question1())\n    remained_test_cases -= 1", "def fun(arr, n):\n\n    def is_sorted(nums, n):\n        for i in range(n - 1):\n            if nums[i] > nums[i + 1]:\n                return False\n        return True\n    count = 0\n    while not is_sorted(arr, n):\n        i = count % 2\n        while i < n - 1:\n            if arr[i] > arr[i + 1]:\n                (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n            i += 2\n        count += 1\n    return count\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(fun(arr, n))", "def fun(arr, n):\n\n    def is_sorted(nums, n):\n        for i in range(n - 1):\n            if nums[i] > nums[i + 1]:\n                return False\n        return True\n    count = 0\n    i = 0\n    while not is_sorted(arr, n):\n        temp = i\n        while i < n - 1:\n            if arr[i] > arr[i + 1]:\n                (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n            i += 2\n        count += 1\n        i = 1 - temp\n    return count\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(fun(arr, n))", "def solve():\n    n = int(input())\n    li = list(map(int, input().split()))\n    sort = sorted(li)\n    cnt = 0\n    while li != sort:\n        i = cnt % 2\n        while i + 1 < n:\n            if li[i] > li[i + 1]:\n                (li[i], li[i + 1]) = (li[i + 1], li[i])\n            i += 2\n        cnt += 1\n    print(cnt)\nt = int(input())\nfor _ in range(t):\n    solve()", "def cast(cre, typ):\n    return type(typ)(map(cre, typ))\n\ndef inp_lis(cre):\n    if cre == str:\n        return input().split()\n    elif cre == bool:\n        return cast(bool, cast(int, input().split()))\n    else:\n        return cast(cre, input().split())\n\ndef repl(str_, idx=-1, char=''):\n    leng = len(str_)\n    return str_[:idx] + char + str_[(leng + idx) % leng + 1:]\n\ndef sort_(seq, idx):\n    if seq[idx] > seq[idx + 1]:\n        tmp = seq[idx]\n        seq[idx] = seq[idx + 1]\n        seq[idx + 1] = tmp\n    return\n\ndef issort_(seq):\n    last = 0\n    for e in seq:\n        if last > e:\n            return False\n        else:\n            last = e\n    else:\n        return True\n\ndef solution():\n    for t in range(int(input())):\n        n = int(input())\n        per = inp_lis(int)\n        idx = 1\n        while True:\n            if idx % 2 == 1:\n                if issort_(per):\n                    idx -= 1\n                    break\n                for i in range(1, n - 1, 2):\n                    sort_(per, i - 1)\n            else:\n                if issort_(per):\n                    idx -= 1\n                    break\n                for i in range(2, n, 2):\n                    sort_(per, i - 1)\n            idx += 1\n        print(idx)\n    return\nsolution()", "def f(i, a):\n    if i % 2 == 1:\n        for j in range(len(a) - 1):\n            if j % 2 == 0:\n                if a[j] > a[j + 1]:\n                    (a[j], a[j + 1]) = (a[j + 1], a[j])\n    else:\n        for j in range(len(a) - 1):\n            if j % 2 == 1:\n                if a[j] > a[j + 1]:\n                    (a[j], a[j + 1]) = (a[j + 1], a[j])\n    return a\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [i for i in a]\n    b.sort()\n    number = 1\n    count = 0\n    while a != b:\n        a = f(number, a)\n        number += 1\n        count += 1\n    print(count)", "def solve():\n    t = int(input())\n    for _ in range(t):\n        solve_one()\n\ndef solve_one():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n    i = 1\n    while True:\n        exchanged = False\n        if i % 2 != 0:\n            for index_1 in range(1, n - 1, 2):\n                if f(a, index_1):\n                    exchanged = True\n        else:\n            for index_1 in range(2, n, 2):\n                if f(a, index_1):\n                    exchanged = True\n        if not exchanged and is_sorted(a):\n            print(i - 1)\n            return\n        i += 1\n\ndef f(a, index_1):\n    i = index_1 - 1\n    if a[i] > a[i + 1]:\n        (a[i], a[i + 1]) = (a[i + 1], a[i])\n        return True\n    return False\n\ndef is_sorted(a):\n    for i in range(len(a)):\n        if a[i] != i + 1:\n            return False\n    return True\nsolve()", "from collections import deque, Counter\nfrom collections import defaultdict as dfd\nfrom bisect import bisect, bisect_left\nfrom math import sqrt, gcd, ceil, factorial\nfrom heapq import heapify, heappush, heappop\nMOD = 10 ** 9 + 7\ninf = float('inf')\nans_ = []\n\ndef nin():\n    return int(input())\n\ndef ninf():\n    return int(file.readline())\n\ndef st():\n    return input().strip()\n\ndef stf():\n    return file.readline().strip()\n\ndef read():\n    return list(map(int, input().strip().split()))\n\ndef readf():\n    return list(map(int, file.readline().strip().split()))\n\ndef readfl():\n    return list(map(float, input().strip().split()))\n\ndef readffl():\n    return list(map(float, file.readline().strip().split()))\n\ndef solve():\n    for _ in range(nin()):\n        n = nin()\n        arr = read()\n        sor = sorted(arr)\n        if arr == sor:\n            ans_.append(0)\n            continue\n        c = 0\n        for i in range(1, n + 1):\n            if i % 2:\n                for i in range(0, n, 2):\n                    if i + 1 < n and arr[i] > arr[i + 1]:\n                        (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n            else:\n                for i in range(1, n, 2):\n                    if i + 1 < n and arr[i] > arr[i + 1]:\n                        (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n            c += 1\n            if arr == sor:\n                break\n        ans_.append(c)\nsolve()\nfor i in ans_:\n    print(i)", "def f(x):\n    i = 0\n    while i < len(x) - 1:\n        if x[i] > x[i + 1]:\n            X = x[i + 1]\n            x[i + 1] = x[i]\n            x[i] = X\n        i = i + 2\n    return x\n\ndef g(x):\n    i = 1\n    while i < len(x) - 1:\n        if x[i] > x[i + 1]:\n            X = x[i + 1]\n            x[i + 1] = x[i]\n            x[i] = X\n        i = i + 2\n    return x\nz = int(input())\nwhile z > 0:\n    l = int(input())\n    L = [int(i) for i in input().split(' ')]\n    X = L[:]\n    X.sort()\n    n = 0\n    N = 0\n    while X != L:\n        if N == 0:\n            L = f(L)\n            N = 1\n            n = n + 1\n        else:\n            L = g(L)\n            N = 0\n            n = n + 1\n    print('{}'.format(n))\n    z = z - 1", "def f(i):\n    if i & 1:\n        for j in range(0, n, 2):\n            if j + 1 < n and a[j] > a[j + 1]:\n                temp = a[j]\n                a[j] = a[j + 1]\n                a[j + 1] = temp\n    else:\n        for j in range(1, n, 2):\n            if j + 1 < n and a[j] > a[j + 1]:\n                temp = a[j]\n                a[j] = a[j + 1]\n                a[j + 1] = temp\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    best = sorted(a)\n    ans = 0\n    while a != best:\n        ans += 1\n        f(ans)\n    print(ans)", "n_t = int(input())\n\ndef swap(j, k):\n    tmp = j\n    j = k\n    k = tmp\n    return (j, k)\n\ndef strange_sort(nums):\n    sorted_arr = sorted(nums)\n    n = len(nums)\n    num_of_it = 0\n    i = 1\n    while nums != sorted_arr:\n        if i % 2 == 0:\n            for j in range(2, n, 2):\n                if nums[j - 1] > nums[j]:\n                    (nums[j - 1], nums[j]) = swap(nums[j - 1], nums[j])\n            num_of_it += 1\n        elif i % 2 == 1:\n            for k in range(1, n, 2):\n                if nums[k - 1] > nums[k]:\n                    (nums[k - 1], nums[k]) = swap(nums[k - 1], nums[k])\n            num_of_it += 1\n        i += 1\n    print(num_of_it)\nfor i in range(n_t):\n    f = input()\n    nums_i = input().split()\n    n = len(nums_i)\n    for i in range(n):\n        nums_i[i] = int(nums_i[i])\n    strange_sort(nums_i)", "for i in range(int(input())):\n    (a, b) = ([], [])\n    c = 0\n    l = int(input())\n    el = input().split()\n    for elems in el:\n        a.append(int(elems))\n        b.append(int(elems))\n    it = 1\n    b.sort()\n    while a != b:\n        if it % 2 == 0:\n            for k in range(1, len(a), 2):\n                j = k + 1\n                if a[k] > a[j]:\n                    (a[k], a[j]) = (a[j], a[k])\n            it += 1\n        else:\n            for k in range(0, len(a) - 1, 2):\n                j = k + 1\n                if a[k] > a[j]:\n                    (a[k], a[j]) = (a[j], a[k])\n            it += 1\n    print(it - 1)", "def temp(i, array):\n    if array[i] > array[i + 1]:\n        tem = array[i]\n        array[i] = array[i + 1]\n        array[i + 1] = tem\n\ndef fn(array):\n    cnt = 0\n    n = len(array)\n    arr = [i for i in range(1, n + 1)]\n    if arr == array:\n        return 0\n    i = 0\n    while True:\n        if i % 2 == 0:\n            for j in range(0, n - 2, 2):\n                temp(j, array)\n            cnt += 1\n        else:\n            for j in range(1, n - 1, 2):\n                temp(j, array)\n            cnt += 1\n        if arr == array:\n            break\n        i += 1\n    return cnt\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    array = list(map(int, input().strip().split()))\n    print(fn(array))", "n = int(input())\nfor i in range(n):\n    t = int(input())\n    k = list(map(int, input().split()))\n    m = sorted(k)\n    c = 0\n    while k != m:\n        for j in range(c % 2, len(k) - 1, 2):\n            if k[j] > k[j + 1]:\n                (k[j], k[j + 1]) = (k[j + 1], k[j])\n        c += 1\n    print(c)", "def f(a, i):\n    if a[i + 1] <= a[i]:\n        (a[i], a[i + 1]) = (a[i + 1], a[i])\n\ndef check(a):\n    for i in range(len(a) - 1):\n        if a[i + 1] < a[i]:\n            return False\n    return True\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    while not check(a):\n        if c % 2 == 0:\n            for i in range(0, len(a) - 1, 2):\n                f(a, i)\n        else:\n            for i in range(1, len(a), 2):\n                f(a, i)\n        c += 1\n    return c\nfor i in range(int(input())):\n    print(solve())", "def f(array, i):\n    if array[i] > array[i + 1]:\n        (array[i], array[i + 1]) = (array[i + 1], array[i])\nt = int(input())\nfor test_num in range(t):\n    n = int(input())\n    array = list(map(int, input().split()))\n    notSorted = True\n    iteration = 0\n    while notSorted:\n        notSorted = False\n        for k in range(n - 1):\n            if array[k] > array[k + 1]:\n                notSorted = True\n                iteration += 1\n                break\n        if iteration % 2 == 1:\n            for j in range(0, n - 2, 2):\n                f(array, j)\n        else:\n            for j in range(1, n - 1, 2):\n                f(array, j)\n    print(iteration)", "for s in [*open(0)][2::2]:\n    l = [*map(int, s.split())]\n    a = sorted(l)\n    ans = 0\n    while a != l:\n        ans += 1\n        for i in range(1 - ans & 1, len(l) - 1, 2):\n            if l[i] > l[i + 1]:\n                (l[i], l[i + 1]) = (l[i + 1], l[i])\n    print(ans)", "import sys\nfrom math import *\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = sorted(a)\n    ans = 0\n    while b != a:\n        ans += 1\n        if ans % 2 == 1:\n            for i in range(0, n - 1, 2):\n                if a[i] > a[i + 1]:\n                    (a[i], a[i + 1]) = (a[i + 1], a[i])\n        else:\n            for i in range(1, n, 2):\n                if a[i] > a[i + 1]:\n                    (a[i], a[i + 1]) = (a[i + 1], a[i])\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    tem = sorted(a)\n    while 1:\n        if a == tem:\n            break\n        if i % 2 == 0:\n            for x in range(0, n - 1, 2):\n                if a[x] > a[x + 1]:\n                    (a[x], a[x + 1]) = (a[x + 1], a[x])\n        else:\n            for x in range(1, n - 1, 2):\n                if a[x] > a[x + 1]:\n                    (a[x], a[x + 1]) = (a[x + 1], a[x])\n        i += 1\n    print(i)", "import sys\nimport os.path\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\ndepth = 1000005\nmod = 1000000007\nlim = mod * mod\nsys.setrecursionlimit(depth)\nfrom math import inf, ceil, sqrt\nfrom collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (s, c) = (sorted(a), 0)\n    while a != s:\n        c += 1\n        if c & 1:\n            for i in range(0, n - 2, 2):\n                if a[i] > a[i + 1]:\n                    (a[i], a[i + 1]) = (a[i + 1], a[i])\n        else:\n            for i in range(1, n - 1, 2):\n                if a[i] > a[i + 1]:\n                    (a[i], a[i + 1]) = (a[i + 1], a[i])\n    print(c)", "def getlistint():\n    return list(map(int, stdin.readline().split()))\n\ndef getmapint():\n    return map(int, stdin.readline().split())\n\ndef getliststr():\n    return list(stdin.readline().split())\n\ndef getint():\n    return int(stdin.readline().strip())\n\ndef getstr():\n    return stdin.readline().strip()\n\ndef pr(s):\n    stdout.write(str(s) + '\\n')\n\ndef prlist(l):\n    stdout.write(' '.join(list(map(str, l))) + '\\n')\nfrom sys import stdin, stdout\nfor _ in range(getint()):\n    n = getint()\n    a = getlistint()\n    l = sorted(a)\n    j = 0\n    while l != a:\n        j += 1\n        if j % 2 == 1:\n            for i in range(0, n - 2, 2):\n                if a[i] > a[i + 1]:\n                    (a[i], a[i + 1]) = (a[i + 1], a[i])\n        else:\n            for i in range(1, n - 1, 2):\n                if a[i] > a[i + 1]:\n                    (a[i], a[i + 1]) = (a[i + 1], a[i])\n    pr(j)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    sorted_nums = sorted(nums)\n    res = 0\n    while nums != sorted_nums:\n        res += 1\n        if res % 2 == 0:\n            seq = range(1, n - 1, 2)\n        else:\n            seq = range(0, n - 1, 2)\n        for i in seq:\n            if nums[i] > nums[i + 1]:\n                (nums[i], nums[i + 1]) = (nums[i + 1], nums[i])\n    print(res)", "for a0 in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    ll = sorted(l)\n    c = 0\n    while l != ll:\n        for i in range(c % 2, n - 1, 2):\n            if l[i] > l[i + 1]:\n                (l[i], l[i + 1]) = (l[i + 1], l[i])\n        c += 1\n    print(c)", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        b = list(sorted(a))\n        if b == a:\n            print(0)\n            continue\n        for i in range(n):\n            if not i % 2:\n                for j in range(0, n, 2):\n                    a[j:j + 2] = sorted(a[j:j + 2])\n            else:\n                for j in range(1, n, 2):\n                    a[j:j + 2] = sorted(a[j:j + 2])\n            if a == b:\n                print(i + 1)\n                break\nmain()", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    b = sorted(a)\n    c = 0\n    while a != b:\n        if c % 2 == 0:\n            for j in range(0, n - 1, 2):\n                if a[j] > a[j + 1]:\n                    (a[j], a[j + 1]) = (a[j + 1], a[j])\n        else:\n            for j in range(1, n - 1, 2):\n                if a[j] > a[j + 1]:\n                    (a[j], a[j + 1]) = (a[j + 1], a[j])\n        ans += 1\n        c += 1\n    print(ans)", "for i in range(int(input())):\n    k = int(input())\n    arr = list(map(int, input().split()))\n    x = 0\n    arr2 = []\n    while True:\n        z = True\n        for i in range(x % 2, k - 1, 2):\n            if arr[i] > arr[i + 1]:\n                (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n                z = False\n        arr2.append(z)\n        try:\n            if arr2[-1] == True and arr2[-2] == True:\n                break\n        except:\n            pass\n        x += 1\n    print(x - 1)", "def fsort(i, l):\n    if l[i] > l[i + 1]:\n        (l[i], l[i + 1]) = (l[i + 1], l[i])\n    return l\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    l2 = sorted(l)\n    c = 0\n    while l != l2:\n        c += 1\n        if c % 2 != 0:\n            for i in range(0, n - 1, 2):\n                l = fsort(i, l)\n        else:\n            for i in range(1, n - 1, 2):\n                l = fsort(i, l)\n    print(c)", "import math\nx = int(input())\nfor i in range(x):\n    n = int(input())\n    x = input().split()\n    for j in range(n):\n        x[j] = int(x[j])\n    b = []\n    for k in x:\n        b.append(k)\n    x.sort()\n    count = 0\n    while x != b:\n        if x != b:\n            for l in range(0, n - 1, 2):\n                if b[l] > b[l + 1]:\n                    (b[l], b[l + 1]) = (b[l + 1], b[l])\n            count += 1\n        if x != b:\n            for p in range(1, n - 1, 2):\n                if b[p] > b[p + 1]:\n                    (b[p], b[p + 1]) = (b[p + 1], b[p])\n            count += 1\n    print(count)", "def int_input():\n    a = int(input())\n    return a\n\ndef int_list_input():\n    a = list(map(int, input().split()))\n    return a\n\ndef solve():\n    n = int_input()\n    arr = int_list_input()\n    ans = 0\n    iteration = 1\n    while True:\n        flag = True\n        for i in range(n):\n            if arr[i] != i + 1:\n                flag = False\n                break\n        if flag:\n            break\n        ans += 1\n        if iteration % 2 != 0:\n            i = 0\n            while i < n and i + 1 < n:\n                if arr[i] < arr[i + 1]:\n                    i += 2\n                    continue\n                (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n                i += 2\n        else:\n            i = 1\n            while i < n and i + 1 < n:\n                if arr[i] < arr[i + 1]:\n                    i += 2\n                    continue\n                (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n                i += 2\n        iteration += 1\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    a = f = 0\n    while 1:\n        for i in range(n):\n            if li[i] != i + 1:\n                a = a + 1\n                f = 0\n                break\n            else:\n                f = 1\n        if f == 1:\n            break\n        elif a % 2 == 1:\n            for i in range(0, n - 1, 2):\n                if li[i] > li[i + 1]:\n                    (li[i], li[i + 1]) = (li[i + 1], li[i])\n        else:\n            for i in range(1, n - 1, 2):\n                if li[i] > li[i + 1]:\n                    (li[i], li[i + 1]) = (li[i + 1], li[i])\n    print(a)", "def f(arr, i):\n    if arr[i] > arr[i + 1]:\n        (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n\ndef iterate(arr, i):\n    n = len(arr)\n    if i % 2:\n        for j in range(0, n - 1, 2):\n            f(arr, j)\n    else:\n        for j in range(1, n - 1, 2):\n            f(arr, j)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    srt = sorted(arr)\n    i = 1\n    res = 0\n    while arr != srt:\n        iterate(arr, i)\n        i ^= 1\n        res += 1\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr1 = arr[:]\n    arr1.sort()\n    i = 1\n    c = 0\n    while arr != arr1:\n        if i % 2 == 1:\n            for j in range(0, n - 1, 2):\n                if arr[j] > arr[j + 1]:\n                    (arr[j], arr[j + 1]) = (arr[j + 1], arr[j])\n        else:\n            for j in range(1, n, 2):\n                if arr[j] > arr[j + 1]:\n                    (arr[j], arr[j + 1]) = (arr[j + 1], arr[j])\n        i += 1\n        c += 1\n    print(c)", "def read():\n    return list(map(int, input().split()))\n\ndef is_sorted(a):\n    return all((a[i] < a[i + 1] for i in range(len(a) - 1)))\nt = int(input())\nfor ti in range(t):\n    n = int(input())\n    a = read()\n    ans = 0\n    while not is_sorted(a):\n        for i in range(ans % 2, n - 1, 2):\n            if a[i] > a[i + 1]:\n                (a[i], a[i + 1]) = (a[i + 1], a[i])\n        ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = sorted(a.copy())\n    ans = 0\n    while a != b:\n        for i in range(ans % 2, n - 1, 2):\n            if a[i] > a[i + 1]:\n                (a[i], a[i + 1]) = (a[i + 1], a[i])\n        ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    sorted_array = sorted(array)\n    if array == sorted_array:\n        print(0)\n    else:\n        i = 0\n        while array != sorted_array and i < n:\n            if i == 0 or not i & 1:\n                for j in range(0, n - 1, 2):\n                    if array[j] > array[j + 1]:\n                        (array[j], array[j + 1]) = (array[j + 1], array[j])\n            else:\n                for j in range(1, n - 1, 2):\n                    if array[j] > array[j + 1]:\n                        (array[j], array[j + 1]) = (array[j + 1], array[j])\n            i += 1\n        print(i)", "for _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    sorted_array = sorted(array)\n    if array == sorted_array:\n        print(0)\n    else:\n        count = 0\n        for i in range(n):\n            if i == 0 or not i & 1:\n                for j in range(0, n - 1, 2):\n                    if array[j] > array[j + 1]:\n                        (array[j], array[j + 1]) = (array[j + 1], array[j])\n            else:\n                for j in range(1, n - 1, 2):\n                    if array[j] > array[j + 1]:\n                        (array[j], array[j + 1]) = (array[j + 1], array[j])\n            count = i\n            if array == sorted_array:\n                break\n        print(count + 1)", "t = int(input())\nfor _ in range(t):\n    l = int(input())\n    per = list(map(int, input().split()))\n    temp = sorted(per)\n    for i in range(1, l + 1):\n        if temp == per:\n            i -= 1\n            break\n        if i % 2 != 0:\n            for j in range(0, l - 1, 2):\n                if per[j] > per[j + 1]:\n                    (per[j], per[j + 1]) = (per[j + 1], per[j])\n        else:\n            for j in range(1, l - 1, 2):\n                if per[j] > per[j + 1]:\n                    (per[j], per[j + 1]) = (per[j + 1], per[j])\n    print(i)", "def is_sorted(a):\n    return all((a[i] < a[i + 1] for i in range(len(a) - 1)))\nt = int(input())\nfor ti in range(t):\n    n = int(input())\n    nums = [int(i) for i in input().split()]\n    ans = 0\n    while not is_sorted(nums):\n        for i in range(ans % 2, n - 1, 2):\n            if nums[i] > nums[i + 1]:\n                (nums[i], nums[i + 1]) = (nums[i + 1], nums[i])\n        ans += 1\n    print(ans)", "import sys\nfrom os import path\nif path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    line = input()\n    arr = line.split(' ')\n    for i in range(n):\n        arr[i] = int(arr[i])\n    swaps = 0\n    sortedarr = arr.copy()\n    sortedarr.sort()\n    if arr == sortedarr:\n        print(0)\n    else:\n        xx = True\n        while swaps >= 0:\n            swaps += 1\n            if xx:\n                xx = False\n                for i in range(0, n - 2, 2):\n                    if arr[i] > arr[i + 1]:\n                        (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n            else:\n                xx = True\n                for i in range(1, n - 1, 2):\n                    if arr[i] > arr[i + 1]:\n                        (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n            if arr == sortedarr:\n                break\n        print(swaps)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = input().split()\n    for i in range(n):\n        a[i] = int(a[i])\n    count = 0\n    for i in range(n):\n        fl = 1\n        for j in range(n - 1):\n            if a[j] > a[j + 1]:\n                fl = -1\n                break\n        if fl == 1:\n            break\n        if i % 2 == 0:\n            for j in range(0, n - 1, 2):\n                if a[j] > a[j + 1]:\n                    (a[j], a[j + 1]) = (a[j + 1], a[j])\n        else:\n            for j in range(1, n - 1, 2):\n                if a[j] > a[j + 1]:\n                    (a[j], a[j + 1]) = (a[j + 1], a[j])\n        count += 1\n    print(count)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    l1 = sorted(l)\n    a = 0\n    while l != l1:\n        flag = False\n        for j in range(a % 2, n - 1, 2):\n            if l[j] > l[j + 1]:\n                (l[j], l[j + 1]) = (l[j + 1], l[j])\n        a += 1\n    print(a)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ls = sorted(l)\n    c = 0\n    while l != ls:\n        j = c % 2\n        c += 1\n        for i in range(j, n - 1, 2):\n            if l[i] > l[i + 1]:\n                (l[i], l[i + 1]) = (l[i + 1], l[i])\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ls = sorted(l)\n    c = 0\n    while l != ls:\n        j = c % 2\n        c += 1\n        for i in range(j, n - 1, 2):\n            if l[i] > l[i + 1]:\n                (l[i], l[i + 1]) = (l[i + 1], l[i])\n    print(c)", "import math, bisect, heapq, random, sys, itertools\nsys.setrecursionlimit(10 ** 6 + 10)\ninput = sys.stdin.readline\nints = lambda : list(map(int, input().split()))\np = 10 ** 9 + 7\nalpha = 'abcdefghijklmnopqrstuvwxyz'\np2 = [1]\nfor i in range(30):\n    p2.append(p2[i] * 2)\nfor t in range(int(input())):\n    (n,) = ints()\n    a = ints()\n    b = sorted(a)\n    ind = 1\n    while a != b:\n        if ind % 2:\n            for i in range(0, n - 1, 2):\n                if a[i] > a[i + 1]:\n                    (a[i], a[i + 1]) = (a[i + 1], a[i])\n        else:\n            for i in range(1, n - 1, 2):\n                if a[i] > a[i + 1]:\n                    (a[i], a[i + 1]) = (a[i + 1], a[i])\n        ind += 1\n    print(ind - 1)", "from collections import Counter\nimport math\nfrom bisect import bisect\nimport sys\nMOD = 1000000007\nMAX = sys.maxsize\nMIN = -sys.maxsize\n\nclass get:\n\n    def int():\n        return list(map(int, input().split()))\n\n    def str():\n        return input().split()\n\n    def float():\n        return list(map(float, input().split()))\n\n    def map():\n        return map(int, input().split())\n\ndef sqrt(x):\n    return int(math.sqrt(x)) + 1\n\ndef gcd(*args):\n    result = args[0]\n    for item in args:\n        result = math.gcd(result, item)\n    return result\n\ndef LCM(a, b):\n    return a * b // math.gcd(a, b)\n\ndef solve():\n    n = int(input())\n    arr = get.int()\n    i = 1\n    while True:\n        kk = arr + []\n        kk.sort()\n        if kk == arr:\n            print(i - 1)\n            break\n        if i % 2 == 0:\n            for j in range(1, n, 2):\n                if j + 1 < n and arr[j] > arr[j + 1]:\n                    (arr[j], arr[j + 1]) = (arr[j + 1], arr[j])\n        elif i % 2 != 0:\n            for j in range(0, n, 2):\n                if j + 1 < n and arr[j] > arr[j + 1]:\n                    (arr[j], arr[j + 1]) = (arr[j + 1], arr[j])\n        i += 1\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sa = sorted(a)\n    j = 0\n    while a != sa:\n        if (j + 1) % 2:\n            for k in range(0, n - 2, 2):\n                if a[k] > a[k + 1]:\n                    (a[k], a[k + 1]) = (a[k + 1], a[k])\n        else:\n            for k in range(1, n - 1, 2):\n                if a[k] > a[k + 1]:\n                    (a[k], a[k + 1]) = (a[k + 1], a[k])\n        j += 1\n    print(j)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 1\n    s = [o for o in a]\n    s.sort()\n    while s != a:\n        if i % 2 == 0:\n            for j in range(1, n - 1, 2):\n                if a[j] > a[j + 1]:\n                    (a[j], a[j + 1]) = (a[j + 1], a[j])\n        else:\n            for j in range(0, n - 2, 2):\n                if a[j] > a[j + 1]:\n                    (a[j], a[j + 1]) = (a[j + 1], a[j])\n        i += 1\n    print(i - 1)", "t = int(input())\nfor task in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    res = 0\n    while True:\n        for i in range(n):\n            if i != a[i] - 1:\n                break\n        else:\n            break\n        res += 1\n        shift = 1 - res % 2\n        for j in range(shift, n - 1, 2):\n            if a[j] > a[j + 1]:\n                (a[j], a[j + 1]) = (a[j + 1], a[j])\n    print(res)", "a = int(input())\nfor i in range(int(a)):\n    b = input()\n    lst_ = input().split(' ')\n    lst = [int(elem) for elem in lst_]\n    srt = sorted(lst)\n    num = 1\n    if srt == lst:\n        print('0')\n        continue\n    while srt != lst:\n        if int(num % 2) == 1:\n            for k in range(0, len(lst) - 1, 2):\n                if lst[k] > lst[k + 1]:\n                    c = lst[k + 1]\n                    lst[k + 1] = lst[k]\n                    lst[k] = c\n            num += 1\n            continue\n        if int(num % 2) == 0:\n            for k in range(1, len(lst), 2):\n                if lst[k] > lst[k + 1]:\n                    c = lst[k + 1]\n                    lst[k + 1] = lst[k]\n                    lst[k] = c\n            num += 1\n            continue\n    print(num - 1)", "for t in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    sr = sorted(arr)\n    c = 0\n    while arr != sr:\n        for j in range(c % 2, len(arr) - 1, 2):\n            if arr[j] > arr[j + 1]:\n                (arr[j], arr[j + 1]) = (arr[j + 1], arr[j])\n        c += 1\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    c = 0\n    itr = 1\n    arr_sorted = sorted(arr)\n    if len(arr) == 2 and arr[0] == 2:\n        c = 1\n        arr = sorted(arr)\n    while arr != arr_sorted:\n        if itr % 2 != 0:\n            for j in range(0, len(arr) - 2, 2):\n                if arr[j] > arr[j + 1]:\n                    temp = arr[j]\n                    arr[j] = arr[j + 1]\n                    arr[j + 1] = temp\n        elif itr % 2 == 0:\n            for j in range(1, len(arr) - 1, 2):\n                if arr[j] > arr[j + 1]:\n                    temp = arr[j]\n                    arr[j] = arr[j + 1]\n                    arr[j + 1] = temp\n        itr += 1\n        c += 1\n    print(c)", "t = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    alist = [int(i) for i in input().strip().split(' ')]\n    alist_sorted = alist[:]\n    alist_sorted.sort()\n    swap_round = 0\n    while True:\n        if alist == alist_sorted:\n            break\n        for i in range(0, n - 1, 2):\n            if alist[i] > alist[i + 1]:\n                (alist[i], alist[i + 1]) = (alist[i + 1], alist[i])\n        swap_round += 1\n        if alist == alist_sorted:\n            break\n        for i in range(1, n - 1, 2):\n            if alist[i] > alist[i + 1]:\n                (alist[i], alist[i + 1]) = (alist[i + 1], alist[i])\n        swap_round += 1\n        if alist == alist_sorted:\n            break\n    print(swap_round)"]