["t = int(input())\nfor k in range(t):\n    (n, x, yak) = map(int, input().split())\n    print(max(1, min(n, x + yak - n + 1)), min(x + yak - 1, n))", "t = int(input())\nfor k in range(t):\n    (nit, x, y) = map(int, input().split())\n    print(max(1, min(nit, x + y - nit + 1)), min(x + y - 1, nit))", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    print(max(1, min(n, x + y - n + 1)), min(n, x + y - 1))", "t = int(input())\nfor k in range(t):\n    (n, x, yellow) = map(int, input().split())\n    print(max(1, min(n, x + yellow - n + 1)), min(x + yellow - 1, n))", "t = int(input())\nfor k in range(t):\n    (nit, x, y) = map(int, input().split())\n    print(max(1, min(nit, x + y - nit + 1)), min(x + y - 1, nit))", "t = int(input())\narr_1 = []\narr_2 = []\nfor x in range(t):\n    (n, x, y) = list(map(int, input().split(' ')))\n    arr_1.append(max(1, min(n, x + y - n + 1)))\n    arr_2.append(min(n, x + y - 1))\nfor x in range(t):\n    print(arr_1[x], arr_2[x])", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    print(min(max(a + b - n + 1, 1), n), min(a + b - 1, n))", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    if x > y:\n        (x, y) = (y, x)\n    minx = min(n, max(1, x + y + 1 - n))\n    mn = minx\n    mx = min(n, x + y - 1)\n    print(mn, mx)", "T = int(input())\nfor _ in range(T):\n    (n, x, y) = map(int, input().split())\n    if x > y:\n        (x, y) = (y, x)\n    ans1 = 1 if x + y <= n else x + y - n + 1\n    if ans1 > n:\n        ans1 -= 1\n    ans2 = n if x + y > n else x + y - 1\n    print(ans1, ans2)", "c = int(input())\nfor i in range(0, c):\n    (n, x, y) = map(int, input().split())\n    mx = n\n    mn = 1\n    while mx == x:\n        mx -= 1\n    while mn == x:\n        mn += 1\n    t1 = 0\n    t2 = 0\n    z = x + y\n    if mx < z:\n        if z - mx > n:\n            t1 = 0\n        else:\n            t1 = n - (z - mx)\n            tmp = z - mx + 1\n            if y >= tmp and y <= n:\n                t1 -= 1\n    else:\n        t1 = n - 1\n    if mn >= z:\n        t2 = 0\n    else:\n        tmp = z - mn\n        if tmp > n:\n            tmp = n\n        if y >= 1 and y <= tmp:\n            t2 = tmp - 1\n        else:\n            t2 = tmp\n    print(str(n - t1) + ' ' + str(t2 + 1))", "from sys import stdin\nT = int(stdin.readline().strip())\nfor caso in range(T):\n    (n, b, c) = map(int, stdin.readline().strip().split())\n    x = max(1, b + c + 1 - n)\n    print(min(x, n), min(b + c - 1, n))", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    maxi = min(x + y - 1, n)\n    m = min(x + y - n + 1, n)\n    mini = max(m, 1)\n    print(mini, maxi)", "t = int(input())\nfor i in range(t):\n    (N, X, Y) = [int(x) for x in input().split()]\n    min_place = max(1, min(N, X + Y - N + 1))\n    max_place = min(N, X + Y - 1)\n    print(min_place, max_place)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    print(max(1, min(n, x + y - n + 1)), min(n, x + y - 1))", "t = int(input())\nfor _ in range(t):\n    (n, x, y) = map(int, input().split())\n    print(max(1, min(n, x + y - n + 1)), min(n, x + y - 1))", "n = int(input())\nfor i in range(n):\n    li = list(map(int, input().split()))\n    t = li[0]\n    x = li[1]\n    y = li[2]\n    minplace = max(1, min(x + y - t + 1, t))\n    maxplace = min(x + y - 1, t)\n    print(minplace, end=' ')\n    print(maxplace)", "n = int(input())\nfor i in range(n):\n    li = list(map(int, input().split()))\n    t = li[0]\n    x = li[1]\n    y = li[2]\n    minplace = max(1, min(x + y - t + 1, t))\n    maxplace = min(x + y - 1, t)\n    print(minplace, end=' ')\n    print(maxplace)", "t = int(input())\nfor i in range(t):\n    (n, x, y) = input().split()\n    n = int(n)\n    x = int(x)\n    y = int(y)\n    print(max(1, min(n, x + y - n + 1)), min(n, x + y - 1))", "t = int(input())\nfor k in range(t):\n    (n, x, y) = map(int, input().split())\n    print(max(1, min(n, x + y - n + 1)), min(x + y - 1, n))", "n = int(input())\nfor _ in range(n):\n    nums = list(map(int, input().split()))\n    if nums[0] == 1:\n        print(1, 1)\n        continue\n    if nums[1] + nums[2] <= nums[0]:\n        ans = 1\n    else:\n        ans = min(nums[0], nums[1] + nums[2] - nums[0] + 1)\n    res = nums[0] if nums[1] + nums[2] > nums[0] else nums[1] + nums[2] - 1\n    print(ans, res)", "T = int(input())\nfor _ in range(T):\n    (n, x, y) = map(int, input().split())\n    if x > y:\n        (x, y) = (y, x)\n    ans1 = 1 if x + y <= n else x + y - n + 1\n    if ans1 > n:\n        ans1 -= 1\n    ans2 = n if x + y > n else x + y - 1\n    print(ans1, ans2)", "t = int(input())\nfor i in range(t):\n    (n, x, y) = map(int, input().split())\n    if n == 1:\n        print(1, 1)\n    else:\n        if x + y < n + 1:\n            max_m = 1\n        else:\n            max_m = x + y - n + 1\n            if max_m > n:\n                max_m = n\n        if x + y < n + 1:\n            min_m = x + y - 1\n        else:\n            min_m = n\n        print(max_m, min_m)", "def sol():\n    T = int(input())\n    for i in range(T):\n        (n, x, y) = map(int, input().split(' '))\n        if x > y:\n            (x, y) = (y, x)\n        min_diff = min(n - (x + 1), y - 1)\n        min_diff = max(0, min_diff)\n        min_rank = y - min_diff\n        max_diff = min(n - x, y - 1)\n        max_diff = max(0, max_diff)\n        max_rank = x + max_diff\n        print(min_rank, max_rank)\nsol()", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    score = x + y\n    if x > y:\n        (x, y) = (y, x)\n    worst = min(score - 1, n)\n    best = max(1, min(n, score + 1 - n))\n    print(best, worst)", "t = int(input())\nfor i in range(t):\n    (n, x, y) = list(map(int, input().split()))\n    if x == n and y == n:\n        print(n, n)\n        continue\n    if x > y:\n        (x, y) = (y, x)\n    b = 0\n    w = 0\n    mx = n\n    if y == n:\n        mx -= 1\n    if mx >= x + y + 1:\n        b = 1\n    else:\n        b = x + y + 1 - mx\n        if b > x:\n            b -= 1\n    w = min(x + y - 1, n)\n    print(b, w)", "t = int(input())\nfor _ in range(t):\n    (n, x, y) = list(map(int, input().split()))\n    score = x + y\n    bestPlace = min(max(score - n, 0) + 1, n)\n    worstPlace = min(score - 1, n)\n    print(f'{bestPlace} {worstPlace}')", "from sys import exit\n\ndef ii():\n    return int(input())\n\ndef iis():\n    return map(int, input().split())\n\ndef liis():\n    return list(map(int, input().split()))\nt = ii()\nfor _ in range(t):\n    (n, x, y) = iis()\n    if x > y:\n        (x, y) = (y, x)\n    qmini = x + y + 1\n    qmaxi = x + y - 1\n    pos = n - y\n    (mini, maxi) = (1, n)\n    acima = 0\n    if x + y < n:\n        mini = 1\n    else:\n        mini = min(n, x + y + 1 - n)\n    if x + y > n:\n        maxi = n\n    else:\n        maxi = x + y - 1\n    print(mini, maxi)", "from sys import exit\n\ndef ii():\n    return int(input())\n\ndef iis():\n    return map(int, input().split())\n\ndef liis():\n    return list(map(int, input().split()))\nt = ii()\nfor _ in range(t):\n    (n, x, y) = iis()\n    if x > y:\n        (x, y) = (y, x)\n    (mini, maxi) = (1, n)\n    if x + y < n:\n        mini = 1\n    else:\n        mini = min(n, x + y + 1 - n)\n    if x + y > n:\n        maxi = n\n    else:\n        maxi = x + y - 1\n    print(mini, maxi)", "from sys import exit\n\ndef ii():\n    return int(input())\n\ndef iis():\n    return map(int, input().split())\n\ndef liis():\n    return list(map(int, input().split()))\nt = ii()\nfor _ in range(t):\n    (n, x, y) = iis()\n    if x > y:\n        (x, y) = (y, x)\n    if x + y < n:\n        mini = 1\n    else:\n        mini = min(n, x + y + 1 - n)\n    if x + y > n:\n        maxi = n\n    else:\n        maxi = x + y - 1\n    print(mini, maxi)", "t = int(input())\nfor _ in range(t):\n    (n, x, y) = map(int, input().split(' '))\n    if x + y > n:\n        print(min(x + y - n + 1, n), n)\n    else:\n        m = n - x - y\n        m += 1\n        print(1, n - m)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    if x > y:\n        (x, y) = (y, x)\n    a = min(n - x, y - 1)\n    b = min(n - y, x - 1)\n    max_rank = y + b\n    (x1, y1) = (0, 0)\n    if x != n or y != n:\n        if x == n:\n            x1 = x\n            y1 = y + 1\n        else:\n            x1 = x + 1\n            y1 = y\n        a1 = min(n - x1, y1 - 1)\n        b1 = min(n - y1, x1 - 1)\n        min_rank = y1 - a1\n    else:\n        min_rank = n\n    print(min_rank, max_rank)", "t = int(input())\nfor tt in range(t):\n    (n, x, y) = [int(x) for x in input().split(' ')]\n    print(min(max(1, x + y - n + 1), n), end=' ')\n    print(max(min(n, x + y - 1), 1))", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    if x + y == n + 1:\n        print(min(n, 2), n)\n    elif x + y > n + 1:\n        if x == n and y == n:\n            print(n, n)\n        else:\n            print(x + y + 1 - n, n)\n    else:\n        print(1, x + y - 1)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    t = max(1, min(n, x + y - n + 1))\n    u = min(n, x + y - 1)\n    print(t, u)", "t = int(input())\nfor T in range(t):\n    (n, x, y) = list(map(int, input().split()))\n    best = 0\n    worst = 0\n    worst = min(x + y - 1, n)\n    if n == x and x == y:\n        best = n\n    else:\n        best = n - min(2 * n - (x + y + 1), n - 1)\n    print(best, worst)", "import sys\ninput = iter(sys.stdin.read().splitlines()).__next__\n\ndef solve(N, x, y):\n    if N == 1:\n        return (1, 1)\n    score = x + y\n    best_rank = min(max(score + 1 - N, 1), N)\n    worst_rank = min(N, score - 1)\n    return (best_rank, worst_rank)\nTC = int(input())\nfor tc in range(TC):\n    (N, x, y) = map(int, input().split())\n    res = solve(N, x, y)\n    print('%d %d' % res)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    best_place = max(1, min(n, x + y - n + 1))\n    worst_place = min(n, x + y - 1)\n    print(best_place, worst_place)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, x, y) = map(int, input().split())\n    worst = min(n, max(1, x - 1 + y))\n    best = min(n, max(1, x + y - n + 1))\n    print(best, worst)\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "t = int(input())\ninputs = [input() for i in range(t)]\n\ndef solve(line):\n    (n, x, y) = map(int, line.split())\n    mx = max(min(n, x + y - 1), 1)\n    mn = min(max(1, n - (n - x + (n - y) - 1)), n)\n    print(str(mn) + ' ' + str(mx))\n[solve(line) for line in inputs]", "import sys\nt = int(sys.stdin.readline().strip())\nfor i in range(t):\n    (n, x, y) = map(int, sys.stdin.readline().strip().split())\n    score = x + y\n    sys.stdout.write(str(1 + max(min(score - n, n - 1), 0)) + ' ')\n    sys.stdout.write(str(min(score - 1, n)) + '\\n')", "t = int(input())\nfor i in range(t):\n    (n, x, y) = list(map(int, input().split()))\n    if x + y < n + 1:\n        minimum = 1\n    elif n + 1 <= x + y:\n        minimum = min(x + y - n + 1, n)\n    print(minimum, min(x + y - 1, n))", "def f():\n    (n, x, y) = [int(s) for s in input().split()]\n    bar = x + y\n    if bar >= n + 1:\n        bad = n\n    else:\n        bad = bar - 1\n    if bar <= n:\n        good = 1\n    elif bar == 2 * n:\n        good = n\n    else:\n        good = bar + 1 - n\n    print('{} {}'.format(good, bad))\nT = int(input())\nfor t in range(T):\n    f()", "def solve():\n    (n, a, b) = map(int, input().split())\n    best = min(max(a + b + 1 - n, 1), n)\n    worst = max(min(a + b - 1, n), 1)\n    print(best, worst)\nt = int(input())\nfor i in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    (n, x, y) = map(int, input().split())\n    worstOverall = min(n, x + y - 1)\n    lowerBound = 0\n    upperBound = n - 1\n    mid = (lowerBound + upperBound) // 2\n    while lowerBound != upperBound:\n        currSum = n * (n + 1) - x - y\n        currSum -= mid * (mid + 1)\n        if x <= mid:\n            currSum -= mid + 1\n            currSum += x\n        if y <= mid:\n            currSum -= mid + 1\n            currSum += y\n        currLeft = n - 1 - mid\n        if currSum / currLeft >= x + y + 1:\n            upperBound = mid\n        else:\n            lowerBound = mid + 1\n        mid = (lowerBound + upperBound) // 2\n    bestOverall = lowerBound + 1\n    print(bestOverall, worstOverall)", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    sc = a + b\n    if n >= sc - 1:\n        ma = sc - 1\n    else:\n        ma = n\n    if n >= sc:\n        mi = 1\n    else:\n        mi = min(sc + 1 - n, n)\n    print(mi, ma)", "def abs(n):\n    return -n if n < 0 else n\n\ndef best(n, x, y):\n    if y == n:\n        return min(x + 1, n)\n    return max(1, min(x, x + y + 1 - n))\n\ndef worst(n, x, y):\n    if x + y >= n + 1:\n        return n\n    return n - abs(x + y - n - 1)\nt = int(input())\nfor _ in range(t):\n    (n, x, y) = map(int, input().split())\n    (x, y) = (min(x, y), max(x, y))\n    (a1, a2) = (best(n, x, y), worst(n, x, y))\n    print(a1, a2)", "size = int(input())\nfor i in range(size):\n    (n, x, y) = map(int, input().split())\n    (x, y) = (min(x, y), max(x, y))\n    c2 = 0\n    if x - 1 > n - y:\n        c2 += n\n    else:\n        c2 += x - 1 + y\n    c1 = 0\n    if x == n and y == n:\n        c1 = n\n    elif x - 1 > n - y - 1:\n        c1 += n - (n - y - 1 + n - x - 1 + 1)\n    else:\n        c1 = 1\n    print(c1, c2)", "test = int(input())\nfor i in range(test):\n    l = list(map(int, input().split()))\n    (n, x, y) = (l[0], l[1], l[2])\n    part1 = min(n - x, y - 1)\n    part2 = min(n - y, x - 1)\n    w = part1 + part2 + min(y - 1 - part1, x - 1 - part2)\n    worst = w + 1\n    part1 = min(y - 1, n - x - 1)\n    part2 = min(x - 1, n - y - 1)\n    part1 = max(part1, 0)\n    part2 = max(part2, 0)\n    best = n - (part1 + part2 + min(n - x - part1, n - y - part2))\n    print(best, worst)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    maxim = min(x + y - 1, n)\n    m = min(x + y - n + 1, n)\n    minim = max(m, 1)\n    print(minim, maxim)", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        (N, X, Y) = [int(x) for x in input().split()]\n        ans1 = max(1, min(N, X + Y - N + 1))\n        ans2 = min(N, X + Y - 1)\n        print(ans1, ans2)\nmain()", "t = int(input())\nfor _ in range(t):\n    (n, x, y) = map(int, input().split())\n    if x > y:\n        (x, y) = (y, x)\n    ans1 = y - min(y - 1, max(0, n - x - 1))\n    if x + y <= n + 1:\n        ans2 = x + y - 1\n    else:\n        ans2 = n\n    print(ans1, ans2)", "t = int(input())\nfor i in range(t):\n    (n, x, y) = map(int, input().split())\n    print(max(1, min(n, x + y - n + 1)), min(n, x + y - 1))", "for _ in range(int(input())):\n    (n, x, y) = [int(i) for i in input().split()]\n    print(max(1, min(n, x + y - n + 1)), min(n, x + y - 1))", "q = int(input())\nfor i in range(q):\n    (n, x, y) = map(int, input().split())\n    s = x + y\n    bad = 0\n    if s - 1 > n:\n        mx = n\n    else:\n        mx = s - 1\n    if x < n and y < n:\n        bad = 1\n    a = n - x - 1\n    if a > 0:\n        bad = bad + a\n    a = n - y - 1\n    if a > 0:\n        bad = bad + a\n    if bad > n - 1:\n        bad = n - 1\n    print(n - bad, mx)", "c = int(input())\nfor i in range(0, c):\n    (n, x, y) = map(int, input().split())\n    mx = n\n    mn = 1\n    if mx == x:\n        mx -= 1\n    if mn == x:\n        mn += 1\n    t1 = 0\n    t2 = 0\n    z = x + y\n    if mx < z:\n        if z - mx > n:\n            t1 = 0\n        else:\n            t1 = n - (z - mx)\n            tmp = z - mx + 1\n            if y >= tmp and y <= n:\n                t1 -= 1\n    else:\n        t1 = n - 1\n    if mn >= z:\n        t2 = 0\n    else:\n        tmp = z - mn\n        if tmp > n:\n            tmp = n\n        if y >= 1 and y <= tmp:\n            t2 = tmp - 1\n        else:\n            t2 = tmp\n    print(str(n - t1) + ' ' + str(t2 + 1))", "t = int(input())\nfor i in range(t):\n    (n, x, y) = map(int, input().split())\n    print(min(max(1, x - n + y + 1), x + y - 1, n), min(x + y - 1, n))", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    x_y = x + y\n    a = 1 - x_y % 2\n    print(max(1, min(n - (n * 2 - (x_y + 1)), n)), min((x_y - 1 - x_y // 2) * 2 + a, n))", "casos = int(input())\nrespuestas = []\nfor i in range(casos):\n    lista = list(str(input()).split())\n    for j in range(len(lista)):\n        lista[j] = int(lista[j])\n    desfavorable = lista[1] + (lista[2] - 1)\n    ronda1 = lista[1]\n    ronda2 = lista[2]\n    puntaje = ronda1 + ronda2\n    participantes = lista[0]\n    favorable = puntaje - participantes + 1\n    if favorable <= 0:\n        favorable = 1\n    elif favorable >= participantes:\n        favorable = participantes\n    if desfavorable >= participantes:\n        desfavorable = participantes\n    if participantes == 1:\n        resultado = str(str(1) + ' ' + str(1))\n        respuestas.append(resultado)\n    else:\n        resultado = str(str(favorable) + ' ' + str(desfavorable))\n        respuestas.append(resultado)\nfor j in respuestas:\n    print(j)", "for _ in range(int(input())):\n    (n, a, b) = [int(s) for s in input().split()]\n    print(min(max(1, a + b - n + 1), n), min(a + b - 1, n))", "p = int(input())\nbest = []\nworst = []\nfor i in range(0, p):\n    (n, r1, r2) = map(int, input().split())\n    m = r1 + r2\n    if m < n + 1:\n        best.append(1)\n        worst.append(m - 1)\n    elif m == 2 * n:\n        best.append(n)\n        worst.append(n)\n    else:\n        best.append(m - n + 1)\n        worst.append(n)\nfor i in range(0, p):\n    print(best[i], worst[i])", "t = int(input())\nfor j in range(t):\n    (n, x, y) = [int(i) for i in input().split()]\n    Sum = x + y\n    if Sum <= n:\n        first = 1\n        last = Sum - 1\n    else:\n        first = Sum - n + 1\n        if Sum == 2 * n:\n            first = n\n        last = n\n    print(first, last)", "def main():\n    t = int(input())\n    for _ in range(t):\n        (n, x, y) = map(int, input().split())\n        (a, b) = (1, n)\n        if x + y < n + 1:\n            b = x + y - 1\n        else:\n            a = min(n, x + y + 1 - n)\n        print(a, b)\nmain()", "t = int(input())\nfor i in range(t):\n    b = list(map(int, input().split()))\n    n = b[0]\n    k = sum(b[1:3])\n    if k >= n + 1:\n        p = n\n        q = k - n + 1\n        if q > n:\n            q = n\n    else:\n        p = k - 1\n        q = 1\n    print(q, p)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().strip().split())\n    print(max(1, min(n, x + y - n + 1)), min(n, x + y - 1))", "t = int(input())\nfor _ in range(t):\n    (n, x, y) = [int(x) for x in input().split()]\n    print(str(max(1, min(n, x + y - n + 1))) + ' ' + str(min(n, x + y - 1)))", "def solve():\n    (n, a, b) = map(int, input().split())\n    worst = a + b - 1\n    if a + b >= n + 1:\n        worst = n\n    best = min(n, a + b - n + 1)\n    if a + b <= n:\n        best = 1\n    print(best, worst)\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nfor i in range(t):\n    ans1 = 0\n    ans2 = 0\n    (n, x, y) = map(int, input().split())\n    ans2 = min(n, x + y - 1)\n    x = n - x + 1\n    y = n - y + 1\n    ans1 = min(n, x + y - 2)\n    ans1 = min(n, n - ans1 + 1)\n    print(ans1, ans2)", "t = int(input())\nfor _ in range(t):\n    (n, x, y) = list(map(int, input().split()))\n    points = x + y\n    best = max(1, min(points - n + 1, n))\n    worst = min(n, x + y - 1)\n    print('{} {}'.format(best, worst))", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    min_ans = max(min(n, x + y - n + 1), 1)\n    max_ans = min(x + y - 1, n)\n    print(min_ans, max_ans)", "t = int(input())\nfor _ in range(t):\n    (n, x, y) = list(map(int, input().split()))\n    a = 1\n    b = n\n    if x > y:\n        (x, y) = (y, x)\n    (l, r) = (1, n)\n    while l < r:\n        m = (r + l) // 2\n        if n - x > y - m:\n            r = m\n        else:\n            l = m + 1\n    a = (l + r) // 2\n    (l, r) = (1, n)\n    while l < r:\n        m = (l + r + 1) // 2\n        if n - (n - x + 1) > n - y + 1 - m:\n            r = m - 1\n        else:\n            l = m\n    b = n + 1 - (l + r) // 2\n    print(a, b)", "import sys\nimport math\nfrom bisect import bisect_right as br\nfrom bisect import bisect_left as bl\nsys.setrecursionlimit(2147483647)\nfrom heapq import heappush, heappop, heappushpop\nfrom collections import defaultdict\nfrom itertools import accumulate\nfrom collections import Counter\nfrom collections import deque\nfrom operator import itemgetter\nfrom itertools import permutations\nmod = 10 ** 9 + 7\ninf = float('inf')\n\ndef I():\n    return int(sys.stdin.readline())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\nt = I()\nfor _ in range(t):\n    (n, x, y) = LI()\n    worse = min(n, x + y - 1)\n    good = max(1, min(x + y - n + 1, n))\n    print(good, worse)", "from copy import copy\nfrom math import *\n\ndef arr_float_inp():\n    return [float(s) for s in input().split()]\n\ndef arr_int_inp():\n    return [int(s) for s in input().split()]\n\ndef int_inp():\n    return int(input())\n\ndef float_inp():\n    return float(input())\n\ndef comp(a):\n    return a[0]\n\ndef gcd(a, b):\n    if b != 0:\n        return gcd(b, a % b)\n    else:\n        return a\nfor _ in range(int_inp()):\n    (n, x, y) = arr_int_inp()\n    worst = min(x + y - 1, n)\n    best = min(max(x + y - n + 1, 1), n)\n    print(best, worst, sep=' ')", "from sys import stdin, stdout\nimport math, sys\nfrom itertools import permutations, combinations\nfrom collections import defaultdict, deque, OrderedDict\nimport bisect as bi\nimport heapq\n\ndef I():\n    return int(input())\n\ndef In():\n    return map(int, input().split())\n\ndef check(l):\n    d = 0\n    for i in range(3):\n        if l[i] >= 1:\n            d += 1\n    if d >= 1:\n        return 1\n    else:\n        return 0\n\ndef main():\n    try:\n        (n, x, y) = In()\n        print(max(1, min(n, x + y - n + 1)), min(n, x + y - 1))\n    except:\n        pass\nM = 998244353\nP = 1000000007\nfor _ in range(I()):\n    main()"]