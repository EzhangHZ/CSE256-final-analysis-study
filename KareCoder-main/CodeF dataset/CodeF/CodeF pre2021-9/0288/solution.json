["list_ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    list1.sort()\n    list2 = []\n    if n % 2 == 0:\n        for i in range(n // 2):\n            list2.append(list1[n // 2 - i - 1])\n            list2.append(list1[n // 2 + i])\n    else:\n        list2.append(list1[(n - 1) // 2])\n        for i in range(1, (n - 1) // 2 + 1):\n            list2.append(list1[(n - 1) // 2 - i])\n            list2.append(list1[(n - 1) // 2 + i])\n    list_ans.append(' '.join(map(str, list2)))\nfor item in list_ans:\n    print(item)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    w = sorted(map(int, input().split()))\n    i = j = n // 2\n    d = [w[i]]\n    while True:\n        if i > 0:\n            i -= 1\n            d.append(w[i])\n        if j < n - 1:\n            j += 1\n            d.append(w[j])\n        if i == 0 and j == n - 1:\n            break\n    print(' '.join(map(str, d)))", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    al = list(map(int, input().split()))\n    al.sort()\n    ans = []\n    ans.append(al[n // 2])\n    ans.append(al[n // 2 - 1])\n    i = n // 2 - 2\n    j = n // 2 + 1\n    ok = True\n    while i >= 0 or j < n:\n        if j < n:\n            ans.append(al[j])\n            j += 1\n        if i >= 0:\n            ans.append(al[i])\n            i -= 1\n    print(' '.join((str(x) for x in ans)))\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "for i in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split(' ')]\n    arr.sort()\n    ans = [0 for i in range(n)]\n    if n % 2 == 0:\n        k = n - 1\n        for i in range(n // 2):\n            ans[k] = str(arr[n - i - 1])\n            k -= 1\n            ans[k] = str(arr[i])\n            k -= 1\n    else:\n        k = n - 1\n        ans[0] = str(arr[n // 2])\n        for i in range(n // 2):\n            ans[k] = str(arr[n - i - 1])\n            k -= 1\n            ans[k] = str(arr[i])\n            k -= 1\n    print(' '.join(ans))", "def isGood(lista):\n    for i in range(len(lista) - 1):\n        if abs(lista[i] - lista[i + 1]) > abs(lista[i + 1] - lista[i + 2]):\n            return False\n    return True\n\ndef selecionaOutliers(lista):\n    ordenada = []\n    lista.sort()\n    n = len(lista)\n    for i in range(n // 2):\n        ordenada.append(lista[-i - 1])\n        ordenada.append(lista[i])\n    if n % 2 == 1:\n        ordenada.append(lista[n // 2])\n    return ordenada\nn = int(input())\nfor i in range(n):\n    x = int(input())\n    lista = list(map(int, input().split(' ')))\n    lista = selecionaOutliers(lista)\n    lista.reverse()\n    print(' '.join((str(x) for x in lista)))", "t = int(input())\np = []\nfor i in range(t):\n    r = []\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if len(a) % 2 == 0:\n        b = a[:len(a) // 2]\n        c = a[len(a) // 2:]\n    else:\n        b = a[:len(a) // 2 + 1]\n        c = a[len(a) // 2 + 1:]\n    b.reverse()\n    if len(b) == len(c):\n        for j in range(len(b)):\n            r.append(b[j])\n            r.append(c[j])\n    else:\n        for j in range(len(c)):\n            r.append(b[j])\n            r.append(c[j])\n        r.append(b[-1])\n    listToStr = ' '.join([str(elem) for elem in r])\n    p.append(listToStr)\nfor i in range(len(p)):\n    print(p[i])", "import math\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = []\n    b_i = n - 1\n    s_i = 0\n    for i in range(n):\n        if i % 2 == 0:\n            ans.append(a[b_i])\n            b_i -= 1\n        else:\n            ans.append(a[s_i])\n            s_i += 1\n    ans.reverse()\n    return ' '.join(map(str, ans))\nt = int(input())\nwhile t > 0:\n    t -= 1\n    print(solve())", "def cast(cre, typ):\n    return type(typ)(map(cre, typ))\n\ndef solution():\n    for t in range(int(input())):\n        n = int(input())\n        l = sorted(cast(int, input().split()))\n        res = list()\n        lt = len(l)\n        res.append(l[lt // 2])\n        for i in range(lt - 1):\n            a = i // 2 + 1\n            if i % 2 == 0:\n                a *= -1\n            res.append(l[lt // 2 + a])\n        print(' '.join(cast(str, res)))\nsolution()", "import heapq\ntest_cases = int(input())\n\ndef handle():\n    n = int(input())\n    values = sorted([int(s) for s in input().split(' ')])\n    if n % 2 == 0:\n        right = len(values) // 2\n        left = right - 1\n    else:\n        right = left = len(values) // 2\n    result = []\n    while right < len(values):\n        if not result:\n            if n % 2 == 0:\n                result.append(values[left])\n                result.append(values[right])\n            else:\n                result.append(values[right])\n        else:\n            right_first = abs(result[-1] - values[right])\n            left_first = abs(result[-1] - values[left])\n            if right_first > left_first:\n                result.append(values[right])\n                result.append(values[left])\n            else:\n                result.append(values[left])\n                result.append(values[right])\n        left -= 1\n        right += 1\n    print(' '.join((str(i) for i in result)))\nfor _ in range(test_cases):\n    handle()", "def f(a):\n    a = sorted(a)\n    size = len(a)\n    if size % 2 == 0:\n        right_ind = size // 2\n        left_ind = right_ind - 1\n        b = [a[left_ind], a[right_ind]]\n        for i in range(left_ind):\n            b.append(a[left_ind - i - 1])\n            b.append(a[right_ind + i + 1])\n    else:\n        ind = size // 2\n        b = [a[ind]]\n        for i in range(ind):\n            b.append(a[ind + i + 1])\n            b.append(a[ind - i - 1])\n    return ' '.join(map(str, b))\nm = int(input())\nres = []\nfor _ in range(m):\n    n = int(input())\n    a = list(map(int, input().split()))\n    res.append(f(a))\nfor s in res:\n    print(s)", "n = int(input())\ninputs = []\nfor x in range(n):\n    n = int(input())\n    inputs.append([int(x) for x in input().split()])\n\ndef zigzag(l, n):\n    x = []\n    c = (0, 1, 0) if n % 2 == 1 else (-1, 0, 1)\n    leftIdx = n // 2 + c[0]\n    rightIdx = n // 2 + c[1]\n    for i in range(n):\n        if i % 2 == c[2]:\n            left = l[leftIdx]\n            x.append(left)\n            leftIdx -= 1\n        else:\n            right = l[rightIdx]\n            x.append(right)\n            rightIdx += 1\n    return x\nfor x in inputs:\n    r = zigzag(sorted(x), len(x))\n    print(' '.join((str(x) for x in r)))", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    arr = sorted(list(map(int, sys.stdin.readline().split())))\n    answer = []\n    mid = len(arr) // 2\n    if len(arr) % 2 == 0:\n        k = mid - 1\n        a = mid\n        answer.append(arr[k])\n        answer.append(arr[a])\n        for i in range(0, mid - 1):\n            k -= 1\n            a += 1\n            answer.append(arr[k])\n            answer.append(arr[a])\n    else:\n        k = mid - 1\n        a = mid\n        answer.append(arr[a])\n        answer.append(arr[k])\n        for i in range(0, mid - 1):\n            k -= 1\n            a += 1\n            answer.append(arr[a])\n            answer.append(arr[k])\n        answer.append(arr[len(arr) - 1])\n    print(' '.join(map(str, answer)))", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    test = int(input())\n    for _ in range(test):\n        n = int(input())\n        ara = [int(num) for num in input().split()]\n        ara.sort()\n        ans = []\n        left = 0\n        right = n - 1\n        while left < right:\n            ans.append(ara[left])\n            ans.append(ara[right])\n            left += 1\n            right -= 1\n        if left == right:\n            ans.append(ara[left])\n        ans.reverse()\n        ans = ' '.join(map(str, ans))\n        print(ans)\nmain()", "import sys, math\ntc = int(sys.stdin.readline())\nfor _ in range(tc):\n    n = int(sys.stdin.readline())\n    arr = list(map(int, sys.stdin.readline().split()))\n    arr.sort()\n    i = 0\n    j = n - 1\n    temp = []\n    while i < j:\n        temp.append(arr[j])\n        temp.append(arr[i])\n        j -= 1\n        i += 1\n    if i == j:\n        temp.append(arr[j])\n    print(' '.join(map(str, temp[::-1])))", "import sys\n\ndef answer(n, a):\n    lst = []\n    a.sort()\n    for i in range(n // 2):\n        lst.append(a[i])\n        lst.append(a[n - i - 1])\n    if n % 2 == 1:\n        lst.append(a[n // 2])\n    lst.reverse()\n    return lst\n\ndef main():\n    t = int(input())\n    while t:\n        n = int(input())\n        a = [int(i) for i in sys.stdin.readline().split()]\n        print(' '.join(map(str, answer(n, a))))\n        t -= 1\n    return\nmain()", "def sorted(L):\n    n = len(L)\n    L.sort()\n    init = [L[0]]\n    i = 1\n    while i < n:\n        if i % 2 == 0:\n            init += [L[i // 2]]\n            i += 1\n        else:\n            init += [L[n - 1 - i // 2]]\n            i += 1\n    else:\n        init.reverse()\n        return init\nn = int(input())\nfor i in range(n):\n    n1 = int(input())\n    arrray = list(map(int, input().rstrip().split()))\n    array = sorted(arrray)\n    print(' '.join(map(str, array)))", "for t in range(int(input())):\n    n = int(input())\n    L = [int(X) for X in input().split()]\n    L.sort()\n    A = []\n    if n % 2 == 0:\n        for i in range(n // 2):\n            A.append(L[n // 2 - 1 - i])\n            A.append(L[n // 2 + i])\n    else:\n        A.append(L[n // 2])\n        for i in range(1, n // 2 + 1):\n            A.append(L[n // 2 - i])\n            A.append(L[n // 2 + i])\n    print(' '.join(map(str, A)))", "ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    u = list(map(int, input().split()))\n    u.sort()\n    a = []\n    if n % 2 == 1:\n        a.append(u[n // 2])\n    for i in range(n // 2 - 1, -1, -1):\n        a.append(u[i])\n        a.append(u[-i - 1])\n    ans.append(' '.join(map(str, a)))\nprint('\\n'.join(ans))", "t = int(input())\nresult_total = []\nwhile t:\n    n = int(input())\n    array1 = list(map(int, input().split()))\n    array = sorted(array1)\n    length = len(array)\n    if not length % 2:\n        result = []\n        start_point = int(length / 2 - 1)\n        end_point = int(length / 2)\n        result.append(array[start_point])\n        for k in range(end_point + 1):\n            if k and k != end_point:\n                result.append(array[start_point + k])\n                result.append(array[start_point - k])\n            elif k == end_point:\n                result.append(array[start_point + k])\n    else:\n        result = []\n        start_point = int(length // 2)\n        result.append(array[start_point])\n        for k in range(start_point + 1):\n            if k:\n                result.append(array[start_point + k])\n                result.append(array[start_point - k])\n    result_total.append(result)\n    t -= 1\nfor mas in result_total:\n    print(str(mas).replace('[', '').replace(']', '').replace(',', ''))", "outputs = []\nfor __ in range(int(input())):\n    N = int(input())\n    if N % 2 == 0:\n        loop = N // 2\n    else:\n        loop = (N + 1) // 2\n    N -= 1\n    A = [int(num) for num in input().split()]\n    if N + 1 < 2:\n        outputs.append(A[0])\n    else:\n        output = []\n        A.sort()\n        for i in range(loop):\n            if N - i > i:\n                output.append(str(A[i]))\n                output.append(str(A[N - i]))\n            else:\n                output.append(str(A[i]))\n        output.reverse()\n        outputs.append(' '.join(output))\nfor j in outputs:\n    print(j)", "for _ in ' ' * int(input()):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    a = []\n    b = l[:n // 2]\n    c = l[n // 2:]\n    for i in range(n // 2):\n        a.append(c[i])\n        a.append(b[n // 2 - i - 1])\n    if n % 2 != 0:\n        a.append(c[-1])\n    print(' '.join((str(i) for i in a)))", "for i in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    ans1 = []\n    for i in range(n // 2):\n        ans1.append(str(A[i]))\n        ans1.append(str(A[n - 1 - i]))\n    if n % 2 != 0:\n        ans1.append(str(A[n // 2]))\n    s = ' '.join(ans1[::-1])\n    print(s)", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        array = list(map(int, input().split()))\n        array.sort()\n        low = 0\n        high = n - 1\n        result = list()\n        while low < high:\n            result.append(array[low])\n            result.append(array[high])\n            low += 1\n            high -= 1\n        if low == high:\n            result.append(array[low])\n        result.reverse()\n        print(*result)\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    l = n // 2 - 1\n    r = n // 2\n    b = True\n    ans = ''\n    for j in range(n):\n        if b:\n            ans += str(a[r]) + ' '\n            r += 1\n        else:\n            ans += str(a[l]) + ' '\n            l -= 1\n        b = not b\n    print(ans)", "import math\nfrom sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a.sort()\n    l = [0] * n\n    i = n - 1\n    j = n - 1\n    while i >= n // 2:\n        l[j] = a[i]\n        l[j - 1] = a[n - 1 - i]\n        i = i - 1\n        j = j - 2\n    if n & 1:\n        l[-1] = a[-1]\n    print(*l)", "def fun(ls, n):\n    st = sorted(ls)\n    index = 0\n    ans = []\n    left = 0\n    right = len(st) - 1\n    while left <= right:\n        if left != right:\n            ans.append(st[right])\n            ans.append(st[left])\n            left += 1\n            right -= 1\n        else:\n            ans.append(st[right])\n            left += 1\n            right -= 1\n    print(*ans[::-1])\nT = int(input())\nfor i in range(T):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    fun(ls, n)", "def sort_adjacent_differences(v):\n    sorted_v = sorted(v)\n    result = [0] * len(v)\n    i = 0\n    j = pos = len(v) - 1\n    while i <= j:\n        if i == j:\n            result[pos] = sorted_v[i]\n            break\n        larger = sorted_v[j]\n        smaller = sorted_v[i]\n        result[pos - 1] = smaller\n        result[pos] = larger\n        pos -= 2\n        i += 1\n        j -= 1\n    return result\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        input()\n        arr = [int(k) for k in input().split(' ')]\n        for e in sort_adjacent_differences(arr):\n            print(e, end=' ', sep='\\n')\n        print()\nmain()", "def printList(l):\n    l_str = map(str, l)\n    print(' '.join(l_str))\nt = int(input().strip())\nfor i in range(t):\n    n = int(input().strip())\n    nums = list(map(int, input().strip().split()))\n    nums.sort()\n    (s, acc, flag) = (n - 1 >> 1, 0, 1)\n    ans = []\n    while len(ans) < n:\n        ans.append(nums[s])\n        acc += 1\n        s += acc * flag\n        flag *= -1\n    printList(ans)", "t = int(input())\nans = []\nfor _ in range(t):\n    n = int(input())\n    mas = list(map(int, input().split()))\n    mas.sort()\n    new_mas = []\n    for i in range((n + 1) // 2):\n        if i == n - 1 - i:\n            new_mas.append(mas[i])\n        else:\n            new_mas += [mas[n - 1 - i], mas[i]]\n    new_mas = new_mas[::-1]\n    ans.append(new_mas)\nfor i in ans:\n    print(*i)", "def solve():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        a = sorted(a)\n        a_len = len(a)\n        res = []\n        (left_ptr, right_ptr) = (0, a_len - 1)\n        if a_len % 2 == 1:\n            left_ptr = right_ptr = a_len // 2\n            res.append(a[left_ptr])\n            left_ptr -= 1\n            right_ptr += 1\n        else:\n            left_ptr = a_len // 2 - 1\n            right_ptr = a_len // 2\n        while left_ptr >= 0 and right_ptr < a_len:\n            if a_len % 2 == 1:\n                res.append(a[right_ptr])\n                res.append(a[left_ptr])\n            else:\n                res.append(a[left_ptr])\n                res.append(a[right_ptr])\n            left_ptr -= 1\n            right_ptr += 1\n        print(*res)\nsolve()", "import sys\n\ndef solve(arr):\n    sol = []\n    if len(arr) % 2 == 1:\n        i = len(arr) // 2\n        j = len(arr) // 2\n    else:\n        i = len(arr) // 2 - 1\n        j = len(arr) // 2\n    while i != -1 and j != len(arr):\n        if i == j:\n            sol.append(arr[i])\n        else:\n            sol.append(arr[i])\n            sol.append(arr[j])\n        i -= 1\n        j += 1\n    return sol\n\ndef main():\n    q = []\n    for line in sys.stdin.readlines():\n        q.append(line)\n    for i in range(len(q)):\n        q[i] = q[i].rstrip().split(' ')\n        q[i] = [int(x) for x in q[i]]\n    for i in range(2, len(q), 2):\n        q[i].sort()\n        sol = solve(q[i])\n        print(' '.join(map(str, sol)))\nmain()", "def main():\n    for _ in range(int(input())):\n        (i, j, r) = (0, int(input()) - 1, [])\n        l = sorted(map(int, input().split()))\n        while i < j:\n            r.append(l[i])\n            r.append(l[j])\n            i += 1\n            j -= 1\n        if i == j:\n            r.append(l[i])\n        print(' '.join(map(str, r[::-1])))\nmain()", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    s = sorted(map(int, input().split()))\n    j = (n - 1) // 2\n    ans = [s[j]]\n    for i in range(1, j + 1):\n        (x, y) = (s[j - i], s[j + i])\n        ans.append(y)\n        ans.append(x)\n    if n % 2 == 0:\n        ans.append(s[-1])\n    print(' '.join(map(str, ans)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    z = list(map(int, input().split()))\n    z = sorted(z)[::-1]\n    ans = []\n    p = z[:(n + 1) // 2]\n    q = z[(n + 1) // 2:][::-1]\n    j = 0\n    k = 0\n    pn = len(p)\n    qn = len(q)\n    while j < pn and k < qn:\n        ans.append(p[j])\n        ans.append(q[k])\n        j += 1\n        k += 1\n    while j < pn:\n        ans.append(p[j])\n        j += 1\n    while k < qn:\n        ans.append(q[k])\n        k += 1\n    print(*ans[::-1])", "for t in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    ans = []\n    for i in range(n // 2):\n        ans.append(a[i])\n        ans.append(a[n - i - 1])\n    if n % 2 != 0:\n        ans.append(a[n // 2])\n    ans.reverse()\n    print(*ans)", "for t in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    ans = []\n    for i in range(n // 2):\n        ans.append(a[i])\n        ans.append(a[n - i - 1])\n    if n % 2 != 0:\n        ans.append(a[n // 2])\n    ans.reverse()\n    print(*ans)", "import sys\nlines = sys.stdin.readlines()\nT = int(lines[0].strip())\nfor t in range(T):\n    n = int(lines[2 * t + 1].strip())\n    nums = list(map(int, lines[2 * t + 2].strip().split(' ')))\n    nums.sort()\n    res = [0 for _ in range(n)]\n    res[0] = nums[0]\n    for i in range(n):\n        if i % 2 == 0:\n            res[i] = nums[i // 2]\n        else:\n            res[i] = nums[-(i + 1) // 2]\n    print(' '.join(map(str, res[::-1])))", "import sys\n\ndef process(A):\n    sA = sorted(A)\n    m = len(A) // 2\n    s = str(sA[m])\n    for i in range(1, len(sA) // 2):\n        s += ' ' + str(sA[m - i])\n        s += ' ' + str(sA[m + i])\n    s += ' ' + str(sA[m - len(sA) // 2])\n    if len(A) % 2 == 1:\n        s += ' ' + str(sA[m + len(sA) // 2])\n    print(s)\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef f(a, n):\n    return True\n\ndef is_permutation(arr):\n    for e in range(1, len(arr) + 1):\n        if e not in arr:\n            return False\n    return True\nt = inp()\nfor i in range(t):\n    n = inp()\n    A = inlt()\n    process(A)", "from sys import stdin\nt = int(stdin.readline())\nfor _ in range(t):\n    n = int(stdin.readline())\n    arr = list(map(int, stdin.readline().split()))\n    arr.sort()\n    ans = []\n    for i in range(n):\n        if i % 2 == 0:\n            ans.append(arr[i // 2])\n        else:\n            ans.append(arr[n - 1 - i // 2])\n    print(' '.join(map(str, reversed(ans))))", "def main():\n    for _ in range(int(input())):\n        (n, l) = (int(input()), sorted(map(int, input().split())))\n        r = [0] * n\n        m = n // 2\n        r[::2] = l[m:]\n        r[1::2] = l[m - n - 1::-1]\n        print(' '.join(map(str, r)))\nmain()", "T = int(input())\nk = [0] * T\nls = [0] * T\nfor t in range(T):\n    k[t] = int(input())\n    ls[t] = [int(i) for i in input().split(' ')]\n\ndef rank(l):\n    l.sort()\n    l1 = []\n    for i in range(len(l)):\n        if i % 2 == 0:\n            l1.append(str(l[int(i / 2)]))\n        else:\n            l1.append(str(l[len(l) - int((i + 1) / 2)]))\n    l1.reverse()\n    return l1\nfor t in range(T):\n    print(' '.join(rank(ls[t])))", "def some():\n    for _ in range(int(input())):\n        n = int(input())\n        ara = list(map(int, input().split()))\n        ara.sort()\n        left = 0\n        right = n - 1\n        ans = []\n        while left < right:\n            ans.append(ara[left])\n            ans.append(ara[right])\n            left += 1\n            right -= 1\n        if left == right:\n            ans.append(ara[left])\n        ans.reverse()\n        ans = ' '.join(map(str, ans))\n        print(ans)\nsome()", "for _ in range(int(input())):\n    n = int(input())\n    s = sorted(map(int, input().split()))\n    j = (n - 1) // 2\n    ans = [s[j]]\n    for i in range(1, j + 1):\n        (x, y) = (s[j - i], s[j + i])\n        ans.append(y)\n        ans.append(x)\n    if n % 2 == 0:\n        ans.append(s[-1])\n    print(' '.join(map(str, ans)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ans = []\n    l = 0\n    r = n - 1\n    while l < r:\n        ans.append(arr[r])\n        ans.append(arr[l])\n        l += 1\n        r -= 1\n    if n % 2 != 0:\n        ans.append(arr[n // 2])\n    ans.reverse()\n    print(*ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    for i in range(n // 2):\n        arr.append(arr[i])\n        arr.append(arr[n - 1 - i])\n    if n % 2:\n        arr.append(arr[n // 2])\n    arr = arr[n:]\n    print(*arr[::-1])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    (low, high) = (0, n - 1)\n    const = []\n    while low < high:\n        const.append(a[high])\n        const.append(a[low])\n        high -= 1\n        low += 1\n    if low == high:\n        const.append(a[low])\n    const = const[::-1]\n    print(*const)", "from math import ceil, gcd\nfrom math import factorial as fact, comb as ncr\nfrom math import sqrt\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom array import array\nfrom collections import Counter as ctr\nfrom collections import deque as dq\n\ndef li():\n    return list(map(int, input().split()))\n\ndef arr(a):\n    return array('i', a)\n\ndef solve():\n    for _ in range(int(input())):\n        n = int(input())\n        a = li()\n        a.sort()\n        j = n // 2\n        i = j - 1\n        while i >= 0 and j < n:\n            print(a[j], end=' ')\n            j += 1\n            print(a[i], end=' ')\n            i -= 1\n        if n % 2:\n            print(a[-1])\n        else:\n            print()\nsolve()", "for _ in range(int(input())):\n    input()\n    a = sorted(map(int, input().split()))\n    left = a[:len(a) // 2]\n    right = a[len(a) // 2 + len(a) % 2:]\n    if len(a) % 2 == 1:\n        print(a[len(a) // 2], end=' ')\n    for i in range(len(a) // 2):\n        print(left[-i - 1], right[i], end=' ')\n    print()", "from collections import Counter, defaultdict\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = [0] * n\n    l = 0\n    r = n - 1\n    for i in range(n - 1, -1, -1):\n        if i % 2 == 0:\n            ans[i] = a[l]\n            l += 1\n        else:\n            ans[i] = a[r]\n            r -= 1\n    print(*ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ans = []\n    idx = []\n    c = n // 2\n    for i in range(n):\n        if i % 2 == 0:\n            c += i\n        else:\n            c -= i\n        idx.append(c)\n        ans.append(arr[c])\n    print(*ans)", "def helper(arr, n):\n    arr.sort()\n    if n % 2 == 0:\n        midIdx = n // 2 - 1\n    else:\n        midIdx = n // 2\n    ans = []\n    for i in range(n // 2 + 1):\n        idx = midIdx + i\n        if idx < n and idx >= 0:\n            ans.append(arr[idx])\n        newIdx = midIdx - i\n        if newIdx != idx and newIdx < n and (newIdx >= 0):\n            ans.append(arr[newIdx])\n    return ans\ntest = int(input())\nfor i in range(test):\n    n = int(input())\n    inputs = list(map(int, input().split()))\n    ans = helper(inputs, n)\n    for i in ans:\n        print(i, end=' ')\n    print('')", "from collections import deque\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    a.sort()\n    l = deque([])\n    if n % 2 != 0:\n        print(a[n // 2], end=' ')\n    for i in range(n // 2):\n        l.appendleft(a[i])\n        l.appendleft(a[n - 1 - i])\n    print(*l)", "def adjacentDiff(A):\n    A.sort()\n    result = [0] * len(A)\n    n = len(A)\n    i = n // 2\n    k = 0\n    if n % 2 == 0:\n        i -= 1\n    else:\n        result[len(result) - 1] = A[0]\n    j = i + 1\n    while j - i < n:\n        result[k] = A[i]\n        result[k + 1] = A[j]\n        i -= 1\n        j += 1\n        k += 2\n    return result\nnumber_of_arrays = input()\narray_inputs = list()\nfor i in range(int(number_of_arrays)):\n    arr_size = input()\n    raw_array = input()\n    array = list(raw_array.split())\n    array = [int(x) for x in array]\n    array_inputs.append(array)\nfor i in range(0, int(number_of_arrays)):\n    array_inputs[i] = adjacentDiff(array_inputs[i])\nfor i in range(0, int(number_of_arrays)):\n    print(*array_inputs[i])", "import math\n\ndef ord_binaria(vet):\n    indx = math.floor((len(vet) - 1) / 2)\n    result = [0] * len(vet)\n    result[0] = vet[indx]\n    for i in range(1, len(vet)):\n        if i % 2 != 0:\n            indx += i\n        else:\n            indx -= i\n        result[i] = vet[indx]\n    return result\n\ndef printa(v):\n    for i in range(len(v)):\n        if i == len(v) - 1:\n            print(v[i])\n        else:\n            print(v[i], end=' ')\n\ndef program():\n    t = int(input())\n    for _ in range(t):\n        input()\n        v = [int(i) for i in input().split()]\n        v.sort()\n        printa(ord_binaria(v))\nprogram()", "def main():\n    num_testes = int(input())\n    respostas = []\n    for i in range(num_testes):\n        n = int(input())\n        lista = input().split()\n        lista = [int(x) for x in lista]\n        resposta = []\n        lista.sort()\n        l = int((n - 1) / 2)\n        r = int((n + 1) / 2)\n        while l >= 0 or r < n:\n            if l >= 0:\n                resposta.append(lista[l])\n                l -= 1\n            if r < n:\n                resposta.append(lista[r])\n                r += 1\n        respostas.append(resposta)\n    for i in range(num_testes):\n        for j in range(len(respostas[i]) - 1):\n            print(respostas[i][j], end=' ')\n        print(respostas[i][-1])\nmain()", "def main():\n    num_testes = int(input())\n    respostas = []\n    for i in range(num_testes):\n        n = int(input())\n        lista = input().split()\n        lista = [int(x) for x in lista]\n        resposta = []\n        lista.sort()\n        l = int((n - 1) / 2)\n        r = int((n + 1) / 2)\n        while l >= 0 or r < n:\n            if l >= 0:\n                resposta.append(lista[l])\n                l -= 1\n            if r < n:\n                resposta.append(lista[r])\n                r += 1\n        respostas.append(resposta)\n    for i in range(num_testes):\n        for j in range(len(respostas[i]) - 1):\n            print(respostas[i][j], end=' ')\n        print(respostas[i][-1])\nmain()", "def ordena(lista, n):\n    l = 0\n    r = n - 1\n    lista = sorted(lista)\n    a = [0] * n\n    for i in range(n - 1, -1, -1):\n        if i % 2:\n            a[i] = lista[l]\n            l += 1\n        else:\n            a[i] = lista[r]\n            r -= 1\n    for i in range(n):\n        print(a[i], end=' ')\n    print()\ntestes = int(input())\nfor test in range(testes):\n    n = int(input())\n    lista = list(map(int, input().split()))\n    ordena(lista, n)", "for _ in range(0, int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = [a[(n - 1) // 2]] if n % 2 else []\n    p = n // 2 - 1 if n % 2 == 0 else (n - 1) // 2 - 1\n    q = n // 2 if n % 2 == 0 else (n - 1) // 2 + 1\n    for k in range(n // 2):\n        ans.append(a[p])\n        ans.append(a[q])\n        p -= 1\n        q += 1\n    print(*ans)", "for _ in range(int(input())):\n    (n, a) = (int(input()), sorted(list(map(int, input().split()))))\n    l = []\n    for i in range(n):\n        if i % 2 == 0:\n            l.append(a[n - i // 2 - 1])\n        else:\n            l.append(a[i // 2])\n    print(*l[::-1], sep=' ')", "for _ in range(int(input())):\n    (n, a) = (int(input()), sorted(list(map(int, input().split()))))\n    l = []\n    for i in range(n):\n        if i % 2 == 0:\n            l.append(a[n - i // 2 - 1])\n        else:\n            l.append(a[i // 2])\n    print(*l[::-1], sep=' ')", "for t in range(0, int(input())):\n    n = int(input())\n    arr = list(input().split())\n    arr = [int(x) for x in arr]\n    arr = sorted(arr)\n    solution = []\n    if n % 2 == 1:\n        solution.append(arr[n // 2])\n        del arr[n // 2]\n        n -= 1\n    for i in range(n // 2 - 1, -1, -1):\n        solution.append(arr[i])\n        solution.append(arr[n - i - 1])\n    print(*solution)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    res = [None] * n\n    if n % 2 == 0:\n        left = n // 2 - 1\n        right = n // 2\n        i = 0\n    else:\n        left = n // 2 - 1\n        right = n // 2 + 1\n        res[0] = arr[n // 2]\n        i = 1\n    while left >= 0 and right < n:\n        res[i] = arr[left]\n        left -= 1\n        i += 1\n        res[i] = arr[right]\n        right += 1\n        i += 1\n    print(*res)", "def solve(a):\n    a.sort()\n    (i, j) = (0, len(a) - 1)\n    sol = []\n    while i <= j:\n        sol.append(a[i])\n        i += 1\n        if i <= j:\n            sol.append(a[j])\n            j -= 1\n    return reversed(sol)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(' '.join(map(str, solve(a))))", "import sys\n\ndef solve(A):\n    A.sort()\n    N = len(A)\n    result = []\n    start = N // 2\n    result.append(A[start])\n    for i in range(1, N // 2 + 1):\n        if 0 <= start - i < N:\n            result.append(A[start - i])\n        if 0 <= start + i < N:\n            result.append(A[start + i])\n    return ' '.join(map(str, result))\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = [int(x) for x in sys.stdin.readline().split(' ')]\n    print(solve(A))", "a = int(input())\nfor _ in range(a):\n    b = int(input())\n    c = [int(i) for i in input().split()]\n    c.sort()\n    d = (-1 + b) // 2\n    l = d - 1\n    r = d + 1\n    ans = [str(c[d])]\n    while True:\n        if r < b:\n            ans.append(str(c[r]))\n        if l >= 0:\n            ans.append(str(c[l]))\n        r += 1\n        l -= 1\n        if r >= b and l < 0:\n            break\n    print(' '.join(ans))", "def solve(array):\n    array.sort()\n    mid = (len(array) - 1) // 2\n    offset = 1\n    solution = [array[mid]]\n    while mid - offset >= 0 or mid + offset < len(array):\n        if mid + offset < len(array):\n            solution.append(array[mid + offset])\n        if mid - offset >= 0:\n            solution.append(array[mid - offset])\n        offset += 1\n    return solution\nt = int(input())\nfor i in range(t):\n    solution = None\n    n = int(input())\n    array = [int(x) for x in input().split()]\n    print(' '.join([str(x) for x in solve(array)]))", "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        nums = list(map(int, input().split()))\n        nums.sort(reverse=True)\n        mid = n // 2\n        wait_insert = nums[:mid]\n        already = nums[mid:]\n        wait_insert.sort()\n        ans = []\n        for i in range(len(wait_insert)):\n            ans.append(already[i])\n            ans.append(wait_insert[i])\n        if n & 1:\n            ans.append(already[-1])\n        print(' '.join(map(str, ans)))\nmain()", "def solve(n, k):\n    k.sort()\n    mid = n // 2\n    state = 0\n    if n % 2 == 0:\n        pointer1 = mid - 1\n        pointer2 = mid\n    else:\n        pointer1 = mid - 1\n        pointer2 = mid + 1\n        diff1 = abs(k[pointer1] - k[mid])\n        diff2 = abs(k[pointer2] - k[mid])\n        if diff2 > diff1:\n            print(k[mid], k[pointer1], k[pointer2], end=' ')\n        else:\n            print(k[mid], k[pointer2], k[pointer1], end=' ')\n            state = 1\n        pointer1 -= 1\n        pointer2 += 1\n    while pointer1 >= 0 and pointer2 < n:\n        if state == 0:\n            print(k[pointer1], k[pointer2], end=' ')\n        else:\n            print(k[pointer2], k[pointer1], end=' ')\n        pointer1 -= 1\n        pointer2 += 1\n    print('')\nn = int(input())\nfor x in range(n):\n    x = int(input())\n    seq2 = list(map(int, input().split()))\n    solve(x, seq2)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    l.sort()\n    d = []\n    j = 0\n    k = len(l) - 1\n    while j <= k:\n        if j == k:\n            d.append(l[j])\n        else:\n            d.append(l[j])\n            d.append(l[k])\n        j += 1\n        k -= 1\n    print(*d[::-1])", "for _ in range(int(input())):\n    x = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    b = []\n    for i in range(x // 2):\n        b.extend([l[i], l[-i - 1]])\n    if x % 2:\n        b.append(l[x // 2])\n    print(*b[::-1])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    i = 0\n    while i < n // 2:\n        arr.append(arr[i])\n        arr.append(arr[n - 1 - i])\n        i += 1\n    if n % 2:\n        arr.append(arr[n // 2])\n    arr = arr[n:]\n    print(*arr[::-1])", "a = int(input())\nfor i in range(a):\n    b = int(input())\n    c = list(map(int, input().split()))\n    c.sort()\n    ans = []\n    if b % 2 == 0:\n        li = b // 2 - 1\n    else:\n        li = b // 2\n    ans.append(c[li])\n    for k in range(1, b // 2 + 1):\n        if li + k < b:\n            ans.append(c[li + k])\n        if li - k >= 0:\n            ans.append(c[li - k])\n    for jik in ans:\n        print(jik, end=' ')\n    print()", "import math\n\ndef ord_binaria(vet):\n    indx = math.floor((len(vet) - 1) / 2)\n    result = [0] * len(vet)\n    result[0] = vet[indx]\n    for i in range(1, len(vet)):\n        if i % 2 != 0:\n            indx += i\n        else:\n            indx -= i\n        result[i] = vet[indx]\n    return result\n\ndef printa(v):\n    for i in range(len(v)):\n        if i == len(v) - 1:\n            print(v[i])\n        else:\n            print(v[i], end=' ')\n\ndef program():\n    t = int(input())\n    for _ in range(t):\n        input()\n        v = [int(i) for i in input().split()]\n        v.sort()\n        printa(ord_binaria(v))\nprogram()", "def func(l, n):\n    l.sort()\n    lf = []\n    for i in range(0, n):\n        lf.append('*')\n    if n % 2 == 0:\n        d = n - 1\n        e = 0\n        i = n - 1\n        j = n - 2\n        while j >= 0:\n            i1 = l[d]\n            i2 = l[e]\n            lf[i] = i1\n            lf[j] = i2\n            d -= 1\n            e += 1\n            i -= 2\n            j -= 2\n    else:\n        lf[0] = l[n // 2]\n        d = n - 1\n        e = 0\n        i = n - 1\n        j = n - 2\n        while j >= 1:\n            i1 = l[d]\n            i2 = l[e]\n            lf[i] = i1\n            lf[j] = i2\n            d -= 1\n            e += 1\n            i -= 2\n            j -= 2\n    return lf\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    lf = func(l, n)\n    for i in lf:\n        print(i, end=' ')\n    print('')", "t = int(input())\nfor i in range(t):\n    l = []\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    for k in range(0, int(len(a) / 2)):\n        l.append(a[int(len(a) / 2) + k])\n        l.append(a[int(len(a) / 2) - 1 - k])\n    if len(a) % 2 != 0:\n        l.append(a[len(a) - 1])\n    c = ''\n    for k in l:\n        c += str(k) + ' '\n    print(c[:len(c) - 1])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = sorted(map(int, input().split()))\n    arr = []\n    for i in range(n // 2):\n        arr.append(A[n - i - 1])\n        arr.append(A[i])\n    if n % 2 == 1:\n        arr.append(A[n // 2])\n    print(' '.join(map(str, reversed(arr))))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    i = 0\n    j = len(l) - 1\n    r = []\n    while i <= j:\n        r.append(l[i])\n        i += 1\n        if j >= i:\n            r.append(l[j])\n            j -= 1\n    r.reverse()\n    print(' '.join(map(str, r)))", "import sys\n\ndef main():\n    res = ''\n    input = sys.stdin.readline\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        a.sort()\n        mid = n // 2\n        sub_res = str(a[mid]) + ' '\n        for i in range(1, mid + 1 if n % 2 != 0 else mid):\n            sub_res += str(a[mid - i]) + ' ' + str(a[mid + i]) + ' '\n        if n % 2 == 0:\n            sub_res += str(a[0])\n        res += sub_res + '\\n'\n    print(res)\nmain()", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    a = sorted([int(i) for i in input().split()])\n    a = sorted(a)\n    res = []\n    p1 = int(n / 2) - 1\n    p2 = int(n / 2)\n    while p1 != -1 or p2 != n:\n        if p2 != n:\n            res.append(a[p2])\n            p2 += 1\n        if p1 != -1:\n            res.append(a[p1])\n            p1 -= 1\n    res = [str(i) for i in res]\n    print(' '.join(res))", "tc = int(input())\nfor i in range(tc):\n    n = input()\n    nums = list(map(int, input().split(' ')))\n    nums.sort()\n    out = []\n    p1 = len(nums) // 2 - 1 if len(nums) % 2 == 0 else len(nums) // 2\n    p2 = p1 + 1\n    while p1 >= 0:\n        out.append(str(nums[p1]))\n        if p2 < len(nums):\n            out.append(str(nums[p2]))\n        p1 -= 1\n        p2 += 1\n    print(' '.join(out))", "import math\na = int(input())\nfor i in range(0, a):\n    b = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ans = [0] * len(arr)\n    j = 0\n    l = 0\n    right = len(arr) - 1\n    while right >= l:\n        if right == l:\n            ans[len(arr) - j - 1] = arr[l]\n        else:\n            ans[len(arr) - j - 1] = arr[l]\n            ans[len(arr) - j - 2] = arr[right]\n        l = l + 1\n        right = right - 1\n        j = j + 2\n    print(' '.join(list(map(str, ans))))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    l = 0\n    r = n - 1\n    vals = []\n    while l < r:\n        vals.append(arr[l])\n        vals.append(arr[r])\n        l += 1\n        r -= 1\n        if l == r:\n            vals.append(arr[l])\n            break\n    print(*vals[::-1])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    arr.sort()\n    if n % 2 == 0:\n        ki = n // 2 - 1\n        ka = n // 2\n        while ki >= 0 and ka < n:\n            print(arr[ka], arr[ki], end=' ')\n            ka += 1\n            ki -= 1\n        print()\n    else:\n        ki = n // 2 - 1\n        ka = n // 2 + 1\n        print(arr[n // 2], end=' ')\n        while ki >= 0 and ka < n:\n            print(arr[ka], arr[ki], end=' ')\n            ka += 1\n            ki -= 1\n        print()", "from collections import deque\ncases = int(input())\nwhile cases:\n    cases -= 1\n    num = int(input())\n    arr = sorted(map(int, input().split()))\n    ans = []\n    arr = deque(arr)\n    while arr:\n        ans.append(arr.pop())\n        if arr:\n            ans.append(arr.popleft())\n    print(*ans[::-1])", "from math import ceil, inf\nimport sys\n\ndef pro(arr):\n    n = len(arr)\n    lst = sorted(arr)\n    ans = [0] * n\n    i = 0\n    j = n - 1\n    k = n - 1\n    while i < j:\n        ans[k] = lst[j]\n        k -= 1\n        ans[k] = lst[i]\n        k -= 1\n        i += 1\n        j -= 1\n    if n % 2:\n        ans[0] = lst[n // 2]\n    print(*ans)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    pro(lst)", "def sol():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    res = [0] * n\n    (s, e) = (0, n - 1)\n    for i in range(n - 1, -1, -1):\n        if i % 2:\n            res[i] = a[s]\n            s += 1\n        else:\n            res[i] = a[e]\n            e -= 1\n    print(*res)\ntry:\n    for _ in range(int(input())):\n        sol()\nexcept:\n    pass", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ptr1 = 0\n    ptr2 = n - 1\n    lis = []\n    for i in range(n):\n        if i % 2 == 0:\n            lis.append(arr[ptr2])\n            ptr2 -= 1\n        else:\n            lis.append(arr[ptr1])\n            ptr1 += 1\n    print(*reversed(lis))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    l = []\n    i = 0\n    for i in range((n + 1) // 2):\n        l.append(a[i])\n        if i != n - i - 1:\n            l.append(a[n - i - 1])\n    print(*l[::-1])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    l = []\n    i = 0\n    while len(l) < n:\n        l.append(a[i])\n        l.append(a[n - i - 1])\n        i += 1\n    if len(l) > n:\n        del l[len(l) - 1]\n    l.reverse()\n    print(*l)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    t = []\n    if n & 1 == 0:\n        for i in range(n // 2 - 1, -1, -1):\n            t.append(l[i])\n            t.append(l[n - i - 1])\n        print(*t)\n    else:\n        t.append(l[n // 2])\n        for i in range(n // 2 - 1, -1, -1):\n            t.append(l[i])\n            t.append(l[n - i - 1])\n        print(*t)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    m = n // 2\n    b = []\n    k = 0\n    for i in range(n):\n        if i % 2 == 0:\n            m = m + k\n            b += [a[m]]\n        else:\n            m = m - k\n            b += [a[m]]\n        k += 1\n    print(*b)", "t = int(input())\n\ndef solve():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    res = []\n    l = 0\n    r = n - 1\n    temp = 0\n    while l <= r:\n        if temp == 0:\n            res.append(a[r])\n            r -= 1\n        else:\n            res.append(a[l])\n            l += 1\n        temp ^= 1\n    res = res[::-1]\n    for x in res:\n        print(x, end=' ')\n    print()\nfor _ in range(t):\n    solve()", "task_number = int(input())\nfor _ in range(task_number):\n    n = int(input())\n    array = [int(i) for i in input().split()]\n    array.sort()\n    result = []\n    for index in range(n // 2):\n        result.append(array[index])\n        result.append(array[-(index + 1)])\n    if n % 2 == 1:\n        result.append(array[n // 2])\n    result.reverse()\n    print(' '.join([str(a) for a in result]))", "test = int(input())\nwhile test > 0:\n    test -= 1\n    n = int(input())\n    a = [int(x) for x in map(int, input().split())]\n    a.sort()\n    mid = (n - 1) // 2\n    l = mid\n    r = mid + 1\n    ans = list()\n    st = 0\n    while n > 0:\n        n -= 1\n        if st == 0:\n            ans.append(a[l])\n            l -= 1\n        else:\n            ans.append(a[r])\n            r += 1\n        st = 1 - st\n    ans = map(str, ans)\n    print(' '.join(ans))", "def getIntsFromLine():\n    return list(map(int, input().split()))\n[T] = getIntsFromLine()\nfor case in range(T):\n    [n] = getIntsFromLine()\n    nums = sorted(getIntsFromLine())\n    l = n // 2 - 1\n    r = l + 1\n    ans = []\n    while l >= 0 and r < n:\n        ans.append(nums[r])\n        ans.append(nums[l])\n        l -= 1\n        r += 1\n    if r == n - 1:\n        ans.append(nums[r])\n    print(' '.join([str(a) for a in ans]))", "from sys import exit\nfrom collections import deque\n\ndef i():\n    return input()\n\ndef ii():\n    return int(input())\n\ndef iis():\n    return map(int, input().split())\n\ndef liis():\n    return list(map(int, input().split()))\n\ndef print_array(a):\n    print(' '.join(map(str, a)))\nt = ii()\nfor _ in range(t):\n    n = ii()\n    a = deque(sorted(liis()))\n    ans = []\n    bol = True\n    for i in range(n):\n        if bol:\n            ans.append(a.popleft())\n        else:\n            ans.append(a.pop())\n        bol = not bol\n    ans = ans[::-1]\n    print_array(ans)"]