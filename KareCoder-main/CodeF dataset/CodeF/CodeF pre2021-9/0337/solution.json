["t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = set(map(int, input().split()))\n    res = len(l2) > 1 or l1 == sorted(l1)\n    print('Yes' if res else 'No')", "numoftest = int(input())\nresult = []\nfor i in range(numoftest):\n    testsize = int(input())\n    num = [int(i) for i in input().split()]\n    type = [int(i) for i in input().split()]\n    sametype = False\n    increasing = all((num[i] <= num[i + 1] for i in range(len(num) - 1)))\n    if type[0] == 0:\n        sametype = 1 not in type\n    elif type[0] == 1:\n        sametype = 0 not in type\n    if not increasing and sametype:\n        result.append('No')\n    else:\n        result.append('Yes')\nfor i in result:\n    print(i)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    fl = True\n    if sum(b) == 0 or sum(b) == n:\n        for i in range(n - 1):\n            if fl and a[i + 1] < a[i]:\n                fl = False\n    if fl:\n        print('Yes')\n    else:\n        print('No')", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = input().split()\n    if '0' in b and '1' in b:\n        print('Yes')\n    else:\n        for i in range(1, n):\n            if a[i] < a[i - 1]:\n                print('No')\n                break\n        else:\n            print('Yes')", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if a == sorted(a):\n        print('Yes')\n        continue\n    x = b.count(1)\n    y = b.count(0)\n    if x == 0 or y == 0:\n        print('No')\n        continue\n    if x and y:\n        print('Yes')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lsta = list(map(int, input().split()))\n    lstb = list(map(int, input().split()))\n    lst1 = lsta.copy()\n    lst1.sort()\n    if 0 not in lstb or 1 not in lstb:\n        if lst1 == lsta:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Yes')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lsta = input().split()\n    lsta = [int(i) for i in lsta]\n    lstb = input().split()\n    lstb = [int(i) for i in lstb]\n    can = True\n    for i in range(1, n):\n        if lstb[i] != lstb[i - 1]:\n            print('Yes')\n            break\n        if lsta[i] < lsta[i - 1]:\n            can = False\n    else:\n        if can:\n            print('Yes')\n        else:\n            print('No')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if len(set(b)) == 2 or a == sorted(a):\n        print('Yes')\n    else:\n        print('No')", "I = lambda : map(int, input().split())\nfor _ in [0] * int(input()):\n    n = int(input())\n    a = list(I())\n    b = list(I())\n    if 0 < sum(b) < n:\n        print('Yes')\n    elif a == sorted(a):\n        print('Yes')\n    else:\n        print('No')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if a == sorted(a) or len(a) == 1 or (b.count(1) and b.count(0)):\n        print('Yes')\n    else:\n        print('No')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    b = set(b)\n    if len(b) == 1:\n        if a == sorted(a):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Yes')", "for p in range(int(input())):\n    (n, x, y, f) = (int(input()), [], [], 0)\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if 0 in b and 1 in b:\n        print('Yes')\n    elif a == sorted(a):\n        print('Yes')\n    else:\n        print('No')", "for _ in range(int(input())):\n    (n, a, b) = (int(input()), list(map(int, input().split())), list(map(int, input().split())))\n    if 0 in b and 1 in b:\n        print('Yes')\n    elif a == sorted(a):\n        print('Yes')\n    else:\n        print('No')", "for _ in range(int(input())):\n    (n, a, b) = (int(input()), list(map(int, input().split())), list(map(int, input().split())))\n    if 0 in b and 1 in b:\n        print('Yes')\n    elif a == sorted(a):\n        print('Yes')\n    else:\n        print('No')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    s = sorted(arr)\n    if 0 in b and 1 in b or arr == s:\n        print('Yes')\n    else:\n        print('No')", "for q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    b.extend(a)\n    type = list(map(int, input().split()))\n    n1 = type.count(0)\n    n2 = type.count(1)\n    b.sort()\n    if a == b:\n        print('Yes')\n    elif n1 == len(a) or n2 == len(a):\n        print('No')\n    else:\n        print('Yes')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if len(set(b)) == 1:\n        if sorted(a) == a:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Yes')", "R = lambda : map(int, input().split())\n(t,) = R()\nexec(t * \"R();a=[*R()];print('NYoe s'[{*R()}>{0}or a==sorted(a)::2]);\")", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().rstrip().split()))\n    typ = list(map(int, input().rstrip().split()))\n    if typ.count(1) == len(typ) and arr != sorted(arr) or (typ.count(0) == len(typ) and arr != sorted(arr)):\n        print('No')\n    else:\n        print('Yes')\n    t -= 1", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    one = b.count(1)\n    zero = b.count(0)\n    if sorted(a) == a or n == 1 or (one >= 1 and zero >= 1):\n        print('Yes')\n    else:\n        print('No')", "def testCase():\n    nElements = int(input())\n    elements = list(map(int, input().split(' ')))\n    types = list(map(int, input().split(' ')))\n    return (elements, types)\n\ndef isSortable(elements, types):\n    if sorted(elements) != elements and all((types[0] == x for x in types)):\n        return 'No'\n    return 'Yes'\ntestCases = int(input())\n[print(isSortable(*testCase())) for x in range(testCases)]", "for _ in range(int(input())):\n    i = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if len(set(b)) == 2:\n        print('Yes')\n    elif a == sorted(a):\n        print('Yes')\n    else:\n        print('No')", "import sys\ninput = sys.stdin.readline\n\ndef solve(values, types):\n    acc = types[0]\n    for t in types:\n        if t != acc:\n            return 'Yes'\n    for i in range(len(values)):\n        if i > 0 and values[i] < values[i - 1]:\n            return 'No'\n    return 'Yes'\nN = int(input())\nfor ii in range(N):\n    n = int(input())\n    values = list(map(int, input().split()))\n    types = list(map(int, input().split()))\n    print(solve(values, types))", "t = int(input())\nans = []\nfor z in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = a[:]\n    c.sort()\n    if 1 in b and 0 in b:\n        ans.append('Yes')\n    elif c != a:\n        ans.append('No')\n    else:\n        ans.append('Yes')\nfor a in ans:\n    print(a)", "t = int(input())\nfor k in range(t):\n    num = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    sumb = sum(b)\n    c = a.copy()\n    if sorted(a) == a or 0 < sumb < num:\n        print('Yes')\n    else:\n        print('No')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    b = list(map(int, input().split(' ')))\n    if a != sorted(a):\n        if b.count(0) == 0 or b.count(1) == 0:\n            print('No')\n        else:\n            print('Yes')\n    else:\n        print('Yes')", "n = int(input())\nfor i in range(n):\n    t = int(input())\n    a = str(input()).split()\n    b = str(input()).split()\n    a = [int(u) for u in a]\n    b = [int(y) for y in b]\n    if 1 in b and 0 in b:\n        print('Yes')\n    elif sorted(a) == a:\n        print('Yes')\n    else:\n        print('No')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = list(map(int, input().split()))\n    if l == list(sorted(l)) or len(set(l1)) == 2:\n        print('Yes')\n    else:\n        print('No')", "R = lambda : map(int, input().split())\n(t,) = R()\nexec(t * \"R();a=[*R()];print('NYoe s'[{*R()}>{0}or a==sorted(a)::2]);\")", "for cas in range(int(input())):\n    m = eval(input())\n    s = list(map(int, input().split()))\n    t = list(map(int, input().split()))\n    if m == 1:\n        print('Yes')\n        continue\n    i = 1\n    while i < m:\n        if t[i] != t[i - 1]:\n            break\n        i += 1\n    if i >= m:\n        fg = 1\n        for j in range(1, m):\n            if s[j] < s[j - 1]:\n                fg = 0\n                break\n        if fg:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Yes')", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().strip().split()))[:n]\n    b = list(map(int, input().strip().split()))[:n]\n    y = 0\n    for k in range(1, n):\n        if a[k] < a[k - 1]:\n            y = 1\n            break\n    if y == 0:\n        print('Yes')\n    else:\n        flag1 = 0\n        flag2 = 0\n        for i in range(n):\n            if b[i] == 0:\n                flag1 = 1\n                break\n        for j in range(n):\n            if b[j] == 1:\n                flag2 = 1\n                break\n        if flag1 == 1 and flag2 == 1:\n            print('Yes')\n        else:\n            print('No')\n    t = t - 1", "def arraySortedOrNot(arr, n):\n    if n == 0 or n == 1:\n        return True\n    for i in range(1, n):\n        if arr[i - 1] > arr[i]:\n            return False\n    return True\nn = int(input())\nfor _ in range(n):\n    t = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if b.count(0) == 0 or b.count(1) == 0:\n        if arraySortedOrNot(a, t):\n            print('Yes')\n        else:\n            print('No')\n    elif b.count(0) >= 1 and b.count(1) >= 1:\n        print('Yes')", "def R():\n    return map(int, input().split())\n(t,) = R()\nexec(t * \"R();a=[*R()];print('NYoe s'[{*R()}>{0}or a==sorted(a)::2]);\")", "def answer(n, a, b):\n    if b.count(0) >= 1 and b.count(1) >= 1:\n        return 'Yes'\n    a_s = sorted(a)\n    if a_s == a:\n        return 'Yes'\n    return 'No'\n\ndef main():\n    t = int(input())\n    while t:\n        n = int(input())\n        a = [int(i) for i in input().split()]\n        b = [int(i) for i in input().split()]\n        print(answer(n, a, b))\n        t -= 1\n    return\nmain()", "def solve(n, a, b):\n    sign = b[0]\n    for i in range(1, n):\n        if b[i] != sign:\n            return 'Yes'\n    if a == sorted(a):\n        return 'Yes'\n    else:\n        return 'No'\nt = int(input())\nfor i in range(t):\n    (n, a, b) = (int(input()), [int(i) for i in input().split()], [int(i) for i in input().split()])\n    print(solve(n, a, b))", "for i in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    l3 = l1.copy()\n    l3.sort()\n    if l3 == l1:\n        print('Yes')\n    elif l2.count(0) > 0 and l2.count(1) > 0:\n        print('Yes')\n    else:\n        print('No')", "from sys import *\nfrom math import sqrt\ninput = lambda : stdin.readline()\nint_arr = lambda : list(map(int, stdin.readline().strip().split()))\nstr_arr = lambda : list(map(str, stdin.readline().split()))\nget_str = lambda : map(str, stdin.readline().strip().split())\nget_int = lambda : map(int, stdin.readline().strip().split())\nget_float = lambda : map(float, stdin.readline().strip().split())\nmod = 1000000007\nsetrecursionlimit(1000)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = int_arr()\n    typ = int_arr()\n    if len(set(typ)) == 1 and arr == sorted(arr):\n        print('Yes')\n    elif typ.count(1) and typ.count(0) or arr == sorted(arr):\n        print('Yes')\n    else:\n        print('No')", "def testCase():\n    nElements = int(input())\n    elements = list(map(int, input().split(' ')))\n    types = list(map(int, input().split(' ')))\n    return (elements, types)\n\ndef isSortable(elements, types):\n    if sorted(elements) != elements:\n        if all((types[0] == x for x in types)):\n            return 'No'\n    return 'Yes'\ntestCases = int(input())\n[print(isSortable(*testCase())) for x in range(testCases)]", "def check(n):\n    if st[0] == 1 and st[1] == 1:\n        return True\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            return False\n    return True\nst = [False, False]\nT = eval(input())\nwhile T > 0:\n    st[0] = False\n    st[1] = False\n    n = eval(input())\n    dta = input().split()\n    a = [int(i) for i in dta]\n    dta = input().split()\n    for i in dta:\n        st[int(i)] = True\n    if check(n):\n        print('Yes')\n    else:\n        print('No')\n    T = T - 1", "n = eval(input())\nfor i in range(n):\n    m = eval(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if 1 in b and 0 in b:\n        print('Yes')\n        continue\n    else:\n        flag = 0\n        for j in range(1, m):\n            if a[j] < a[j - 1]:\n                flag = 1\n                break\n        if flag == 0:\n            print('Yes')\n        else:\n            print('No')", "R = lambda : map(int, input().split())\n(x,) = R()\nexec(x * \"R();a=[*R()];print('NYoe s'[{*R()}>{0}or a==sorted(a)::2]);\")", "def main():\n    first = []\n    second = []\n    for i in range(505):\n        first.append(0)\n        second.append(0)\n    control = int(input())\n    while control != 0:\n        come = int(input())\n        flag = 1\n        temp = 1\n        str = list(input().split(' '))\n        count = 1\n        for i in str:\n            first[count] = int(i)\n            count += 1\n        count = 1\n        str = list(input().split(' '))\n        for i in str:\n            second[count] = int(i)\n            count += 1\n        for i in range(1, come):\n            if second[i] != second[i + 1]:\n                temp = 0\n        if temp != 0:\n            for i in range(1, come):\n                if first[i] > first[i + 1]:\n                    flag = 0\n            if flag == 0:\n                print('No')\n            else:\n                print('Yes')\n        else:\n            print('Yes')\n        control -= 1\nmain()", "num = int(input())\nfor k in range(num):\n    n = int(input())\n    t1 = t2 = t3 = 0\n    a = []\n    a = list(map(int, input().split()))\n    for i in range(n):\n        if i >= 1 and a[i] < a[i - 1]:\n            t1 = 1\n            break\n    b = []\n    b = list(map(int, input().split()))\n    for i in range(n):\n        if b[i] != 0:\n            t3 = 1\n            if t2 == 1:\n                break\n        else:\n            t2 = 1\n            if t3 == 1:\n                break\n    if (t3 == 0 or t2 == 0) and t1 == 1:\n        print('No')\n    else:\n        print('Yes')", "n = int(input())\na = []\nb = []\nfor i in range(0, n):\n    x = int(input())\n    s = 0\n    s0 = 0\n    s1 = 0\n    a = list(map(int, input().split()))\n    for j in range(0, x):\n        if j >= 1 and a[j] < a[j - 1]:\n            s = 1\n    b = list(map(int, input().split()))\n    for i in range(0, x):\n        if b[i] != 0:\n            s1 = 1\n        else:\n            s0 = 1\n    if s1 and s0:\n        print('Yes')\n    elif s == 0:\n        print('Yes')\n    else:\n        print('No')", "t = int(input())\n\ndef TSort():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    b = list(map(int, input().split(' ')))\n    one = False\n    y = False\n    flag = True\n    for i in range(0, n):\n        if i < n - 1:\n            if a[i + 1] < a[i]:\n                flag = False\n        if b[i] == 0:\n            one = True\n        else:\n            y = True\n    if flag or (one and y):\n        print('Yes')\n    else:\n        print('No')\nfor _ in range(t):\n    TSort()", "elem = int(input())\nfor i in range(elem):\n    num = int(input())\n    ar = []\n    for i in input().split(' '):\n        ar.append(int(i))\n    ch = 0\n    for i in range(len(ar) - 1):\n        if ar[i] > ar[i + 1]:\n            ch = 1\n            break\n    ar2 = []\n    for i in input().split(' '):\n        ar2.append(int(i))\n    if ch == 0:\n        print('Yes')\n        continue\n    if sum(ar2) == 0 or sum(ar2) == len(ar2):\n        print('No')\n    else:\n        print('Yes')", "t = int(input())\nfor test in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    bin = list(map(int, input().split()))\n    t0 = False\n    t1 = False\n    for i in range(0, n):\n        if bin[i] == 1:\n            t1 = True\n        else:\n            t0 = True\n        if t0 and t1:\n            break\n    if t0 and t1:\n        print('Yes')\n    else:\n        val = False\n        for i in range(1, n):\n            if a[i] < a[i - 1]:\n                val = True\n                break\n        if val:\n            print('No')\n        else:\n            print('Yes')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(val) for val in input().split()]\n    b = [int(val) for val in input().split()]\n    prev_a = 0\n    isSorted = True\n    (b0, b1) = (0, 0)\n    for j in range(n):\n        a_j = a[j]\n        if a_j < prev_a:\n            isSorted = False\n        else:\n            prev_a = a_j\n        if b[j] == 0:\n            b0 += 1\n        else:\n            b1 += 1\n    if isSorted:\n        print('Yes')\n    elif b0 == 0 or b1 == 0:\n        print('No')\n    else:\n        print('Yes')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(val) for val in input().split()]\n    b = [int(val) for val in input().split()]\n    isSorted = True\n    isSameType = True\n    for i in range(1, n):\n        if a[i] < a[i - 1]:\n            isSorted = False\n        if b[i] != b[i - 1]:\n            isSameType = False\n    if isSorted or not isSameType:\n        print('Yes')\n    else:\n        print('No')", "t = int(input())\np = []\nfor i in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    z = sorted(x)\n    if z == x:\n        r = 'Yes'\n    else:\n        listToStr = ' '.join([str(elem) for elem in y])\n        f1 = listToStr.find('0')\n        f2 = listToStr.find('1')\n        if f1 == -1 or f2 == -1:\n            r = 'No'\n        else:\n            r = 'Yes'\n    p.append(r)\nfor i in range(len(p)):\n    print(p[i])", "t = int(input())\noutput = []\nfor case in range(t):\n    n = input()\n    a_i = input().split()\n    a_i = [int(a) for a in a_i]\n    b_i = input().split()\n    b_i = [int(b) for b in b_i]\n    if len(set(b_i)) == 2:\n        output.append('Yes')\n    elif sorted(a_i) == a_i:\n        output.append('Yes')\n    else:\n        output.append('No')\nfor total in output:\n    print(total)", "import sys\ninput = lambda : sys.stdin.readline()\nint_arr = lambda : list(map(int, input().split()))\nstr_arr = lambda : list(map(str, input().split()))\nget_str = lambda : map(str, input().split())\nget_int = lambda : map(int, input().split())\nget_flo = lambda : map(float, input().split())\nmod = 1000000007\n\ndef solve(n, arr, type):\n    (o, z) = (0, 0)\n    for i in type:\n        if i == 0:\n            z += 1\n        else:\n            o += 1\n    if arr == sorted(arr) or (o > 0 and z > 0):\n        print('Yes')\n    else:\n        print('No')\nfor _ in range(int(input())):\n    n = int(input())\n    arr = int_arr()\n    type = int_arr()\n    solve(n, arr, type)", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n        l = a.copy()\n        if min(b) == max(b):\n            a.sort()\n            if l == a:\n                print('Yes')\n            else:\n                print('No')\n        else:\n            print('Yes')\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    homogeneous = True\n    for i in range(1, n):\n        if b[i - 1] != b[i]:\n            homogeneous = False\n            break\n    if not homogeneous:\n        print('Yes')\n    else:\n        sorted = True\n        for i in range(1, n):\n            if a[i - 1] > a[i]:\n                sorted = False\n        if sorted:\n            print('Yes')\n        else:\n            print('No')", "def gray_code_for_2(n):\n    list = ['0', '1']\n    for i in range(1, n):\n        left = ['0' + i for i in list]\n        right = ['1' + i for i in list[::-1]]\n        list = left + right\n    return list\n\ndef Trouble_Sort():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    b = list(map(int, input().split(' ')))\n    hs = False\n    mood = False\n    flag = True\n    for i in range(0, n):\n        if i < n - 1:\n            if a[i + 1] < a[i]:\n                flag = False\n        if b[i] != 0:\n            mood = True\n        else:\n            hs = True\n    if flag or (hs and mood):\n        print('Yes')\n    else:\n        print('No')\nh = int(input())\nfor _ in range(h):\n    Trouble_Sort()", "m = int(input())\nfor i in range(m):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    num0 = 0\n    num1 = 0\n    arr = []\n    arr = sorted(a)\n    for i in range(n):\n        if b[i] == 0:\n            num0 += 1\n        else:\n            num1 += 1\n    t = 1\n    for i in range(n):\n        if arr[i] != a[i]:\n            t = 0\n            break\n    if num0 == 0 or num1 == 0:\n        if t:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('Yes')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = []\n    for i in range(n):\n        c.append(a[i])\n    c.sort()\n    if a == c:\n        print('Yes')\n    elif 1 in b and 0 in b:\n        print('Yes')\n    else:\n        print('No')", "t = int(input())\nfor i in range(1, t + 1):\n    n = int(input())\n    aList = [int(s) for s in input().split(' ')]\n    bList = [int(s) for s in input().split(' ')]\n    qa = True\n    qb = False\n    for i in range(1, n):\n        if aList[i - 1] > aList[i]:\n            qa = False\n        if bList[i - 1] != bList[i]:\n            qb = True\n    print('Yes' if qa or qb else 'No')", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = []\n    b = []\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if a == sorted(a) or len(set(b)) > 1:\n        print('Yes')\n    else:\n        print('No')\n    t = t - 1", "r = lambda : list(map(int, input().split()))\nfor _ in range(r()[0]):\n    (n, a, b) = (r()[0], r(), r())\n    print('YNeos'[b.count(1) in [0, n] and a != sorted(a)::2])", "def issort(A):\n    for i in range(len(A) - 1):\n        if int(A[i]) > int(A[i + 1]):\n            return False\n    return True\n\ndef issame(B):\n    for i in range(len(B) - 1):\n        if B[i] != B[i + 1]:\n            return False\n    return True\n\ndef f(A, B):\n    if issort(A):\n        return 'Yes'\n    if issame(B):\n        return 'No'\n    return 'Yes'\nt = int(input())\nfor i in range(t):\n    n = input()\n    A = input().split(' ')\n    B = input().split(' ')\n    print(f(A, B))", "tc = int(input())\nfor ctr in range(tc):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if b.count(1) > 0 and b.count(0) > 0 or sorted(a) == a:\n        print('Yes')\n    else:\n        print('No')", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = set([int(x) for x in input().split()])\n    c = a.copy()\n    c.sort()\n    if len(b) > 1 or c == a:\n        print('Yes')\n    else:\n        print('No')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(val) for val in input().split()]\n    b = [int(val) for val in input().split()]\n    isSorted = True\n    isSameType = True\n    for j in range(1, n):\n        if a[j] < a[j - 1]:\n            isSorted = False\n        if b[j] != b[j - 1]:\n            isSameType = False\n    if isSorted or not isSameType:\n        print('Yes')\n    else:\n        print('No')", "from collections import Counter\n\ndef solve(n, a, b):\n    if a == sorted(a):\n        return 'Yes'\n    c = Counter(b)\n    if c[0] > 0 and c[1] > 0:\n        return 'Yes'\n    return 'No'\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solve(n, a, b))", "for _ in range(int(input())):\n    n = int(input())\n    aa = list(map(int, input().split()))\n    bb = set(map(int, input().split()))\n    ans = len(bb) > 1 or aa == sorted(aa)\n    print('Yes' if ans else 'No')", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if b.count(0) > 0 and b.count(1) > 0:\n        print('Yes')\n    else:\n        sorted = True\n        for (a1, a2) in zip(a[:-1], a[1:]):\n            if a1 > a2:\n                sorted = False\n                break\n        if sorted:\n            print('Yes')\n        else:\n            print('No')"]