["def histogramUgliness(n, histogram):\n    histogram = [0] + histogram + [0]\n    operations = 0\n    ans = 0\n    for x in range(1, n + 1):\n        if histogram[x] > histogram[x - 1] and histogram[x] > histogram[x + 1]:\n            f = max(histogram[x - 1], histogram[x + 1])\n            operations += histogram[x] - f\n            histogram[x] = f\n    for x in range(0, n + 1):\n        ans += abs(histogram[x] - histogram[x + 1])\n    return ans + operations\nt = int(input())\nfinal = []\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    final.append(histogramUgliness(n, l))\nfor _ in range(t):\n    print(final[_])", "def readline():\n    return map(int, input().split())\n\ndef solve():\n    n = int(input())\n    seq = list(readline())\n    seq.extend([0, 0])\n    ans = 0\n    (a, b) = (0, 0)\n    for c in seq:\n        if a < b > c:\n            diff = b - max(a, c)\n            ans += diff\n            b -= diff\n        ans += abs(b - a)\n        (a, b) = (b, c)\n    print(ans)\n\ndef main():\n    t = int(input())\n    for __ in range(t):\n        solve()\nmain()", "import math\nimport sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    s = [0] + [int(_) for _ in input().split()] + [0]\n    ans = 0\n    for i in range(1, n + 1):\n        if s[i - 1] < s[i] > s[i + 1]:\n            d = s[i] - max(s[i - 1], s[i + 1])\n            s[i] -= d\n            ans += d\n    for i in range(n + 2):\n        ans += abs(s[i] - s[i - 1])\n    print(ans)\ntt = int(input())\nfor test in range(tt):\n    solve()", "def solve():\n    save = 0\n    steps = A[0]\n    for i in range(N):\n        prev = A[i - 1] if i > 0 else 0\n        nxt = A[i + 1] if i < N - 1 else 0\n        if prev < A[i] > nxt:\n            save += min(A[i] - prev, A[i] - nxt)\n        steps += abs(A[i] - nxt)\n    return steps - save\ntest_cases = int(input())\nfor test_case in range(test_cases):\n    N = int(input())\n    A = list(map(int, input().split()))\n    print(solve())", "def minimize_ugliness(arr, length):\n    ugliness = 0\n    for i in range(length):\n        if arr[i + 1] > arr[i] and arr[i + 1] > arr[i + 2]:\n            temp = arr[i + 1]\n            arr[i + 1] = max(arr[i], arr[i + 2])\n            ugliness += temp - arr[i + 1]\n    for i in range(length + 1):\n        ugliness += abs(arr[i + 1] - arr[i])\n    return ugliness\nt = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.append(0)\n    a.insert(0, 0)\n    print(minimize_ugliness(a, n))", "import sys, math\n\ndef solve(arr):\n    arr = [0] + arr + [0]\n    res = 0\n    for i in range(0, len(arr) - 2):\n        (a, b, c) = arr[i:i + 3]\n        m = max(a, c)\n        if b > m:\n            arr[i + 1] = m\n            res += b - m\n    s = 0\n    prev = 0\n    for v in arr:\n        s += abs(prev - v)\n        prev = v\n    return s + res\nfor _ in '_' * int(input()):\n    input()\n    print(solve([*map(int, input().split())]))", "for s in [*open(0)][2::2]:\n    r = c = x = 0\n    for y in map(int, s.split() + [0]):\n        t = abs((d := (y - x)))\n        r += max(2 * t - c, (c := (t + d)))\n        x = y\n    print(r // 2)", "for s in [*open(0)][2::2]:\n    r = c = x = 0\n    for y in map(int, s.split() + [0]):\n        t = abs((d := (y - x)))\n        r += max(t - c, (c := (t + d >> 1)))\n        x = y\n    print(r)", "import sys\nimport os\nif 'CP_LOCAL' in os.environ:\n    sys.stdin = open('codeforces/input.txt', 'r')\n    sys.stdout = open('codeforces/output.txt', 'w')\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef ugliness(arr):\n    t = [0] + arr + [0]\n    u = t[0]\n    for i in range(1, len(t)):\n        u += abs(t[i] - t[i - 1])\n    return u\n\ndef solve(arr):\n    u = ugliness(arr)\n    temp = [0] + arr + [0]\n    for i in range(1, len(temp) - 1):\n        if temp[i - 1] < temp[i] > temp[i + 1]:\n            u -= temp[i] - max(temp[i - 1], temp[i + 1])\n    return u\nT = inp()\nfor _ in range(T):\n    n = inp()\n    arr = inlt()\n    print(solve(arr))", "def minimize_ugliness(arr, length):\n    ugliness = 0\n    for i in range(length):\n        while arr[i + 1] > arr[i] and arr[i + 1] > arr[i + 2]:\n            temp = arr[i + 1]\n            arr[i + 1] = max(arr[i], arr[i + 2])\n            ugliness += temp - arr[i + 1]\n    for i in range(length + 1):\n        ugliness += abs(arr[i + 1] - arr[i])\n    return ugliness\nt = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.append(0)\n    a.insert(0, 0)\n    print(minimize_ugliness(a, n))", "import sys\n\ndef ugly(hist):\n    diffs = [abs(i - j) for (i, j) in zip([0] + hist, hist + [0])]\n    return sum(diffs)\n\ndef solve(hist):\n    orig = ugly(hist)\n    actions = 0\n    something = [max(0, min(cur - next, cur - prev)) for (prev, cur, next) in zip([0] + hist, hist, hist[1:] + [0])]\n    return orig - sum(something)\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        hist = list(map(int, input().split()))\n        print(solve(hist))\n    pass\nsys.exit(main())", "n_cases = int(input())\ndata = []\nfor _ in range(n_cases):\n    n = int(input())\n    hist = map(int, input().split())\n    data.append((n, tuple(hist)))\nfor (n, hist) in data:\n    base_ugliness = sum((abs(h - last_h) for (last_h, h) in zip(*[[0, *hist, 0][t:] for t in range(2)])))\n    modifier = sum((min(b - a, b - c) for (a, b, c) in zip(*[[0, *hist, 0][t:] for t in range(3)]) if b > max(a, c)))\n    print(base_ugliness - modifier)", "import sys\nimport math\nimport random\nfrom queue import PriorityQueue as PQ\nfrom bisect import bisect_left as BSL\nfrom bisect import bisect_right as BSR\nfrom collections import OrderedDict as OD\nfrom itertools import permutations\nmod = 1000000007\nsys.setrecursionlimit(1000000)\n\ndef get_ints():\n    return map(int, input().split())\n\ndef palindrome(s):\n    mid = len(s) // 2\n    for i in range(mid):\n        if s[i] != s[len(s) - i - 1]:\n            return False\n    return True\n\ndef check(i, n):\n    if 0 <= i < n:\n        return True\n    else:\n        return False\n\ndef solve(arr, n):\n    arr = [0] + arr + [0]\n    ans = 0\n    for i in range(1, n + 1):\n        if arr[i - 1] < arr[i] > arr[i + 1]:\n            mi = max(arr[i - 1], arr[i + 1])\n            ans += arr[i] - mi\n            arr[i] = mi\n    for i in range(1, n + 2):\n        ans += abs(arr[i] - arr[i - 1])\n    print(ans)\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    arr = list(get_ints())\n    solve(arr, n)", "for s in [*open(0)][2::2]:\n    r = c = d = x = 0\n    for y in map(int, s.split() + [0]):\n        r -= min(c + d, (c := abs((d := (y - x)))) - d) // 2 - c\n        x = y\n    print(r)", "def sol(a, n):\n    a = [0] + a\n    s = sum(a)\n    a.append(0)\n    for i in range(1, n + 1):\n        if a[i] > a[i + 1] and a[i] > a[i - 1]:\n            a[i] = max(a[i + 1], a[i - 1])\n    cout = 0\n    for i in range(len(a) - 1):\n        cout += abs(a[i] - a[i + 1])\n    return cout + s - sum(a)\nx = int(input())\nfor _ in range(x):\n    y = int(input())\n    A = list(map(int, input().split()))\n    print(sol(A, y))", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        if i > 0:\n            l = a[i - 1]\n        else:\n            l = 0\n        if i + 1 < n:\n            r = a[i + 1]\n        else:\n            r = 0\n        v = max(l, r)\n        if v < a[i]:\n            c += a[i] - v\n            a[i] = v\n    p = 0\n    for i in range(n):\n        c += abs(a[i] - p)\n        p = a[i]\n    c += abs(p)\n    print(c)\nfor i in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (ugl, prev, fact, temp) = (arr[-1], 0, 0, 0)\n    for i in arr:\n        ugl += abs(prev - i)\n        if i - prev < 0 and fact > 0:\n            temp += min(prev - i, fact)\n        fact = i - prev\n        prev = i\n    if fact > 0:\n        temp += min(prev - 0, fact)\n    print(ugl - temp)", "for s in [*open(0)][2::2]:\n    r = c = x = 0\n    for y in map(int, s.split() + [0]):\n        t = abs((d := (y - x)))\n        r += max(t - c, (c := (t + d >> 1)))\n        x = y\n    print(r)", "for s in [*open(0)][2::2]:\n    r = c = x = 0\n    for y in map(int, s.split() + [0]):\n        t = abs((d := (y - x)))\n        r += max(t - c, (c := (t + d >> 1)))\n        x = y\n    print(r)", "test = int(input())\nfor t in range(test):\n    total = 0\n    n = int(input())\n    arr = [0]\n    arr += list(map(int, input().split()))\n    arr += [0]\n    for i in range(1, n + 1):\n        total += abs(arr[i] - arr[i - 1])\n        if arr[i] > arr[i - 1] and arr[i] > arr[i + 1]:\n            total -= arr[i] - max(arr[i - 1], arr[i + 1])\n    total += arr[n]\n    print(total)", "def solver(a):\n    base_sum = 0\n    sum = 0\n    b_s = []\n    s = []\n    a = [0] + a + [0]\n    for index in range(1, len(a) - 1):\n        dl = a[index] - a[index - 1]\n        dr = a[index] - a[index + 1]\n        if dl > 0:\n            base_sum += dl\n            b_s.append(dl)\n        if dr > 0:\n            base_sum += dr\n            b_s.append(dr)\n        if dl > 0 and dr > 0:\n            temp = min(dl, dr)\n        else:\n            temp = 0\n        sum += temp\n        s.append(temp)\n    return base_sum - sum\nt = int(input())\nout = []\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, str(input()).split(' ')))\n    out.append(solver(a))\nprint('\\n'.join(map(str, out)))", "new = int(input())\nfor t in range(new):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = 0\n    a = [0] + a + [0]\n    for i in range(0, n + 1):\n        k += abs(a[i] - a[i + 1])\n    for i in range(1, n + 1):\n        if a[i - 1] < a[i] and a[i + 1] < a[i]:\n            k -= a[i] - max(a[i + 1], a[i - 1])\n    print(k)", "def ugly(arr):\n    n = len(arr)\n    if n == 1:\n        return arr[0]\n    f = arr[0] - arr[1]\n    less = 0\n    if f > 0:\n        less += f\n    l = arr[-1] - arr[-2]\n    if l > 0:\n        less += l\n    ug = 0\n    for i in range(n - 1):\n        ug += abs(arr[i] - arr[i + 1])\n    ug += arr[0] + arr[-1]\n    for i in range(1, n - 1):\n        if arr[i - 1] < arr[i] and arr[i] > arr[i + 1]:\n            less += min(arr[i] - arr[i - 1], arr[i] - arr[i + 1])\n    return ug - less\nt = int(input())\nfor i in range(t):\n    input()\n    arr = list(map(int, input().split()))\n    print(ugly(arr))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.insert(0, 0)\n    a.append(0)\n    ans = 0\n    for i in range(1, n + 1):\n        nei = max(a[i + 1], a[i - 1])\n        if nei < a[i]:\n            ans += a[i] - nei\n            a[i] = nei\n    for i in range(1, n + 2):\n        ans += abs(a[i] - a[i - 1])\n    print(ans)\n\ndef main():\n    for _ in range(int(input())):\n        solve()\nmain()", "def calc_uggliness(hist, operations=0):\n    uggliness = operations\n    for (i, x) in enumerate(hist[:-1]):\n        uggliness += abs(x - hist[i + 1])\n    return uggliness\n\ndef solve():\n    n = int(input())\n    hist = [0] + [int(x) for x in input().split()] + [0]\n    uggliness = calc_uggliness(hist)\n    for i in range(1, n + 1):\n        if hist[i - 1] < hist[i] > hist[i + 1]:\n            diff = hist[i] - max(hist[i - 1], hist[i + 1])\n            uggliness -= diff\n            hist[i] -= diff\n    print(uggliness)\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\n\ndef main():\n    n = int(input())\n    heights = list(map(int, input().split(' ')))\n    ugliness = 0\n    for (i, h) in enumerate(heights):\n        left_h = 0 if i == 0 else heights[i - 1]\n        right_h = 0 if i == n - 1 else heights[i + 1]\n        left_d = h - left_h\n        right_d = h - right_h\n        left_u = 0 if left_d < 0 else left_d\n        right_u = 0 if right_d < 0 else right_d\n        ugliness += left_u + right_u - min(left_u, right_u)\n    print(ugliness)\nfor _ in range(t):\n    main()", "def solution(n, a):\n    (prev, cur) = (0, a[0])\n    a.append(0)\n    cnt = 0\n    for i in range(1, n + 1):\n        prev = cur\n        cur = a[i] - a[i - 1]\n        if prev > 0 and cur < 0:\n            cnt += min(abs(prev), abs(cur))\n            a[i - 1] -= min(abs(prev), abs(cur))\n    outline = a[0]\n    for i in range(1, n + 1):\n        outline += abs(a[i] - a[i - 1])\n    return cnt + outline\ntc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solution(n, a))", "for _ in range(int(input())):\n    n = int(input())\n    (y, z) = (0, 0)\n    u = 0\n    for a in map(int, input().split() + [0, 0]):\n        (x, y, z) = (y, z, a)\n        if x < y and y > z:\n            d = y - max(x, z)\n            u += d\n            y -= d\n        u += abs(x - y)\n    print(u)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    res = 0\n    a = map(int, input().split())\n    p = 0\n    pp = 0\n    ugly = 0\n    for k in a:\n        if k > p:\n            ugly += k - p\n            pp = p\n        else:\n            down = max(0, min(p - k, p - pp))\n            ugly += p - k - down\n            pp = p - down\n        p = k\n    down = max(0, min(p, p - pp))\n    ugly += p - down\n    print(ugly)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = 0\n    a = [0] + a + [0]\n    for i in range(0, n + 1):\n        k += abs(a[i] - a[i + 1])\n    for i in range(1, n + 1):\n        if a[i - 1] < a[i] and a[i + 1] < a[i]:\n            k -= a[i] - max(a[i + 1], a[i - 1])\n    print(k)", "t = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(l[0])\n    else:\n        ans = l[0] + l[-1]\n        for i in range(1, n):\n            ans += abs(l[i] - l[i - 1])\n        for i in range(1, n - 1):\n            if l[i] > l[i - 1] and l[i] > l[i + 1]:\n                ans -= l[i] - max(l[i - 1], l[i + 1])\n        if l[0] > l[1]:\n            ans -= l[0] - l[1]\n        if l[-1] > l[-2]:\n            ans -= l[-1] - l[-2]\n        print(ans)\n    t -= 1", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = 0\n    a = [0] + a + [0]\n    for i in range(0, n + 1):\n        k += abs(a[i] - a[i + 1])\n    for i in range(1, n + 1):\n        if a[i - 1] < a[i] and a[i + 1] < a[i]:\n            k -= a[i] - max(a[i + 1], a[i - 1])\n    print(k)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    arr = [0] + arr + [0]\n    for i in range(1, n + 1):\n        if arr[i - 1] < arr[i] > arr[i + 1]:\n            d = arr[i] - max(arr[i - 1], arr[i + 1])\n            ans += d\n            arr[i] -= d\n    for i in range(n + 2):\n        ans += abs(arr[i] - arr[i - 1])\n    print(ans)", "for i in range(int(input())):\n    a = int(input())\n    b = [int(X) for X in input().split()]\n    k = b\n    per = 0\n    if a >= 2:\n        per += b[0] + b[a - 1]\n    else:\n        per += b[0]\n    for z in range(1, a):\n        per += abs(k[z] - k[z - 1])\n    for j in range(1, a - 1):\n        if b[j] > b[j - 1] and b[j] > b[j + 1]:\n            per -= b[j] - max(b[j - 1], b[j + 1])\n    if len(b) >= 2:\n        if b[a - 1] > b[a - 2]:\n            per -= b[a - 1] - b[a - 2]\n        if b[0] > b[1]:\n            per -= b[0] - b[1]\n    print(per)", "for _ in range(int(input())):\n    n = int(input())\n    (y, z) = (0, 0)\n    u = 0\n    for a in map(int, input().split() + [0, 0]):\n        (x, y, z) = (y, z, a)\n        if x < y and y > z:\n            d = y - max(x, z)\n            u += d\n            y -= d\n        u += abs(x - y)\n    print(u)", "def h(m):\n    return sum([m[0], m[n - 1], sum([abs(m[i] - m[i + 1]) for i in range(n - 1)])])\nfor q in range(int(input())):\n    n = int(input())\n    m = list(map(int, input().split()))\n    e = h(m)\n    k = 0\n    if len(m) > 1:\n        if m[0] > m[1]:\n            k += m[0] - m[1]\n        for i in range(1, n - 1):\n            if m[i] > m[i - 1] and m[i] > m[i + 1]:\n                k += m[i] - max(m[i - 1], m[i + 1])\n        if m[n - 1] > m[n - 2]:\n            k += m[n - 1] - m[n - 2]\n    else:\n        k += m[0]\n    print(e - k)", "def solve(n, a):\n    a = [0] + a + [0]\n    ans = 0\n    for i in range(1, len(a) - 1):\n        if a[i - 1] < a[i] > a[i + 1]:\n            ans += a[i] - max(a[i - 1], a[i + 1])\n            a[i] = max(a[i - 1], a[i + 1])\n    for i in range(0, len(a) - 1):\n        ans += abs(a[i] - a[i + 1])\n    return ans\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(n, a))", "for _ in range(int(input())):\n    n = int(input())\n    l = [0] + list(map(int, input().split())) + [0]\n    res = 0\n    for i in range(1, n + 1):\n        if l[i] > l[i - 1] and l[i] > l[i + 1]:\n            res += l[i] - max(l[i + 1], l[i - 1])\n            l[i] = max(l[i + 1], l[i - 1])\n        res += abs(l[i] - l[i - 1])\n    print(res + l[-2])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    u = l[0] + l[-1]\n    for i in range(n - 1):\n        u = u + abs(l[i + 1] - l[i])\n    l.insert(0, 0)\n    l.append(0)\n    for j in range(1, len(l) - 1):\n        if l[j] > l[j - 1] and l[j] > l[j + 1]:\n            x = min(l[j] - l[j - 1], l[j] - l[j + 1])\n            u = u - x\n    print(u)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = 0\n    a = [0] + a + [0]\n    for i in range(0, n + 1):\n        k += abs(a[i] - a[i + 1])\n    for i in range(1, n + 1):\n        if a[i - 1] < a[i] and a[i + 1] < a[i]:\n            k -= a[i] - max(a[i + 1], a[i - 1])\n    print(k)", "def Histogram(n, arr):\n    res = [0] * (n + 2)\n    for i in range(1, n + 1):\n        res[i] = arr[i - 1]\n    ans = 0\n    for i in range(1, n + 1):\n        s = min(res[i], max(res[i - 1], res[i + 1]))\n        ans += res[i] - s + abs(s - res[i - 1])\n        res[i] = s\n    return ans + res[n]\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(Histogram(n, arr))", "n = int(input())\nanswers = []\nfor i in range(n):\n    ans = 0\n    n1 = int(input())\n    a = input().split()\n    a = [int(i) for i in a]\n    a.insert(0, 0)\n    a.append(0)\n    for j in range(1, n1 + 1):\n        ans += abs(a[j] - a[j - 1])\n        if a[j] > a[j - 1] and a[j] > a[j + 1]:\n            ans -= a[j] - max(a[j - 1], a[j + 1])\n    ans += a[n1]\n    answers.append(ans)\nfor i in range(n):\n    print(answers[i])", "for s in [*open(0)][2::2]:\n    a = (0, *map(int, s.split()), 0, 0)\n    print(sum((abs(x - y) - min(max(0, y - x), max(0, y - z)) for (x, y, z) in zip(a, a[1:], a[2:]))))", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    arr = list(map(int, stdin.readline().split()))\n    if len(arr) == 0:\n        print(0)\n    elif len(arr) == 1:\n        print(arr[0])\n    else:\n        op = 0\n        arr = [0] + arr + [0]\n        for i in range(1, n + 1):\n            if arr[i] > arr[i - 1] and arr[i] > arr[i + 1]:\n                op += arr[i] - max(arr[i - 1], arr[i + 1])\n                arr[i] = max(arr[i - 1], arr[i + 1])\n            op += abs(arr[i] - arr[i - 1])\n        op += abs(arr[-2] - arr[-1])\n        print(op)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(l[0])\n        continue\n    ugly = l[0] + l[-1]\n    i = 1\n    while i < n:\n        ugly += abs(l[i] - l[i - 1])\n        i += 1\n    if n == 2:\n        print(ugly - abs(l[0] - l[1]))\n        continue\n    ans = 0\n    if l[1] < l[0]:\n        ans += l[0] - l[1]\n    if l[-1] > l[-2]:\n        ans += l[-1] - l[-2]\n    i = 1\n    while i < n - 1:\n        if l[i - 1] < l[i] and l[i + 1] < l[i]:\n            ans += l[i] - max(l[i - 1], l[i + 1])\n        i += 1\n    print(ugly - ans)", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    A = [0] + A + [0]\n    s = 0\n    s += A[1]\n    for i in range(1, len(A) - 1):\n        s += abs(A[i + 1] - A[i])\n        if A[i] > A[i - 1] and A[i] > A[i + 1]:\n            m = max(A[i - 1], A[i + 1])\n            s -= 2 * (A[i] - m)\n            s += A[i] - m\n            A[i] = m\n    print(s)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    u = a[0] + a[-1]\n    for i in range(1, len(a)):\n        u += abs(a[i] - a[i - 1])\n    if len(a) < 2:\n        print(u - a[0])\n    else:\n        if a[0] > a[1]:\n            u -= a[0] - a[1]\n            a[0] = a[1]\n        if a[-1] > a[-2]:\n            u -= a[-1] - a[-2]\n            a[-1] = a[-2]\n        for i in range(1, len(a) - 1):\n            m = max(a[i - 1], a[i + 1])\n            if a[i] > m:\n                u -= a[i] - m\n                a[i] = m\n        print(u)", "def f(a):\n    s = a[0] + a[-1]\n    for i in range(1, len(a)):\n        s += abs(a[i] - a[i - 1])\n    return s\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    s = 0\n    a = list(map(int, input().split()))\n    a.insert(0, 0)\n    a.append(0)\n    for i in range(1, n + 1):\n        if a[i] > a[i - 1] and a[i] > a[i + 1]:\n            k = a[i]\n            a[i] = max(a[i - 1], a[i + 1])\n            s += k - a[i]\n    a.pop(0)\n    a.pop(-1)\n    print(f(a) + s)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    u = a[0]\n    for i in range(1, n):\n        u += abs(a[i - 1] - a[i])\n    u += a[-1]\n    v = 0\n    for i in range(1, n - 1):\n        if a[i - 1] < a[i] > a[i + 1]:\n            v += a[i] - max(a[i - 1], a[i + 1])\n    if n == 1:\n        print(a[0])\n        continue\n    v += max(a[0] - a[1], 0)\n    v += max(a[-1] - a[-2], 0)\n    print(u - v)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [0] + list(map(int, input().split()))\n    l.append(0)\n    l.append(0)\n    score = 0\n    for i in range(1, n + 2):\n        score += abs(l[i] - l[i - 1])\n        if l[i - 1] < l[i] and l[i] > l[i + 1]:\n            score -= min(l[i] - l[i - 1], l[i] - l[i + 1])\n    print(score)", "def ugly(n, list):\n    list.insert(0, 0)\n    list.append(0)\n    n += 1\n    cost = 0\n    count = 0\n    for i in range(0, n):\n        m = max(list[i - 1], list[i + 1])\n        if list[i] > m:\n            count += list[i] - m\n        if list[i] > list[i - 1]:\n            cost += list[i] - list[i - 1]\n        if list[i] > list[i + 1]:\n            cost += list[i] - list[i + 1]\n    return cost - count\nfor _ in range(int(input())):\n    n = int(input())\n    print(ugly(n, [int(x) for x in input().split()]))", "for s in [*open(0)][2::2]:\n    a = (0, *map(int, s.split()), 0)\n    print(sum((abs(x - y) + abs(y - z) - 2 * min(max(0, y - x), max(0, y - z)) for (x, y, z) in zip(a, a[1:], a[2:]))) + a[1] + a[-2] >> 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(a[0])\n        continue\n    i = 1\n    s = a[0]\n    if a[0] > a[1]:\n        a[0] = a[1]\n    for i in range(1, n - 1):\n        if a[i] > a[i + 1] and a[i] > a[i - 1]:\n            t = max(a[i - 1], a[i + 1])\n            s += a[i] - t\n            a[i] = t\n        s += abs(a[i] - a[i - 1])\n    s += max(a[n - 1], a[n - 2])\n    print(s)", "def findAns(arr):\n    arr = [0] + arr + [0]\n    res = 0\n    ans = [False] * len(arr)\n    for i in range(1, len(arr) - 1):\n        if arr[i] > arr[i - 1] and arr[i] > arr[i + 1]:\n            res += arr[i] - max(arr[i - 1], arr[i + 1])\n            res += max(arr[i - 1], arr[i + 1]) - min(arr[i - 1], arr[i + 1])\n            ans[i] = True\n            ans[i + 1] = True\n    for j in range(1, len(arr)):\n        if ans[j] == False:\n            res += abs(arr[j] - arr[j - 1])\n    return res\nT = int(input())\nfor i in range(T):\n    n = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    print(findAns(arr))", "for _ in range(int(input())):\n    n = int(input())\n    temp = 0\n    arr = list(map(int, input().strip().split()))\n    arr = [0] + arr\n    s = sum(arr)\n    arr.append(0)\n    for i in range(1, n + 1):\n        if arr[i] > arr[i + 1] and arr[i] > arr[i - 1]:\n            arr[i] = max(arr[i + 1], arr[i - 1])\n    cout = 0\n    for i in range(len(arr) - 1):\n        cout += abs(arr[i] - arr[i + 1])\n    print(cout + s - sum(arr))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [0] + list(map(int, input().split())) + [0]\n    ans = 0\n    for i in range(1, len(arr) - 1):\n        if arr[i] > arr[i - 1] and arr[i] > arr[i + 1]:\n            mn = max(arr[i - 1], arr[i + 1])\n            ans += arr[i] - mn\n            arr[i] = mn\n    for i in range(1, len(arr)):\n        ans += abs(arr[i] - arr[i - 1])\n    print(ans)", "t = int(input())\nwhile t:\n    n = int(input())\n    ops = 0\n    levels = [0] + list(map(int, input().split(' '))) + [0]\n    for i in range(1, len(levels) - 1):\n        if levels[i] > levels[i + 1] and levels[i] > levels[i - 1]:\n            nearest = max(levels[i + 1], levels[i - 1])\n            ops += levels[i] - nearest\n            levels[i] = nearest\n    levels = levels[1:-1]\n    diffs = [levels[0]] + [abs(levels[i + 1] - levels[i]) for i in range(n - 1)] + [levels[-1]]\n    print(sum(diffs) + ops)\n    t -= 1", "t = input()\nfor i in range(int(t)):\n    n = int(input())\n    a = [0]\n    a = a + list(map(int, input().split()))\n    a.append(0)\n    ans = 0\n    for k in range(1, n + 2):\n        ans = ans + abs(a[k] - a[k - 1])\n    for k in range(1, n + 1):\n        if a[k] > a[k - 1] and a[k] > a[k + 1]:\n            ans = ans - (a[k] - max(a[k - 1], a[k + 1]))\n    print(ans)", "for t in range(int(input())):\n    n = int(input()) + 2\n    l = [0] + list(map(int, input().split())) + [0]\n    out = l[0] + l[-1]\n    for i in range(n - 1):\n        out += abs(l[i] - l[i + 1])\n    for i in range(1, n - 1):\n        sub = l[i] - max(l[i - 1], l[i + 1])\n        if sub > 0:\n            out -= sub\n    print(out)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = [0] + arr + [0]\n    ans = 0\n    for i in range(1, n + 1):\n        temp = max(arr[i - 1], arr[i + 1])\n        if arr[i] > temp:\n            ans += arr[i] - temp\n            arr[i] = temp\n    for i in range(n + 1):\n        ans += abs(arr[i + 1] - arr[i])\n    print(ans)", "import sys\nfrom sys import stdin, stdout\nfrom math import ceil, floor, sqrt, log, log2, log10\nfrom collections import Counter\nint_max = float('inf')\nint_min = -float('inf')\nANS = []\ninput = stdin.readline\n\ndef solve():\n    pass\nt = int(input())\nfor i in range(t):\n    n = int(input()) + 2\n    arr = [0] + list(map(int, input().split())) + [0]\n    moves = 0\n    for i in range(n - 1):\n        moves += abs(arr[i] - arr[i + 1])\n    for i in range(1, n - 1):\n        sub = arr[i] - max(arr[i - 1], arr[i + 1])\n        if sub > 0:\n            moves -= sub\n    ANS.append(str(moves))\nprint('\\n'.join(ANS))", "def is_peak(hist, index):\n    if hist[index] <= hist[index - 1]:\n        return 0\n    if hist[index] <= hist[index + 1]:\n        return 0\n    return hist[index] - max(hist[index - 1], hist[index + 1])\n\ndef solve():\n    n = int(input())\n    hist_heights = [0] + [int(x) for x in input().split()] + [0]\n    relative_hegihts = [0] * len(hist_heights)\n    for i in range(1, n + 2):\n        relative_hegihts[i] = hist_heights[i] - hist_heights[i - 1]\n    ugliness = sum((abs(i) for i in relative_hegihts))\n    for i in range(1, n + 1):\n        delta_height = is_peak(hist_heights, i)\n        if delta_height > 0:\n            ugliness -= delta_height\n    return ugliness\nfor _ in range(int(input().strip())):\n    print(solve())", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(a[0])\n    else:\n        cnt = 0\n        if a[0] > a[1]:\n            cnt += a[0] - a[1]\n            a[0] = a[1]\n        for i in range(1, n - 1):\n            q = max(a[i - 1], a[i + 1])\n            if a[i] > q:\n                cnt += a[i] - q\n                a[i] = q\n        if a[n - 1] > a[n - 2]:\n            cnt += a[n - 1] - a[n - 2]\n            a[n - 1] = a[n - 2]\n        cnt += a[0] + a[n - 1]\n        for i in range(n - 1):\n            cnt += abs(a[i] - a[i + 1])\n        print(cnt)", "m = eval(input())\nfor t in range(m):\n    n = eval(input())\n    a = list(map(int, input().split()))\n    k = 0\n    a = [0] + a + [0]\n    for i in range(0, n + 1):\n        k += abs(a[i] - a[i + 1])\n    for i in range(1, n + 1):\n        if a[i - 1] < a[i] and a[i + 1] < a[i]:\n            k -= a[i] - max(a[i + 1], a[i - 1])\n    print(k)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [0] + list(map(int, input().split())) + [0]\n    ugliness = 0\n    for i in range(1, len(a) - 1):\n        if a[i - 1] < a[i] > a[i + 1]:\n            subtrahendum = max(a[i - 1], a[i + 1])\n            ugliness += a[i] - subtrahendum\n            a[i] = subtrahendum\n    for i in range(1, len(a)):\n        ugliness += abs(a[i - 1] - a[i])\n    print(ugliness)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(a[0])\n    elif n == 2:\n        print(2 * min(a) + abs(a[0] - a[1]))\n    else:\n        ans = a[0] + a[-1]\n        for i in range(1, n):\n            ans += abs(a[i - 1] - a[i])\n        if a[0] > a[1]:\n            ans -= a[0] - a[1]\n        if a[-1] > a[-2]:\n            ans -= a[-1] - a[-2]\n        for i in range(1, n - 1):\n            if a[i] > a[i - 1] and a[i] > a[i + 1]:\n                ans -= min(a[i] - a[i - 1], a[i] - a[i + 1])\n        print(ans)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    liczby = list(map(int, input().split()))\n    zabrane = 0\n    if n > 1:\n        for z in range(n - 2):\n            if liczby[z + 1] > liczby[z] and liczby[z + 1] > liczby[z + 2]:\n                if liczby[z] >= liczby[z + 2]:\n                    zabrane = zabrane + (liczby[z + 1] - liczby[z])\n                    liczby[z + 1] = liczby[z]\n                else:\n                    zabrane = zabrane + (liczby[z + 1] - liczby[z + 2])\n                    liczby[z + 1] = liczby[z + 2]\n        if liczby[0] > liczby[1]:\n            zabrane = zabrane + (liczby[0] - liczby[1])\n            liczby[0] = liczby[1]\n        if liczby[len(liczby) - 1] > liczby[len(liczby) - 2]:\n            zabrane = zabrane + (liczby[len(liczby) - 1] - liczby[len(liczby) - 2])\n            liczby[len(liczby) - 1] = liczby[len(liczby) - 2]\n    liczba = liczby[0]\n    for y in range(n - 1):\n        liczba = liczba + abs(liczby[y + 1] - liczby[y])\n    if n > 1:\n        liczba = liczba + liczby[len(liczby) - 1]\n    print(liczba + zabrane)", "for i in range(int(input())):\n    m = int(input())\n    l = list(map(int, input().split()))\n    l.append(0)\n    l.insert(0, 0)\n    c = 0\n    for i in range(1, m + 2):\n        c += abs(l[i] - l[i - 1])\n    for i in range(1, m + 1):\n        if l[i] > l[i - 1] and l[i] > l[i + 1]:\n            c -= abs(l[i] - max(l[i - 1], l[i + 1]))\n            l[i] = max(l[i - 1], l[i + 1])\n    print(c)", "def solve(A, n):\n    li = [0] + A[:] + [0]\n    count = 0\n    for i in range(1, n + 1):\n        a = max(0, li[i] - li[i - 1])\n        b = max(0, li[i] - li[i + 1])\n        count += a + b - min(a, b)\n    return count\nfor case in range(int(input())):\n    n = int(input())\n    Arr = list(map(int, input().split()))\n    ans = solve(Arr, n)\n    print(ans)", "t = int(input())\nwhile t:\n    sdd = int(input())\n    sdfdgdg = list(map(int, input().split()))\n    if sdd == 1:\n        print(sdfdgdg[0])\n    else:\n        x = 0\n        if sdfdgdg[0] > sdfdgdg[1]:\n            x += sdfdgdg[0] - sdfdgdg[1]\n            sdfdgdg[0] = sdfdgdg[1]\n        if sdfdgdg[-1] > sdfdgdg[-2]:\n            x += abs(sdfdgdg[-1] - sdfdgdg[-2])\n            sdfdgdg[-1] = sdfdgdg[-2]\n        for i in range(1, sdd - 1):\n            if sdfdgdg[i] > sdfdgdg[i - 1] and sdfdgdg[i] > sdfdgdg[i + 1]:\n                x += sdfdgdg[i] - max(sdfdgdg[i - 1], sdfdgdg[i + 1])\n                sdfdgdg[i] = max(sdfdgdg[i - 1], sdfdgdg[i + 1])\n        x += sdfdgdg[0]\n        x += sdfdgdg[-1]\n        for i in range(1, sdd):\n            x += abs(sdfdgdg[i] - sdfdgdg[i - 1])\n        print(x)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l = [0]\n    l.extend(l1)\n    l.append(0)\n    k = 0\n    for i in range(1, n + 1):\n        if l[i] > l[i - 1] and l[i] > l[i + 1]:\n            if l[i - 1] > l[i + 1]:\n                k += l[i] - l[i - 1]\n                l[i] = l[i - 1]\n            else:\n                k += l[i] - l[i + 1]\n                l[i] = l[i + 1]\n    for i in range(1, n + 2):\n        k += abs(l[i] - l[i - 1])\n    print(k)", "def solve(l, n):\n    if n == 1:\n        print(l[0])\n    else:\n        ans = 0\n        for i in range(n):\n            if i == 0:\n                ans += l[i]\n            else:\n                ans += abs(l[i] - l[i - 1])\n        ans += l[-1]\n        for i in range(n):\n            if i == 0:\n                ans -= max(0, l[i] - l[i + 1])\n            elif i > 0 and i < n - 1:\n                ans -= max(0, l[i] - max(l[i - 1], l[i + 1]))\n            else:\n                ans -= max(0, l[i] - l[i - 1])\n        print(ans)\nfor t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    solve(l, n)", "for _ in range(int(input())):\n    (n, m) = (int(input()), 0)\n    l = [0] + [*map(int, input().split())] + [0]\n    for i in range(1, n + 2):\n        if l[i - 1] < l[i] > l[i + 1]:\n            m += l[i] - max(l[i - 1], l[i + 1])\n            l[i] = max(l[i - 1], l[i + 1])\n    print(sum((abs(l[i] - l[i - 1]) for i in range(1, n + 2))) + m)", "for s in [*open(0)][2::2]:\n    r = d = x = 0\n    for y in map(int, s.split() + [0]):\n        r -= min(max(0, x - y), max(0, d)) - abs((d := (y - x)))\n        x = y\n    print(r)", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    arr = [int(z) for z in input().split()]\n    arr.insert(0, 0)\n    arr.append(0)\n    ugly = 0\n    for i in range(1, len(arr)):\n        ugly += abs(arr[i] - arr[i - 1])\n    for i in range(1, len(arr) - 1):\n        if arr[i] > arr[i - 1] and arr[i] > arr[i + 1]:\n            ugly -= arr[i] - max(arr[i + 1], arr[i - 1])\n    print(ugly)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt = 0\n    if n > 1:\n        if a[0] > a[1]:\n            cr = a[0] - a[1]\n            cnt += cr\n            a[0] -= cr\n    for i in range(1, n - 1):\n        if a[i] > a[i - 1] and a[i] > a[i + 1]:\n            cr = a[i] - max(a[i - 1], a[i + 1])\n            cnt += cr\n            a[i] -= cr\n    if n > 1:\n        if a[-1] > a[-2]:\n            cr = a[-1] - a[-2]\n            cnt += cr\n            a[-1] -= cr\n    cnt += a[0]\n    cnt += a[-1]\n    for i in range(1, n):\n        cnt += abs(a[i] - a[i - 1])\n    if n == 1:\n        print(a[0])\n    else:\n        print(cnt)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = [0] + arr + [0]\n    ans = 0\n    for i in range(1, n + 1):\n        temp = max(arr[i - 1], arr[i + 1])\n        if arr[i] > temp:\n            ans += arr[i] - temp\n            arr[i] = temp\n    for i in range(n + 1):\n        ans += abs(arr[i + 1] - arr[i])\n    print(ans)\n    del arr, ans", "import sys\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, sys.stdin.readline().split()))\n    ops = 0\n    if n == 1:\n        print(a[0])\n        continue\n    if a[0] > a[1]:\n        ops += a[0] - a[1]\n        a[0] = a[1]\n    for i in range(1, len(a) - 1):\n        if a[i] > a[i - 1] and a[i] > a[i + 1]:\n            ops += a[i] - max(a[i - 1], a[i + 1])\n            a[i] = max(a[i - 1], a[i + 1])\n    if a[len(a) - 1] > a[len(a) - 2]:\n        ops += a[len(a) - 1] - a[len(a) - 2]\n        a[len(a) - 1] = a[len(a) - 2]\n    h = a[0] + a[len(a) - 1]\n    for i in range(len(a) - 1):\n        h += abs(a[i + 1] - a[i])\n    print(ops + h)", "for t in range(int(input())):\n    n = int(input())\n    L = [int(X) for X in input().split()]\n    if n == 1:\n        print(L[0])\n    else:\n        ans = L[0] + L[-1]\n        for i in range(1, n):\n            ans += abs(L[i] - L[i - 1])\n        for i in range(n):\n            if i == 0:\n                if L[0] > L[1]:\n                    ans -= L[0] - L[1]\n            elif i == n - 1:\n                if L[n - 1] > L[n - 2]:\n                    ans -= L[n - 1] - L[n - 2]\n            elif i != 0 or i != n - 1:\n                if L[i] > L[i - 1] and L[i] > L[i + 1]:\n                    ans -= L[i] - max(L[i - 1], L[i + 1])\n        print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n\n    def fun():\n        if n == 1:\n            return l[0]\n        ans = 0\n        for i in range(n):\n            if i == 0:\n                ans += l[0]\n                if l[0] > l[1]:\n                    l[0] = l[1]\n                continue\n            if i == n - 1:\n                ans += l[-1]\n                if l[-2] < l[-1]:\n                    l[-1] = l[-2]\n                continue\n            if l[i] > l[i - 1] and l[i] > l[i + 1]:\n                ans += l[i] - max(l[i - 1], l[i + 1])\n                l[i] = max(l[i - 1], l[i + 1])\n                if l[i - 1] < l[i]:\n                    ans += l[i] - l[i - 1]\n                if l[i + 1] < l[i]:\n                    ans += l[i] - l[i + 1]\n            else:\n                if l[i - 1] < l[i]:\n                    ans += l[i] - l[i - 1]\n                if l[i + 1] < l[i]:\n                    ans += l[i] - l[i + 1]\n        return ans\n    print(fun())", "def fealdad_a_medias(lista):\n    result = 0\n    for i in range(len(lista) - 1):\n        result += abs(lista[i] - lista[i + 1])\n    return lista[0] + lista[-1] + result\nfor i in range(int(input())):\n    n = int(input())\n    lista = list(map(int, input().split()))\n    contador = fealdad_a_medias(lista)\n    lista_aumentada = [0] + lista + [0]\n    h = 0\n    for k in range(1, n + 1):\n        if lista_aumentada[k] > lista_aumentada[k - 1] and lista_aumentada[k - 1] >= lista_aumentada[k + 1]:\n            h += lista_aumentada[k] - lista_aumentada[k - 1]\n        elif lista_aumentada[k] > lista_aumentada[k + 1] and lista_aumentada[k + 1] >= lista_aumentada[k - 1]:\n            h += lista_aumentada[k] - lista_aumentada[k + 1]\n    print(fealdad_a_medias(lista) - h)", "iter = int(input())\nfor iters in range(iter):\n    n = int(input())\n    array = [int(i) for i in input().split(' ')]\n    if n == 1:\n        print(array[0])\n        continue\n    original_cost = 0\n    optimizable_cost = 0\n    original_cost = array[0]\n    if array[0] > array[1]:\n        optimizable_cost = array[0] - array[1]\n    for j in range(1, n - 1):\n        a = array[j - 1]\n        b = array[j]\n        c = array[j + 1]\n        original_cost += abs(a - b)\n        if b > max(a, c):\n            optimizable_cost += b - max(a, c)\n    b = array[n - 1]\n    a = array[n - 2]\n    original_cost += abs(a - b)\n    original_cost += b\n    if b > a:\n        optimizable_cost += b - a\n    print(original_cost - optimizable_cost)", "def task():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ur = 0\n    ur = +a[0]\n    for i in range(1, n):\n        ur += abs(a[i] - a[i - 1])\n    ur += a[n - 1]\n    if n == 1:\n        return ur - a[0]\n    if a[0] > a[1]:\n        ur -= a[0] - a[1]\n        a[0] = a[1]\n    for i in range(1, n - 1):\n        cut = min(a[i] - a[i - 1], a[i] - a[i + 1])\n        cut = max(0, cut)\n        ur -= cut\n        a[i] -= cut\n    if a[-1] > a[-2]:\n        ur -= a[-1] - a[-2]\n        a[-1] = a[-2]\n    return ur\nt = int(input())\nfor _ in range(t):\n    print(task())", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n == 1:\n        print(arr[0])\n    else:\n        s = arr[0] + arr[-1]\n        for i in range(n - 1):\n            s += abs(arr[i] - arr[i + 1])\n        l = []\n        if arr[0] > arr[1]:\n            s -= abs(arr[1] - arr[0])\n        if arr[-1] > arr[-2]:\n            s -= abs(arr[-1] - arr[-2])\n        for i in range(1, n - 1):\n            if arr[i - 1] < arr[i] > arr[i + 1]:\n                l.append(i)\n        for i in l:\n            s -= abs(arr[i] - max(arr[i - 1], arr[i + 1]))\n        print(s)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(w) for w in input().split(' ')]\n    if n == 1:\n        ans = arr[0]\n        print(ans)\n    else:\n        ans = arr[0] + arr[-1]\n        for i in range(1, n):\n            ans = ans + abs(arr[i] - arr[i - 1])\n        res = 0\n        for i in range(1, n - 1):\n            if arr[i] > arr[i + 1] and arr[i] > arr[i - 1]:\n                res = res + arr[i] - max(arr[i + 1], arr[i - 1])\n        if arr[0] > arr[1]:\n            res = res + arr[0] - arr[1]\n        if arr[-1] > arr[-2]:\n            res = res + arr[-1] - arr[-2]\n        print(ans - res)", "for s in [*open(0)][2::2]:\n    r = d = x = 0\n    for y in [*map(int, s.split()), 0]:\n        r -= min(max(0, x - y), max(0, d)) - abs((d := (y - x)))\n        x = y\n    print(r)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(item) for item in input().split()]\n    arr2 = [0]\n    arr2.extend(arr)\n    arr2.extend([0])\n    countops = 0\n    for i in range(1, len(arr2) - 1):\n        if arr2[i - 1] < arr2[i] and arr2[i + 1] < arr2[i]:\n            diff = min(arr2[i] - arr2[i - 1], arr2[i] - arr2[i + 1])\n            arr2[i] = arr2[i] - diff\n            countops += diff\n    count = 0\n    for i in range(len(arr2) - 1):\n        count += abs(arr2[i + 1] - arr2[i])\n    print(count + countops)", "import sys\n\ndef ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\ntc = int(input())\nwhile tc:\n    tc -= 1\n    n = int(input())\n    ls = ints()\n    ls = [0] + ls + [0]\n    (ans, gap) = (0, 0)\n    for i in range(1, n + 1):\n        if ls[i] > ls[i - 1] and ls[i] > ls[i + 1]:\n            ans += ls[i] - max(ls[i - 1], ls[i + 1])\n        gap += abs(ls[i] - ls[i - 1])\n    gap += ls[-2]\n    print(gap - ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [0] + a\n    a.append(0)\n    s = 0\n    for i in range(1, n + 1):\n        if a[i] > a[i - 1] and a[i] > a[i + 1]:\n            x = min(a[i] - a[i - 1], a[i] - a[i + 1])\n            s += x\n            a[i] = a[i] - x\n    for i in range(1, n + 2):\n        s += abs(a[i] - a[i - 1])\n    print(s)", "inp = int(input())\nfor _ in range(inp):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    a = [0] + a[:] + [0]\n    origugly = 0\n    for i in range(1, len(a)):\n        origugly += abs(a[i] - a[i - 1])\n    for i in range(1, len(a) - 1):\n        if a[i] > a[i + 1] and a[i] > a[i - 1]:\n            maxugly = max(a[i + 1], a[i - 1])\n            origugly -= a[i] - maxugly\n            a[i] = maxugly\n    print(origugly)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    s = [0]\n    s += list(map(int, input().split())) + [0]\n    c = 0\n    for i in range(1, n + 1):\n        if s[i - 1] <= s[i] >= s[i + 1]:\n            x = max(s[i - 1], s[i + 1])\n            c += s[i] - x\n            s[i] = x\n        c += abs(s[i] - s[i - 1])\n    print(c + s[-2])", "t = int(input())\nanswers = list()\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        if i == 0:\n            prev = 0\n        else:\n            prev = a[i - 1]\n        if i == n - 1:\n            next_ = 0\n            ans += a[i]\n        else:\n            next_ = a[i + 1]\n        curr = a[i]\n        ans += abs(curr - prev)\n        if curr > prev and curr > next_:\n            ans -= min(abs(curr - prev), abs(curr - next_))\n    answers.append(ans)\nfor k in range(t):\n    print(answers[k])", "for _ in range(int(input())):\n    l = [0]\n    n = int(input())\n    for i in input().split():\n        l.append(int(i))\n    l.append(0)\n    if n == 1:\n        print(l[1])\n        continue\n    ans = 0\n    for i in range(1, n + 1):\n        if l[i] > l[i - 1] and l[i] > l[i + 1]:\n            ans += l[i] - max(l[i - 1], l[i + 1])\n            l[i] = max(l[i - 1], l[i + 1])\n    for (i, j) in zip(l, l[1:]):\n        ans += abs(i - j)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = [0] + arr + [0]\n    ans = 0\n    for i in range(1, n + 1):\n        temp = max(arr[i - 1], arr[i + 1])\n        if arr[i] > temp:\n            ans += arr[i] - temp\n            arr[i] = temp\n    for i in range(n + 1):\n        ans += abs(arr[i + 1] - arr[i])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a = [0] + a + [0]\n    ans = 0\n    for i in range(1, n + 1):\n        diff = a[i] - max(a[i - 1], a[i + 1])\n        if diff > 0:\n            ans += diff\n            a[i] = a[i] - diff\n    for i in range(0, len(a) - 1):\n        ans += abs(a[i] - a[i + 1])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = l[0] + l[n - 1]\n    for i in range(0, n - 1):\n        c += abs(l[i] - l[i + 1])\n    for i in range(1, n - 1):\n        if l[i] > l[i - 1] and l[i] > l[i + 1]:\n            c -= l[i] - max(l[i + 1], l[i - 1])\n            l[i] = max(l[i + 1], l[i - 1])\n    if n >= 2 and l[0] > l[1]:\n        c -= l[0] - l[1]\n        l[0] = l[1]\n    if n >= 2 and l[n - 1] > l[n - 2]:\n        c -= l[n - 1] - l[n - 2]\n        l[n - 1] = l[n - 2]\n    if n == 1:\n        c -= l[0]\n    print(c)", "t = int(input())\nfor p in range(t):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    sum = 0\n    for i in range(n):\n        if i == 0:\n            sum += l[i]\n        else:\n            sum += abs(l[i] - l[i - 1])\n    sum += l[n - 1]\n    for i in range(1, n - 1):\n        if l[i - 1] < l[i] and l[i] > l[i + 1]:\n            sum -= abs(max(l[i - 1], l[i + 1]) - l[i])\n            l[i] = max(l[i - 1], l[i + 1])\n    if n > 1:\n        if l[1] < l[0]:\n            sum -= abs(l[0] - l[1])\n        if l[n - 1] > l[n - 2]:\n            sum -= abs(l[n - 1] - l[n - 2])\n    else:\n        sum = l[0]\n    print(sum)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ar = list(map(int, str(input()).split()))\n    cou = 0\n    if n == 1:\n        print(ar[0])\n        continue\n    for i in range(n):\n        if i == 0:\n            if ar[0] > ar[i + 1]:\n                cou += ar[0] - ar[1]\n                ar[0] = ar[i + 1]\n        elif i == n - 1:\n            if ar[i] > ar[i - 1]:\n                cou += ar[i] - ar[i - 1]\n                ar[i] = ar[i - 1]\n        elif ar[i] > ar[i - 1] and ar[i] > ar[i + 1]:\n            c = max(ar[i - 1], ar[i + 1])\n            cou += ar[i] - c\n            ar[i] = c\n    ans = ar[0] + ar[n - 1]\n    for i in range(0, n - 1):\n        ans += abs(ar[i] - ar[i + 1])\n    print(cou + ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(a[0])\n    elif n == 2:\n        print(2 * min(a[0], a[1]) + abs(a[0] - a[1]))\n    else:\n        ugly = 0\n        if a[0] > a[1]:\n            ugly += a[0] - a[1]\n            a[0] = a[1]\n        if a[n - 1] > a[n - 2]:\n            ugly += a[n - 1] - a[n - 2]\n            a[n - 1] = a[n - 2]\n        for i in range(1, n - 1):\n            if a[i] > a[i - 1] and a[i] > a[i + 1]:\n                ugly += a[i] - max(a[i - 1], a[i + 1])\n                a[i] = max(a[i - 1], a[i + 1])\n        ugly += a[0]\n        ugly += a[n - 1]\n        for i in range(1, n):\n            if a[i] != a[i - 1]:\n                ugly += abs(a[i] - a[i - 1])\n        print(ugly)"]