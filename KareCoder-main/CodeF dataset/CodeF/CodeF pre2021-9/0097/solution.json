["for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = {}\n    for i in range(n):\n        for j in range(i + 1, n):\n            c[a[j] - a[i]] = 1\n    print(len(c))", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    print(len(set((x[j] - x[i] for i in range(n) for j in range(i + 1, n)))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(len({abs(x - y) for x in a for y in a}) - 1)", "def solve():\n    n_trees = int(input())\n    nums = list(map(lambda x: int(x), input().split()))\n    areas = set()\n    for i in range(len(nums) - 1):\n        for j in range(i + 1, len(nums)):\n            areas.add(nums[j] - nums[i])\n    return f'{len(areas)}'\nn = int(input())\nfor i in range(n):\n    result = solve()\n    print(result)", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    nums = list(map(int, input().split()))\n    p = set()\n    for k in range(0, m):\n        for j in range(k + 1, m):\n            p.add(nums[j] - nums[k])\n    print(len(p))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    ans = set()\n    for j in range(len(x)):\n        for k in range(j + 1, len(x), 1):\n            ans.add(x[k] - x[j])\n    print(len(ans))\n    ans = set()", "for _ in [*open(0)][2::2]:\n    r = list(map(int, _.split()))\n    print(len(set((abs(i - j) for i in r for j in r if i != j))))", "import math\nfrom collections import defaultdict\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = defaultdict(int)\n    for j in range(n - 1):\n        for k in range(j + 1, n):\n            b[a[k] - a[j]] += 1\n    print(len(b))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [abs(i - j) for i in a for j in a if i != j]\n    x = set(ans)\n    print(len(x))", "def main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = set([arr[j] - arr[i] for i in range(n) for j in range(i + 1, n)])\n    print(len(ans))\nT = int(input())\nfor _ in range(T):\n    main()", "t = int(input())\nwhile t:\n    n = int(input())\n    s = input()\n    l = s.split(' ')\n    for i in range(n):\n        l[i] = int(l[i])\n    uni = set()\n    for i in range(n):\n        for j in range(i + 1, n):\n            uni.add(l[j] - l[i])\n    print(len(uni))\n    t -= 1", "for _ in range(int(input())):\n    (n, a) = (int(input()), list(map(int, input().split())))\n    cnt = len(set([a[j] - a[i] for i in range(0, n - 1) for j in range(i + 1, n)]))\n    print(cnt)", "for _ in range(int(input())):\n    n = int(input())\n    A = [int(x) for x in input().split()]\n    B = set()\n    for i in range(n):\n        for j in range(i + 1, n):\n            B.add(A[j] - A[i])\n    print(len(B))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(len({abs(x - y) for x in a for y in a}) - 1)", "def distinctArea(a):\n    b = []\n    for i in range(0, len(a) - 1):\n        for j in range(i + 1, len(a)):\n            b.append(a[j] - a[i])\n    return len(set(b))\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    print(distinctArea(a))", "for i in range(int(input())):\n    size = int(input())\n    v = list(map(int, input().split()))\n    aux = set()\n    for i in range(size):\n        for j in range(i + 1, size):\n            aux.add(abs(v[i] - v[j]))\n    print(len(aux))", "cases = int(input())\nfor case in range(cases):\n    n = int(input())\n    arveres = list(map(int, input().split(' ')))\n    diffs = {}\n    for i in range(len(arveres)):\n        for j in range(i, len(arveres)):\n            diffs[abs(arveres[j] - arveres[i])] = 'pigoca'\n    diffs.pop(0, None)\n    print(len(diffs))", "def func():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        point = list(map(int, input().strip().split()))\n        distance = []\n        for i in range(n - 1):\n            for j in range(i + 1, n):\n                distance.append(abs(point[i] - point[j]))\n        print(len(set(distance)))\nfunc()", "cases = int(input())\nfor case in range(cases):\n    n = int(input())\n    arveres = list(map(int, input().split(' ')))\n    diffs = {}\n    for i in range(len(arveres)):\n        for j in range(i, len(arveres)):\n            diffs[abs(arveres[j] - arveres[i])] = 'pigoca'\n    diffs.pop(0, None)\n    print(len(diffs))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = input().split()\n    lst = [int(i) for i in lst]\n    st = set()\n    for i in range(n):\n        for j in range(i + 1, n):\n            st.add(lst[j] - lst[i])\n    print(len(st))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(len({abs(x - y) for x in a for y in a}) - 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [abs(i - j) for i in a for j in a if i != j]\n    x = set(ans)\n    print(len(x))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    m = []\n    l.sort()\n    for i in range(0, n - 1):\n        for j in range(i + 1, n):\n            m.append(l[j] - l[i])\n    print(len(set(m)))\n    t -= 1", "for _ in range(0, int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    op = []\n    for i in range(0, n):\n        for j in range(i + 1, n):\n            op.append(a[j] - a[i])\n    print(len(set(op)))", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split(' ')))\n    s = set()\n    for i in range(n):\n        for j in range(i + 1, n):\n            s.add(x[j] - x[i])\n    print(len(s))", "for s in [*open(0)][2::2]:\n    l = [*map(int, s.split())]\n    print(len({abs(i - j) for i in l for j in l if i != j}))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            l.append(a[j] - a[i])\n    print(len(set(l)))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(len({abs(x - y) for x in a for y in a}) - 1)", "def method_1(arr, n):\n    s = set()\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            s.add(arr[j] - arr[i])\n    return len(s)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(method_1(arr, n))", "import math\ntestcase = int(input())\n\ndef enter():\n    rseq = input()\n    rseq = rseq.split(' ')\n    rseq = list(map(int, rseq))\n    return rseq\n\ndef area(coord):\n    area = []\n    for i in range(0, po - 1):\n        am = 0.5 * 1 * coord[i]\n        for j in range(i + 1, po):\n            amn = 0.5 * 1 * coord[j]\n            n = amn - am\n            area.append(n)\n    area = set(area)\n    return len(area)\nwhile testcase:\n    trees = int(input())\n    coord = enter()\n    po = len(coord)\n    result = area(coord)\n    print(result)\n    testcase -= 1", "import sys\nl = len\ns = set\np = input\nfrom itertools import combinations\nn = int(p())\nfor _ in range(n):\n    a = p()\n    b = list(map(int, p().split()))\n    x = l(s([abs(i - j) / 2 for (i, j) in combinations(b, 2)]))\n    print(x)", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    l = len(x)\n    b = []\n    for i in range(l - 1, 0, -1):\n        for j in range(0, i):\n            b.append(x[i] - x[j])\n    b = set(b)\n    print(len(b))", "def solve(arr):\n    n = len(arr)\n    diffs = [arr[i + 1] - arr[i] for i in range(n - 1)]\n    s = 0\n    sums = [0]\n    for i in diffs:\n        s += i\n        sums += [s]\n    st = set()\n    m = len(sums)\n    for l in range(m - 1):\n        for r in range(l + 1, m):\n            st |= {sums[r] - sums[l]}\n    return len(st)\nt = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    ans.append(solve(arr))\nfor i in ans:\n    print(i)", "t = int(input())\n\ndef solve():\n    n = int(input())\n    x = list(map(int, input().strip().split()))[:n]\n    ans = []\n    k = 0\n    for i in x:\n        k += 1\n        for j in x[k:]:\n            side = j - i\n            if side not in ans:\n                ans.append(side)\n    print(len(ans))\nwhile t > 0:\n    solve()\n    t -= 1", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    vals = set()\n    for (i, v) in enumerate(a):\n        for j in a[i + 1:]:\n            vals.add((j - v) / 2)\n    print(len(vals))\n\ndef main():\n    t = 1\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "from itertools import combinations\nout = []\nfor _ in range(int(input())):\n    m = input()\n    n = list(map(int, input().split()))\n    o = [abs(a - b) for (a, b) in combinations(n, 2)]\n    l = len(set(o))\n    out.append(l)\nfor i in out:\n    print(i)", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(len({abs(x - y) for x in a for y in a}) - 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = {abs(x - y) for x in a for y in a}\n    print(len(b) - 1)", "for _ in range(int(input())):\n    MySet = set()\n    N = int(input())\n    X = list(map(int, input().split()))\n    for i in range(N):\n        for j in range(i + 1, N):\n            MySet.add(X[j] - X[i])\n    print(len(MySet))", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    cnt = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            cnt.append(x[j] - x[i])\n    k = set(cnt)\n    print(len(k))", "for s in [*open(0)][2::2]:\n    l = [*map(int, s.split())]\n    print(len({abs(i - j) for i in l for j in l if i != j}))", "for p in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    st = set()\n    for i in range(n):\n        for j in range(i + 1, n):\n            st.add(a[j] - a[i])\n    print(len(st))", "from itertools import combinations\nfor _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    c = combinations(x, 2)\n    ans = set()\n    for i in c:\n        ans.add(i[1] - i[0])\n    print(len(ans))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = {abs(x - y) for x in a for y in a}\n    print(len(b) - 1)", "for i in range(int(input())):\n    n = int(input())\n    a = [*map(int, input().split())]\n    g = set()\n    for i in range(n):\n        for j in range(i + 1, n):\n            g.add(a[j] - a[i])\n    print(len(g))", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    d = {}\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if l[j] - l[i] not in d:\n                d[l[j] - l[i]] = 1\n                c += 1\n    print(c)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l2 = []\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            l2.append(l[j] - l[i])\n    print(len(set(l2)))", "t = int(input())\nfor inh in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = set()\n    a.sort(reverse=True)\n    for i in range(0, n - 1):\n        k = a[i]\n        for j in range(i + 1, n):\n            d = k - a[j]\n            ans.add(d)\n    print(len(ans))", "for _ in range(int(input())):\n    n = int(input())\n    (*l,) = map(int, input().split())\n    (l1, l2) = ([], [])\n    for i in range(1, n):\n        l1.append(0.5 * (l[i] - l[i - 1]))\n    for i in range(n - 1):\n        a = 0\n        for j in l1[i:]:\n            a += j\n            l2.append(a)\n    print(len(set(l2)))", "for _ in range(int(input())):\n    n = int(input())\n    a = 0\n    l1 = []\n    for i in map(int, input().split()):\n        l1.append(0.5 * (i - a))\n        a = i\n    for i in range(1, n):\n        a = 0\n        for j in range(i, n):\n            a += l1[j]\n            l1.append(a)\n    print(len(set(l1[1:])))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    l = []\n    for i in range(len(lst)):\n        for j in range(i + 1, len(lst)):\n            l.append(lst[j] - lst[i])\n    print(len(set(l)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    s = set()\n    for i in range(0, n - 1):\n        for j in range(i + 1, n):\n            s.add(x[j] - x[i])\n    print(len(s))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    s = set()\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            s.add((a[j] - a[i]) / 2)\n    print(len(s))", "test = int(input())\nwhile test > 0:\n    test -= 1\n    n = int(input())\n    lst = list(map(int, input().split()))\n    tranf = {}\n    rs = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if (lst[j] - lst[i] in tranf) == False:\n                tranf[lst[j] - lst[i]] = 1\n                rs += 1\n    print(rs)", "import sys\n\ndef geti(a):\n    return int(float(a))\ntest = geti(input())\ntmp = ''\nl = []\nf = []\nwhile test:\n    n = geti(input())\n    tmp = input().split()\n    l = []\n    f = []\n    l = list(tmp)\n    for i in range(0, n):\n        l[i] = geti(l[i])\n    for i in range(0, n - 1):\n        for j in range(i + 1, n):\n            f.append(abs(l[j] - l[i]))\n    f = list(set(f))\n    print(len(f))\n    test -= 1\nsys.exit()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    x = int(input())\n    y = list(map(int, input().split()))\n    z = []\n    for i in range(x - 1):\n        for j in range(i + 1, x):\n            z.append(abs(y[i] - y[j]))\n    print(len(list(set(z))))", "from itertools import combinations\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    lst = list(map(int, input().split()))\n    area = []\n    main = []\n    area = list(combinations(lst, 2))\n    for i in area:\n        main.append(abs(i[0] - i[1]))\n    main = set(main)\n    print(len(main))\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    print(len(set((abs(i - j) for i in x for j in x if i != j))))", "for _ in range(int(input())):\n    m = int(input())\n    x = []\n    p = list(map(int, input().split()))\n    for i in range(m - 1):\n        for j in range(i + 1, m):\n            x.append((p[j] - p[i]) / 2)\n    a = set(x)\n    print(len(a))", "t = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = [abs(i - j) for i in a for j in a if i != j]\n    ans = set(x)\n    print(len(ans))", "t = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = [abs(i - j) for i in a for j in a if i != j]\n    ans = set(x)\n    print(len(ans))", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    b = list()\n    ar.reverse()\n    for i in range(n):\n        for j in range(i + 1, n):\n            b.append((ar[i] - ar[j]) / 2)\n    print(len(set(b)))", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    b = list()\n    ar.reverse()\n    for i in range(n):\n        for j in range(i + 1, n):\n            b.append((ar[i] - ar[j]) / 2)\n    print(len(set(b)))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = set()\n    for i in range(len(arr) - 1):\n        for j in range(i, len(arr)):\n            diff = abs(arr[j] - arr[i])\n            s.add(diff)\n    if 0 in s:\n        s.remove(0)\n    if len(s) > 0:\n        print(len(list(s)))\n    else:\n        print(0)\n    t -= 1", "for t in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n        continue\n    r = set()\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            r.add(s[j] - s[i])\n    print(len(r))", "def fun(ls):\n    st = set()\n    for i in range(len(ls)):\n        for j in range(i + 1, len(ls)):\n            st.add(abs(ls[i] - ls[j]) / 2)\n    print(len(st))\nT = int(input())\nfor i in range(T):\n    t = int(input())\n    ls = list(map(int, input().split()))\n    fun(ls)", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    s = set()\n    for i in range(0, n):\n        for j in range(i + 1, n):\n            s.add(p[i] - p[j])\n    print(len(s))", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    b = set()\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            b.add(x[j] - x[i])\n    print(len(b))", "for p in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    st = set()\n    for i in range(n):\n        for j in range(i + 1, n):\n            st.add(a[j] - a[i])\n    print(len(st))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = set()\n    for i in range(len(a) - 1):\n        b = [a[j] - a[i] for j in range(i + 1, len(a))]\n        ans = ans | set(b)\n    print(len(ans))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = set()\n    for i in range(n):\n        for j in range(i + 1, n):\n            b.add(a[j] - a[i])\n    print(len(b))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    b = set()\n    l.sort()\n    for i in range(len(l)):\n        for j in range(i + 1, len(l)):\n            b.add(l[j] - l[i])\n    print(len(b))", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    n_list = list(map(int, input().split()))\n    s = {}\n    s = set(s)\n    for i in range(n):\n        for j in n_list[i + 1:]:\n            s.add(abs(n_list[i] - j))\n    print(len(s))", "t = int(input())\nanswers = []\nfor i in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    set = {0}\n    for j in range(n - 1):\n        for k in range(j + 1, n):\n            set.add(x[k] - x[j])\n    answers.append(len(set) - 1)\nfor answer in answers:\n    print(answer)", "for _ in range(int(input())):\n    n = int(input())\n    trees = list(map(int, input().split()))\n    s = set()\n    for i in range(n):\n        for j in range(i + 1, n):\n            s.add(trees[j] - trees[i])\n    print(len(s))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    area = set()\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr[j] - arr[i] not in area:\n                area.add(arr[j] - arr[i])\n    print(len(area))", "mas = list(map(int, input().split()))\nt = mas[0]\nfor j in range(t):\n    mas = list(map(int, input().split()))\n    l = mas[0]\n    mas = list(map(int, input().split()))\n    s = set()\n    for i in range(l):\n        for j in range(l):\n            if i < j:\n                s.add(abs(mas[i] - mas[j]))\n    print(len(s))", "tC = int(input())\nfor __ in range(tC):\n    N = int(input())\n    Cxy = list(map(int, input().split()))\n    S = set()\n    for i in range(N):\n        for j in range(i + 1, N):\n            S.add(Cxy[j] - Cxy[i])\n    print(len(S))", "k = int(input())\nwhile k > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    arr = []\n    arr = [0 for i in range(51)]\n    answ = 0\n    for i in range(0, n - 1):\n        for j in range(i + 1, n):\n            dif = l[j] - l[i]\n            if arr[dif] == 0:\n                answ = answ + 1\n                arr[dif] += 1\n    print(answ)\n    k = k - 1", "t = int(input())\nj = 0\nwhile j < t:\n    dif = []\n    n = int(input())\n    cox = list(map(int, input().split()))\n    for x in cox:\n        i = cox.index(x)\n        while i != n - 1:\n            dif.append(cox[i + 1] - x)\n            i += 1\n    d = list(dict.fromkeys(dif))\n    print(len(d))\n    j += 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    areas = []\n    for i in a:\n        for j in a:\n            if i != j:\n                areas.append(abs(i - j))\n    print(len(set(areas)))\n    t -= 1", "from math import ceil, gcd\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom array import array\nfrom collections import Counter as ctr\n\ndef li():\n    return list(map(int, input().split()))\n\ndef arr(a):\n    return array('i', a)\n\ndef solve():\n    for _ in range(int(input())):\n        n = int(input())\n        x = li()\n        ar = set()\n        for i in range(n - 1):\n            for j in range(i + 1, n):\n                if (x[j] - x[i]) / 2 not in ar:\n                    ar.add((x[j] - x[i]) / 2)\n        print(len(ar))\nsolve()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    aux = []\n    for k in range(n - 1):\n        for j in range(k + 1, n):\n            x = l[j] - l[k]\n            if x not in aux:\n                aux.append(x)\n    print(len(aux))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    aux = []\n    for k in range(n - 1):\n        for j in range(k + 1, n):\n            x = l[j] - l[k]\n            if x not in aux:\n                aux.append(x)\n    print(len(aux))", "def calculate_triangles(n, coordinates):\n    areas = []\n    for i in range(n):\n        for j in range(i, n):\n            area = abs(coordinates[i] - coordinates[j]) * 1 / 2\n            if area not in areas:\n                areas.append(area)\n    return len(areas) - 1\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    coordinates = list((int(num) for num in input().split(' ')))\n    print(calculate_triangles(n, coordinates))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lista = list(map(int, input().split()))\n    x = []\n    for j in range(n):\n        if j != n - 1:\n            for k in range(j + 1, n):\n                dif = lista[k] - lista[j]\n                if dif not in x:\n                    x.append(dif)\n    print(len(x))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    areas = []\n    arvores = [int(x) for x in input().split()]\n    for j in range(n):\n        for k in range(j + 1, n):\n            diferenca = arvores[k] - arvores[j]\n            if diferenca not in areas:\n                areas.append(diferenca)\n    print(len(areas))", "def find(arr):\n    if len(arr) == 1:\n        return\n    for x in range(1, len(arr)):\n        if not arr[x] - arr[0] in sol:\n            sol.append(arr[x] - arr[0])\n    find(arr[1:])\nt = int(input())\nfor o in range(t):\n    input()\n    trees = [int(x) for x in input().split()]\n    sol = []\n    find(trees)\n    print(len(sol))", "for _ in range(int(input())):\n    n = int(input())\n    line = [int(c) for c in input().split()]\n    line1 = []\n    k = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if line[j] - line[i] not in line1:\n                line1.append(line[j] - line[i])\n                k += 1\n    print(k)", "import math\nimport sys\nimport itertools\nimport fractions\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nfor t in [wtf[i:i + 2] for i in range(1, len(wtf), 2)]:\n    n = int(t[0])\n    X = list(map(int, t[1].split()))\n    tmp = []\n    for (i, x) in enumerate(X):\n        for j in range(i + 1, n):\n            tmp.append(X[j] - x)\n    print(len(set(tmp)))", "s = ''\nfor i in range(int(input())):\n    input()\n    a = [int(i) for i in input().split()]\n    x = set({})\n    for j in range(len(a) - 1):\n        for k in range(j + 1, len(a)):\n            x.add(abs(a[j] - a[k]) / 2)\n    s = s + str(len(x)) + '\\n'\nprint(s)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    co = 0\n    la = []\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            p = l[j] - l[i]\n            if p not in la:\n                la.append(p)\n                co += 1\n    print(co)", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    list1 = [int(num) for num in input().split()]\n    c = 0\n    bases = []\n    for i in range(0, len(list1) - 1):\n        for j in range(i + 1, len(list1)):\n            diff = list1[j] - list1[i]\n            if diff not in bases:\n                bases.append(diff)\n                c += 1\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().strip().split()))\n    ans = 0\n    edges = set()\n    for j in range(n):\n        k = 1\n        while j + k < n:\n            if arr[j + k] - arr[j] not in edges:\n                edges.add(arr[j + k] - arr[j])\n                ans += 1\n            k += 1\n    print(ans)", "n = int(input())\nfor t in range(n):\n    x = int(input())\n    l = list(map(int, input().split()))\n    result = set()\n    for i in range(len(l)):\n        for j in range(i + 1, len(l)):\n            result.add(0.5 * (l[j] - l[i]))\n    print(len(result))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    answers = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            answers.append(0.5 * abs(a[j] - a[i]))\n    print(len(set(answers)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    points = [int(x) for x in input().split()]\n    area = []\n    a = n * (n - 1) / 2\n    co = 0\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            p = points[j] - points[i]\n            if p not in area:\n                area.append(p)\n                co += 1\n    print(co)", "num = int(input())\nfor i in range(num):\n    n = int(input())\n    arr = input()\n    arr = arr.split(' ')\n    arr = [int(x) for x in arr]\n    result = []\n    for j in range(n - 1):\n        for k in range(j + 1, n):\n            if (arr[k] - arr[j]) / 2 not in result:\n                result.append((arr[k] - arr[j]) / 2)\n    print(len(result))"]