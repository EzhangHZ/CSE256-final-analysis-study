["for _ in range(int(input())):\n    n = int(input())\n    print(n // 2 + 1)", "import sys\nfrom math import *\nfor _ in range(int(input())):\n    print(int(input()) // 2 + 1)", "for s in [*open(0)][1:]:\n    print(int(s) // 2 + 1)", "for s in [*open(0)][1:]:\n    print(int(s) // 2 + 1)", "def miis():\n    return map(int, input().split())\nfor _ in range(int(input())):\n    n = int(input())\n    print(n // 2 + 1)", "t = int(input())\nwhile t:\n    n = int(input())\n    print(n // 2 + 1)\n    t -= 1", "for i in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        print(n // 2 + 1)\n    else:\n        print(n // 2 + 1)\n1 - 1\n2 - 2\n3 - 2\n4 - 3\n5 - 3\n6 - 4\n7 - 4\n8 - 5\n9 - 5\n10 - 6\n11 - 6", "def get_primeFactor(n):\n    res = [1]\n    x = 2\n    while x * x <= n:\n        while n % x == 0:\n            res.append(x)\n            n //= x\n        x += 1\n    if n > 1:\n        res.append(n)\n    return res\n\ndef getFactor(n):\n    res = {1}\n    x = 2\n    while x * x <= n:\n        if n % x == 0:\n            res.add(x)\n            res.add(n // x)\n        x += 1\n    return res\nfor _ in range(int(input())):\n    n = int(input())\n    print(n // 2 + 1)", "for t in range(int(input())):\n    a = int(input())\n    print(a // 2 + 1)", "for s in [*open(0)][1:]:\n    print(int(s) // 2 + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(int(n / 2 + 1))", "for s in [*open(0)][1:]:\n    print(int(s) // 2 + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n <= 2:\n        print(n)\n    elif n % 2 == 1:\n        print((n + 1) // 2)\n    else:\n        print((n + 2) // 2)", "i = int(input())\nfor _ in range(0, i):\n    print(int(input()) // 2 + 1)", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    print(n // 2 + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(n // 2 + 1)", "import math\nt = int(input(''))\nfor i in range(t):\n    n = int(input(''))\n    print(n // 2 + 1)", "t = eval(input())\nfor i in range(t):\n    n = eval(input())\n    print(n // 2 + 1)", "t1 = int(input())\nfor _ in range(t1):\n    n = int(input())\n    print(n // 2 + 1)", "for _ in range(int(input())):\n    n = int(input())\n    c = 0\n    if n % 2 == 0:\n        c += 1\n    print(n - n // 2 + c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 1:\n        print(1)\n    elif n > 1:\n        print(n // 2 + 1)", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    print(n // 2 + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(n // 2 + 1)", "for _ in range(int(input())):\n    n = int(input())\n    print(n // 2 + 1)", "for _ in range(int(input())):\n    n = int(input())\n    print(n // 2 + 1)", "for s in [*open(0)][1:]:\n    print(int(s) // 2 + 1)", "for _ in range(int(input())):\n    print(int(input()) // 2 + 1)", "for i in range(int(input())):\n    n = int(input())\n    print(n // 2 + 1)", "n = int(input())\nfor i in range(0, n):\n    n = n - 1\n    m = int(input())\n    print(m // 2 + 1)", "for _ in range(int(input())):\n    print(int(input()) // 2 + 1)", "for i in range(int(input())):\n    print(int(input()) // 2 + 1)", "for s in [*open(0)][1:]:\n    print(int(s) // 2 + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    res = n // 2 + 1\n    print(res)", "def solve():\n    n = int(input())\n    return n // 2 + 1\nT = int(input())\nfor i in range(T):\n    print(solve())", "n_sets = int(input())\nfor i in range(n_sets):\n    n = int(input())\n    print(n // 2 + 1)", "t = int(input())\ntemp_arr = []\nfor i in range(t):\n    n = int(input())\n    min_blocks = n // 2 + 1\n    temp_arr.append(min_blocks)\nfor j in temp_arr:\n    print(j)", "T = int(input())\nwhile T != 0:\n    n = int(input())\n    print(int(n / 2 + 1))\n    T -= 1", "ans_list = []\nfor i in range(int(input())):\n    grid_size = int(input())\n    min_turns = int(grid_size / 2 + 1)\n    ans_list.append(min_turns)\nfor i in ans_list:\n    print(i)", "for t in range(int(input())):\n    n = int(input())\n    print(n // 2 + 1)", "for x in range(int(input())):\n    print(int(input()) // 2 + 1)", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    if n == 1:\n        print(1)\n    else:\n        print(n // 2 + 1)", "for _ in range(int(input())):\n    print(int(input()) // 2 + 1)", "import math\nt = input()\nt = int(t)\nfor i in range(t):\n    n = input()\n    n = int(n)\n    count = 0\n    if n == 1:\n        print(1)\n        continue\n    if n == 2:\n        print(2)\n        continue\n    x = int(n / 2)\n    print(x + 1)", "import math\ncases = int(input())\nwhile cases:\n    cases -= 1\n    num = int(input())\n    print(math.ceil((num + 1) / 2))", "for _ in range(int(input())):\n    n = int(input())\n    print(int(n / 2) + 1)", "for _ in range(int(input())):\n    print(int(input()) // 2 + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(n // 2 + 1)", "for _ in range(int(input())):\n    n = int(input())\n    print(int(n / 2) + 1)", "n = int(input())\nside = list()\nfor j in range(n):\n    side.append(int(input()))\nfor j in range(n):\n    if side[j] % 2 == 0:\n        print((side[j] + 2) // 2)\n    else:\n        print(side[j] // 2 + 1)", "s = input()\nwhile True:\n    try:\n        s = int(input())\n        print(s // 2 + 1)\n    except:\n        break", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(int(1 / 4 * (2 * n + (-1) ** n + 3)))", "for i in range(int(input())):\n    num = int(input())\n    print(num // 2 + 1)", "for t in range(int(input())):\n    n = int(input())\n    print(n // 2 + 1)", "for i in [*open(0)][1:]:\n    print(int(i) // 2 + 1)", "import sys\nT = int(sys.stdin.readline())\nfor i in range(T):\n    N = int(sys.stdin.readline())\n    print(int(N / 2) + 1)", "for _ in range(int(input())):\n    print(int(input()) // 2 + 1)", "for _ in range(int(input())):\n    print(int(input()) // 2 + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(n // 2 + 1)", "for _ in range(int(input())):\n    print(int(input()) // 2 + 1)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 1:\n        print(1)\n    else:\n        if n % 2 != 0:\n            n -= 1\n        q = n // 2 + 1\n        print(q)", "testCases = int(input())\nfor x in range(testCases):\n    gridSize = int(input())\n    print(gridSize // 2 + 1)", "for _ in range(int(input())):\n    print(int(input()) // 2 + 1)", "def J1():\n    t = int(input())\n    ans = []\n    for _ in range(t):\n        n = int(input())\n        ans.append(int(n / 2) + 1)\n    for i in ans:\n        print(i)\nJ1()", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    print(int(n / 2 + 1))\n    t -= 1", "testCases = int(input())\nanswers = []\nfor i in range(0, testCases):\n    num1 = int(input())\n    answers.append(num1 // 2 + 1)\nfor i in answers:\n    print(i)", "for x in range(int(input())):\n    n = int(input())\n    print(n // 2 + 1)", "for i in range(int(input())):\n    n = int(input())\n    print(int(n / 2) + 1)", "for i in [*open(0)][1:]:\n    print(int(i) // 2 + 1)", "def f():\n    n = int(input(''))\n    print(n // 2 + 1)\nb = int(input(''))\nfor i in range(b):\n    f()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(n // 2 + 1)", "t = int(input())\nwhile t:\n    n = int(input())\n    print(n // 2 + 1)\n    t -= 1", "for s in [*open(0)][1:]:\n    print(int(s) // 2 + 1)", "res = []\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    res.append(n // 2 + 1)\nfor x in res:\n    print(x)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(n // 2 + 1)", "PI = 3.141592653589793\nINF = float('inf')\nMOD = 1000000007\n\ndef add(x, y):\n    return (x + y) % MOD\n\ndef sub(x, y):\n    return (x - y + MOD) % MOD\n\ndef mul(x, y):\n    return x * y % MOD\n\ndef gcd(x, y):\n    if y == 0:\n        return x\n    return gcd(y, x % y)\n\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\ndef power(x, y):\n    res = 1\n    x %= MOD\n    while y != 0:\n        if y & 1:\n            res = mul(res, x)\n        y >>= 1\n        x = mul(x, x)\n    return res\n\ndef mod_inv(n):\n    return power(n, MOD - 2)\n\ndef prob(p, q):\n    return mul(p, power(q, MOD - 2))\n\ndef ii():\n    return int(input())\n\ndef li():\n    return [int(i) for i in input().split()]\n\ndef ls():\n    return [i for i in input().split()]\nfor t in range(ii()):\n    t += 1\n    n = ii()\n    print((n + 2) // 2)", "for i in range(int(input())):\n    print(int(input()) // 2 + 1)", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    if n % 2 != 0:\n        n -= 1\n    print(n // 2 + 1)", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        print(n // 2 + 1)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    print(n // 2 + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(n // 2 + 1)", "for _ in range(0, int(input())):\n    print((int(input()) + 2) // 2)", "from math import *\nfrom math import factorial as fact, comb as ncr\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom array import array\nfrom collections import Counter as ctr\nfrom collections import deque as dq\nfrom re import search\nli = lambda : list(map(int, input().split()))\narr = lambda a: array('i', a)\nbi = lambda n: bin(n).replace('0b', '')\nyn = lambda f: print('NYOE S'[f::2])\nsbstr = lambda a, s: search('.*'.join(a), s)\n\ndef solve():\n    for _ in range(int(input())):\n        n = int(input())\n        print(n // 2 + 1)\nsolve()", "import math\nimport sys\nimport itertools\nimport fractions\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nfor t in wtf[1:]:\n    n = int(t)\n    (q, r) = divmod(n, 2)\n    r = 1 if r == 0 else r\n    print(q + r)", "for s in [*open(0)][1:]:\n    print(int(s) // 2 + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(int(n / 2) + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 1:\n        print(n)\n    else:\n        print(n // 2 + 1)", "a = int(input())\nfor i in range(a):\n    b = int(input())\n    print(b // 2 + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(int(n / 2) + 1)", "t = int(input())\nfor i in range(t):\n    print(int(input()) // 2 + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(n // 2 + 1)", "t = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    print(n // 2 + 1)", "t = int(input())\nwhile t:\n    n = int(input())\n    print(int(n / 2) + 1)\n    t -= 1", "for i in range(int(input())):\n    n = int(input())\n    print(n // 2 + 1)", "for s in [*open(0)][1:]:\n    print(int(s) // 2 + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(n // 2 + 1)", "t = int(input())\nfor inh in range(0, t):\n    n = int(input())\n    ans = n // 2 + 1\n    print(ans)", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    print(int(input()) // 2 + 1)", "import sys, math\ninput = sys.stdin.readline\nt = int(input())\nfor r in range(t):\n    n = int(input())\n    if n == 1:\n        print(1)\n    else:\n        print(n // 2 + 1)", "for i in range(int(input())):\n    n = int(input())\n    print(n // 2 + 1)"]