["for fol in [*open(0)][1:]:\n    (ba, lk) = fol.split()\n    lk = int(lk)\n    while lk > 1 and '0' not in ba:\n        ba = str(int(ba) + int(min(ba)) * int(max(ba)))\n        lk -= 1\n    print(ba)", "t = int(input())\nans = []\nfor x in range(t):\n    inp = list(map(int, input().split()))\n    n = str(inp[0])\n    m = list(n)\n    k = inp[1]\n    for y in range(k - 1):\n        if '0' in m:\n            break\n        else:\n            n = str(int(n) + int(max(m)) * int(min(m)))\n            m = list(n)\n    ans.append(n)\nfor a in ans:\n    print(a)", "def solve():\n    (a1, k) = map(int, input().split())\n    for i in range(k - 1):\n        v = [int(i) for i in str(a1)]\n        a1 = a1 + min(v) * max(v)\n        if 0 in v:\n            print(a1)\n            return\n    print(a1)\nfor i in range(int(input())):\n    solve()", "t = int(input())\nfor i in range(t):\n    (a, k) = input().split()\n    k1 = int(k)\n    while k1 > 1 and '0' not in a:\n        a = str(int(a) + int(min(a)) * int(max(a)))\n        k1 -= 1\n    print(a)", "t = int(input())\nwhile t:\n    (a, k) = input().split()\n    k = int(k)\n    while k > 1 and '0' not in a:\n        a = str(int(a) + int(min(a)) * int(max(a)))\n        k -= 1\n    print(a)\n    t -= 1", "for _ in range(int(input())):\n    (a, k) = map(int, input().split())\n    for i in range(k - 1):\n        b = list(str(a))\n        if min(b) == '0':\n            break\n        a += int(min(b)) * int(max(b))\n    print(a)", "for p in range(int(input())):\n    (a, b) = map(int, input().split())\n    if b == 1:\n        print(a)\n    else:\n        (b, c) = (b - 1, a)\n        for i in range(b):\n            s = str(c)\n            s = sorted(s)\n            if int(s[0]) == 0:\n                break\n            c += int(s[0]) * int(s[len(s) - 1])\n        print(c)", "test_cases = int(input())\nfor i in range(test_cases):\n    (a1, k) = map(int, input().split(' '))\n    for e in range(k - 1):\n        largest = int(max(str(a1)))\n        smallest = int(min(str(a1)))\n        if smallest != 0:\n            a1 += largest * smallest\n        else:\n            break\n    print(a1)", "for _ in range(int(input())):\n    (a, k) = map(int, input().split())\n    s = 0\n    for i in range(k - 1):\n        b = str(a)\n        x = int(min(b))\n        y = int(max(b))\n        a = a + x * y\n        if '0' in b:\n            break\n    print(a)", "t = int(input())\nfor i in range(t):\n    (a, k) = input().split()\n    k1 = int(k)\n    while k1 > 1 and '0' not in a:\n        a = str(int(a) + int(min(a)) * int(max(a)))\n        k1 -= 1\n    print(a)", "for fool in [*open(0)][1:]:\n    (bala, lkj) = fool.split()\n    lkj = int(lkj)\n    while lkj > 1 and '0' not in bala:\n        bala = str(int(bala) + int(min(bala)) * int(max(bala)))\n        lkj -= 1\n    print(bala)", "for _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    curr = 1\n    while curr < r:\n        curr += 1\n        (high, low) = (max(str(n)), min(str(n)))\n        incr = (ord(high) - ord('0')) * (ord(low) - ord('0'))\n        if not incr:\n            break\n        n += incr\n    print(n)", "t = int(input())\nfor _ in range(t):\n    (a, k) = [int(i) for i in input().strip().split()]\n    for i in range(k - 1):\n        s = str(a)\n        mn = int(min(s))\n        mx = int(max(s))\n        if mn == 0:\n            break\n        a = a + mn * mx\n    print(a)", "for _ in range(int(input())):\n    (a, b) = input().split()\n    b2 = int(b)\n    while b2 > 1 and '0' not in a:\n        a = str(int(a) + int(min(a)) * int(max(a)))\n        b2 -= 1\n    print(a)", "for _ in range(int(input())):\n    (a, k) = map(int, input().split())\n    for j in range(k - 1):\n        mn = min(str(a))\n        if mn == '0':\n            break\n        mx = max(str(a))\n        a = a + int(mn) * int(mx)\n    print(a)", "t = int(input())\nfor _ in range(t):\n    (a, k) = map(int, input().split())\n    for _ in range(k - 1):\n        b = a + int(max(str(a))) * int(min(str(a)))\n        if b == a:\n            break\n        a = b\n    print(a)", "for s in [*open(0)][1:]:\n    (a, k) = s.split()\n    k = int(k)\n    while k > 1 and '0' not in a:\n        a = str(int(a) + int(min(a)) * int(max(a)))\n        k -= 1\n    print(a)", "for j in range(int(input())):\n    (a, k) = map(int, input().split())\n    t = 1\n    for i in range(k - 1):\n        a1 = str(a)\n        if '0' in a1:\n            break\n        a += int(max(a1)) * int(min(a1))\n    print(a)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    while k > 1:\n        var = int(max(str(n))) * int(min(str(n)))\n        if var == 0:\n            break\n        n = n + var\n        k -= 1\n    print(n)", "import math\n\ndef solve():\n    (a, k) = map(int, input().split())\n    d = list(str(a))\n    minimal = int(min(d))\n    step = 1\n    while step < k and minimal != 0:\n        step += 1\n        dig = list(str(a))\n        minimal = int(min(dig))\n        maximal = int(max(dig))\n        a = a + minimal * maximal\n    return a\nt = int(input())\nwhile t > 0:\n    t -= 1\n    print(solve())", "for i in range(int(input())):\n    (a, k) = input().split()\n    k = int(k)\n    while k > 1 and '0' not in a:\n        a = str(int(a) + int(min(a)) * int(max(a)))\n        k -= 1\n    print(a)", "for s in [*open(0)][1:]:\n    (a, k) = s.split()\n    k = int(k)\n    while k > 1 and '0' not in a:\n        a = str(int(a) + int(min(a)) * int(max(a)))\n        k -= 1\n    print(a)", "for _ in [0] * int(input()):\n    (a, k) = map(int, input().split())\n    while '0' not in str(a) and k > 1:\n        x = list(map(int, str(a)))\n        a = a + min(x) * max(x)\n        k = k - 1\n    print(a)", "for _ in range(int(input())):\n    (a, k) = map(int, input().split())\n    for i in range(k - 1):\n        s = str(a)\n        m = int(min(s))\n        M = int(max(s))\n        if m == 0:\n            break\n        a += m * M\n    print(a)", "def get_inc(x):\n    nums = sorted(list(str(x)))\n    return int(nums[0]) * int(nums[-1])\n\ndef get_ans(x, k):\n    t = 1\n    while t < k:\n        inc = get_inc(x)\n        if inc == 0:\n            return x\n        x += inc\n        t += 1\n    return x\nt = int(input())\nfor _ in range(t):\n    (x, k) = (int(_) for _ in input().split())\n    print(get_ans(x, k))", "for _ in range(int(input())):\n    (a, k) = map(int, input().split())\n    for i in range(k - 1):\n        m = list(str(a))\n        (mn, mx) = (int(min(m)), int(max(m)))\n        if 0 in (mn, mx):\n            break\n        a = a + mn * mx\n    print(a)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    while k > 1:\n        var = int(max(str(n))) * int(min(str(n)))\n        if var == 0:\n            break\n        n = n + var\n        k -= 1\n    print(n)", "for t in range(int(input())):\n    (n1, k) = map(int, input().split())\n    a = n1\n    for i in range(k - 1):\n        b = str(a)\n        if '0' in b:\n            break\n        a = a + int(min(b)) * int(max(b))\n    print(a)", "t = int(input())\nfor _ in range(t):\n    (a, k) = map(int, input().split())\n    for i in range(k - 1):\n        x = str(a)\n        if min(x) == '0':\n            break\n        else:\n            a += int(min(x)) * int(max(x))\n    print(a)", "t = int(input())\nfor i in range(t):\n    (a, k) = input().split()\n    k0 = 1\n    k = int(k)\n    while k0 < k:\n        if min(a) == '0':\n            break\n        a = str(int(a) + int(max(a)) * int(min(a)))\n        k0 += 1\n    print(a)", "from math import ceil, gcd\nfrom math import factorial as fact, comb as ncr\nfrom math import sqrt\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom array import array\nfrom collections import Counter as ctr\nfrom collections import deque as dq\n\ndef li():\n    return list(map(int, input().split()))\n\ndef arr(a):\n    return array('i', a)\n\ndef solve():\n    for _ in range(int(input())):\n        (a, k) = input().split()\n        k = int(k)\n        while k > 1 and '0' not in a:\n            a = str(int(a) + int(max(a)) * int(min(a)))\n            k -= 1\n        print(a)\nsolve()", "from sys import setrecursionlimit\nsetrecursionlimit(1200)\n\ndef fun(a, n):\n    if n == 1:\n        return a\n    if int(min(str(a))) == 0:\n        return a\n    return fun(a + int(max(str(a))) * int(min(str(a))), n - 1)\nt = int(input())\nfor _ in range(t):\n    (a, k) = map(int, input().split())\n    print(fun(a, k))", "from sys import setrecursionlimit\nsetrecursionlimit(1200)\n\ndef fun(a, n):\n    if n == 1:\n        return a\n    if int(min(str(a))) == 0:\n        return a\n    return fun(a + int(max(str(a))) * int(min(str(a))), n - 1)\nt = int(input())\nfor _ in range(t):\n    (a, k) = map(int, input().split())\n    print(fun(a, k))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    for i in range(0, k - 1):\n        n += int(min(list(str(n)))) * int(max(list(str(n))))\n        if '0' in str(n):\n            break\n    print(n)", "for _ in range(int(input())):\n    (a, k) = map(int, input().split())\n    l = [a]\n    for i in range(k - 1):\n        a = a + int(max(str(a))) * int(min(str(a)))\n        l.append(a)\n        if min(str(a)) == '0' or (len(l) > 2 and l[-1] == l[-2]):\n            break\n    print(l[-1])", "t = int(input())\nfor _ in range(t):\n    inp = input().split()\n    a = int(inp[0])\n    k = int(inp[1])\n    k -= 1\n    while k > 0:\n        if min(str(a)) == '0':\n            break\n        a += int(min(str(a))) * int(max(str(a)))\n        k -= 1\n    print(a)", "t = int(input())\nfor i in range(t):\n    (a1, k) = list(map(int, input().split()))\n    a = a1\n    for j in range(0, k - 1):\n        if int(min(str(a))) == 0:\n            break\n        else:\n            a += int(max(str(a))) * int(min(str(a)))\n    print(a)", "t = int(input())\nfor i in range(t):\n    (a1, k) = list(map(int, input().split()))\n    a = a1\n    for j in range(0, k - 1):\n        if int(min(str(a))) == 0:\n            break\n        else:\n            p = int(max(str(a)))\n            g = int(min(str(a)))\n            a += p * g\n    print(a)", "t = int(input())\nfor i in range(t):\n    (x, k) = list(map(int, input().split()))\n    a = x\n    for j in range(k - 1):\n        if int(min(str(a))) == 0:\n            break\n        else:\n            a += int(max(str(a))) * int(min(str(a)))\n    print(a)", "n = int(input())\nfor i in range(n):\n    (x, k) = list(map(int, input().split()))\n    a = x\n    for j in range(k - 1):\n        if int(min(str(a))) == 0:\n            break\n        else:\n            a += int(max(str(a))) * int(min(str(a)))\n    print(a)", "import math\n\nclass Solution:\n\n    def kthNumber(self, num: int, k: int) -> None:\n        prev = num\n        for i in range(2, k + 1):\n            digits = list(map(int, str(prev).strip()))\n            minD = min(digits)\n            maxD = max(digits)\n            prev = prev + minD * maxD\n            if 0 in digits:\n                break\n        print(prev)\n        return\n\ndef main():\n    t = int(input())\n    sol = Solution()\n    while t:\n        (num, k) = list(map(int, input().strip().split()))\n        sol.kthNumber(num, k)\n        t -= 1\nmain()", "iter = int(input())\nfor _ in range(iter):\n    (n, k) = list(map(int, input().split(' ')))\n    for i in range(k - 1):\n        t = n\n        max = -1\n        min = 10\n        while t:\n            if t % 10 > max:\n                max = t % 10\n            if t % 10 < min:\n                min = t % 10\n            t = t // 10\n        if min == 0:\n            break\n        n = n + max * min\n    print(n)", "tc = int(input())\n\ndef find_digits(a1):\n    return [int(i) for i in str(a1)]\nwhile tc:\n    (a1, k) = map(int, input().split(' '))\n    ans = a1\n    while k > 1:\n        digits = find_digits(ans)\n        k -= 1\n        val = max(digits) * min(digits)\n        ans = ans + val\n        if val == 0:\n            break\n    tc -= 1\n    print(ans)", "def f(a1, k):\n    while k - 1 > 0:\n        a1 += int(min(str(a1))) * int(max(str(a1)))\n        if int(min(str(a1))) == 0:\n            break\n        k -= 1\n    return a1\nfor _ in range(int(input())):\n    (a1, k) = map(int, input().split())\n    print(f(a1, k))", "t = int(input())\ndp = {}\nfor i in range(t):\n    (a, k) = input().split()\n    for j in range(int(k) - 1):\n        if a in dp:\n            if a == dp[a]:\n                break\n            a = dp[a]\n        else:\n            minD = int(min(list(a)))\n            maxD = int(max(list(a)))\n            dp[a] = str(int(a) + minD * maxD)\n            a = dp[a]\n    print(a)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    s = 0\n    f = 0\n    for i in range(b):\n        if i == 0:\n            s = a\n        else:\n            ss = str(a)\n            l = list(ss)\n            mn = int(min(l))\n            maa = int(max(l))\n            if mn == 0:\n                f = 1\n                break\n            a = a + mn * maa\n            s = a\n    if f == 1:\n        print(s)\n    else:\n        print(s)"]