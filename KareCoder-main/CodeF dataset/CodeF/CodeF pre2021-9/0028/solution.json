["for _ in [*open(0)][1:]:\n    (n, m) = map(int, _.split())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(2 * m)", "def add(n, k):\n    if k > 2:\n        return int(2 * n)\n    elif k == 2:\n        return int(n)\n    else:\n        return int(0)\nnumofinputs = int(input())\nn = []\nk = []\nfor i in range(numofinputs):\n    [y, x] = input().split()\n    x = int(x)\n    y = int(y)\n    n.append(x)\n    k.append(y)\nfor i in range(numofinputs):\n    print(add(n[i], k[i]))", "def main():\n    n = int(input())\n    cases = []\n    for _ in range(n):\n        (n, m) = [int(x) for x in input().split()]\n        cases.append([n, m])\n    for i in range(len(cases)):\n        (n, m) = (cases[i][0], cases[i][1])\n        if n == 1:\n            ans = 0\n            print(ans)\n        elif n == 2:\n            ans = m\n            print(ans)\n        elif n > 2:\n            ans = min(2, n - 1) * m\n            print(ans)\nmain()", "for s in [*open(0)][1:]:\n    (n, m) = map(int, s.split())\n    print(m * min(n - 1, 2))", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    (n, m) = map(int, sys.stdin.readline().split())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(2 * m)", "t = int(input())\nresults = []\nfor testcase in range(t):\n    (n, m) = map(int, input().split())\n    results.append(min(2, n - 1) * m)\nfor i in results:\n    print(i)", "def solve(n, m):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return m\n    else:\n        return 2 * m\nt = int(input())\nresults = list()\nfor _ in range(0, t):\n    (n, m) = map(int, input().split(' '))\n    results.append(solve(n, m))\nfor result in results:\n    print(result)", "def solve():\n    (n, m) = [int(i) for i in input().split()]\n    if n > 2:\n        return m * 2\n    if n == 2:\n        return m\n    return 0\nt = int(input())\nans = []\nwhile t:\n    ans.append(str(solve()))\n    t -= 1\nprint('\\n'.join(ans))", "for s in [*open(0)][1:]:\n    (n, m) = map(int, s.split())\n    print(m * min(n - 1, 2))", "for s in [*open(0)][1:]:\n    (n, m) = map(int, s.split())\n    print(m * min(n - 1, 2))", "for s in [*open(0)][1:]:\n    (n, m) = map(int, s.split())\n    print(m * min(n - 1, 2))", "for s in [*open(0)][1:]:\n    (n, m) = map(int, s.split())\n    print(m * min(n - 1, 2))", "import sys\ninput = sys.stdin.readline\noutput = sys.stdout.write\n\ndef main():\n    tests = int(input().rstrip())\n    for i in range(tests):\n        (n, m) = map(int, input().rstrip().split())\n        if n == 1:\n            output('0')\n        elif n == 2:\n            output(str(m))\n        else:\n            output(str(2 * m))\n        output('\\n')\nmain()", "t = int(input())\nout = []\nfor i in range(t):\n    [n, m] = list(map(int, input().split()))\n    if n == 1:\n        out.append(0)\n    elif n == 2:\n        out.append(m)\n    else:\n        out.append(2 * m)\nprint(*out, sep='\\n')", "(a, d) = (int(input()), [])\nfor i in range(0, a):\n    b = [int(i) for i in input().split(' ')]\n    d.append(b[1] * min(2, b[0] - 1))\nprint(*d, sep='\\n')", "import sys\ninput = iter(sys.stdin.read().splitlines()).__next__\n\ndef solve(N, M):\n    if N == 1:\n        return 0\n    if N == 2:\n        return M\n    return 2 * M\nTC = int(input())\nfor tc in range(TC):\n    (N, M) = map(int, input().split())\n    res = solve(N, M)\n    print(res)", "lis_value = []\nfor i in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    if n == 1:\n        lis_value.append(0)\n    elif n == 2:\n        lis_value.append(m)\n    else:\n        lis_value.append(2 * m)\nfor i in lis_value:\n    print(i)", "for s in [*open(0)][1:]:\n    (n, m) = map(int, s.split())\n    print(m * min(n - 1, 2))", "import sys\ninput = lambda : sys.stdin.readline().strip()\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == 1:\n        print(0)\n    else:\n        print(min(2, a - 1) * b)", "from os import error\nimport sys\ninput = sys.stdin.readline\nDEBUG = False\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solve():\n    (n, m) = inlt()\n    if n == 1:\n        return 0\n    if n == 2:\n        return m\n    return 2 * m\nn = inp()\nfor t in range(n):\n    ans = solve()\n    print(ans)", "for s in [*open(0)][1:]:\n    (n, m) = map(int, s.split())\n    print(m * min(n - 1, 2))", "for s in [*open(0)][1:]:\n    (n, m) = map(int, s.split())\n    print(m * min(n - 1, 2))", "t = int(input())\nl = []\nfor i in range(0, t):\n    m = [int(x) for x in input().split()]\n    l.append(m)\nfor j in range(0, t):\n    p = l[j][0]\n    q = l[j][1]\n    if p == 1:\n        print(0)\n    elif p == 2:\n        print(q)\n    else:\n        print(q * 2)", "n = int(input())\nl = []\nfor i in range(0, n):\n    s = [int(x) for x in input().split()]\n    l.append(s)\nfor j in range(0, n):\n    if l[j][0] == 1:\n        print(0)\n    elif l[j][0] == 2:\n        print(l[j][1])\n    else:\n        print(2 * l[j][1])", "t = int(input())\nl = []\nfor i in range(t):\n    l.append([int(i) for i in input().split()])\nfor i in l:\n    if i[0] == 0:\n        print(0)\n    else:\n        s = i[1] * min(2, i[0] - 1)\n        print(s)", "n = int(input())\nans = []\nfor i in range(n):\n    t = input().split()\n    t = [int(x) for x in t]\n    ans.append(min(2, t[0] - 1) * t[1])\nfor j in ans:\n    print(j)", "t = int(input())\nl = [0] * t\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    if n == 1:\n        l[i] = 0\n    elif n == 2:\n        l[i] = m\n    else:\n        l[i] = 2 * m\nfor i in range(t):\n    print(l[i])", "import sys\nT = int(sys.stdin.readline())\nfor i in range(T):\n    (N, M) = map(int, sys.stdin.readline().split())\n    if N == 1:\n        print(0)\n    elif N == 2:\n        print(M)\n    elif N >= 3:\n        print(M * 2)", "for s in [*open(0)][1:]:\n    (n, m) = map(int, s.split())\n    print(m * min(n - 1, 2))", "res = ''\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n == 1:\n        res += '0\\n'\n    elif n == 2:\n        res += '%d\\n' % m\n    else:\n        res += '%d\\n' % (2 * m)\nprint(res)", "test = []\nt = int(input())\nfor i in range(t):\n    (a, p) = map(int, input().split())\n    test.append([a, p])\n\ndef func(n, m):\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(2 * m)\nfor i in range(t):\n    n = test[i][0]\n    m = test[i][1]\n    func(n, m)", "k = int(input(''))\nlist = []\nfor i in range(0, k):\n    (n, m) = input('').split()\n    n = int(n)\n    m = int(m)\n    if n == 1:\n        list.append(0)\n    elif n == 2:\n        list.append(m)\n    else:\n        list.append(2 * m)\nfor i in range(0, k):\n    print(list[i])", "k = int(input(''))\nlist = []\nfor i in range(0, k):\n    (n, m) = input('').split()\n    n = int(n)\n    m = int(m)\n    if n == 1:\n        list.append(0)\n    elif n == 2:\n        list.append(m)\n    else:\n        list.append(2 * m)\nfor i in range(0, k):\n    print(list[i])", "ans = []\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n == 1:\n        ans += [0]\n    elif n == 2:\n        ans += [m]\n    else:\n        ans += [m * 2]\nprint('\\n'.join(map(str, ans)))", "ans = []\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ans += [min(2, n - 1) * m]\nprint('\\n'.join(map(str, ans)))", "from typing import List\n\ndef int_input() -> int:\n    return int(input())\n\ndef list_input(seperator: str=' ') -> List:\n    return input().split(seperator)\n\ndef int_list_input(seperator: str=' ') -> List[int]:\n    return list(map(int, list_input(seperator)))\n\ndef main():\n    (n, m) = int_list_input()\n    if n == 1:\n        return 0\n    elif n == 2:\n        return m\n    else:\n        return m * 2\nTestcase = int_input()\nAnswers = []\nfor _ in range(Testcase):\n    Answers.append(main())\nprint('\\n'.join(list(map(str, Answers))))\nexit(0)", "a = []\nb = []\nfor i in range(int(input())):\n    a = input().split()\n    if a[0] == '1':\n        b.append(0)\n    elif a[0] == '2':\n        b.append(int(a[1]))\n    else:\n        b.append(2 * int(a[1]))\nprint(*b, sep='\\n')", "t = int(input())\nif t >= 1 and t <= 10000:\n    result = []\n    for i in range(0, t):\n        it = input()\n        n = int(it.split()[0])\n        m = int(it.split()[1])\n        if n >= 1 and n <= 10 ** 9 and (m >= 1) and (m <= 10 ** 9):\n            if n == 1:\n                result.append(0)\n            elif n == 2:\n                result.append(m)\n            else:\n                result.append(m * 2)\nfor value in result:\n    print(value)", "for s in [*open(0)][1:]:\n    (n, m) = map(int, s.split())\n    print(m * min(n - 1, 2))", "for s in [*open(0)][1:]:\n    (n, m) = map(int, s.split())\n    print(m * min(n - 1, 2))", "for s in [*open(0)][1:]:\n    (n, m) = map(int, s.split())\n    print(m * min(n - 1, 2))", "n = int(input())\ntot = list()\nfor j in range(n):\n    tot.append(list(map(int, input().split())))\nfor j in range(n):\n    if tot[j][0] == 1:\n        print(0)\n    elif tot[j][0] == 2:\n        print(tot[j][1])\n    else:\n        print(tot[j][1] * 2)", "for _ in [*open(0)][1:]:\n    (a, b) = map(int, _.split())\n    print([[b, 0][a < 2], 2 * (b - 1) + 2][a > 2])", "for s in [*open(0)][1:]:\n    (n, m) = map(int, s.split())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(2 * m)", "t = int(input())\nanswer = []\nfor i in range(t):\n    n = list(map(int, input().split(' ')))\n    if n[0] == 1:\n        answer.append(0)\n    elif n[0] == 2:\n        answer.append(n[1])\n    else:\n        answer.append(n[1] * 2)\nfor i in range(t):\n    print(answer[i])", "for _ in range(int(input())):\n    (n, s) = map(int, input().split())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(s)\n    else:\n        print(2 * s)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(2 * m)", "import sys\n\ndef get_max():\n    n = int(input())\n    for i in range(n):\n        (l, s) = map(int, input().split())\n        if l == 1:\n            print(0)\n        elif l == 2:\n            print(s)\n        else:\n            s = 2 * s\n            print(s)\nget_max()", "num = int(input())\nfor i in range(num):\n    arr = input()\n    arr = arr.split(' ')\n    lenz = int(arr[0])\n    sum = int(arr[1])\n    if lenz == 1:\n        print(0)\n    elif lenz < 3:\n        print(sum)\n    else:\n        print(sum * 2)", "t = int(input())\nwhile t > 0:\n    (n, m) = map(int, input().split())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(2 * m)\n    t -= 1", "t = int(input())\nwhile t != 0:\n    (n, m) = map(int, input().split())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(2 * m)\n    t -= 1", "t = int(input(''))\nfor test in range(t):\n    inp = input('')\n    inp_lst = [int(i) for i in inp.split()]\n    n = inp_lst[0]\n    m = inp_lst[1]\n    max_sum = 0\n    if n == 1:\n        max_sum = 0\n    elif n == 2:\n        max_sum = m\n    else:\n        max_sum = m * 2\n    print(max_sum)", "for t in range(int(input())):\n    s = input()\n    (n, m) = list(map(int, s.split()))\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(m * 2)", "t = int(input())\nfor test in range(t):\n    (n, m) = map(int, input().split())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(m * 2)", "for z in range(int(input())):\n    (g, p) = map(int, input().split())\n    if g == 1:\n        print(0)\n    if g == 2:\n        print(p)\n    if g != 1 and g != 2:\n        print(2 * p)", "def solve(n: int, m: int):\n    if n == 1:\n        return 0\n    if n < 3:\n        return m\n    else:\n        return 2 * m\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ans = solve(n, m)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(m * 2)", "for i in range(int(input())):\n    (l, s) = map(int, input().split())\n    if l == 1:\n        print(0)\n    elif l == 2:\n        print(s)\n    else:\n        total = l // 2\n        count = s / total * (l - 1)\n        if l % 2 == 0:\n            count = count + s / total\n        print(round(count))", "for _ in range(int(input())):\n    (n, m) = input().split()\n    n = int(n)\n    m = int(m)\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(m * 2)", "for _ in range(int(input())):\n    (n, m) = input().split()\n    n = int(n)\n    m = int(m)\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(m * 2)", "t = int(input())\nfor i in range(t):\n    (n, m) = [int(j) for j in input().split()]\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(m * 2)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m) = map(int, input().split())\n    if n == 1:\n        print('0')\n    elif n == 2:\n        print(m)\n    else:\n        print(2 * m)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == 1:\n        print(0)\n    elif a == 2:\n        print(b)\n    else:\n        print(b * 2)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    print(min(2, n - 1) * m)", "a = int(input())\nfor i in range(0, a):\n    (b, c) = map(int, input().split())\n    if b == 1:\n        print(0)\n    elif b == 2:\n        print(c)\n    elif b % 2 != 0:\n        print(c * 2)\n    elif b % 2 == 0:\n        print(c * 2)", "for _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(m * 2)", "t = int(input())\nfor _ in range(0, t):\n    (n, m) = map(int, input().split())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(2 * m)", "T = int(input())\nfor _ in range(T):\n    (n, m) = map(int, input().split())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(m * 2)", "t = int(input())\nwhile t > 0:\n    (a, b) = list(map(int, input().split()))\n    if a == 1:\n        print('0')\n    elif a == 2:\n        print(b)\n    else:\n        print(b * 2)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(2 * m)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, m) = map(int, input().split())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(2 * m)", "t = int(input())\nfor i in range(t):\n    (n, s) = map(int, input().split())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(s)\n    else:\n        print(2 * s)", "t = int(input())\nfor i in range(t):\n    a = []\n    (n, m) = map(int, input().split())\n    print(m * min(2, n - 1))", "n = int(input())\nfor i in range(n):\n    (p, q) = [int(i) for i in input().split()]\n    if p == 1:\n        print(0)\n    elif p == 2:\n        print(q)\n    else:\n        print(q * 2)", "n = int(input())\nfor i in range(n):\n    (p, q) = [int(i) for i in input().split()]\n    if p == 1:\n        print(0)\n    elif p == 2:\n        print(q)\n    else:\n        print(q * 2)", "from sys import stdin\ninp = stdin.readline\nt = int(inp().strip())\nwhile t:\n    t -= 1\n    (n, m) = [int(k) for k in inp().strip().split()]\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(m * 2)", "import sys\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    for _ in range(II()):\n        (n, m) = MI()\n        if n == 1:\n            print(0)\n        elif n == 2:\n            print(m)\n        else:\n            print(m * 2)\nmain()", "import sys\n\ndef minp():\n    return sys.stdin.readline().strip()\n\ndef mint():\n    return int(minp())\n\ndef mints():\n    return map(int, minp().split())\n\ndef solve():\n    (n, m) = mints()\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(2 * m)\nfor i in range(mint()):\n    solve()", "import sys\nfrom math import sqrt, floor, factorial, gcd\ninp = sys.stdin.readline\nread = lambda : list(map(int, inp().strip().split()))\n\ndef a():\n    ans = ''\n    for _ in range(int(inp())):\n        (n, m) = read()\n        if n == 1:\n            ans += '0\\n'\n        elif n == 2:\n            ans += str(m) + '\\n'\n        else:\n            ans += str(2 * m) + '\\n'\n    print(ans)\na()", "def main_function():\n    from sys import stdin\n    from sys import stdout\n    input = stdin.readline\n    print = stdout.write\n    t = int(input())\n    for _ in range(t):\n        (n, m) = list(map(int, input().split()))\n        if n == 1:\n            print(f'0\\n')\n        elif n == 2:\n            print(f'{m}\\n')\n        else:\n            print(f'{m * 2}\\n')\nmain_function()", "t = int(input())\nans = []\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    if n == 1:\n        ans.append(0)\n    elif n == 2:\n        ans.append(m)\n    else:\n        ans.append(m * 2)\nfor x in ans:\n    print(x)", "import sys\nsys.setrecursionlimit(10 ** 8)\ntry:\n    FILE_POINTER = open('input.inpt')\n    input = FILE_POINTER.readline\nexcept:\n    FILE_POINTER = None\n    input = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().strip().split()))\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(2 * m)\nif FILE_POINTER:\n    FILE_POINTER.close()", "t = int(input())\nanswers = []\nfor i in range(t):\n    (n, m) = list(map(int, input().split(' ')))\n    if n == 1:\n        answers.append(0)\n    elif n == 2:\n        answers.append(m)\n    elif n > 2:\n        answers.append(m * 2)\nfor i in answers:\n    print(i)", "from sys import stdin\nt = int(stdin.readline())\nwhile t > 0:\n    (n, k) = [int(x) for x in stdin.readline().split()]\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(k)\n    else:\n        print(2 * k)\n    t -= 1", "def main():\n    from sys import stdin\n    from sys import stdout\n    T = int(stdin.readline())\n    for t in range(T):\n        (n, m) = list(map(int, stdin.readline().split(' ')))\n        ans = get_ans(n, m)\n        if t < T - 1:\n            stdout.write(ans + '\\n')\n        else:\n            stdout.write(ans + '\\n')\n\ndef get_ans(n, m):\n    if n == 1:\n        s = 0\n    elif n == 2:\n        s = m\n    else:\n        s = 2 * m\n    return str(s)\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    N = int(input())\n    for _ in range(N):\n        (n, m) = map(int, input().split())\n        if n == 1:\n            print(0)\n        elif n == 2:\n            print(m)\n        else:\n            print(m * 2)\nmain()", "def fcnt():\n    result = ''\n    for _ in range(int(input())):\n        (n, m) = map(int, input().split())\n        if n == 1:\n            result += '0\\n'\n        elif n == 2:\n            result += str(m) + '\\n'\n        else:\n            result += str(m * 2) + '\\n'\n    print(result[:-1])\nfcnt()", "for s in [*open(0)][1:]:\n    (n, m) = map(int, s.split())\n    print(m * min(n - 1, 2))", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return list(map(int, input().split()))\n\ndef solve(arr):\n    n = arr[0]\n    m = arr[1]\n    print(min(2, n - 1) * m)\nt = inp()\narr = []\nfor i in range(t):\n    solve(inlt())", "ans = ''\nfor _ in range(int(input())):\n    a = list(map(int, input().split()))\n    if a[0] == 1:\n        ans += '0\\n'\n    elif a[0] == 2:\n        ans += str(a[1]) + '\\n'\n    else:\n        ans += str(a[1] * 2) + '\\n'\nprint(ans)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a > 2:\n        print(b * 2)\n    elif a == 2:\n        print(b)\n    else:\n        print(0)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a == 1:\n        print(0)\n    elif a == 2:\n        print(b)\n    else:\n        print(2 * b)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(2 * m)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(m * 2)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(m)\n    else:\n        print(2 * m)"]