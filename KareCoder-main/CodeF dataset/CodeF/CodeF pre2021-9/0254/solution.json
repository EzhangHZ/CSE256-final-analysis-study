["import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()[:-1]\n    ans = 'YES'\n    if s.count('M') != n // 3:\n        ans = 'NO'\n    else:\n        c = 0\n        for i in s:\n            if i == 'T':\n                c += 1\n            else:\n                c -= 1\n            if c < 0:\n                ans = 'NO'\n                break\n        else:\n            c = 0\n            for i in range(n - 1, -1, -1):\n                if s[i] == 'T':\n                    c += 1\n                else:\n                    c -= 1\n                if c < 0:\n                    ans = 'NO'\n                    break\n    print(ans)", "for s in [*open(0)][2::2]:\n    n = r = len(s)\n    f = 1\n    for x in s[:-1]:\n        r -= 6 * (x > 'M') - 3\n        f &= 0 < r <= n\n    print('YNEOS'[f != r::2])", "import sys\n\ndef answer(n, s):\n    numTs = 0\n    numMs = 0\n    for i in range(n):\n        if s[i] == 'T':\n            numTs += 1\n        else:\n            numMs += 1\n        if numMs > numTs:\n            return 'NO'\n    if numTs != 2 * numMs:\n        return 'NO'\n    numTs = 0\n    numMs = 0\n    for i in range(n - 1, -1, -1):\n        if s[i] == 'T':\n            numTs += 1\n        else:\n            numMs += 1\n        if numMs > numTs:\n            return 'NO'\n    if numTs != 2 * numMs:\n        return 'NO'\n    return 'YES'\n\ndef main():\n    t = int(input())\n    while t:\n        n = int(sys.stdin.readline())\n        s = sys.stdin.readline().rstrip()\n        print(answer(n, s))\n        t -= 1\n    return\nmain()", "def f(n, s):\n    if n % 3 != 0 or s.count('T') != 2 * n // 3 or s.count('M') != n // 3:\n        return 'NO'\n    else:\n        t = []\n        m = []\n        l = 0\n        for i in range(n):\n            if s[i] == 'T':\n                t.append(i)\n            else:\n                m.append(i)\n        r = len(m)\n        for j in range(len(m)):\n            if m[j] > t[l] and m[j] < t[r]:\n                l = l + 1\n                r = r + 1\n            else:\n                return 'NO'\n        return 'YES'\nx = int(input())\nm = []\nfor i in range(x):\n    z = int(input())\n    y = list(input())\n    m.append((z, y))\nfor j in range(x):\n    print(f(m[j][0], m[j][1]))", "def solve():\n    n = int(input())\n    s = list(input())\n    m = []\n    t = []\n    if s.count('T') != s.count('M') * 2:\n        return False\n    for i in range(n):\n        if s[i] == 'M':\n            m.append(i)\n        else:\n            t.append(i)\n    for i in range(len(m)):\n        if m[i] < t[i] or m[i] > t[i + len(m)]:\n            return False\n    return True\ntst = int(input())\nfor i in range(tst):\n    print('YES' if solve() else 'NO')", "def solve(s: str) -> bool:\n    if s.count('T') != s.count('M') * 2:\n        return False\n    N = len(s) // 3\n    C = 0\n    for c in s:\n        if c == 'T':\n            C += 1\n        else:\n            C -= 1\n        if C < 0 or C > N:\n            break\n    return C == N\nfor s in [*open(0)][2::2]:\n    print('NYOE S'[solve(s[:-1])::2])", "def process(S):\n    Ts = 0\n    Ms = 0\n    for c in S:\n        if c == 'T':\n            Ts += 1\n        else:\n            Ms += 1\n            if Ms > Ts:\n                return 'NO'\n    if Ts != 2 * Ms:\n        return 'NO'\n    Ts = 0\n    Ms = 0\n    for c in S[::-1]:\n        if c == 'T':\n            Ts += 1\n        else:\n            Ms += 1\n            if Ms > Ts:\n                return 'NO'\n    return 'YES'\nT = int(input())\nfor I in range(T):\n    N = int(input())\n    S = input()\n    print(process(S))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    c = 0\n    ans = 'YES'\n    for i in s:\n        if i == 'T':\n            c += 1\n        else:\n            c -= 1\n        if c < 0 or c > n // 3:\n            ans = 'NO'\n            break\n    if c != n // 3:\n        ans = 'NO'\n    print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    S = input()\n    ctr = 0\n    for i in S:\n        if i == 'T':\n            ctr += 1\n        else:\n            ctr -= 1\n        if ctr > N // 3 or ctr < 0:\n            break\n    print('YES' if ctr == N // 3 else 'NO')", "x = int(input())\nfor i in range(x):\n    n = int(input())\n    a = input()\n    score = 0\n    flag = True\n    for j in a:\n        if j == 'T':\n            score += 1\n        else:\n            score -= 1\n        if score < 0 or score > n // 3:\n            flag = False\n            break\n    if flag and score == n - 2 * (n // 3):\n        print('YES')\n    else:\n        print('NO')", "import sys\n\ndef solve(s):\n    (t_count, m_count, rev_t_count, rev_m_count) = (0, 0, 0, 0)\n    n = len(s)\n    for idx in range(n):\n        if s[idx] == 'T':\n            t_count += 1\n        else:\n            m_count += 1\n        if s[n - 1 - idx] == 'T':\n            rev_t_count += 1\n        else:\n            rev_m_count += 1\n        if m_count > t_count or rev_m_count > rev_t_count:\n            return False\n    if t_count != 2 * m_count:\n        return False\n    return True\nt = int(sys.stdin.readline().strip())\nfor _ in range(t):\n    _ = sys.stdin.readline()\n    s = sys.stdin.readline().strip()\n    if solve(s):\n        print('YES')\n    else:\n        print('NO')", "def prg():\n    t = int(input())\n    while t > 0:\n        t -= 1\n        n = int(input())\n        x = input()\n        nT = 0\n        nM = 0\n        for c in x:\n            if c == 'T':\n                nT += 1\n            elif c == 'M':\n                nM += 1\n            if nT < nM:\n                nT = -1\n                break\n        else:\n            nT = 0\n            nM = 0\n            for c in x[::-1]:\n                if c == 'T':\n                    nT += 1\n                elif c == 'M':\n                    nM += 1\n                if nT < nM:\n                    nT = -1\n                    break\n        if nT == 2 * nM:\n            print('YES')\n        else:\n            print('NO')\nprg()", "def solvecaso():\n    n = int(input())\n    tmts = input()\n    if n % 3 != 0:\n        return 'NO'\n    tes = 0\n    mrest = n / 3\n    mes = 0\n    for c in tmts:\n        if c == 'T':\n            tes += 1\n        elif c == 'M':\n            mes += 1\n            mrest -= 1\n        if mes > tes or tes - 2 * mes > mrest:\n            return 'NO'\n    if tes == 2 * n / 3 and mes == n / 3:\n        return 'YES'\n    return 'NO'\ncasos = int(input())\nfor caso in range(1, casos + 1):\n    result = solvecaso()\n    print(f'{result}')", "n_inputs = int(input())\n\ndef check_if_valid(strochka):\n    n_t = 0\n    n_m = 0\n    for c in strochka:\n        if c == 'T':\n            n_t += 1\n            continue\n        n_m += 1\n        if n_m > n_t:\n            return False\n    if n_t != 2 * n_m:\n        return False\n    return True\nfor i in range(n_inputs):\n    l = int(input())\n    stroka = input()\n    if l % 3:\n        print('NO')\n        continue\n    if check_if_valid(stroka) and check_if_valid(reversed(stroka)):\n        print('YES')\n        continue\n    print('NO')", "list1 = []\nfor i in range(int(input())):\n    n = int(input())\n    s = input()\n    s1 = s\n    n = True\n    if s[0] == s[-1] == 'T' and s.count('T') == s.count('M') * 2:\n        while 'TM' in s1:\n            s1 = s1.replace('TM', '')\n            if s1[0] == 'M':\n                n = False\n                break\n        s1 = s[::-1]\n        if n:\n            while 'TM' in s1:\n                s1 = s1.replace('TM', '')\n                if s1[0] == 'M':\n                    n = False\n                    break\n            if n:\n                list1.append('YES')\n            else:\n                list1.append('NO')\n        else:\n            list1.append('NO')\n    else:\n        list1.append('NO')\nprint(*list1, sep='\\n')", "def check(s):\n    t = 0\n    m = 0\n    for i in s:\n        if i == 'T':\n            t += 1\n        elif i == 'M':\n            t -= 1\n            m += 1\n        if t < 0:\n            return False\n    if t == m:\n        return True\nt = int(input())\nfor i in range(t):\n    input()\n    s = input().strip()\n    print('YES' if check(s) and check(reversed(s)) else 'NO')", "x = int(input())\nfor i in range(x):\n    n = int(input())\n    a = input()\n    score = 0\n    flag = True\n    for j in a:\n        if j == 'T':\n            score += 1\n        else:\n            score -= 1\n        if score < 0 or score > n // 3:\n            flag = False\n            break\n    if flag and score == n - 2 * (n // 3):\n        print('YES')\n    else:\n        print('NO')", "for s in [*open(0)][2::2]:\n    r = 0\n    f = 1\n    n = len(s)\n    for x in s[:-1]:\n        r += 6 * (x > 'M') - 3\n        f &= 0 <= r < n\n    print('NYOE S'[f == n - r > 0::2])", "for s in [*open(0)][2::2]:\n    r = 0\n    f = 1\n    n = len(s)\n    for x in s[:-1]:\n        r += 6 * (x > 'M') - 3\n        f &= 0 <= r < n\n    print('NYOE S'[f == n - r::2])", "def check(s):\n    c = 0\n    for i in s:\n        if i == 'T':\n            c += 1\n        else:\n            c -= 1\n        if c < 0:\n            return False\n    c = 0\n    s = s[::-1]\n    for i in s:\n        if i == 'T':\n            c += 1\n        else:\n            c -= 1\n        if c < 0:\n            return False\n    return True\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if s.count('T') != 2 * s.count('M'):\n        print('NO')\n    elif check(s):\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    s = input()\n    k = 0\n    flag = True\n    for j in s:\n        if j == 'T':\n            k = k + 1\n        else:\n            k = k - 1\n        if k < 0 or k > a // 3:\n            flag = False\n            break\n    if flag and k == a - 2 * (a // 3):\n        print('YES')\n    else:\n        print('NO')", "import sys\n\ndef solve():\n    n = int(input())\n    str = input()\n    sum = 0\n    for chr in str:\n        if chr == 'T':\n            sum = sum + 1\n        else:\n            sum = sum - 1\n        if sum < 0 or sum > n / 3:\n            return 'NO'\n    if sum == n / 3:\n        return 'YES'\n    return 'NO'\nT = int(input())\nfor i in range(0, T):\n    result = solve()\n    print(result)", "for s in [*open(0)][2::2]:\n    n = r = len(s)\n    f = 1\n    for x in s[:-1]:\n        r -= 6 * (x > 'M') - 3\n        f &= 0 < r <= n\n    print('YNEOS'[f != r::2])", "for s in [*open(0)][2::2]:\n    n = r = len(s)\n    f = 1\n    for x in s[:-1]:\n        r -= 6 * (x > 'M') - 3\n        f &= 0 < r <= n\n    print('YNEOS'[f != r::2])", "lines = int(input())\nfor i in range(lines):\n    n = int(input())\n    a = input()\n    if n % 3 != 0:\n        print('NO')\n    else:\n        count = 0\n        for l in a:\n            if l == 'T':\n                count += 1\n            else:\n                count -= 1\n            if count < 0 or count > n / 3:\n                break\n        if count == n / 3:\n            print('YES')\n        else:\n            print('NO')", "import sys\ninput = lambda : sys.stdin.readline()\nint_arr = lambda : list(map(int, input().split()))\nstr_arr = lambda : list(map(str, input().split()))\nget_str = lambda : map(str, input().split())\nget_int = lambda : map(int, input().split())\nget_flo = lambda : map(float, input().split())\nmod = 1000000007\n\ndef solve(n, s):\n    c = 0\n    t = 0\n    m = 0\n    for i in range(n):\n        if s[i] == 'T':\n            c += 1\n            t += 1\n        else:\n            c -= 1\n            m += 1\n            if c < 0:\n                print('NO')\n                return\n    c = 0\n    t = 0\n    m = 0\n    for i in range(n - 1, -1, -1):\n        if s[i] == 'T':\n            c += 1\n            t += 1\n        else:\n            c -= 1\n            m += 1\n            if c < 0:\n                print('NO')\n                return\n    if m * 2 == t:\n        print('YES')\n    else:\n        print('NO')\nfor _ in range(int(input())):\n    n = int(input())\n    s = str(input())[:-1]\n    solve(n, s)", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    data = sys.stdin.readline().rstrip()\n    Ts = []\n    Ms = []\n    flag = 0\n    for (idx, item) in enumerate(data):\n        if item == 'M':\n            Ms.append(idx)\n        else:\n            Ts.append(idx)\n    if data[0] == 'M' or data[-1] == 'M' or len(Ms) * 3 != n:\n        print('NO')\n        continue\n    for i in range(len(Ms)):\n        if Ts[i] > Ms[i] or Ms[i] > Ts[i + len(Ms)]:\n            flag = 1\n            break\n    print('NO' if flag else 'YES')", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    c = n // 3\n    (m, t) = (0, 0)\n    x = 0\n    for i in range(len(s)):\n        if s[i] == 'T':\n            t += 1\n        else:\n            t -= 1\n        if t < 0 or t > c:\n            break\n    if t != c:\n        print('NO')\n    else:\n        print('YES')", "list_ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a1 = a2 = b1 = b2 = 0\n    for i in range(n):\n        if s[i] == 'T':\n            a1 += 1\n        else:\n            b1 += 1\n        if s[-i - 1] == 'T':\n            a2 += 1\n        else:\n            b2 += 1\n        if a1 < b1 or a2 < b2:\n            list_ans.append('NO')\n            break\n    else:\n        if a1 == 2 * b1:\n            list_ans.append('YES')\n        else:\n            list_ans.append('NO')\nfor item in list_ans:\n    print(item)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    c = 0\n    for j in s:\n        if j == 'T':\n            c = c + 1\n        else:\n            c = c - 1\n        if c > n // 3 or c < 0:\n            break\n    if c == n // 3:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    count_T = 0\n    count_M = 0\n    possible = True\n    for i in range(n):\n        if s[i] == 'T':\n            count_T += 1\n        else:\n            count_M += 1\n        if count_M > count_T:\n            possible = False\n            break\n    if not possible or count_T != 2 * count_M:\n        print('NO')\n    else:\n        count_T = 0\n        count_M = 0\n        for i in range(n - 1, -1, -1):\n            if s[i] == 'T':\n                count_T += 1\n            else:\n                count_M += 1\n            if count_M > count_T:\n                possible = False\n                break\n        if not possible:\n            print('NO')\n        else:\n            print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    s = str(input())[:n]\n    c = 0\n    res = 0\n    for i in s:\n        if i == 'T':\n            c += 1\n        else:\n            c -= 1\n        res = n // 3\n        if c > res or c < 0:\n            break\n    if c == res:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    c = n // 3\n    t = 0\n    for i in range(len(s)):\n        if s[i] == 'T':\n            t += 1\n        else:\n            t -= 1\n        if t < 0 or t > c:\n            break\n    if t != c:\n        print('NO')\n    else:\n        print('YES')", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    s = input()\n    count = 0\n    for i in s:\n        if i == 'T':\n            count += 1\n        else:\n            count -= 1\n        if count > n // 3 or count < 0:\n            break\n    if count == n // 3:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    (mcount, tcount) = ([], [])\n    for i in range(n):\n        if s[i] == 'M':\n            mcount.append(i)\n        else:\n            tcount.append(i)\n    if len(tcount) != 2 * len(mcount):\n        print('NO')\n    else:\n        for i in range(len(mcount)):\n            if mcount[i] < tcount[i]:\n                f = 0\n                break\n            elif mcount[i] > tcount[i + len(mcount)]:\n                f = 0\n                break\n            else:\n                f = 1\n        if f:\n            print('YES')\n        else:\n            print('NO')", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    c = {'T': 0, 'M': 0}\n    for j in s:\n        c[j] += 1\n        if c['M'] > c['T'] or c['T'] - c['M'] > n // 3:\n            print('NO')\n            break\n    else:\n        if c['M'] * 2 == c['T']:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    N = int(input())\n    S = input()\n    ctr = 0\n    for i in S:\n        if i == 'T':\n            ctr += 1\n        else:\n            ctr -= 1\n        if ctr > N // 3 or ctr < 0:\n            break\n    print('YES' if ctr == N // 3 else 'NO')", "for _ in range(int(input())):\n    (n, s) = (int(input()), input())\n    (k, m, t) = (n // 3, [], [])\n    for i in range(n):\n        if s[i] == 'M':\n            m.append(i)\n        else:\n            t.append(i)\n    if len(m) != k:\n        print('NO')\n        continue\n    for i in range(k):\n        if m[i] < t[i] or t[i + k] < m[i]:\n            print('NO')\n            break\n    else:\n        print('YES')", "for t in range(int(input())):\n    n = int(input())\n    a = input()\n    M = 0\n    T = 0\n    for i in range(n):\n        if a[i] == 'M':\n            M = M + 1\n        else:\n            T = T + 1\n        if n // 3 + M < T or M > T:\n            print('NO')\n            break\n    else:\n        if M * 2 == T:\n            print('YES')\n        else:\n            print('NO')", "for t in range(int(input())):\n    n = int(input())\n    a = input()\n    M = 0\n    T = 0\n    for i in range(n):\n        if a[i] == 'M':\n            M += 1\n        else:\n            T += 1\n        if n // 3 + M < T or M > T:\n            print('NO')\n            break\n    else:\n        if M * 2 == T:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if n % 3 != 0:\n        print('NO')\n        continue\n    count = 0\n    flag = False\n    for i in range(n):\n        if flag:\n            break\n        if s[i] == 'M':\n            count -= 1\n        else:\n            count += 1\n        if count < 0 or count > n // 3:\n            flag = True\n            break\n    if flag or count != n // 3:\n        print('NO')\n        continue\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ms = n // 3\n    ts = ms * 2\n    if s.count('T') != ts:\n        print('NO')\n        continue\n    start = ms\n    middle = 0\n    end = 0\n    bad = False\n    for c in s:\n        if c == 'T':\n            if start > 0:\n                start -= 1\n                middle += 1\n            elif end > 0:\n                end -= 1\n            else:\n                bad = True\n                break\n        elif middle > 0:\n            middle -= 1\n            end += 1\n        else:\n            bad = True\n            break\n    if bad:\n        print('NO')\n    else:\n        print('YES')", "def solve(n, s):\n    f = 1\n    if s.count('M') != n // 3:\n        f = 0\n    t = 0\n    for c in s:\n        if c == 'T':\n            t += 1\n        else:\n            t -= 1\n        if t < 0:\n            f = 0\n    t = 0\n    for c in s[::-1]:\n        if c == 'T':\n            t += 1\n        else:\n            t -= 1\n        if t < 0:\n            f = 0\n    print('YES' if f else 'NO')\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    solve(n, s)", "for i in range(int(input())):\n    input()\n    s = input()\n    q = s.count('M')\n    c = int(q == len(s) // 3)\n    (t, m) = (0, 0)\n    for i in s:\n        if i == 'T':\n            t += 1\n        else:\n            m += 1\n        if m > t:\n            c = 0\n            break\n    (t, m) = (0, 0)\n    for i in s[::-1]:\n        if i == 'T':\n            t += 1\n        else:\n            m += 1\n        if m > t:\n            c = 0\n            break\n    print('YES' if c else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(input())\n    a = 0\n    b = 0\n    c = 0\n    f = 0\n    for i in l:\n        if i == 'T':\n            if c < b:\n                c += 1\n            else:\n                a += 1\n        elif i == 'M':\n            if a > b:\n                b += 1\n            elif a + c > b:\n                c -= 1\n                b += 1\n                a += 1\n            else:\n                f = 1\n                break\n        else:\n            f = 1\n            break\n    if f:\n        print('NO')\n    elif a == b == c:\n        print('YES')\n    else:\n        print('NO')", "def KARENGEYEHSAVAAL(s, n):\n    tee = s.count('T')\n    em = s.count('M')\n    if em == 0 or tee == 0 or tee / em != 2:\n        print('NO')\n        return ''\n    if s[0] == 'M' or s[n - 1] == 'M':\n        print('NO')\n        return ''\n    ct = 0\n    for i in s:\n        if i == 'T':\n            ct += 1\n        else:\n            ct -= 1\n        if ct < 0 or ct > tee / 2:\n            print('NO')\n            return ''\n    print('YES')\n    return ''\nfor _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    KARENGEYEHSAVAAL(s, n)", "trails = int(input())\nanswer_list = []\nfor x in range(trails):\n    k = int(input())\n    letters = input()\n    num_t = 0\n    num_m = 0\n    answer = True\n    debt = 0\n    for d in letters:\n        if d == 'T':\n            num_t += 1\n            if debt > 0:\n                debt -= 1\n        else:\n            num_m += 1\n            debt += 1\n        if num_m > num_t:\n            answer = False\n    if num_m != k // 3 or letters[-1] == 'M' or debt > 0:\n        answer = False\n    if answer == True:\n        answer_list.append('YES')\n    else:\n        answer_list.append('NO')\nfor g in answer_list:\n    print(g)", "def solve(S, n):\n    left = right = 0\n    for ch in S:\n        if ch == 'T':\n            left += 1\n        else:\n            if left == 0:\n                return False\n            left -= 1\n    for i in range(n - 1, -1, -1):\n        if S[i] == 'T':\n            right += 1\n        else:\n            if right == 0:\n                return False\n            right -= 1\n    return S.count('M') * 3 == n\nT = int(input())\nfor t in range(T):\n    N = int(input())\n    S = input()\n    res = solve(S, len(S))\n    print('YES' if res else 'NO')", "question = int(input())\nfor count in range(question):\n    n = int(input())\n    a = list(input())\n    mm = 0\n    t = 0\n    tt = 0\n    ttt = 0\n    flag = True\n    for s in a:\n        if s == 'T':\n            if mm < tt + 1:\n                ttt += 1\n            else:\n                tt += 1\n        elif ttt > 0:\n            mm += 1\n            ttt -= 1\n        elif tt > 0:\n            mm += 1\n            tt -= 1\n        else:\n            flag = False\n            break\n    if flag:\n        if tt == mm and ttt == 0:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "def photogen(n, a):\n    if a[0] == 'M' or a[-1] == 'M':\n        return 'NO'\n    if not a.count('M') * 2 == a.count('T'):\n        return 'NO'\n    pr = 1\n    mindex = []\n    for i in range(1, n):\n        if a[i] == 'M':\n            mindex.append(i)\n            pr -= 1\n            if pr < 0:\n                return 'NO'\n        else:\n            pr += 1\n    ss = 1\n    for i in range(n - 2, -1, -1):\n        if a[i] == 'M':\n            ss -= 1\n            if ss < 0:\n                return 'NO'\n        else:\n            ss += 1\n    return 'YES'\nfor t in range(int(input())):\n    n = int(input())\n    a = input()\n    print(photogen(n, a))", "def solve(n, a):\n    if a[0] != a[-1] or a[0] == 'M':\n        print('NO')\n        return\n    ct = 0\n    cm = 0\n    for i in range(n):\n        if a[i] == 'T':\n            ct += 1\n        else:\n            cm += 1\n        if cm > ct or ct - cm > n // 3:\n            print('NO')\n            return\n    if ct != 2 * cm:\n        print('NO')\n    else:\n        print('YES')\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input()\n    solve(n, a)", "def solve(array, n):\n    ct = 0\n    cm = 0\n    for i in array:\n        if i == 'T':\n            ct += 1\n        else:\n            cm += 1\n        if cm > ct:\n            return 'NO'\n    ct = 0\n    cm = 0\n    for i in array[::-1]:\n        if i == 'T':\n            ct += 1\n        else:\n            cm += 1\n        if cm > ct:\n            return 'NO'\n    if ct != 2 * cm:\n        return 'NO'\n    return 'YES'\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    array = input()\n    ans = solve(array, n)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    count_T = 0\n    for i in a:\n        if i == 'T':\n            count_T += 1\n        else:\n            count_T -= 1\n        if count_T < 0 or count_T > n // 3:\n            break\n    if count_T == n // 3:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    if s.count('T') != 2 * s.count('M'):\n        print('NO')\n    else:\n        c = 0\n        for i in s:\n            if i == 'T':\n                c += 1\n            else:\n                c -= 1\n            if c < 0 or c > n // 3:\n                break\n        print('YES' if c == n // 3 else 'NO')", "def solve(s):\n    t1 = s.count('T')\n    t2 = s.count('M')\n    if t1 != 2 * t2:\n        return False\n    count1 = 0\n    count2 = 0\n    for i in range(len(s)):\n        if s[i] == 'M':\n            count1 += 1\n        else:\n            count2 += 1\n        if count1 > count2:\n            return False\n    rcount1 = 0\n    rcount2 = 0\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] == 'M':\n            rcount1 += 1\n        else:\n            rcount2 += 1\n        if rcount1 > rcount2:\n            return False\n    return True\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    if solve(s):\n        print('YES')\n    else:\n        print('NO')", "def check(n, s):\n    (T_count, M_count) = (0, 0)\n    for i in range(n):\n        if s[i] == 'M':\n            M_count += 1\n        else:\n            T_count += 1\n        if M_count > T_count:\n            print('NO')\n            return\n    (T_count, M_count) = (0, 0)\n    s_reverse = s[::-1]\n    for i in range(n):\n        if s_reverse[i] == 'M':\n            M_count += 1\n        else:\n            T_count += 1\n        if M_count > T_count:\n            print('NO')\n            return\n    if 2 * s.count('M') != s.count('T'):\n        print('NO')\n        return\n    print('YES')\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    check(n, s)", "def solve():\n    n = int(input())\n    s = input()\n    dp = [0, 0, 0]\n    for c in s:\n        if c == 'M':\n            dp[1] += 1\n            if dp[1] > dp[0]:\n                if dp[2] == 0:\n                    print('NO')\n                    return\n                dp[2] -= 1\n                dp[0] += 1\n        elif dp[1] > dp[2]:\n            dp[2] += 1\n        else:\n            dp[0] += 1\n    if dp[0] == dp[1] and dp[1] == dp[2]:\n        print('YES')\n        return\n    print('NO')\n    return\nt = int(input())\nfor i in range(t):\n    solve()", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    s = input()\n    k = n // 3\n\n    def ok(s):\n        x = 0\n        for j in s:\n            if j == 'T':\n                x += 1\n            else:\n                x -= 1\n            if x < 0:\n                return False\n        return True\n    print('YES' if s.count('M') == k and ok(s) and ok(s[::-1]) else 'NO')", "def check(s):\n    c = 0\n    for i in s:\n        if i == 'T':\n            c += 1\n        else:\n            c -= 1\n        if c < 0:\n            return False\n    c = 0\n    s = s[::-1]\n    for i in s:\n        if i == 'T':\n            c += 1\n        else:\n            c -= 1\n        if c < 0:\n            return False\n    return True\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if s.count('T') != 2 * s.count('M'):\n        print('NO')\n    elif check(s):\n        print('YES')\n    else:\n        print('NO')", "for k in range(int(input())):\n    n = int(input())\n    m = input()\n    if m[0] != 'T' or m[n - 1] != 'T':\n        print('NO')\n    else:\n        count = 0\n        for i in m:\n            if i == 'T':\n                count += 1\n            else:\n                count -= 1\n            if count < 0 or count > n // 3:\n                break\n        if count == n // 3:\n            print('YES')\n        else:\n            print('NO')", "for ct in range(int(input())):\n    n = int(input())\n    s = input()\n    count = 0\n    for c in s:\n        if c == 'T':\n            count += 1\n        else:\n            count -= 1\n        if count > n // 3 or count < 0:\n            break\n    print('YES') if count == n // 3 else print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    k = list(input())\n    ts = k.count('T')\n    ms = k.count('M')\n    flag = 1\n    if ts == 2 * ms:\n        count = 0\n        for i in k:\n            if i == 'T':\n                count = count + 1\n            else:\n                count = count - 1\n            if count < 0:\n                flag = 0\n                break\n        k.reverse()\n        if flag:\n            count = 0\n            for i in k:\n                if i == 'T':\n                    count = count + 1\n                else:\n                    count = count - 1\n                if count < 0:\n                    flag = 0\n                    break\n        if flag:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "for j in range(int(input())):\n    n = int(input())\n    s = input()\n    co = 0\n    for k in s:\n        if k == 'T':\n            co = co + 1\n        else:\n            co = co - 1\n        if co < 0 or co > n / 3:\n            break\n    if co == n / 3:\n        print('YES')\n    else:\n        print('NO')", "def TMTDocument(s, n):\n    t = []\n    m = []\n    for i in range(0, n):\n        if s[i] == 'T':\n            t.append(i)\n        else:\n            m.append(i)\n    if 2 * len(m) != len(t):\n        print('NO')\n        return\n    for i in range(0, len(m)):\n        if m[i] < t[i] or m[i] > t[i + len(m)]:\n            print('NO')\n            return\n    print('YES')\n    return\ntc = int(input())\nfor _ in range(0, tc):\n    n = int(input())\n    s = input()\n    TMTDocument(s, n)", "nbTest = int(input())\nfor k in range(nbTest):\n    n = int(input())\n    s = input()\n    compteur = 0\n    sol = 0\n    for c in s:\n        if c == 'T':\n            compteur += 1\n            if compteur > n // 3:\n                print('NO')\n                sol = -1\n                break\n        else:\n            compteur -= 1\n            if compteur < 0:\n                print('NO')\n                sol = -1\n                break\n    if sol == 0:\n        if compteur == n // 3:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nl = 0\nwhile l != t:\n    l += 1\n    n = int(input())\n    s = input()\n    if n % 3 != 0 or s[0] != 'T' or s.count('M') * 2 != s.count('T'):\n        print('NO')\n    else:\n        a1 = 0\n        a2 = 0\n        for i in range(n):\n            if s[i] == 'T':\n                a1 += 1\n            else:\n                if a1 < a2 + 1 or 2 * (n // 3) - a1 < n // 3 - a2:\n                    print('NO')\n                    break\n                a2 += 1\n        else:\n            print('YES')", "nn = int(input())\nfor _ in range(nn):\n    n = int(input())\n    str = input()\n    cnt = 0\n    tt = 0\n    for i in str:\n        if i == 'T':\n            cnt += 1\n        else:\n            cnt -= 1\n        if cnt < 0 or cnt > n // 3:\n            break\n    if cnt == n // 3:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    str_len = int(input())\n    tmt_str = input()\n    cou = 0\n    for k in tmt_str:\n        if k == 'T':\n            cou = cou + 1\n        else:\n            cou = cou - 1\n        if cou < 0 or cou > str_len / 3:\n            break\n    if cou == str_len / 3:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if n == 3:\n        if s == 'TMT':\n            print('YES')\n        else:\n            print('NO')\n    else:\n        T = 0\n        for i in s:\n            if i == 'T':\n                T += 1\n            else:\n                T -= 1\n            if T < 0 or T > n // 3:\n                print('NO')\n                break\n        else:\n            if T == n // 3:\n                print('YES')\n            else:\n                print('NO')", "def solve():\n    n = int(input())\n    s = input()\n    t = []\n    m = []\n    for (i, v) in enumerate(s):\n        if v == 'T':\n            t.append(i)\n        else:\n            m.append(i)\n    j = 0\n    i = 0\n    tt = len(t)\n    if tt <= 1:\n        print('NO')\n        return\n    while i + n // 3 < tt:\n        if j < len(m) and m[j] > t[i] and (m[j] < t[i + n // 3]):\n            i += 1\n            j += 1\n        else:\n            print('NO')\n            return\n    if j < len(m):\n        print('NO')\n        return\n    print('YES')\n\ndef main():\n    t = 1\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "import math\nt = int(input())\nfor i in range(0, t):\n    n = map(int, input().split())\n    a = input()\n    count = 0\n    min = 1000\n    max = 0\n    for j in a:\n        if j == 'T':\n            count += 1\n        else:\n            count -= 1\n        if count < min:\n            min = count\n        if count > max:\n            max = count\n    if (min < 0) | (max > len(a) // 3) | (count != len(a) // 3):\n        print('NO')\n    else:\n        print('YES')", "def STR():\n    s = str(input())\n    return s\n\ndef INT():\n    i = int(input())\n    return i\n\ndef INT_ARR():\n    arr = list(map(int, input().split()))\n    return arr\n\ndef STR_ARR():\n    arr = input().split(' ')\n    return arr\n\ndef cout(arg):\n    print(arg, end=' ')\n\ndef solve():\n    n = INT()\n    s = STR()\n    m = 0\n    for i in range(n):\n        if s[i] == 'M':\n            m += 1\n    if m * 2 != n - m:\n        print('NO')\n        return\n    m = 0\n    for i in range(n):\n        if s[i] == 'T':\n            m += 1\n        else:\n            m -= 1\n            if m < 0:\n                print('NO')\n                return\n    m = 0\n    for i in range(n - 1, -1, -1):\n        if s[i] == 'T':\n            m += 1\n        else:\n            m -= 1\n            if m < 0:\n                print('NO')\n                return\n    print('YES')\ntest_case = INT()\nfor i in range(test_case):\n    solve()", "from time import sleep as sle\nfrom math import *\nfrom random import randint as ri\n\ndef gcd(a, b):\n    if a == b:\n        return a\n    elif a > b:\n        return gcd(a - b, b)\n    else:\n        return gcd(b, a)\n\ndef pr(x):\n    print()\n    for s in x:\n        print(s)\n\ndef solve():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        s = input()\n        if s.count('T') == 2 * s.count('M'):\n            ti = []\n            mi = []\n            for i in range(n):\n                if s[i] == 'T':\n                    ti += [i]\n                else:\n                    mi += [i]\n            k = int(n / 3)\n            b = [ti[i] < mi[i] < ti[i + k] for i in range(k)]\n            if False in b:\n                print('NO')\n            else:\n                print('YES')\n        else:\n            print('NO')\nsolve()", "for p in range(int(input())):\n    n = int(input())\n    s = input()\n    (a, b, f) = (s.count('M'), s.count('T'), 0)\n    if a == n // 3 and b == 2 * (n // 3):\n        (x, y) = (0, 0)\n        for i in range(n):\n            if s[i] == 'M':\n                y += 1\n            else:\n                x += 1\n            if s[i] == 'M':\n                if x < y:\n                    f = 1\n                    break\n        (s, x, y) = (s[::-1], 0, 0)\n        for i in range(n):\n            if s[i] == 'M':\n                y += 1\n            else:\n                x += 1\n            if s[i] == 'M':\n                if x < y:\n                    f = 1\n                    break\n        if f:\n            print('NO')\n        else:\n            print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    (t, m) = ([], [])\n    s = input()\n    for i in range(n):\n        if s[i] == 'T':\n            t.append(i)\n        else:\n            m.append(i)\n    if len(t) != 2 * len(m):\n        print('NO')\n    else:\n        nm = len(m)\n        for i in range(nm):\n            if m[i] < t[i] or m[i] > t[i + nm]:\n                print('NO')\n                break\n        else:\n            print('YES')", "def trouvet(indb, indh):\n    if chaine[indb] != 'T' and chaine[indh] != 'T':\n        return False\n    return True\ntests = int(input())\nfor _ in range(tests):\n    n = int(input())\n    chaine = input()\n    (indext, indexm) = ([], [])\n    for (i, c) in enumerate(chaine, 1):\n        if c == 'T':\n            indext.append(i)\n        else:\n            indexm.append(i)\n    possible = True\n    if len(indext) != 2 * len(indexm) or 1 not in indext or n not in indext:\n        possible = False\n    if possible:\n        ind = 0\n        for m in indexm:\n            if indext[ind] < m:\n                ind += 1\n            else:\n                possible = False\n                break\n    if possible:\n        indt = len(indext) - 1\n        for m in indexm[::-1]:\n            if indext[indt] > m:\n                indt -= 1\n            else:\n                possible = False\n                break\n    if possible:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    n = int(input()) // 3\n    i = input()\n    result = True\n    for s in (i, i[::-1]):\n        ts = 0\n        for c in s:\n            if c == 'T':\n                ts += 1\n            else:\n                ts -= 1\n                if ts < 0:\n                    break\n        result = result and ts == n\n        if not result:\n            break\n    print('YES' if result else 'NO')\n    t -= 1", "import sys\n\ndef solve():\n    N = int(input())\n    S = str(input())\n    t = 0\n    m = 0\n    for a in S:\n        if a == 'T':\n            t += 1\n        else:\n            m += 1\n            if t < m:\n                print('NO')\n                return\n    t = 0\n    m = 0\n    for a in reversed(S):\n        if a == 'T':\n            t += 1\n        else:\n            m += 1\n            if t < m:\n                print('NO')\n                return\n    if t == m * 2:\n        print('YES')\n        return\n    print('NO')\n    return\n\ndef main():\n    sys.setrecursionlimit(10000)\n    T = int(input())\n    for i in range(T):\n        solve()\nmain()", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = 0\n    cnt = 0\n    for i in s:\n        if i == 'T':\n            cnt += 1\n        if i == 'M':\n            cnt -= 1\n        if cnt > n // 3:\n            ans = 1\n            break\n        if cnt < 0:\n            ans = 1\n            break\n    if ans == 1:\n        print('NO')\n    elif cnt == n // 3:\n        print('YES')\n    else:\n        print('NO')", "def solve(string, n):\n    tList = []\n    mList = []\n    for i in range(n):\n        if string[i] == 'T':\n            tList.append(i)\n        else:\n            mList.append(i)\n    if len(tList) != 2 * len(mList):\n        return False\n    lm = len(mList)\n    for i in range(lm):\n        if tList[i] > mList[i]:\n            return False\n        if tList[i + lm] < mList[i]:\n            return False\n    return True\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    if solve(s, n):\n        print('YES')\n    else:\n        print('NO')", "def LSPtable(pattern):\n    n = len(pattern)\n    l = [0] * n\n    j = 0\n    for i in range(1, n):\n        while j > 0 and pattern[i] != pattern[j]:\n            j = l[j - 1]\n        if pattern[i] == pattern[j]:\n            l[i] = j + 1\n            j += 1\n        else:\n            l[i] = 0\n    return l\n\ndef KMPsearch(pattern, string):\n    lsp = LSPtable(pattern)\n    j = 0\n    for i in range(len(string)):\n        while j > 0 and string[i] != pattern[j]:\n            j = lsp[j - 1]\n        if string[i] == pattern[j]:\n            j += 1\n            if j == len(pattern):\n                return i - j + 1\n    return -1\n\ndef _istrue(s, n, y):\n    q = []\n    c = 0\n    flag = False\n    for i in range(n):\n        if s[i] == 'T':\n            if c > 0 and len(q) > 0 and flag:\n                q.pop()\n                c -= 1\n            else:\n                q.append(1)\n            if len(q) >= y:\n                flag = True\n        else:\n            c += 1\n            if len(q) < c:\n                return False\n    if len(q) > 0:\n        return False\n    return True\n\ndef main():\n    n = int(input())\n    s = input()\n    y = n // 3\n    if _istrue(s, n, y):\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nfor i in range(t):\n    main()", "import math\n\ndef solve():\n    n = int(input())\n    s = input()\n    t = s.count('T')\n    m = s.count('M')\n    if t != 2 * m:\n        print('NO')\n    else:\n        t1 = 0\n        m1 = 0\n        f = 1\n        for i in s:\n            if i == 'T':\n                t1 += 1\n            elif i == 'M':\n                m1 += 1\n                if t1 < m1:\n                    f = 0\n                    break\n        s = s[::-1]\n        t1 = 0\n        m1 = 0\n        for i in s:\n            if i == 'T':\n                t1 += 1\n            elif i == 'M':\n                m1 += 1\n                if t1 < m1:\n                    f = 0\n                    break\n        if f:\n            print('YES')\n        else:\n            print('NO')\nt = int(input())\nwhile t > 0:\n    t -= 1\n    solve()", "def xx(x, n):\n    if x[0] == 'T' and x[-1] == 'T':\n        i = x.count('T')\n        j = x.count('M')\n        k = []\n        l = []\n        for ii in range(n):\n            if x[ii] == 'M':\n                k.append(ii)\n            else:\n                l.append(ii)\n        if 2 * j == i:\n            (a, b, c) = (0, 0, i - 1)\n            for ii in range(j):\n                if l[a] < k[b]:\n                    a += 1\n                    b += 1\n                else:\n                    return 'NO'\n            b = j - 1\n            for ii in range(j):\n                if k[b] < l[c]:\n                    b -= 1\n                    c -= 1\n                else:\n                    return 'NO'\n            return 'YES'\n        return 'NO'\n    return 'NO'\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = input()\n    print(xx(x, n))", "import math\n\ndef get_inp():\n    return list(map(int, input().split()))\n\ndef solve():\n    n = int(input())\n    s = input()\n    m = 0\n    i = 0\n    while i < n:\n        if m < 0:\n            return 'NO'\n        if s[i] == 'T':\n            m += 1\n        elif s[i] == 'M':\n            m -= 1\n        i += 1\n    if m != int(n / 3):\n        return 'NO'\n    m = 0\n    i = n - 1\n    while i >= 0:\n        if m < 0:\n            return 'NO'\n        if s[i] == 'T':\n            m += 1\n        elif s[i] == 'M':\n            m -= 1\n        i -= 1\n    if m != int(n / 3):\n        return 'NO'\n    return 'YES'\ntc = int(input())\nfor _ in range(tc):\n    print(solve())", "def call(s, n):\n    if n < 3:\n        return 'NO'\n    if n == 3 and s == 'TMT':\n        return 'YES'\n    if n == 3 and s != 'TMT':\n        return 'NO'\n    if s[0] == 'M' or s[n - 1] == 'M':\n        return 'NO'\n    t = s.count('T')\n    m = s.count('M')\n    if t != 2 * m:\n        return 'NO'\n    c = 0\n    for i in range(n):\n        if c < 0:\n            return 'NO'\n        if c > m:\n            return 'NO'\n        if s[i] == 'T':\n            c += 1\n        else:\n            c -= 1\n    if c >= 0 and c <= m:\n        return 'YES'\n    return 'NO'\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    print(call(s, n))", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    s = str(input())\n    m = s.count('T')\n    n = s.count('M')\n    y = 0\n    if 2 * n != m:\n        print('NO')\n        continue\n    else:\n        h = []\n        for i in range(0, len(s)):\n            if s[i] == 'M':\n                h.append(i + 1)\n        p = 0\n        q = 0\n        for i in h:\n            p = p + 1\n            if i - p < p or n - p + 1 > m + p - i:\n                y = 1\n                break\n    if y == 1:\n        print('NO')\n    else:\n        print('YES')", "def fun(s, n):\n    (T, M) = (s.count('T'), s.count('M'))\n    if not n % 3 == 0 or not M * 3 == n:\n        return 'NO'\n    (t, m) = (0, 0)\n    for i in s:\n        if i == 'T':\n            t += 1\n        else:\n            m += 1\n        if m > t or M - m > T - t:\n            return 'NO'\n    return 'YES'\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    print(fun(s, n))", "for s in [*open(0)][2::2]:\n    n = r = len(s)\n    f = 1\n    for x in s[:-1]:\n        r -= 6 * (x > 'M') - 3\n        f &= 0 < r <= n\n    print('YNEOS'[f != r::2])", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    T = s.count('T')\n    M = s.count('M')\n    if T == 2 * M:\n        t = m = 0\n        for i in s:\n            if i == 'T':\n                t += 1\n            else:\n                m += 1\n            if m > t or M - m > T - t:\n                print('NO')\n                break\n        else:\n            print('YES')\n    else:\n        print('NO')"]