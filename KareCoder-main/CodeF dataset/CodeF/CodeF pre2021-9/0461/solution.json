["import sys\nsys.setrecursionlimit(10 ** 7)\nT = int(input())\n\ndef calc(n, A):\n    prev = A[0]\n    m = 0\n    k = 0\n    nmin = 10 ** 9\n    nmax = 0\n    for i in range(1, n):\n        ai = A[i]\n        aip = A[i - 1]\n        if ai == -1:\n            if aip != -1:\n                nmin = min(nmin, aip)\n                nmax = max(nmax, aip)\n        elif aip == -1:\n            nmin = min(nmin, ai)\n            nmax = max(nmax, ai)\n        else:\n            m = max(m, abs(ai - aip))\n    if nmin != 10 ** 9 and nmax != 0:\n        ndiff = nmax - nmin\n        nm = -(-ndiff // 2)\n        k = nmin + ndiff // 2\n    else:\n        nm = 0\n        if nmin == 10 ** 9:\n            k = nmax\n        elif nmax == 0:\n            k = nmin\n    m = max(m, nm)\n    return (m, k)\nres = []\nfor _ in range(T):\n    n = int(input())\n    A = list(map(int, input().split()))\n    (m, k) = calc(n, A)\n    res.append('{} {}'.format(m, k))\nprint('\\n'.join(res))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    L = []\n    m = 0\n    now = A[0]\n    for a in A[1:]:\n        if now == -1:\n            if a != -1:\n                L.append(a)\n                now = a\n        elif a == -1:\n            L.append(now)\n            now = -1\n        else:\n            m = max(m, abs(a - now))\n            now = a\n    L.sort()\n    if L:\n        k = (L[-1] + L[0]) // 2\n        m = max(m, L[-1] - k)\n    else:\n        k = 0\n        m = 0\n    print(m, k)", "import sys\nt = int(sys.stdin.readline().rstrip())\n\ndef main():\n    for _ in range(t):\n        n = int(sys.stdin.readline().rstrip())\n        (*a,) = map(int, sys.stdin.readline().split())\n        m = 0\n        res = set()\n        for i in range(n):\n            cur = a[i]\n            if cur == -1:\n                if i > 0 and a[i - 1] != -1:\n                    res.add(a[i - 1])\n                if i < n - 1 and a[i + 1] != -1:\n                    res.add(a[i + 1])\n            elif i > 0 and a[i - 1] != -1:\n                m = max(m, abs(cur - a[i - 1]))\n        res = sorted(res)\n        if not res:\n            k = 0\n        else:\n            k = (res[0] + res[-1]) // 2\n            m = max(res[-1] - k, m)\n        yield (m, k)\nans = main()\nfor a in ans:\n    print(*a, sep=' ')", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        N = int(input())\n        A = [int(x) for x in input().split()]\n        x = set()\n        for (a, b) in zip(A, A[1:]):\n            if a == -1 and b != -1:\n                x.add(b)\n            if b == -1 and a != -1:\n                x.add(a)\n        y = 0\n        if len(x) == 0:\n            print(0, 0)\n            continue\n        elif len(x) == 1:\n            y = max(x)\n        else:\n            y = (max(x) + min(x)) // 2\n        ma = -float('inf')\n        for (a, b) in zip(A, A[1:]):\n            if a == -1 and b != -1:\n                ma = max(abs(b - y), ma)\n            if b == -1 and a != -1:\n                ma = max(abs(a - y), ma)\n            if a != -1 and b != -1:\n                ma = max(abs(a - b), ma)\n        print(ma, y)\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    maxi = 0\n    tempLis = []\n    for j in range(0, n - 1):\n        if lis[j] != -1 and lis[j + 1] != -1:\n            if abs(lis[j] - lis[j + 1]) > maxi:\n                maxi = abs(lis[j] - lis[j + 1])\n        elif lis[j] == -1 and lis[j + 1] != -1:\n            tempLis.append(lis[j + 1])\n        elif lis[j] != -1 and lis[j + 1] == -1:\n            tempLis.append(lis[j])\n    if len(tempLis) == 0:\n        print(0, end=' ')\n        print(0)\n        continue\n    tempMax = max(tempLis)\n    tempMin = min(tempLis)\n    k = int((tempMax + tempMin) / 2)\n    m = max(maxi, abs(tempMax - k), abs(tempMin - k))\n    print(m, end=' ')\n    print(k)", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    d_r = []\n    d_x = []\n    for i in range(1, len(a)):\n        if a[i] != -1 and a[i - 1] != -1:\n            d_r.append(abs(a[i] - a[i - 1]))\n        elif a[i] == -1 and a[i - 1] != -1:\n            d_x.append(a[i - 1])\n        elif a[i] != -1 and a[i - 1] == -1:\n            d_x.append(a[i])\n    if len(d_r) == 0:\n        Max = 0\n    else:\n        Max = max(d_r)\n    if len(d_x) == 0:\n        (xMax, xMin) = (0, 0)\n    else:\n        (xMax, xMin) = (max(d_x), min(d_x))\n    k = (xMin + xMax) // 2\n    m = xMax - k if xMax - k > Max else Max\n    print(m, k)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    ar = [-2] + a + [-2]\n    r = []\n    for i in range(1, n + 2):\n        if ar[i] > -1 and (ar[i - 1] == -1 or ar[i + 1] == -1):\n            r.append(ar[i])\n    (ans, m) = (0, 0)\n    if not r == []:\n        ans = (max(r) + min(r)) // 2\n        a = [*map(lambda x: ans if x == -1 else x, a)]\n        m = max([abs(a[i] - a[i - 1]) for i in range(1, n)])\n    print(m, ans)", "def iamtefu():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        d = -1\n        mn = 1000000000.0\n        c = 0\n        mx = 0\n        for i in range(n):\n            if a[i] == -1:\n                if i > 0 and a[i - 1] != -1:\n                    mn = min(a[i - 1], mn)\n                    mx = max(a[i - 1], mx)\n                    c += 1\n                    d += 1\n                if i < n - 1 and a[i + 1] != -1:\n                    mn = min(a[i + 1], mn)\n                    mx = max(a[i + 1], mx)\n                    c += 1\n                    d += 1\n        an = (mn + mx) // 2\n        if d == -1 or an < 0:\n            an = 0\n        for i in range(n):\n            if a[i] == -1:\n                a[i] = an\n        m = 0\n        for i in range(1, n):\n            m = max(abs(a[i] - a[i - 1]), m)\n        print(m, an)\niamtefu()", "def MinimalReplacement(data):\n    boundr = []\n    mindif = 0\n    for index in range(len(data)):\n        if index != 0 and data[index] != -1 and (data[index - 1] != -1) and (abs(data[index] - data[index - 1]) > mindif):\n            mindif = abs(data[index] - data[index - 1])\n        if index != 0 and data[index] == -1 and (data[index - 1] != -1):\n            boundr.append(data[index - 1])\n        if index != len(data) - 1 and data[index] == -1 and (data[index + 1] != -1):\n            boundr.append(data[index + 1])\n    if boundr:\n        return (max(mindif, (max(boundr) - min(boundr) + 1) // 2), (max(boundr) + min(boundr)) // 2)\n    else:\n        return (mindif, 0)\ntests = int(input())\nfor i in range(tests):\n    trash = input()\n    data = list(map(int, input().split()))\n    (d, k) = MinimalReplacement(data)\n    print(d, ' ', k)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    c = []\n    for i in range(n):\n        if a[i] == -1:\n            if i != 0:\n                if a[i - 1] != -1:\n                    b.append(a[i - 1])\n            if i != n - 1:\n                if a[i + 1] != -1:\n                    b.append(a[i + 1])\n    for i in range(n - 1):\n        if a[i] != -1 and a[i + 1] != -1:\n            c.append(abs(a[i + 1] - a[i]))\n    if c == []:\n        c.append(0)\n    if b == []:\n        print(0, 0)\n        continue\n    k = (max(b) + min(b)) // 2\n    m = max(max(b) - k, k - min(b), max(c))\n    print(m, k)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    st = []\n    mx = 0\n    for i in range(n):\n        if a[i] == -1:\n            if i + 1 < n and a[i + 1] != -1:\n                st.append(a[i + 1])\n            if i - 1 >= 0 and a[i - 1] != -1:\n                st.append(a[i - 1])\n        if i > 0 and a[i] != -1 and (a[i - 1] != -1) and (abs(a[i] - a[i - 1]) > mx):\n            mx = abs(a[i] - a[i - 1])\n    st.sort()\n    if len(st):\n        mx1 = (st[0] + st[-1]) // 2\n    else:\n        mx1 = 0\n    if len(st):\n        mx = max(mx, mx1 - st[0], st[-1] - mx1)\n    print(mx, mx1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = []\n    if a[0] != -1 and a[1] == -1:\n        l.append(a[0])\n    if a[-1] != -1 and a[-2] == -1:\n        l.append(a[-1])\n    for i in range(1, n - 1):\n        if a[i] != -1 and (a[i - 1] == -1 or a[i + 1] == -1):\n            l.append(a[i])\n    if len(l) == 0:\n        print(0, 0)\n        continue\n    m = (min(l) + max(l)) // 2\n    for i in range(n):\n        if a[i] == -1:\n            a[i] = m\n    print(max([abs(a[i] - a[i - 1]) for i in range(1, n)]), m)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    p = []\n    for i in range(1, n - 1):\n        if (l[i - 1] == -1 or l[i + 1] == -1) and l[i] != -1:\n            p.append(l[i])\n    if l[1] == -1 and l[0] != -1:\n        p.append(l[0])\n    if l[n - 2] == -1 and l[n - 1] != -1:\n        p.append(l[n - 1])\n    if p == []:\n        print(0, 0)\n    else:\n        if len(p) == 1:\n            k = p[0]\n        else:\n            k = (max(p) + min(p)) // 2\n        for i in range(n):\n            if l[i] == -1:\n                l[i] = k\n        m = 0\n        for i in range(1, n):\n            if abs(l[i] - l[i - 1]) > m:\n                m = abs(l[i] - l[i - 1])\n        print(m, k)", "def program():\n    n = int(input())\n    l = list(map(int, input().split()))\n    l2 = []\n    l3 = []\n    for i in range(n):\n        if l[i] == -1:\n            if i == 0:\n                nex = l[1]\n                prev = -1\n            elif i == n - 1:\n                nex = -1\n                prev = l[n - 2]\n            else:\n                nex = l[i + 1]\n                prev = l[i - 1]\n            if nex != -1:\n                l2.append(nex)\n            if prev != -1:\n                l2.append(prev)\n        else:\n            if i == 0:\n                nex = l[1]\n                prev = -1\n            elif i == n - 1:\n                nex = -1\n                prev = l[n - 2]\n            else:\n                nex = l[i + 1]\n                prev = l[i - 1]\n            if nex != -1:\n                l3.append(abs(l[i] - nex))\n            if prev != -1:\n                l3.append(abs(l[i] - prev))\n    if len(l2) == 0:\n        print('0 0')\n        return 0\n    l2 = set(l2)\n    k = (max(l2) + min(l2)) // 2\n    if len(l3) == 0:\n        m = max(l2) - k\n    else:\n        m = max(max(l3), max(l2) - k)\n    print(m, k)\nt = int(input())\nfor i in range(t):\n    program()", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    adj_numbers = set()\n    for (ind, x) in enumerate(l):\n        if x == -1:\n            if ind > 0 and l[ind - 1] != -1:\n                adj_numbers.add(l[ind - 1])\n            if ind < n - 1 and l[ind + 1] != -1:\n                adj_numbers.add(l[ind + 1])\n    if len(adj_numbers) == 0:\n        print(0, 0)\n        continue\n    minn = min(adj_numbers)\n    maxx = max(adj_numbers)\n    avg = int(math.floor((minn + maxx) / 2.0))\n    m = float('-inf')\n    for i in range(n):\n        if l[i] == -1:\n            l[i] = avg\n    for i in range(1, n):\n        m = max(abs(l[i] - l[i - 1]), m)\n    print(m, avg)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    sm = 0\n    for i in range(n - 1):\n        if l[i] != -1 and l[i + 1] != -1:\n            m = abs(l[i] - l[i + 1])\n            sm = max(m, sm)\n    r = []\n    if l[0] == -1 and l[1] != -1:\n        r.append(l[1])\n    if l[n - 1] == -1 and l[n - 2] != -1:\n        r.append(l[n - 2])\n    for i in range(1, n - 1):\n        if l[i] == -1:\n            if l[i + 1] != -1:\n                r.append(l[i + 1])\n            if l[i - 1] != -1:\n                r.append(l[i - 1])\n    r.sort()\n    p = len(r)\n    if p > 0:\n        k = r[p - 1] - r[0]\n        k = k // 2\n        k = k + r[0]\n        mx = max(r[p - 1] - k, k - r[0])\n    else:\n        mx = sm\n        k = 0\n    sm = max(mx, sm)\n    print(sm, k)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    v = set()\n    m = 0\n    for i in range(n - 1):\n        if a[i] == -1:\n            if i != 0 and a[i - 1] >= 0:\n                v.add(a[i - 1])\n            if a[i + 1] >= 0:\n                v.add(a[i + 1])\n    if a[n - 1] == -1:\n        if a[n - 2] >= 0:\n            v.add(a[n - 2])\n    if not v:\n        print(0, 0)\n        continue\n    k = abs(max(v) + min(v)) // 2\n    for i in range(n):\n        if a[i] == -1:\n            a[i] = k\n    for i in range(n - 1):\n        if abs(a[i + 1] - a[i]) > m:\n            m = abs(a[i + 1] - a[i])\n    print(m, k)", "n = int(input())\nfor i in range(n):\n    size = int(input())\n    a = list(map(int, input().split()))\n    ma = -1\n    k = []\n    for j in range(len(a) - 1):\n        if a[j] == -1 and a[j + 1] != -1:\n            k.append(a[j + 1])\n        elif a[j] != -1 and a[j + 1] == -1:\n            k.append(a[j])\n        else:\n            ma = max(ma, abs(a[j] - a[j + 1]))\n    if len(k) == 0:\n        print(0, 0)\n    else:\n        mini = min(k)\n        maxi = max(k)\n        print(max(ma, max(k) - (mini + (maxi - mini) // 2)), mini + (maxi - mini) // 2)", "def solve(n, l):\n    l.append(-2)\n    i = 0\n    while l[i] == -1:\n        i += 1\n    if l[i] == -2:\n        return [0, 0]\n    l.insert(0, l[i])\n    l.pop()\n    j = len(l) - 1\n    while l[j] == -1:\n        j -= 1\n    l.append(l[j])\n    n = len(l)\n    i = 0\n    j = 0\n    mmax = -1\n    mmin = 10 ** 9 + 1\n    while j < n:\n        while i < n and l[i] == -1:\n            i += 1\n        j = i + 1\n        while j < n and l[j] == -1:\n            j += 1\n        if j >= n:\n            break\n        if j == i + 1:\n            i = j\n            continue\n        mmin = min(mmin, min(l[i], l[j]))\n        mmax = max(mmax, max(l[i], l[j]))\n        i = j\n    res = 0\n    k = (mmin + mmax) // 2\n    for i in range(1, n):\n        if l[i] == -1:\n            l[i] = k\n        res = max(res, abs(l[i] - l[i - 1]))\n    return [res, k]\nfor t in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    res = solve(n, l)\n    print(res[0], res[1])", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = []\n    li = list(map(int, input().split()))\n    for k in range(n):\n        if li[k] == -1:\n            if k - 1 >= 0:\n                if li[k - 1] != -1:\n                    l.append(li[k - 1])\n            if k + 1 < n:\n                if li[k + 1] != -1:\n                    l.append(li[k + 1])\n    if l == []:\n        ans = 0\n    else:\n        a = max(l)\n        b = min(l)\n        ans = (a + b) // 2\n    for k in range(n):\n        if li[k] == -1:\n            li[k] = ans\n    maxi = 0\n    for k in range(1, n):\n        if abs(li[k] - li[k - 1]) > maxi:\n            maxi = abs(li[k] - li[k - 1])\n    print(maxi, end=' ')\n    print(ans)", "def solve():\n    x = int(input())\n    s = list(map(int, input().split()))\n    z = []\n    for n in range(x):\n        if s[n] != -1:\n            if n > 0 and n < x - 1:\n                if s[n - 1] == -1 or s[n + 1] == -1:\n                    z.append(s[n])\n            elif n == 0:\n                if s[1] == -1:\n                    z.append(s[0])\n            elif s[-2] == -1:\n                z.append(s[-1])\n    z.sort()\n    if len(z) == 0:\n        print(0, 0)\n        return\n    res = (z[0] + z[-1]) // 2\n    ans = 0\n    for n in range(1, x):\n        if s[n] == -1:\n            s[n] = res\n        if s[n - 1] == -1:\n            s[n - 1] = res\n        ans = max(ans, abs(s[n] - s[n - 1]))\n    print(ans, res)\nfor n in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    for i in range(n):\n        if a[i] == -1:\n            if i > 0 and a[i - 1] != -1:\n                b.append(a[i - 1])\n            if i < n - 1 and a[i + 1] != -1:\n                b.append(a[i + 1])\n    if len(b) == 0:\n        z = 0\n    else:\n        z = (max(b) + min(b)) // 2\n    for i in range(n):\n        if a[i] == -1:\n            a[i] = z\n    k = abs(a[0] - a[1])\n    for i in range(n - 1):\n        if abs(a[i] - a[i + 1]) > k:\n            k = abs(a[i] - a[i + 1])\n    print(k, z)", "from math import floor, ceil\nt = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    aa = [int(i) for i in input().split()]\n    problem = []\n    already = []\n    for i in range(0, n - 1):\n        if aa[i] == -1 and aa[i + 1] != -1:\n            problem.append(aa[i + 1])\n        elif aa[i] != -1 and aa[i + 1] == -1:\n            problem.append(aa[i])\n        elif aa[i] != -1 and aa[i + 1] != -1:\n            already.append(abs(aa[i] - aa[i + 1]))\n    if len(problem) == 0:\n        print(0, 0)\n    else:\n        problem.sort()\n        k = (problem[-1] + problem[0]) // 2\n        also = -1\n        original = max(problem[-1] - k, k - problem[0])\n        if len(already):\n            also = max(already)\n        if also != -1:\n            if original <= also:\n                print(also, k)\n            else:\n                print(original, k)\n        else:\n            print(original, k)", "def calc(A):\n    (min_, max_) = (float('Inf'), 0)\n    found = False\n    for (i, a) in enumerate(A):\n        if a != -1:\n            continue\n        if 0 <= i - 1 and A[i - 1] != -1:\n            found = True\n            min_ = min(min_, A[i - 1])\n            max_ = max(max_, A[i - 1])\n        if i + 1 < len(A) and A[i + 1] != -1:\n            found = True\n            min_ = min(min_, A[i + 1])\n            max_ = max(max_, A[i + 1])\n    k = (min_ + max_) // 2 if found else 0\n    res = 0\n    for i in range(len(A)):\n        if A[i] == -1:\n            A[i] = k\n        if i > 0:\n            res = max(res, abs(A[i] - A[i - 1]))\n    return (res, k)\nN = int(input())\ncases = []\nfor _ in range(N):\n    d = int(input())\n    cases.append(list(map(int, input().split())))\nfor c in cases:\n    r = calc(c)\n    print('{} {}'.format(r[0], r[1]))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    m = 0\n    for i in range(n):\n        if a[i] == -1:\n            if i > 0 and a[i - 1] != -1:\n                b.append(a[i - 1])\n            if i < n - 1 and a[i + 1] != -1:\n                b.append(a[i + 1])\n    if len(b) != 0:\n        m = (max(b) + min(b)) // 2\n    c = [m if j == -1 else j for j in a]\n    k = 0\n    for t in range(n - 1):\n        k = max(k, abs(c[t + 1] - c[t]))\n    print(k, m)", "t = int(input())\nfor j in range(0, t):\n    n = int(input())\n    s = set()\n    a = list(map(int, input().split()))\n    for i in range(0, n - 1):\n        if a[i] == -1 and a[i + 1] != -1:\n            s.add(a[i + 1])\n        elif a[i + 1] == -1 and a[i] != -1:\n            s.add(a[i])\n    if max(a) == -1:\n        print(0, 0)\n    else:\n        aa = (max(list(s)) + min(list(s))) // 2\n        for i in range(0, n):\n            if a[i] == -1:\n                a[i] = aa\n        maxi = -1\n        for i in range(1, n):\n            if maxi < abs(a[i - 1] - a[i]):\n                maxi = abs(a[i - 1] - a[i])\n        print(maxi, aa)", "for _ in range(int(input())):\n    n = int(input())\n    L = list(map(int, input().split()))\n    R = []\n    for i in range(n):\n        if L[i] == -1:\n            if i > 0 and L[i - 1] != -1:\n                R.append(L[i - 1])\n            if i < n - 1 and L[i + 1] != -1:\n                R.append(L[i + 1])\n    R.sort()\n    if len(R) != 0:\n        ans = (R[0] + R[-1]) // 2\n    else:\n        ans = 0\n    for i in range(n):\n        if L[i] == -1:\n            L[i] = ans\n    V = abs(L[0] - L[1])\n    for i in range(n - 1):\n        r = abs(L[i] - L[i + 1])\n        if V < r:\n            V = r\n    print(V, ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    d = set()\n    for (i, x) in enumerate(a):\n        if x == -1:\n            if i > 0:\n                d.add(a[i - 1])\n            if i < len(a) - 1:\n                d.add(a[i + 1])\n    d = [x for x in list(d) if x != -1]\n    a2 = (min(d) + max(d)) // 2 if d else 0\n    a = [x if x != -1 else a2 for x in a]\n    print('%d %d' % (max([abs(a[x] - a[x + 1]) for x in range(len(a) - 1) if a[x] != -1 and a[x + 1] != -1]), a2))", "t = input()\nt = int(t)\nwhile t:\n    t -= 1\n    n = input()\n    a = input()\n    a = [int(str) for str in a.split()]\n    minn = 10000000000.0\n    dist = -1\n    maxx = -1\n    for i in range(len(a)):\n        cur = a[i]\n        if cur == -1:\n            if i == 0:\n                if a[i + 1] != -1:\n                    minn = min(a[i + 1], minn)\n                    maxx = max(a[i + 1], maxx)\n            elif i == len(a) - 1:\n                if a[i - 1] != -1:\n                    minn = min(a[i - 1], minn)\n                    maxx = max(a[i - 1], maxx)\n            else:\n                if a[i + 1] != -1:\n                    minn = min(a[i + 1], minn)\n                    maxx = max(a[i + 1], maxx)\n                if a[i - 1] != -1:\n                    minn = min(a[i - 1], minn)\n                    maxx = max(a[i - 1], maxx)\n        elif i != 0 and a[i - 1] != -1:\n            dist = max(dist, abs(a[i] - a[i - 1]))\n    if maxx == -1:\n        maxx = minn = 0\n    k = (maxx + minn) // 2\n    dist = max(dist, abs(k - maxx))\n    print(dist, k)", "import sys\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    curr = arr[0]\n    max_diff = -1\n    l = sys.maxsize\n    r = -1\n    for i in range(1, n):\n        if arr[i] != -1 and arr[i - 1] != -1:\n            max_diff = max(max_diff, abs(arr[i] - arr[i - 1]))\n    for i in range(1, n):\n        if arr[i] == -1:\n            if arr[i - 1] != -1:\n                if arr[i - 1] <= l:\n                    l = arr[i - 1]\n                if arr[i - 1] > r:\n                    r = arr[i - 1]\n        elif arr[i - 1] == -1:\n            if arr[i] <= l:\n                l = arr[i]\n            if arr[i] > r:\n                r = arr[i]\n    if r == -1 and l == sys.maxsize:\n        k = 0\n        fin_diff = max(max_diff, 0)\n    elif r == -1 or r == l:\n        k = l\n        fin_diff = max(max_diff, abs(k - l))\n    elif l == sys.maxsize:\n        k = r\n        fin_diff = max(max_diff, abs(k - r))\n    else:\n        k = l + (r - l) // 2\n        fin_diff = max(max_diff, max(abs(k - l), abs(k - r)))\n    print(str(fin_diff) + ' ' + str(k))", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a.count(-1) == n:\n        print(0, 0)\n    else:\n        arr = []\n        for i in range(1, n):\n            if a[i] != -1 and a[i - 1] == -1:\n                arr.append(a[i])\n            elif a[i] == -1 and a[i - 1] != -1:\n                arr.append(a[i - 1])\n        avg = (max(arr) + min(arr)) // 2\n        for i in range(n):\n            if a[i] == -1:\n                a[i] = avg\n        maxi = abs(a[1] - a[0])\n        for i in range(2, n):\n            diff = abs(a[i] - a[i - 1])\n            if diff > maxi:\n                maxi = diff\n        print(maxi, avg)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = []\n    for j in range(len(a)):\n        if j == 0:\n            if a[j + 1] == -1 and a[j] != -1:\n                l.append(a[j])\n        elif j == len(a) - 1:\n            if a[j - 1] == -1 and a[j] != -1:\n                l.append(a[j])\n        elif (a[j - 1] == -1 or a[j + 1] == -1) and a[j] != -1:\n            l.append(a[j])\n    if len(l) == 0:\n        k = 0\n    else:\n        k = (max(l) + min(l)) // 2\n    for j in range(len(a)):\n        if a[j] == -1:\n            a[j] = k\n    m = 0\n    for j in range(len(a) - 1):\n        if abs(a[j] - a[j + 1]) > m:\n            m = abs(a[j] - a[j + 1])\n    print(m, k)", "t = int(input())\nINF = 1000000007\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    am = []\n    m2 = -INF\n    for i in range(1, n):\n        if (a[i] == -1) ^ (a[i - 1] == -1):\n            am.append(max(a[i], a[i - 1]))\n        elif a[i] != -1 and a[i - 1] != -1:\n            m2 = max(abs(a[i - 1] - a[i]), m2)\n    if len(am) == 0:\n        am.append(0)\n    k = (max(am) + min(am)) // 2\n    m = abs(max(am) - k)\n    m = max(m, m2)\n    print(m, k)", "for _ in range(int(input())):\n    n = int(input())\n    L = list(map(int, input().split()))\n    R = []\n    for i in range(n):\n        if L[i] == -1:\n            if i > 0 and L[i - 1] != -1:\n                R.append(L[i - 1])\n            if i < n - 1 and L[i + 1] != -1:\n                R.append(L[i + 1])\n    R.sort()\n    if len(R) != 0:\n        ans = (R[0] + R[-1]) // 2\n    else:\n        ans = 0\n    for i in range(n):\n        if L[i] == -1:\n            L[i] = ans\n    V = abs(L[0] - L[1])\n    for i in range(n - 1):\n        r = abs(L[i] - L[i + 1])\n        if V < r:\n            V = r\n    print(V, ans)", "num_cases = int(input())\nfor case in range(num_cases):\n    n = int(input())\n    min_num = 1000000027\n    max_num = 0\n    biggest = 0\n    nums = input().split()\n    for i in range(len(nums)):\n        nums[i] = int(nums[i])\n    for i in range(len(nums)):\n        curr_num = nums[i]\n        prev_num = nums[i - 1]\n        if curr_num == -1:\n            if i != 0:\n                if prev_num != -1:\n                    max_num = max(max_num, prev_num)\n                    min_num = min(min_num, prev_num)\n            if i != len(nums) - 1:\n                next_num = nums[i + 1]\n                if next_num != -1:\n                    max_num = max(max_num, next_num)\n                    min_num = min(min_num, next_num)\n        elif i != 0 and prev_num != -1:\n            biggest = max(biggest, abs(curr_num - prev_num))\n    if min_num > max_num:\n        ans = max_num\n    else:\n        ans = (min_num + max_num) // 2\n    print(max(biggest, max(ans - min_num, max_num - ans)), end=' ')\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = []\n    b = []\n    l = list(map(int, input().split()))\n    if l.count(-1) == n:\n        print(0, 0)\n    else:\n        for i in range(n):\n            if l[i] != -1:\n                if i == 0:\n                    if l[i + 1] == -1:\n                        a.append(l[i])\n                elif i == n - 1:\n                    if l[i - 1] == -1:\n                        a.append(l[i])\n                elif l[i + 1] == -1 or l[i - 1] == -1:\n                    a.append(l[i])\n        k = (max(a) + min(a)) // 2\n        for i in range(n):\n            if l[i] == -1:\n                l[i] = k\n        for i in range(1, n):\n            b.append(abs(l[i] - l[i - 1]))\n        print(max(b), k)", "for _ in range(int(input())):\n    n = int(input())\n    L = list(map(int, input().split()))\n    R = []\n    for i in range(n):\n        if L[i] == -1:\n            if i > 0 and L[i - 1] != -1:\n                R.append(L[i - 1])\n            if i < n - 1 and L[i + 1] != -1:\n                R.append(L[i + 1])\n    R.sort()\n    if len(R) != 0:\n        ans = (R[0] + R[-1]) // 2\n    else:\n        ans = 0\n    for i in range(n):\n        if L[i] == -1:\n            L[i] = ans\n    V = abs(L[0] - L[1])\n    for i in range(n - 1):\n        r = abs(L[i] - L[i + 1])\n        if V < r:\n            V = r\n    print(V, ans)", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    if lst[0] != -1 and lst[1] == -1:\n        low = lst[0]\n        high = lst[0]\n    else:\n        low = max(lst)\n        high = 0\n    for i in range(1, n - 1):\n        if lst[i] != -1 and (lst[i - 1] == -1 or lst[i + 1] == -1):\n            if lst[i] < low:\n                low = lst[i]\n            if lst[i] > high:\n                high = lst[i]\n    if lst[n - 1] != -1 and lst[n - 2] == -1:\n        if lst[n - 1] > high:\n            high = lst[n - 1]\n        if lst[n - 1] < low:\n            low = lst[n - 1]\n    ans = int((low + high) / 2)\n    poss = high - ans\n    for i in range(n - 1):\n        if lst[i] != -1 and lst[i + 1] != -1:\n            temp = abs(lst[i] - lst[i + 1])\n            if temp > poss:\n                poss = temp\n    print(poss, ans)", "import math\nimport sys\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    e = 0\n    c = 0\n    r = []\n    mx = -10\n    mn = 10 ** 10\n    for i in range(n):\n        if a[i] != -1:\n            if i != 0:\n                if a[i - 1] == -1:\n                    mn = min(mn, a[i])\n                    mx = max(mx, a[i])\n            if i != n - 1:\n                if a[i + 1] == -1:\n                    mn = min(mn, a[i])\n                    mx = max(mx, a[i])\n        else:\n            r.append(i)\n    if len(r) == n:\n        k = 0\n    else:\n        k = (mx + mn) // 2\n    for i in range(len(r)):\n        a[r[i]] = k\n    mx = -2\n    for i in range(n - 1):\n        mx = max(mx, abs(a[i] - a[i + 1]))\n    print(mx, k)", "from sys import maxsize\n\ndef checker(n, lst):\n    (mx, mn) = (-maxsize, maxsize)\n    for i in range(n):\n        if i > 0 and lst[i] == -1 and (lst[i - 1] != -1):\n            (mn, mx) = (min(mn, lst[i - 1]), max(mx, lst[i - 1]))\n        if i < n - 1 and lst[i] == -1 and (lst[i + 1] != -1):\n            (mn, mx) = (min(mn, lst[i + 1]), max(mx, lst[i + 1]))\n    (result, answer) = ((mx + mn) // 2, 0)\n    for i in range(n):\n        if lst[i] == -1:\n            lst[i] = result\n        if i:\n            answer = max(answer, abs(lst[i] - lst[i - 1]))\n    return (answer, result)\nfor _ in range(int(input())):\n    m = int(input())\n    a = [int(j) for j in input().split()]\n    print(*checker(m, a))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (ans, small, big) = (0, 2 * 10 ** 9, -1)\n    for i in range(len(a) - 1):\n        if a[i] == -1 and a[i + 1] != -1:\n            small = min(small, a[i + 1])\n            big = max(big, a[i + 1])\n        if a[i] != -1 and a[i + 1] == -1:\n            small = min(small, a[i])\n            big = max(big, a[i])\n        if a[i] != -1 and a[i + 1] != -1:\n            ans = max(ans, abs(a[i] - a[i + 1]))\n    if big == -1:\n        print(ans, 0)\n    else:\n        x = (small + big) // 2\n        ans = max(ans, abs(big - x))\n        ans = max(ans, abs(x - small))\n        print(ans, x)", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    A = [int(i) for i in input().split()]\n    tmp = []\n    if A[0] == -1 and A[1] != -1:\n        tmp.append(A[1])\n    for i in range(1, n - 1):\n        if A[i] == -1:\n            if A[i + 1] != -1:\n                tmp.append(A[i + 1])\n            if A[i - 1] != -1:\n                tmp.append(A[i - 1])\n    if A[-1] == -1 and A[-2] != -1:\n        tmp.append(A[-2])\n    if len(tmp) == 0:\n        k = 0\n    else:\n        tmp = set(tmp)\n        k = (min(tmp) + max(tmp)) // 2\n    m = 0\n    B = [A[i] if A[i] >= 0 else k for i in range(n)]\n    for i in range(1, n):\n        m = max(abs(B[i] - B[i - 1]), m)\n    print(m, k)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = []\n    f2 = True\n    for i in range(n):\n        if a[i] != -1:\n            f2 = False\n            break\n    if f2:\n        print(0, 0)\n        continue\n    for i in range(n - 1):\n        if a[i] == -1 and a[i + 1] == -1:\n            pass\n        elif a[i] == -1:\n            ans.append(a[i + 1])\n        elif a[i + 1] == -1:\n            ans.append(a[i])\n    mi = min(ans)\n    mx = max(ans)\n    k = (mi + mx) // 2\n    m = abs(mi - k)\n    x = 0\n    for i in range(n):\n        if a[i] == -1:\n            a[i] = k\n    for i in range(n - 1):\n        x = max(x, abs(a[i] - a[i + 1]))\n    print(max(x, m), k)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    minn = 10 ** 9\n    maxx = 0\n    t = 0\n    for i in range(n - 1):\n        if a[i] != -1 and a[i + 1] == -1:\n            minn = min(a[i], minn)\n            maxx = max(a[i], maxx)\n        elif a[i] == -1 and a[i + 1] != -1:\n            minn = min(a[i + 1], minn)\n            maxx = max(a[i + 1], maxx)\n        elif a[i] != -1 and a[i + 1] != -1:\n            t = max(t, abs(a[i] - a[i + 1]))\n    if minn == 10 ** 9:\n        minn = 0\n    mm = float('inf')\n    kk = -1\n    k = (maxx + minn) // 2\n    m = max(abs(maxx - k), abs(minn - k), t)\n    if m < mm:\n        mm = m\n        kk = k\n    print(mm, kk)", "for _ in range(int(input())):\n    n = int(input())\n    list1 = [*map(int, input().split())]\n    list2 = []\n    maxi = 0\n    for i in range(len(list1)):\n        if list1[i] == -1:\n            if i > 0 and list1[i - 1] != -1:\n                list2.append(list1[i - 1])\n            if i < n - 1 and list1[i + 1] != -1:\n                list2.append(list1[i + 1])\n    if len(list2) == 0:\n        s = 0\n    else:\n        s = (max(list2) + min(list2)) // 2\n    for i in range(len(list1)):\n        if list1[i] == -1:\n            list1[i] = s\n    for i in range(n - 1):\n        maxi = max(maxi, abs(list1[i] - list1[i + 1]))\n    print(maxi, s)", "for _ in range(int(input())):\n    n = int(input())\n    s = '-2 ' + input() + ' -2'\n    l = [int(x) for x in s.split()]\n    l1 = []\n    max_abs = 0\n    for i in range(1, n + 1):\n        if l[i] > -1:\n            if l[i - 1] == -1 or l[i + 1] == -1:\n                l1.append(l[i])\n            if l[i + 1] > -1:\n                max_abs = max(max_abs, abs(l[i + 1] - l[i]))\n    if len(l1) == 0:\n        l1.append(0)\n    ma = max(l1)\n    mi = min(l1)\n    ans = (ma + mi) // 2\n    print(max(ma - ans, max_abs), ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mi = min(a)\n    ma = max(a)\n    maxe = -1\n    mine = -1\n    if ma == -1:\n        print(0, 0)\n        continue\n    ma = -1000000079404\n    mi = 6584949003033\n    for i in range(len(a) - 1):\n        if a[i] != -1 and a[i + 1] == -1:\n            if mi > a[i]:\n                mi = a[i]\n            if ma < a[i]:\n                ma = a[i]\n        if a[i + 1] != -1 and a[i] == -1:\n            if mi > a[i + 1]:\n                mi = a[i + 1]\n            if ma < a[i + 1]:\n                ma = a[i + 1]\n        if a[i + 1] != -1 and a[i] != -1:\n            if maxe < abs(a[i + 1] - a[i]):\n                maxe = abs(a[i] - a[i + 1])\n    printch = (mi + ma) // 2\n    if maxe != -1:\n        if maxe >= ma - printch:\n            print(maxe, printch)\n        else:\n            print(ma - printch, printch)\n    else:\n        print(ma - printch, printch)"]