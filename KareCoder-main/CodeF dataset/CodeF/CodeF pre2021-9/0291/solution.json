["import sys\n\ndef solve():\n    input = sys.stdin.readline\n    T = int(input())\n    Ans = [0] * T\n    for t in range(T):\n        N = int(input())\n        A = [int(a) for a in input().split()]\n        skillDict = dict()\n        for a in A:\n            if a in skillDict:\n                skillDict[a] += 1\n            else:\n                skillDict[a] = 1\n        for i in range(1, N + 1):\n            if i in skillDict:\n                Ans[t] += skillDict[i] // i\n                if i + 1 not in skillDict:\n                    skillDict[i + 1] = 0\n                skillDict[i + 1] += skillDict[i] % i\n    print('\\n'.join(map(str, Ans)))\n    return 0\nsolve()", "import sys\n\ndef solve():\n    input = sys.stdin.readline\n    T = int(input())\n    Ans = [0] * T\n    for t in range(T):\n        N = int(input())\n        A = [int(a) for a in input().split()]\n        skillDict = dict()\n        for a in A:\n            if a in skillDict:\n                skillDict[a] += 1\n            else:\n                skillDict[a] = 1\n        for i in range(1, N + 1):\n            if i in skillDict:\n                Ans[t] += skillDict[i] // i\n                if i + 1 not in skillDict:\n                    skillDict[i + 1] = 0\n                skillDict[i + 1] += skillDict[i] % i\n    print('\\n'.join(map(str, Ans)))\n    return 0\nsolve()", "import sys\ninput = sys.stdin.readline\nins = lambda : input().rstrip()\nini = lambda : int(input().rstrip())\ninm = lambda : map(int, input().split())\ninl = lambda : list(map(int, input().split()))\nout = lambda x: print('\\n'.join(map(str, x)))\nans = []\nt = ini()\nfor _ in range(t):\n    n = ini()\n    a = sorted(inl())\n    tmp = 0\n    count = 0\n    for i in a:\n        tmp += 1\n        if tmp == i:\n            count += 1\n            tmp = 0\n    ans.append(count)\nout(ans)", "import sys\nI = sys.stdin.readline\nans = ''\nfor _ in range(int(I())):\n    n = int(I())\n    a = sorted(list(map(int, I().split())))\n    i = j = 0\n    grp = 0\n    while j < n:\n        if j - i + 1 >= a[j]:\n            grp += 1\n            i = j + 1\n        j += 1\n    ans += str(grp) + '\\n'\nprint(ans)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    w = sorted(map(int, input().split()))\n    (c, d, e) = (0, 0, 0)\n    for i in w:\n        d = i\n        e += 1\n        if d <= e:\n            c += 1\n            e = 0\n    print(c)", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    test = int(input())\n    for _ in range(test):\n        n = int(input())\n        ara = [int(num) for num in input().split()]\n        ara.sort()\n        ans = 0\n        length = 0\n        for num in ara:\n            if num <= length + 1:\n                ans += 1\n                length = 0\n            else:\n                length += 1\n        print(ans)\nmain()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    e = list(map(int, input().split()))\n    c = sorted(e)\n    explorers = 0\n    count = 1\n    for x in c:\n        if count >= x:\n            explorers += 1\n            count = 0\n        count += 1\n    print(explorers)", "import sys\nfor arr in sys.stdin.readlines()[2::2]:\n    arr = sorted([int(x) for x in arr.split()])\n    (ans, cnt) = (0, 0)\n    for x in arr:\n        cnt += 1\n        if cnt == x:\n            (ans, cnt) = (ans + 1, 0)\n    print(ans)", "for l in [*open(0)][2::2]:\n    expo = sorted(map(int, l.split()))\n    group = 0\n    res = 0\n    for i in expo:\n        group += 1\n        if group >= i:\n            res += 1\n            group = 0\n    print(res)", "for l in [*open(0)][2::2]:\n    e = sorted([int(i) for i in l.split()])\n    g = 0\n    ans = 0\n    for i in e:\n        g += 1\n        if g >= i:\n            ans += 1\n            g = 0\n    print(ans)", "import sys\ninput = sys.stdin.readline\n\ndef rez():\n    n = int(input())\n    e = sorted(list(map(int, input().split())))\n    k = 0\n    ans = 0\n    for i in range(n):\n        k += 1\n        if k >= e[i]:\n            k = 0\n            ans += 1\n    print(ans)\nfor t in range(int(input())):\n    rez()", "import sys\ninput = sys.stdin.readline\n\ndef rez():\n    n = int(input())\n    e = sorted(list(map(int, input().split())))\n    k = 0\n    ans = 0\n    for i in range(n):\n        k += 1\n        if k >= e[i]:\n            k = 0\n            ans += 1\n    print(ans)\nfor t in range(int(input())):\n    rez()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    size = 1\n    for i in a:\n        if i == size:\n            ans += 1\n            size = 1\n        else:\n            size += 1\n    print(ans)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    e = list(map(int, input().split()))\n    c = sorted(e, reverse=True)\n    explorers = 0\n    count = 0\n    while c:\n        count += 1\n        if count >= c.pop():\n            explorers += 1\n            count = 0\n    print(explorers)", "for l in [*open(0)][2::2]:\n    e = sorted([int(i) for i in l.split()])\n    g = 0\n    ans = 0\n    for i in e:\n        g += 1\n        if g >= i:\n            ans += 1\n            g = 0\n    print(ans)", "from sys import stdin\nt = int(stdin.readline())\nz = [0] * t\nfor _ in range(t):\n    n = int(stdin.readline())\n    a = sorted(list(map(int, stdin.readline().split())))\n    k = a[0]\n    c = 1\n    sz = 1\n    for i in range(1, n):\n        if c < k:\n            c += 1\n        else:\n            c = 1\n            sz += 1\n        k = a[i]\n    if c < k:\n        sz -= 1\n    z[_] = sz\nprint(*z, sep='\\n')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    input()\n    l = sorted([int(i) for i in input().split()])\n    g = 0\n    ans = 0\n    for i in l:\n        g += 1\n        if g >= i:\n            ans += 1\n            g = 0\n    print(ans)", "import random\nimport math\nfrom collections import defaultdict\nimport itertools\nfrom sys import stdin, stdout\n\ndef main():\n    for _ in range(int(stdin.readline())):\n        n = int(stdin.readline())\n        e = list(map(int, stdin.readline().split()))\n        e.sort()\n        k = e[0]\n        c = 1\n        group = 0\n        for i in range(1, n):\n            if c < k:\n                c += 1\n            else:\n                c = 1\n                group += 1\n            k = e[i]\n        if c == k:\n            group += 1\n        print(group)\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    e = list(map(int, input().split()))\n    e.sort()\n    ans = 0\n    cur = 0\n    for i in e:\n        cur += 1\n        if i <= cur:\n            ans += 1\n            cur = 0\n    return ans\nt = int(input())\nfor i in range(t):\n    print(main())", "from sys import stdin\nt = int(stdin.readline())\nz = [0] * t\nfor _ in range(t):\n    n = int(stdin.readline())\n    a = sorted(list(map(int, stdin.readline().split())))\n    k = a[0]\n    c = 1\n    sz = 1\n    i = 1\n    while i < n:\n        if c < k:\n            c += 1\n        else:\n            c = 1\n            sz += 1\n        k = a[i]\n        i += 1\n    if c < k:\n        z[_] = sz - 1\n    else:\n        z[_] = sz\nprint(*z, sep='\\n')", "import sys\ninput = sys.stdin.readline\nfor T in range(int(input())):\n    n = int(input())\n    inp = sorted([int(i) for i in input().split()])\n    sz = ans = 0\n    for i in inp:\n        sz += 1\n        if sz == i:\n            sz = 0\n            ans += 1\n    print(ans)", "from sys import stdin\nt = int(stdin.readline())\nfor _ in range(t):\n    n = int(stdin.readline())\n    e = list(map(int, stdin.readline().split()))\n    e.sort()\n    rem = ans = 0\n    for i in e:\n        rem += 1\n        if rem >= i:\n            ans += 1\n            rem = 0\n    print(ans)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    cnt = 0\n    ans = 0\n    for x in a:\n        cnt += 1\n        if cnt == x:\n            ans += 1\n            cnt = 0\n    print(ans)", "from sys import stdin\nt = int(stdin.readline())\nz = [0] * t\nfor _ in range(t):\n    n = int(stdin.readline())\n    a = sorted(list(map(int, stdin.readline().split())))\n    k = a[0]\n    c = 1\n    sz = 1\n    for i in range(1, n):\n        if c < k:\n            c += 1\n        else:\n            c = 1\n            sz += 1\n        k = a[i]\n    if c < k:\n        sz -= 1\n    z[_] = sz\nprint(*z, sep='\\n')", "def explore(explores, experiences):\n    group_size = 0\n    groups = 0\n    experiences = sorted(experiences)\n    for experience in experiences:\n        group_size += 1\n        if int(experience) <= group_size:\n            groups += 1\n            group_size = 0\n    return groups\nimport os\nimport sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    e = int(input())\n    el = map(int, input().split())\n    ans = explore(e, el)\n    print(ans)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = 0\n    g = 0\n    for i in l:\n        g += 1\n        if g == i:\n            c += 1\n            g = 0\n    print(c)", "import sys\ninput = sys.stdin.readline\noutput = sys.stdout\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solve(n, l):\n    l.sort()\n    g = 0\n    c = 1\n    for i in range(n):\n        if c == l[i]:\n            g += 1\n            c = 0\n        c += 1\n    output.write(str(g) + '\\n')\nn = inp()\nfor i in range(n):\n    a = inp()\n    b = inlt()\n    solve(a, b)", "import sys, bisect\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    al = list(map(int, input().split()))\n    al.sort()\n    ans = 0\n    i = 0\n    while i < n:\n        j = i\n        while j < n and al[j] > j - i + 1:\n            j += 1\n        if j < n and al[j] <= j - i + 1:\n            ans += 1\n        i = j + 1\n    print(ans)\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        solve()\nmain()", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    (ans, c) = (0, 0)\n    for i in l:\n        c += 1\n        if i <= c:\n            c = 0\n            ans += 1\n    print(ans)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    (ans, c) = (0, 0)\n    for i in l:\n        c += 1\n        if i == c:\n            c = 0\n            ans += 1\n    print(ans)", "import sys\ninput = sys.stdin.readline\nfor _ in [0] * int(input()):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for x in a:\n        if x not in d:\n            d[x] = 1\n        else:\n            d[x] = d[x] + 1\n    remlen = g = 0\n    for i in sorted(d):\n        aci = d[i] + remlen\n        g = g + aci // i\n        remlen = aci % i\n    print(g)", "import sys\nreader = (s.rstrip() for s in sys.stdin)\ninput = reader.__next__\nt = int(input())\nfor test in range(t):\n    n = int(input())\n    val = [int(x) for x in input().split()]\n    val.sort()\n    i = 1\n    ans = 0\n    c = 1\n    maxx = val[0]\n    while i < n:\n        if c < maxx:\n            maxx = max(maxx, val[i])\n            c += 1\n        else:\n            ans += 1\n            maxx = val[i]\n            c = 1\n        i += 1\n    if c == maxx:\n        ans += 1\n    print(ans)", "import sys\nI = sys.stdin.readline\n\ndef solve():\n    n = int(I())\n    es = list(map(int, I().split()))\n    es = sorted(es)\n    (i, start) = (0, 0)\n    cnt = 0\n    while start < n:\n        i = start + es[i]\n        while i <= n and i - start < es[i - 1]:\n            i += 1\n        if i <= n:\n            cnt += 1\n        else:\n            break\n        start = i\n    return cnt\nn = int(I())\nfor _ in range(n):\n    print(solve())", "T = int(input())\nres = []\nfor i in range(T):\n    cnt = 0\n    active = 0\n    restr = 0\n    N = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    for j in arr:\n        active += 1\n        restr = j\n        if restr == active:\n            active = 0\n            cnt += 1\n    res.append(cnt)\nprint('\\n'.join((str(v) for v in res)))", "import sys\ninput = sys.stdin.readline\nfor nt in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    ans = 0\n    g = 1\n    m = l[0]\n    for i in range(1, n):\n        if g >= m:\n            ans += 1\n            g = 1\n            m = l[i]\n        else:\n            m = max(m, l[i])\n            g += 1\n    if g >= m:\n        ans += 1\n    print(ans)", "from sys import stdin, stdout\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    a = [int(x) for x in stdin.readline().split()]\n    a.sort()\n    c = 0\n    j = 0\n    for i in range(n):\n        j += 1\n        if j == a[i]:\n            j = 0\n            c += 1\n    print(c)", "from sys import stdin, stdout\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    l = list(map(int, stdin.readline().split()))\n    g = 0\n    c = 0\n    l.sort()\n    for i in range(n):\n        c += 1\n        if c >= l[i]:\n            g += 1\n            c = 0\n    print(g)", "from sys import stdin, stdout\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    l = list(map(int, stdin.readline().split()))\n    g = 0\n    c = 0\n    l.sort()\n    for i in range(n):\n        c += 1\n        if c >= l[i]:\n            g += 1\n            c = 0\n    print(g)", "from sys import stdin, stdout\nfrom collections import Counter\nfrom itertools import permutations\nimport bisect\nimport math\nI = lambda : map(int, stdin.readline().split())\nI1 = lambda : stdin.readline()\nfor _ in range(int(I1())):\n    n = int(I1())\n    a = list(I())\n    a.sort()\n    x = c = 0\n    for i in a:\n        c += 1\n        if i == c:\n            x += 1\n            c = 0\n    print(x)", "import sys\nsys.setrecursionlimit(10 ** 9)\nfrom collections import deque\nimport heapq\nfrom itertools import combinations\nimport bisect\ninput = sys.stdin.readline\ntt = int(input())\nfor ii in range(tt):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    ans = 0\n    i = 0\n    f = 1\n    while i < n:\n        if f >= l[i]:\n            ans += 1\n            f = 1\n        else:\n            f += 1\n        i += 1\n    print(ans)", "from sys import stdin, stdout\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    expi = list(map(int, stdin.readline().split()))\n    expi.sort()\n    group_count = 0\n    i = 0\n    l = -1\n    while i < n:\n        if expi[i] == i - l:\n            group_count += 1\n            l = i\n        i += 1\n    print(group_count)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    sepa = -1\n    for i in range(n):\n        if i - sepa >= a[i]:\n            sepa = i\n            ans += 1\n    print(ans)", "from sys import stdin\nt = int(stdin.readline())\nfor _ in range(t):\n    N = int(stdin.readline())\n    people = [int(var) for var in stdin.readline().split()]\n    people.sort()\n    ans = 0\n    (start, end, lmt) = (0, 0, people[0])\n    while end < N:\n        if end - start + 1 >= lmt:\n            (start, end) = (end + 1, end + 1)\n            if end < len(people):\n                lmt = people[start]\n            ans += 1\n        else:\n            if end + 1 < len(people):\n                lmt = max(lmt, people[end + 1])\n            end += 1\n    print(ans, end='\\n')", "import sys\nimport os\nimport math\nimport copy\nfrom math import gcd\nfrom bisect import bisect\nfrom io import BytesIO, IOBase\nfrom math import sqrt, floor, factorial, gcd, log, ceil\nfrom collections import deque, Counter, defaultdict\nfrom itertools import permutations, combinations\nimport itertools\n\ndef Int():\n    return int(sys.stdin.readline())\n\ndef Mint():\n    return map(int, sys.stdin.readline().split())\n\ndef Lstr():\n    return list(sys.stdin.readline().strip())\n\ndef Str():\n    return sys.stdin.readline().strip()\n\ndef Mstr():\n    return map(str, sys.stdin.readline().strip().split())\n\ndef List():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef Hash():\n    return dict()\n\ndef Mod():\n    return 1000000007\n\ndef Ncr(n, r, p):\n    return fact[n] * (ifact[r] * ifact[n - r] % p) % p\n\ndef Most_frequent(list):\n    return max(set(list), key=list.count)\n\ndef Mat2x2(n):\n    return [List() for _ in range(n)]\n\ndef Lcm(x, y):\n    return x * y // gcd(x, y)\n\ndef dtob(n):\n    return bin(n).replace('0b', '')\n\ndef btod(n):\n    return int(n, 2)\n\ndef common(l1, l2):\n    return set(l1).intersection(l2)\n\ndef solution():\n    for i in range(Int()):\n        n = Int()\n        a = List()\n        ans = 0\n        curr = 0\n        a.sort()\n        for i in range(n):\n            curr += 1\n            if curr == a[i]:\n                curr = 0\n                ans += 1\n        print(ans)\nsolution()", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    r = [0]\n    for x in a:\n        r += (max(r[-1], x <= len(r) and r[-x] + 1),)\n    print(r[-1])", "cases = int(input())\nt_group = [''] * cases\nfor case in range(cases):\n    n = int(input())\n    exp = [int(s) for s in input().split()]\n    exp.sort()\n    i = 0\n    agroup = 1\n    groups = 0\n    while i < n:\n        value = exp[i]\n        if value <= agroup:\n            groups += 1\n            i += value\n            agroup = value\n        else:\n            need = value - agroup\n            i += need\n            agroup += need\n    t_group[case] = str(groups)\nout = '\\n'.join(t_group)\nprint(out)", "import sys\ninput = sys.stdin.readline\n\ndef algo(arr, n):\n    arr = sorted(arr)\n    result = 0\n    a = 0\n    b = 0\n    for i in arr:\n        if a == 0:\n            a = i\n            b = i\n        elif i > b:\n            a += i - b\n            b = i\n        a -= 1\n        if a == 0:\n            result += 1\n    return result\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(algo(arr, n))", "from sys import stdin\nt = int(stdin.readline())\nfor _ in range(t):\n    N = int(stdin.readline())\n    people = [int(var) for var in stdin.readline().split()]\n    people.sort()\n    ans = 0\n    (start, end, lmt) = (0, 0, people[0])\n    while end < len(people):\n        if end - start + 1 >= lmt:\n            (start, end) = (end + 1, end + 1)\n            if end < len(people):\n                lmt = people[start]\n            ans += 1\n        else:\n            if end + 1 < len(people):\n                lmt = max(lmt, people[end + 1])\n            end += 1\n    print(ans, end='\\n')", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    r = [-1, 0]\n    for x in a:\n        r += (max(r[-1], r[-min(x, len(r))] + 1),)\n    print(r[-1])", "from sys import stdin\n\ndef input():\n    return stdin.readline()\ntests = int(input())\n\ndef solve(n, a):\n    a.sort()\n    answer = 0\n    group = 0\n    for i in a:\n        group += 1\n        if i == group:\n            answer += 1\n            group = 0\n    return answer\nfor t in range(0, tests):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    print(solve(n, a))", "import sys, random, bisect\nfrom collections import deque, defaultdict\nfrom heapq import heapify, heappop, heappush\nmod = int(1000000000.0 + 7)\ninf = int(1e+20)\ninput = lambda : sys.stdin.readline().rstrip()\nmi = lambda : map(int, input().split())\nli = lambda : list(mi())\nii = lambda : int(input())\npy = lambda : print('YES')\npn = lambda : print('NO')\nt = ii()\nfor _ in range(t):\n    n = ii()\n    arr = sorted(li(), reverse=True)\n    res = 0\n    cnt = 0\n    while arr:\n        cnt += 1\n        if cnt >= arr.pop():\n            res += 1\n            cnt = 0\n    print(res)", "from sys import stdin\nt = int(stdin.readline())\nfor _ in range(t):\n    N = int(stdin.readline())\n    people = [int(var) for var in stdin.readline().split()]\n    people.sort()\n    ans = 0\n    (start, end, lmt) = (0, 0, people[0])\n    while end < len(people):\n        if end - start + 1 >= lmt:\n            (start, end) = (end + 1, end + 1)\n            if end < len(people):\n                lmt = people[start]\n            ans += 1\n        else:\n            if end + 1 < len(people):\n                lmt = max(lmt, people[end + 1])\n            end += 1\n    print(ans)", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor test in range(T):\n    N = int(input())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    idx = 0\n    count = 0\n    flag = True\n    while idx < len(lst):\n        check = 1\n        req = lst[idx]\n        idx += 1\n        while check < req:\n            if idx >= len(lst):\n                flag = False\n                break\n            if req != lst[idx]:\n                req = lst[idx]\n            check += 1\n            idx += 1\n        if flag is True:\n            count += 1\n    print(count)", "import sys\nfor i in range(int(input())):\n    n = int(sys.stdin.readline())\n    d = [0] * (n + 1)\n    c = 0\n    for i in map(int, sys.stdin.readline().split()):\n        d[i] += 1\n    for i in range(1, n + 1):\n        c = c + d[i] // i\n        if i == n:\n            continue\n        d[i + 1] += d[i] % i\n    print(c)", "import sys\nlines = sys.stdin.readlines()\ntests = int(lines[0])\nfor t in range(0, tests):\n    n = int(lines[1 + t * 2])\n    a = sorted(list(map(int, lines[2 + t * 2].split(' '))))\n    res = 0\n    g = 0\n    for v in a:\n        g += 1\n        if v <= g:\n            res += 1\n            g = 0\n    print(res)", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    a = sorted(list(map(int, stdin.readline().split())))\n    teams = 0\n    curr = 0\n    for i in a:\n        curr += 1\n        if curr == i:\n            teams += 1\n            curr = 0\n    print(teams)", "from sys import stdin, stdout\nfor _ in range(int(stdin.readline().strip())):\n    n = int(stdin.readline().strip())\n    (k, c) = (0, 0)\n    a = sorted(list(map(int, stdin.readline().strip().split())))\n    for i in range(n):\n        if a[i] > k + 1:\n            k += 1\n        else:\n            c += 1\n            k = 0\n    print(c)", "from sys import stdin\ninput = stdin.readline\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = [0] * (n + 1)\n    for i in input().strip().split(' '):\n        a[int(i)] += 1\n    rem = 0\n    count = 0\n    for i in range(1, n + 1):\n        count += (a[i] + rem) // i\n        rem = (a[i] + rem) % i\n    print(count)", "from sys import stdin, stdout\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    l = list(map(int, stdin.readline().split()))\n    g = 0\n    c = 0\n    l.sort()\n    for i in range(n):\n        c += 1\n        if c >= l[i]:\n            g += 1\n            c = 0\n    print(g)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [0] * (max(a) + 1)\n    for i in range(n):\n        b[a[i]] += 1\n    p = 0\n    ans = 0\n    for i in range(1, len(b)):\n        if p + b[i] >= i:\n            ans += (p + b[i]) // i\n            p = (p + b[i]) % i\n        else:\n            p += b[i]\n    print(ans)", "z = ''\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    s.sort()\n    c = 0\n    x = 0\n    for i in s:\n        c += 1\n        if i == c:\n            x += 1\n            c = 0\n    z += str(x) + '\\n'\nprint(z)", "import sys\n\ndef answer(N, e):\n    cnt = [0] * (N + 2)\n    for element in e:\n        cnt[element] += 1\n    groups = 0\n    for i in range(1, N + 1):\n        groups += cnt[i] // i\n        num_used = cnt[i] // i * i\n        cnt[i] -= num_used\n        cnt[i + 1] += cnt[i]\n        cnt[i] = 0\n    return groups\n\ndef main():\n    T = int(input())\n    while T:\n        N = int(sys.stdin.readline())\n        e = [int(i) for i in sys.stdin.readline().split()]\n        print(answer(N, e))\n        T -= 1\n    return\nmain()", "r = ''\nfor _ in '*' * int(input()):\n    (n, k) = (int(input()), 0)\n    (e, a) = (map(int, input().split()), [0] * (n + 1))\n    for j in e:\n        a[j - 1] += 1\n    for i in range(n):\n        k += a[i] // (i + 1)\n        a[i + 1] += a[i] % (i + 1)\n    r += str(k) + '\\n'\nprint(r)", "n = int(input())\nfinal_res = []\nfor _ in range(n):\n    input()\n    nums = sorted(list(map(int, input().split())))\n    res = 0\n    i = 0\n    last_group_start = 0\n    while i < len(nums):\n        if i - last_group_start + 1 == nums[i]:\n            res += 1\n            last_group_start = i + 1\n        i += 1\n    final_res.append(str(res))\nprint('\\n'.join(final_res))", "import sys\n\ndef read_integer():\n    return int(sys.stdin.readline())\n\ndef read_integers():\n    return [int(x) for x in sys.stdin.readline().split(' ')]\n\ndef print_integers(nums):\n    print(' '.join([str(x) for x in nums]))\n\ndef func():\n    m = read_integer()\n    a = sorted(read_integers())\n    ans = 0\n    now = 0\n    for i in range(m):\n        now += 1\n        if now >= a[i]:\n            ans += 1\n            now = 0\n    print(ans)\nn = read_integer()\nfor _ in range(n):\n    func()", "import sys\nT = int(sys.stdin.readline())\nfor t in range(T):\n    n = int(sys.stdin.readline())\n    arr = list(map(int, sys.stdin.readline().split()))\n    arr = list(sorted(arr))\n    groupsFormed = 0\n    groupSize = None\n    addedInGroup = 0\n    for num in arr:\n        groupSize = max(-1 if groupSize is None else groupSize, num)\n        addedInGroup += 1\n        if groupSize == addedInGroup:\n            groupsFormed += 1\n            groupSize = None\n            addedInGroup = 0\n    print(groupsFormed)", "from sys import stdin as f\nt = int(f.readline().strip())\nfor _ in range(t):\n    n = int(f.readline().strip())\n    arr = sorted([int(i) for i in f.readline().strip().split()])\n    (count, group_max, result) = (0, 0, 0)\n    for a in arr:\n        count = count + 1\n        group_max = max(group_max, a)\n        if group_max <= count:\n            (result, count, group_max) = (result + 1, 0, 0)\n        else:\n            continue\n    print(result)", "n = int(input())\nfinal_res = []\nfor _ in range(n):\n    input()\n    nums = sorted(list(map(int, input().split())))\n    res = 0\n    i = 0\n    last_group_start = 0\n    while i < len(nums):\n        if i - last_group_start + 1 == nums[i]:\n            i += 1\n            res += 1\n            last_group_start = i\n        else:\n            i += nums[i] - (i - last_group_start + 1)\n    final_res.append(str(res))\nprint(final_res[0])\nprint('\\n'.join(final_res[1:]))"]