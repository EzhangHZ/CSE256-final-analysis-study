["def solve(n, mod):\n    if n <= 3:\n        return 0\n    else:\n        last_ans = 17\n        ans = 17\n        size = (n - 1) * (n - 2) // 2 + 1\n        inv = 1\n        record = [[0 for i in range(size + 1)] for i in range(2)]\n        record[0][0:4] = [1, 2, 2, 1]\n        for m in range(4, n):\n            tp_size = m * (m - 1) // 2\n            ans = (m + 1) * last_ans\n            tp = 0\n            for i in range(m):\n                tp += record[inv ^ 1][i]\n                record[inv][i] = tp % mod\n            for i in range(m, tp_size // 2 + 1):\n                tp += record[inv ^ 1][i]\n                tp -= record[inv ^ 1][i - m]\n                record[inv][i] = tp % mod\n            for i in range(tp_size // 2 + 1):\n                record[inv][tp_size - i] = record[inv][i]\n            total = 0\n            for i in range(tp_size - 1):\n                tp = 0\n                for j in range(max(1, -tp_size + i + m + 2), m + 1):\n                    tp += j * int(record[inv][m + 2 - j + i])\n                total += int(record[inv][i])\n                total %= mod\n                tp *= total\n                tp %= mod\n                ans += tp\n                ans %= mod\n            last_ans = ans\n            inv ^= 1\n        return int(ans) % mod\n\ndef main():\n    (n, mod) = map(int, input().split())\n    print(solve(n, mod))\nmain()", "def solve(n, mod):\n    if n <= 3:\n        return 0\n    else:\n        last_ans = 17\n        ans = 17\n        size = (n - 1) * (n - 2) // 2 + 1\n        inv = 1\n        record = [[0 for i in range(size + 1)] for i in range(2)]\n        record[0][0:4] = [1, 2, 2, 1]\n        for m in range(4, n):\n            tp_size = m * (m - 1) // 2\n            ans = (m + 1) * last_ans\n            tp = 0\n            for i in range(m):\n                tp += record[inv ^ 1][i]\n                record[inv][i] = tp % mod\n            for i in range(m, tp_size // 2 + 1):\n                tp += record[inv ^ 1][i]\n                tp -= record[inv ^ 1][i - m]\n                record[inv][i] = tp % mod\n            for i in range(tp_size // 2 + 1):\n                record[inv][tp_size - i] = record[inv][i]\n            total = 0\n            for i in range(tp_size - 1):\n                tp = 0\n                for j in range(max(1, -tp_size + i + m + 2), m + 1):\n                    tp += j * int(record[inv][m + 2 - j + i])\n                total += int(record[inv][i])\n                total %= mod\n                tp *= total\n                tp %= mod\n                ans += tp\n                ans %= mod\n            last_ans = ans\n            inv ^= 1\n        return int(ans) % mod\n\ndef main():\n    (n, mod) = map(int, input().split())\n    print(solve(n, mod))\nmain()"]