["ans = []\nfor _ in range(int(input())):\n    s = [*map(int, input().split())]\n    sx = sorted(s)\n    if {max(s[0:2]), max(s[2:4])} - {sx[2], sx[3]}:\n        ans += ['NO']\n    else:\n        ans += ['YES']\nprint('\\n'.join(ans))", "for i in [*open(0)][1:]:\n    a = (*map(int, i.split()),)\n    print('YNEOS'[max(a[:2]) + max(a[2:]) < sum(sorted(a)[2:])::2])", "import sys\ninput = sys.stdin.readline\noutput = sys.stdout.write\n\ndef main():\n    tests = int(input().rstrip())\n    for i in range(tests):\n        list_ = list(map(int, input().rstrip().split()))\n        winner_1 = 0\n        if list_[0] < list_[1]:\n            winner_1 += list_[1]\n        else:\n            winner_1 += list_[0]\n        winner_2 = 0\n        if list_[2] < list_[3]:\n            winner_2 += list_[3]\n        else:\n            winner_2 += list_[2]\n        list_ = sorted(list_, reverse=True)\n        winners_ = set()\n        winners_.add(list_[0])\n        winners_.add(list_[1])\n        if winner_1 in winners_ and winner_2 in winners_:\n            output('YES')\n        else:\n            output('NO')\n        output('\\n')\nmain()", "def main():\n    n = int(input())\n    ans = ''\n    for _ in range(n):\n        skills = list(map(int, input().split(' ')))\n        if skills[0] > skills[1]:\n            max1index = 0\n            max2index = 1\n        else:\n            max1index = 1\n            max2index = 0\n        for (index, value) in enumerate(skills):\n            if index in [0, 1]:\n                continue\n            if value > skills[max1index]:\n                max2index = max1index\n                max1index = index\n            elif value > skills[max2index]:\n                max2index = index\n        middle = 1\n        if max1index <= middle and max2index <= middle or (max1index > middle and max2index > middle):\n            ans += 'NO\\n'\n        else:\n            ans += 'YES\\n'\n    print(ans)\nmain()", "for i in [*open(0)][1:]:\n    a = (*map(int, i.split()),)\n    print('YNEOS'[max(a[:2]) + max(a[2:]) < sum(sorted(a)[2:])::2])", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    l = list(map(int, input().split()))\n    y = sorted(l)\n    a = l.index(y[-1])\n    b = l.index(y[-2])\n    if abs(a - b) > 1:\n        print('YES')\n    elif a == 1 and b == 2:\n        print('YES')\n    elif a == 2 and b == 1:\n        print('YES')\n    else:\n        print('NO')", "for s in [*open(0)][1:]:\n    arr = list(map(int, s.split()))\n    (a, b, c, d) = arr.copy()\n    (x, y) = [max(a, b), max(c, d)]\n    arr = [arr.pop(arr.index(max(arr))), arr.pop(arr.index(max(arr)))]\n    if x in arr and y in arr:\n        print('YES')\n    else:\n        print('NO')", "for s in [*open(0)][1:]:\n    a = (*map(int, s.split()),)\n    print('YNEOS'[max(a[:2]) + max(a[2:]) != sum(sorted(a)[2:])::2])", "for i in [*open(0)][1:]:\n    a = (*map(int, i.split()),)\n    print('YNEOS'[max(a[:2]) + max(a[2:]) < sum(sorted(a)[2:])::2])", "t = int(input())\nlst2 = []\nfor x in range(0, t):\n    lst = list(map(int, input().split()))\n    max1 = max(lst[:2])\n    max2 = max(lst[2:])\n    lst.remove(max1)\n    lst.remove(max2)\n    max3 = max(lst)\n    if max3 > max1 or max3 > max2:\n        lst2.append('NO')\n    else:\n        lst2.append('YES')\nfor x in lst2:\n    print(x)", "import sys\ninput = sys.stdin.readline\n\ndef print(*args, end='\\n', sep=' ') -> None:\n    sys.stdout.write(sep.join(map(str, args)) + end)\n\ndef Solve():\n    s = sorted(enumerate(list(map(int, input().split()))), key=lambda x: x[1])\n    print('YES' if s[-1][0] > 1 and s[-2][0] <= 1 or (s[-2][0] > 1 and s[-1][0] <= 1) else 'NO')\nfor t in range(int(input())):\n    Solve()", "for i in [*open(0)][1:]:\n    a = (*map(int, i.split()),)\n    print('YNEOS'[max(a[:2]) + max(a[2:]) < sum(sorted(a)[2:])::2])", "ans = []\nfor i in range(int(input())):\n    arr = list(map(int, input().split()))\n    (a, b) = (max(arr[:2]), max(arr[2:]))\n    if sorted([a, b]) == sorted(arr)[2:]:\n        ans.append('YES')\n    else:\n        ans.append('NO')\nprint(*ans, sep='\\n')", "t = int(input())\nk = []\nfor _ in range(t):\n    a = list(map(int, input().split()))\n    k.append(a)\nfor i in k:\n    (k1, k2) = (i[:2], i[2:])\n    if max(k1) > min(k2) and max(k2) > min(k1):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\ncases = []\nwhile t > 0:\n    cases.append([int(x) for x in input().split(' ')])\n    t -= 1\nfor case in cases:\n    if max(case[0], case[1]) < min(case[2], case[3]) or min(case[0], case[1]) > max(case[2], case[3]):\n        print('NO')\n    else:\n        print('YES')", "(a, d) = (int(input()), [])\nfor i in range(0, a):\n    b = [int(i) for i in input().split()]\n    h1 = b.index(max(b))\n    b[h1] = -1\n    h2 = b.index(max(b))\n    if h1 > 1 and h2 > 1 or (h1 < 2 and h2 < 2):\n        d.append('NO')\n    else:\n        d.append('YES')\nprint(*d, sep='\\n')", "answer = []\n\ndef check(li):\n    (one, two, three, four) = li\n    if one > two:\n        win1 = one\n        l1 = two\n    else:\n        win1 = two\n        l1 = one\n    if three > four:\n        win2 = three\n        l2 = four\n    else:\n        win2 = four\n        l2 = three\n    if win1 > l2 and win2 > l1:\n        return 'YES'\n    else:\n        return 'NO'\nn = int(input())\nfor _ in range(n):\n    t = [int(item) for item in input().split()]\n    answer.append(check(t))\nfor item in answer:\n    print(item)", "def sol():\n    N = int(input())\n    pairs = []\n    teams = []\n    for _ in range(N):\n        teams.append([int(x) for x in input().split()])\n    for t in range(len(teams)):\n        team1 = (teams[t][0], teams[t][1])\n        team2 = (teams[t][2], teams[t][3])\n        if max(team1) < min(team2) or max(team2) < min(team1):\n            print('NO')\n        else:\n            print('YES')\nsol()", "for s in [*open(0)][1:]:\n    (a, b, c, d) = map(int, s.split())\n    print('YNEOS'[min(a, b) > max(c, d) or min(c, d) > max(a, b)::2])", "for s in [*open(0)][1:]:\n    arr = list(map(int, s.split()))\n    (a, b, c, d) = arr.copy()\n    (x, y) = [max(a, b), max(c, d)]\n    arr = [arr.pop(arr.index(max(arr))), arr.pop(arr.index(max(arr)))]\n    if x in arr and y in arr:\n        print('YES')\n    else:\n        print('NO')", "for i in [*open(0)][1:]:\n    a = (*map(int, i.split()),)\n    print('YNEOS'[max(a[:2]) + max(a[2:]) < sum(sorted(a)[2:])::2])", "for i in [*open(0)][1:]:\n    a = (*map(int, i.split()),)\n    print('YNEOS'[max(a[:2]) + max(a[2:]) < sum(sorted(a)[2:])::2])", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (s1, s2, s3, s4) = map(int, input().split())\n    arr = sorted([s1, s2, s3, s4])\n    (a, b) = (max(s1, s2), max(s3, s4))\n    (a, b) = (max(a, b), min(a, b))\n    return 'YES' if a == arr[-1] and b == arr[-2] else 'NO'\nfor _ in range(int(input())):\n    print(solve())", "for i in [*open(0)][1:]:\n    a = (*map(int, i.split()),)\n    print('YNEOS'[max(a[:2]) + max(a[2:]) < sum(sorted(a)[2:])::2])", "def solve():\n    (q, w, e, r) = [int(i) for i in input().split()]\n    if max(q, w) < e and max(q, w) < r or (max(e, r) < q and max(e, r) < w):\n        return 'NO'\n    return 'YES'\nt = int(input())\nans = []\nwhile t:\n    ans.append(str(solve()))\n    t -= 1\nprint('\\n'.join(ans))", "for s in [*open(0)][1:]:\n    a = (*map(int, s.split()),)\n    print('YNEOS'[max(a[:2]) + max(a[2:]) != sum(sorted(a)[2:])::2])", "result = ''\nfor i in range(0, int(input())):\n    num = input()\n    l = list(map(int, num.split()))\n    m1 = [l[0], l[1]]\n    m2 = [l[2], l[3]]\n    if max(m1) >= min(m2) and max(m2) >= min(m1):\n        result += 'YES\\n'\n    else:\n        result += 'NO\\n'\nprint(result)", "n = int(input())\nans = []\nfor i in range(n):\n    ssss = input().split()\n    s1 = int(ssss[0])\n    s2 = int(ssss[1])\n    s3 = int(ssss[2])\n    s4 = int(ssss[3])\n    if s1 > s3 and s1 > s4 and (s2 > s3) and (s2 > s4):\n        ans.append('NO')\n    elif s3 > s1 and s3 > s2 and (s4 > s1) and (s4 > s2):\n        ans.append('NO')\n    else:\n        ans.append('YES')\nfor i in ans:\n    print(i)", "t = int(input())\narr = []\nfor _ in range(t):\n    arr.append(list(map(int, input().split())))\nfor _ in range(t):\n    ar = arr[_]\n    max1 = max(ar[:2])\n    max2 = max(ar[2:])\n    ar.remove(max1)\n    ar.remove(max2)\n    if max1 > ar[1] and max2 > ar[0]:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\na = []\nfor i in range(n):\n    temp = list(map(int, input().split()))\n    x = max(temp[0], temp[1])\n    y = max(temp[2], temp[3])\n    if x < min(temp[2], temp[3]) or y < min(temp[0], temp[1]):\n        a.append('NO')\n    else:\n        a.append('YES')\nfor i in range(n):\n    print(a[i])", "def fair(a, b):\n    max = 0\n    min = 0\n    if a < b:\n        max = b\n        min = a\n    else:\n        max = a\n        min = b\n    return (max, min)\nn = int(input())\nresult = []\nfor i in range(n):\n    skill = list(map(int, input().split()))\n    (max1, min1) = fair(skill[0], skill[1])\n    (max2, min2) = fair(skill[2], skill[3])\n    if max1 < min2 or min1 > max2:\n        result.append('NO')\n    else:\n        result.append('YES')\nfor i in range(n):\n    print(result[i])", "n = int(input())\nscore = []\nfor i in range(n):\n    a = list(map(int, input().split()))\n    m1 = max(a[0], a[1])\n    m2 = max(a[2], a[3])\n    res = max(m1, m2)\n    if m1 <= a[2] and m1 <= a[3]:\n        score.append('NO')\n    elif m2 <= a[0] and m2 <= a[1]:\n        score.append('NO')\n    else:\n        score.append('YES')\nfor i in score:\n    print(i)", "for i in [*open(0)][1:]:\n    a = (*map(int, i.split()),)\n    print('YNEOS'[max(a[:2]) + max(a[2:]) < sum(sorted(a)[2:])::2])", "t = int(input())\nanswer = []\nfor i in range(t):\n    s = list(map(int, input().split(' ')))\n    if max(s[0], s[1]) < min(s[2], s[3]) or min(s[0], s[1]) > max(s[2], s[3]):\n        answer.append('NO')\n    else:\n        answer.append('YES')\nfor i in answer:\n    print(i)", "matches = []\nyes_no = []\ntests = int(input())\nif tests > 10 ** 4 or tests < 1:\n    exit()\nfor i in range(tests):\n    x = list(map(int, input().split()))\n    if len(x) != 4:\n        exit()\n    else:\n        matches.append(x)\nfor game in matches:\n    (first, second, third, fourth) = game\n    finalists = (max(first, second), max(third, fourth))\n    max1 = max(game)\n    if max1 > 100:\n        exit()\n    if min(game) < 1:\n        exit()\n    game.remove(max1)\n    max2 = max(game)\n    if max1 in finalists and max2 in finalists:\n        yes_no.append('YES')\n    else:\n        yes_no.append('NO')\nprint('\\n'.join(yes_no))", "import sys, math, itertools\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nfor w in wtf[1:]:\n    S = list(map(int, w.split()))\n    print('YES' if max(S[:2]) > min(S[2:]) and max(S[2:]) > min(S[:2]) else 'NO')", "t = int(input())\nlan = []\nfor _ in range(t):\n    x = list(map(int, input().split()))\n    ln = []\n    max_1 = max(x[0], x[1])\n    max_2 = max(x[2], x[3])\n    x.sort()\n    ln.append(x[2])\n    ln.append(x[3])\n    if max_1 in ln and max_2 in ln:\n        lan.append('YES')\n    else:\n        lan.append('NO')\nprint(*lan, sep='\\n')", "t = int(input())\nresults = []\nfor i in range(t):\n    temps = list(map(int, input().split()))\n    if min(temps[0], temps[1]) > max(temps[2], temps[3]) or min(temps[2], temps[3]) > max(temps[0], temps[1]):\n        results.append('NO')\n    else:\n        results.append('YES')\nprint('\\n'.join(results))", "t = int(input())\nl = []\nfor i in range(t):\n    s = input().split()\n    s = [int(i) for i in s]\n    (a, b, c, d) = (s[0], s[1], s[2], s[3])\n    one = max(a, b)\n    two = max(c, d)\n    s.sort(reverse=True)\n    if max(one, two) == s[0] and min(one, two) == s[1]:\n        l.append('YES')\n    else:\n        l.append('NO')\nfor i in l:\n    print(i)", "arr = []\nfor i in range(int(input())):\n    arr.append(list(map(int, input().split())))\nfor x in arr:\n    tmp = x[:]\n    tmp.sort(reverse=True)\n    tmp = tmp[:2]\n    if max(x[:2]) in tmp and max(x[2:]) in tmp:\n        print('YES')\n    else:\n        print('NO')", "def check():\n    d = 4\n    m = [int(d) for d in input().split(' ')]\n    j = []\n    j.append(max(m[0:2]))\n    j.append(max(m[2:]))\n    m.sort()\n    j.sort()\n    for i in range(2):\n        m.pop(0)\n    if m == j:\n        return 'YES'\n    else:\n        return 'NO'\nc = int(input())\nd = []\nfor i in range(c):\n    d.append(check())\nfor j in d:\n    print(j)", "for i in range(int(input())):\n    skills = list(map(int, input().split()))\n    if max(skills[:2]) > min(skills[2:]) and max(skills[2:]) > min(skills[:2]):\n        print('YES')\n    else:\n        print('NO')", "def check(s):\n    if min(s[0], s[1]) > max(s[2], s[3]):\n        return False\n    if max(s[0], s[1]) < min(s[2], s[3]):\n        return False\n    return True\nt = int(input())\nfor it in range(t):\n    s = [int(tmp) for tmp in input().split()]\n    if check(s):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    e = [int(i) for i in input().split()][:4]\n    e1 = e[:2]\n    e2 = e[2:4]\n    k = max(e)\n    e.remove(k)\n    k1 = max(e)\n    if k in e1 and k1 in e2 or (k in e2 and k1 in e1):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    l = list(map(int, input().split()))\n    q = []\n    if l[0] > l[1]:\n        q.append(l[0])\n    elif l[1] > l[0]:\n        q.append(l[1])\n    if l[2] > l[3]:\n        q.append(l[2])\n    elif l[2] < l[3]:\n        q.append(l[3])\n    q.sort()\n    l.sort()\n    a = l[2:4]\n    if a == q:\n        print('YES')\n    else:\n        print('NO')", "def Superman():\n    ScarletWitch = list(map(int, input().split()))\n    (Deadpool, Death, Falcon, Cap) = ScarletWitch\n    if Deadpool > Death:\n        Wolverine = Deadpool\n    else:\n        Wolverine = Death\n    if Falcon > Cap:\n        DoctorStrange = Falcon\n    else:\n        DoctorStrange = Cap\n    ScarletWitch.sort()\n    Jormungandr = [Wolverine, DoctorStrange]\n    Jormungandr.sort()\n    if ScarletWitch[2] == Jormungandr[0] and ScarletWitch[3] == Jormungandr[1]:\n        print('YES')\n    else:\n        print('NO')\nThanos = 1\nThanos = int(input())\nfor Gamora in range(Thanos):\n    Superman()", "t = int(input())\nfor i in range(t):\n    (a, b, c, d) = map(int, input().split())\n    l = []\n    if a > b:\n        s1 = a\n    else:\n        s1 = b\n    if c > d:\n        s2 = c\n    else:\n        s2 = d\n    l.append(a)\n    l.append(b)\n    l.append(c)\n    l.append(d)\n    l.sort()\n    if l[len(l) - 1] == s1 and l[len(l) - 2] == s2 or (l[len(l) - 1] == s2 and l[len(l) - 2] == s1):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    a = list(map(int, input().split()))\n    res1 = max(a[0], a[1])\n    res2 = max(a[2], a[3])\n    a.sort()\n    mn = min(res1, res2)\n    if mn == a[2]:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    l = list(map(int, input().split()))\n    (win1, f1) = (max(l[0], l[1]), min(l[0], l[1]))\n    (win2, f2) = (max(l[2], l[3]), min(l[2], l[3]))\n    if f1 > win2 or f2 > win1:\n        print('NO')\n    else:\n        print('YES')", "n = int(input())\nfor i in range(0, n):\n    my_list = input().split()\n    my_list = [int(item) for item in my_list]\n    a = my_list[0]\n    b = my_list[1]\n    c = my_list[2]\n    d = my_list[3]\n    if a > b and a > c and (a > d):\n        if b > c and b > d:\n            print('NO')\n        else:\n            print('YES')\n    elif b > a and b > c and (b > d):\n        if a > c and a > d:\n            print('NO')\n        else:\n            print('YES')\n    elif c > b and c > a and (c > d):\n        if d > a and d > b:\n            print('NO')\n        else:\n            print('YES')\n    elif d > b and d > a and (d > c):\n        if c > a and c > b:\n            print('NO')\n        else:\n            print('YES')", "t = int(input())\nfor i in range(t):\n    (s1, s2, s3, s4) = map(int, input().split())\n    a = max(s1, s2)\n    b = max(s3, s4)\n    if a > b:\n        if b > s1 and b < s2 or (b < s1 and b > s2):\n            print('YES')\n        else:\n            print('NO')\n    elif a > s3 and a < s4 or (a < s3 and a > s4):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (a, b, c, d) = map(int, input().split())\n    mx1 = max(a, b)\n    mx2 = max(c, d)\n    if mx1 < c and mx1 < d or (mx2 < a and mx2 < b):\n        print('NO')\n    else:\n        print('YES')", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    a = list(map(int, input().split()))\n    b = [max(a[0], a[1]), max(a[2], a[3])]\n    print(['NO', 'YES'][sorted(b) == sorted(a)[2:]])\nfor i in range(int(input())):\n    solve()", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    a = [int(i) for i in input().split()]\n    thr = max(a[0], a[1])\n    fr = max(a[2], a[3])\n    a.sort()\n    mini = min(thr, fr)\n    maxi = max(thr, fr)\n    if mini == a[2] and maxi == a[3]:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin\n\ndef ii():\n    return int(stdin.readline())\n\ndef mi():\n    return map(int, stdin.readline().split())\n\ndef li():\n    return list(mi())\n\ndef si():\n    return stdin.readline()\nt = 1\nt = ii()\nfor _ in range(t):\n    (a, b, c, d) = mi()\n    l1 = [a, b, c, d]\n    l1.sort(reverse=True)\n    e = l1[0]\n    f = l1[1]\n    if e == a and f == b or (e == b and f == a) or (e == c and f == d) or (e == d and f == c):\n        print('NO')\n    else:\n        print('YES')", "import sys\n\ndef turnir(x: list) -> str:\n    maxl = max(x[0], x[1])\n    minl = min(x[0], x[1])\n    maxr = max(x[2], x[3])\n    minr = min(x[2], x[3])\n    if maxl >= minr and maxr >= minl:\n        return 'YES'\n    else:\n        return 'NO'\n\ndef main():\n    n = int(sys.stdin.readline())\n    x = [0] * 4\n    for _ in range(n):\n        x = list(map(int, sys.stdin.readline().split()))\n        print(turnir(x))\nmain()", "import sys\ninputlines = sys.stdin.readlines()\nnumber_of_testcases = int(inputlines[0])\nfor i in range(number_of_testcases):\n    (s1, s2, s3, s4) = list(map(int, inputlines[i + 1].split(' ')))\n    maxs3s4 = max(s3, s4)\n    mins3s4 = min(s3, s4)\n    if s1 > maxs3s4 and s2 > maxs3s4 or (s1 < mins3s4 and s2 < mins3s4):\n        print('NO')\n    else:\n        print('YES')", "import sys\nimport math\nimport bisect\nimport math\nfrom itertools import accumulate\ninput = sys.stdin.readline\n\ndef inpit():\n    return int(input())\n\ndef inplt():\n    return list(map(int, input().split()))\n\ndef inpstr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef inpspit():\n    return map(int, input().split())\npow = math.pow\nfl = math.floor\nceil = math.ceil\ndis = math.hypot\n\ndef lcm(a):\n    return abs(math.prod(a)) // math.gcd(*a)\n\ndef cumulativeSum(input):\n    return list(accumulate(input))\nt = inpit()\nfor i in range(t):\n    (a, b, c, d) = inpspit()\n    if max(a, b) < min(d, c) or max(d, c) < min(a, b):\n        print('NO')\n    else:\n        print('YES')", "n = int(input())\nres = ''\nfor i in range(n):\n    (a, b, c, d) = map(int, input().split())\n    (x, y) = (max(a, b), max(c, d))\n    if min(a, b) > y or min(c, d) > x:\n        res += 'NO\\n'\n    else:\n        res += 'YES\\n'\nprint(res)", "import sys\n\ndef main():\n    numTest: int = int(sys.stdin.readline().split()[0])\n    for i in range(0, numTest):\n        A = [int(x) for x in sys.stdin.readline().split()]\n        max = -1\n        max2 = -1\n        maxIdx = -1\n        max2Idx = -1\n        for (idx, skill) in enumerate(A):\n            if skill > max:\n                max2 = max\n                max2Idx = maxIdx\n                max = skill\n                maxIdx = idx\n            elif skill > max2:\n                max2 = skill\n                max2Idx = idx\n        if abs(maxIdx - max2Idx) >= 2 or (maxIdx == 1 and max2Idx == 2) or (maxIdx == 2 and max2Idx == 1):\n            print('YES')\n        else:\n            print('NO')\nmain()", "T = int(input())\nL = ['YES'] * T\nfor i in range(0, T):\n    s = [int(x) for x in input().split()]\n    max1 = max(s)\n    ind1 = s.index(max1)\n    s[ind1] = 0\n    max2 = max(s)\n    ind2 = s.index(max2)\n    if ind1 <= 1 and ind2 <= 1:\n        L[i] = 'NO'\n    if ind1 > 1 and ind2 > 1:\n        L[i] = 'NO'\nfor string in L:\n    print(string)", "from sys import stdin\n\ndef solve():\n    seq = stdin.readline().split()\n    for i in range(4):\n        seq[i] = int(seq[i])\n    l = seq[:]\n    l.sort(reverse=True)\n    l1 = l[:2]\n    if max(seq[0], seq[1]) in l1 and max(seq[2], seq[3]) in l1:\n        print('YES')\n    else:\n        print('NO')\nt = int(stdin.readline().strip())\nfor _ in range(t):\n    solve()", "from sys import stdin\nn = int(stdin.readline())\nfor _ in range(n):\n    data = [int(x) for x in stdin.readline().strip().split()]\n    p1_max = max(data[0], data[1])\n    p1_min = min(data[0], data[1])\n    p2_max = max(data[2], data[3])\n    p2_min = min(data[2], data[3])\n    if p1_max > p2_min and p2_max > p1_min:\n        print('YES')\n    else:\n        print('NO')", "x = int(input())\nl = []\nfor i in range(x):\n    t = tuple(map(int, input().split()))\n    if t[0] > t[1]:\n        A = t[0]\n    else:\n        A = t[1]\n    if t[2] > t[3]:\n        B = t[2]\n    else:\n        B = t[3]\n    if A == t[0] and B == t[2] and (A < t[3] or B < t[1]):\n        l.append('NO')\n    elif A == t[1] and B == t[2] and (A < t[3] or B < t[0]):\n        l.append('NO')\n    elif A == t[0] and B == t[3] and (A < t[2] or B < t[1]):\n        l.append('NO')\n    elif A == t[1] and B == t[3] and (A < t[2] or B < t[0]):\n        l.append('NO')\n    else:\n        l.append('YES')\nfor x in l:\n    print(x)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (a, b, c, d) = map(int, input().split())\n    if (max(a, b) == max(a, b, c) or max(a, b) == max(a, b, d)) and (max(c, d) == max(a, c, d) or max(c, d) == max(b, c, d)):\n        print('YES')\n    else:\n        print('NO')", "result = []\nfor i in range(int(input())):\n    array = input().split()\n    array = list(map(lambda x: int(x), array))\n    array2 = sorted(array)\n    max1 = array2[2]\n    max2 = array2[3]\n    win1 = max(array[0], array[1])\n    win2 = max(array[2], array[3])\n    if max1 in [win1, win2] and max2 in [win1, win2]:\n        result.append('YES')\n    else:\n        result.append('NO')\nfor i in result:\n    print(i)", "from sys import stdin\n\ndef calculate(a, b, c, d):\n    if max(a, b) > min(c, d) and max(c, d) > min(a, b):\n        return 'YES'\n    return 'NO'\nt = int(stdin.readline().strip())\nfor _ in range(t):\n    (a, b, c, d) = map(int, stdin.readline().strip().split())\n    print(calculate(a, b, c, d))", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_string():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_print_int(x):\n    sys.stdout.write(str(x) + '\\n')\n\ndef get_print(x):\n    sys.stdout.write(x + '\\n')\n\ndef get_print_int_same(x):\n    sys.stdout.write(str(x) + ' ')\n\ndef get_print_same(x):\n    sys.stdout.write(x + ' ')\nfrom sys import maxsize\n\ndef solve():\n    for _ in range(get_int()):\n        arr = get_list()\n        w1 = max(arr[0], arr[1])\n        w2 = max(arr[2], arr[3])\n        arr.sort(reverse=True)\n        if arr[0] == w1 and arr[1] == w2 or (arr[0] == w2 and arr[1] == w1):\n            get_print('YES')\n        else:\n            get_print('NO')\nsolve()", "t = int(input())\nA = []\nfor i in range(t):\n    (a, b, c, d) = map(int, input().split())\n    if a > b and a > d and (c > b) and (c > d):\n        ans = 'YES'\n    elif a > b and a > c and (d > b) and (d > c):\n        ans = 'YES'\n    elif b > a and b > d and (c > a) and (c > d):\n        ans = 'YES'\n    elif b > a and b > c and (d > a) and (d > c):\n        ans = 'YES'\n    else:\n        ans = 'NO'\n    A.append(ans)\nfor i in A:\n    print(i)", "def fair(s):\n    if min(s[0], s[1]) > max(s[2], s[3]) or min(s[2], s[3]) > max(s[0], s[1]):\n        return 'NO'\n    else:\n        return 'YES'\nt = int(input())\ntests = []\nfor i in range(t):\n    s = input().split()\n    tests.append([int(a) for a in s])\nfor s in tests:\n    print(fair(s))", "for i in range(int(input())):\n    (a, b, c, d) = map(int, input().split())\n    if max(a, b) < min(c, d) or min(a, b) > max(c, d):\n        print('NO')\n    else:\n        print('YES')", "def solve():\n    (player_1, player_2, player_3, player_4) = input().split()\n    if min(int(player_1), int(player_2)) < max(int(player_3), int(player_4)) and max(int(player_1), int(player_2)) > min(int(player_3), int(player_4)):\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nfor i in range(0, t):\n    solve()", "t = int(input())\nfor i in range(t):\n    (a, b, c, d) = map(int, input().split())\n    if min(a, b) > max(c, d) or min(c, d) > max(a, b):\n        print('NO')\n    else:\n        print('YES')", "import sys\nfrom os import path\nimport math\nimport time\nfrom collections import defaultdict\nfrom sys import setrecursionlimit\nsetrecursionlimit(10 ** 8)\nMOD = 10 ** 9 + 7\nINT_MAX = 10 ** 9\nif path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\n\ndef test_case():\n    t = int(input())\n    for _ in range(t):\n        s = list(map(int, input().split()))\n        if (s[0] > s[2] and s[0] > s[3]) and (s[1] > s[2] and s[1] > s[3]):\n            print('NO')\n        elif (s[2] > s[0] and s[2] > s[1]) and (s[3] > s[0] and s[3] > s[1]):\n            print('NO')\n        else:\n            print('YES')\ntest_case()", "for i in range(int(input())):\n    d = [int(d) for d in input().split()]\n    max_first = max(d)\n    max_second = 0\n    for i in d:\n        if i > max_second and i != max_first:\n            max_second = i\n    if max_first in d[:2] and max_second in d[:2] or (max_first in d[2:] and max_second in d[2:]):\n        print('NO')\n    else:\n        print('YES')", "test_cases = int(input())\nfor _ in range(test_cases):\n    skill_levels = [int(x) for x in input().split()]\n    sorted_skill_levels = sorted(skill_levels)\n    first_max = max(skill_levels[0], skill_levels[1])\n    second_max = max(skill_levels[2], skill_levels[3])\n    if first_max == sorted_skill_levels[-2] and second_max == sorted_skill_levels[-1] or (first_max == sorted_skill_levels[-1] and second_max == sorted_skill_levels[-2]):\n        print('YES')\n    else:\n        print('NO')", "def solve(args):\n    winners = [max(args[0], args[1]), max(args[2], args[3])]\n    maxes = []\n    mx = 0\n    for j in range(0, 4):\n        if args[j] > mx:\n            mx = args[j]\n    maxes.append(mx)\n    mx = 0\n    for j in range(0, 4):\n        if args[j] > mx and args[j] < maxes[0]:\n            mx = args[j]\n    maxes.append(mx)\n    if winners[0] in maxes and winners[1] in maxes:\n        print('YES')\n    else:\n        print('NO')\nn = int(input())\nargs = []\nfor i in range(0, n):\n    args.append([])\n    ns = input().split(' ')\n    for j in range(0, 4):\n        args[i].append(int(ns[j]))\nfor i in range(0, n):\n    solve(args[i])", "n = int(input())\nfor i in range(0, n):\n    (a, b, c, d) = map(int, input().split())\n    w1 = max(a, b)\n    w2 = max(c, d)\n    if w1 < c and w1 < d:\n        print('NO')\n    elif w2 < a and w2 < b:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (s1, s2, s3, s4) = map(int, input().split())\n    if min(s1, s2) > max(s3, s4) or max(s1, s2) < min(s3, s4):\n        print('NO')\n    else:\n        print('YES')", "def solve():\n    (a1, a2, a3, a4) = map(int, input().strip().split(' '))\n    if (a3 > a2 and a3 > a1) and (a4 > a2 and a4 > a1) or ((a1 > a3 and a1 > a4) and (a2 > a3 and a2 > a4)):\n        print('NO')\n    else:\n        print('YES')\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nfor i in range(t):\n    (a, b, c, d) = map(int, input().split())\n    l = [a, b, c, d]\n    l.sort()\n    p = max(a, b)\n    q = max(c, d)\n    if (p == l[-1] or p == l[-2]) and (q == l[-1] or q == l[-2]):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    lis = list(map(int, input().split()))\n    if lis[0] > lis[2] and lis[0] > lis[3] and (lis[1] > lis[2]) and (lis[1] > lis[3]):\n        print('NO')\n    elif lis[2] > lis[0] and lis[2] > lis[1] and (lis[3] > lis[0]) and (lis[3] > lis[1]):\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (a, b, c, d) = map(int, input().split())\n    if a > b:\n        (a, b) = (b, a)\n    if c > d:\n        (c, d) = (d, c)\n    if a > d or c > b:\n        print('NO')\n    else:\n        print('YES')", "def maximum(a, b):\n    if a >= b:\n        return a\n    else:\n        return b\nn = int(input())\nfor i in range(n):\n    inputs = list(map(int, input().split()))\n    r1_w1 = maximum(inputs[0], inputs[1])\n    r1_w2 = maximum(inputs[2], inputs[3])\n    inputs.sort(reverse=True)\n    if r1_w1 == inputs[0] and r1_w2 == inputs[1]:\n        print('YES')\n    elif r1_w1 == inputs[1] and r1_w2 == inputs[0]:\n        print('YES')\n    else:\n        print('NO')", "test_case = int(input())\nfor i in range(0, test_case):\n    (p1, p2, p3, p4) = map(int, input().split())\n    if p1 > p2:\n        a = p1\n        a1 = p2\n    else:\n        a = p2\n        a1 = p1\n    if p3 > p4:\n        b = p3\n        b1 = p4\n    else:\n        b = p4\n        b1 = p3\n    if a < b1:\n        print('NO')\n    elif b < a1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (a, b, c, d) = map(int, input().split())\n    if min(a, b) > max(c, d) or min(c, d) > max(a, b):\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (x, y, u, v) = map(int, input().split())\n    print('YES' if sorted([max(x, y), max(u, v)]) == sorted([x, y, u, v])[2:] else 'NO')", "def solve():\n    (a, b, c, d) = map(int, input().split())\n    max1 = max(a, b)\n    min1 = min(a, b)\n    max2 = max(c, d)\n    min2 = min(c, d)\n    if max1 > min2 and max2 > min1:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nfor i in range(t):\n    solve()", "t = int(input())\nfor i in range(t):\n    lst = list(map(int, input().split()))\n    lst2 = sorted(lst)\n    if lst2[-1] in lst[0:2] and lst2[-2] in lst[2:4]:\n        print('YES')\n    elif lst2[-1] in lst[2:4] and lst2[-2] in lst[0:2]:\n        print('YES')\n    else:\n        print('NO')", "def team(listo: list):\n    team1 = listo[:2]\n    team2 = listo[-2:]\n    team1.sort(reverse=True)\n    team2.sort(reverse=True)\n    boro1 = team1[0]\n    boro2 = team2[0]\n    listo.remove(boro1)\n    listo.remove(boro2)\n    if boro1 > boro2:\n        choto = boro2\n    else:\n        choto = boro1\n    return choto\ncaseNo = int(input())\nfor i in range(caseNo):\n    iq = [int(x) for x in input().split(' ')]\n    choto = team(iq)\n    hbe_na = False\n    for i in iq:\n        if i > choto:\n            hbe_na = True\n    if hbe_na == True:\n        print('NO')\n    else:\n        print('YES')", "n = int(input())\nfor i in range(0, n):\n    l = [int(x) for x in input().split()]\n    f1 = max(l[0], l[1])\n    f2 = max(l[2], l[3])\n    m1 = max(l)\n    l.remove(m1)\n    m2 = max(l)\n    if (m1 == f1 or m1 == f2) and (m2 == f2 or m2 == f1):\n        print('YES')\n    else:\n        print('NO')", "for _ in ' ' * int(input()):\n    (a, c, b, d) = map(int, input().split())\n    print('YNEOS'[a > b and a > d and (c > b) and (c > d) or (b > a and b > c and (d > a) and (d > c))::2])", "def fairplay(array):\n    player1 = player2 = 0\n    notSelected1 = notSelected2 = 0\n    if array[0] > array[1]:\n        player1 = array[0]\n        notSelected1 = array[1]\n    else:\n        player1 = array[1]\n        notSelected1 = array[0]\n    if array[2] > array[3]:\n        player2 = array[2]\n        notSelected2 = array[3]\n    else:\n        player2 = array[3]\n        notSelected2 = array[2]\n    if player2 < notSelected1 or player1 < notSelected2:\n        print('NO')\n    else:\n        print('YES')\ntestCases = int(input())\nfor t in range(testCases):\n    array = list(map(int, input().split()))\n    fairplay(array)"]