["import math, sys, itertools\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nfor t in [wtf[i:i + 2] for i in range(1, len(wtf), 2)]:\n    n = int(t[0])\n    A = list(map(int, t[1].split()))\n    sA = sum(A)\n    if sA % n == 0:\n        avg = sA // n\n        tmp = [a for a in A if a > avg]\n        print(len(tmp))\n    else:\n        print(-1)", "ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    candy = [*map(int, input().split())]\n    total = sum(candy)\n    if n == 1:\n        ans += [0]\n    elif total % n:\n        ans += [-1]\n    else:\n        candy.sort(reverse=True)\n        average = total // n\n        k = 0\n        for x in candy:\n            if x > average:\n                k += 1\n            else:\n                break\n        ans += [k]\nprint('\\n'.join(map(str, ans)))", "for s in [*open(0)][2::2]:\n    lst = [*map(int, s.split())]\n    if sum(lst) % len(lst):\n        print('-1')\n        continue\n    s = sum(lst) // len(lst)\n    total_pick = 0\n    for n in lst:\n        if n > s:\n            total_pick += 1\n    print(total_pick)", "for g in [*open(0)][2::2]:\n    a = list(map(int, g.split()))\n    s = sum(a)\n    n = len(a)\n    if s % n != 0:\n        print(-1)\n    else:\n        d = s // n\n        f = list(filter(lambda v: v > d, a))\n        print(len(f))", "import sys\ninput = sys.stdin.readline\noutput = sys.stdout.write\n\ndef main():\n    tests = int(input().rstrip())\n    for i in range(tests):\n        length_ = int(input().rstrip())\n        nums_ = list(map(int, input().rstrip().split()))\n        summ = sum(nums_)\n        if summ % length_ == 0:\n            res = int(summ / length_)\n            ans = 0\n            for _ in nums_:\n                ans += _ > res\n            output(str(ans))\n        else:\n            output('-1')\n        output('\\n')\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    if s % n != 0:\n        print(-1)\n        return\n    v = s // n\n    k = 0\n    for i in a:\n        k += i > v\n    print(k)\nfor i in range(int(input())):\n    solve()", "import sys\nimport math\ninputlines = sys.stdin.readlines()\n\ndef find_all_elements_greater_than_x(elements, x):\n    number_of_elements_greater_than_x = 0\n    for i in elements:\n        if i > x:\n            number_of_elements_greater_than_x += 1\n    return number_of_elements_greater_than_x\nnumber_of_testcases = int(inputlines[0])\nfor i in range(number_of_testcases):\n    number_of_elements = int(inputlines[2 * i + 1])\n    elements = list(map(int, inputlines[2 * i + 2].split(' ')))\n    avg = sum(elements) / number_of_elements\n    if math.ceil(avg) != math.floor(avg):\n        print(-1)\n    else:\n        number_of_elements_greater_than_avg = find_all_elements_greater_than_x(elements, int(avg))\n        print(number_of_elements_greater_than_avg)", "for s in [*open(0)][2::2]:\n    l = map(int, s.split())\n    lst = (*l,)\n    if sum(lst) % len(lst):\n        print('-1')\n        continue\n    s = sum(lst) // len(lst)\n    total_pick = 0\n    for n in lst:\n        if n > s:\n            total_pick += 1\n    print(total_pick)", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    n = len(a)\n    t = sum(a)\n    print((sum((x * n > t for x in a)), -1)[t % n > 0])", "for s in [*open(0)][2::2]:\n    s = list(map(int, s.split()))\n    (x, i) = (sum(s), len(s))\n    if x % i == 0:\n        (x, cnt) = (x / i, 0)\n        for i in s:\n            if i > x:\n                cnt += 1\n        print(cnt)\n    else:\n        print(-1)", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    n = len(a)\n    t = sum(a)\n    print((sum((x * n > t for x in a)), -1)[t % n > 0])", "import sys\n\ndef get_single_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\nfor i in range(get_single_int()):\n    n = get_single_int()\n    ar = get_list()\n    summ = sum(ar)\n    if summ % n != 0:\n        print(-1)\n        continue\n    ave = summ // n\n    ans = 0\n    for j in ar:\n        if j > ave:\n            ans += 1\n    print(ans)", "def Solve():\n    Sum = Counter = 0\n    for case in Cases:\n        Sum += case\n    if Sum % Size == 0:\n        for case in Cases:\n            if case > Sum / Size:\n                Counter += 1\n        return Results.append(Counter)\n    else:\n        return Results.append(-1)\nTestCase = int(input(''))\nResults = []\nfor c in range(TestCase):\n    Size = int(input(''))\n    Cases = list(map(int, input().split()))\n    Solve()\nfor result in Results:\n    print(result)", "ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    candy = [*map(int, input().split())]\n    total = sum(candy)\n    if n == 1:\n        ans += [0]\n    elif total % n:\n        ans += [-1]\n    else:\n        k = [x for x in candy if x > total // n]\n        ans += [len(k)]\nprint('\\n'.join(map(str, ans)))", "import sys\ninput = sys.stdin.readline\nt = int(input())\nresults = []\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().rstrip().split()))\n    total = sum(arr)\n    if total % n != 0:\n        results.append(-1)\n        continue\n    if len(arr) == 1:\n        results.append(0)\n        continue\n    standard = total / n\n    num = 0\n    for i in arr:\n        if standard < i:\n            num += 1\n    results.append(num)\nfor i in results:\n    print(i)", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    n = len(a)\n    t = sum(a)\n    print((sum((x * n > t for x in a)), -1)[t % n > 0])", "num = int(input())\nans = ''\nfor j in range(num):\n    n = int(input())\n    (cot, change) = (0, 0)\n    ls = list(map(int, input().split()))\n    s = sum(ls)\n    if s % n == 0:\n        ans += f'{len([i for i in ls if i > s // len(ls)])}\\n'\n    else:\n        ans += f'{-1}\\n'\nprint(ans)", "for s in [*open(0)][2::2]:\n    s = (*map(int, s.split()),)\n    (x, n) = (sum(s), len(s))\n    if x % n != 0:\n        print(-1)\n    else:\n        print(sum((i > x / n for i in s)))", "import math\nfrom functools import reduce\nfrom math import comb\nfrom collections import defaultdict\nfrom sys import stdout\nNO = 'NO'\nYES = 'YES'\nMOD = 1000000007\nALPH = 'abcdefghijklmnopqrstuvwxyz'\n\ndef input_int():\n    return int(input())\n\ndef input_list():\n    return input().split(' ')\n\ndef input_list_int():\n    return list(map(int, input_list()))\n\ndef list_int_to_str(a, sep=' '):\n    return sep.join((str(x) for x in a))\nglobal_ans = []\n\ndef pr(a):\n    global_ans.append(a)\n\ndef solve():\n    n = input_int()\n    a = input_list_int()\n    s = sum(a)\n    if s % n != 0:\n        pr(-1)\n    else:\n        p = s // n\n        k = 0\n        for i in a:\n            if i > p:\n                k += 1\n        pr(k)\nquery_count = 1\nquery_count = input_int()\nwhile query_count:\n    query_count -= 1\n    solve()\nfor global_ans_line in global_ans:\n    print(global_ans_line)", "import sys\n\ndef solve(n, candies):\n    sum_ = sum(candies)\n    if sum_ % n != 0:\n        return -1\n    target = sum_ // n\n    ans = [num for num in candies if num > target]\n    return len(ans)\nt = int(sys.stdin.readline().strip())\nfor i in range(t):\n    n = int(sys.stdin.readline().strip())\n    line = sys.stdin.readline().strip()\n    candies = list(map(int, line.split()))\n    print(solve(n, candies))", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_string():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_print_int(x):\n    sys.stdout.write(str(x) + '\\n')\n\ndef get_print(x):\n    sys.stdout.write(x + '\\n')\n\ndef get_print_int_same(x):\n    sys.stdout.write(str(x) + ' ')\n\ndef get_print_same(x):\n    sys.stdout.write(x + ' ')\nfrom sys import maxsize\n\ndef solve():\n    for _ in range(get_int()):\n        n = get_int()\n        arr = get_list()\n        summ = sum(arr)\n        if summ % n != 0:\n            get_print_int(-1)\n        else:\n            num = summ // n\n            ans = 0\n            for i in range(n):\n                if arr[i] > num:\n                    ans += 1\n            get_print_int(ans)\nsolve()", "t = int(input())\nres = []\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    if s % n != 0:\n        res.append(-1)\n        continue\n    elif n == 1:\n        res.append(0)\n        continue\n    avg = s // n\n    k = 0\n    for i in range(n):\n        if a[i] > avg:\n            k += 1\n    res.append(k)\nfor r in res:\n    print(r)", "import sys\n\ndef solve(a, n):\n    total_sum = sum(a)\n    if total_sum % n != 0:\n        return -1\n    else:\n        avg = total_sum // n\n        k = 0\n        for i in range(n):\n            if a[i] > avg:\n                k += 1\n        return k\ni = sys.stdin.readline\nfor _ in range(int(i())):\n    n = int(i())\n    a = list(map(int, i().split()))\n    result = solve(a, n)\n    print(result)", "import sys\nt = int(sys.stdin.readline())\nwhile t > 0:\n    n = sys.stdin.readline()\n    a = list(map(int, sys.stdin.readline().split()))\n    avg = int(sum(a) / len(a))\n    if sum(a) % len(a) == 0:\n        larger_elements = [element for element in a if element > avg]\n        print(len(larger_elements))\n    else:\n        print(-1)\n    t = t - 1", "import sys\nt = int(sys.stdin.readline())\nwhile t != 0:\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    if sum(a) % n != 0:\n        print(-1)\n    elif len(a) == 1:\n        print(0)\n    else:\n        avg = sum(a) // n\n        x = [i for i in a if i > avg]\n        print(len(x))\n    t -= 1", "t = int(input())\ncases = [(int(input()), list(map(int, input().split()))) for _ in range(t)]\nfor case in cases:\n    (n, arr) = (case[0], case[1])\n    avg = sum(arr) / n\n    if avg % 1 != 0:\n        print('-1')\n    elif n == 1 or n == arr.count(arr[0]):\n        print('0')\n    else:\n        print(len([x for x in arr if x > avg]))", "def main():\n    t = int(input())\n    ans = []\n    for _ in range(t):\n        n = int(input())\n        candies = list(map(int, input().split()))\n        tot = sum(candies)\n        temp = 0\n        if tot % n == 0:\n            for i in candies:\n                if i > tot / n:\n                    temp += 1\n            ans.append(temp)\n        else:\n            ans.append(-1)\n    for i in ans:\n        print(i)\nmain()", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    n = len(a)\n    t = sum(a)\n    print((sum((x * n > t for x in a)), -1)[t % n > 0])", "def process(a: list):\n    N = len(a)\n    total = sum(a)\n    if total % N != 0:\n        return -1\n    else:\n        required = total / N\n        return sum((+1 if i > required else 0 for i in a))\nt = int(input())\nans = []\nfor i in range(t):\n    N = input()\n    a = [int(v) for v in input().split(' ')]\n    ans.append(process(a))\nfor i in ans:\n    print(i)", "def fun(l, n):\n    s = sum(l)\n    if s % n != 0:\n        return -1\n    a = s // n\n    count = 0\n    for i in l:\n        if i > a:\n            count += 1\n    return count\nn = int(input())\np = []\nfor i in range(n):\n    m = int(input())\n    a = [int(i) for i in input().split()]\n    p.append(fun(a, m))\nfor i in p:\n    print(i)", "t = int(input())\n\ndef solver(arr, n):\n    s = sum(arr)\n    count = 0\n    if s % n != 0:\n        return -1\n    else:\n        thresh = sum(arr) // n\n        for i in range(n):\n            if arr[i] > thresh:\n                count += 1\n    return count\nres = []\nfor i in range(t):\n    n = int(input())\n    arr = [int(item) for item in input().split()]\n    res.append(solver(arr, n))\nfor r in res:\n    print(r)", "t = int(input())\nb = []\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    average = sum(a) // n\n    counter = 0\n    if sum(a) % n == 0:\n        for j in a:\n            if j > average:\n                counter += 1\n        b.append(counter)\n    else:\n        b.append(-1)\nfor k in range(t):\n    print(b[k])", "k = []\nfor i in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    x = sum(a)\n    l = x // n\n    if x % n != 0:\n        k.append(-1)\n    else:\n        d = [t for t in a if t > l]\n        k.append(len(d))\nfor t in k:\n    print(t)", "import sys\ntasks = sys.stdin.read().splitlines()[1:]\ntest_cases = zip(tasks[::2], tasks[1::2])\nk = []\nfor test in test_cases:\n    n = int(test[0])\n    a = list(map(int, test[1].split(' ')))\n    if sum(a) % n != 0:\n        print(-1)\n        continue\n    if n == 1 or a.count(a[0]) == n:\n        print(0)\n        continue\n    eq = sum(a) / n\n    k = [i for i in a if i > eq]\n    print(len(k))", "ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    accu = sum(arr)\n    if accu % n:\n        ans.append(-1)\n        continue\n    avg = accu // n\n    count = 0\n    for i in arr:\n        count += i > avg\n    ans.append(count)\nfor i in ans:\n    print(i)", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    n = len(a)\n    t = sum(a)\n    print((sum((x * n > t for x in a)), -1)[t % n > 0])", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    n = len(a)\n    t = sum(a)\n    print((sum((x * n > t for x in a)), -1)[t % n > 0])", "res = ''\nfor _ in range(int(input())):\n    n = int(input())\n    arr = tuple(map(int, input().split()))\n    avg = sum(arr) / n\n    if avg % 1 != 0:\n        res += '-1\\n'\n    else:\n        ans = 0\n        for num_candies in arr:\n            if num_candies > avg:\n                ans += 1\n        res += '%d\\n' % ans\nprint(res)", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    n = len(a)\n    t = sum(a)\n    print((sum((x * n > t for x in a)), -1)[t % n > 0])", "t = int(input())\narr = []\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = a[:n]\n    k = 0\n    s = sum(a) / len(a)\n    if s % 1 != 0:\n        arr.append(-1)\n        continue\n    for j in a:\n        if j > s:\n            k += 1\n    arr.append(k)\nfor i in arr:\n    print(i)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if sum(l) % n != 0:\n        print(-1)\n    else:\n        x = sum(l) / n\n        ans = 0\n        for i in l:\n            if i > x:\n                ans += 1\n        print(ans)", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    n = len(a)\n    t = sum(a)\n    print((sum((x * n > t for x in a)), -1)[t % n > 0])", "for _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    s = sum(array)\n    if s % n == 0:\n        each_person = s // n\n        ans = 0\n        for i in array:\n            if i > each_person:\n                ans += 1\n        print(ans)\n    else:\n        print(-1)", "def polycarp(n, arr):\n    s = sum(arr)\n    if s % n != 0:\n        return -1\n    x = 0\n    y = s // n\n    for i in range(n):\n        if arr[i] > y:\n            x += 1\n    return x\nfor t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(polycarp(n, arr))", "for _ in range(int(input())):\n    n = int(input())\n    gift = list(map(int, input().split()))\n    avrg = sum(gift) / n\n    count = 0\n    if avrg.is_integer():\n        for x in gift:\n            if x > avrg:\n                count += 1\n        print(count)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if sum(a) % n != 0:\n        print(-1)\n    else:\n        (cnt, avg) = (0, sum(a) // n)\n        for i in range(n):\n            if a[i] > avg:\n                cnt += 1\n        print(cnt)", "import sys\nsys.setrecursionlimit(10 ** 6)\nstdin = sys.stdin\nni = lambda : int(ns())\nna = lambda : list(map(int, stdin.readline().split()))\nns = lambda : stdin.readline().strip()\nnsa = lambda : list(map(str, stdin.readline().split()))\nntp = lambda : tuple(map(int, stdin.readline().split()))\nmod = 10 ** 9 + 7\ninf = 10 ** 18\nt = ni()\nfor _ in range(t):\n    n = ni()\n    A = na()\n    sm = sum(A)\n    if sm % n:\n        print(-1)\n        continue\n    ave = sm // n\n    ans = 0\n    for a in A:\n        if a > ave:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    if sum(lis) % n:\n        print(-1)\n        continue\n    ans = 0\n    avg = sum(lis) // n\n    print(sum([1 for x in lis if x > avg]))", "css = int(input())\nfor zz in range(css):\n    n = int(input())\n    candies = [int(num) for num in input().split(' ')]\n    total = sum(candies)\n    if total % n != 0:\n        print(-1)\n    else:\n        candies.sort()\n        avg = total // n\n        count = 0\n        for candy in candies[::-1]:\n            if candy > avg:\n                count += 1\n            else:\n                break\n        print(count)", "def EqualDistribution(n):\n    arr = list(map(int, input().split()))\n    s = k = 0\n    for i in range(n):\n        s += arr[i]\n    if s % n != 0:\n        return -1\n    else:\n        p = s / n\n    for i in range(n):\n        if arr[i] > p:\n            k += 1\n    return k\nt = int(input())\nklist = []\nfor i in range(t):\n    n = int(input())\n    klist.append(EqualDistribution(n))\nfor i in range(t):\n    print(klist[i])", "n = int(input())\nfor _ in range(n):\n    input()\n    arr = list(map(int, input().strip().split(' ')))\n    sum_candies = sum(arr)\n    size = len(arr)\n    if sum_candies // size < sum_candies / size:\n        print(-1)\n    else:\n        eq_num = sum_candies // size\n        ans = 0\n        for num in arr:\n            if num > eq_num:\n                ans += 1\n        print(ans)", "m = int(input())\notv = []\nfor _ in range(m):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a) // len(a)\n    if sum(a) % len(a) != 0:\n        c = -1\n    else:\n        c = 0\n        for i in range(n):\n            if a[i] > s:\n                c += 1\n    otv.append(c)\nfor i in range(m):\n    print(otv[i])", "import sys\ninput = sys.stdin.readline\nn = int(input())\nfor _ in range(n):\n    m = int(input())\n    a = [int(i) for i in input().split()]\n    if m == 1:\n        print(0)\n        continue\n    c = sum(a) / m\n    if c != int(c):\n        print(-1)\n        continue\n    c = int(c)\n    p = 0\n    for i in a:\n        if i > c:\n            p += 1\n    print(p)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if sum(l) % n != 0:\n        print(-1)\n    else:\n        k = 0\n        x = sum(l) // n\n        for i in l:\n            if i > x:\n                k = k + 1\n        print(k)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if sum(l) % n != 0:\n        print(-1)\n    else:\n        k = 0\n        x = sum(l) // n\n        for i in l:\n            if i > x:\n                k = k + 1\n        print(k)", "t = int(input())\nout = []\nfor x in range(t):\n    n = int(input())\n    a = input()\n    b = a.split()\n    b = list(map(int, b))\n    avg = sum(b) / len(b)\n    if avg % 1 != 0:\n        out.append(-1)\n    else:\n        k = 0\n        b = sorted(b, reverse=True)\n        for y in range(len(b)):\n            if b[y] > avg:\n                k += 1\n        out.append(k)\nfor x in range(t):\n    print(out[x])", "N = int(input())\nj = 0\nL = list()\nwhile j < N:\n    i = 0\n    l = list()\n    n = int(input())\n    c = list(map(int, input().split()))\n    L.append(c)\n    j += 1\ni = 0\nMajor = list()\nwhile i < N:\n    if sum(L[i]) % len(L[i]) != 0:\n        Major.append(-1)\n    else:\n        a = sum(L[i]) / len(L[i])\n        flag = 0\n        for x in L[i]:\n            if x > a:\n                flag += 1\n        Major.append(flag)\n    i += 1\nfor x in Major:\n    print(x)", "def solve(n, a):\n    if sum(a) % n != 0:\n        return -1\n    x = sum(a) // n\n    c = 0\n    c = sum((1 for i in a if i > x))\n    return c\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(n, a))", "t = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    if min(x) == max(x):\n        ans.append(0)\n    elif sum(x) % len(x) != 0:\n        ans.append(-1)\n    else:\n        avg = sum(x) // len(x)\n        ans.append(sum(map(lambda i: i > avg, x)))\nprint(*ans, sep='\\n')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    if s % n != 0:\n        print(-1)\n    else:\n        print(sum([1 for i in a if i > s // n]))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    if s % n != 0:\n        print(-1)\n    else:\n        (d, ans) = (s // n, 0)\n        for i in a:\n            if i > d:\n                ans += 1\n        print(ans)\nfor _ in range(int(input())):\n    solve()", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    n = len(a)\n    t = sum(a)\n    print((sum((x * n > t for x in a)), -1)[t % n > 0])", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    n = len(a)\n    t = sum(a)\n    print((sum((x * n > t for x in a)), -1)[t % n > 0])", "for i in range(int(input())):\n    c = int(input())\n    ar = list(map(int, input().split()))\n    avg = sum(ar) / c\n    if avg == int(avg):\n        ans = 0\n        for e in ar:\n            if e > avg:\n                ans += 1\n    else:\n        ans = -1\n    print(ans)", "testcases = int(input())\nfor i in range(testcases):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = sum(a) / n\n    if int(m) - m == 0:\n        print(len([x for x in a if x > m]))\n    else:\n        print('-1')", "results = []\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    numbers = [int(x) for x in input().split(' ')]\n    sum = 0\n    for num in numbers:\n        sum = sum + num\n    opr = 0\n    if sum % n == 0:\n        mean = sum / n\n        for num in numbers:\n            if num > mean:\n                opr = opr + 1\n        results.append(opr)\n    else:\n        results.append(-1)\nfor res in results:\n    print(res)", "import sys\ngetline = sys.stdin.readline\n\ndef read_int():\n    return int(getline())\n\ndef read_ints():\n    return list(map(int, getline().split()))\nfor _ in range(read_int()):\n    n = read_int()\n    a = read_ints()\n    s = sum(a)\n    avg = s / n\n    if avg - int(avg):\n        print(-1)\n        continue\n    a.sort()\n    k = 0\n    for ele in a:\n        if ele > avg:\n            k += 1\n    print(k)", "t = int(input())\nanswers = []\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if max(a) == min(a):\n        answers.append(0)\n    elif sum(a) % n == 0:\n        count = 0\n        tb = sum(a) / n\n        for i in range(n):\n            if a[i] > tb:\n                count += 1\n        answers.append(count)\n    else:\n        answers.append(-1)\nfor answer in answers:\n    print(answer)", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    n = len(a)\n    t = sum(a)\n    print((sum((x * n > t for x in a)), -1)[t % n > 0])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    s = sum(a)\n    if s % n == 0:\n        ret = 0\n        m = s // n\n        for x in a:\n            if x > m:\n                ret += 1\n        print(ret)\n    else:\n        print('-1')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sa = sum(a)\n    if sa % n != 0:\n        print(-1)\n    else:\n        ans = 0\n        eq = sa / n\n        for i in a:\n            if i > eq:\n                ans += 1\n        print(ans)", "def solve():\n    cases = int(input())\n    while cases > 0:\n        cases -= 1\n        n = int(input())\n        a = [int(num) for num in input().split()]\n        sum_value = sum(a)\n        if sum_value % n == 0:\n            ans = 0\n            avg = sum_value // n\n            for ai in a:\n                if ai > avg:\n                    ans += 1\n            print(ans)\n        else:\n            print(-1)\nsolve()", "from functools import reduce\nt = int(input())\nNO_of_candies_intially = []\nfinal_answer = []\n\ndef functions(n):\n    total_candies = reduce(lambda x, y: x + y, n)\n    greater_no_candies_indices = []\n    avg_candies_each_should_have = total_candies / len(n)\n    if avg_candies_each_should_have == int(avg_candies_each_should_have):\n        for i in range(len(n)):\n            if n[i] > avg_candies_each_should_have:\n                greater_no_candies_indices.append(i)\n        k = len(greater_no_candies_indices)\n        return k\n    else:\n        return -1\nfor tc in range(t):\n    no_of_friends = int(input())\n    NO_of_candies_intially = list(map(int, input().split(' ')))\n    final_answer.append(functions(NO_of_candies_intially))\nfor r in final_answer:\n    print(r)", "def solve(N, A):\n    sumA = sum(A)\n    if sumA % N != 0:\n        return -1\n    avg = sumA // N\n    cnt = 0\n    for v in A:\n        if v > avg:\n            cnt += 1\n    return cnt\nT = int(input())\nfor t in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    print(solve(N, A))", "s = 0\nk = int(input())\nwhile k > 0:\n    ras = 0\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = sum(l)\n    if s % n != 0:\n        print(-1)\n    else:\n        for i in l:\n            if i > s / n:\n                ras = ras + 1\n        print(ras)\n    k -= 1", "def solve():\n    s = sum(ar)\n    if s % n != 0:\n        print(-1)\n    else:\n        avr = s // n\n        re = 0\n        for v in ar:\n            if v > avr:\n                re += 1\n        print(re)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    ar = [int(i) for i in input().split()]\n    solve()", "def rearrange(candies):\n    (avg, rem) = divmod(sum(candies), len(candies))\n    if rem > 0:\n        return -1\n    res = len([c for c in candies if c > avg])\n    return res\nN = int(input())\nfor n in range(N):\n    t = input()\n    candies = [int(c) for c in input().split()]\n    print(rearrange(candies))", "import sys, copy\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nt = inp()\nfor _ in range(t):\n    n = inp()\n    l = inlt()\n    s = sum(l)\n    ans = 0\n    if s % n != 0:\n        print(-1)\n    else:\n        m = s // n\n        for i in range(n):\n            if l[i] > m:\n                ans += 1\n        print(ans)", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    n = len(a)\n    t = sum(a)\n    print((sum((x * n > t for x in a)), -1)[t % n > 0])", "def func():\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lstSum = sum(lst)\n    cnt = 0\n    if lstSum % n == 0:\n        avg = lstSum // n\n        for i in lst:\n            if i > avg:\n                cnt += 1\n        print(cnt)\n    else:\n        print(-1)\n\ndef main():\n    for i in range(int(input())):\n        func()\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = sum(a)\n    if b % n != 0:\n        print(-1)\n    else:\n        c = b // n\n        res = 0\n        for i in a:\n            if i > c:\n                res += 1\n        print(res)", "import sys, os, io\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    s = sum(a)\n    if s % n:\n        print(-1)\n        continue\n    x = s // n\n    big = 0\n    for i in a:\n        if i > x:\n            big += 1\n    print(big)", "from bisect import bisect_right\nfor _ in range(int(input())):\n    (n, friends) = (int(input()), list(map(int, input().split(' '))))\n    friends_mid = sum(friends)\n    if friends_mid % n != 0:\n        print(-1)\n    else:\n        friends.sort()\n        print(len(friends[bisect_right(friends, friends_mid // n):]))", "t = int(input())\nlan = []\nfor _ in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    avg = sum(x) / len(x)\n    ctr = 0\n    flag = False\n    if avg % 1 != 0.0:\n        lan.append(-1)\n        flag = True\n    else:\n        for indx in range(len(x)):\n            if x[indx] > avg:\n                ctr += 1\n            else:\n                continue\n    if flag == False:\n        lan.append(ctr)\nprint(*lan, sep='\\n')", "def main() -> None:\n    for t in range(int(input())):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        s = sum(a)\n        if s % n != 0:\n            print(-1)\n        else:\n            b = s // n\n            print(sum((1 for c in a if c > b)))\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = sum(l)\n    cc = 0\n    if x % n == 0:\n        t = x // n\n        for i in l:\n            if i > t:\n                cc += 1\n        print(cc)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sum(a) % n:\n        print(-1)\n        continue\n    a.sort()\n    val = int(sum(a) / n)\n    a.append(1 + val)\n    i = 0\n    while a[i] <= val:\n        i += 1\n    print(n - i)", "from math import *\n\ndef minNumber(a):\n    if sum(a) % len(a) != 0:\n        return -1\n    else:\n        t = sum(a) // len(a)\n        res = 0\n        for i in a:\n            if i > t:\n                res += 1\n        return res\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    print(minNumber(a))", "def main(n, a):\n    s = sum(a)\n    if s % n != 0:\n        print(-1)\n    else:\n        m = s / n\n        print(len([i for i in a if i > m]))\nfor _ in range(int(input())):\n    main(int(input()), list(map(int, input().split())))", "for i in range(int(input())):\n    n = int(input())\n    arr = [int(arr) for arr in input().split()]\n    arr.sort()\n    if n == 1 or arr[0] == arr[-1]:\n        print(0)\n    elif sum(arr) % n != 0:\n        print(-1)\n    else:\n        k = 0\n        goal = sum(arr) // n\n        a = [i for i in arr if i > goal]\n        print(len(a))", "a = int(input())\nfor x in range(a):\n    b = int(input())\n    c = list(map(int, input().split()))\n    d = sum(c) // b\n    o = 0\n    if sum(c) % b != 0:\n        print(-1)\n        continue\n    else:\n        for x in c:\n            if x > d:\n                o += 1\n    print(o)", "n = int(input())\nfor i in range(n):\n    t = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    if sum(a) % t != 0:\n        print(-1)\n    else:\n        mid = sum(a) // t\n        for j in a:\n            if j > mid:\n                ans += 1\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = sum(l)\n    if a % n != 0:\n        print(-1)\n    else:\n        b = 0\n        for i in range(n):\n            if l[i] > a // n:\n                b += 1\n        print(b)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    suma = sum(a)\n    if suma % n != 0:\n        print(-1)\n    else:\n        obj = suma // n\n        res = 0\n        for i in a:\n            if i > obj:\n                res += 1\n        print(res)", "cases = int(input())\nfor _ in range(cases):\n    n = int(input())\n    candies = [int(ai) for ai in input().split()]\n    total = sum(candies)\n    if total % n != 0:\n        print(-1)\n        continue\n    candies_per_person = total // n\n    k = 0\n    for ai in candies:\n        if ai > candies_per_person:\n            k += 1\n    print(k)"]