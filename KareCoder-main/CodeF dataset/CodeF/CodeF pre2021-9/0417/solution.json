["for t in range(int(input())):\n    (n, U, R, D, L) = [int(x) for x in input().split()]\n    flag = True\n    if U == n and D == n:\n        if L < 2 or R < 2:\n            flag = False\n    elif U == n - 1 and D == n:\n        if L == 0 or R == 0 or (L < 2 and R < 2):\n            flag = False\n    elif U == n and D == n - 1:\n        if L == 0 or R == 0 or (L < 2 and R < 2):\n            flag = False\n    elif U == n - 1 and D == n - 1:\n        if L + R < 2:\n            flag = False\n    elif U == n or D == n:\n        if L == 0 or R == 0:\n            flag = False\n    elif U == n - 1 or D == n - 1:\n        if L == 0 and R == 0:\n            flag = False\n    if L == n and R == n:\n        if U < 2 or D < 2:\n            flag = False\n    elif L == n - 1 and R == n:\n        if U == 0 or D == 0 or (U < 2 and D < 2):\n            flag = False\n    elif L == n and R == n - 1:\n        if U == 0 or D == 0 or (U < 2 and D < 2):\n            flag = False\n    elif L == n - 1 and R == n - 1:\n        if U + D < 2:\n            flag = False\n    elif L == n or R == n:\n        if U == 0 or D == 0:\n            flag = False\n    elif L == n - 1 or R == n - 1:\n        if U == 0 and D == 0:\n            flag = False\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, U, R, D, L) = map(int, input().split())\n    (tu, tr, td, tl) = (U, R, D, L)\n    if U == n:\n        tr -= 1\n        tl -= 1\n    elif U == n - 1:\n        if tr > tl:\n            tr -= 1\n        else:\n            tl -= 1\n    if D == n:\n        tr -= 1\n        tl -= 1\n    elif D == n - 1:\n        if tr > tl:\n            tr -= 1\n        else:\n            tl -= 1\n    if R == n:\n        td -= 1\n        tu -= 1\n    elif R == n - 1:\n        if tu > td:\n            tu -= 1\n        else:\n            td -= 1\n    if L == n:\n        td -= 1\n        tu -= 1\n    elif L == n - 1:\n        if tu > td:\n            tu -= 1\n        else:\n            td -= 1\n    if min(tu, tr, td, tl) < 0:\n        print('NO')\n    else:\n        print('YES')", "import sys\n\ndef readInts():\n    return [int(x) for x in sys.stdin.readline().split()]\n\ndef readInt():\n    return int(sys.stdin.readline())\ncorners = [(0, 0, 0, 0), (0, 0, 0, 1), (0, 0, 1, 0), (0, 0, 1, 1), (0, 1, 0, 0), (0, 1, 0, 1), (0, 1, 1, 0), (0, 1, 1, 1), (1, 0, 0, 0), (1, 0, 0, 1), (1, 0, 1, 0), (1, 0, 1, 1), (1, 1, 0, 0), (1, 1, 0, 1), (1, 1, 1, 0), (1, 1, 1, 1)]\n\ndef solve():\n    [n, u, r, d, l] = readInts()\n    for corner in corners:\n        u1 = u - corner[0] - corner[1]\n        r1 = r - corner[1] - corner[2]\n        d1 = d - corner[2] - corner[3]\n        l1 = l - corner[0] - corner[3]\n        check = u1 >= 0 and u1 < n - 1 and (r1 >= 0) and (r1 < n - 1) and (d1 >= 0) and (d1 < n - 1) and (l1 >= 0) and (l1 < n - 1)\n        if check:\n            print('YES')\n            return\n    print('NO')\n\ndef main():\n    t = readInt()\n    for _ in range(t):\n        solve()\nmain()", "for _ in range(int(input())):\n    (n, u, r, d, l) = map(int, input().split())\n    (u1, r1, d1, l1) = (u, r, d, l)\n    if u == n:\n        l1 -= 1\n        r1 -= 1\n    if d == n:\n        l1 -= 1\n        r1 -= 1\n    if l == n:\n        u1 -= 1\n        d1 -= 1\n    if r == n:\n        u1 -= 1\n        d1 -= 1\n    if u == n - 1:\n        if l1 > r1:\n            l1 -= 1\n        else:\n            r1 -= 1\n    if d == n - 1:\n        if l1 > r1:\n            l1 -= 1\n        else:\n            r1 -= 1\n    if l == n - 1:\n        if u1 > d1:\n            u1 -= 1\n        else:\n            d1 -= 1\n    if r == n - 1:\n        if u1 > d1:\n            u1 -= 1\n        else:\n            d1 -= 1\n    if l1 < 0 or u1 < 0 or d1 < 0 or (r1 < 0):\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, U, R, D, L) = map(int, input().split())\n    for mask in range(16):\n        (rU, rR, rD, rL) = (U, R, D, L)\n        if mask & 1:\n            rU -= 1\n            rL -= 1\n        if mask & 2:\n            rL -= 1\n            rD -= 1\n        if mask & 4:\n            rD -= 1\n            rR -= 1\n        if mask & 8:\n            rR -= 1\n            rU -= 1\n        if min(rU, rR, rD, rL) >= 0 and max(rU, rR, rD, rL) <= n - 2:\n            print('YES')\n            break\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, U, R, D, L) = map(int, input().split())\n    for mask in range(16):\n        (rU, rR, rD, rL) = (U, R, D, L)\n        if mask & 1:\n            rU -= 1\n            rL -= 1\n        if mask & 2:\n            rL -= 1\n            rD -= 1\n        if mask & 4:\n            rD -= 1\n            rR -= 1\n        if mask & 8:\n            rR -= 1\n            rU -= 1\n        if min(rU, rR, rD, rL) >= 0 and max(rU, rR, rD, rL) <= n - 2:\n            print('YES')\n            break\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    arr = list(map(int, input().split()))\n    n = arr[0]\n    arr = arr[1:]\n    for i in range(16):\n        f = False\n        board = [0, 0, 0, 0]\n        for j in range(4):\n            if i & 1:\n                board[j] += 1\n            i >>= 1\n        for k in range(4):\n            (l, r) = (board[k], board[(k + 1) % 4])\n            m = arr[k] - (l + r)\n            if m < 0 or m > n - 2:\n                f = True\n                break\n        if not f:\n            return 'YES'\n    return 'NO'\nfor _ in range(int(input())):\n    print(solve())", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, U, R, D, L) = map(int, input().split())\n    for i in range(2 ** 4):\n        (u, r, d, l) = (U, R, D, L)\n        if i % 2 == 1:\n            u -= 1\n            l -= 1\n        if i // 2 % 2 == 1:\n            u -= 1\n            r -= 1\n        if i // 4 % 2 == 1:\n            d -= 1\n            l -= 1\n        if i // 8 % 2 == 1:\n            d -= 1\n            r -= 1\n        if u >= 0 and r >= 0 and (d >= 0) and (l >= 0) and (u <= n - 2) and (r <= n - 2) and (d <= n - 2) and (l <= n - 2):\n            print('YES')\n            return\n    print('NO')\nfor i in range(int(input())):\n    solve()", "t = int(input())\n\ndef bracketable(s):\n    if s[0] == ')' or s[-1] == '(':\n        return False\n    if s.count('(') != s.count(')'):\n        return False\n    return True\nfor _ in range(t):\n    [n, U, R, D, L] = list(map(int, input().split()))\n    u = r = d = l = u_ = r_ = d_ = l_ = 0\n    if U == n:\n        r += 1\n        l += 1\n        u_ = 2\n    if U == n - 1:\n        u_ = 1\n    if R == n:\n        u += 1\n        d += 1\n        r_ = 2\n    if R == n - 1:\n        r_ = 1\n    if D == n:\n        r += 1\n        l += 1\n        d_ = 2\n    if D == n - 1:\n        d_ = 1\n    if L == n:\n        u += 1\n        d += 1\n        l_ = 2\n    if L == n - 1:\n        l_ = 1\n    if u > U or r > R or d > D or (l > L) or (u_ + d_ > R + L) or (r_ + l_ > U + D):\n        print('NO')\n    else:\n        print('YES')", "def fa(n, U, R, D, L):\n    rcnt = n\n    ccnt = n\n    if U == 0:\n        rcnt = rcnt - 1\n    if D == 0:\n        rcnt = rcnt - 1\n    if R == 0:\n        ccnt = ccnt - 1\n    if L == 0:\n        ccnt = ccnt - 1\n    if U > ccnt or D > ccnt or L > rcnt or (R > rcnt):\n        return 0\n    if (U == 1 or D == 1) and R == rcnt and (L == rcnt):\n        return 0\n    if (R == 1 or L == 1) and U == ccnt and (D == ccnt):\n        return 0\n    if U == 1 and D == 1 and (R == rcnt and L > rcnt - 2 or (L == rcnt and R > rcnt - 2)):\n        return 0\n    if L == 1 and R == 1 and (U == ccnt and D > ccnt - 2 or (D == ccnt and U > ccnt - 2)):\n        return 0\n    return 1\nT = int(input())\nfor _ in range(T):\n    (n, U, R, D, L) = map(int, input().split())\n    ans = fa(n, U, R, D, L)\n    if ans == 1:\n        print('YES')\n    else:\n        print('NO')", "def main():\n    t = int(input())\n    result = []\n    for _ in range(t):\n        (n, u, r, d, l) = map(int, input().split())\n        cnt = [0, 0, 0, 0]\n        params = [u, r, d, l]\n        correct = True\n        for i in range(4):\n            val = params[i]\n            if val < n - 1:\n                continue\n            next_ix = (i + 1) % 4\n            prev_ix = (i + 4 - 1) % 4\n            next_val = params[next_ix]\n            prev_val = params[prev_ix]\n            if val == n:\n                cnt[prev_ix] += 1\n                cnt[next_ix] += 1\n            if val == n - 1:\n                if prev_val < next_val:\n                    cnt[next_ix] += 1\n                else:\n                    cnt[prev_ix] += 1\n            if val < cnt[i]:\n                correct = False\n                break\n        for i in range(4):\n            if params[i] < cnt[i]:\n                correct = False\n                break\n        result.append('YES' if correct else 'NO')\n    print('\\n'.join(result))\nmain()", "for kvxj in range(int(input())):\n    (n, a, b, c, d) = map(int, input().split())\n    a1 = max(0, a - n + 2)\n    a2 = min(a, 2)\n    b1 = max(0, b - n + 2)\n    b2 = min(b, 2)\n    c1 = max(0, c - n + 2)\n    c2 = min(c, 2)\n    d1 = max(0, d - n + 2)\n    d2 = min(d, 2)\n    x = 0\n    if a1 + c1 > b2 + d2:\n        x = 1\n    elif b1 + d1 > a2 + c2:\n        x = 1\n    elif max(a1, c1) == 2 and min(b2, d2) == 0:\n        x = 1\n    elif max(b1, d1) == 2 and min(a2, c2) == 0:\n        x = 1\n    print(['YES', 'NO'][x])", "t = int(input())\nfor _ in range(t):\n    (n, U, R, D, L) = map(int, input().split())\n    u = U\n    r = R\n    d = D\n    l = L\n    f = 1\n    if u == n:\n        l -= 1\n        r -= 1\n    elif u == n - 1:\n        if r > l:\n            r -= 1\n        else:\n            l -= 1\n    if d == n:\n        l -= 1\n        r -= 1\n    elif d == n - 1:\n        if r > l:\n            r -= 1\n        else:\n            l -= 1\n    if r < 0 or l < 0:\n        f = 0\n    if f:\n        if L == n:\n            U -= 1\n            D -= 1\n        elif L == n - 1:\n            if U > D:\n                U -= 1\n            else:\n                D -= 1\n        if R == n:\n            U -= 1\n            D -= 1\n        elif R == n - 1:\n            if U > D:\n                U -= 1\n            else:\n                D -= 1\n        if D < 0 or U < 0:\n            f = 0\n    if f:\n        print('YES')\n    else:\n        print('NO')", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    (N, U, R, D, L) = map(int, sys.stdin.readline().split())\n    if max(U, R, D, L) <= N - 2:\n        print('YES')\n    elif max(U, R, D, L) == N - 1:\n        if (U == N - 1 and D == N - 1) and L + R < 2:\n            print('NO')\n        elif (R == N - 1 and L == N - 1) and U + D < 2:\n            print('NO')\n        elif (U == N - 1 or D == N - 1) and L + R < 1:\n            print('NO')\n        elif (L == N - 1 or R == N - 1) and U + D < 1:\n            print('NO')\n        else:\n            print('YES')\n    elif (U == N and D == N) and (L < 2 or R < 2):\n        print('NO')\n    elif (L == N and R == N) and (U < 2 or D < 2):\n        print('NO')\n    elif (U == N and D == N - 1 or (U == N - 1 and D == N)) and L + R < 3:\n        print('NO')\n    elif (L == N and R == N - 1 or (L == N - 1 and R == N)) and U + D < 3:\n        print('NO')\n    elif (U == N or D == N) and (L == 0 or R == 0):\n        print('NO')\n    elif (L == N or R == N) and (U == 0 or D == 0):\n        print('NO')\n    else:\n        print('YES')", "import sys\nt = int(input())\nfor i in range(t):\n    (n, u, r, d, l) = map(int, sys.stdin.readline().rstrip().split())\n    l_must = 0\n    r_must = 0\n    u_must = 0\n    d_must = 0\n    must = 0\n    if n - u < 2:\n        if n - u == 0:\n            must += 2\n            l_must += 1\n            r_must += 1\n        else:\n            must += 1\n    if n - d < 2:\n        if n - d == 0:\n            l_must += 1\n            r_must += 1\n            must += 2\n        else:\n            must += 1\n    if r + l < must:\n        print('NO')\n        continue\n    elif l < l_must or r < r_must:\n        print('NO')\n        continue\n    must = 0\n    if n - r < 2:\n        if n - r == 0:\n            must += 2\n            u_must += 1\n            d_must += 1\n        else:\n            must += 1\n    if n - l < 2:\n        if n - l == 0:\n            must += 2\n            u_must += 1\n            d_must += 1\n        else:\n            must += 1\n    if u + d < must:\n        print('NO')\n        continue\n    elif u < u_must or d < d_must:\n        print('NO')\n        continue\n    print('YES')", "for _ in range(int(input())):\n    (n, U, R, D, L) = map(int, input().split())\n    if U >= 2 and R >= 2 and (D >= 2) and (L >= 2):\n        print('YES')\n    else:\n        flag = 1\n        if U + D == 0:\n            if L > n - 2 or R > n - 2:\n                flag = 0\n        if L + R == 0:\n            if U > n - 2 or D > n - 2:\n                flag = 0\n        if U + D == 1:\n            if L + R > 2 * n - 3 or L == n or R == n:\n                flag = 0\n        if U + D == 2:\n            if L + R > 2 * n - 2:\n                flag = 0\n        if L + R == 1:\n            if U + D > 2 * n - 3 or U == n or D == n:\n                flag = 0\n        if L + R == 2:\n            if U + D > 2 * n - 2:\n                flag = 0\n        if U + D == 3:\n            if L == n and R == n:\n                flag = 0\n        if L + R == 3:\n            if U == n and D == n:\n                flag = 0\n        if U == 0 or D == 0:\n            if L > n - 1 or R > n - 1:\n                flag = 0\n        if U == 1 or D == 1:\n            if L + R > 2 * n - 1:\n                flag = 0\n        if L == 0 or R == 0:\n            if U > n - 1 or D > n - 1:\n                flag = 0\n        if L == 1 or R == 1:\n            if U + D > 2 * n - 1:\n                flag = 0\n        if flag == 1:\n            print('YES')\n        else:\n            print('NO')", "for t in range(int(input())):\n    (n, u, r, d, l) = [int(k) for k in input().split()]\n    li = [u, r, d, l, u]\n    if max(li) < n - 1:\n        print('YES')\n        continue\n    newli = [0, 0, 0, 0, 0]\n    flag = 0\n    for i in range(4):\n        if li[i] == n:\n            newli[(i + 1) % 4] += 1\n            newli[(i - 1) % 4] += 1\n        elif li[i] == n - 1:\n            if li[(i - 1) % 4] > li[(i + 1) % 4]:\n                newli[(i - 1) % 4] += 1\n            else:\n                newli[(i + 1) % 4] += 1\n    for i in range(4):\n        if li[i] < newli[i]:\n            print('NO')\n            break\n    else:\n        print('YES')", "def solution():\n    (n, u, r, d, l) = map(int, input().split())\n    if max(u, r, d, l) <= n - 2:\n        print('YES')\n    elif max(u, r, d, l) == n - 1:\n        if u == n - 1 and d == n - 1 and (l + r < 2):\n            print('NO')\n        elif r == n - 1 and l == n - 1 and (u + d < 2):\n            print('NO')\n        elif (u == n - 1 or d == n - 1) and l + r < 1:\n            print('NO')\n        elif (l == n - 1 or r == n - 1) and u + d < 1:\n            print('NO')\n        else:\n            print('YES')\n    elif u == n and d == n and (l < 2 or r < 2):\n        print('NO')\n    elif l == n and r == n and (u < 2 or d < 2):\n        print('NO')\n    elif (u == n and d == n - 1 or (d == n and u == n - 1)) and l + r < 3:\n        print('NO')\n    elif (r == n and l == n - 1 or (l == n and r == n - 1)) and u + d < 3:\n        print('NO')\n    elif (u == n or d == n) and (l == 0 or r == 0):\n        print('NO')\n    elif (l == n or r == n) and (u == 0 or d == 0):\n        print('NO')\n    else:\n        print('YES')\nfor t in range(int(input())):\n    solution()", "from sys import stdin, stdout\n\ndef gmi():\n    return map(int, stdin.readline().strip().split())\n\ndef gms():\n    return map(str, stdin.readline().strip().split())\n\ndef gari():\n    return list(map(int, stdin.readline().strip().split()))\n\ndef gars():\n    return list(map(str, stdin.readline().strip().split()))\n\ndef gs():\n    return stdin.readline().strip()\n\ndef gls():\n    return list(stdin.readline().strip())\n\ndef gi():\n    return int(stdin.readline())\nT = gi()\nwhile T:\n    T -= 1\n    ans = 'YES'\n    (n, u, r, d, l) = gmi()\n    ar = [u, r, d, l]\n    br = ar[:]\n    for i in range(4):\n        if ar[i] == n:\n            br[i - 1] -= 1\n            br[(i + 1) % 4] -= 1\n    for i in range(4):\n        if ar[i] == n - 1:\n            if br[i - 1] >= br[(i + 1) % 4]:\n                br[i - 1] -= 1\n            else:\n                br[(i + 1) % 4] -= 1\n    for i in br:\n        if i < 0:\n            ans = 'NO'\n            break\n    print(ans)", "for s in [*open(0)][1:]:\n    (n, *a) = map(int, s.split())\n    a *= 2\n    print('NYOE S'[all((x < n - 1 for x in a)) or all((x > 1 for x in a)) or all((0 < x < n for x in a)) or any((0 < u < n > v > 0 and (x < n - 1 > y or x > 1 < y) or (0 < v < n > u + 1 and x > 1 and (0 < y < n)) for (u, v, x, y) in zip(a, a[1:], a[2:], a[3:])))::2])", "for s in [*open(0)][1:]:\n    (n, *a) = map(int, s.split())\n    a *= 2\n    print('NYOE S'[all((x < n - 1 for x in a)) or all((x > 1 for x in a)) or all((0 < x < n for x in a)) or any((0 < u < n > v > 0 and (x < n - 1 > y or x > 1 < y) or (0 < v < n > u + 1 and x > 1 and (0 < y < n)) for (u, v, x, y) in zip(a, a[1:], a[2:], a[3:])))::2])", "for s in [*open(0)][1:]:\n    (n, *a) = map(int, s.split())\n    b = {*a}\n    a *= 2\n    print('YNEOS'[all(({n - 1, n} & b, {0, 1} & b, {0, n} & b)) and any((0 < u < n > v > 0 and (x < n - 1 > y or x > 1 < y) or (0 < v < n > u + 1 and x > 1 and (0 < y < n)) for (u, v, x, y) in zip(a, a[1:], a[2:], a[3:]))) < 1::2])", "for s in [*open(0)][1:]:\n    (n, *a) = map(int, s.split())\n    b = {*a}\n    a *= 2\n    print('YNEOS'[all(({n - 1, n} & b, {0, 1} & b, {0, n} & b, any((0 < u < n > v > 0 and (x < n - 1 > y or x > 1 < y) or (0 < v < n > u + 1 and x > 1 and (0 < y < n)) for (u, v, x, y) in zip(a, a[1:], a[2:], a[3:]))) < 1))::2])", "def solve():\n    (n, u, r, d, l) = map(int, input().split())\n    a = [u, r, d, l]\n    for i in range(2):\n        s1 = max(0, a[i] - (n - 1)) + max(0, a[i + 2] - (n - 1))\n        if s1 > a[i + 1] or s1 > a[(i + 3) % 4]:\n            return 'NO'\n        s2 = max(0, a[i] - (n - 2)) + max(0, a[i + 2] - (n - 2))\n        if s2 > a[i + 1] + a[(i + 3) % 4]:\n            return 'NO'\n    return 'YES'\nfor _ in range(int(input())):\n    print(solve())", "for _ in range(int(input())):\n    (n, u, r, d, l) = map(int, input().split())\n    (u1, r1, l1, d1) = (u, r, l, d)\n    if u == n:\n        l1 -= 1\n        r1 -= 1\n    elif u == n - 1:\n        if l1 > r1:\n            l1 -= 1\n        else:\n            r1 -= 1\n    if l == n:\n        u1 -= 1\n        d1 -= 1\n    elif l == n - 1:\n        if u1 > d1:\n            u1 -= 1\n        else:\n            d1 -= 1\n    if d == n:\n        l1 -= 1\n        r1 -= 1\n    elif d == n - 1:\n        if l1 > r1:\n            l1 -= 1\n        else:\n            r1 -= 1\n    if r == n:\n        u1 -= 1\n        d1 -= 1\n    elif r == n - 1:\n        if u1 > d1:\n            u1 -= 1\n        else:\n            d1 -= 1\n    arr = [u1, r1, l1, d1]\n    if min(arr) < 0:\n        print('NO')\n    else:\n        print('YES')", "def solve():\n    (n, u, r, b, l) = map(int, input().split())\n    for m in range(16):\n        (ua, ra, ba, la) = (u, r, b, l)\n        if m % 2:\n            ua -= 1\n            ra -= 1\n        m //= 2\n        if m % 2:\n            ra -= 1\n            ba -= 1\n        m //= 2\n        if m % 2:\n            ba -= 1\n            la -= 1\n        m //= 2\n        if m % 2:\n            la -= 1\n            ua -= 1\n        if ua in range(n - 1) and ra in range(n - 1) and (ba in range(n - 1)) and (la in range(n - 1)):\n            print('YES')\n            return\n    print('NO')\ntests = int(input())\nfor test in range(tests):\n    solve()", "t = int(input())\nwhile t > 0:\n    (n, u, r, d, l) = map(int, input().split())\n    (u1, r1, d1, l1) = (u, r, d, l)\n    if u == n:\n        r1 -= 1\n        l1 -= 1\n    if r == n:\n        u1 -= 1\n        d1 -= 1\n    if d == n:\n        r1 -= 1\n        l1 -= 1\n    if l == n:\n        d1 -= 1\n        u1 -= 1\n    if u == n - 1:\n        if l1 > r1:\n            l1 -= 1\n        else:\n            r1 -= 1\n    if r == n - 1:\n        if u1 > d1:\n            u1 -= 1\n        else:\n            d1 -= 1\n    if d == n - 1:\n        if l1 > r1:\n            l1 -= 1\n        else:\n            r1 -= 1\n    if l == n - 1:\n        if u1 > d1:\n            u1 -= 1\n        else:\n            d1 -= 1\n    if u1 < 0 or r1 < 0 or d1 < 0 or (l1 < 0):\n        print('NO')\n    else:\n        print('YES')\n    t = t - 1", "def solve():\n    (n, u, r, d, l) = map(int, input().split())\n    (n1, u1, r1, d1, l1) = (n, u, r, d, l)\n    if u == n:\n        (l1, r1) = (l1 - 1, r1 - 1)\n    if r == n:\n        (u1, d1) = (u1 - 1, d1 - 1)\n    if d == n:\n        (l1, r1) = (l1 - 1, r1 - 1)\n    if l == n:\n        (u1, d1) = (u1 - 1, d1 - 1)\n    if u == n - 1:\n        if l1 > r1:\n            l1 -= 1\n        else:\n            r1 -= 1\n    if r == n - 1:\n        if u1 > d1:\n            u1 -= 1\n        else:\n            d1 -= 1\n    if d == n - 1:\n        if l1 > r1:\n            l1 -= 1\n        else:\n            r1 -= 1\n    if l == n - 1:\n        if u1 > d1:\n            u1 -= 1\n        else:\n            d1 -= 1\n    if u1 < 0 or d1 < 0 or l1 < 0 or (r1 < 0):\n        return 'NO'\n    else:\n        return 'YES'\nres = ''\nfor _ in range(int(input())):\n    res += solve() + '\\n'\nprint(res)", "t = int(input())\nfor _ in range(t):\n    (n, u, r, d, l) = [int(i) for i in input().split()]\n    if u == 0 and r == 0 and (d == 0) and (l == 0):\n        print('YES')\n    else:\n        l1 = l\n        r1 = r\n        if u > n - 2:\n            if u == n - 1:\n                if l > r:\n                    l -= 1\n                else:\n                    r -= 1\n            else:\n                l -= 1\n                r -= 1\n        if d > n - 2:\n            if d == n - 1:\n                if l > r:\n                    l -= 1\n                else:\n                    r -= 1\n            else:\n                l -= 1\n                r -= 1\n        count_l = 0\n        if l1 > n - 2:\n            if l1 == n - 1:\n                if u > d:\n                    u -= 1\n                else:\n                    d -= 1\n            else:\n                u -= 1\n                d -= 1\n        if r1 > n - 2:\n            if r1 == n - 1:\n                if u > d:\n                    u -= 1\n                else:\n                    d -= 1\n            else:\n                u -= 1\n                d -= 1\n        if u < 0 or d < 0 or l < 0 or (r < 0):\n            print('NO')\n        else:\n            print('YES')", "t = int(input())\nfor i in range(t):\n    (n, u, r, d, l) = [int(k) for k in input().split()]\n    (a, b, c) = (r, l, 0)\n    for j in [u, d]:\n        if j == n:\n            a -= 1\n            b -= 1\n        elif j == n - 1:\n            c += 1\n    if a < 0 or b < 0 or a + b - c < 0:\n        print('NO')\n        continue\n    (a, b, c) = (u, d, 0)\n    for j in [l, r]:\n        if j == n:\n            a -= 1\n            b -= 1\n        elif j == n - 1:\n            c += 1\n    if a < 0 or b < 0 or a + b - c < 0:\n        print('NO')\n        continue\n    print('YES')", "for _ in range(int(input())):\n    (n, U, R, D, L) = map(int, input().split())\n    for mask in range(16):\n        (rU, rR, rD, rL) = (U, R, D, L)\n        if mask & 1:\n            rU -= 1\n            rL -= 1\n        if mask & 2:\n            rL -= 1\n            rD -= 1\n        if mask & 4:\n            rD -= 1\n            rR -= 1\n        if mask & 8:\n            rR -= 1\n            rU -= 1\n        if min(rU, rR, rD, rL) >= 0 and max(rU, rR, rD, rL) <= n - 2:\n            print('YES')\n            break\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, U, R, D, L) = map(int, input().split())\n    for mask in range(16):\n        (rU, rR, rD, rL) = (U, R, D, L)\n        if mask & 1:\n            rU -= 1\n            rL -= 1\n        if mask & 2:\n            rL -= 1\n            rD -= 1\n        if mask & 4:\n            rD -= 1\n            rR -= 1\n        if mask & 8:\n            rR -= 1\n            rU -= 1\n        if min(rU, rR, rD, rL) >= 0 and max(rU, rR, rD, rL) <= n - 2:\n            print('YES')\n            break\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, U, R, D, L) = map(int, input().split())\n    for mask in range(16):\n        (rU, rR, rD, rL) = (U, R, D, L)\n        if mask & 1:\n            rU -= 1\n            rL -= 1\n        if mask & 2:\n            rL -= 1\n            rD -= 1\n        if mask & 4:\n            rD -= 1\n            rR -= 1\n        if mask & 8:\n            rR -= 1\n            rU -= 1\n        if min(rU, rR, rD, rL) >= 0 and max(rU, rR, rD, rL) <= n - 2:\n            print('YES')\n            break\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, U, R, D, L) = map(int, input().split())\n    for mask in range(16):\n        (rU, rR, rD, rL) = (U, R, D, L)\n        if mask & 1:\n            rU -= 1\n            rL -= 1\n        if mask & 2:\n            rL -= 1\n            rD -= 1\n        if mask & 4:\n            rD -= 1\n            rR -= 1\n        if mask & 8:\n            rR -= 1\n            rU -= 1\n        if min(rU, rR, rD, rL) >= 0 and max(rU, rR, rD, rL) <= n - 2:\n            print('YES')\n            break\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, U, R, D, L) = map(int, input().split())\n    for mask in range(16):\n        (rU, rR, rD, rL) = (U, R, D, L)\n        if mask & 1:\n            rU -= 1\n            rL -= 1\n        if mask & 2:\n            rL -= 1\n            rD -= 1\n        if mask & 4:\n            rD -= 1\n            rR -= 1\n        if mask & 8:\n            rR -= 1\n            rU -= 1\n        if min(rU, rR, rD, rL) >= 0 and max(rU, rR, rD, rL) <= n - 2:\n            print('YES')\n            break\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, U, R, D, L) = map(int, input().split())\n    for mask in range(16):\n        (rU, rR, rD, rL) = (U, R, D, L)\n        if mask & 1:\n            rU -= 1\n            rL -= 1\n        if mask & 2:\n            rL -= 1\n            rD -= 1\n        if mask & 4:\n            rD -= 1\n            rR -= 1\n        if mask & 8:\n            rR -= 1\n            rU -= 1\n        if min(rU, rR, rD, rL) >= 0 and max(rU, rR, rD, rL) <= n - 2:\n            print('YES')\n            break\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, U, R, D, L) = map(int, input().split())\n    for mask in range(16):\n        (tu, tr, td, tl) = (U, R, D, L)\n        if mask & 1:\n            tu -= 1\n            tl -= 1\n        if mask & 2:\n            td -= 1\n            tr -= 1\n        if mask & 4:\n            tu -= 1\n            tr -= 1\n        if mask & 8:\n            td -= 1\n            tl -= 1\n        if min(tu, tr, td, tl) >= 0 and max(tu, tr, td, tl) <= n - 2:\n            print('YES')\n            break\n    else:\n        print('NO')", "for _ in range(eval(input())):\n    (n, a, b, c, d) = [int(i) for i in input().split()]\n    ans = False\n    ans = [True for i in range(2) for j in range(2) for k in range(2) for l in range(2) if i + j <= a and a <= n - 2 + i + j and (j + k <= b) and (b <= n - 2 + j + k) and (k + l <= c) and (c <= n - 2 + k + l) and (l + i <= d) and (d <= n - 2 + l + i)]\n    print('YES' if ans else 'NO')", "for _ in range(int(input())):\n    (n, U, R, D, L) = map(int, input().split())\n    for mask in range(16):\n        (rU, rR, rD, rL) = (U, R, D, L)\n        if mask & 1:\n            rU -= 1\n            rL -= 1\n        if mask & 2:\n            rL -= 1\n            rD -= 1\n        if mask & 4:\n            rD -= 1\n            rR -= 1\n        if mask & 8:\n            rR -= 1\n            rU -= 1\n        if min(rU, rR, rD, rL) >= 0 and max(rU, rR, rD, rL) <= n - 2:\n            print('YES')\n            break\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, u, r, d, l) = [int(i) for i in input().split()]\n    (cl, cr, cu, cd) = (0, 0, 0, 0)\n    (tl, tr, tu, td) = (0, 0, 0, 0)\n    if u == n - 1:\n        tl += 1\n        tr += 1\n    if u == n:\n        cl += 1\n        cr += 1\n    if d == n - 1:\n        tl += 1\n        tr += 1\n    if d == n:\n        cl += 1\n        cr += 1\n    if r == n - 1:\n        td += 1\n        tu += 1\n    if r == n:\n        cd += 1\n        cu += 1\n    if l == n - 1:\n        td += 1\n        tu += 1\n    if l == n:\n        cd += 1\n        cu += 1\n    flag = 0\n    if l < cl or r < cr or d < cd or (u < cu):\n        flag = 1\n        print('NO')\n        continue\n    l -= cl\n    r -= cr\n    u -= cu\n    d -= cd\n    if l + r < tl:\n        flag = 1\n    if u + d < td:\n        flag = 1\n    if flag:\n        print('NO')\n    else:\n        print('YES')", "T = int(input())\nfor t in range(T):\n    (n, u, r, d, l) = map(int, input().split())\n    xs = [u, r, d, l]\n    if any((x > n for x in xs)):\n        print('NO')\n        continue\n    ans = True\n    for (i, x) in enumerate(xs):\n        opp = xs[i - 2]\n        lef = xs[i - 1]\n        rig = xs[i - 3]\n        if x == n - 1:\n            needs = 1 + max(0, opp - (n - 2))\n            if lef + rig < needs:\n                ans = False\n        elif x == n:\n            needs = 2 if opp == n else 1\n            if lef < needs or rig < needs:\n                ans = False\n    print('YES' if ans else 'NO')", "def abc(n, u, r, d, l):\n    for i in range(2):\n        for j in range(2):\n            for k in range(2):\n                for p in range(2):\n                    (x, y, z, b) = (u, r, d, l)\n                    if i:\n                        x -= 1\n                        b -= 1\n                    if j:\n                        x -= 1\n                        y -= 1\n                    if k:\n                        y -= 1\n                        z -= 1\n                    if p:\n                        z -= 1\n                        b -= 1\n                    if x >= 0 and x <= n - 2 and (y >= 0) and (y <= n - 2) and (z >= 0) and (z <= n - 2) and (b >= 0) and (b <= n - 2):\n                        return 'YES'\n    return 'NO'\nt = int(input())\nfor _ in range(t):\n    (n, u, r, d, l) = map(int, input().split())\n    print(abc(n, u, r, d, l))", "for _ in range(int(input())):\n    (n, U, R, D, L) = map(int, input().split())\n    flag = 0\n    for i in range(2):\n        if flag:\n            break\n        for j in range(2):\n            if flag:\n                break\n            for k in range(2):\n                if flag:\n                    break\n                for l in range(2):\n                    (a, b, c, d) = (U - i - j, R - j - k, D - k - l, L - l - i)\n                    if 0 <= a <= n - 2 and 0 <= b <= n - 2 and (0 <= c <= n - 2) and (0 <= d <= n - 2):\n                        flag = 1\n                        break\n    print('YES' if flag else 'NO')", "t = int(input())\nfor tc in range(t):\n    (n, u, r, d, l) = map(int, input().split())\n    result = True\n    D = [u, r, d, l]\n    for i in range(4):\n        if D[i] == 0:\n            maxSideBlockCount = n - 1\n            if D[(i + 2) % 4] == 0:\n                maxSideBlockCount = n - 2\n            if D[(i + 1) % 4] > maxSideBlockCount or D[(i + 3) % 4] > maxSideBlockCount:\n                result = False\n                break\n            if D[(i + 1) % 4] == n - 1 and D[(i + 3) % 4] == n - 1 and (D[(i + 2) % 4] < 2):\n                result = False\n                break\n        elif D[i] == n:\n            minSideBlockCount = 1\n            if D[(i + 2) % 4] == n:\n                minSideBlockCount = 2\n            if D[(i + 1) % 4] < minSideBlockCount or D[(i + 3) % 4] < minSideBlockCount:\n                result = False\n                break\n            if D[(i + 1) % 4] == 1 and D[(i + 3) % 4] == 1 and (D[(i + 2) % 4] > n - 2):\n                result = False\n                break\n    print('YES' if result else 'NO')", "import sys\nfrom collections import *\nimport math\nimport bisect\n\ndef input():\n    return sys.stdin.readline()\nfor _ in range(int(input())):\n    (n, u, r, d, l) = map(int, input().split())\n    div = n - 2\n    ans = False\n    ll = [0, 1]\n    for x in ll:\n        for y in ll:\n            for z in ll:\n                for k in ll:\n                    c1 = u - x - y\n                    c2 = r - y - k\n                    c3 = d - z - k\n                    c4 = l - z - x\n                    if c1 >= 0 and c1 <= div and (c2 >= 0) and (c2 <= div) and (c3 >= 0) and (c3 <= div) and (c4 >= 0) and (c4 <= div):\n                        ans = True\n                        break\n                if ans:\n                    break\n            if ans:\n                break\n        if ans:\n            break\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\narrays = []\nfor _ in range(t):\n    array = [int(x) for x in input().split()]\n    arrays.append(array)\n\ndef test(m, M, c):\n    n = len(m)\n    for i in range(n):\n        if c[i] + c[(i - 1) % n] > M[i]:\n            return False\n        if c[i] + c[(i - 1) % n] < m[i]:\n            return False\n    return True\n\ndef test_from_position(m, M, c, pos):\n    c = c[:]\n    if m[pos] == 2:\n        possibilities = [1]\n    elif M[pos] == 0:\n        possibilities = [0]\n    else:\n        possibilities = [0, 1]\n    for possibility in possibilities:\n        c[pos] = possibility\n        if pos == len(m) - 1:\n            if test(m, M, c):\n                return True\n        elif test_from_position(m, M, c, pos + 1):\n            return True\n    return False\n\ndef test_array(array):\n    (n, U, R, B, L) = array\n    m = [max(2 - (array[0] - array[i]), 0) for i in range(1, len(array))]\n    M = [min(array[i], 2) for i in range(1, len(array))]\n    c = [0, 0, 0, 0]\n    return test_from_position(m, M, c, 0)\nfor array in arrays:\n    res = test_array(array)\n    if res:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, u, r, d, l) = map(int, input().split())\n    hcarry = 0\n    vcarry = 0\n    flag = 0\n    useless = 0\n    l1 = [0 for j in range(4)]\n    inp = [0 for j in range(4)]\n    inp[0] = u\n    inp[1] = d\n    inp[2] = l\n    inp[3] = r\n    for i in range(2):\n        a = inp[i]\n        if a == n:\n            l1[2] += 1\n            l1[3] += 1\n        elif a == n - 1:\n            hcarry += 1\n    for i in range(2, 4):\n        a = inp[i]\n        if a == n:\n            l1[0] += 1\n            l1[1] += 1\n        elif a == n - 1:\n            vcarry += 1\n    if l1[0] <= u and l1[1] <= d:\n        if l1[0] + l1[1] + vcarry <= u + d:\n            useless = 0\n        else:\n            flag = 1\n    else:\n        flag = 1\n    if l1[2] <= l and l1[3] <= r:\n        if l1[2] + l1[3] + hcarry <= l + r:\n            useless = 0\n        else:\n            flag = 1\n    else:\n        flag = 1\n    if flag == 0:\n        print('YES')\n    else:\n        print('NO')", "f = lambda x, n: x - n + 2 if x - n + 2 > 0 else 0\nfor _ in range(int(input())):\n    (n, u, r, d, l) = map(int, input().split())\n    n_u = f(u, n)\n    n_r = f(r, n)\n    n_d = f(d, n)\n    n_l = f(l, n)\n    ud = n_u + n_d\n    ud2 = 2 if u == n and d == n else 1 if u == n or d == n else 0\n    rl = n_r + n_l\n    rl2 = 2 if r == n and l == n else 1 if r == n or l == n else 0\n    if r >= ud2 and l >= ud2 and (u >= rl2) and (d >= rl2):\n        if r + l >= ud and u + d >= rl:\n            print('YES')\n            continue\n    print('NO')", "def solve():\n    m = list(map(int, input().split()))\n    (n, a) = (m[0], m[1:])\n    for i in range(2):\n        s1 = max(0, a[i] - (n - 1)) + max(0, a[i + 2] - (n - 1))\n        if s1 > a[i + 1] or s1 > a[(i + 3) % 4]:\n            return 'NO'\n        s2 = max(0, a[i] - (n - 2)) + max(0, a[i + 2] - (n - 2))\n        if s2 > a[i + 1] + a[(i + 3) % 4]:\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor _ in range(t):\n    print(solve())", "tc = int(input())\nfor _ in range(tc):\n    (s, u, r, d, l) = list(map(int, input().split()))\n    side = [u, r, d, l]\n    temp = [0, 0, 0, 0]\n    if u == s:\n        temp[1] += 1\n        temp[3] += 1\n    if d == s:\n        temp[1] += 1\n        temp[3] += 1\n    if r == s:\n        temp[0] += 1\n        temp[2] += 1\n    if l == s:\n        temp[0] += 1\n        temp[2] += 1\n    if u == s - 1:\n        if r - temp[1] < l - temp[3]:\n            temp[3] += 1\n        else:\n            temp[1] += 1\n    if d == s - 1:\n        if r - temp[1] < l - temp[3]:\n            temp[3] += 1\n        else:\n            temp[1] += 1\n    if r == s - 1:\n        if u - temp[0] < d - temp[2]:\n            temp[2] += 1\n        else:\n            temp[0] += 1\n    if l == s - 1:\n        if u - temp[0] < d - temp[2]:\n            temp[2] += 1\n        else:\n            temp[0] += 1\n    flag = True\n    for i in range(len(side)):\n        if side[i] - temp[i] < 0:\n            flag = False\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "import math\n\ndef solve(n, U, R, D, L):\n    for i in range(16):\n        (u, r, d, l) = (0, 0, 0, 0)\n        if i % 2 == 0:\n            u += 1\n            r += 1\n        if i // 2 % 2 == 0:\n            u += 1\n            l += 1\n        if i // 4 % 2 == 0:\n            d += 1\n            r += 1\n        if i // 8 % 2 == 0:\n            d += 1\n            l += 1\n        if l <= L and L <= l + n - 2 and (u <= U) and (U <= u + n - 2) and (d <= D) and (D <= d + n - 2) and (r <= R) and (R <= r + n - 2):\n            return 'YES'\n    return 'NO'\n\ndef main():\n    ans = []\n    t = int(input())\n    for _ in range(t):\n        (n, U, R, D, L) = map(int, input().split(' '))\n        ans.append(solve(n, U, R, D, L))\n    for a in ans:\n        print(a)\nmain()", "opts = [0, 1]\n\ndef solution(n, UP, RIGHT, DOWN, LEFT):\n    UPop = list(filter(lambda x: x > -1, list(range(UP - (n - 2), min(UP, 2) + 1))))\n    RIGHTop = list(filter(lambda x: x > -1, list(range(RIGHT - (n - 2), min(RIGHT, 2) + 1))))\n    DOWNop = list(filter(lambda x: x > -1, list(range(DOWN - (n - 2), min(DOWN, 2) + 1))))\n    LEFTop = list(filter(lambda x: x > -1, list(range(LEFT - (n - 2), min(LEFT, 2) + 1))))\n    for q1 in opts:\n        for q2 in opts:\n            for q3 in opts:\n                for q4 in opts:\n                    if q1 + q2 in UPop:\n                        if q2 + q4 in RIGHTop:\n                            if q3 + q4 in DOWNop:\n                                if q1 + q3 in LEFTop:\n                                    return 'YES'\n    return 'NO'\nfor t in range(int(input())):\n    (n, UP, RIGHT, DOWN, LEFT) = map(int, input().split())\n    print(solution(n, UP, RIGHT, DOWN, LEFT))", "for _ in range(int(input())):\n    (n, u, r, d, l) = map(int, input().split())\n    arr = [u, r, d, l]\n    req = [0, 0, 0, 0]\n    for i in range(4):\n        if arr[i] == n:\n            try:\n                req[i - 1] += 1\n            except:\n                req[3] += 1\n            try:\n                req[i + 1] += 1\n            except:\n                req[0] += 1\n        elif arr[i] == n - 1:\n            if i - 1 < 0:\n                left = 3\n            else:\n                left = i - 1\n            if i + 1 > 3:\n                right = 0\n            else:\n                right = i + 1\n            if arr[left] >= arr[right]:\n                req[left] += 1\n            else:\n                req[right] += 1\n    flag = 0\n    for i in range(4):\n        if arr[i] < req[i]:\n            flag = 1\n    if flag == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, u, r, d, l) = list(map(int, input().split()))\n    if u < n - 1 and r < n - 1 and (l < n - 1) and (d < n - 1):\n        print('YES')\n        continue\n    if u > n or r > n or l > n or (d > n):\n        print('NO')\n        continue\n    adj = [[u, l, r, d], [d, l, r, u], [r, u, d, l], [l, u, d, r]]\n    valid = True\n    for ad in adj:\n        (x, o1, o2, y) = ad\n        if x == n:\n            if o1 == 0 or o2 == 0:\n                valid = False\n                break\n            if o1 == n or o2 == n:\n                if y == 0:\n                    valid = False\n                    break\n            if o1 == n and o2 == n:\n                if y < 2:\n                    valid = False\n                    break\n            if y == n:\n                if o1 < 2 or o2 < 2:\n                    valid = False\n                    break\n            if y == n - 1:\n                if o1 < 2 and o2 < 2:\n                    valid = False\n                    break\n        elif x == n - 1:\n            if o1 == 0 and o2 == 0:\n                valid = False\n                break\n            if y == n - 1:\n                if o1 + o2 < 2:\n                    valid = False\n                    break\n    if valid:\n        print('YES')\n        continue\n    print('NO')", "_ = int(input())\nfor _ai in range(_):\n    li = [int(i) for i in input().split()]\n    ali = [0, 0, 0, 0]\n    n = li[0]\n    li = li[1:]\n    flag = 1\n    if n == 1:\n        for i in range(4):\n            if li[i] != 1:\n                flag = 0\n    else:\n        for i in range(4):\n            l = i - 1\n            if l < 0:\n                l = 3\n            r = i + 1\n            if r > 3:\n                r = 0\n            if li[i] == n:\n                ali[l] += 1\n                ali[r] += 1\n            elif li[i] == n - 1:\n                if li[r] > li[l]:\n                    ali[r] += 1\n                else:\n                    ali[l] += 1\n        for i in range(4):\n            if li[i] < ali[i]:\n                flag = 0\n    print('YES') if flag else print('NO')", "def adjacent(a):\n    if a == 'u':\n        return ('l', 'r')\n    if a == 'r':\n        return ('u', 'd')\n    if a == 'd':\n        return ('r', 'l')\n    if a == 'l':\n        return ('d', 'u')\n\ndef solve(n, u, r, d, l):\n    dic1 = {}\n    dic1['u'] = u\n    dic1['r'] = r\n    dic1['d'] = d\n    dic1['l'] = l\n    dic = {}\n    arr = [[u, 'u'], [r, 'r'], [d, 'd'], [l, 'l']]\n    dic['u'] = arr[0]\n    dic['r'] = arr[1]\n    dic['d'] = arr[2]\n    dic['l'] = arr[3]\n    arr = sorted(arr)\n    while arr:\n        a = arr[-1]\n        if a[0] < 0:\n            return 'NO'\n        elif dic1[a[1]] == n:\n            (x, y) = adjacent(a[1])\n            dic[x][0] -= 1\n            dic[y][0] -= 1\n            arr.pop()\n            arr = sorted(arr)\n        elif dic1[a[1]] == n - 1:\n            (x, y) = adjacent(a[1])\n            if dic[x][0] < dic[y][0]:\n                dic[y][0] -= 1\n            else:\n                dic[x][0] -= 1\n            arr.pop()\n            arr = sorted(arr)\n        else:\n            arr.pop()\n    return 'YES'\nx = int(input())\nfor _ in range(x):\n    A = list(map(int, input().split()))\n    print(solve(A[0], A[1], A[2], A[3], A[4]))", "def solve():\n    m = list(map(int, input().split()))\n    (n, a) = (m[0], m[1:])\n    for i in range(2):\n        s1 = max(0, a[i] - (n - 1)) + max(0, a[i + 2] - (n - 1))\n        if s1 > a[i + 1] or s1 > a[(i + 3) % 4]:\n            return 'NO'\n        s2 = max(0, a[i] - (n - 2)) + max(0, a[i + 2] - (n - 2))\n        if s2 > a[i + 1] + a[(i + 3) % 4]:\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor _ in range(t):\n    print(solve())", "for _ in range(int(input())):\n    (n, up, rt, do, le) = map(int, input().split())\n    boo1 = False\n    for i in range(2):\n        if boo1:\n            break\n        for j in range(2):\n            if boo1:\n                break\n            for k in range(2):\n                if boo1:\n                    break\n                for l in range(2):\n                    (a, b, c, d) = (up - i - j, rt - j - k, do - k - l, le - l - i)\n                    if 0 <= a <= n - 2 and 0 <= b <= n - 2 and (0 <= c <= n - 2) and (0 <= d <= n - 2):\n                        boo1 = True\n                        break\n    print('YES') if boo1 else print('NO')", "for _ in range(int(input())):\n    (n, u, r, d, l) = map(int, input().split())\n    ans = 'NO'\n    for i in range(2):\n        for j in range(2):\n            for k in range(2):\n                for m in range(2):\n                    u1 = u - i - m\n                    r1 = r - i - j\n                    d1 = d - j - k\n                    l1 = l - m - k\n                    if min(u1, r1, d1, l1) >= 0 and max(u1, r1, d1, l1) <= n - 2:\n                        ans = 'YES'\n                        break\n                if ans == 'YES':\n                    break\n            if ans == 'YES':\n                break\n        if ans == 'YES':\n            break\n    print(ans)", "try:\n    t = int(input())\n    for i in range(0, t):\n        (n, u, r, d, l) = list(map(int, input().split(' ')))\n        if u <= n - 2 and r <= n - 2 and (l <= n - 2) and (d <= n - 2):\n            print('YES')\n        else:\n            u1 = u\n            r1 = r\n            d1 = d\n            l1 = l\n            if u == n:\n                r1 -= 1\n                l1 -= 1\n            if u == n - 1:\n                if r1 >= l1:\n                    r1 -= 1\n                else:\n                    l1 -= 1\n            if d == n:\n                r1 -= 1\n                l1 -= 1\n            if d == n - 1:\n                if r1 >= l1:\n                    r1 -= 1\n                else:\n                    l1 -= 1\n            if r == n:\n                u1 -= 1\n                d1 -= 1\n            if r == n - 1:\n                if u1 >= d1:\n                    u1 -= 1\n                else:\n                    d1 -= 1\n            if l == n:\n                u1 -= 1\n                d1 -= 1\n            if l == n - 1:\n                if u1 >= d1:\n                    u1 -= 1\n                else:\n                    d1 -= 1\n            if u1 < 0 or r1 < 0 or l1 < 0 or (d1 < 0):\n                print('NO')\n            else:\n                print('YES')\nexcept:\n    pass", "t = int(input())\nfor i in range(t):\n    (n, u, r, d, l) = map(int, input().split())\n    n1 = n\n    u1 = u\n    c = 0\n    r1 = r\n    d1 = d\n    l1 = l\n    if u <= n - 2:\n        c += 1\n    elif u == n:\n        r1 -= 1\n        l1 -= 1\n    elif u == n - 1:\n        if r1 > l1:\n            r1 -= 1\n        else:\n            l1 -= 1\n    if r <= n - 2:\n        c += 1\n    elif r == n:\n        u1 -= 1\n        d1 -= 1\n    elif r == n - 1:\n        if u1 > d1:\n            u1 -= 1\n        else:\n            d1 -= 1\n    if l <= n - 2:\n        c += 1\n    elif l == n:\n        u1 -= 1\n        d1 -= 1\n    elif l == n - 1:\n        if u1 > d1:\n            u1 -= 1\n        else:\n            d1 -= 1\n    if d <= n - 2:\n        c += 1\n    elif d == n:\n        r1 -= 1\n        l1 -= 1\n    elif d == n - 1:\n        if r1 > l1:\n            r1 -= 1\n        else:\n            l1 -= 1\n    if u1 >= 0 and r1 >= 0 and (d1 >= 0) and (l1 >= 0):\n        print('YES')\n    else:\n        print('NO')", "def solve(n, U, R, D, L):\n    if n == 1:\n        if U == 1 and L == 1 and (D == 1) and (R == 1):\n            return 'YES'\n        else:\n            return 'NO'\n    u = 0\n    r = 0\n    d = 0\n    l = 0\n    if U == n:\n        l += 1\n        r += 1\n    if D == n:\n        l += 1\n        r += 1\n    if L == n:\n        u += 1\n        d += 1\n    if R == n:\n        u += 1\n        d += 1\n    if U == n - 1:\n        if L > l:\n            l += 1\n        else:\n            r += 1\n    if D == n - 1:\n        if L > l:\n            l += 1\n        else:\n            r += 1\n    if L == n - 1:\n        if D > d:\n            d += 1\n        else:\n            u += 1\n    if R == n - 1:\n        if D > d:\n            d += 1\n        else:\n            u += 1\n    if U >= u and R >= r and (D >= d) and (L >= l):\n        return 'YES'\n    else:\n        return 'NO'\nt = int(input())\nfor i in range(t):\n    (n, U, R, D, L) = map(int, input().split())\n    print(solve(n, U, R, D, L))", "def question2():\n    (n, u, r, d, l) = map(int, input().split())\n    flag = False\n    for c1 in range(2):\n        for c2 in range(2):\n            for c3 in range(2):\n                for c4 in range(2):\n                    if 0 <= u - c1 - c2 <= n - 2 and 0 <= r - c2 - c3 <= n - 2 and (0 <= d - c3 - c4 <= n - 2) and (0 <= l - c4 - c1 <= n - 2):\n                        return True\n    return False\nremained_test_cases = int(input())\nwhile remained_test_cases > 0:\n    if question2():\n        print('YES')\n    else:\n        print('NO')\n    remained_test_cases = remained_test_cases - 1", "def solve():\n    (n, u, r, d, l) = map(int, input().split())\n    u1 = u\n    l1 = l\n    r1 = r\n    d1 = d\n    if u1 == n:\n        l = l - 1\n        r = r - 1\n    if d1 == n:\n        l = l - 1\n        r = r - 1\n    if l1 == n:\n        u = u - 1\n        d = d - 1\n    if r1 == n:\n        u = u - 1\n        d = d - 1\n    if u1 == n - 1:\n        if r > l:\n            r = r - 1\n        else:\n            l = l - 1\n    if d1 == n - 1:\n        if r > l:\n            r = r - 1\n        else:\n            l = l - 1\n    if r1 == n - 1:\n        if d > u:\n            d = d - 1\n        else:\n            u = u - 1\n    if l1 == n - 1:\n        if d > u:\n            d = d - 1\n        else:\n            u = u - 1\n    if l < 0 or r < 0 or d < 0 or (u < 0):\n        print('NO')\n    else:\n        print('YES')\nfor tetsis in range(int(input())):\n    solve()", "def question2():\n    (n, u, r, d, l) = map(int, input().split())\n    flag = False\n    for c1 in range(2):\n        for c2 in range(2):\n            for c3 in range(2):\n                for c4 in range(2):\n                    if 0 <= u - c1 - c2 <= n - 2 and 0 <= r - c2 - c3 <= n - 2 and (0 <= d - c3 - c4 <= n - 2) and (0 <= l - c4 - c1 <= n - 2):\n                        return True\n    return False\nremained_test_cases = int(input())\nwhile remained_test_cases > 0:\n    if question2():\n        print('YES')\n    else:\n        print('NO')\n    remained_test_cases = remained_test_cases - 1", "t = int(input())\nwhile t:\n    t -= 1\n    (n, u, r, d, l) = map(int, input().split())\n    for i in range(16):\n        (nu, nr, nd, nl) = (u, r, d, l)\n        if i & 1:\n            nu -= 1\n            nl -= 1\n        if i & 2:\n            nu -= 1\n            nr -= 1\n        if i & 4:\n            nd -= 1\n            nl -= 1\n        if i & 8:\n            nd -= 1\n            nr -= 1\n        if min(nu, nr, nd, nl) >= 0 and max(nu, nl, nd, nr) <= n - 2:\n            print('YES')\n            break\n    else:\n        print('NO')", "import math\n\ndef solve(inp):\n    (n, u, r, d, l) = list(map(int, inp.split()))\n    for i in range(16):\n        (cu, cr, cd, cl) = (u, r, d, l)\n        if i & 1:\n            cu -= 1\n            cr -= 1\n        if i & 2:\n            cr -= 1\n            cd -= 1\n        if i & 4:\n            cd -= 1\n            cl -= 1\n        if i & 8:\n            cl -= 1\n            cu -= 1\n        if min(cu, cr, cd, cl) >= 0 and max(cu, cr, cd, cl) <= n - 2:\n            return 'YES'\n    return 'NO'\ntc = int(input())\nfor _ in range(tc):\n    inp = input()\n    print(solve(inp))", "for _ in range(eval(input())):\n    (n, a, b, c, d) = [int(i) for i in input().split()]\n    ans = False\n    ans = [True for i in range(2) for j in range(2) for k in range(2) for l in range(2) if i + j <= a and a <= n - 2 + i + j and (j + k <= b) and (b <= n - 2 + j + k) and (k + l <= c) and (c <= n - 2 + k + l) and (l + i <= d) and (d <= n - 2 + l + i)]\n    print('YES' if ans else 'NO')", "for _ in range(int(input())):\n    (n, u, r, d, l) = map(int, input().split())\n    for csel in range(16):\n        (u1, r1, d1, l1) = (u, r, d, l)\n        if csel & 1:\n            (l1, u1) = (l1 - 1, u1 - 1)\n        if csel & 2:\n            (u1, r1) = (u1 - 1, r1 - 1)\n        if csel & 4:\n            (r1, d1) = (r1 - 1, d1 - 1)\n        if csel & 8:\n            (d1, l1) = (d1 - 1, l1 - 1)\n        possible = True\n        for i in (l1, u1, r1, d1):\n            if i < 0 or i > n - 2:\n                possible = False\n                break\n        if possible:\n            break\n    print(['NO', 'YES'][possible])", "T = int(input())\nwhile T > 0:\n    T -= 1\n    inp = input().split()\n    n = int(inp[0])\n    a = [int(x) for x in inp[1:]]\n    ans = True\n    check = [False, False, False, False]\n    for i in range(len(a)):\n        if a[i] == n:\n            a[(i + 1) % len(a)] -= 1\n            a[i - 1] -= 1\n            a[i] -= 2\n            check[i] = True\n    for i in range(len(a)):\n        if a[i] == n - 1:\n            a[i] = a[i] - 1\n            if a[(i + 1) % len(a)] >= 1 and (not check[(i + 1) % len(a)]):\n                a[(i + 1) % len(a)] = a[(i + 1) % len(a)] - 1\n            elif a[i - 1] >= 1 and (not check[i - 1]):\n                a[i - 1] = a[i - 1] - 1\n            else:\n                ans = False\n    for i in range(len(a)):\n        if a[i] < 0 or a[i] > n - 2:\n            ans = False\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "for s in [*open(0)][1:]:\n    (n, *a) = map(int, s.split())\n    a *= 2\n    print('NYOE S'[all((x < n - 1 for x in a)) or all((x > 1 for x in a)) or all((0 < x < n for x in a)) or any((0 < u < n and 0 < v < n and (x < n - 1 > y or x > 1 < y) or (u < n - 1 and 0 < v < n and (x > 1) and (0 < y < n)) for (u, v, x, y) in zip(a, a[1:], a[2:], a[3:])))::2])", "def main() -> None:\n    a = list(map(int, input().split()))\n    n = a[0]\n    a = list(map(lambda x: (max(0, x - n + 2), min(2, x)), a[1:]))\n    for i in range(4):\n        if a[i][0] == 2 and a[(i + 1) % 4][1] == 0 or (a[i][1] == 0 and a[(i + 1) % 4][0] == 2):\n            print('NO')\n            return\n    if a[0][0] + a[2][0] > a[1][1] + a[3][1] or a[0][1] + a[2][1] < a[1][0] + a[3][0]:\n        print('NO')\n    else:\n        print('YES')\n    return\nt = int(input())\nfor _ in range(t):\n    main()", "def solve():\n    (n, u, r, d, l) = map(int, input().split())\n    for s in range(16):\n        (uc, rc, dc, lc) = (u, r, d, l)\n        if s & 1:\n            lc -= 1\n            uc -= 1\n        if s & 2:\n            uc -= 1\n            rc -= 1\n        if s & 4:\n            rc -= 1\n            dc -= 1\n        if s & 8:\n            lc -= 1\n            dc -= 1\n        if uc >= 0 and rc >= 0 and (dc >= 0) and (lc >= 0) and (uc <= n - 2) and (rc <= n - 2) and (dc <= n - 2) and (lc <= n - 2):\n            return 'YES'\n    return 'NO'\nfor _ in range(int(input())):\n    print(solve())", "import sys, io, os, time\nfrom collections import defaultdict\nfrom collections import Counter\nfrom collections import deque\nfrom itertools import combinations\nfrom itertools import permutations\nimport bisect, math, heapq\nalphabet = 'abcdefghijklmnopqrstuvwxyz'\n\ndef ceil(num, denom):\n    return (num + denom - 1) // denom\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, U, R, D, L) = map(int, input().split())\n    for mask in range(16):\n        (rU, rR, rD, rL) = (U, R, D, L)\n        if mask & 1:\n            rU -= 1\n            rL -= 1\n        if mask & 2:\n            rL -= 1\n            rD -= 1\n        if mask & 4:\n            rD -= 1\n            rR -= 1\n        if mask & 8:\n            rR -= 1\n            rU -= 1\n        if min(rU, rR, rD, rL) >= 0 and max(rU, rR, rD, rL) <= n - 2:\n            print('YES')\n            break\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, u, r, d, l) = map(int, input().split())\n    (u1, r1, d1, l1) = (u, r, d, l)\n    if u == n:\n        r1 -= 1\n        l1 -= 1\n    if d == n:\n        r1 -= 1\n        l1 -= 1\n    if r == n:\n        u1 -= 1\n        d1 -= 1\n    if l == n:\n        u1 -= 1\n        d1 -= 1\n    if u == n - 1:\n        if r1 > l1:\n            r1 -= 1\n        else:\n            l1 -= 1\n    if d == n - 1:\n        if r1 > l1:\n            r1 -= 1\n        else:\n            l1 -= 1\n    if r == n - 1:\n        if u1 > d1:\n            u1 -= 1\n        else:\n            d1 -= 1\n    if l == n - 1:\n        if u1 > d1:\n            u1 -= 1\n        else:\n            d1 -= 1\n    if u1 < 0 or r1 < 0 or d1 < 0 or (l1 < 0):\n        print('NO')\n    else:\n        print('YES')", "def aje(n, u, r, d, l):\n    c1 = 0\n    c2 = 0\n    c3 = 0\n    c4 = 0\n    if u + d < r + l - 2 * n + 4 or u + d < max(l, r) - n + 2:\n        print('NO')\n    elif r + l < u + d - 2 * n + 4 or l + r < max(u, d) - n + 2:\n        print('NO')\n    elif (u == 0 or d == 0) and (l == n or r == n):\n        print('NO')\n    elif (l == 0 or r == 0) and (u == n or d == n):\n        print('NO')\n    elif (u == 1 or d == 1) and (l == n and r == n):\n        print('NO')\n    elif (l == 1 or r == 1) and (u == n and d == n):\n        print('NO')\n    else:\n        print('YES')\nprim = int(input())\nwhile prim > 0:\n    a = input().split(' ')\n    n = int(a[0])\n    u = int(a[1])\n    r = int(a[2])\n    d = int(a[3])\n    l = int(a[4])\n    aje(n, u, r, d, l)\n    prim -= 1", "for _ in range(int(input())):\n    (n, u, r, d, l) = map(int, input().split())\n    for i in range(1 << 5):\n        if u < (i & 1 << 3 > 0) + (i & 1 << 2 > 0) or n - 2 < u - (i & 1 << 3 > 0) - (i & 1 << 2 > 0):\n            continue\n        if r < (i & 1 << 2 > 0) + (i & 1 << 1 > 0) or n - 2 < r - (i & 1 << 2 > 0) - (i & 1 << 1 > 0):\n            continue\n        if d < (i & 1 << 1 > 0) + (i & 1 << 0 > 0) or n - 2 < d - (i & 1 << 1 > 0) - (i & 1 << 0 > 0):\n            continue\n        if l < (i & 1 << 0 > 0) + (i & 1 << 3 > 0) or n - 2 < l - (i & 1 << 0 > 0) - (i & 1 << 3 > 0):\n            continue\n        print('YES')\n        break\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, U, R, D, L) = map(int, input().split())\n    for i in range(2 ** 4):\n        (u, r, d, l) = (U, R, D, L)\n        if i % 2 == 1:\n            u -= 1\n            l -= 1\n        if i // 2 % 2 == 1:\n            u -= 1\n            r -= 1\n        if i // 4 % 2 == 1:\n            d -= 1\n            l -= 1\n        if i // 8 % 2 == 1:\n            d -= 1\n            r -= 1\n        if u >= 0 and r >= 0 and (d >= 0) and (l >= 0) and (u <= n - 2) and (r <= n - 2) and (d <= n - 2) and (l <= n - 2):\n            print('YES')\n            return\n    print('NO')\nfor i in range(int(input())):\n    solve()", "import sys\nYES = 'YES'\nNO = 'NO'\nMOD = 1000000007\n\ndef input_int():\n    return int(input())\n\ndef input_list():\n    return input().split(' ')\n\ndef input_list_int():\n    return list(map(int, input_list()))\n\ndef solve():\n    a = input_list_int()\n    n = a[0]\n    b = [0] * 5\n    for i in range(1, 5):\n        pr = i - 1\n        ne = i + 1\n        if pr == 0:\n            pr = 4\n        if ne == 5:\n            ne = 1\n        if a[i] == n:\n            b[pr] += 1\n            b[ne] += 1\n        if a[i] == n - 1:\n            if a[pr] == a[ne]:\n                if b[pr] > b[ne]:\n                    b[ne] += 1\n                else:\n                    b[pr] += 1\n            elif a[pr] > a[ne]:\n                b[pr] += 1\n            else:\n                b[ne] += 1\n    for i in range(1, 5):\n        if b[i] > a[i]:\n            print(NO)\n            return\n    print(YES)\nquery_count = input_int()\nwhile query_count:\n    query_count -= 1\n    solve()", "tc = int(input())\n\ndef check(U, R, D, L):\n    combs = [(0, 0, 0, 0), (1, 0, 0, 1), (1, 1, 0, 0), (0, 0, 1, 1), (0, 1, 1, 0), (2, 1, 0, 1), (1, 0, 1, 2), (1, 1, 1, 1), (1, 2, 1, 0), (0, 1, 2, 1), (1, 0, 1, 2), (2, 1, 1, 2), (2, 2, 1, 1), (1, 2, 2, 1), (1, 1, 2, 2), (2, 2, 2, 2)]\n    for (u, r, d, l) in combs:\n        if n - 2 >= U - u >= 0 and n - 2 >= R - r >= 0 and (n - 2 >= D - d >= 0) and (n - 2 >= L - l >= 0):\n            print('YES')\n            return\n    print('NO')\n    return\nfor _ in range(tc):\n    (n, U, R, D, L) = list(map(int, input().split()))\n    check(U, R, D, L)", "uc = 0\nrc = 0\ndc = 0\nlc = 0\nj = int(input())\nfor i in range(j):\n    (n, u, r, d, l) = map(int, input().split())\n    uc = u\n    rc = r\n    dc = d\n    lc = l\n    if u == n:\n        rc -= 1\n        lc -= 1\n    if r == n:\n        uc -= 1\n        dc -= 1\n    if l == n:\n        uc -= 1\n        dc -= 1\n    if d == n:\n        rc -= 1\n        lc -= 1\n    if u == n - 1:\n        if lc > rc:\n            lc -= 1\n        else:\n            rc -= 1\n    if d == n - 1:\n        if lc > rc:\n            lc -= 1\n        else:\n            rc -= 1\n    if r == n - 1:\n        if uc > dc:\n            uc -= 1\n        else:\n            dc -= 1\n    if l == n - 1:\n        if uc > dc:\n            uc -= 1\n        else:\n            dc -= 1\n    if uc < 0 or dc < 0 or lc < 0 or (rc < 0):\n        print('NO')\n    else:\n        print('YES')", "import sys\ninput = sys.stdin.readline\n\ndef solution(n, a, b, c, d):\n    xab = xbc = xcd = xda = 0\n    rest_a = rest_b = rest_c = rest_d = 0\n    for xab in [0, 1]:\n        for xbc in [0, 1]:\n            for xcd in [0, 1]:\n                for xda in [0, 1]:\n                    rest_a = a - xab - xda\n                    rest_b = b - xab - xbc\n                    rest_c = c - xbc - xcd\n                    rest_d = d - xcd - xda\n                    if min([rest_a, rest_b, rest_c, rest_d]) >= 0 and max([rest_a, rest_b, rest_c, rest_d]) <= n - 2:\n                        print('YES')\n                        return\n    print('NO')\nT = int(input())\nfor t in range(T):\n    [n, a, b, c, d] = list(map(int, input().split()))\n    solution(n, a, b, c, d)", "t = int(input())\nfor i in range(t):\n    (n, u, r, d, l) = list(map(int, input().split()))\n    sides = [u, r, d, l]\n    used = [[], [], [], []]\n    for i in range(4):\n        if sides[i] == n - 1:\n            sides[i] -= 1\n            if i - 4 in used[i - 1]:\n                sides[i - 3] -= 1\n                used[i].append(i - 3)\n                used[i - 3].append(i)\n            elif i - 4 in used[i - 3]:\n                sides[i - 1] -= 1\n                used[i].append(i - 1)\n                used[i - 1].append(i)\n            elif sides[i - 3] > sides[i - 1]:\n                sides[i - 3] -= 1\n                used[i].append(i - 3)\n            else:\n                sides[i - 1] -= 1\n                used[i].append(i - 1)\n        elif sides[i] == n:\n            sides[i] -= 2\n            sides[i - 3] -= 1\n            sides[i - 1] -= 1\n            used[i].append(i - 3)\n            used[i].append(i - 1)\n            used[i - 3].append(i)\n            used[i - 1].append(i)\n    if min(sides) < 0 or max(sides) > n - 2:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    (n, U, R, D, L) = map(int, input().split())\n    cnt = 0\n    for mask in range(16):\n        (U1, R1, D1, L1) = (U, R, D, L)\n        if 1 & mask:\n            U1 -= 1\n            L1 -= 1\n        if 2 & mask:\n            U1 -= 1\n            R1 -= 1\n        if 4 & mask:\n            D1 -= 1\n            R1 -= 1\n        if 8 & mask:\n            D1 -= 1\n            L1 -= 1\n        if min(U1, R1, D1, L1) >= 0 and max(U1, R1, D1, L1) <= n - 2:\n            cnt = 1\n            break\n    if cnt:\n        print('YES')\n    else:\n        print('NO')", "def grtid(n, U, R, D, L):\n    for i in range(16):\n        (nu, nr, nd, nl) = (U, R, D, L)\n        if i & 1:\n            nu -= 1\n            nr -= 1\n        if i & 2:\n            nu -= 1\n            nl -= 1\n        if i & 4:\n            nd -= 1\n            nl -= 1\n        if i & 8:\n            nd -= 1\n            nr -= 1\n        if min(nd, nr, nl, nu) >= 0 and max(nd, nr, nl, nu) <= n - 2:\n            return 'YES'\n    return 'NO'\nfor i in range(int(input())):\n    (a, b, c, d, e) = map(int, input().strip().split())\n    print(grtid(a, b, c, d, e))", "for _ in range(int(input())):\n    (n, u, r, d, l) = map(int, input().split())\n    if max(u, r, d, l) == n - 1:\n        if u == n - 1 and d == n - 1 and (l + r < 2) or (r == n - 1 and l == n - 1 and (u + d < 2)) or ((u == n - 1 or d == n - 1) and l + r < 1) or ((l == n - 1 or r == n - 1) and u + d < 1):\n            print('NO')\n        else:\n            print('YES')\n    elif u == n and d == n and (l < 2 or r < 2) or (l == n and r == n and (u < 2 or d < 2)) or ((u == n and d == n - 1 or (d == n and u == n - 1)) and l + r < 3) or ((r == n and l == n - 1 or (l == n and r == n - 1)) and u + d < 3) or ((u == n or d == n) and (l == 0 or r == 0)) or ((l == n or r == n) and (u == 0 or d == 0)):\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nanswers = []\nfor _ in range(t):\n    data = input()\n    data = list(map(int, data.split(' ')))\n    (n, U, R, D, L) = data\n    if max(data) > n or 2 > n or n > 100:\n        answers.append('NO')\n    else:\n        n = data[0]\n        if n == data[1]:\n            L -= 1\n            R -= 1\n        elif n == data[1] + 1:\n            if L > R:\n                L -= 1\n            else:\n                R -= 1\n        if n == data[2]:\n            U -= 1\n            D -= 1\n        elif n == data[2] + 1:\n            if D > U:\n                D -= 1\n            else:\n                U -= 1\n        if n == data[3]:\n            R -= 1\n            L -= 1\n        elif n == data[3] + 1:\n            if R > L:\n                R -= 1\n            else:\n                L -= 1\n        if n == data[4]:\n            U -= 1\n            D -= 1\n        elif n == data[4] + 1:\n            if D > U:\n                D -= 1\n            else:\n                U -= 1\n        if min((U, R, D, L)) < 0:\n            answers.append('NO')\n        else:\n            answers.append('YES')\nfor a in answers:\n    print(a)", "for _ in range(int(input())):\n    (n, U, R, D, L) = map(int, input().split())\n    for mask in range(16):\n        (rU, rR, rD, rL) = (U, R, D, L)\n        if mask & 1:\n            rU -= 1\n            rL -= 1\n        if mask & 2:\n            rL -= 1\n            rD -= 1\n        if mask & 4:\n            rD -= 1\n            rR -= 1\n        if mask & 8:\n            rR -= 1\n            rU -= 1\n        if min(rU, rR, rD, rL) >= 0 and max(rU, rR, rD, rL) <= n - 2:\n            print('YES')\n            break\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, U, R, D, L) = map(int, input().split())\n    for mask in range(16):\n        (rU, rR, rD, rL) = (U, R, D, L)\n        if mask & 1:\n            rU -= 1\n            rL -= 1\n        if mask & 2:\n            rL -= 1\n            rD -= 1\n        if mask & 4:\n            rD -= 1\n            rR -= 1\n        if mask & 8:\n            rR -= 1\n            rU -= 1\n        if min(rU, rR, rD, rL) >= 0 and max(rU, rR, rD, rL) <= n - 2:\n            print('YES')\n            break\n    else:\n        print('NO')", "for testcase in range(int(input())):\n    arr = [int(x) for x in input().split()]\n    (n, u, r, d, l) = (arr[0], arr[1], arr[2], arr[3], arr[4])\n    if u < n - 1 and r < n - 1 and (d < n - 1) and (l < n - 1):\n        print('YES')\n        continue\n    (u1, r1, d1, l1) = (u, r, d, l)\n    if u == n:\n        r1 -= 1\n        l1 -= 1\n    if d == n:\n        r1 -= 1\n        l1 -= 1\n    if r == n:\n        u1 -= 1\n        d1 -= 1\n    if l == n:\n        u1 -= 1\n        d1 -= 1\n    if u == n - 1:\n        if r1 > l1:\n            r1 -= 1\n        else:\n            l1 -= 1\n    if d == n - 1:\n        if r1 > l1:\n            r1 -= 1\n        else:\n            l1 -= 1\n    if r == n - 1:\n        if u1 > d1:\n            u1 -= 1\n        else:\n            d1 -= 1\n    if l == n - 1:\n        if u1 > d1:\n            u1 -= 1\n        else:\n            d1 -= 1\n    if min(u1, r1, d1, l1) < 0:\n        print('NO')\n    else:\n        print('YES')", "import math\nimport heapq\n\ndef S():\n    return input()\n\ndef M():\n    return map(int, input().split())\n\ndef I():\n    return int(S())\n\ndef L():\n    return list(M())\nfor _ in range(I()):\n    (n, u, r, d, l) = M()\n    (u1, r1, d1, l1) = (u, r, d, l)\n    if u > n - 2:\n        if u == n - 1:\n            if r < l:\n                l -= 1\n            else:\n                r -= 1\n        else:\n            r -= 1\n            l -= 1\n    if r < 0 or l < 0:\n        print('NO')\n    else:\n        if d > n - 2:\n            if d == n - 1:\n                if r < l:\n                    l -= 1\n                else:\n                    r -= 1\n            else:\n                l -= 1\n                r -= 1\n        if r < 0 or l < 0:\n            print('NO')\n        else:\n            u = r1\n            d = l1\n            l = u1\n            r = d1\n            if u > n - 2:\n                if u == n - 1:\n                    if r < l:\n                        l -= 1\n                    else:\n                        r -= 1\n                else:\n                    r -= 1\n                    l -= 1\n            if r < 0 or l < 0:\n                print('NO')\n            else:\n                if d > n - 2:\n                    if d == n - 1:\n                        if r < l:\n                            l -= 1\n                        else:\n                            r -= 1\n                    else:\n                        l -= 1\n                        r -= 1\n                if r < 0 or l < 0:\n                    print('NO')\n                else:\n                    print('YES')", "for _ in range(int(input())):\n    (n, U, R, D, L) = map(int, input().split())\n    for mask in range(16):\n        (rU, rR, rD, rL) = (U, R, D, L)\n        if mask & 1:\n            rU -= 1\n            rL -= 1\n        if mask & 2:\n            rL -= 1\n            rD -= 1\n        if mask & 4:\n            rD -= 1\n            rR -= 1\n        if mask & 8:\n            rR -= 1\n            rU -= 1\n        if min(rU, rR, rD, rL) >= 0 and max(rU, rR, rD, rL) <= n - 2:\n            print('YES')\n            break\n    else:\n        print('NO')", "for s in [*open(0)][1:]:\n    (n, *a) = map(int, s.split())\n    print('NYOE S'[any((all((n > a[j] - (i >> j & 1) - (i >> j + 1 & 1) + 1 > 0 for j in range(4))) for i in range(0, 272, 17)))::2])", "for _ in range(int(input())):\n    (n, U, R, D, L) = map(int, input().split())\n    for mask in range(16):\n        (rU, rR, rD, rL) = (U, R, D, L)\n        if mask & 1:\n            rU -= 1\n            rL -= 1\n        if mask & 2:\n            rL -= 1\n            rD -= 1\n        if mask & 4:\n            rD -= 1\n            rR -= 1\n        if mask & 8:\n            rR -= 1\n            rU -= 1\n        if min(rU, rR, rD, rL) >= 0 and max(rU, rR, rD, rL) <= n - 2:\n            print('YES')\n            break\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, u, r, d, l) = map(int, input().split())\n    for i in range(16):\n        (ru, rr, rd, rl) = (u, r, d, l)\n        if i & 1:\n            ru -= 1\n            rl -= 1\n        if i & 8:\n            ru -= 1\n            rr -= 1\n        if 4 & i:\n            rr -= 1\n            rd -= 1\n        if 2 & i:\n            rd -= 1\n            rl -= 1\n        if min(ru, rr, rl, rd) >= 0 and max(ru, rr, rl, rd) < n - 1:\n            print('YES')\n            break\n    else:\n        print('NO')"]