["t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    maxi = a.index(max(a))\n    mini = a.index(min(a))\n    minii = min(max(maxi, mini) + 1, n - 1 - min(maxi, mini) + 1, n - 1 - maxi + mini + 2, n - 1 - mini + maxi + 2)\n    print(minii)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    (m, M) = (min(a), max(a))\n    (mi, MI) = (a.index(m), a.index(M))\n    (i, I) = (min(mi, MI), max(mi, MI))\n    ans = min(I + 1, n - i, i + 1 + n - I)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mn = min(a)\n    mx = max(a)\n    mini = a.index(mn)\n    maxi = a.index(mx)\n    ans = 0\n    if mini + 1 <= n - mini:\n        ans += mini + 1\n        if maxi > mini:\n            ans += min(maxi - mini, n - maxi)\n    else:\n        ans += n - mini\n        if maxi < mini:\n            ans += min(mini - maxi, maxi + 1)\n    ans1 = 0\n    if maxi + 1 <= n - maxi:\n        ans1 += maxi + 1\n        if mini > maxi:\n            ans1 += min(mini - maxi, n - mini)\n    else:\n        ans1 += n - maxi\n        if mini < maxi:\n            ans1 += min(maxi - mini, mini + 1)\n    print(min(ans, ans1))", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(_) for _ in input().split()]\n    print(min(min(a.index(min(a)), a.index(max(a))) + 1 + n - max(a.index(min(a)), a.index(max(a))), n - min(a.index(max(a)), a.index(min(a))), 1 + max(a.index(max(a)), a.index(min(a)))))", "import math\nt = int(input())\nfor _ in range(t):\n    n = input()\n    arr = list(map(int, input().split()))\n    (STONE_MIN, STONE_MAX) = (min(arr), max(arr))\n    (MI, MA) = (arr.index(STONE_MIN), arr.index(STONE_MAX))\n    LEFT = max(MI, MA) + 1\n    RIGHT = len(arr) - min(MI, MA)\n    EDGES = len(arr) - max(MI, MA) + min(MI, MA) + 1\n    print(min(LEFT, RIGHT, EDGES))", "t = int(input())\nfor _t in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    min_idx = a.index(min(a)) + 1\n    max_idx = a.index(max(a)) + 1\n    mn = min(min_idx, max_idx)\n    mx = max(min_idx, max_idx)\n    print(min(mx, n - mn + 1, mn + (n - mx) + 1))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (mn, mx) = (l.index(min(l)), l.index(max(l)))\n    (x, y) = (min(mn, mx), max(mn, mx))\n    print(min(x + 1 + n - y, n - x, y + 1))", "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = [int(i) for i in input().split()]\n        mx = float('-inf')\n        mn = float('inf')\n        pmx = pmn = -1\n        for i in range(n):\n            if a[i] > mx:\n                mx = a[i]\n                pmx = i\n            if a[i] < mn:\n                mn = a[i]\n                pmn = i\n        res = max(pmn, pmx) + 1\n        res = min(res, max(n - pmn, n - pmx))\n        res = min(res, pmn + 1 + n - pmx)\n        res = min(res, pmx + 1 + n - pmn)\n        print(res)\nmain()", "num = int(input())\nfor i in range(num):\n    lenz = int(input())\n    arr = input()\n    arr = arr.split(' ')\n    arr = [int(x) for x in arr]\n    minn = min(arr)\n    maxx = max(arr)\n    indexMin = arr.index(minn)\n    indexMax = arr.index(maxx)\n    if indexMax > indexMin:\n        print(min(indexMax + 1, lenz - indexMin, indexMin + 1 + lenz - indexMax))\n    else:\n        print(min(indexMin + 1, lenz - indexMax, indexMax + 1 + lenz - indexMin))", "testcase = int(input())\nfor _ in range(testcase):\n    n = int(input())\n    li = list(map(int, input().split()))\n    rev = []\n    for i in range(len(li) - 1, -1, -1):\n        rev.append(li[i])\n    lowest = min(li)\n    largest = max(li)\n    minmA = li.index(lowest)\n    maxmA = li.index(largest)\n    minmB = rev.index(lowest)\n    maxmB = rev.index(largest)\n    ans = []\n    ans.append(max(maxmA, minmA) + 1)\n    ans.append(max(maxmB, minmB) + 1)\n    ans.append(maxmB + minmA + 2)\n    ans.append(maxmA + minmB + 2)\n    print(min(ans))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b1 = 0\n    b2 = 0\n    r = 0\n    for i in range(n):\n        if r == 2:\n            break\n        else:\n            if a[i] == 1:\n                r += 1\n                b1 = i\n            if a[i] == n:\n                r += 1\n                b2 = i\n    (b1, b2) = sorted([b1, b2])\n    print(min([b2 + 1, n - b1, b1 + 1 + n - b2]))", "a = int(input())\nfor i in range(a):\n    b = int(input())\n    c = input().split()\n    c = list(map(int, c))\n    L = [0] * (b + 1)\n    if len(L) % 2 == 0:\n        CC = len(L) // 2\n    else:\n        CC = (len(L) - 1) // 2\n    cmin = min(c)\n    cmax = max(c)\n    for i in range(len(c)):\n        if c[i] == cmin:\n            cminc = i + 1\n            L[i + 1] = cmin\n        elif c[i] == cmax:\n            cmaxc = i + 1\n            L[i + 1] = cmax\n    if CC <= cminc and CC <= cmaxc:\n        print(len(L) - min(cminc, cmaxc))\n    elif CC >= cminc and CC >= cmaxc:\n        print(max(cminc, cmaxc))\n    else:\n        A1 = len(L) - min(cminc, cmaxc)\n        A2 = max(cminc, cmaxc)\n        A3 = len(L) - max(cminc, cmaxc)\n        A4 = min(cminc, cmaxc)\n        A5 = A3 + A4\n        print(min(A1, A2, A5))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mi = a.index(min(a))\n    ma = a.index(max(a))\n    if ma < mi:\n        (ma, mi) = (mi, ma)\n    print(min(1 + ma, n - mi, mi + 1 + n - ma))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mi = a.index(min(a))\n    ma = a.index(max(a))\n    if ma < mi:\n        (ma, mi) = (mi, ma)\n    print(min(mi + 1 + ma - mi, n - mi, mi + 1 + n - ma))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mi = a.index(min(a))\n    ma = a.index(max(a))\n    if ma < mi:\n        (ma, mi) = (mi, ma)\n    print(min(1 + ma, n - mi, mi + 1 + n - ma))", "ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    (*s,) = map(int, input().split())\n    mn = s.index(min(s))\n    mx = s.index(max(s))\n    left = min(mx, mn)\n    right = max(mx, mn)\n    go_left = n - left\n    go_right = right + 1\n    two_side = left + 1 + n - right\n    ans += [min(go_left, go_right, two_side)]\nprint('\\n'.join(map(str, ans)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    m = []\n    k = 0\n    pos1 = a.index(min(a))\n    pos2 = a.index(max(a))\n    if pos1 < pos2:\n        k += len(a[0:pos1 + 1])\n        k += len(a[pos1 + 1:pos2 + 1])\n    else:\n        k += len(a[0:pos2 + 1])\n        k += len(a[pos2 + 1:pos1 + 1])\n    m.append(k)\n    k = 0\n    s = a[::-1]\n    pos1 = s.index(min(a))\n    pos2 = s.index(max(a))\n    if pos1 < pos2:\n        k += len(a[0:pos1 + 1])\n        k += len(a[pos1 + 1:pos2 + 1])\n    else:\n        k += len(a[0:pos2 + 1])\n        k += len(a[pos2 + 1:pos1 + 1])\n    m.append(k)\n    k = 0\n    pos1 = a.index(min(a))\n    pos2 = a.index(max(a))\n    if pos1 < pos2:\n        k += len(a[0:pos1 + 1])\n        k += len(a[pos2:n])\n    else:\n        k += len(a[0:pos2 + 1])\n        k += len(a[pos1:n])\n    m.append(k)\n    print(min(m))", "t = int(input())\n\ndef f(l, n):\n    max_i = 0\n    min_i = 0\n    max_v = l[0]\n    min_v = l[0]\n    for i in range(n):\n        if l[i] > max_v:\n            max_i = i\n            max_v = l[i]\n        if l[i] < min_v:\n            min_i = i\n            min_v = l[i]\n    ll = max(max_i, min_i) + 1\n    lr = max_i + n - min_i + 1\n    rl = min_i + n - max_i + 1\n    rr = max(n - max_i, n - min_i)\n    return min(ll, lr, rl, rr)\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(f(l, n))", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    mx = a.index(max(a))\n    mn = a.index(min(a))\n    l = min(a.index(max(a)), a.index(min(a)))\n    r = max(a.index(max(a)), a.index(min(a)))\n    ans1 = r + 1\n    ans2 = n - l\n    ans3 = l + 1 + n - r\n    print(min((ans1, ans2, ans3)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (left, right) = sorted((a.index(min(a)), a.index(max(a))))\n    print(min([right + 1, n - left, left + 1 + n - right]))", "from sys import stdin\ninput = stdin.readline\nfrom itertools import accumulate\n\ndef solve():\n    n = int(input())\n    nums = [int(char) for char in input().split()]\n    (_min, _max) = (min(nums), max(nums))\n    (min_pos, max_pos) = (0, 0)\n    for (idx, num) in enumerate(nums):\n        if num == _min:\n            min_pos = idx + 1\n        if num == _max:\n            max_pos = idx + 1\n    (i, j) = (min(min_pos, max_pos), max(min_pos, max_pos))\n    from_left = j\n    from_right = n - (i - 1)\n    both_sides = i + n - (j - 1)\n    return min(from_left, from_right, both_sides)\nfor _ in range(int(input())):\n    print(solve())", "def test():\n    n = input()\n    a = input()\n    a = list(map(int, a.split()))\n    min_ = min(a)\n    max_ = max(a)\n    min_ind = a.index(min_)\n    max_ind = a.index(max_)\n    (min_ind, max_ind) = (min(min_ind, max_ind), max(min_ind, max_ind))\n    min_dist = min_ind + 1\n    max_dist = len(a) - max_ind\n    (min_dist, max_dist) = (min(min_dist, max_dist), max(min_dist, max_dist))\n    dist = abs(min_ind - max_ind)\n    res = min_dist\n    if dist <= max_dist:\n        res += dist\n    else:\n        res += max_dist\n    print(res)\nfor _ in range(int(input())):\n    test()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    maxind = a.index(max(a))\n    minind = a.index(min(a))\n    key = 0\n    l = min(minind, maxind, n - 1 - minind, n - 1 - maxind)\n    if l == minind or l == maxind:\n        del a[0:l + 1]\n        if l == minind:\n            maxind1 = a.index(max(a))\n            print(l + 1 + min(maxind1, len(a) - 1 - maxind1) + 1)\n        if l == maxind:\n            minind1 = a.index(min(a))\n            print(l + 1 + min(minind1, len(a) - 1 - minind1) + 1)\n    else:\n        del a[n - 1 - l:n]\n        if l == n - 1 - minind:\n            maxind1 = a.index(max(a))\n            print(l + 1 + min(maxind1, len(a) - 1 - maxind1) + 1)\n        if l == n - 1 - maxind:\n            minind1 = a.index(min(a))\n            print(l + 1 + min(minind1, len(a) - 1 - minind1) + 1)", "t = int(input(''))\nfor i in range(t):\n    n = int(input(''))\n    a = list(map(int, input('').split()))\n    pos1 = a.index(max(a))\n    pos2 = a.index(min(a))\n    print(min(max(pos2, pos1) + 1, n - min(pos1, pos2), min(pos1, pos2) + 1 + (n - max(pos1, pos2))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    (i, j) = sorted(map(a.index, (1, (n := len(a)))))\n    print(min(i + 1 + n - j, j + 1, n - i))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    (i, j) = sorted(map(a.index, (1, (n := len(a)))))\n    print(min(i + 1 + n - j, j + 1, n - i))", "n = int(input())\nfor i in range(n):\n    k = int(input())\n    arr = list(map(int, input().split()))\n    max_idx = arr.index(max(arr))\n    min_idx = arr.index(min(arr))\n    less = min(max_idx, min_idx)\n    maxx = max(max_idx, min_idx)\n    diff = maxx - less + 1\n    diff_right = len(arr) - 1 - maxx\n    res = min(diff_right + less + 2, diff + diff_right, diff + less)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    (maks, mins) = (0, 0)\n    for i in range(n):\n        if lst[i] == 1:\n            mins = i + 1\n        if lst[i] == n:\n            maks = i + 1\n    (kanan, tengah, kiri) = (0, 0, 0)\n    kanan = n - max(maks, mins)\n    tengah = max(maks, mins) - min(maks, mins) - 1\n    kiri = min(maks, mins) - 1\n    print(min(kanan + tengah, kanan + kiri, kiri + tengah) + 2)", "tests = int(input())\nfor test in range(tests):\n    total = int(input())\n    stones = [int(i) for i in input().split()]\n    counter = 0\n    while 1 in stones and total in stones:\n        small = stones.index(1)\n        big = stones.index(total)\n        right_small = len(stones) - 1 - small\n        right_big = len(stones) - 1 - big\n        answer = min(small, big, right_small, right_big)\n        if answer == right_small or answer == right_big:\n            stones = stones[:-1]\n        elif answer == small or answer == big:\n            stones = stones[1:]\n        counter += 1\n    if 1 not in stones:\n        big = stones.index(total)\n        right_big = len(stones) - 1 - big\n        counter += min(big, right_big) + 1\n    else:\n        small = stones.index(1)\n        right_small = len(stones) - 1 - small\n        counter += min(small, right_small) + 1\n    print(counter)", "for _ in range(int(input())):\n    n = int(input())\n    spic = list(map(int, input().split()))\n    mins = spic.index(min(spic))\n    maxs = spic.index(max(spic))\n    print(min(max(mins, maxs) + 1, n - min(mins, maxs), n - maxs + mins + 1, n - mins + maxs + 1))", "t = int(input())\nnatija = []\nfor i in range(t):\n    n = int(input())\n    satr = input()\n    ruyhat = satr.split(' ')\n    for i in range(n):\n        ruyhat[i] = int(ruyhat[i])\n    Min = min(ruyhat)\n    Max = max(ruyhat)\n    for i in range(n):\n        if ruyhat[i] == Min:\n            ind_min = i\n        if ruyhat[i] == Max:\n            ind_max = i\n    if ind_min < ind_max:\n        k1 = ind_max + 1\n        k2 = n - ind_min\n        k3 = ind_min + 1 + (n - ind_max)\n        natija.append(min(k1, k2, k3))\n    else:\n        k1 = ind_min + 1\n        k2 = n - ind_max\n        k3 = ind_max + 1 + (n - ind_min)\n        natija.append(min(k1, k2, k3))\nfor i in range(t):\n    print(natija[i])", "m = int(input())\nwhile m != 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    mx = max(a)\n    mx = a.index(mx)\n    mn = min(a)\n    mn = a.index(mn)\n    ans = min(max(mx, mn) + 1, n - 1 - min(mx, mn) + 1, n - 1 - mx + mn + 2, n - 1 - mn + mx + 2)\n    print(ans)\n    m -= 1", "for _ in range(int(input())):\n    input()\n    a = list(map(int, input().split()))\n    c = 0\n    s = a.index(min(a))\n    l = a.index(max(a))\n    print(min(max(s, l) + 1, len(a) - min(s, l), 1 + min(s, l) + len(a) - max(s, l)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input().split(' ')\n    s = [int(x) for x in s]\n    contador = 0\n    for j in range(len(s)):\n        contador += 1\n        if s[j] == 1 or s[j] == n:\n            flag = 1\n            break\n        if s[-(j + 1)] == 1 or s[-(j + 1)] == n:\n            flag = 0\n            break\n    while True:\n        if flag == 1:\n            x = s.pop(0)\n        else:\n            x = s.pop(-1)\n        if x == n or x == 1:\n            break\n    for k in range(len(s)):\n        contador += 1\n        if s[k] == 1 or s[k] == n:\n            break\n        if s[-(k + 1)] == 1 or s[-(k + 1)] == n:\n            break\n    print(contador)", "t = int(input())\n\ndef min(x, y):\n    if x <= y:\n        return x\n    else:\n        return y\n\ndef q(l, n):\n    h = max(l)\n    i1 = l.index(h)\n    l1 = l[:]\n    l1.sort()\n    i2 = l.index(l1[0])\n    if i1 < i2:\n        return [i1 + 1, i2 - i1, n - i2]\n    else:\n        return [i2 + 1, i1 - i2, n - i1]\n\ndef h(l):\n    return min(min(l[0] + l[2], l[0] + l[1]), l[1] + l[2])\nfor i in range(t):\n    n = int(input())\n    j = input().split()\n    l = list(map(int, j))\n    print(h(q(l, n)))", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = l.index(min(l))\n    b = l.index(max(l))\n    c = min(a, b)\n    d = max(a, b)\n    print(min(d + 1, c + n + 1 - d, n - c))", "t = int(input())\n\ndef mini(a, b):\n    if a <= b:\n        return a\n    else:\n        return b\n\ndef maxi(a, b):\n    if a > b:\n        return a\n    else:\n        return b\n\ndef q(l, n):\n    l0 = min(l)\n    h = max(l)\n    i1 = l.index(l0)\n    i2 = l.index(h)\n    if i1 < i2:\n        c1 = i1 + 1 + n - i2\n        c2 = i2 + 1\n        c3 = n - i1\n        return mini(mini(c1, c2), c3)\n    else:\n        c1 = i2 + 1 + n - i1\n        c2 = i1 + 1\n        c3 = n - i2\n        return mini(mini(c1, c2), c3)\nfor i in range(t):\n    n = int(input())\n    j = input().split()\n    l = list(map(int, j))\n    print(q(l, n))", "for _ in range(int(input())):\n    n = int(input())\n    temp = list(map(int, input().split()))\n    k1 = temp.index(max(temp))\n    k2 = temp.index(min(temp))\n    temp1 = [max(k1, k2) + 1, n - min(k1, k2)]\n    if k1 < k2:\n        temp1.append(len(temp[:k1 + 1]) + len(temp[k2:]))\n    else:\n        temp1.append(len(temp[:k2 + 1]) + len(temp[k1:]))\n    print(min(temp1))", "from operator import index\nnbTest = int(input())\nfor _ in range(nbTest):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    indexMin = a.index(1)\n    indexMax = a.index(n)\n    distMin = min(indexMin + 1, n - indexMin)\n    distMax = min(indexMax + 1, n - indexMax)\n    miniDist = min(distMin, distMax)\n    distBetween = abs(indexMin - indexMax)\n    if miniDist == distMin:\n        print(min(miniDist + distBetween, miniDist + distMax))\n    else:\n        print(min(miniDist + distBetween, miniDist + distMin))", "for _ in [*open(0)][2::2]:\n    arr = list(map(int, _.split()))\n    l = len(arr)\n    mini = min(arr)\n    maxi = max(arr)\n    for i in range(l):\n        if arr[i] == mini:\n            x = i + 1\n        if arr[i] == maxi:\n            y = i + 1\n    print(min(max(x, y), l - min(x, y) + 1, l - x + y + 1, l + x - y + 1))", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    (x, y) = (a.index(max(a)), a.index(min(a)))\n    if x > y:\n        (x, y) = (y, x)\n    print(min((y + 1, n - x, x + n - y + 1)))", "l = []\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    (x, y) = (a.index(max(a)), a.index(min(a)))\n    if x > y:\n        (x, y) = (y, x)\n    l.append(min((y + 1, n - x, x + n - y + 1)))\nprint(*l, sep='\\n')", "for b in [*open(0)][2::2]:\n    a = list(map(int, b.split()))\n    (x, y) = sorted([a.index(min(a)), a.index(max(a))])\n    print(len(a) - max(x, y - x - 1, len(a) - y - 1))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    (i, j) = sorted(map(a.index, (1, (n := len(a)))))\n    print(min(i + 1 + n - j, j + 1, n - i))", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    mi = min(l)\n    ma = max(l)\n    c = 0\n    i1 = l.index(mi)\n    i2 = l.index(ma)\n    if i2 < i1:\n        l = l[::-1]\n        i1 = l.index(mi)\n        i2 = l.index(ma)\n    if i1 + 1 < n - i2:\n        c += i1 + 1\n        l = l[i1 + 1:]\n        i2 = l.index(ma)\n        if i2 + 1 < len(l) - i2:\n            c += i2 + 1\n            l = l[i2 + 1:]\n        else:\n            c += len(l) - i2\n            l = l[:-(len(l) - i2)]\n    else:\n        c += len(l) - i2\n        l = l[:-(len(l) - i2)]\n        i1 = l.index(mi)\n        if i1 + 1 < len(l) - i1:\n            c += i1 + 1\n            l = l[i1 + 1:]\n        else:\n            c += len(l) - i1\n            l = l[:-(len(l) - i1)]\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    assert len(a) == n\n    mina = a[0]\n    maxa = a[0]\n    minai = 0\n    maxai = 0\n    for (i, v) in enumerate(a):\n        if v < mina:\n            mina = v\n            minai = i\n        if v > maxa:\n            maxa = v\n            maxai = i\n    print(min(max(minai, maxai) + 1, n - min(minai, maxai), min(minai, maxai) + 1 + n - max(minai, maxai)))", "t = int(input())\n\ndef cal(nums):\n    (mi, ma) = (0, 0)\n    (iv, av) = (float('inf'), -float('inf'))\n    for (ind, i) in enumerate(nums):\n        if i < iv:\n            mi = ind\n            iv = i\n        if i > av:\n            av = i\n            ma = ind\n    if ma < mi:\n        (ma, mi) = (mi, ma)\n    n = len(nums)\n    ans = float('inf')\n    if ma < mi:\n        (mi, ma) = (ma, mi)\n    ans = min(ans, n - ma + mi + 1)\n    ans = min(ans, n - mi)\n    ans = min(ans, ma + 1)\n    ans = min(ans, mi + 1 + n - ma)\n    print(ans)\nfor _ in range(t):\n    n = input()\n    nums = list(map(int, input().split()))\n    cal(nums)", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (a, b) = (arr.index(max(arr)), arr.index(min(arr)))\n    if b < a:\n        (a, b) = (b, a)\n    print(n - max(b - a - 1, a, n - 1 - b))", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    l = list(map(int, sys.stdin.readline().split()))\n    x = l.index(max(l))\n    y = l.index(min(l))\n    a = max(x, y) + 1\n    b = n - min(x, y)\n    s = min(x, y) + 1 + n - max(x, y)\n    print(min(a, b, s))", "n = int(input())\nfor i in range(n):\n    y = int(input())\n    x = list(map(int, input().split()))\n    a = min(x)\n    b = max(x)\n    m1 = x.index(a) + 1\n    m2 = len(x) - x.index(b)\n    m3 = x.index(b) + 1\n    m4 = len(x) - x.index(a)\n    m5 = x.index(a) + abs(x.index(a) - x.index(b)) + 1\n    m7 = x.index(b) + abs(x.index(a) - x.index(b)) + 1\n    x.reverse()\n    m6 = x.index(a) + abs(x.index(a) - x.index(b)) + 1\n    m8 = x.index(b) + abs(x.index(a) - x.index(b)) + 1\n    print(min(m1 + m2, m3 + m4, m5, m7, m6, m8))", "for i in range(int(input())):\n    n = int(input())\n    k = [int(i) for i in input().split()]\n    x1 = k.index(min(k)) + 1\n    x2 = k.index(max(k)) + 1\n    a1 = min(x1, x2)\n    a2 = max(x1, x2)\n    print(min(a2, n - a1 + 1, a1 + n - a2 + 1))", "def main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        max_idx = 0\n        min_idx = 0\n        max_power = a[0]\n        min_power = a[0]\n        for j in range(n):\n            if a[j] > max_power:\n                max_power = a[j]\n                max_idx = j\n            if a[j] < min_power:\n                min_power = a[j]\n                min_idx = j\n        l = min(max_idx, min_idx)\n        r = max(max_idx, min_idx)\n        choice = r + 1\n        if choice > n - l:\n            choice = n - l\n        if choice > n - r + l + 1:\n            choice = n - r + l + 1\n        print(choice)\nwhile True:\n    try:\n        main()\n    except:\n        break", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    min_index = arr.index(min(arr))\n    max_index = arr.index(max(arr))\n    d = abs(min_index - max_index)\n    total = 0\n    if min(min_index, max_index) + 1 <= len(arr) - max(min_index, max_index) and d <= len(arr) - max(min_index, max_index):\n        total += min(min_index, max_index) + 1 + d\n    elif min(min_index, max_index) + 1 <= len(arr) - max(min_index, max_index) and d > len(arr) - max(min_index, max_index):\n        total += min(min_index, max_index) + 1 + len(arr) - max(min_index, max_index)\n    elif min(min_index, max_index) + 1 > len(arr) - max(min_index, max_index) and d <= min(min_index, max_index) + 1:\n        total += len(arr) - max(min_index, max_index) + d\n    else:\n        total += len(arr) - max(min_index, max_index) + min(min_index, max_index) + 1\n    print(total)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    array = input().split(' ')\n    maxN = -1\n    minN = math.inf\n    maxP = -1\n    minP = -1\n    for i in range(n):\n        if int(array[i]) > maxN:\n            maxN = int(array[i])\n            maxP = i\n        if int(array[i]) < minN:\n            minN = int(array[i])\n            minP = i\n    left = min(maxP, minP) + 1\n    right = n - max(maxP, minP)\n    if left + right <= int(n / 2):\n        print(left + right)\n    else:\n        print(min(max(maxP, minP) + 1, left + right, n - min(maxP, minP)))", "import math\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = min(arr)\n    si = arr.index(s)\n    l = max(arr)\n    li = arr.index(l)\n    arr2 = [si + 1, li + 1, n - si, n - li]\n    k = min(arr2)\n    key = arr2.index(k)\n    ans = 0\n    ans += k\n    if key == 0:\n        ans += min(n - li, li - si)\n    elif key == 1:\n        ans += min(n - si, si - li)\n    elif key == 2:\n        ans += min(si - li, li + 1)\n    else:\n        ans += min(li - si, si + 1)\n    print(ans)\n    t = t - 1", "t = int(input())\nwhile t:\n    n = int(input())\n    s = list(map(int, input().split()))\n    A = min(s)\n    B = max(s)\n    a = s.index(A)\n    b = s.index(B)\n    if a < b:\n        if b + 1 > a + 1 + n - b and n - a > a + 1 + n - b:\n            print(a + 1 + n - b)\n        elif n - a <= a + 1 + n - b and n - a <= b + 1:\n            print(n - a)\n        else:\n            print(b + 1)\n    elif a + 1 > b + 1 + n - a and n - b > b + 1 + n - a:\n        print(b + 1 + n - a)\n    elif n - b <= b + 1 + n - a and n - b <= a + 1:\n        print(n - b)\n    else:\n        print(a + 1)\n    t = t - 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(1)\n    else:\n        pmx = 0\n        pmn = 0\n        mx = l[0]\n        mn = l[0]\n        for i in range(1, n):\n            if l[i] > mx:\n                mx = l[i]\n                pmx = i\n            if l[i] < mn:\n                mn = l[i]\n                pmn = i\n        if pmx <= n // 2 and pmn <= n // 2:\n            print(max(pmx, pmn) + 1)\n        elif pmx > n // 2 and pmn > n // 2:\n            print(n - min(pmx, pmn))\n        else:\n            if pmx <= n // 2:\n                m1 = pmx + 1 + n - pmn\n                m2 = min(pmn + 1, n - pmx)\n            else:\n                m1 = pmn + 1 + n - pmx\n                m2 = min(pmx + 1, n - pmn)\n            print(min(m1, m2))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = min(l)\n    b = max(l)\n    ai = l.index(a)\n    bi = l.index(b)\n    x = max(ai, bi) + 1\n    y = n - min(ai, bi)\n    z = min(ai, bi) + n - max(ai, bi) + 1\n    print(min(x, y, z))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i1 = a.index(min(a))\n    i2 = a.index(max(a))\n    c = 0\n    if i2 > i1:\n        (i1, i2) = (i2, i1)\n    if i1 >= n // 2:\n        if i2 >= n // 2:\n            c += n - i2\n        elif i2 + 1 <= n - i1:\n            c += i2 + 1\n            if n - i1 > i1 - i2:\n                c += i1 - i2\n            else:\n                c += n - i1\n        else:\n            c += n - i1\n            if i2 + 1 > i1 - i2:\n                c += i1 - i2\n            else:\n                c += i2 + 1\n    else:\n        c += i1 + 1\n    print(c)", "for _ in range(int(input())):\n    row = int(input())\n    data = list(map(int, input().split()))\n    mi = min(data.index(min(data)), data.index(max(data)))\n    ma = max(data.index(min(data)), data.index(max(data)))\n    n1 = mi + 1\n    n2 = ma - mi\n    n3 = row - ma\n    print(min(n1 + n3, n1 + n2, n3 + n2))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    mi = min(ar)\n    ma = max(ar)\n    imi = ar.index(mi)\n    ima = ar.index(ma)\n    zmi = min(imi + 1, n - imi)\n    zma = min(ima + 1, n - ima)\n    if zmi <= zma:\n        k = zmi\n        g = zma\n    else:\n        k = zma\n        g = zmi\n    ans = k\n    if abs(imi - ima) > g:\n        ans += g\n    else:\n        ans += abs(imi - ima)\n    print(ans)", "def destory(l):\n    (mi, ma) = (l.index(min(l)), l.index(max(l)))\n    (mim, mam) = (min(ma, mi), max(ma, mi))\n    le = len(l)\n    first = mam + 1\n    second = le - mim\n    third = le - mim + mam + 1\n    fourth = le - mam + mim + 1\n    return min(first, second, third, fourth)\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(destory(l))", "def solve():\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    r = l[::-1]\n    mi = min(l)\n    ma = max(l)\n    mii = l.index(mi)\n    mai = l.index(ma)\n    mir = r.index(mi)\n    mar = r.index(ma)\n    left = max(mii + 1, mai + 1)\n    right = max(mir + 1, mar + 1)\n    a = mii + 1 + mar + 1\n    b = mai + 1 + mir + 1\n    print(min([a, b, left, right]))\ntest_cases = int(input())\nstart = 0\nwhile start < test_cases:\n    solve()\n    start += 1", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    brr = [int(i) for i in arr]\n    brr.sort()\n    (s, m) = (brr[0], brr[-1])\n    inds = arr.index(s) + 1\n    indm = arr.index(m) + 1\n    print(min(max(inds, indm), max(n - inds + 1, n - indm + 1), inds + (n - indm) + 1, n - inds + indm + 1, n - inds + (n - indm) + 1))", "def fun(n, arr):\n    i = arr.index(min(arr))\n    j = arr.index(max(arr))\n    ans = min(max(j + 1, i + 1), max(n - j, n - i), min(i + 1, n - i) + min(j + 1, n - j))\n    return ans\nfor i in range(0, int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    ans = fun(n, arr)\n    print(ans)", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    minNum = -1\n    maxNum = -1\n    minIndex = -1\n    maxIndex = 1\n    for i in range(n):\n        if arr[i] > maxNum:\n            maxNum = arr[i]\n            maxIndex = i\n        if arr[i] < minNum or minNum == -1:\n            minNum = arr[i]\n            minIndex = i\n    minIndex2 = n - minIndex - 1\n    maxIndex2 = n - maxIndex - 1\n    list2 = []\n    if maxIndex > minIndex:\n        list2.append(maxIndex + 1)\n        list2.append(minIndex + maxIndex2 + 2)\n        list2.append(minIndex2 + 1)\n    if minIndex > maxIndex:\n        list2.append(minIndex + 1)\n        list2.append(maxIndex + minIndex2 + 2)\n        list2.append(maxIndex2 + 1)\n    print(min(list2))", "for _ in range(int(input())):\n    n = int(input())\n    ans = 0\n    array = list(map(int, input().split()))\n    minIdx = array.index(min(array))\n    maxIdx = array.index(max(array))\n    idxArray = [minIdx + 1, maxIdx + 1, n - minIdx, n - maxIdx]\n    curMin = min(idxArray)\n    curIdx = idxArray.index(curMin)\n    ans += curMin\n    if curIdx == 0:\n        array = array[minIdx + 1:]\n        maxIdx = array.index(max(array))\n        ans += min([maxIdx + 1, len(array) - maxIdx])\n    elif curIdx == 1:\n        array = array[maxIdx + 1:]\n        minIdx = array.index(min(array))\n        ans += min([minIdx + 1, len(array) - minIdx])\n    elif curIdx == 2:\n        array = array[:minIdx]\n        maxIdx = array.index(max(array))\n        ans += min([maxIdx + 1, len(array) - maxIdx])\n    else:\n        array = array[:maxIdx]\n        minIdx = array.index(min(array))\n        ans += min([minIdx + 1, len(array) - minIdx])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mini = a.index(min(a))\n    maxi = a.index(max(a))\n    mi = min(mini, maxi)\n    ma = max(mini, maxi)\n    if mi + 1 <= n - ma:\n        res = mi + 1\n        res += min(ma - mi, n - ma)\n    else:\n        res = n - ma\n        res += min(mi + 1, ma - mi)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mini = arr.index(min(arr))\n    maxi = arr.index(max(arr))\n    k1 = min(mini - 0, n - mini - 1)\n    k2 = min(maxi - 0, n - maxi - 1)\n    ans = 0\n    if k1 < k2:\n        ans += k1 + 1\n        if abs(mini - maxi) <= k2:\n            ans += abs(mini - maxi)\n        else:\n            ans += k2 + 1\n    else:\n        ans += k2 + 1\n        if abs(mini - maxi) <= k1:\n            ans += abs(mini - maxi)\n        else:\n            ans += k1 + 1\n    print(ans)", "for ii in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a + []\n    a.sort()\n    mi = a[0]\n    ma = a[-1]\n    pmi = [b.index(mi) + 1, n - b.index(mi)]\n    pma = [b.index(ma) + 1, n - b.index(ma)]\n    x = 0\n    if n % 2 == 0:\n        nn = n / 2\n    else:\n        nn = n // 2 + 1\n    if min(pmi) < min(pma):\n        if pmi[0] < pmi[1]:\n            x += pmi[0]\n            b = b[pmi[0]:]\n        else:\n            x += pmi[1]\n            b = b[0:pmi[0] - 1]\n        pma = [b.index(ma) + 1, len(b) - b.index(ma)]\n        if pma[0] < pma[1]:\n            x += pma[0]\n        else:\n            x += pma[1]\n    else:\n        if pma[0] < pma[1]:\n            x += pma[0]\n            b = b[pma[0]:]\n        else:\n            x += pma[1]\n            b = b[0:pma[0] - 1]\n        pmi = [b.index(mi) + 1, len(b) - b.index(mi)]\n        if pmi[0] < pmi[1]:\n            x += pmi[0]\n        else:\n            x += pmi[1]\n    print(x)", "def minim(arr, n):\n    r = 101\n    ind = 0\n    for i in range(0, n):\n        if r > arr[i]:\n            r = min(r, arr[i])\n            ind = i\n    return ind\n\ndef maxim(arr, n):\n    r = -1\n    ind = -1\n    for i in range(0, n):\n        if arr[i] > r:\n            r = max(r, arr[i])\n            ind = i\n    return ind\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mini = minim(arr, n)\n    maxi = maxim(arr, n)\n    if mini < maxi:\n        r = mini + 1 + (n - maxi)\n    else:\n        r = maxi + 1 + (n - mini)\n    if mini < maxi:\n        r = min(r, n - mini)\n    else:\n        r = min(r, n - maxi)\n    if mini > maxi:\n        r = min(r, mini + 1)\n    else:\n        r = min(r, maxi + 1)\n    print(r)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    mn = lst.index(min(lst)) + 1\n    mx = lst.index(max(lst)) + 1\n    n2 = []\n    x = []\n    n2.append(mn - 0)\n    n2.append(len(lst) - mn + 1)\n    x.append(mx - 0)\n    x.append(len(lst) - mx + 1)\n    if min(n2) == n2[0] and min(x) == x[0]:\n        ans = max(min(n2), min(x))\n    elif min(n2) == n2[1] and min(x) == x[1]:\n        ans = max(min(n2), min(x))\n    else:\n        ans = min(min(n2) + min(x), max(n2), max(x))\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i1 = a.index(min(a))\n    i2 = a.index(max(a))\n    mini = min(i1, i2)\n    maxi = max(i1, i2)\n    c1 = maxi + 1\n    c2 = n - mini\n    c3 = mini + 1 + (n - maxi)\n    print(min(c1, c2, c3))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mni = arr.index(min(arr))\n    mx = max(arr)\n    mxi = arr.index(mx)\n    cnt = 0\n    c1 = max(mni, mxi)\n    c2 = n - 1 - min(mni, mxi)\n    c3 = min(mni, mxi) + n - max(mni, mxi)\n    print(min([c1, c2, c3]) + 1)", "t = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    mi = 0\n    ma = 0\n    x = y = a[0]\n    for i in range(1, len(a)):\n        if a[i] > y:\n            y = a[i]\n            ma = i\n        if a[i] < x:\n            x = a[i]\n            mi = i\n    k = min(max(mi + 1, ma + 1), max(n - mi, n - ma), mi + n - ma + 1, ma + n - mi + 1)\n    print(k)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    x = 0\n    y = 0\n    for i in range(n):\n        if l[i] == 1:\n            x = i\n        if l[i] == n:\n            y = i\n    a = min(x, y)\n    b = max(x, y)\n    p = b + 1\n    q = n - a\n    r = a + 1 + (n - b)\n    print(min(p, q, r))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    maxim = max(arr[:])\n    minim = min(arr[:])\n    ind1 = arr.index(maxim)\n    ind2 = arr.index(minim)\n    print(min(max(ind1, ind2) + 1, ind1 + 1 + (n - ind2), ind2 + 1 + n - ind1, max(n - ind1, n - ind2)))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (mi, ma) = (0, 0)\n    (mini, maxi) = (l[0], l[0])\n    for i in range(1, n):\n        if mini > l[i]:\n            mini = l[i]\n            mi = i\n        elif maxi < l[i]:\n            maxi = l[i]\n            ma = i\n    if mi < ma:\n        (mi, ma) = (ma, mi)\n    print(min(min((max(mi, ma) + 1, n - min(mi, ma))), ma + 1 + n - mi))", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    a1 = max(x)\n    b1 = min(x)\n    a = x.index(a1)\n    b = x.index(b1)\n    if abs(a - b) == 1:\n        if b > a:\n            ans1 = b - 0 + 1\n            ans2 = n - b + 1\n        else:\n            ans1 = a - 0 + 1\n            ans2 = n - a + 1\n        print(min(ans1, ans2))\n    else:\n        ele = abs(b - a) - 1\n        ans1 = n - ele\n        if b > a:\n            ans2 = b - 0 + 1\n            ans3 = n - a\n        else:\n            ans2 = a - 0 + 1\n            ans3 = n - b\n        print(min(ans1, ans2, ans3))", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    maxi = max(l)\n    max_i = l.index(maxi)\n    mini = min(l)\n    min_i = l.index(mini)\n    for i in range(1):\n        continue\n    for i in range(1):\n        continue\n    for i in range(1):\n        continue\n    for i in range(1):\n        continue\n    for i in range(1):\n        continue\n    if max_i > min_i:\n        maxx = min(max_i, min(n - min_i - 1, min_i + n - max_i))\n        print(maxx + 1)\n    else:\n        maxx = min(min_i, min(n - max_i - 1, max_i + n - min_i))\n        print(maxx + 1)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(0, n):\n        if arr[i] == 1:\n            mi = i + 1\n        elif arr[i] == n:\n            mx = i + 1\n    x = min(mi, n + 1 - mi)\n    y = min(mx, n + 1 - mx)\n    diff = abs(mi - mx)\n    print(min(x + y, diff + min(x, y)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    max_a = max(a)\n    min_a = min(a)\n    max_a_idx = a.index(max_a)\n    min_a_idx = a.index(min_a)\n    min_pos = min(min_a_idx, max_a_idx)\n    max_pos = max(min_a_idx, max_a_idx)\n    left_right = min(max_pos, n - 1 - min_pos) + 1\n    both = min_pos + (n - 1 - max_pos) + 2\n    moves = min(left_right, both)\n    print(moves)", "for t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    minn = min(arr)\n    maxx = max(arr)\n    ans = 0\n    minind = arr.index(minn)\n    maxind = arr.index(maxx)\n    a = min(maxind, minind)\n    b = max(maxind, minind)\n    x = min(a, n - 1 - b) + 1\n    steps = x + min(b - a, max(a, n - 1 - b) + 1)\n    print(steps)", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    left_max = arr.index(max(arr)) + 1\n    left_min = arr.index(min(arr)) + 1\n    right_max = n - left_max + 1\n    right_min = n - left_min + 1\n    ans1 = max(left_max, left_min)\n    ans2 = max(right_max, right_min)\n    ans3 = left_max + right_min\n    ans4 = left_min + right_max\n    ans = min(ans1, ans2, ans3, ans4)\n    print(ans)", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    out = 0\n    num = list(map(int, input().split()))\n    mn = num.index(min(num)) + 1\n    mx = num.index(max(num)) + 1\n    if mn < mx:\n        print(min(mx, len(num) - mn + 1, mn + len(num) - mx + 1))\n    else:\n        print(min(mn, len(num) - mx + 1, mx + len(num) - mn + 1))", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    arr = [int(k) for k in input().split()]\n    ma = max(arr)\n    mi = min(arr)\n    x = arr.index(ma) + 1\n    y = arr.index(mi) + 1\n    a = max(x, y)\n    b = max(n - x, n - y) + 1\n    c = min(x, y) + n - max(x, y) + 1\n    print(min(a, min(b, c)))\n    t -= 1", "def main():\n    testCases = int(input())\n    for i in range(testCases):\n        n = int(input())\n        stones = list(map(int, input().split()))\n        indexMax = stones.index(max(stones))\n        indexMin = stones.index(min(stones))\n        a = indexMax * 1\n        b = indexMin * 1\n        c = n - 1 - indexMax\n        d = n - 1 - indexMin\n        start = min(a, b, c, d)\n        ans = 0\n        if start == a:\n            ans += a + 1 + min(abs(indexMax - indexMin), b, d)\n            if min(abs(indexMax - indexMin), b, d) != abs(indexMax - indexMin):\n                ans += 1\n        elif start == b:\n            ans += b + 1 + min(abs(indexMax - indexMin), a, c)\n            if min(abs(indexMax - indexMin), a, c) != abs(indexMax - indexMin):\n                ans += 1\n        elif start == c:\n            ans += c + 1 + min(abs(indexMax - indexMin), b, d)\n            if min(abs(indexMax - indexMin), b, d) != abs(indexMax - indexMin):\n                ans += 1\n        elif start == d:\n            ans += d + 1 + min(abs(indexMax - indexMin), a, c)\n            if min(abs(indexMax - indexMin), a, c) != abs(indexMax - indexMin):\n                ans += 1\n        print(ans)\nmain()", "t = int(input())\nres = []\nfor i in range(t):\n    n = int(input())\n    mas = list(map(int, input().split()))\n    min = 101\n    max = 0\n    min_k = 0\n    max_k = 0\n    for j in range(n):\n        if min > mas[j]:\n            min = mas[j]\n            min_k = j\n        if max < mas[j]:\n            max = mas[j]\n            max_k = j\n    cnt_1 = min_k + 1 + abs(min_k - max_k)\n    cnt_2 = max_k + 1 + abs(min_k - max_k)\n    cnt_3 = n - max_k + abs(min_k - max_k)\n    cnt_4 = n - min_k + abs(min_k - max_k)\n    cnt_5 = n - min_k + max_k + 1\n    cnt_6 = n - max_k + min_k + 1\n    cnt = [cnt_1, cnt_2, cnt_3, cnt_4, cnt_5, cnt_6]\n    result = 110\n    for s in range(6):\n        if result > cnt[s] and cnt[s] > 0:\n            result = cnt[s]\n    res.append(result)\nfor y in res:\n    print(y)", "import math\n\ndef main():\n\n    def solve(N, H):\n        min_idx = H.index(min(H))\n        max_idx = H.index(max(H))\n        mid_idx = N // 2\n        if min_idx == mid_idx or max_idx == mid_idx:\n            if N % 2 == 1:\n                return N - mid_idx\n            elif min_idx < mid_idx or max_idx < mid_idx:\n                return mid_idx + 1\n            else:\n                return N - mid_idx\n        elif min_idx < mid_idx and max_idx < mid_idx:\n            return max(min_idx, max_idx) + 1\n        elif min_idx > mid_idx and max_idx > mid_idx:\n            return N - min(min_idx, max_idx)\n        else:\n            if min_idx < mid_idx:\n                left_side = max_idx + 1\n                right_side = N - min_idx\n                both_side = min_idx + 1 + N - max_idx\n            else:\n                left_side = min_idx + 1\n                right_side = N - max_idx\n                both_side = max_idx + 1 + N - min_idx\n            return min(left_side, right_side, both_side)\n\n    def read_input():\n        number_tests = int(input())\n        for i in range(number_tests):\n            N = int(input())\n            H = input().split()\n            H = list(map(lambda x: int(x), H))\n            print(solve(N, H))\n    read_input()\nmain()", "t = int(input())\nfor i in range(t):\n    a = int(input())\n    b = list(map(int, input().split()))\n    c = b.index(min(b))\n    d = b.index(max(b))\n    y = min(min(c + 1, d + 1, a - c, a - d) + abs(c - d), a + min(c, d) - max(c, d) + 1)\n    print(y)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    (maxi, mini) = (0, 0)\n    for i in range(n):\n        if arr[i] > arr[maxi]:\n            maxi = i\n        if arr[i] < arr[mini]:\n            mini = i\n    max1 = max(maxi, mini)\n    min1 = min(maxi, mini)\n    result = min(max1 + 1, min1 + (n - max1) + 1, n - min1)\n    print(result)", "for _ in range(int(input())):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    k = list1.index(1)\n    l = list1.index(n)\n    list1 = []\n    maxi = max(k, l)\n    mini = min(k, l)\n    maxi += 1\n    mini += 1\n    list1.append(mini + (n - maxi + 1))\n    list1.append(maxi)\n    list1.append(n - mini + 1)\n    print(min(list1))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    mn = l.index(min(l))\n    mx = l.index(max(l))\n    if mn < mx:\n        if mn + 1 < n - mx:\n            c += mn + 1\n            l = l[mn + 1:]\n            mx = l.index(max(l))\n            c += min(mx + 1, len(l) - mx)\n        else:\n            c += n - mx\n            l = l[:mx]\n            mn = l.index(min(l))\n            c += min(mn + 1, len(l) - mn)\n    elif mx + 1 < n - mn:\n        c += mx + 1\n        l = l[mx + 1:]\n        mn = l.index(min(l))\n        c += min(mn + 1, len(l) - mn)\n    else:\n        c += n - mn\n        l = l[:mn]\n        mx = l.index(max(l))\n        c += min(mx + 1, len(l) - mx)\n    print(c)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = l.index(max(l))\n    y = l.index(min(l))\n    x += 1\n    y += 1\n    a = max(x, y)\n    b = max(n - x, n - y) + 1\n    c = min(x, y) + (n - max(x, y) + 1)\n    print(min(a, b, c))", "for t in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    m = min(x)\n    M = max(x)\n    i = x.index(m) + 1\n    j = x.index(M) + 1\n    print(min(max(i, j), max(len(x) + 1 - j, len(x) + 1 - i), i + len(x) + 1 - j, j + len(x) + 1 - i))", "t = int(input())\nfor _ in range(t):\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    minI = l.index(min(l)) + 1\n    maxI = l.index(max(l)) + 1\n    print(min(max(minI, maxI), min(max(n - minI, n - maxI) + 1, min(minI, maxI) + n - max(minI, maxI) + 1)))", "Q = int(input())\nfor q in range(0, Q):\n    n = int(input())\n    arr = list(map(int, input().rstrip().split()))\n    m = min(arr)\n    M = max(arr)\n    p1 = arr.index(m)\n    p2 = arr.index(M)\n    c1 = min(p1, n - p1 - 1)\n    c2 = min(p2, n - p2 - 1)\n    cnt = 0\n    l1 = 0\n    l2 = n - 1\n    if c1 == p1 and c1 <= c2:\n        cnt = p1 - l1 + 1\n        l1 = p1 + 1\n        if p2 - l1 <= l2 - p2:\n            cnt = cnt + (p2 - l1 + 1)\n        else:\n            cnt = cnt + (l2 - p2 + 1)\n    elif c2 == p2 and c2 < c1:\n        cnt = p2 - l1 + 1\n        l1 = p2 + 1\n        if p1 - l1 <= l2 - p1:\n            cnt = cnt + (p1 - l1 + 1)\n        else:\n            cnt = cnt + (l2 - p1 + 1)\n    elif c1 == n - p1 - 1 and c1 <= c2:\n        cnt = l2 - p1 + 1\n        l2 = p1 - 1\n        if p2 - l1 <= l2 - p2:\n            cnt = cnt + (p2 - l1 + 1)\n        else:\n            cnt = cnt + (l2 - p2 + 1)\n    elif c2 == n - p2 - 1 and c2 < c1:\n        cnt = l2 - p2 + 1\n        l2 = p2 - 1\n        if p1 - l1 <= l2 - p1:\n            cnt = cnt + (p1 - l1 + 1)\n        else:\n            cnt = cnt + (l2 - p1 + 1)\n    print(cnt)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    minpos = lst.index(min(lst)) + 1\n    maxpos = lst.index(max(lst)) + 1\n    if minpos > maxpos:\n        (minpos, maxpos) = (maxpos, minpos)\n    ans = min(maxpos, min(n - minpos + 1, minpos + n - maxpos + 1))\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ma = l.index(max(l))\n    mi = l.index(min(l))\n    maxn = max(ma, mi)\n    minn = min(ma, mi)\n    print(min(maxn + 1, minn + n + 1 - maxn, n - minn))", "for t in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    (mn, mx) = (arr.index(min(arr)), arr.index(max(arr)))\n    print(min(max(mn, mx) + 1, N - min(mn, mx), mn + N + 1 - mx, mx + N + 1 - mn))"]