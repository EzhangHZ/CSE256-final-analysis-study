["def all_eq(x):\n    for i in range(len(x) - 1):\n        if x[i] != x[i + 1]:\n            return False\n    return True\n\ndef check(x):\n    for i in range(len(x) - 1):\n        if x[i] == x[i + 1]:\n            return (True, i)\n    if x[0] == x[-1]:\n        return (True, -1)\n    return (False, -1)\nx = int(input())\ny = []\nm = []\nfor i in range(x):\n    y.append([])\n    a = int(input())\n    s = str(input()).split(' ')\n    if all_eq(s):\n        y[i] = ['1'] * a\n        m.append(1)\n        continue\n    elif a % 2 == 0:\n        y[i] = ['1', '2'] * int(a / 2)\n        m.append(2)\n        continue\n    z = check(s)\n    if z[0]:\n        m.append(2)\n        if z[1] == -1:\n            y[i] = ['1', '2'] * int((a - 1) / 2) + ['1']\n        elif z[1] % 2 == 0:\n            y[i] = ['1', '2'] * int(z[1] / 2) + ['1'] + ['1', '2'] * int((a - z[1] - 1) / 2)\n        else:\n            y[i] = ['1', '2'] * int((z[1] + 1) / 2) + ['2'] + ['1', '2'] * int((a - z[1] - 2) / 2)\n    else:\n        m.append(3)\n        y[i] = ['1', '2'] * int((a - 1) / 2) + ['3']\nfor i in range(x):\n    print(m[i])\n    print(' '.join(y[i]))", "from collections import Counter\nq = int(input())\nfor i in range(q):\n    n = int(input())\n    arr = input().split()\n    count = Counter(arr)\n    if len(count) == 1:\n        k = 1\n        ans = ['1'] * n\n    elif n % 2 == 0:\n        k = 2\n        ans = ['1', '2'] * (n // 2)\n    else:\n        idx = -1\n        for j in range(n - 1):\n            if arr[j] == arr[j + 1]:\n                idx = j\n                break\n        if arr[0] == arr[-1]:\n            k = 2\n            ans = ['1', '2'] * (n // 2)\n            ans.append('1')\n        elif idx == -1:\n            k = 3\n            ans = ['1', '2'] * (n // 2)\n            ans.append('3')\n        else:\n            k = 2\n            idx += 1\n            tmp1 = ['1', '2'] * (idx // 2)\n            if idx % 2:\n                tmp1.append('1')\n            tmp = n - idx\n            tmp2 = ['1', '2'] * (tmp // 2)\n            if tmp % 2:\n                tmp2.append('1')\n            ans = tmp1[::-1]\n            ans.extend(tmp2)\n    print(k)\n    print(' '.join(ans))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if len(set(arr)) == 1:\n        print(1)\n        print('1 ' * n)\n    elif n % 2 == 0:\n        print(2)\n        print('1 2 ' * (n // 2))\n    else:\n        a = arr[-2]\n        b = arr[-1]\n        c = arr[0]\n        if a == b:\n            print(2)\n            print('1 2 ' * (n // 2) + '2')\n        elif a != b:\n            if b == c:\n                print(2)\n                print('1 2 ' * (n // 2) + '1')\n            else:\n                i = 0\n                while i < n - 1 and arr[i + 1] != arr[i]:\n                    i += 1\n                if i == n - 1:\n                    print(3)\n                    print('1 2 ' * (n // 2) + '3')\n                else:\n                    print(2)\n                    d = i // 2\n                    if i % 2 == 0:\n                        print('1 2 ' * d + '1 1 ' + '2 ' + (n - i - 3) // 2 * '1 2 ')\n                    else:\n                        print('1 2 ' * d + '1 2 2 ' + '1 2 ' * ((n - i - 2) // 2))", "from collections import Counter\nq = int(input())\nfor i in range(q):\n    n = int(input())\n    arr = input().split()\n    count = Counter(arr)\n    if len(count) == 1:\n        k = 1\n        ans = ['1'] * n\n    elif n % 2 == 0:\n        k = 2\n        ans = ['1', '2'] * (n // 2)\n    else:\n        idx = -1\n        for j in range(n - 1):\n            if arr[j] == arr[j + 1]:\n                idx = j\n                break\n        if arr[0] == arr[-1]:\n            k = 2\n            ans = ['1', '2'] * (n // 2)\n            ans.append('1')\n        elif idx == -1:\n            k = 3\n            ans = ['1', '2'] * (n // 2)\n            ans.append('3')\n        else:\n            k = 2\n            idx += 1\n            tmp1 = ['1', '2'] * (idx // 2)\n            if idx % 2:\n                tmp1.append('1')\n            tmp = n - idx\n            tmp2 = ['1', '2'] * (tmp // 2)\n            if tmp % 2:\n                tmp2.append('1')\n            ans = tmp1[::-1]\n            ans.extend(tmp2)\n    print(k)\n    print(' '.join(ans))", "for i in range(int(input())):\n    n = int(input())\n    t = list(map(int, input().split()))\n    if t.count(t[0]) == n:\n        print(1)\n        print(' '.join((repr(e) for e in [1] * n)))\n    elif n % 2 == 0:\n        print(2)\n        print(' '.join((repr(e) for e in [1, 2] * int(n / 2))))\n    else:\n        flag = 0\n        for j in range(n):\n            if t[j] == t[(j + 1) % n]:\n                flag = 1\n                break\n        if flag == 1:\n            print(2)\n            if j == n - 1:\n                print(' '.join((repr(e) for e in [1, 2] * int(n / 2) + [1])))\n            elif j % 2 == 0:\n                a = [2, 1] * int(j / 2) + [2] + [2, 1] * int(n / 2 - j / 2)\n                print(' '.join((repr(e) for e in a)))\n            else:\n                a = [1, 2] * int(j / 2 + 1) + [2] + [1, 2] * int(n / 2 - j / 2 - 1)\n                print(' '.join((repr(e) for e in a)))\n        else:\n            print(3)\n            print(' '.join((repr(e) for e in [1, 2] * int(n / 2) + [3])))", "import sys\ninput = sys.stdin.readline\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    t = list(map(int, input().split()))\n    if len(set(t)) == 1:\n        print(1)\n        print('1 ' * n)\n    elif n % 2 == 0:\n        print(2)\n        print('1 2 ' * (n // 2))\n    elif t[-1] != t[0]:\n        ans = [0] * n\n        for j in range(n):\n            if t[j] == t[(j + 1) % n]:\n                ans[j] = ans[(j + 1) % n] = 1\n                for k in range(2, n):\n                    ans[(j + k) % n] = 2 if k % 2 == 0 else 1\n                print(2)\n                print(' '.join(map(str, ans)))\n                break\n        else:\n            print(3)\n            print('1 2 ' * (n // 2) + '3')\n    else:\n        print(2)\n        print('1 2 ' * (n // 2) + '1')", "def f(n, t):\n    c = 1\n    clist = [0] * n\n    clist[0] = 1\n    if len(set(t)) == 1:\n        print(c)\n        return '1 ' * n\n    if n % 2 == 0:\n        print(2)\n        return '1 2 ' * (n // 2)\n    if t[-1] == t[0]:\n        print(2)\n        return '1 2 ' * (n // 2) + '1'\n    s = ''\n    for i in range(n - 2):\n        if t[i] == t[i + 1]:\n            print(2)\n            if (i + 1) % 2 != 0:\n                return '1 2 ' * ((i + 1) // 2) + '1 1 ' + '2 1 ' * (n // 2 - (i + 1) // 2 - 1) + '2'\n            else:\n                return '1 2 ' * ((i + 1) // 2 - 1) + '1 ' + '2 2 ' + '1 2 ' * (n // 2 - (i + 1) // 2)\n    if t[-2] == t[-1]:\n        print(2)\n        return '1 2 ' * (n // 2) + '2'\n    print(3)\n    return '1 2 ' * (n // 2) + '3'\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        t = [int(i) for i in input().split()]\n        print(f(n, t))\nmain()", "T = int(input())\nn = [0] * T\nk = [0] * T\nns = [0] * T\nfor t in range(T):\n    n[t] = int(input())\n    ns[t] = [int(i) for i in input().split(' ')]\n\ndef ans(n, ns):\n    wo = False\n    if n % 2 == 1:\n        wo = True\n    if len(set(ns)) == 1:\n        print(1)\n        return '1 ' * n\n    c = ['1']\n    cc = 0\n    for i in range(1, n):\n        if ns[i] == ns[i - 1] and wo:\n            c.append(str(cc + 1))\n            wo = False\n        else:\n            cc ^= 1\n            c.append(str(cc + 1))\n    if wo and ns[-1] == ns[0]:\n        wo = False\n    if wo:\n        c[-1] = '3'\n        print(3)\n    else:\n        print(2)\n    return ' '.join(c)\nfor t in range(T):\n    print(ans(n[t], ns[t]))", "for i in range(int(input())):\n    n = int(input())\n    data = list(map(int, input().split()))\n    result = ['1']\n    if max(data) == min(data):\n        print(1)\n        print(' '.join(['1' for j in range(n)]))\n        continue\n    if n % 2 == 0:\n        for j in range(1, n):\n            result.append('1' if result[j - 1] == '2' else '2')\n        print(2)\n        print(' '.join(result))\n        continue\n    if n % 2 == 1:\n        flag = True\n        for j in range(1, n):\n            if flag and data[j] == data[j - 1]:\n                result.append(result[j - 1])\n                flag = False\n            else:\n                result.append('1' if result[j - 1] == '2' else '2')\n        if flag and data[-2] == data[-1]:\n            result[-1] = '1' if result[-1] == '1' else '2'\n            print(2)\n            print(' '.join(result))\n        elif not flag:\n            print(2)\n            print(' '.join(result))\n        elif data[-1] != data[0]:\n            result[-1] = '3'\n            print(3)\n            print(' '.join(result))\n        else:\n            result[-1] = '1' if result[j - 1] == '2' else '2'\n            print(2)\n            print(' '.join(result))", "def sos(n, x):\n    y = x[:]\n    y.append(x[0])\n    for i in range(n):\n        if y[i] == y[i + 1]:\n            return i\n    return -1\nfor t in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    if x.count(x[0]) == n:\n        k = 1\n        s = '1' * n\n    elif n % 2 == 0:\n        k = 2\n        s = '12' * (n // 2)\n    else:\n        c = sos(n, x)\n        if c == -1:\n            k = 3\n            s = '12' * (n // 2) + '3'\n        else:\n            k = 2\n            if c % 2 == 0:\n                s = '12' * (c // 2) + '1' + '12' * ((n - c - 1) // 2)\n            else:\n                s = '12' * ((c + 1) // 2) + '2' + '12' * ((n - c - 2) // 2)\n    print(k)\n    z = list(s)\n    print(' '.join(z))", "n = int(input())\nfor a in range(n):\n    length = int(input())\n    order = list(map(int, input().split()))\n    if max(order) == min(order):\n        print(1)\n        print('1 ' * length)\n    elif length % 2 == 0:\n        print(2)\n        print('1 2 ' * int(length / 2))\n    else:\n        consecutive = -1\n        for b in range(length):\n            if order[b] == order[(b + 1) % length]:\n                consecutive = b\n        if consecutive == -1:\n            print(3)\n            answer = '1 2 ' * int(length // 2) + '3'\n            print(answer)\n        else:\n            print(2)\n            if consecutive == length - 1:\n                print('1 2 ' * int(length // 2) + '1')\n            elif consecutive == 0:\n                print('1 ' + '1 2 ' * int(length // 2))\n            else:\n                answer = '1 2 ' * int(consecutive // 2) + '1 ' * (consecutive % 2)\n                if answer[-2] == '1':\n                    answer += '2 2 '\n                    answer += '1 2 ' * int((length - consecutive - 2) // 2) + '1' * int((length - consecutive - 2) % 2)\n                else:\n                    answer += '1 1 '\n                    answer += '2 1 ' * int((length - consecutive - 2) // 2) + '2' * int((length - consecutive - 2) % 2)\n                print(answer)", "T = int(input())\nfor case in range(T):\n    l = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    c = {}\n    if len(set(arr)) == 1:\n        print(1)\n        print(' '.join(['1'] * len(arr)))\n    elif len(arr) % 2 == 0:\n        print(2)\n        print(' '.join(['1', '2'] * (len(arr) // 2)))\n    else:\n        ret = ['1', '2'] * (len(arr) // 2)\n        arr = arr + [arr[0]]\n        cons = False\n        pos = 0\n        for i in range(len(arr) - 1):\n            if arr[i] == arr[i + 1]:\n                cons = True\n                pos = i\n                break\n        if cons:\n            if pos != len(arr) - 2:\n                ret = ret[:pos] + [ret[pos]] + ret[pos:]\n            else:\n                ret = ['2'] + ret\n        else:\n            ret.append('3')\n        print(len(set(ret)))\n        print(' '.join(ret))", "T = int(input())\nfor case in range(T):\n    l = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    if len(set(arr)) == 1:\n        print(1)\n        print(' '.join(['1'] * len(arr)))\n    elif len(arr) % 2 == 0:\n        print(2)\n        print(' '.join(['1', '2'] * (len(arr) // 2)))\n    else:\n        ret = ['1', '2'] * (len(arr) // 2)\n        arr = arr + [arr[0]]\n        key = False\n        pos = 0\n        for i in range(len(arr) - 1):\n            if arr[i] == arr[i + 1]:\n                key = True\n                pos = i\n                break\n        if key == True:\n            if pos != len(arr) - 2:\n                ret = ret[:pos] + [ret[pos]] + ret[pos:]\n            else:\n                ret = ['2'] + ret\n        else:\n            ret.append('3')\n        print(len(set(ret)))\n        print(' '.join(ret))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    m = len(set(a))\n    if m == 1:\n        print(1)\n        print(' '.join(['1'] * n))\n    elif n % 2 == 0:\n        print(2)\n        print(' '.join(['1', '2'] * (n // 2)))\n    else:\n        s = -1\n        for i in range(n):\n            if i != n - 1:\n                if a[i] == a[i + 1]:\n                    s = i\n                    break\n            elif a[n - 1] == a[0]:\n                s = n - 1\n                break\n        if s == -1:\n            print(3)\n            print(' '.join(['1', '2'] * (n // 2) + ['3']))\n        else:\n            if s % 2 == 0:\n                b = ['1', '2'] * (s // 2) + ['1'] + ['1', '2'] * ((n - s - 1) // 2)\n            else:\n                b = ['1', '2'] * ((s + 1) // 2) + ['2'] + ['1', '2'] * ((n - s - 2) // 2)\n            print(2)\n            print(' '.join(b))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    items = list(map(int, input().split()))\n    if len(set(items)) == 1:\n        res = '1 ' * n\n        print(1)\n        print(res)\n    elif n % 2 == 0:\n        res = '1 2 ' * (n // 2)\n        print(2)\n        print(res)\n    else:\n        res = []\n        flag = 0\n        items.append(items[0])\n        index = 0\n        for i in range(n):\n            if items[i] == items[i + 1]:\n                flag = 1\n                index = i\n        if flag == 0:\n            print(3)\n            res = '1 2 ' * (n // 2) + '3'\n            print(res)\n        else:\n            print(2)\n            if index == n - 1:\n                res = '1 2 ' * (index // 2) + '1'\n                print(res)\n            else:\n                if index % 2 == 0:\n                    res = '1 2 ' * ((index + 1) // 2) + '1 1 '\n                    res = res + '2 1 ' * ((n - index - 2) // 2) + '2'\n                else:\n                    res = '1 2 ' * ((index + 1) // 2) + '2 '\n                    res = res + '1 2 ' * ((n - index - 2) // 2)\n                print(res)", "from functools import reduce\nimport operator\nimport itertools\nfrom bisect import bisect_left\nt = int(input())\n\ndef solve():\n    l = int(input())\n    n = list(map(int, input().split(' ')))\n    if len(set(n)) == 1:\n        print('1')\n        print(' '.join(['1'] * l))\n        return\n    hs = False\n    rp = 0\n    for (i, v) in enumerate(n):\n        if v == n[i - 1]:\n            hs = True\n            rp = i\n            n = n[i:] + n[:i]\n            break\n    if hs:\n        print('2')\n        ans = ['1', '2'] * (l // 2) + (['1'] if l % 2 else [])\n        print(' '.join(ans[-rp:] + ans[:-rp]))\n    else:\n        print('3' if l % 2 else '2')\n        print(' '.join(['1', '2'] * (l // 2) + (['3'] if l % 2 else [])))\nfor i in range(t):\n    solve()", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    flag = 0\n    p1 = -1\n    p2 = -1\n    if arr[0] == arr[n - 1]:\n        p1 = n - 1\n        p2 = 0\n    for i in range(n):\n        if arr[i] != arr[0]:\n            flag = 1\n            break\n    for i in range(n):\n        if i > 0:\n            if arr[i - 1] == arr[i]:\n                p1 = i - 1\n                p2 = i\n                break\n    if flag == 1:\n        if n % 2 == 0:\n            ans = '1 2'\n            ans += ' 1 2' * (n // 2 - 1)\n            print(2)\n            print(ans)\n        elif p1 == n - 1 and p2 == 0:\n            ans = '1 2 ' * (n // 2) + '1'\n            print(2)\n            print(ans)\n        elif p1 != -1:\n            if p1 % 2 == 1:\n                ans = '2'\n                ans += ' 1 2' * (p1 // 2)\n                ans += ' 1 1'\n                ans += ' 2 1' * ((n - p2 - 1) // 2)\n                print(2)\n                print(ans)\n            else:\n                ans = '1 2 ' * (p1 // 2)\n                ans += '1 1'\n                ans += ' 2 1' * ((n - p2 - 1) // 2)\n                ans += ' 2'\n                print(2)\n                print(ans)\n        else:\n            ans = '1 2 ' * (n // 2)\n            ans += '3'\n            print(3)\n            print(ans)\n    else:\n        ans = '1'\n        ans += ' 1' * (n - 1)\n        print(1)\n        print(ans)", "from itertools import cycle, islice\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    t = [*map(int, input().split())]\n    if len(set(t)) == 1:\n        print(1)\n        print(' '.join(['1'] * len(t)))\n    elif len(t) % 2 == 0:\n        print(2)\n        print(' '.join(islice(cycle(['1', '2']), len(t))))\n    elif t[0] == t[-1]:\n        print(2)\n        print(' '.join(islice(cycle(['1', '2']), len(t))))\n    else:\n        k = -1\n        for i in range(1, len(t)):\n            if t[i] == t[i - 1]:\n                k = i - 1\n                break\n        if k >= 0:\n            r = list(islice(cycle(['1', '2']), k + 1))\n            r.append(r[-1])\n            if r[-1] == '1':\n                r += list(islice(cycle(['2', '1']), len(t) - k - 2))\n            else:\n                r += list(islice(cycle(['1', '2']), len(t) - k - 2))\n            print(2)\n            print(' '.join(r))\n        else:\n            r = list(islice(cycle(['1', '2']), len(t) - 1))\n            r.append('3')\n            print(3)\n            print(' '.join(r))", "import os\nimport sys\nif os.path.exists('/mnt/c/Users/Square/square/codeforces'):\n    f = iter(open('D.txt').readlines())\n\n    def input():\n        return next(f).strip()\nelse:\n    input = lambda : sys.stdin.readline().strip()\nfprint = lambda *args: print(*args, flush=True)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    T = list(map(int, input().split()))\n    s = set(T)\n    if len(s) == 1:\n        res = [1 for _ in range(n)]\n    elif all([u != v for (u, v) in zip(T, T[1:])]) and T[0] != T[-1] and (n % 2 != 0):\n        res = [i % 2 + 1 for i in range(n)]\n        res[-1] = 3\n    else:\n        res = [1]\n        free = -1\n        for (num, (u, v)) in enumerate(zip(T[:], T[1:])):\n            if u != v:\n                res.append(res[-1] % 2 + 1)\n            else:\n                free = num\n                res.append(res[-1])\n        if T[0] != T[-1] and res[0] == res[-1]:\n            for j in range(free + 1, n):\n                res[j] = res[j] % 2 + 1\n    print(len(set(res)))\n    print(' '.join(map(str, res)))", "q = int(input())\nfor i in range(q):\n    n = int(input())\n    ch = input()\n    L = [int(i) for i in ch.split()]\n    if L == [L[0]] * n:\n        print(1)\n        print('1 ' * n)\n    elif n % 2 == 0:\n        print(2)\n        print('1 2 ' * (n // 2))\n    else:\n        test = 0\n        x = '1 '\n        y = '2 '\n        s = '1 '\n        c = x\n        for j in range(1, n):\n            if test == 0 and L[j] == L[j - 1]:\n                test = 1\n            elif c == x:\n                c = y\n            else:\n                c = x\n            s += c\n        if test or L[0] == L[-1]:\n            print(2)\n            print(s)\n        else:\n            print(3)\n            print(s[0:2 * n - 2] + '3 ')", "for _ in range(int(input())):\n    n = int(input())\n    t = list(map(int, input().split()))\n    r = []\n    if all((x == t[0] for x in t)):\n        r = [1] * n\n    elif n % 2 == 0:\n        r = [1, 2] * (n // 2)\n    else:\n        r = [1, 2] * (n // 2)\n        k = -1\n        for i in range(n):\n            if t[i] == t[i - 1]:\n                k = i\n        if k != -1:\n            val = 1 if k % 2 == 1 else 2\n            r.insert(k, val)\n        else:\n            r.append(3)\n    print(max(r))\n    print(' '.join(map(str, r)))", "q = int(input().strip())\nfor _ in range(q):\n    n = int(input().strip())\n    a = list(map(int, input().strip().split()))\n    c = [1]\n    for i in range(1, n):\n        if a[i] != a[i - 1]:\n            c.append(3 - c[i - 1])\n        else:\n            c.append(c[i - 1])\n    for i in range(n):\n        if a[i] != a[i - 1] and c[i] == c[i - 1]:\n            c[i] = 3 - c[i - 1]\n    if a[0] != a[-1] and c[0] == c[-1]:\n        c[-1] = max(c) + 1\n    print(max(c))\n    print(' '.join(map(str, c)))", "import itertools\nfor _ in range(int(input())):\n    n = int(input())\n    t = list(map(int, input().split()))\n    if len(set(t)) == 1:\n        print(1)\n        print(' '.join(['1'] * n))\n    elif n % 2 == 0:\n        print(2)\n        print(' '.join(['1', '2'] * (n // 2)))\n    elif not any((t[i] == t[i + 1] for i in range(n - 1))) and t[0] != t[-1]:\n        print(3)\n        print(' '.join(['1', '2'] * (n // 2) + ['3']))\n    else:\n        print(2)\n        res = ['1', '2'] * (n // 2)\n        for i in range(n - 1):\n            if t[i] == t[i + 1]:\n                res.insert(i, res[i])\n                break\n        else:\n            res += ['1']\n        print(' '.join(res))", "def solve():\n    N = int(input())\n    L = list(map(int, input().split()))\n    if len(set(L)) == 1:\n        print(1)\n        print(' '.join(['1' for _ in range(N)]))\n    elif N % 2 == 0:\n        A = [i % 2 + 1 for i in range(N)]\n        print(2)\n        print(' '.join(map(str, A)))\n    else:\n        for i in range(N):\n            if L[i] == L[(i + 1) % N]:\n                A = []\n                for j in range(i + 1):\n                    A.append(j % 2 + 1)\n                for j in range(i + 1, N):\n                    A.append((j + 1) % 2 + 1)\n                print(2)\n                print(' '.join(map(str, A)))\n                break\n        else:\n            A = [i % 2 + 1 for i in range(N - 1)] + [3]\n            print(3)\n            print(' '.join(map(str, A)))\nT = int(input())\nfor _ in range(T):\n    solve()", "import sys\ninput = sys.stdin.readline\nn = int(input())\n\ndef mTypes(types):\n    t = types[0]\n    for x in types:\n        if t != x:\n            return False\n    return True\n\ndef pair(types):\n    return len(types) % 2 == 0\n\ndef mTypesAcc(types):\n    t = types[-1]\n    i = 0\n    for x in types:\n        if x == t:\n            return (True, i)\n        else:\n            t = x\n        i += 1\n    return (False, -1)\n\ndef main():\n    taille = int(input())\n    types = list(map(int, input().split()))\n    if mTypes(types):\n        return ([1 for i in range(taille)], 1)\n    if pair(types):\n        return ([((-1) ** i + 1) // 2 + 1 for i in range(taille)], 2)\n    (b, i) = mTypesAcc(types)\n    if b:\n        c = []\n        if i == 0:\n            return ([((-1) ** i + 1) // 2 + 1 for i in range(taille)], 2)\n        else:\n            c.append(1)\n            for j in range(1, taille):\n                if i == j:\n                    c.append(c[-1])\n                elif c[-1] == 1:\n                    c.append(2)\n                else:\n                    c.append(1)\n            return (c, 2)\n    else:\n        c = [((-1) ** i + 1) // 2 + 1 for i in range(taille)]\n        c[0] = 3\n        return (c, 3)\nfor i in range(n):\n    (c, t) = main()\n    print(t)\n    print(*c)", "import math\nt = int(input())\nfor kl in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    z = 0\n    res = ''\n    j = 0\n    deff = 0\n    if a[0] == a[-1]:\n        z += 1\n        ind = 0\n    for i in range(1, n):\n        if a[i] == a[i - 1]:\n            z += 1\n            ind = i\n    if z == n:\n        deff = 1\n        print(1)\n        print('1 ' * n)\n    elif z == 0 and n % 2 == 1:\n        print(3)\n        for i in range(n // 2):\n            res += '1 '\n            res += '2 '\n        res += '3'\n    elif z == 0 and n % 2 == 0:\n        print(2)\n        for i in range(n // 2):\n            res += '1 '\n            res += '2 '\n    elif z >= 1 and n % 2 == 0:\n        print(2)\n        for i in range(n // 2):\n            res += '1 '\n            res += '2 '\n    elif z >= 1 and n % 2 == 1:\n        print(2)\n        for i in range(ind // 2):\n            res += '1 '\n            res += '2 '\n            j += 2\n        if ind % 2 == 0:\n            res += '2 '\n            j += 1\n            for i in range((n - j) // 2):\n                res += '1 '\n                res += '2 '\n        else:\n            res += '1 '\n            res += '1 '\n            j += 2\n            for i in range(n - j):\n                if i % 2 == 0:\n                    res += '2 '\n                else:\n                    res += '1 '\n    if deff == 0:\n        print(res)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    t = list(map(int, input().split()))\n    ans = [1]\n    for i in range(1, n):\n        if t[i] != t[i - 1]:\n            if ans[-1] == 1:\n                ans.append(2)\n            else:\n                ans.append(1)\n        else:\n            ans.append(ans[-1])\n    if ans[-1] == ans[0] and t[0] != t[-1]:\n        done = False\n        for i in range(n - 1, 0, -1):\n            if ans[i] == ans[i - 1]:\n                done = True\n            if ans[i] == 1:\n                ans[i] = 2\n            else:\n                ans[i] = 1\n            if done:\n                break\n        if not done:\n            ans[0] = 3\n    print(max(ans))\n    print(' '.join(list(map(str, ans))))", "q = int(input())\nfor qq in range(q):\n    n = int(input())\n    t = list(map(int, input().split()))\n    if len(set(t)) == 1:\n        col = 1\n        sol = [0] * n\n    elif len(t) % 2 == 0:\n        col = 2\n        sol = [0, 1] * (len(t) // 2)\n    else:\n        col = 2\n        sol = [0, 1] * (len(t) // 2) + [0]\n        if t[0] != t[-1]:\n            coup = -1\n            t.append(t[0])\n            for i in range(len(t) - 1):\n                if t[i] == t[i + 1]:\n                    coup = i + 1\n                    break\n            if coup > -1:\n                for i in range(coup, len(t) - 1):\n                    sol[i] = (sol[i] + 1) % 2\n            else:\n                col = 3\n                sol[-1] = 2\n    print(col)\n    print(' '.join(map(lambda x: str(x + 1), sol)))", "for t in range(int(input())):\n    (n, t) = (int(input()), list(map(int, input().split())))\n    if len(set(t)) == 1:\n        print(1)\n        print('1 ' * n)\n    elif n % 2 == 0:\n        print(2)\n        print('1 2 ' * (n // 2))\n    else:\n        for i in range(n):\n            if t[i - 1] == t[i]:\n                break\n        else:\n            print(3)\n            print('1 2 ' * (n // 2) + '3')\n            continue\n        print(2)\n        if i == 0:\n            s = '1 '\n        else:\n            s = '1 1 '\n        c = 1\n        for j in range(i - 2, -1, -1):\n            s = ('2 ' if c == 1 else '1 ') + s\n            c = 2 if c == 1 else 1\n        c = 1\n        for j in range(i + 1, n):\n            s += '2 ' if c == 1 else '1 '\n            c = 2 if c == 1 else 1\n        print(s)", "q = int(input())\nfor test_case in range(q):\n    n = int(input())\n    t = input().split()\n    if n == 1:\n        print(1)\n        print(1)\n        continue\n    t_0 = t[0]\n    all_same = True\n    any_adj_same = False\n    adj_same_index = -1\n    for i in range(0, len(t)):\n        animal = t[i]\n        if animal != t_0:\n            all_same = False\n        if animal == t[(i + 1) % n]:\n            any_adj_same = True\n            adj_same_index = i\n    if all_same:\n        print(1)\n        output = ''\n        for i in range(n):\n            output += ' 1'\n        output = output[1:]\n        print(output)\n        continue\n    if n % 2 == 0:\n        print(2)\n        output = ''\n        for i in range(n):\n            output += ' 1' if i % 2 == 0 else ' 2'\n        output = output[1:]\n        print(output)\n        continue\n    if any_adj_same:\n        print(2)\n        output = ''\n        for i in range(n):\n            if i > adj_same_index:\n                output += ' 2' if i % 2 == 0 else ' 1'\n            else:\n                output += ' 1' if i % 2 == 0 else ' 2'\n        output = output[1:]\n        print(output)\n        continue\n    else:\n        print(3)\n        output = ''\n        for i in range(n - 1):\n            output += '1 ' if i % 2 == 0 else '2 '\n        output += '3'\n        print(output)\n        continue", "q = int(input())\nfor test_case in range(q):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    paint_list = [0 for i in range(n)]\n    paint_list[0] = 1\n    colors = 1\n    if arr[n - 1] == arr[0] or arr[n - 2] == arr[n - 1]:\n        for t in range(1, n):\n            if paint_list[t - 1] == 1 and arr[t] != arr[t - 1]:\n                colors = 2\n                paint_list[t] = 2\n            else:\n                paint_list[t] = 1\n        if arr[n - 1] != arr[0]:\n            colors = 2\n            paint_list[n - 1] = 2\n    elif n % 2 == 0:\n        colors = 2\n        paint_list = [1, 2] * (n // 2)\n    else:\n        found_consecutive_matching = False\n        for t in range(1, n - 1):\n            if not found_consecutive_matching and arr[t] == arr[t - 1]:\n                found_consecutive_matching = True\n                paint_list[t] = paint_list[t - 1]\n            else:\n                paint_list[t] = 3 - paint_list[t - 1]\n        if paint_list[n - 2] == paint_list[0]:\n            paint_list[n - 1] = 2\n            colors = 2\n        else:\n            paint_list[n - 1] = 3\n            colors = 3\n    print(colors)\n    print(' '.join((str(x) for x in paint_list)))", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    if len(set(arr)) == 1:\n        print(1)\n        print('1 ' * n)\n    else:\n        ans = [1]\n        l = 1\n        for i in range(1, n):\n            if arr[i] != arr[i - 1]:\n                l = 3 - l\n            ans.append(l)\n        count = 2\n        if arr[0] != arr[n - 1]:\n            if ans[0] == ans[n - 1]:\n                indo = 0\n                b = False\n                for i in range(1, n):\n                    if arr[i] == arr[i - 1]:\n                        b = True\n                        ans[i] = 3 - ans[i]\n                        for j in range(i + 1, n):\n                            if arr[j] == arr[j - 1]:\n                                ans[j] = ans[j - 1]\n                            else:\n                                ans[j] = 3 - ans[j - 1]\n                        break\n                if not b:\n                    count = 3\n                    ans[n - 1] = 3\n        print(count)\n        ans = [str(i) for i in ans]\n        print(' '.join(ans))", "x = int(input())\nfor a in range(0, x):\n    y = int(input())\n    x1 = input().split()\n    d = []\n    l = 1\n    s = ''\n    if len(set(x1)) == 1:\n        print(1)\n        s = '1 ' * y\n    elif y % 2 == 0 or x1[-1] == x1[0]:\n        print(2)\n        s = '1 2 ' * int(y / 2)\n        if y % 2 == 1:\n            s += '1 '\n    else:\n        f = True\n        for c in range(0, y):\n            d.append(l)\n            if c != y - 1:\n                if not x1[c] == x1[c + 1] or not f:\n                    l = 3 - l\n                elif f:\n                    f = False\n        if not f:\n            print(2)\n        elif d[-1] == d[0]:\n            print(3)\n            d[-1] = 3\n    for each in d:\n        s += str(each) + ' '\n    print(s[:-1])", "from sys import stdin, stdout\nimport collections, heapq, bisect, math\ninput = stdin.readline\n\ndef rint():\n    return int(input())\n\ndef rstr():\n    return input().strip()\n\ndef rlstr():\n    return list(input().strip().split())\n\ndef rlint():\n    return list(map(int, input().split()))\n\ndef main():\n    n = rint()\n    fig = rlint()\n    flag = True\n    for i in range(n - 1):\n        if fig[i] != fig[i + 1]:\n            flag = False\n            break\n    if flag:\n        print(1)\n        for i in range(n):\n            print(1, end=' ')\n        print()\n        return\n    if n % 2 == 0:\n        print(2)\n        p = 1\n        for i in range(n):\n            print(p + 1, end=' ')\n            p = 1 - p\n        print()\n        return\n    for i in range(n):\n        if fig[i] == fig[(i + 1) % n]:\n            res = [0] * n\n            p = 1\n            for j in range(i + 1, n):\n                res[j] = p + 1\n                p = 1 - p\n            p = 1\n            for j in range(i, -1, -1):\n                res[j] = p + 1\n                p = 1 - p\n            print(2)\n            for i in range(n):\n                print(res[i], end=' ')\n            print()\n            return\n    print(3)\n    p = 1\n    for i in range(n - 1):\n        print(p + 1, end=' ')\n        p = 1 - p\n    print(3)\nfor _ in range(rint()):\n    main()", "q = int(input())\nfor i in range(q):\n    n = int(input())\n    an = input().split(' ')\n    res = []\n    color = 1\n    c = an[0]\n    same = True\n    for i in range(n):\n        if an[i] != c:\n            same = False\n        res.append(color)\n        if an[i] != an[(i + 1) % n]:\n            color = 3 - color\n    if same:\n        print('1')\n        print('1 ' * n)\n    else:\n        if an[0] != an[-1] and res[0] == res[-1]:\n            i = 0\n            double = False\n            for i in range(n):\n                if res[i] == res[i - 1] and an[i] == an[i - 1]:\n                    double = True\n                    break\n                else:\n                    prev = res[i]\n            if double:\n                for j in range(i):\n                    res[j] = 3 - res[j]\n                print('2')\n            else:\n                for i in range(n):\n                    if res[i] == 1:\n                        res[i] = 3\n                    else:\n                        break\n                print('3')\n        else:\n            print('2')\n        s = ''\n        for i in res:\n            s += str(i) + ' '\n        print(s[:-1])", "for _ in range(int(input())):\n    n = int(input())\n    ts = list(map(int, input().split()))\n    if n % 2 == 0:\n        if len(set(ts)) == 1:\n            print(1)\n            print(' '.join(map(str, [1] * n)))\n        else:\n            print(2)\n            print(' '.join(map(str, [1, 2] * (n // 2))))\n    else:\n        c = 1\n        col = [c]\n        first = ts[0]\n        prev = first\n        for t in ts[1:]:\n            if t != prev:\n                c = 2 if c == 1 else 1\n            col.append(c)\n            prev = t\n        if t != first and col[0] == c:\n            r = True\n        else:\n            r = False\n        c = 1\n        col = [c]\n        first = ts[0]\n        prev = first\n        for t in ts[1:]:\n            if t != prev:\n                c = 2 if c == 1 else 1\n            elif r:\n                r = False\n                c = 2 if c == 1 else 1\n            col.append(c)\n            prev = t\n        if t != first and col[0] == c:\n            c = 3\n            col[0] = c\n        print(max(col))\n        print(' '.join(map(str, col)))", "def solve(n, a):\n    if len(set(a)) == 1:\n        return [1] * n\n    arr = [1 if x % 2 == 0 else 2 for x in range(n)]\n    if n % 2 != 0 and a[0] != a[-1]:\n        for j in range(1, n):\n            if a[j] == a[j - 1]:\n                arr[j] = arr[j - 1]\n                for k in range(j + 1, n):\n                    arr[k] = 3 - arr[k - 1]\n                break\n        else:\n            arr[-1] = 3\n    return arr\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = solve(n, a)\n    print(max(ans))\n    print(*ans)", "a = int(input())\nfor i in range(a):\n    s = int(input())\n    z = list(map(int, input().split()))\n    z.append(z[-1])\n    save = 0\n    col = 1\n    flag = 0\n    ans = [1]\n    for i in range(1, len(z)):\n        if z[i] == z[i - 1]:\n            ans.append(ans[-1])\n        elif ans[-1] == 1:\n            ans.append(2)\n            col = 2\n        else:\n            ans.append(1)\n    for i in range(1, len(ans)):\n        if ans[i] == ans[i - 1]:\n            save = i\n            flag = 1\n            break\n    if ans[-1] != 1 or (ans[-1] == 1 and z[0] == z[-1]):\n        ans = ans[0:len(ans) - 1]\n        print(col)\n        print(' '.join(map(str, ans)))\n    elif flag == 0 or (flag == 1 and save == len(ans) - 1):\n        ans[-2] = 3\n        col = 3\n        ans = ans[0:len(ans) - 1]\n        print(col)\n        print(' '.join(map(str, ans)))\n    else:\n        if ans[save] == 1:\n            ans[save] = 2\n        else:\n            ans[save] = 1\n        for i in range(save + 1, len(ans)):\n            if z[i] == z[i - 1]:\n                ans[i] = ans[i - 1]\n            elif ans[i - 1] == 1:\n                ans[i] = 2\n            else:\n                ans[i - 1] == 2\n                ans[i] = 1\n        ans = ans[0:len(ans) - 1]\n        print(col)\n        print(' '.join(map(str, ans)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    count = set(ls)\n    ans = []\n    if len(count) == 1:\n        ans = [1] * n\n    elif n % 2 == 0:\n        ans = [1, 2] * (n // 2)\n        if n % 2 != 0:\n            ans.append(1)\n    else:\n        flag = 0\n        ind = 0\n        for i in range(n):\n            if ls[i] == ls[(i + 1) % n]:\n                flag = 1\n                ind = i\n                break\n        if flag == 1:\n            ans = [0 for i in range(n)]\n            for i in range(ind + 1, n):\n                ans[i] = i % 2 + 1\n            for i in range(ind, -1, -1):\n                ans[i] = (i - 1) % 2 + 1\n        elif n % 2 == 0:\n            ans = [1, 2] * ((n - 1) // 2)\n            ans.append(1)\n            ans.append(3)\n        else:\n            ans = [1, 2] * (n // 2)\n            ans.append(3)\n    print(len(set(ans)))\n    print(' '.join(map(str, ans)))", "q = int(input())\nfor _ in range(q):\n    n = int(input())\n    t = [int(x) for x in input().split()]\n    if min(t) == max(t):\n        print('1', '1 ' * n, sep='\\n')\n        continue\n    if n % 2 == 0:\n        print('2', '1 2 ' * (n // 2), sep='\\n')\n        continue\n    has_rep = False\n    current_color = 0\n    s = ''\n    for i in range(n - 1):\n        s += str(current_color + 1) + ' '\n        if t[i] == t[i + 1] and (not has_rep):\n            has_rep = True\n        else:\n            current_color = int(not current_color)\n    if has_rep:\n        s += str(current_color + 1) + ' '\n        ans = 2\n    elif t[-1] == t[0]:\n        s += '1'\n        ans = 2\n    else:\n        s += '3'\n        ans = 3\n    print(ans, s, sep='\\n')", "q = int(input())\nwhile q:\n    q -= 1\n    n = int(input())\n    anims = list(map(int, input().split(' ')))\n    a = len(anims)\n    if len(set(anims)) == 1:\n        print(1)\n        for i in range(a):\n            print(1, end=' ')\n        print()\n        continue\n    flag = False\n    i = 1\n    while i < a:\n        if anims[i - 1] == anims[i]:\n            flag = True\n            break\n        i += 1\n    while i < a and anims[i - 1] == anims[i]:\n        i += 1\n    i -= 1\n    if flag:\n        anims = anims[i:] + anims[:i]\n    cols = [j % 2 + 1 for j in range(a)]\n    if cols[0] == cols[-1]:\n        if anims[0] != anims[-1]:\n            cols[-1] = 3\n    if flag:\n        cols = cols[-i:] + cols[:-i]\n    print(len(set(cols)))\n    print(' '.join(map(str, cols)))", "q = int(input())\nwhile q > 0:\n    n = int(input())\n    t = [int(x) for x in input().split(' ')]\n    if len(set(t)) == 1:\n        print('1')\n        print(' '.join(['1'] * n))\n    elif n % 2 == 0:\n        print('2')\n        print(' '.join(['2 1'] * (n // 2)))\n    else:\n        t += [t[0]]\n        R = [[t[i], t[i + 1]] for i in range(n)]\n        L = [len(set(x)) for x in R]\n        if min(L) == 1:\n            print('2')\n            N = ['2' for i in range(n)]\n            j = L.index(1)\n            if j < n - 1:\n                N[j] = '1'\n                N[j + 1] = '1'\n                i = 0\n                for i in range(j):\n                    if i % 2 == j % 2:\n                        N[i] = '1'\n                        i = i + 1\n                    else:\n                        i = i + 1\n                i = j + 1\n                for i in range(j + 1, n):\n                    if i % 2 == (j + 1) % 2:\n                        N[i] = '1'\n                        i = i + 1\n                    else:\n                        i = i + 1\n            else:\n                N[j] = '1'\n                N[0] = '1'\n                for i in range(1, j):\n                    if i % 2 == 1:\n                        N[i] = '2'\n                        i = i + 1\n                    else:\n                        N[i] = '1'\n                        i = i + 1\n            print(' '.join(N))\n        else:\n            print('3')\n            print(' '.join(['1 2'] * (n // 2) + ['3']))\n    q = q - 1", "for _ in range(int(input())):\n    n = int(input())\n    t = list(map(int, input().split()))\n    k = 0\n    c = [0] * n\n    repeat_index = -1\n    for i in range(-1, n - 1):\n        if t[i] == t[i + 1]:\n            repeat_index = i + 1\n            break\n    if repeat_index > -1:\n        k = 1\n        color = 1\n        c[repeat_index] = color\n        for i in range(repeat_index - n, repeat_index - 1):\n            if t[i] == t[i + 1]:\n                color = 1\n            else:\n                k = 2\n                color = 3 - color\n            c[i + 1] = color\n    else:\n        k = 2\n        for i in range(0, n, 2):\n            c[i] = 1\n        for i in range(1, n, 2):\n            c[i] = 2\n        if n % 2:\n            k = 3\n            c[-1] = 3\n    print(k)\n    print(' '.join((str(i) for i in c)))", "q = int(input())\nfor i in range(q):\n    n = int(input())\n    t = [int(i) for i in input().split(' ')]\n    if t.count(t[0]) == n:\n        print(1)\n        for i in range(n):\n            print(1, end=' ')\n    elif n % 2 == 0:\n        print(2)\n        for i in range(n):\n            print(i % 2 + 1, end=' ')\n    else:\n        s = -1\n        for i in range(0, len(t)):\n            if t[i] == t[i - 1]:\n                s = i\n        if s != -1:\n            print(2)\n            for i in range(s):\n                print(i % 2 + 1, end=' ')\n            for i in range(s, n):\n                print((i + 1) % 2 + 1, end=' ')\n        else:\n            print(3)\n            for i in range(n - 1):\n                print(i % 2 + 1, end=' ')\n            print(3, end=' ')\n    print()", "num_inp = lambda : int(input())\narr_inp = lambda : list(map(int, input().split()))\nsp_inp = lambda : map(int, input().split())\nstr_inp = lambda : input()\nfrom collections import deque\nfor _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    if len(set(s)) == 1:\n        print(1)\n        print('1 ' * n)\n    elif n % 2 == 0:\n        print(2)\n        print('1 2 ' * (n // 2))\n    else:\n        ans = []\n        k = f = 1\n        for i in range(n):\n            i1 = (i - 1) % n\n            if f and s[i] == s[(i - 1) % n]:\n                ans.append(3 - k)\n                f = 0\n            else:\n                ans.append(k)\n                k = 3 - k\n        if f:\n            print(3)\n            print('1 2 ' * (n // 2) + '3')\n            continue\n        else:\n            print(2)\n            print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    if arr == [arr[0] for i in range(n)]:\n        print(1)\n        print(*[1 for i in range(n)])\n        continue\n    ans = [1]\n    for i in range(1, n - 1):\n        if arr[i] == arr[i - 1]:\n            ans.append(ans[-1])\n        else:\n            ans.append(3 - ans[-1])\n    if arr[-1] == arr[-2] and arr[-1] == arr[0]:\n        ans.append(ans[-1])\n        print(2)\n        print(*ans)\n    elif arr[-1] == arr[-2] and arr[-1] != arr[0]:\n        ans.append(3 - ans[0])\n        print(2)\n        print(*ans)\n        k = 2\n    elif arr[-1] != arr[-2] and arr[-1] == arr[0]:\n        ans.append(3 - ans[-1])\n        print(2)\n        print(*ans)\n        k = 2\n    elif ans[-1] == ans[0]:\n        ans.append(3 - ans[0])\n        print(2)\n        print(*ans)\n    else:\n        need = 1\n        for i in range(1, n - 1):\n            if ans[i] == ans[i - 1]:\n                ans = [ans[j] for j in range(i)] + [3 - ans[j] for j in range(i, n - 1)]\n                ans.append(3 - ans[0])\n                k = 2\n                need = 0\n                break\n        if need == 0:\n            print(2)\n            print(*ans)\n        else:\n            print(3)\n            print(*ans + [3])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = set(a)\n    if len(b) == 1:\n        print('1')\n        for i in range(n):\n            print('1', end=' ')\n    elif n % 2 == 1 and a[0] != a[-1] and (a[-1] != a[-2]):\n        check = False\n        for i in range(n - 1):\n            if a[i] == a[i + 1]:\n                check = True\n                C = i\n                break\n        if check == True:\n            print('2')\n            for i in range(C + 1):\n                if i % 2 == 0:\n                    ab = 1\n                    print('1', end=' ')\n                else:\n                    ab = 2\n                    print('2', end=' ')\n            print(ab, end=' ')\n            for i in range(C + 2, n):\n                if i % 2 == 0:\n                    print('2', end=' ')\n                else:\n                    print('1', end=' ')\n        else:\n            print('3')\n            for i in range((n - 1) // 2):\n                print('1 2 ', end='')\n            print('3', end='')\n    elif n % 2 == 1 and a[0] != a[-1] and (a[-1] == a[-2]):\n        print('2')\n        for i in range((n - 1) // 2):\n            print('1 2 ', end='')\n        print('2', end='')\n    else:\n        print('2')\n        for i in range(1, n + 1):\n            if i % 2 == 0:\n                print('2', end=' ')\n            else:\n                print('1', end=' ')\n    print('')", "for _ in range(int(input())):\n    n = int(input())\n    L = input().split()\n    r = ['2' if i % 2 else '1' for i in range(n)]\n    if len(set(L)) == 1:\n        N = 1\n        r = ['1'] * n\n    elif n % 2 == 0 or L[0] == L[-1]:\n        N = 2\n    else:\n        T = 0\n        for i in range(1, n):\n            if L[i] == L[i - 1]:\n                T = 1\n                break\n        if T:\n            N = 2\n            r[i:] = r[i - 1:-1]\n            r[-1] = '2'\n        else:\n            N = 3\n            r[-1] = '3'\n    print(N)\n    print(*r)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    k = [1]\n\n    def chkList(lst):\n        return len(set(lst)) == 1\n    flag = 0\n    if chkList(l) == True:\n        print(1)\n        print('1 ' * len(l))\n    elif len(l) % 2 == 0:\n        print(2)\n        print('1 2 ' * int(len(l) / 2))\n    else:\n        s = ''\n        if l[0] == l[-1]:\n            flag = 2\n        else:\n            for i in range(1, len(l)):\n                if l[i] == l[i - 1]:\n                    flag = 1\n                    pos = i\n                    break\n                else:\n                    continue\n        if flag == 2:\n            print(2)\n            print('1 2 ' * int((len(l) - 1) / 2) + '1')\n        elif flag == 1:\n            print(2)\n            for i in range(1, len(l)):\n                if flag == 1 and pos == i:\n                    k.append(k[-1])\n                    flag = 0\n                elif k[-1] == 1:\n                    k.append(2)\n                else:\n                    k.append(1)\n            for i in k:\n                s += str(i) + ' '\n            print(s)\n        else:\n            print(3)\n            print('1 2 ' * int((len(l) - 1) / 2), end='')\n            print(3)", "def changed(colors, types, n):\n    index = -1\n    for i in range(n - 1, 0, -1):\n        if types[i] == types[i - 1]:\n            index = i - 1\n            break\n    if index == -1:\n        colors[n - 1] = 3\n        return True\n    for i in range(index + 1, n):\n        if colors[i - 1] == 1:\n            colors[i] = 2\n        else:\n            colors[i] = 1\n    return False\n\ndef solve(types, n, ans):\n    colors = []\n    colors.append(1)\n    k = 1\n    for i in range(1, n):\n        if types[i] != types[i - 1]:\n            k += 1\n            if colors[-1] == 1:\n                colors.append(2)\n            else:\n                colors.append(1)\n        else:\n            colors.append(colors[-1])\n    k = min(k, 2)\n    if colors[n - 1] == colors[0] and types[n - 1] != types[0]:\n        if changed(colors, types, n):\n            k += 1\n    ans.append([k])\n    ans.append(colors)\n\ndef main():\n    ans = []\n    q = int(input())\n    for i in range(q):\n        n = int(input())\n        types = list(map(int, input().split()))\n        solve(types, n, ans)\n    for i in ans:\n        for j in i:\n            print(j, end=' ')\n        print()\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef solve(n, T):\n    c = [1] * n\n    ans = 1\n    doubled = False\n    doubled_idx = 0\n    for i in range(n):\n        if i == 0:\n            c[0] = 1\n        elif T[i] != T[i - 1]:\n            c[i] = 3 - c[i - 1]\n            ans = 2\n        elif T[i] == T[i - 1]:\n            c[i] = c[i - 1]\n            doubled_idx = i\n            doubled = True\n        if i == n - 1 and c[i] == c[0] and (T[i] != T[0]) and (not doubled):\n            c[i] = 3\n            ans = 3\n        elif i == n - 1 and c[i] == c[0] and (T[i] != T[0]) and doubled:\n            for j in range(doubled_idx, n):\n                c[j] = 3 - c[j]\n    return (ans, c)\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    T = list(map(int, input().split()))\n    (clr, c) = solve(n, T)\n    print(clr)\n    print(*c)", "def solve():\n    n = int(input())\n    types = list(map(int, input().split()))\n    one_type = True\n    consecutive_type = None\n    for i in range(1, n):\n        if types[i] == types[i - 1]:\n            consecutive_type = i\n        else:\n            one_type = False\n    if one_type:\n        print(1)\n        print(*[1] * n)\n    else:\n        c = [i % 2 + 1 for i in range(n)]\n        maxc = 2\n        if n % 2 == 1:\n            if types[-1] == types[-2]:\n                c[-1] = c[-2]\n            elif types[-1] == types[0]:\n                c[-1] = c[0]\n            elif consecutive_type is not None:\n                for i in range(consecutive_type, n):\n                    c[i] = c[i] % 2 + 1\n            else:\n                c[-1] = 3\n                maxc = 3\n        print(maxc)\n        print(*c)\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "import math, sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    l = list(map(int, sys.stdin.readline().split()))\n    if len(set(l)) == 1:\n        print(1)\n        ans = [1] * n\n        print(*ans)\n    elif n % 2 == 0:\n        print(2)\n        for i in range(n):\n            if i % 2 == 0:\n                print('1', end=' ')\n            else:\n                print('2', end=' ')\n        print()\n    else:\n        flag = 0\n        ans = []\n        c = 0\n        for i in range(n - 1):\n            if l[i] == l[i + 1]:\n                if len(ans) == 0:\n                    ans.append(1)\n                    ans.append(1)\n                elif ans[-1] == 1:\n                    ans.append(2)\n                    ans.append(2)\n                else:\n                    ans.append(1)\n                    ans.append(1)\n                flag = 1\n                c = i + 1\n                break\n            elif len(ans) == 0:\n                ans.append(1)\n            elif ans[-1] == 1:\n                ans.append(2)\n            else:\n                ans.append(1)\n        if flag == 0:\n            if l[0] == l[-1]:\n                ans.append(1)\n                print(2)\n            else:\n                ans.append(3)\n                print(3)\n            print(*ans)\n        else:\n            for i in range(c + 1, n):\n                if ans[-1] == 1:\n                    ans.append(2)\n                else:\n                    ans.append(1)\n            print(2)\n            print(*ans)", "q = int(input())\nfor i in range(q):\n    n = int(input())\n    arr = input().split()\n    T1 = 1\n    T2 = True\n    ans1 = [1]\n    ans2 = [1]\n    for j in range(1, n):\n        if arr[j] != arr[j - 1]:\n            T1 *= -1\n        if T1 == 1:\n            ans1.append(1)\n        else:\n            ans1.append(2)\n    T1 = 1\n    for j in range(1, n):\n        if arr[j - 1] == arr[j] and T2:\n            T1 *= -1\n            T2 = False\n        if arr[j] != arr[j - 1]:\n            T1 *= -1\n        if T1 == 1:\n            ans2.append(1)\n        else:\n            ans2.append(2)\n    if max(arr) == min(arr):\n        print(1)\n        print(' '.join(map(str, [1] * n)))\n    if arr[0] == arr[-1] and max(arr) != min(arr):\n        print(2)\n        print(' '.join(map(str, ans1)))\n    if arr[0] != arr[-1] and ans1[-1] != ans1[0]:\n        print(2)\n        print(' '.join(map(str, ans1)))\n    elif arr[0] != arr[-1] and ans2[-1] != ans2[0]:\n        print(2)\n        print(' '.join(map(str, ans2)))\n    if arr[0] != arr[-1] and ans2[-1] == ans2[0] and (ans1[-1] == ans1[0]):\n        print(3)\n        print(' '.join(map(str, ans1[:-1] + [3])))", "n = int(input())\nfor x in range(n):\n    a = int(input())\n    t = list(map(int, input().split()))\n    s = ''\n    if min(t) == max(t):\n        for y in range(a):\n            s += '1 '\n        print(1)\n        print(s)\n        continue\n    if a % 2 == 0:\n        s = ''\n        for y in range(a // 2):\n            s += '1 2 '\n        print(2)\n        print(s)\n        continue\n    else:\n        neigh = False\n        for y in range(1, a):\n            if t[y] == t[y - 1]:\n                neigh = True\n                break\n        if neigh == False:\n            s = ''\n            for y in range(a // 2):\n                s += '1 2 '\n            if t[0] != t[-1]:\n                print(3)\n                print(s + '3')\n                continue\n            else:\n                print(2)\n                print(s + '1')\n                continue\n        else:\n            s = '1 '\n            col = 1\n            change = False\n            for y in range(1, a):\n                if t[y] == t[y - 1] and change == False:\n                    change = True\n                    s += str(col) + ' '\n                    continue\n                if col == 1:\n                    col = 2\n                elif col == 2:\n                    col = 1\n                s += str(col) + ' '\n            print(2)\n            print(s)", "def dif(n, a):\n    if a.count(a[0]) == n:\n        print('1')\n        print('1 ' * n)\n    elif n % 2 == 0:\n        print('2')\n        print('1 2 ' * int(n / 2))\n    elif a[0] == a[-1]:\n        i = 0\n        f1 = 1\n        print('2')\n        while i < n:\n            if f1 == 1:\n                print('1 ', end='')\n            else:\n                print('2 ', end='')\n            f1 *= -1\n            i += 1\n        print('')\n    else:\n        f = 0\n        j = 0\n        for i in range(n - 1, 0, -1):\n            if a[i] == a[i - 1]:\n                f = 1\n                j = i\n                break\n        if f == 0:\n            f1 = 1\n            print('3')\n            i = 0\n            while i < n - 1:\n                if f1 == 1:\n                    print('1 ', end='')\n                else:\n                    print('2 ', end='')\n                f1 *= -1\n                i += 1\n            print('3')\n        else:\n            f1 = 1\n            print('2')\n            i = 0\n            while i < n:\n                if i == j:\n                    f1 *= -1\n                if f1 == 1:\n                    print('1 ', end='')\n                else:\n                    print('2 ', end='')\n                f1 *= -1\n                i += 1\n            print('')\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dif(n, a)", "from heapq import *\nfrom collections import deque\nimport sys\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    q = II()\n    for _ in range(q):\n        n = II()\n        tt = LI()\n        cc = [0] * n\n        cc[0] = 1\n        cnt = 1\n        same = -1\n        for i in range(1, n):\n            if tt[i - 1] == tt[i]:\n                cc[i] = cc[i - 1]\n                same = i\n            else:\n                cc[i] = 3 - cc[i - 1]\n                cnt = 2\n        if tt[0] != tt[-1] and cc[0] == cc[-1]:\n            if same == -1:\n                cnt = 3\n                for i in range(n):\n                    if cc[i] == 2:\n                        break\n                    cc[i] = 3\n            else:\n                cc[same] = 3 - cc[same]\n                for i in range(same + 1, n):\n                    if tt[i - 1] == tt[i]:\n                        cc[i] = cc[i - 1]\n                    else:\n                        cc[i] = 3 - cc[i - 1]\n        print(cnt)\n        print(*cc)\nmain()", "def solve(ans):\n    length = int(input())\n    li = [int(x) for x in input().split()]\n    for i in range(length - 1):\n        if li[i] != li[i + 1]:\n            break\n    else:\n        ans.append(1)\n        temp = [1 for i in range(length)]\n        ans.append(temp)\n        return\n    if length % 2 == 0:\n        ans.append(2)\n        temp = [1, 2] * (length // 2)\n        ans.append(temp)\n    else:\n        temp = []\n        if li[i] == li[-1]:\n            ans.append(2)\n            temp = [1, 2] * ((length - 1) // 2) + [1]\n            ans.append(temp)\n        else:\n            temp = [1]\n            for i in range(1, length):\n                if li[i] == li[i - 1]:\n                    ans.append(2)\n                    temp.append(temp[-1])\n                    for j in range(i + 1, length):\n                        if temp[-1] == 1:\n                            temp.append(2)\n                        else:\n                            temp.append(1)\n                    ans.append(temp)\n                    break\n                elif temp[-1] == 1:\n                    temp.append(2)\n                else:\n                    temp.append(1)\n            else:\n                temp[-1] = 3\n                ans.append(3)\n                ans.append(temp)\n    return\nn = int(input())\nans = []\nfor i in range(n):\n    solve(ans)\nfor i in range(2 * n):\n    if i % 2 == 0:\n        print(ans[i])\n    else:\n        for ele in ans[i]:\n            print(ele, end=' ')\n        print()", "t = int(input())\n\ndef x(L, n):\n    count = 1\n    for i in range(1, n):\n        if L[i] != L[i - 1]:\n            count += 1\n    return count\nfor _ in range(t):\n    n = int(input())\n    L = list(map(int, input().split()))\n    l = len(set(L))\n    if l == 1:\n        print(1)\n        print('1 ' * n)\n    elif n % 2 == 0:\n        count = 2\n        s = '1 2 ' * int(n // 2)\n        print(count)\n        print(s)\n    elif L[-1] == L[0]:\n        count = 2\n        s = '1 2 ' * int(n // 2)\n        s += '1'\n        print(count)\n        print(s)\n    elif x(L, n) == n:\n        count = 3\n        s = '1 2 ' * int(n // 2)\n        s += '3'\n        print(count)\n        print(s)\n    else:\n        s = '1 '\n        p = 1\n        count = 1\n        co = 0\n        for i in range(1, n):\n            if L[i] == L[i - 1] and co == 0:\n                s += str(p)\n                s += ' '\n                co += 1\n            else:\n                p = p % 2\n                p += 1\n                s += str(p)\n                s += ' '\n        print(2)\n        print(s)", "for _ in range(int(input())):\n    N = int(input())\n    L = list(map(int, input().split()))\n    r = ['2' if i % 2 else '1' for i in range(N)]\n    if len(set(L)) == 1:\n        ans = [1] * N\n        print(1)\n        print(*ans)\n    else:\n        if N % 2 == 0:\n            ans = [1, 2] * (N // 2)\n            print(2)\n            print(*ans)\n        if N % 2 != 0:\n            if L[N - 1] == L[0]:\n                ans = [1, 2] * (N // 2)\n                ans.append(1)\n                print(2)\n                print(*ans)\n            else:\n                FLAG = 0\n                for i in range(N):\n                    if L[i] == L[i - 1]:\n                        FLAG = 1\n                        break\n                if FLAG:\n                    r[i:] = r[i - 1:-1]\n                    print(2)\n                    print(*r)\n                else:\n                    print(3)\n                    r[N - 1] = 3\n                    print(*r)", "def f(a):\n    n = len(a)\n    if len(set(a)) == 1:\n        print(1)\n        return [1] * len(a)\n    ans = [None] * len(a)\n    if n % 2 == 0:\n        print(2)\n        for i in range(n):\n            print(i % 2 + 1, end=' ')\n        return ''\n    for i in range(len(a)):\n        if a[i] == a[(i + 1) % n]:\n            print(2)\n            j = 0\n            for pos in range(i + 1, n):\n                ans[pos] = j + 1\n                j ^= 1\n            j = 0\n            for pos in range(i, -1, -1):\n                ans[pos] = j + 1\n                j ^= 1\n            return ans\n    print(3)\n    j = 0\n    for i in range(n):\n        ans[i] = j + 1\n        j ^= 1\n    ans[-1] = 3\n    return ans\nfor i in range(int(input())):\n    n = input()\n    a = list(map(int, input().strip().split()))\n    print(*f(a))", "from collections import defaultdict, deque\nfrom heapq import heappush, heappop\nfrom itertools import permutations, accumulate\nimport sys\nimport math\nimport bisect\n\ndef LI():\n    return [int(x) for x in sys.stdin.readline().split()]\n\ndef I():\n    return int(sys.stdin.readline())\n\ndef LS():\n    return [list(x) for x in sys.stdin.readline().split()]\n\ndef S():\n    res = list(sys.stdin.readline())\n    if res[-1] == '\\n':\n        return res[:-1]\n    return res\n\ndef IR(n):\n    return [I() for i in range(n)]\n\ndef LIR(n):\n    return [LI() for i in range(n)]\n\ndef SR(n):\n    return [S() for i in range(n)]\n\ndef LSR(n):\n    return [LS() for i in range(n)]\nsys.setrecursionlimit(1000000)\nmod = 1000000007\n\ndef solve():\n    t = I()\n    for _ in range(t):\n        n = I()\n        a = LI()\n        if len(set(a)) == 1:\n            print(1)\n            print(*[1] * n)\n            continue\n        f = [1 if not i & 1 else 2 for i in range(n)]\n        if not n & 1:\n            print(max(f))\n            print(*f)\n            continue\n        if a[0] != a[-1]:\n            a += a\n            for i in range(n):\n                if a[i] == a[i + 1]:\n                    f = [f[j] if j <= i else 3 - f[j] for j in range(n)]\n                    break\n            else:\n                f[-1] = 3\n        print(max(f))\n        print(*f)\n    return\nsolve()", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = []\n    if len(set(a)) == 1:\n        c = [1] * n\n    else:\n        c = [1 if i % 2 == 0 else 2 for i in range(n)]\n        if c[0] == c[-1] and a[0] != a[-1]:\n            for i in range(1, n):\n                if a[i] == a[i - 1]:\n                    c[i] = c[i - 1]\n                    for j in range(i + 1, n):\n                        c[j] = 3 - c[j - 1]\n                    break\n            else:\n                c[-1] = 3\n    print(len(set(c)))\n    print(*c)", "z = int(input())\nfor i in range(z):\n    n = int(input())\n    m = list(map(int, input().split()))\n    k = 0\n    item = 1\n    answermas = [1]\n    ind = -1\n    for i in range(1, n):\n        if m[i] != m[i - 1]:\n            k += 1\n            if item == 1:\n                item = 2\n            else:\n                item = 1\n        elif ind == -1:\n            ind = i\n        answermas.append(item)\n    if k == 0:\n        answer = 1\n    elif k % 2 == 0 and m[0] != m[-1] and (k == n - 1):\n        answer = 3\n        answermas[-1] = 3\n    else:\n        answer = 2\n        if k % 2 == 0 and m[0] != m[-1]:\n            r = 0\n            for i in range(ind, n):\n                if answermas[i] == 1:\n                    answermas[i] = 2\n                else:\n                    answermas[i] = 1\n    print(answer)\n    print(*answermas)", "lenN = int(input())\nfor j in range(lenN):\n    n = int(input())\n    arr = input().split()\n    res = []\n    wasPair = False\n    lastPos = -1\n    colorAmount = 1\n    res.append(1)\n    for i in range(1, len(arr)):\n        if arr[i] != arr[i - 1]:\n            if res[i - 1] == 1:\n                res.append(2)\n                colorAmount = 2\n            else:\n                res.append(1)\n        else:\n            wasPair = True\n            lastPos = i\n            res.append(res[i - 1])\n    if arr[len(arr) - 1] != arr[0] and res[len(arr) - 1] == res[0]:\n        if not wasPair:\n            res[len(arr) - 1] = 3\n            colorAmount = 3\n        else:\n            if res[lastPos - 1] == 1:\n                res[lastPos] = 2\n            else:\n                res[lastPos] = 1\n            for i in range(lastPos + 1, len(arr)):\n                if arr[i] != arr[i - 1]:\n                    if res[i - 1] == 1:\n                        res[i] = 2\n                    else:\n                        res[i] = 1\n                else:\n                    res[i] = res[i - 1]\n    print(colorAmount)\n    print(*res)", "def solve(t):\n    l = len(t)\n    if t.count(t[0]) == l:\n        print(1)\n        print('1 ' * l)\n        return\n    if l % 2 == 0:\n        print(2)\n        for i in range(l):\n            print(i % 2 + 1, end=' ')\n        print()\n        return\n    res = []\n    pr = 1\n    flag = True\n    for i in range(l - 1):\n        if t[i] == t[i + 1] and flag:\n            res.append(pr)\n            flag = False\n        else:\n            res.append(pr)\n            pr = 2 if pr == 1 else 1\n    if t[0] != t[-1] and res[0] == pr:\n        res.append(3)\n    else:\n        res.append(pr)\n    if 3 in res:\n        print(3)\n    elif 2 in res:\n        print(2)\n    else:\n        print(1)\n    print(*res)\nfor _ in range(int(input())):\n    n = int(input())\n    t = list(map(int, input().split()))\n    solve(t)", "def solve(n, a):\n    if len(set(a)) == 1:\n        return [1] * n\n    arr = [1 if x % 2 == 0 else 2 for x in range(n)]\n    if n % 2 != 0 and a[0] != a[-1]:\n        for j in range(1, n):\n            if a[j] == a[j - 1]:\n                arr[j] = arr[j - 1]\n                for k in range(j + 1, n):\n                    arr[k] = 3 - arr[k - 1]\n                break\n        else:\n            arr[-1] = 3\n    return arr\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = solve(n, a)\n    print(max(ans))\n    print(*ans)", "q = int(input())\nfor test in range(0, q):\n    n = int(input())\n    t = input().split()\n    if t[0] == t[n - 1]:\n        c = 0\n        for i in range(0, n - 1):\n            if t[i] != t[i + 1]:\n                c = 1\n                break\n        if c == 1:\n            print(2)\n            for i in range(0, n):\n                print(i % 2 + 1, end=' ')\n        else:\n            print(1)\n            for i in range(0, n):\n                print(1, end=' ')\n        print()\n    else:\n        if n % 2 == 0:\n            print(2)\n            for i in range(0, n):\n                print(i % 2 + 1, end=' ')\n        else:\n            c = -1\n            for i in range(0, n - 1):\n                if t[i] == t[i + 1]:\n                    c = i + 1\n                    break\n            if c != -1:\n                print(2)\n                for i in range(0, c):\n                    print(i % 2 + 1, end=' ')\n                for i in range(c, n):\n                    print((i + 1) % 2 + 1, end=' ')\n            else:\n                print(3)\n                for i in range(0, n - 1):\n                    print(i % 2 + 1, end=' ')\n                print(3, end='')\n        print()", "R = lambda : map(int, input().split())\nt = int(input())\n\ndef solve(a, n):\n    s = set(a)\n    if len(s) == 1:\n        print(1)\n        print(*[1 for _ in range(n)])\n        return\n    if n % 2 == 0:\n        print(2)\n        print(*[1 + k % 2 for k in range(n)])\n        return\n    found = -1\n    for i in range(n):\n        if a[i] == a[i - 1]:\n            found = i\n            break\n    if found == -1:\n        print(3)\n        ans = [1 + k % 2 for k in range(n)]\n        ans[-1] = 3\n        print(*ans)\n        return\n    print(2)\n    ans = [1] * n\n    for i in range(found, found + n, 2):\n        ans[i % n] = 2\n    print(*ans)\n    return\nfor _ in range(t):\n    n = int(input())\n    a = list(R())\n    solve(a, n)", "n = int(input())\nfor i in range(n):\n    input()\n    lst = list(map(int, input().split()))\n    sol = []\n    sol.append(1)\n    col = 1\n    modify = False\n    if lst[-1] == lst[1]:\n        modify = True\n        lst = [lst[-1]] + lst[:-1]\n    pos = -1\n    for i in range(1, len(lst)):\n        if lst[i] != lst[i - 1]:\n            if col == 1:\n                col = 2\n            else:\n                col = 1\n        else:\n            pos = i\n        sol.append(col)\n    if lst[0] != lst[-1] and sol[0] == sol[-1]:\n        if pos == -1:\n            sol[-1] = 3\n        else:\n            for i in range(pos, len(lst)):\n                if sol[i] == 1:\n                    sol[i] = 2\n                else:\n                    sol[i] = 1\n    if modify:\n        sol = sol[1:] + [sol[0]]\n    print(max(sol))\n    print(*sol)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = [1] * n\n    flag = True\n    for i in range(n):\n        if i > 0:\n            if a[i] == a[i - 1]:\n                s[i] = s[i - 1]\n            else:\n                s[i] = 3 - s[i - 1]\n            if s[i] != 1:\n                flag = False\n    if s[0] != s[-1] or a[0] == a[-1]:\n        if flag:\n            return (1, s)\n        else:\n            return (2, s)\n    for i in range(n):\n        if i > 0 and a[i] == a[i - 1]:\n            s[i - 1] = 1\n            s[i] = 2\n            for j in range(i - 2, -1, -1):\n                if a[j] == a[j + 1]:\n                    s[j] = s[j + 1]\n                else:\n                    s[j] = 3 - s[j + 1]\n            for j in range(i + 1, n, 1):\n                if a[j] == a[j - 1]:\n                    s[j] = s[j - 1]\n                else:\n                    s[j] = 3 - s[j - 1]\n            break\n    if s[0] != s[-1] or a[0] == a[-1]:\n        return (2, s)\n    s[-1] = 3\n    return (3, s)\nT = int(input())\nfor _ in range(T):\n    (k, s) = solve()\n    print(k)\n    print(*s)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    temp = [i for i in arr]\n    temp.sort()\n    if temp[0] == temp[-1]:\n        print(1)\n        ans = [1] * n\n        print(*ans)\n    elif n % 2 == 0:\n        print(2)\n        ans = [1, 2] * (n // 2)\n        print(*ans)\n    else:\n        flag = 0\n        for i in range(n - 1):\n            if arr[i] == arr[i + 1]:\n                flag = 1\n                che = i + 1\n                break\n        if flag == 1 or arr[0] == arr[-1]:\n            if flag == 1:\n                print(2)\n                ans = [1, 2] * (n // 2)\n                ans.insert(che, ans[che - 1])\n                print(*ans)\n            else:\n                print(2)\n                ans = [1, 2] * (n // 2)\n                ans.append(1)\n                print(*ans)\n        else:\n            print(3)\n            ans = [1, 2] * (n // 2)\n            ans += [3]\n            print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    t = [int(i) for i in input().split()]\n    a = [1]\n    for i in range(1, n):\n        if t[i] == t[i - 1]:\n            a.append(a[i - 1])\n        elif a[-1] == 2:\n            a.append(1)\n        else:\n            a.append(2)\n    if a[n - 1] == a[0] and t[n - 1] != t[0]:\n        flag = 0\n        ind = -1\n        for i in range(1, n):\n            if a[i - 1] == a[i]:\n                flag = 1\n                ind = i\n        if flag == 1:\n            for i in range(ind, n):\n                a[i] = 3 - a[i]\n            print(max(a))\n            print(*a)\n        else:\n            a[n - 1] = 3\n            print(3)\n            print(*a)\n    else:\n        print(max(a))\n        print(*a)", "t = int(input())\nwhile t != 0:\n    t -= 1\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    ff = [0] * n\n    ff[0] = 1\n    kk = -1\n    qq = 1\n    for i in range(1, n):\n        if arr[i] == arr[i - 1]:\n            ff[i] = ff[i - 1]\n            kk = i\n        else:\n            qq = 2\n            ff[i] = 3 - ff[i - 1]\n    if ff[n - 1] == ff[0] and kk != -1 and (arr[n - 1] != arr[0]):\n        for i in range(kk, n):\n            ff[i] = 3 - ff[i]\n    elif ff[n - 1] == ff[0] and kk == -1 and (arr[n - 1] != arr[0]):\n        qq = 3\n        ff[n - 1] = 3\n    print(qq)\n    print(*ff)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    col = [1]\n    a = -1\n    for i in range(1, n):\n        if arr[i] == arr[i - 1]:\n            a = i - 1\n            col.append(col[-1])\n        else:\n            col.append(col[-1] ^ 3)\n    if col[0] == col[-1] and arr[0] != arr[-1]:\n        if a != -1:\n            for j in range(a + 1, n):\n                col[j] ^= 3\n            print(2)\n            print(*col)\n        else:\n            col.pop()\n            col.append(3)\n            print(3)\n            print(*col)\n    else:\n        print(len(set(col)))\n        print(*col)", "for _ in range(int(input())):\n    n = int(input())\n    x = input().split()\n    y = x[1:]\n    y.append(x[0])\n    eq = sum((u == v for (u, v) in zip(x, y)))\n    ne = n - eq\n    if ne == 0:\n        print(1)\n        print(*[1] * n)\n    elif ne % 2 == 0:\n        print(2)\n        res = []\n        cur = 1\n        for (u, v) in zip(x, y):\n            res.append(cur)\n            if u != v:\n                cur = 3 - cur\n        print(*res)\n    elif eq > 0:\n        print(2)\n        res = []\n        spl = True\n        cur = 1\n        for (u, v) in zip(x, y):\n            res.append(cur)\n            if u != v:\n                cur = 3 - cur\n            elif spl:\n                cur = 3 - cur\n                spl = False\n        print(*res)\n    else:\n        print(3)\n        print(1, *[2, 3] * (n // 2))", "for p in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    out = list()\n    out.append(1)\n    color = 1\n    k = -1\n    for i in range(1, n):\n        if a[i] == a[i - 1]:\n            out.append(color)\n            k = i\n        else:\n            color = color % 2 + 1\n            out.append(color)\n    if out[n - 1] == out[0] and k > -1 and (a[n - 1] != a[0]):\n        for i in range(k, n):\n            out[i] = out[i] % 2 + 1\n    elif out[n - 1] == out[0] and a[n - 1] != a[0]:\n        out[n - 1] = 3\n    print(max(out))\n    print(*out)", "for _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    array = array + [array[0]]\n    if len(set(array)) == 1:\n        print(1)\n        print(*[1] * n)\n    elif n % 2 == 0:\n        print(2)\n        print(*[1, 2] * (n // 2))\n    else:\n        flag = -1\n        for i in range(1, n + 1):\n            if array[i] == array[i - 1]:\n                flag = i\n                break\n        if flag == -1:\n            print(3)\n            print(*[1, 2] * (n // 2), 3)\n        else:\n            x = 0\n            res = [0]\n            for i in range(1, n):\n                if i != flag:\n                    x = (x + 1) % 2\n                res.append(x)\n            res = [r + 1 for r in res]\n            print(2)\n            print(*res)", "for q in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    ans = [0] * n\n    y = list(set(x))\n    if len(y) == 1:\n        for i in range(n):\n            ans[i] = 1\n    elif len(x) % 2 == 0:\n        for i in range(n):\n            if i % 2 == 0:\n                ans[i] = 1\n                last = 1\n            else:\n                ans[i] = 2\n                last = 2\n    else:\n        ans[0] = 1\n        last = 1\n        flag = True\n        for i in range(1, n - 1):\n            if x[i] == x[i - 1] and flag:\n                ans[i] = last\n                flag = False\n            else:\n                if last == 1:\n                    last = 2\n                else:\n                    last = 1\n                ans[i] = last\n        if len(x) > 1:\n            if last == 1:\n                ans[-1] = 2\n            elif last == 2 and x[-1] == x[-2]:\n                ans[-1] = 2\n            elif last == 2 and x[-1] == x[0]:\n                ans[-1] = 1\n            else:\n                ans[-1] = 3\n    ans1 = list(set(ans))\n    print(len(ans1))\n    print(*ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = Counter(l)\n    if len(x) == 1:\n        print(1)\n        z = [1] * n\n        print(*z)\n    elif n % 2 == 0:\n        print(2)\n        z = [1, 2] * (n // 2)\n        print(*z)\n    else:\n        f = 0\n        idx = 0\n        for t in range(1, n):\n            if l[t] == l[t - 1]:\n                f = 1\n                idx = t\n                break\n        if f == 1:\n            print(2)\n            z = [1, 2] * (n // 2)\n            z.append(1)\n            z[idx] = z[idx - 1]\n            for t in range(idx + 1, n):\n                if z[t - 1] == 1:\n                    z[t] = 2\n                elif z[t - 1] == 2:\n                    z[t] = 1\n            print(*z)\n        else:\n            z = [1, 2] * (n // 2)\n            z.append(1)\n            if l[0] == l[-1]:\n                print(2)\n                print(*z)\n            else:\n                print(3)\n                z[-1] = 3\n                print(*z)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if all((a[i] == a[0] for i in range(n))):\n        print(1)\n        print(*[1] * n)\n        return\n    else:\n        if n % 2 == 0:\n            b = [0] * n\n            for i in range(n):\n                b[i] = i % 2 + 1\n            print(2)\n            print(*b)\n            return\n        index = -1\n        for i in range(n):\n            if a[i - 1] == a[i]:\n                index = i\n                break\n        if index < 0:\n            print(3)\n            b = [0] * n\n            for i in range(n):\n                b[i] = i % 2 + 1\n            b[-1] = 3\n            print(*b)\n            return\n        else:\n            print(2)\n            b = [0] * n\n            cnt = 1\n            for j in range(i, n + i - 1):\n                b[j % n] = cnt\n                cnt += 1\n                if cnt > 2:\n                    cnt -= 2\n            b[i - 1] = 1\n            print(*b)\n            return\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        solve()\n    return\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    li = [int(i) for i in input().split()]\n    same = True\n    x = li[0]\n    for i in range(1, n):\n        if x != li[i]:\n            same = False\n            break\n    if same:\n        print(1)\n        for i in range(n):\n            print('1', end=' ')\n        print('')\n    elif n % 2 == 0:\n        print(2)\n        for i in range(n // 2):\n            print('1 2', end=' ')\n        print('')\n    else:\n        p = -1\n        for i in range(n - 1):\n            if li[i] == li[i + 1]:\n                p = i\n                break\n        if p == -1:\n            if li[0] == li[n - 1]:\n                print(2)\n                for i in range(n):\n                    if i % 2 == 0:\n                        print('1', end=' ')\n                    else:\n                        print('2', end=' ')\n                print('')\n            else:\n                print(3)\n                for i in range(n // 2):\n                    print('1 2', end=' ')\n                print(3)\n        else:\n            print(2)\n            for i in range(p + 1):\n                if i % 2 == 0:\n                    print('1', end=' ')\n                else:\n                    print('2', end=' ')\n            for i in range(p + 1, n):\n                if i % 2 == 0:\n                    print('2', end=' ')\n                else:\n                    print('1', end=' ')\n            print('')", "q = int(input())\nfor i in range(q):\n    n = int(input())\n    a = list(map(int, input().strip().split(' ')))\n    kk = 0\n    xx = 0\n    if len(list(set(a))) == 1:\n        p = [1] * n\n        kkk = 1\n    elif not n % 2:\n        p = [0 for _ in range(n)]\n        for ii in range(n):\n            if ii % 2:\n                p[ii] = 2\n            else:\n                p[ii] = 1\n        kkk = 2\n    else:\n        for ii in range(1, n):\n            if a[ii] == a[ii - 1]:\n                kk = 1\n                xx = ii\n                break\n        p = [0 for _ in range(n)]\n        p[0] = 1\n        if kk == 1:\n            for ii in range(1, n):\n                if ii == xx:\n                    p[ii] = p[ii - 1]\n                elif p[ii - 1] == 1:\n                    p[ii] = 2\n                else:\n                    p[ii] = 1\n            kkk = 2\n        else:\n            for ii in range(n - 1):\n                if ii % 2:\n                    p[ii] = 2\n                else:\n                    p[ii] = 1\n            if a[n - 1] == a[0]:\n                p[n - 1] = 1\n                kkk = 2\n            else:\n                p[n - 1] = 3\n                kkk = 3\n    print(kkk)\n    print(*p)", "for _ in range(int(input())):\n    flag = 0\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(set(a)) == 1:\n        c = [1] * n\n    else:\n        c = [1 if i % 2 == 0 else 2 for i in range(n)]\n        if c[0] == c[-1] and a[0] != a[-1]:\n            for i in range(n):\n                if a[i] == a[i - 1]:\n                    c[i] = c[i - 1]\n                    for j in range(i + 1, n):\n                        c[j] = 3 - c[j - 1]\n                    flag = 1\n                    break\n            if flag == 0:\n                c[-1] = 3\n    print(len(set(c)))\n    print(*c)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if arr.count(arr[0]) == n:\n        print(1)\n        print(*[1] * n)\n    elif n & 1:\n        found = False\n        prev = arr[0]\n        i = 1\n        ans = [1]\n        while i < n:\n            if prev == arr[i]:\n                found = True\n                ans.append(ans[-1])\n                break\n            else:\n                ans.append(1 if ans[-1] == 2 else 2)\n            prev = arr[i]\n            i += 1\n        while len(ans) < n:\n            ans.append(1 if ans[-1] == 2 else 2)\n        if not found:\n            ans[-1] = 3\n            if arr[-1] == arr[0]:\n                found = True\n                ans[-1] = ans[0]\n        print(2 if found else 3)\n        print(*ans)\n    else:\n        print(2)\n        print(*[1, 2] * (n // 2))", "from functools import reduce\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (N, r) = (2, ['2' if i % 2 else '1' for i in range(n)])\n    if len(set(l)) == 1:\n        N = 1\n        r = ['1'] * n\n    elif n % 2 == 0 or l[0] == l[-1]:\n        N = 2\n    else:\n        t = 0\n        for i in range(1, n):\n            if l[i] == l[i - 1]:\n                t = 1\n                break\n        if t == 0:\n            N = 3\n            r[-1] = '3'\n        else:\n            N = 2\n            r[i:] = r[i - 1:-1]\n            r[-1] = '2'\n    print(N)\n    print(*r)", "for i in range(int(input())):\n    n = int(input())\n    l = [int(j) for j in input().split()]\n    c = 0\n    for j in range(n):\n        if l[j] != l[(j + 1) % n]:\n            c += 1\n    if c == 0:\n        print(1)\n        print(' '.join(['1' for j in range(n)]))\n    elif n % 2 == 0:\n        print(2)\n        print(''.join(['1 2 ' for j in range(n // 2)]))\n    else:\n        for j in range(n):\n            if l[j] == l[(j + 1) % n]:\n                print(2)\n                print(*([1, 2] * n)[:j + 1][::-1] + ([1, 2] * n)[:n - j - 1])\n                break\n        else:\n            print(3)\n            print(''.join(['1 2 ' for j in range(n // 2)]) + '3')", "for t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if len(set(arr)) == 1:\n        print(1)\n        for i in range(n):\n            print('1', end=' ')\n        print()\n    elif n % 2 == 0:\n        print(2)\n        for i in range(n // 2):\n            print('1 2', end=' ')\n        print()\n    else:\n        flag = False\n        last_flag = False\n        for i in range(n - 1):\n            if arr[i] == arr[i + 1]:\n                flag = True\n                indx = i + 1\n                break\n        if arr[0] == arr[-1]:\n            flag = True\n            last_flag = True\n            indx = n - 1\n        if flag:\n            print(2)\n            print(1, end=' ')\n            prev = 1\n            for i in range(1, n):\n                if i == indx:\n                    if last_flag:\n                        print(1, end=' ')\n                    else:\n                        print(prev, end=' ')\n                else:\n                    if prev == 1:\n                        prev = 2\n                    else:\n                        prev = 1\n                    print(prev, end=' ')\n            print()\n        else:\n            print(3)\n            for i in range(n // 2):\n                print('1 2', end=' ')\n            print(3)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    t = list(map(int, input().strip().split()))\n    c = [0] * n\n    noDistinct = 1\n    prev = t[0]\n    for i in range(1, n):\n        if t[i] != t[0]:\n            noDistinct = 2\n            break\n    if noDistinct == 1:\n        c = [1 for i in range(n)]\n    if noDistinct == 2:\n        if n % 2 == 0:\n            for i in range(n):\n                if i % 2 == 0:\n                    c[i] = 1\n                else:\n                    c[i] = 2\n        else:\n            flag = 0\n            for i in range(n - 1):\n                if i % 2 == 0:\n                    c[i] = 1\n                else:\n                    c[i] = 2\n                if t[i] == t[i + 1]:\n                    flag = 1\n                    x = i\n                    break\n            if flag == 0:\n                if t[n - 1] == t[0]:\n                    c[n - 1] = c[0]\n                else:\n                    c[n - 1] = 3\n                    noDistinct = 3\n            else:\n                c[x + 1] = c[x]\n                for i in range(x + 2, n):\n                    if i % 2 == 0:\n                        c[i] = 2\n                    else:\n                        c[i] = 1\n    print(noDistinct)\n    for i in range(n):\n        print(c[i], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    types = list(map(int, input().split()))\n    if len(set(types)) == 1:\n        print(1)\n        for e in range(n):\n            print(1, end=' ')\n    elif not n & 1:\n        print(2)\n        for i in range(n):\n            print(i % 2 + 1, end=' ')\n    else:\n        done = 0\n        for i in range(n):\n            if types[i] == types[(i + 1) % n]:\n                (ans, pos, j) = ([0] * n, i + 1, 0)\n                while pos < n:\n                    ans[pos] = j + 1\n                    j ^= 1\n                    pos += 1\n                (j, pos) = (0, i)\n                while pos >= 0:\n                    ans[pos] = j + 1\n                    pos -= 1\n                    j ^= 1\n                print(2)\n                for i in ans:\n                    print(i, end=' ')\n                done = 1\n                break\n        if not done:\n            print(3)\n            for i in range(n - 1):\n                print(i % 2 + 1, end=' ')\n            print(3, end='')\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    figure = [int(i) for i in input().split()]\n    if figure.count(figure[0]) == n:\n        print(1)\n        print('1 ' * n)\n    elif n % 2 == 0:\n        print(2)\n        for i in range(n):\n            print(i % 2 + 1, end=' ')\n        print()\n    else:\n        flg = -1\n        for i in range(n):\n            if figure[i] == figure[i - 1]:\n                flg = i\n                break\n        if flg != -1:\n            print(2)\n            for i in range(n):\n                if i < flg:\n                    print(i % 2 + 1, end=' ')\n                else:\n                    print((i + 1) % 2 + 1, end=' ')\n            print()\n        else:\n            print(3)\n            for i in range(n - 1):\n                print(i % 2 + 1, end=' ')\n            print(3)", "q = int(input())\nwhile q:\n    n = int(input())\n    t = list(map(int, input().split()))\n    if len(set(t)) == 1:\n        print(1)\n        print(*[1 for i in range(n)])\n    elif n % 2 == 0 or t[0] == t[n - 1]:\n        print(2)\n        ls = [0 for i in range(n)]\n        for i in range(n):\n            if i % 2 == 0:\n                ls[i] = 1\n            else:\n                ls[i] = 2\n        print(*ls)\n    else:\n        ls = [0 for i in range(n)]\n        ls[0] = 1\n        for i in range(1, n):\n            if t[i] == t[i - 1]:\n                ls[i] = ls[i - 1]\n            elif ls[i - 1] == 1:\n                ls[i] = 2\n            else:\n                ls[i] = 1\n        if ls[0] == ls[n - 1]:\n            ls = [0 for i in range(n)]\n            ls[0] = 1\n            flag = True\n            for i in range(1, n):\n                if t[i] == t[i - 1]:\n                    if flag:\n                        if ls[i - 1] == 1:\n                            ls[i] = 2\n                        else:\n                            ls[i] = 1\n                        flag = False\n                    else:\n                        ls[i] = ls[i - 1]\n                elif ls[i - 1] == 1:\n                    ls[i] = 2\n                else:\n                    ls[i] = 1\n            if flag:\n                ls[n - 1] = 3\n                print(3)\n                print(*ls)\n            else:\n                print(2)\n                print(*ls)\n        else:\n            print(2)\n            print(*ls)\n    q -= 1", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if len(set(arr)) == 1:\n        print(1)\n        print(*[1] * n)\n        continue\n    if n % 2 == 0:\n        print(2)\n        for i in range(0, n):\n            print(i % 2 + 1, end=' ')\n        print()\n        continue\n    flag = False\n    for i in range(n):\n        if arr[i] == arr[(i + 1) % n]:\n            temp = 0\n            for j in range(i + 1, n):\n                arr[j] = temp + 1\n                temp ^= 1\n            temp = 0\n            for j in range(i, -1, -1):\n                arr[j] = temp + 1\n                temp ^= 1\n            print(2)\n            print(*arr)\n            flag = True\n    if flag:\n        continue\n    print(3)\n    for i in range(0, n - 1):\n        print(i % 2 + 1, end=' ')\n    print(3)", "q = int(input())\nfor loop in range(q):\n    n = int(input())\n    t = list(map(int, input().split()))\n    dic = {}\n    for i in t:\n        dic[i] = 1\n    if len(dic) == 1:\n        k = 1\n        res = [1] * n\n    elif n % 2 == 0:\n        k = 2\n        res = []\n        for i in range(n):\n            if i % 2 == 0:\n                res.append(1)\n            else:\n                res.append(2)\n    else:\n        flag = 0\n        res = []\n        for i in range(n):\n            if flag == 0 and t[i - 1] == t[i]:\n                flag = 1\n            res.append((i + flag) % 2)\n        if flag == 0:\n            res[-1] = 2\n            k = 3\n        else:\n            k = 2\n        for i in range(n):\n            res[i] += 1\n    print(k)\n    print(*res)", "def linput():\n    return [int(i) for i in input().split()]\nq = int(input())\nfor ______ in range(q):\n    n = int(input())\n    k = linput()\n    k1 = []\n    if len(set(k)) == 1:\n        print(1)\n        print('1 ' * (n - 1) + '1')\n    elif n % 2 == 0:\n        print(2)\n        print('1 2 ' * (n // 2))\n    else:\n        i = 1\n        while i < n and k[i - 1] != k[i]:\n            k1.append(i % 2 + 1)\n            i += 1\n        if i == n:\n            if k[0] == k[-1]:\n                k1.append(k1[0])\n                print(2)\n                print(*k1)\n            else:\n                k1.append(3)\n                print(3)\n                print(*k1)\n        else:\n            k1.append(i % 2 + 1)\n            k1.append(k1[-1])\n            for l in range(i + 1, n):\n                k1.append(k1[-1] % 2 + 1)\n            print(2)\n            print(*k1)"]