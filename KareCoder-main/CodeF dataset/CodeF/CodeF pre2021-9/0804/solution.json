["import math\n\ndef f(n, s):\n    d = [-n, -n]\n    d[s] = 0\n    for i in range(y // g):\n        d = [max(d[0], d[1]), d[0] + n * g // y + (i * x % y < n * g % y)]\n    return d[s]\n(n, x, y) = map(int, input().split())\n(g, h) = (math.gcd(x, y), lambda n: max(f(n, 0), f(n, 1)))\ny += x\nprint(n % g * h(n // g + 1) + (g - n % g) * h(n // g))", "def f(n, s):\n    d = [-n, -n]\n    d[s] = 0\n    for i in range(y // g):\n        d = [max(d[0], d[1]), d[0] + n * g // y + (i * x % y < n * g % y)]\n    return d[s]\nimport math\n(n, x, y) = map(int, input().split())\n(g, h) = (math.gcd(x, y), lambda n: max(f(n, 0), f(n, 1)))\ny += x\nprint(n % g * h(n // g + 1) + (g - n % g) * h(n // g))", "def f(n, s):\n    d = [-n, -n]\n    d[s] = 0\n    for i in range(y // g):\n        d = [max(d[0], d[1]), d[0] + n * g // y + (i * x % y < n * g % y)]\n    return d[s]\nimport math\n(n, x, y) = map(int, input().split())\n(g, h) = (math.gcd(x, y), lambda n: max(f(n, 0), f(n, 1)))\ny = y + x\nprint(n % g * h(n // g + 1) + (g - n % g) * h(n // g))", "def f(n, s):\n    d = [-n, -n]\n    d[s] = 0\n    for i in range(y // g):\n        d = [max(d[0], d[1]), d[0] + n * g // y + (i * x % y < n * g % y)]\n    return d[s]\nimport math\n(n, x, y) = map(int, input().split())\n(g, h) = (math.gcd(x, y), lambda n: max(f(n, 0), f(n, 1)))\ny = y + x\nprint(n % g * h(n // g + 1) + (g - n % g) * h(n // g))", "import math\n\ndef f(n, s):\n    d = [-n, -n]\n    d[s] = 0\n    for i in range(y // g):\n        d = [max(d[0], d[1]), d[0] + n * g // y + (i * x % y < n * g % y)]\n    return d[s]\n(n, x, y) = map(int, input().split())\n(g, h) = (math.gcd(x, y), lambda n: max(f(n, 0), f(n, 1)))\ny += x\nprint(n % g * h(n // g + 1) + (g - n % g) * h(n // g))", "def f(n, s):\n    d = [-n, -n]\n    d[s] = 0\n    for i in range(y // g):\n        d = [max(d[0], d[1]), d[0] + n * g // y + (i * x % y < n * g % y)]\n    return d[s]\nimport math\n(n, x, y) = map(int, input().split())\n(g, h) = (math.gcd(x, y), lambda n: max(f(n, 0), f(n, 1)))\ny = y + x\nprint(n % g * h(n // g + 1) + (g - n % g) * h(n // g))", "import math\n\ndef f(n, s):\n    d = [-n, -n]\n    d[s] = 0\n    for i in range(y // g):\n        d = [max(d[0], d[1]), d[0] + n * g // y + (i * x % y < n * g % y)]\n    return d[s]\n(n, x, y) = map(int, input().split())\n(g, h) = (math.gcd(x, y), lambda n: max(f(n, 0), f(n, 1)))\ny += x\nprint(n % g * h(n // g + 1) + (g - n % g) * h(n // g))", "import math\n\ndef f(n, s):\n    d = [-n, -n]\n    d[s] = 0\n    for i in range(y // g):\n        d = [max(d[0], d[1]), d[0] + n * g // y + (i * x % y < n * g % y)]\n    return d[s]\n(n, x, y) = map(int, input().split())\n(g, h) = (math.gcd(x, y), lambda n: max(f(n, 0), f(n, 1)))\ny += x\nprint(n % g * h(n // g + 1) + (g - n % g) * h(n // g))", "import math\n\ndef f(n, s):\n    d = [-n, -n]\n    d[s] = 0\n    for i in range(y // g):\n        d = [max(d[0], d[1]), d[0] + n * g // y + (i * x % y < n * g % y)]\n    return d[s]\n(n, x, y) = map(int, input().split())\n(g, h) = (math.gcd(x, y), lambda n: max(f(n, 0), f(n, 1)))\ny += x\nprint(n % g * h(n // g + 1) + (g - n % g) * h(n // g))", "def f(n, s):\n    d = [-n, -n]\n    d[s] = 0\n    for i in range(y // g):\n        d = [max(d[0], d[1]), d[0] + n * g // y + (i * x % y < n * g % y)]\n    return d[s]\nimport math\n(n, x, y) = map(int, input().split())\n(g, h) = (math.gcd(x, y), lambda n: max(f(n, 0), f(n, 1)))\ny = y + x\nprint(n % g * h(n // g + 1) + (g - n % g) * h(n // g))", "import math\n\ndef f(n, s):\n    d = [-n, -n]\n    d[s] = 0\n    for i in range(y // g):\n        d = [max(d[0], d[1]), d[0] + n * g // y + (i * x % y < n * g % y)]\n    return d[s]\n(n, x, y) = map(int, input().split())\n(g, h) = (math.gcd(x, y), lambda n: max(f(n, 0), f(n, 1)))\ny += x\nprint(n % g * h(n // g + 1) + (g - n % g) * h(n // g))", "def f(n, s):\n    d = [-n, -n]\n    d[s] = 0\n    for i in range(y // g):\n        d = [max(d[0], d[1]), d[0] + n * g // y + (i * x % y < n * g % y)]\n    return d[s]\nimport math\n(n, x, y) = map(int, input().split())\n(g, h) = (math.gcd(x, y), lambda n: max(f(n, 0), f(n, 1)))\ny = y + x\nprint(n % g * h(n // g + 1) + (g - n % g) * h(n // g))", "import math\n\ndef f(n, s):\n    d = [-n, -n]\n    d[s] = 0\n    for i in range(y // g):\n        d = [max(d[0], d[1]), d[0] + n * g // y + (i * x % y < n * g % y)]\n    return d[s]\n(n, x, y) = map(int, input().split())\n(g, h) = (math.gcd(x, y), lambda n: max(f(n, 0), f(n, 1)))\ny += x\nprint(n % g * h(n // g + 1) + (g - n % g) * h(n // g))", "import math\n\ndef f(n, s):\n    d = [-n, -n]\n    d[s] = 0\n    for i in range(y // g):\n        d = [max(d[0], d[1]), d[0] + n * g // y + (i * x % y < n * g % y)]\n    return d[s]\n(n, x, y) = map(int, input().split())\n(g, h) = (math.gcd(x, y), lambda n: max(f(n, 0), f(n, 1)))\ny += x\nprint(n % g * h(n // g + 1) + (g - n % g) * h(n // g))", "def f(n, s):\n    d = [-n, -n]\n    d[s] = 0\n    for i in range(y // g):\n        d = [max(d[0], d[1]), d[0] + n * g // y + (i * x % y < n * g % y)]\n    return d[s]\nimport math\n(n, x, y) = map(int, input().split())\n(g, h) = (math.gcd(x, y), lambda n: max(f(n, 0), f(n, 1)))\ny += x\nprint(n % g * h(n // g + 1) + (g - n % g) * h(n // g))"]