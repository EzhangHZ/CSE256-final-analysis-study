["from math import floor\nfrom sys import stdin\ninput = stdin.readline\n\ndef compare_answer(hot, cold, target, moves, ans):\n    min_temperature = ans // 2 * (hot + cold) + ans % 2 * hot\n    min_error = abs(min_temperature - ans * target) * moves\n    temperature = moves // 2 * (hot + cold) + moves % 2 * hot\n    error = abs(temperature - moves * target) * ans\n    if error < min_error:\n        ans = moves\n    return ans\n\ndef main():\n    test = int(input())\n    for _ in range(test):\n        (hot, cold, target) = map(int, input().split())\n        avg = (hot + cold) / 2\n        if target >= hot:\n            ans = 1\n        elif avg >= target:\n            ans = 2\n        else:\n            moves = floor((hot - avg) / (target - avg))\n            if moves % 2 == 0:\n                moves -= 1\n            ans = 2\n            ans = compare_answer(hot, cold, target, moves, ans)\n            ans = compare_answer(hot, cold, target, moves + 2, ans)\n        print(ans)\nmain()", "import sys\nsys.setrecursionlimit(10 ** 5)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    for _ in range(II()):\n        (h, c, t) = MI()\n        if t >= h:\n            print(1)\n            continue\n        if t * 2 <= c + h:\n            print(2)\n            continue\n        a1 = (-t + h) // (-h - c + 2 * t)\n        a2 = a1 + 1\n        if 2 * t * (2 * a2 + 1) * (2 * a1 + 1) - (h * (a2 + 1) + c * a2) * (2 * a1 + 1) < (2 * a2 + 1) * (h * (a1 + 1) + c * a1):\n            ans = a2 * 2 + 1\n        else:\n            ans = a1 * 2 + 1\n        print(ans)\nmain()", "from collections import Counter, defaultdict, deque\nfrom math import *\nimport sys\ninput = sys.stdin.readline\n\ndef solve():\n    (h, c, t) = [int(x) for x in input().split()]\n    avg = (h + c) / 2\n    if avg >= t:\n        print(2)\n        return\n    d = t - avg\n    n1 = floor((h - avg) / d)\n    if n1 % 2 == 0:\n        n1 -= 1\n    n2 = n1 + 2\n    a1 = d - (h - avg) / n1\n    a2 = d - (h - avg) / n2\n    if abs(a1) <= abs(a2):\n        print(n1)\n    else:\n        print(n2)\ntt = int(input())\nfor test in range(tt):\n    solve()", "from sys import stdin, stdout\nimport math\nfrom itertools import permutations, combinations\nfrom collections import defaultdict\nfrom bisect import bisect_left\nfrom bisect import bisect_right\n\ndef L():\n    return list(map(int, stdin.readline().split()))\n\ndef In():\n    return map(int, stdin.readline().split())\n\ndef I():\n    return int(stdin.readline())\n\ndef seive():\n    l = 100002\n    c = [1, 1] + [0] * l\n    for i in range(2, l):\n        if 1 - c[i]:\n            for j in range(i * i, l, i):\n                c[j] = 1\n\ndef binarySearch(arr, l, r, x):\n    if r >= l:\n        mid = l + (r - l) // 2\n        if arr[mid] == x:\n            return mid\n        elif arr[mid] > x:\n            return binarySearch(arr, l, mid - 1, x)\n        else:\n            return binarySearch(arr, mid + 1, r, x)\n    else:\n        return -1\nP = 1000000007\n\ndef main():\n    for _ in range(I()):\n        (h, c, t) = In()\n        if (h + c) / 2 >= t:\n            print(2)\n        else:\n            a = (h - t) // (2 * t - h - c)\n            b = a + 1\n            if 2 * t * (2 * a + 1) * (2 * b + 1) >= (2 * b + 1) * ((a + 1) * h + a * c) + (2 * a + 1) * ((b + 1) * h + b * c):\n                print(2 * a + 1)\n            else:\n                print(2 * b + 1)\nmain()", "t = int(input())\nans = [0] * t\nfor i in range(t):\n    (h, c, obj) = map(int, input().split())\n    ave = (h + c) / 2\n    if obj <= ave:\n        ans[i] = 2\n    else:\n        x = obj - ave\n        y = (h - c) / 2\n        z = y // x\n        if z % 2 == 0:\n            z -= 1\n        temp0 = abs(obj - ave - y / z)\n        temp1 = abs(obj - ave - y / (2 + z))\n        if temp0 <= temp1:\n            ans[i] = z\n        else:\n            ans[i] = z + 2\nfor i in range(t):\n    print(int(ans[i]))", "from sys import stdin, stdout\nimport math\nt = int(stdin.readline())\nfor _ in range(t):\n    (h, c, t) = map(int, stdin.readline().split())\n    if 3 * (2 * t - h) >= 2 * h + c:\n        print(1)\n        continue\n    if 2 * t <= h + c:\n        print(2)\n        continue\n    n = (h - t) // (2 * t - h - c)\n    (a1, b1) = (h * (n + 1) + c * n, 2 * n + 1)\n    (a2, b2) = (h * (n + 2) + c * (n + 1), 2 * n + 3)\n    if b2 * abs(a1 - b1 * t) <= b1 * abs(a2 - b2 * t):\n        print(2 * n + 1)\n    else:\n        print(2 * n + 3)", "T = int(input())\no = []\nfor i in range(T):\n    (h, c, t) = input().split()\n    h = int(h)\n    c = int(c)\n    t = int(t)\n    s = (h + c) / 2\n    if t >= h:\n        o.append(1)\n    elif t <= s:\n        o.append(2)\n    else:\n        i = (h - t) / (2 * t - (h + c))\n        if i == int(i):\n            i = int(i)\n            o.append(2 * i + 1)\n        else:\n            i = int(i)\n            aprev = abs((i * (h + c - 2 * t) + h - t) / (2 * i + 1))\n            i += 1\n            acur = abs((i * (h + c - 2 * t) + h - t) / (2 * i + 1))\n            if acur >= aprev:\n                o.append((i - 1) * 2 + 1)\n            else:\n                o.append(i * 2 + 1)\nfor i in range(T):\n    print(o[i])", "from math import floor\nfrom sys import stdin\ninput = stdin.readline\n\ndef compare_answer(hot, cold, target, moves, ans):\n    min_temperature = ans // 2 * (hot + cold) + ans % 2 * hot\n    min_error = abs(min_temperature - ans * target) * moves\n    temperature = moves // 2 * (hot + cold) + moves % 2 * hot\n    error = abs(temperature - moves * target) * ans\n    if error < min_error:\n        ans = moves\n    return ans\n\ndef main():\n    test = int(input())\n    for _ in range(test):\n        (hot, cold, target) = map(int, input().split())\n        avg = (hot + cold) / 2\n        if target >= hot:\n            ans = 1\n        elif avg >= target:\n            ans = 2\n        else:\n            moves = floor((hot - avg) / (target - avg))\n            if moves % 2 == 0:\n                moves -= 1\n            ans = 2\n            ans = compare_answer(hot, cold, target, moves, ans)\n            ans = compare_answer(hot, cold, target, moves + 2, ans)\n        print(ans)\nmain()", "from decimal import *\ngetcontext().prec = 30\nT = int(input())\no = []\nfor i in range(T):\n    (h, c, t) = input().split()\n    h = int(h)\n    c = int(c)\n    t = int(t)\n    s = (h + c) / 2\n    if t >= h:\n        o.append(1)\n    elif t <= s:\n        o.append(2)\n    else:\n        i = (h - t) / (2 * t - (h + c))\n        if i == int(i):\n            i = int(i)\n            o.append(2 * i + 1)\n        else:\n            i = Decimal(int(i))\n            h = Decimal(h)\n            c = Decimal(c)\n            t = Decimal(t)\n            prev = ((i + 1) * h + i * c) / (2 * i + 1)\n            i += 1\n            cur = ((i + 1) * h + i * c) / (2 * i + 1)\n            if abs(cur - t) >= abs(prev - t):\n                o.append((i - 1) * 2 + 1)\n            else:\n                o.append(i * 2 + 1)\nfor i in range(T):\n    print(o[i])", "T = int(input())\nC = []\nfor i in range(0, T):\n    (h, c, t) = [int(x) for x in input().split(' ')]\n    if h + c == 2 * t:\n        C.append(2)\n    elif 2 * t < h + c:\n        if abs((h + c) / 2 - t) < abs(h - t):\n            C.append(2)\n        else:\n            C.append(1)\n    else:\n        m = (h - t) // (2 * t - h - c)\n        if abs(((m + 2) * h + (m + 1) * c) * (2 * m + 1) - t * (2 * m + 1) * (2 * m + 3)) >= abs(((m + 1) * h + m * c) * (2 * m + 3) - t * (2 * m + 3) * (2 * m + 1)):\n            C.append(2 * m + 1)\n        else:\n            C.append(2 * m + 3)\nfor i in C:\n    print(i)", "T = int(input())\ns = []\nfor i in range(T):\n    s.append(input())\nfor i in range(T):\n    (h, c, t) = map(int, s[i].split())\n    if t == h:\n        n = 1\n    elif t <= (h + c) / 2:\n        n = 2\n    else:\n        k = (c - t) / (h + c - 2 * t)\n        n = int(2 * k - 1)\n        if n % 2 == 0:\n            n = n + 1\n        k = (n + 1) / 2\n        tb = (k * h + (k - 1) * c) / n\n        n1 = n - 2\n        k = (n1 + 1) / 2\n        tb1 = (k * h + (k - 1) * c) / n1\n        n2 = n + 2\n        k = (n2 + 1) / 2\n        tb2 = (k * h + (k - 1) * c) / n2\n        if abs(t - tb1) < abs(t - tb) and abs(t - tb1) < abs(t - tb2):\n            n = n1\n        if abs(t - tb2) < abs(t - tb) and abs(t - tb2) < abs(t - tb1):\n            n = n2\n    print(n)", "T = int(input())\nwhile T > 0:\n    T -= 1\n    (h, c, t) = map(int, input().split())\n    if 2 * t <= h + c:\n        print(2)\n        continue\n    k = (h - t) // (2 * t - h - c)\n    if abs((2 * k + 3) * t - k * h - 2 * h - k * c - c) * (2 * k + 1) < abs((2 * k + 1) * t - k * h - h - k * c) * (2 * k + 3):\n        print(2 * k + 3)\n    else:\n        print(2 * k + 1)", "t = int(input())\n\ndef main():\n    (hot, cold, temp) = map(int, input().split())\n    if temp <= (hot + cold) // 2:\n        return 2\n    k = (hot - temp) // (2 * temp - hot - cold)\n    l = abs(k * (hot + cold) + hot - temp * (2 * k + 1)) * (2 * k + 3)\n    u = abs((k + 1) * (hot + cold) + hot - temp * (2 * k + 3)) * (2 * k + 1)\n    if l <= u:\n        return 2 * k + 1\n    return 2 * k + 3\nfor _ in range(t):\n    print(main())", "for _ in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if t <= (h + c) / 2:\n        print(2)\n    else:\n        k = (h - t) // (2 * t - h - c)\n        if abs((2 * k + 3) * t - k * h - 2 * h - k * c - c) * (2 * k + 1) < abs((2 * k + 1) * t - k * h - h - k * c) * (2 * k + 3):\n            print(2 * k + 3)\n        else:\n            print(2 * k + 1)", "T = int(input())\nwhile T > 0:\n    T -= 1\n    (h, c, t) = map(int, input().split())\n    if 2 * t <= h + c:\n        print(2)\n        continue\n    k = (h - t) // (2 * t - h - c)\n    if abs((2 * k + 3) * t - k * h - 2 * h - k * c - c) * (2 * k + 1) < abs((2 * k + 1) * t - k * h - h - k * c) * (2 * k + 3):\n        print(2 * k + 3)\n    else:\n        print(2 * k + 1)", "temp = int(input())\nwhile temp > 0:\n    temp -= 1\n    (h, c, t) = map(int, input().split())\n    if 2 * t <= h + c:\n        print(2)\n        continue\n    k = (h - t) // (2 * t - h - c)\n    if abs((2 * k + 3) * t - k * h - 2 * h - k * c - c) * (2 * k + 1) < abs((2 * k + 1) * t - k * h - h - k * c) * (2 * k + 3):\n        print(2 * k + 3)\n    else:\n        print(2 * k + 1)", "temp = int(input())\nwhile temp > 0:\n    temp -= 1\n    (h, c, t) = map(int, input().split())\n    if 2 * t <= h + c:\n        print(2)\n        continue\n    w = (h - t) // (2 * t - h - c)\n    if abs((2 * w + 3) * t - w * h - 2 * h - w * c - c) * (2 * w + 1) < abs((2 * w + 1) * t - w * h - h - w * c) * (2 * w + 3):\n        print(2 * w + 3)\n    else:\n        print(2 * w + 1)", "temp1 = int(input())\nwhile temp1 > 0:\n    temp1 -= 1\n    (hot, cold, t) = map(int, input().split())\n    if 2 * t <= hot + cold:\n        print(2)\n        continue\n    avg = (hot - t) // (2 * t - hot - cold)\n    if abs((2 * avg + 3) * t - avg * hot - 2 * hot - avg * cold - cold) * (2 * avg + 1) < abs((2 * avg + 1) * t - avg * hot - hot - avg * cold) * (2 * avg + 3):\n        print(2 * avg + 3)\n    else:\n        print(2 * avg + 1)", "TC = int(input())\nwhile TC > 0:\n    TC -= 1\n    (h, c, t) = map(int, input().split())\n    if 2 * t <= h + c:\n        print(2)\n        continue\n    k = (h - t) // (2 * t - h - c)\n    if abs((2 * k + 3) * t - k * h - 2 * h - k * c - c) * (2 * k + 1) < abs((2 * k + 1) * t - k * h - h - k * c) * (2 * k + 3):\n        print(2 * k + 3)\n    else:\n        print(2 * k + 1)", "temp = int(input())\nwhile temp > 0:\n    temp -= 1\n    (hot, cold, t) = map(int, input().split())\n    if 2 * t <= hot + cold:\n        print(2)\n        continue\n    avg = (hot - t) // (2 * t - hot - cold)\n    if abs((2 * avg + 3) * t - avg * hot - 2 * hot - avg * cold - cold) * (2 * avg + 1) < abs((2 * avg + 1) * t - avg * hot - hot - avg * cold) * (2 * avg + 3):\n        print(2 * avg + 3)\n    else:\n        print(2 * avg + 1)", "import math\nT = int(input())\nfor _ in range(T):\n    (h, c, t) = map(int, input().split())\n    if 2 * t <= h + c:\n        print(2)\n    else:\n        estimate = (h - c) // (2 * t - (h + c)) // 2\n        if (h + c) * (4 * (estimate + 1) ** 2 - 1) + 2 * (h - c) * (estimate + 1) <= 2 * t * (4 * (estimate + 1) ** 2 - 1):\n            print(2 * estimate + 1)\n        else:\n            print(2 * estimate + 3)", "import math\nfor i in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if (h + c) / 2 >= t:\n        print(2)\n    else:\n        a = (h - t) // (2 * t - h - c)\n        b = a + 1\n        print(2 * a + 1 if 2 * t * (2 * a + 1) * (2 * b + 1) >= (2 * b + 1) * ((a + 1) * h + a * c) + (2 * a + 1) * ((b + 1) * h + b * c) else 2 * b + 1)", "for _ in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if t <= (h + c) / 2:\n        print(2)\n    else:\n        k = (h - t) // (2 * t - h - c)\n        if abs((2 * k + 3) * t - k * h - 2 * h - k * c - c) * (2 * k + 1) < abs((2 * k + 1) * t - k * h - h - k * c) * (2 * k + 3):\n            print(2 * k + 3)\n        else:\n            print(2 * k + 1)", "import math\nfor i in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if (h + c) / 2 >= t:\n        print(2)\n    else:\n        a = (h - t) // (2 * t - h - c)\n        b = a + 1\n        print(2 * a + 1 if 2 * t * (2 * a + 1) * (2 * b + 1) >= (2 * b + 1) * ((a + 1) * h + a * c) + (2 * a + 1) * ((b + 1) * h + b * c) else 2 * b + 1)", "T = int(input())\nwhile T > 0:\n    T -= 1\n    (h, c, t) = map(int, input().split())\n    if 2 * t <= h + c:\n        print(2)\n        continue\n    k = (h - t) // (2 * t - h - c)\n    if abs((2 * k + 3) * t - k * h - 2 * h - k * c - c) * (2 * k + 1) < abs((2 * k + 1) * t - k * h - h - k * c) * (2 * k + 3):\n        print(2 * k + 3)\n    else:\n        print(2 * k + 1)", "X = int(input())\nwhile X > 0:\n    X -= 1\n    (h, c, t) = map(int, input().split())\n    if 2 * t <= h + c:\n        print(2)\n        continue\n    k = (h - t) // (2 * t - h - c)\n    if abs((2 * k + 3) * t - k * h - 2 * h - k * c - c) * (2 * k + 1) < abs((2 * k + 1) * t - k * h - h - k * c) * (2 * k + 3):\n        print(2 * k + 3)\n    else:\n        print(2 * k + 1)", "test = int(input())\nwhile test > 0:\n    test -= 1\n    (ht, cd, t) = map(int, input().split())\n    if 2 * t <= ht + cd:\n        print(2)\n        continue\n    ag = (ht - t) // (2 * t - ht - cd)\n    if abs((2 * ag + 3) * t - ag * ht - 2 * ht - ag * cd - cd) * (2 * ag + 1) < abs((2 * ag + 1) * t - ag * ht - ht - ag * cd) * (2 * ag + 3):\n        print(2 * ag + 3)\n    else:\n        print(2 * ag + 1)", "import sys\nimport math\nfrom decimal import *\nt = int(sys.stdin.readline().strip())\nfor i in range(t):\n    (h, c, t) = list(map(int, sys.stdin.readline().strip().split(' ')))\n    mid = Decimal(c + (h - c) / 2)\n    if h == t:\n        print(1)\n    elif t <= mid:\n        print(2)\n    else:\n        b = int((h - mid) / (t - mid))\n        if b % 2 == 0:\n            low = b - 1\n            high = b + 1\n        else:\n            low = b\n            high = b + 2\n        res = None\n        u = abs(mid + (h - mid) / low - t)\n        v = abs(mid + (h - mid) / high - t)\n        if u <= v:\n            res = low\n        else:\n            res = high\n        print(res)", "tt = int(input())\nwhile tt:\n    (h, c, t) = map(int, input().split())\n    if h == t:\n        print(1)\n    elif t <= (h + c) / 2:\n        print(2)\n    else:\n        k = (t - c - 1) // (2 * t - h - c)\n        ans = 2 * k + 1\n        if (4 * k * k - 1) * (2 * t - h - c) >= 2 * (h - c) * k:\n            ans -= 2\n        print(ans)\n    tt -= 1", "def solve():\n    (h, c, t) = map(int, input().split())\n    if h == t:\n        result = 1\n    elif t <= (h + c) / 2:\n        result = 2\n    else:\n        k = (t - c - 1) // (2 * t - h - c)\n        result = 2 * k + 1\n        result -= 2 if (4 * k * k - 1) * (2 * t - h - c) >= 2 * (h - c) * k else 0\n    print(result)\n\ndef main():\n    for _ in range(int(input())):\n        solve()\nmain()", "def solve(h, c, t):\n    if t >= h:\n        return 1\n    if 2 * t <= h + c:\n        return 2\n    if (h - t) % (2 * t - h - c) == 0:\n        return 2 * (h - t) // (2 * t - h - c) + 1\n    nn1 = int((h - t) / (2 * t - h - c))\n    nn2 = nn1 + 1\n    if (t * (2 * nn2 + 1) - nn2 * (h + c) - h) * (2 * nn1 + 1) - (nn1 * (h + c) + h - t * (2 * nn1 + 1)) * (2 * nn2 + 1) < 0:\n        return 2 * nn2 + 1\n    return 2 * nn1 + 1\nt = int(input())\nfor i_t in range(t):\n    [h, c, tt] = list(map(int, input().split(' ')))\n    print(solve(h, c, tt))", "mod = 1000000007\nfrom collections import Counter, defaultdict, deque\nimport sys\nimport math\nimport bisect\nfrom collections import deque\nfor _ in range(int(input())):\n    (h, c, t) = list(map(int, input().split()))\n    av = (h + c) / 2\n    if t >= h:\n        print(1)\n        continue\n    elif t <= av:\n        print(2)\n        continue\n    x = (h - t) // (2 * t - (h + c))\n    t1 = (x + 1) * h + x * c\n    t2 = (x + 2) * h + (x + 1) * c\n    if abs(t * (2 * x + 1) - t1) * (2 * x + 3) <= abs(t * (2 * x + 3) - t2) * (2 * x + 1):\n        print(x * 2 + 1)\n    else:\n        print(2 * x + 3)", "for i in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if h + c >= 2 * t:\n        print(2)\n    elif h == t:\n        print(1)\n    else:\n        x = int((t - c) / (2 * t - h - c))\n        tb1 = abs((2 * x - 1) * t - ((h + c) * x - c)) * (2 * x + 1)\n        tb2 = abs(t * (2 * x + 1) - ((h + c) * x + h)) * (2 * x - 1)\n        if tb2 < tb1:\n            z = x + 1 + x\n        else:\n            z = x + x - 1\n        print(z)", "for _ in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if t <= (h + c) / 2:\n        print(2)\n    else:\n        k = (h - t) // (2 * t - h - c)\n        if abs((2 * k + 3) * t - k * h - 2 * h - k * c - c) * (2 * k + 1) < abs((2 * k + 1) * t - k * h - h - k * c) * (2 * k + 3):\n            print(2 * k + 3)\n        else:\n            print(2 * k + 1)", "for ti in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if t <= (h + c) / 2:\n        print(2)\n    else:\n        k = (h - t) // (2 * t - h - c)\n        if abs((2 * k + 3) * t - k * h - 2 * h - k * c - c) * (2 * k + 1) < abs((2 * k + 1) * t - k * h - h - k * c) * (2 * k + 3):\n            print(2 * k + 3)\n        else:\n            print(2 * k + 1)", "t = int(input())\nfor i in range(t):\n    (h1, c1, t1) = input().split(' ')\n    h = int(h1)\n    c = int(c1)\n    t = int(t1)\n    if t <= (h + c) / 2:\n        print(2)\n    else:\n        x = (t - c) // (2 * t - h - c)\n        m = ((h + c) * x - c) / (2 * x - 1) - t\n        n = t - ((h + c) * x + h) / (2 * x + 1)\n        if m < n:\n            print(2 * x - 1)\n        elif m == n and m == int(m):\n            print(2 * x - 1)\n        elif m == n and m != int(m):\n            print(2 * x + 1)\n        else:\n            print(2 * x + 1)", "for _ in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if h <= t:\n        print(1)\n    elif (h + c) // 2 >= t:\n        print(2)\n    else:\n        n_c = (h - t) // (2 * t - h - c)\n        n_h = n_c + 1\n        if abs(n_c * c + n_h * h - t * (n_c + n_h)) * (n_c + n_h + 2) > abs(n_c * c + n_h * h + h + c - t * (n_c + n_h + 2)) * (n_c + n_h):\n            print(n_c + n_h + 2)\n        else:\n            print(n_c + n_h)", "T = int(input())\nfor iteration in range(T):\n    [h, c, t] = list(map(int, input().split()))\n    if t <= (h + c) / 2:\n        print(2)\n    else:\n        k = 1 / 2 * (h - c) / (2 * t - h - c)\n        k = k + 1 / (4 * (int(k) + 1))\n        if k - int(k) <= 10 ** (-8):\n            k = int(k) - 1\n        else:\n            k = int(k)\n        print(2 * k + 1)", "def count(h, c, t):\n    if h + c >= 2 * t:\n        ans = 2\n    else:\n        k = int((h - t) / (2 * t - h - c))\n        if 4 * k * (k + 1) * (h + c) + (6 * k + 5) * h + c * (2 * k + 1) <= 2 * t * (2 * k + 1) * (2 * k + 3):\n            ans = 2 * k + 1\n        else:\n            ans = 2 * k + 3\n    return ans\nt = int(input())\nfor _ in range(t):\n    (h, c, t) = map(int, input().split())\n    print(count(h, c, t))", "def cups(x, h, c, t):\n    error = (x + 1) * h + x * c - t * (2 * x + 1)\n    return abs(error)\n\ndef f(h, c, t):\n    if h + c >= 2 * t:\n        return 2\n    x = (h - t) // (2 * t - h - c)\n    e1 = cups(x, h, c, t)\n    e2 = cups(x + 1, h, c, t)\n    if e1 * (2 * x + 3) <= e2 * (2 * x + 1):\n        return 2 * x + 1\n    else:\n        return 2 * x + 3\nT = int(input())\nfor t in range(T):\n    (h, c, t) = map(int, input().rstrip().split())\n    print(f(h, c, t))", "def solver(h, c, t):\n    if h + c >= 2 * t:\n        return 2\n    elif h == t:\n        return 1\n    else:\n        x = (t - c) // (2 * t - h - c)\n        (k1, k2) = (abs((2 * x - 1) * t - ((h + c) * x - c)) * (2 * x + 1), abs(t * (2 * x + 1) - ((h + c) * x + h)) * (2 * x - 1))\n        z = 2 * x + 1 if k2 < k1 else 2 * x - 1\n        return z\nfor _ in range(int(input())):\n    (H, C, T) = [int(i) for i in input().split()]\n    print(solver(H, C, T))", "t = int(input())\nfor test in range(t):\n    (h, c, t) = map(int, input().split(' '))\n    t -= c\n    h -= c\n    if t <= h / 2:\n        print(2)\n    else:\n        res = int(h / (2 * t - h) / 2)\n        if abs(t - (res + 1) * h / (2 * res + 1)) > abs(t - (res + 2) * h / (2 * res + 3)):\n            print(2 * res + 3)\n        else:\n            print(2 * res + 1)", "for ti in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if t <= (h + c) / 2:\n        print(2)\n    else:\n        k = (h - t) // (2 * t - h - c)\n        if abs((2 * k + 3) * t - k * h - 2 * h - k * c - c) * (2 * k + 1) < abs((2 * k + 1) * t - k * h - h - k * c) * (2 * k + 3):\n            print(2 * k + 3)\n        else:\n            print(2 * k + 1)", "import math\nfor i in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if (h + c) / 2 >= t:\n        print(2)\n    else:\n        a = (h - t) // (2 * t - h - c)\n        b = a + 1\n        print(2 * a + 1 if 2 * t * (2 * a + 1) * (2 * b + 1) >= (2 * b + 1) * ((a + 1) * h + a * c) + (2 * a + 1) * ((b + 1) * h + b * c) else 2 * b + 1)", "import math\nfor i in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if (h + c) / 2 >= t:\n        print(2)\n    else:\n        a = (h - t) // (2 * t - h - c)\n        b = a + 1\n        print(2 * a + 1 if 2 * t * (2 * a + 1) * (2 * b + 1) >= (2 * b + 1) * ((a + 1) * h + a * c) + (2 * a + 1) * ((b + 1) * h + b * c) else 2 * b + 1)", "for _ in range(int(input())):\n    (p, a, t) = map(int, input().split())\n    if t <= (p + a) / 2:\n        print(2)\n    else:\n        k = (p - t) // (2 * t - p - a)\n        if abs((2 * k + 3) * t - k * p - 2 * p - k * a - a) * (2 * k + 1) < abs((2 * k + 1) * t - k * p - p - k * a) * (2 * k + 3):\n            print(2 * k + 3)\n        else:\n            print(2 * k + 1)", "for _ in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if h + c >= t * 2:\n        print(2)\n    elif h <= t:\n        print(1)\n    else:\n        k = (h - t) // (t * 2 - h - c)\n        x = k * k * 2 + k * 5\n        y = k * k * 2 + k * 3\n        if (x + 3 + x + 2) * h + (y + y + 1) * c > 2 * (4 * k * k + 8 * k + 3) * t:\n            k += 1\n        print(k * 2 + 1)", "T = int(input())\nfor i in range(T):\n    (h, c, t) = map(int, input().split())\n    avg = (h + c) / 2\n    if avg >= t:\n        print(2)\n    else:\n        n = ((h - c) / (2 * (t - avg)) + 1) / 2\n        if type(n) == int:\n            print(2 * n - 1)\n        else:\n            n_min = int(n)\n            n_max = n_min + 1\n            diff_n_min = abs(t - avg - (h - c) / (2 * (2 * n_min - 1)))\n            diff_n_max = abs(t - avg - (h - c) / (2 * (2 * n_max - 1)))\n            if diff_n_min <= diff_n_max:\n                print(2 * n_min - 1)\n            else:\n                print(2 * n_max - 1)", "for _ in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if h == t:\n        print(1)\n    elif (h + c) / 2 >= t:\n        print(2)\n    else:\n        dif = t - (h + c) / 2\n        j = int(abs((c - h) // (2 * dif)))\n        if j % 2 == 0:\n            j += 1\n        print(j - 2) if dif - (h - c) / (2 * j) >= abs(dif - (h - c) / (2 * (j - 2))) else print(j)", "import math\nfor i in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if (h + c) / 2 >= t:\n        print(2)\n    else:\n        a = (h - t) // (2 * t - h - c)\n        b = a + 1\n        print(2 * a + 1 if 2 * t * (2 * a + 1) * (2 * b + 1) >= (2 * b + 1) * ((a + 1) * h + a * c) + (2 * a + 1) * ((b + 1) * h + b * c) else 2 * b + 1)", "import math\nfor i in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if (h + c) / 2 >= t:\n        print(2)\n    else:\n        a = (h - t) // (2 * t - h - c)\n        b = a + 1\n        print(2 * a + 1 if 2 * t * (2 * a + 1) * (2 * b + 1) >= (2 * b + 1) * ((a + 1) * h + a * c) + (2 * a + 1) * ((b + 1) * h + b * c) else 2 * b + 1)", "for _ in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if h == t:\n        print(1)\n    else:\n        xx = (h + c) / 2\n        if xx >= t:\n            print(2)\n        else:\n            dif = t - xx\n            j = int(abs((c - h) // (2 * dif)))\n            if j % 2 == 0:\n                j += 1\n            if dif - (h - c) / (2 * j) >= abs(dif - (h - c) / (2 * (j - 2))):\n                print(j - 2)\n            else:\n                print(j)", "import math\nt = int(input())\nfor _ in range(t):\n    (h, c, t) = map(int, input().split())\n    t3 = (h + c) / 2\n    if t == c or 2 * t <= h + c:\n        print(2)\n    elif t == h:\n        print(1)\n    elif t3 == t:\n        print(2)\n    else:\n        x1 = int((h - t) / (2 * t - h - c))\n        x2 = x1 + 1\n        if abs(x1 * (h + c) + h - (2 * x1 + 1) * t) * (2 * x2 + 1) <= abs(x2 * (h + c) + h - (2 * x2 + 1) * t) * (2 * x1 + 1):\n            print(2 * x1 + 1)\n        else:\n            print(2 * x2 + 1)", "t = int(input())\nfor _ in range(t):\n    (h, c, t) = map(int, input().split(' '))\n    tb = (h + c) // 2\n    if t == h:\n        print(1)\n    elif t <= tb:\n        print(2)\n    else:\n        k = (t - h) // (h + c - 2 * t)\n        if abs(k * (h + c) + h - t * (2 * k + 1)) * (2 * k + 3) <= abs((k + 1) * (h + c) + h - t * (2 * k + 3)) * (2 * k + 1):\n            print(2 * k + 1)\n        else:\n            print(2 * (k + 1) + 1)", "import math\ntest = int(input())\nfor _ in range(test):\n    (h, c, t) = map(int, input().split())\n    if t <= (h + c) / 2:\n        print(2)\n    else:\n        if (h - t) / (2 * t - h - c) - math.floor((h - t) / (2 * t - h - c)) >= 0.5:\n            k = math.floor((h - t) / (2 * t - h - c)) + 1\n            k1 = k + 1\n        else:\n            k = math.floor((h - t) / (2 * t - h - c))\n            k1 = k + 1\n        if (k * (h + c) + h) / (2 * k + 1) - t <= t - (k1 * (h + c) + h) / (2 * k1 + 1):\n            print(2 * (k + 1) - 1)\n        else:\n            print(2 * (k1 + 1) - 1)", "def temp(h, c, n):\n    return (h * (n + 1) + c * n, 2 * n + 1)\nfor _ in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if t * 2 <= h + c:\n        print(2)\n        continue\n    n = (h - t) // (2 * t - h - c)\n    n1 = n + 1\n    (a, b) = temp(h, c, n)\n    (a1, b1) = temp(h, c, n1)\n    (d, dn) = (abs(a - b * t), b)\n    (d1, dn1) = (abs(a1 - b1 * t), b1)\n    if d * dn1 > d1 * dn:\n        ans = n1\n    else:\n        ans = n\n    print(2 * ans + 1)", "for _ in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if h == t:\n        print(1)\n    else:\n        xx = (h + c) / 2\n        if xx == t:\n            print(2)\n        elif xx > t:\n            print(2)\n        else:\n            dif = t - xx\n            j = int(abs((c - h) // (2 * dif)))\n            if j % 2 == 0:\n                j += 1\n            if dif - (h - c) / (2 * j) >= abs(dif - (h - c) / (2 * (j - 2))):\n                print(j - 2)\n            else:\n                print(j)", "for _ in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if h == t:\n        print(1)\n    else:\n        xx = (h + c) / 2\n        if xx == t:\n            print(2)\n        elif xx > t:\n            print(2)\n        else:\n            dif = t - xx\n            j = int(abs((c - h) // (2 * dif)))\n            if j % 2 == 0:\n                j += 1\n            if dif - (h - c) / (2 * j) >= abs(dif - (h - c) / (2 * (j - 2))):\n                print(j - 2)\n            else:\n                print(j)", "for _ in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if h == t:\n        print(1)\n    else:\n        xx = (h + c) / 2\n        if xx >= t:\n            print(2)\n        else:\n            dif = t - xx\n            j = int(abs((c - h) // (2 * dif)))\n            if j % 2 == 0:\n                j += 1\n            if dif - (h - c) / (2 * j) >= abs(dif - (h - c) / (2 * (j - 2))):\n                print(j - 2)\n            else:\n                print(j)", "for _ in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if h == t:\n        print(1)\n    elif (h + c) / 2 >= t:\n        print(2)\n    else:\n        dif = t - (h + c) / 2\n        j = int(abs((c - h) // (2 * dif)))\n        if j % 2 == 0:\n            j += 1\n        print(j - 2) if dif - (h - c) / (2 * j) >= abs(dif - (h - c) / (2 * (j - 2))) else print(j)", "for _ in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if h == t:\n        print(1)\n    else:\n        xx = (h + c) / 2\n        if xx == t:\n            print(2)\n        elif xx > t:\n            print(2)\n        else:\n            dif = t - xx\n            jj = int(abs((c - h) // (2 * dif)))\n            if jj % 2 == 0:\n                jj += 1\n            if dif - (h - c) / (2 * jj) >= abs(dif - (h - c) / (2 * (jj - 2))):\n                print(jj - 2)\n            else:\n                print(jj)", "t = int(input())\nfor x in range(t):\n    (h, c, t) = map(int, input().split())\n    if t >= h:\n        print(1)\n    elif t <= (h + c) / 2:\n        print(2)\n    else:\n        k = (c - t) // (h + c - 2 * t)\n        prev = abs((k * (h + c - 2 * t) - c + t) / (2 * k - 1))\n        cur = abs(((k + 1) * (h + c - 2 * t) - c + t) / (2 * k + 1))\n        if prev <= cur:\n            print(2 * k - 1)\n        else:\n            print(2 * k + 1)", "import math\nfor i in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if (h + c) / 2 >= t:\n        print(2)\n    else:\n        a = (h - t) // (2 * t - h - c)\n        b = a + 1\n        print(2 * a + 1 if 2 * t * (2 * a + 1) * (2 * b + 1) >= (2 * b + 1) * ((a + 1) * h + a * c) + (2 * a + 1) * ((b + 1) * h + b * c) else 2 * b + 1)", "import math\nt = int(input())\nfor _ in range(t):\n    (h, c, t) = map(int, input().split())\n    even_last = h + c - t * 2\n    if even_last >= 0:\n        print(2)\n    else:\n        a = h - t\n        b = 2 * t - (h + c)\n        k = 2 * (a // b) + 1\n        v1 = abs(k // 2 * c + (k + 1) // 2 * h - k * t)\n        v2 = abs((k + 2) // 2 * c + (k + 3) // 2 * h - (k + 2) * t)\n        if v1 * (k + 2) <= v2 * k:\n            print(k)\n        else:\n            print(k + 2)", "import math\n\ndef getValue(num, data):\n    [hot, cold, t] = data\n    more = math.ceil(num)\n    less = math.floor(num)\n    f = (hot * more + cold * (more - 1)) / (2 * more - 1)\n    s = (hot * less + cold * (less - 1)) / (2 * less - 1)\n    if (more - num) * 10 == 5:\n        return more\n    if abs(f - t) < abs(s - t):\n        return more\n    else:\n        return less\n\ndef countCups(info):\n    [h, c, t] = info\n    cups = 0\n    a = c - t\n    b = h + c - 2 * t\n    if b == 0:\n        cups = 2\n    else:\n        x = a / b\n        if x <= 0:\n            cups = 2\n        else:\n            x = getValue(x, info)\n            cups = 2 * x - 1\n    return cups\nfor _ in range(int(input())):\n    data = [*map(int, input().split(' '))]\n    print(countCups(data))", "def f(h, c, t):\n    if t <= (c + h) / 2:\n        return 2\n    if t >= h:\n        return 1\n    x = (t - c) // (2 * t - h - c)\n    if (4 * x * x + 2 * x - 1) * h + (4 * x * x - 2 * x - 1) * c <= 2 * (4 * x * x - 1) * t:\n        return 2 * x - 1\n    else:\n        return 2 * x + 1\nt = int(input())\nfor i in range(t):\n    [h, c, t] = input().split(' ')\n    print(f(int(h), int(c), int(t)))", "for _ in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if t <= (h + c) / 2:\n        print(2)\n    else:\n        k = (h - t) // (2 * t - h - c)\n        if abs((2 * k + 3) * t - k * h - 2 * h - k * c - c) * (2 * k + 1) < abs((2 * k + 1) * t - k * h - h - k * c) * (2 * k + 3):\n            print(2 * k + 3)\n        else:\n            print(2 * k + 1)", "import math\ntests = int(input())\nfor _ in range(tests):\n    (h, c, t) = map(int, input().split())\n    if 2 * t <= h + c:\n        print(2)\n    else:\n        m = (h - t) / (2 * t - h - c)\n        if m == 0:\n            print(1)\n        else:\n            m1 = math.ceil(m)\n            m2 = math.floor(m)\n            if abs((m2 + 1) * h + m2 * c - (2 * m2 + 1) * t) < abs((m1 + 1) * h + m1 * c - (2 * m1 + 1) * t):\n                if abs(((m2 + 1) * h + m2 * c) / (2 * m2 + 1) - t) <= abs(((m1 + 1) * h + m1 * c) / (2 * m1 + 1) - t):\n                    print(2 * m2 + 1)\n                else:\n                    print(2 * m1 + 1)\n            else:\n                print(2 * m1 + 1)", "def temp(h, c, n):\n    return (h * (n + 1) + c * n, 2 * n + 1)\nfor _ in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if t * 2 <= h + c:\n        print(2)\n        continue\n    n = (h - t) // (2 * t - h - c)\n    n1 = n + 1\n    (a, b) = temp(h, c, n)\n    (a1, b1) = temp(h, c, n1)\n    (d, dn) = (abs(a - b * t), b)\n    (d1, dn1) = (abs(a1 - b1 * t), b1)\n    if d * dn1 > d1 * dn:\n        ans = n1\n    else:\n        ans = n\n    print(2 * ans + 1)", "cases = int(input())\nfor _ in range(cases):\n    (h, c, t) = [int(x) for x in input().split()]\n    if t <= (h + c) / 2:\n        print(2)\n        continue\n    n = (t - h) / (h + c - 2 * t)\n    (x, y) = (int(n), int(n) + 1)\n    xx = (x + 1) * h + x * c\n    yy = (y + 1) * h + y * c\n    if xx * (2 * y + 1) + yy * (2 * x + 1) <= 2 * t * (2 * y + 1) * (2 * x + 1):\n        print(2 * x + 1)\n    else:\n        print(2 * y + 1)", "t = int(input())\nfor _ in range(t):\n    (h, c, t) = map(int, input().split())\n    avg = (h + c) / 2\n    if t == h:\n        print(1)\n        continue\n    if avg >= t:\n        print(2)\n        continue\n    else:\n        n1 = int((t - c) / (2 * t - h - c))\n        n2 = 2 * t * (2 * n1 - 1) * (2 * n1 + 1)\n        n3 = ((n1 - 1) * (c + h) + h) * (2 * n1 + 1) + (n1 * (c + h) + h) * (2 * n1 - 1)\n        if n2 >= n3:\n            print(2 * n1 - 1)\n        else:\n            print(2 * n1 + 1)", "for _ in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if h + c - 2 * t >= 0:\n        print(2)\n    else:\n        a = h - t\n        b = 2 * t - c - h\n        k = 2 * (a // b) + 1\n        val1 = abs(k // 2 * 1 * c + (k + 1) // 2 * 1 * h - t * 1 * k)\n        val2 = abs((k + 2) // 2 * 1 * c + (k + 3) // 2 * 1 * h - t * 1 * (k + 2))\n        if val1 * (k + 2) <= val2 * k:\n            print(k)\n        else:\n            print(k + 2)", "import math\n\ndef getValue(num, data):\n    [hot, cold, t] = data\n    more = math.ceil(num)\n    less = math.floor(num)\n    f = (hot * more + cold * (more - 1)) / (2 * more - 1)\n    s = (hot * less + cold * (less - 1)) / (2 * less - 1)\n    if abs(f - t) == abs(s - t):\n        if (more - num) * 10 == 5:\n            return more\n        return less\n    if abs(f - t) < abs(s - t):\n        return more\n    else:\n        return less\n\ndef countCups(info):\n    [h, c, t] = info\n    cups = 0\n    a = c - t\n    b = h + c - 2 * t\n    if b == 0:\n        cups = 2\n    else:\n        x = a / b\n        if x <= 0:\n            cups = 2\n        else:\n            x = getValue(x, info)\n            cups = 2 * x - 1\n    return cups\nfor _ in range(int(input())):\n    data = list(map(int, input().split(' ')))\n    print(countCups(data))", "import math\n\ndef getValue(num, data):\n    [hot, cold, t] = data\n    more = math.ceil(num)\n    less = math.floor(num)\n    f = (hot * more + cold * (more - 1)) / (2 * more - 1)\n    s = (hot * less + cold * (less - 1)) / (2 * less - 1)\n    if abs(f - t) < abs(s - t) or (more - num) * 10 == 5:\n        return more\n    else:\n        return less\n\ndef countCups(info):\n    [h, c, t] = info\n    cups = 0\n    a = c - t\n    b = h + c - 2 * t\n    if b == 0:\n        cups = 2\n    else:\n        x = a / b\n        if x <= 0:\n            cups = 2\n        else:\n            x = getValue(x, info)\n            cups = 2 * x - 1\n    return cups\nfor _ in range(int(input())):\n    data = [*map(int, input().split(' '))]\n    print(countCups(data))", "test = int(input())\nwhile test:\n    (h, c, t) = map(int, input().split())\n    choto = abs(h + c - t)\n    if (h + c - 2 * t) * (t - c) >= 0:\n        print(2)\n    else:\n        x = int((c - t) / (h + c - 2 * t))\n        m = abs((x * (h + c - 2 * t) + t - c) / (2 * x - 1))\n        n = abs(((x + 1) * (h + c - 2 * t) + t - c) / (2 * (x + 1) - 1))\n        if m <= n:\n            print(2 * x - 1)\n        else:\n            print(2 * x + 1)\n    test -= 1", "import math\nq = int(input())\nwhile q:\n    q -= 1\n    (h, c, t) = map(int, input().split())\n    if t == h:\n        print(1)\n    elif t <= (h + c) / 2:\n        print(2)\n    else:\n        k = int((h - t) / (2 * t - h - c))\n        b = (2 * k + 3) * abs((k + 1) * h + k * c - t * (2 * k + 1))\n        d = (2 * k + 1) * abs((k + 2) * h + (k + 1) * c - t * (2 * k + 3))\n        if b <= d:\n            print(2 * k + 1)\n        else:\n            print(2 * k + 3)", "cases = int(input())\nfor _ in range(cases):\n    (h, c, t) = [int(x) for x in input().split()]\n    if t <= (h + c) / 2:\n        print(2)\n        continue\n    n = (t - h) / (h + c - 2 * t)\n    (x, y) = (int(n), int(n) + 1)\n    xx = (x + 1) * h + x * c\n    yy = (y + 1) * h + y * c\n    if xx * (2 * y + 1) + yy * (2 * x + 1) <= 2 * t * (2 * y + 1) * (2 * x + 1):\n        print(2 * x + 1)\n    else:\n        print(2 * y + 1)", "for tt in range(int(input())):\n    (h, c, t) = map(int, input().split())\n    if t <= (h + c) // 2:\n        print(2)\n    else:\n        num = int((t - h) / (h + c - 2 * t))\n        num = 2 * num + 1\n        if num % 2:\n            op1 = num\n            op2 = num + 2\n            c1 = abs((op1 // 2 + 1) * h + op1 // 2 * c - t * op1)\n            c2 = abs((op2 // 2 + 1) * h + op2 // 2 * c - t * op2)\n            if c1 * op2 <= c2 * op1:\n                print(op1)\n            else:\n                print(op2)", "for _ in range(int(input())):\n    (h, c, t) = [int(x) for x in input().split()]\n    if t == h:\n        print(1)\n    elif (h + c) / 2 >= t:\n        print(2)\n    else:\n        m = int((t - c) / (2 * t - c - h))\n        temp = abs((m * (h + c - 2 * t) + t - c) / (2 * m - 1))\n        temp1 = abs(((m + 1) * (h + c - 2 * t) + t - c) / (2 * (m + 1) - 1))\n        print(2 * m - 1 if temp <= temp1 else 2 * m + 1)", "from math import *\ns = int(input())\nfor _ in range(s):\n    (h, c, t) = map(int, input().split())\n    k = (h + c) / 2\n    if k >= t:\n        ans = 2\n    else:\n        d = h - t\n        x = 2 * t - h - c\n        l = d // x\n        a = (l + 1) * h + l * c\n        m = abs(a - t * (2 * l + 1))\n        m = m * (2 * l + 3)\n        b = (l + 2) * h + (l + 1) * c\n        n = abs(b - t * (2 * l + 3))\n        n = n * (2 * l + 1)\n        if m > n:\n            ans = 2 * l + 3\n        else:\n            ans = 2 * l + 1\n    print(ans)", "tests = int(input())\nfor _ in range(tests):\n    (h, c, t) = map(int, input().split())\n    if t == h:\n        print(1)\n        continue\n    if t <= (h + c) / 2:\n        print(2)\n        continue\n    target = t - (h + c) / 2\n    dif = h - c\n    tmp = int(dif // (2 * target))\n    if tmp <= 0:\n        tmp = 1\n    if tmp % 2 == 0:\n        tmp = tmp - 1\n    val = 500000000\n    ans = 0\n    if abs(target - dif / (2 * tmp)) < val:\n        val = abs(target - dif / (2 * tmp))\n        ans = tmp\n    if abs(target - dif / (2 * (tmp + 2))) < val:\n        val = abs(target - dif / (2 * (tmp + 2)))\n        ans = tmp + 2\n    if abs(target - dif / (2 * (tmp + 4))) < val:\n        ans = tmp + 4\n    print(ans)", "for case in range(int(input())):\n    a = input().split(' ')\n    h = int(a[0])\n    c = int(a[1])\n    t = int(a[2])\n    avg = (h + c) / 2\n    if t < avg:\n        ans = 2\n    elif t == avg:\n        ans = 2\n    elif t == h:\n        ans = 1\n    elif h > t > avg:\n        diff = t - avg\n        v = (h - avg) // diff\n        if v % 2 == 0:\n            v1 = (h - avg) / (v + 1)\n            v2 = (h - avg) / (v - 1)\n            d1 = abs(diff - v1)\n            d2 = abs(diff - v2)\n            if d1 >= d2:\n                ans = v - 1\n            else:\n                ans = v + 1\n        else:\n            v1 = (h - avg) / (v - 2)\n            v2 = (h - avg) / v\n            v3 = (h - avg) / (v + 2)\n            d1 = abs(diff - v1)\n            d2 = abs(diff - v2)\n            d3 = abs(diff - v3)\n            if d1 <= d2 and d1 <= d3:\n                ans = v - 2\n            elif d2 <= d1 and d2 <= d3:\n                ans = v\n            else:\n                ans = v + 2\n    else:\n        ans = 1\n    print(int(ans))", "for _ in range(int(input())):\n    (h, c, t) = list(map(int, input().split()))\n    av = (h + c) / 2\n    if t >= h:\n        print(1)\n        continue\n    elif t <= av:\n        print(2)\n        continue\n    x = (h - t) // (2 * t - (h + c))\n    t1 = (x + 1) * h + x * c\n    t2 = (x + 2) * h + (x + 1) * c\n    if abs(t * (2 * x + 1) - t1) * (2 * x + 3) <= abs(t * (2 * x + 3) - t2) * (2 * x + 1):\n        print(x * 2 + 1)\n    else:\n        print(2 * x + 3)"]