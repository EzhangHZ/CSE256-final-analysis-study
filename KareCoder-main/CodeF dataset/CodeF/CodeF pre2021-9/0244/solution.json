["t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    l = sorted(list(map(int, input().split())))\n    s = sum(l)\n    for i in l:\n        if s >= n * k:\n            break\n        (s, n) = (s - i, n - 1)\n    print(n)", "import sys\nimport math\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef rs():\n    return sys.stdin.readline().rstrip()\n\ndef ri():\n    return int(sys.stdin.readline())\n\ndef ria():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef ws(s):\n    sys.stdout.write(s + '\\n')\n\ndef wi(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef wia(a):\n    sys.stdout.write(' '.join([str(x) for x in a]) + '\\n')\n\ndef main(tc: int):\n    (n, x) = mp()\n    a = ria()\n    sum = 0\n    pos = 0\n    a.sort(reverse=True)\n    for i in a:\n        sum += i\n        pos += 1\n        if sum // pos < x:\n            pos -= 1\n            break\n    wi(pos)\nt = ri()\nfor tc in range(1, t + 1):\n    main(tc)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    total = 0\n    for i in range(n):\n        total += l[i]\n        if total / (i + 1) < x:\n            print(i)\n            break\n    else:\n        print(n)", "def main():\n    t = int(input())\n    for it in range(t):\n        (n, x) = [int(i) for i in input().split()]\n        a = [int(i) for i in input().split()]\n        a.sort()\n        total = sum(a)\n        impossible = True\n        for i in range(n, 0, -1):\n            if total >= i * x:\n                print(i)\n                impossible = False\n                break\n            total -= a[n - i]\n        if impossible:\n            print(0)\nmain()", "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n    (n, x) = R()\n    a = sorted(R())\n    s = sum(a)\n    while s < n * x:\n        s -= a[-n]\n        n -= 1\n    print(n)", "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n    (n, x) = R()\n    a = sorted(R())\n    s = sum(a)\n    while s < n * x:\n        s -= a[-n]\n        n -= 1\n    print(n)", "def main():\n    while True:\n        try:\n            t = int(input(''))\n            for _ in range(t):\n                line1 = [int(x) for x in input('').split()]\n                (n, x) = (line1[0], line1[1])\n                a = [int(x) for x in input('').split()]\n                a.sort(reverse=True)\n                summ = 0\n                count = 0\n                for person in a:\n                    if (summ + person) / (count + 1) < x:\n                        break\n                    else:\n                        summ += person\n                        count += 1\n                print(count)\n        except EOFError:\n            exit()\nmain()", "def main():\n    while True:\n        try:\n            t = int(input(''))\n            for _ in range(t):\n                line1 = [int(x) for x in input().split()]\n                (n, x) = (line1[0], line1[1])\n                a = [int(x) for x in input().split()]\n                a.sort(reverse=True)\n                summ = 0\n                count = 0\n                for person in a:\n                    if (summ + person) / (count + 1) < x:\n                        break\n                    else:\n                        summ += person\n                        count += 1\n                print(count)\n        except EOFError:\n            exit()\nmain()", "while True:\n    try:\n        T = int(input())\n        for i in range(T):\n            (n, x) = input().split()\n            n = int(n)\n            x = int(x)\n            money = list(input().split())\n            money = list(map(int, money))\n            result = 0\n            sum = 0\n            money.sort(reverse=True)\n            for j in range(len(money)):\n                sum += money[j]\n                if sum < x * (j + 1):\n                    break\n                else:\n                    result += 1\n            print(result)\n    except EOFError:\n        break", "test = int(input())\nfor _ in range(test):\n    (n, x) = map(int, input().split())\n    alist = list(map(int, input().split()))\n    avg = sum(alist) / n\n    if avg >= x:\n        print(n)\n        continue\n    over_x = 0\n    below = []\n    count = 0\n    for i in alist:\n        if i >= x:\n            over_x += i - x\n        else:\n            count += 1\n            below.append(i)\n    for i in sorted(below, reverse=True):\n        need = x - i\n        if over_x >= need:\n            over_x -= need\n            count -= 1\n        else:\n            break\n    print(n - count)", "t = int(input())\nfor _ in range(t):\n    e = False\n    (n, x) = map(int, input().split())\n    nl = list(map(int, input().split()))\n    nl.sort(reverse=True)\n    ans = 0\n    i = 0\n    while i < n:\n        ans += nl[i]\n        if ans / (i + 1) >= x:\n            i += 1\n        else:\n            break\n    print(i)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    w = sorted(map(int, input().split()), reverse=True)\n    c = 0\n    for i in range(n):\n        if w[i] > x:\n            c += w[i] - x\n        elif w[i] < x:\n            c -= x - w[i]\n        if c < 0:\n            print(i)\n            break\n    else:\n        print(n)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(map(int, input().split()))\n    (s, c) = (sum(a), 0)\n    for i in a:\n        if s >= x * n:\n            break\n        (s, n) = (s - i, n - 1)\n    print(n)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    savings = list(map(int, input().split()))\n    savings.sort()\n    count = 1\n    ans = 0\n    total = 0\n    for i in reversed(range(n)):\n        total += savings[i]\n        if total / count >= x:\n            ans += 1\n        else:\n            break\n        count += 1\n    print(ans)", "t = int(input())\nfor z in range(t):\n    (n, x) = map(int, input().split())\n    arr = [int(i) for i in input().split()]\n    arr.sort()\n    a_sum = sum(arr)\n    ans = 0\n    for i in range(n):\n        if a_sum / (n - i) >= x:\n            ans = n - i\n            break\n        a_sum -= arr[i]\n    print(ans)", "num_inp = lambda : int(input())\narr_inp = lambda : list(map(int, input().split()))\nsp_inp = lambda : map(int, input().split())\nstr_inp = lambda : input()\nI = lambda : list(map(int, input().split()))\nfor _ in range(int(input())):\n    (n, x) = I()\n    w = sorted(I())\n    an = n\n    s = sum(w)\n    for i in range(n):\n        if x <= s / an:\n            break\n        an -= 1\n        s -= w[i]\n    print(an)", "for _ in range(int(input())):\n    [n, x] = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    (g, l, e) = ([], [], 0)\n    for i in a:\n        if i > x:\n            g.append(i)\n        elif i < x:\n            l.append(i)\n        else:\n            e += 1\n    (gl, ll) = (len(g), len(l))\n    if ll == 0:\n        print(e + gl)\n    elif gl == 0:\n        print(e)\n    else:\n        (gn, ln) = (0, 0)\n        l = sorted(l)[::-1]\n        p = False\n        for j in g:\n            gn += j - x\n        for k in range(ll):\n            ln += x - l[k]\n            if ln > gn:\n                print(gl + e + k)\n                p = True\n                break\n        if p == False:\n            print(e + gl + ll)", "for _ in range(int(input())):\n    [n, x] = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    (g, l, e) = ([], [], 0)\n    for i in a:\n        if i > x:\n            g.append(i)\n        elif i < x:\n            l.append(i)\n        else:\n            e += 1\n    (gl, ll) = (len(g), len(l))\n    if ll == 0:\n        print(e + gl)\n    elif gl == 0:\n        print(e)\n    else:\n        (gn, ln) = (0, 0)\n        l = sorted(l)[::-1]\n        p = False\n        for j in g:\n            gn += j - x\n        for k in range(ll):\n            ln += x - l[k]\n            if ln > gn:\n                print(gl + e + k)\n                p = True\n                break\n        if p == False:\n            print(e + gl + ll)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    m = sorted(list(map(int, input().split())))\n    s = sum(m)\n    while s < n * x:\n        s -= m[-n]\n        n -= 1\n    print(n)", "def numberOfRiches(size, people, k):\n    people.sort()\n    index = size - 1\n    count = 0\n    sumVal = 0\n    while index >= 0:\n        sumVal += people[index]\n        count += 1\n        if sumVal / count < k:\n            return count - 1\n        index -= 1\n    return size\nsize = int(input())\nfor i in range(size):\n    (length, k) = list(map(int, input().split(' ')))\n    arr = list(map(int, input().split(' ')))\n    print(numberOfRiches(length, arr, k))", "import sys\ninput = lambda : sys.stdin.readline()\nint_arr = lambda : list(map(int, input().split()))\nstr_arr = lambda : list(map(str, input().split()))\nget_str = lambda : map(str, input().split())\nget_int = lambda : map(int, input().split())\nget_flo = lambda : map(float, input().split())\nmod = 1000000007\n\ndef solve(n, k, arr):\n    atp = len([i for i in arr if i >= k])\n    if n == atp:\n        print(atp)\n        return\n    tot = sum(arr)\n    i = 0\n    while n > atp:\n        if tot / n >= k:\n            print(n)\n            return\n        else:\n            n -= 1\n            tot -= arr[i]\n            i += 1\n    print(atp)\nfor _ in range(int(input())):\n    (n, k) = get_int()\n    arr = sorted(int_arr())\n    solve(n, k, arr)", "from math import ceil, gcd, trunc\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom array import array\nfrom collections import Counter as ctr\n\ndef li():\n    return list(map(int, input().split()))\n\ndef arr(a):\n    return array('i', a)\n\ndef solve():\n    for _ in range(int(input())):\n        (n, x) = li()\n        a = li()\n        if sum(a) / n >= x:\n            print(n)\n        elif max(a) < x:\n            print(0)\n        elif max(a) == x:\n            print(a.count(max(a)))\n        else:\n            a.sort()\n            w = br(a, x)\n            s1 = sum(a[w:])\n            while s1 >= x * (n - w):\n                w -= 1\n                s1 += a[w]\n            print(n - w - 1)\nsolve()", "for i in range(int(input())):\n    (num, mx) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort(reverse=True)\n    leftover = 0\n    cnt = 0\n    for num in arr:\n        if num < mx:\n            leftover -= mx - num\n            if leftover < 0:\n                break\n            else:\n                cnt += 1\n        else:\n            cnt += 1\n            leftover += num - mx\n    print(cnt)", "t = int(input())\nfor i in range(t):\n    (n, x) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    a.sort(reverse=True)\n    (res, pos, check) = (0, 0, 1)\n    for i in range(n):\n        res += a[i]\n        if res / (i + 1) < x:\n            pos = i\n            check = 0\n            break\n    if check == 1:\n        print(n)\n    else:\n        print(pos)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    sum_ = 0\n    b = a[:n]\n    b.sort()\n    c = a[n:]\n    for i in c:\n        b.append(i)\n    k = 0\n    for i in range(n - 1, -1, -1):\n        sum_ += b[i] - x\n        if sum_ < 0:\n            break\n        k += 1\n    print(k)", "for i in range(int(input())):\n    s = 0\n    c = 0\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    for j in range(n):\n        s = s + a[j]\n        if s / (j + 1) >= x:\n            c += 1\n    print(c)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    lst = [i for i in map(int, input().split())]\n    lst.sort(reverse=True)\n    s = 0\n    ans = -1\n    for i in range(len(lst)):\n        s += lst[i]\n        if s / (i + 1) < x:\n            ans = i\n            break\n    if ans == -1:\n        print(len(lst))\n    else:\n        print(ans)", "def testCase():\n    (n, x) = map(int, input().split())\n    people = list(map(int, input().split()))\n    people.sort(reverse=True)\n    count = 0\n    reqSum = 0\n    realSum = 0\n    for person in people:\n        count += 1\n        reqSum += x\n        realSum += person\n        if realSum < reqSum:\n            return count - 1\n    return n\nrez = []\nt = int(input())\nfor i in range(t):\n    rez.append(testCase())\nfor r in rez:\n    print(r)", "R1 = lambda : list(map(int, input().split()))\nR2 = lambda : int(input())\nt = R2()\nfor _ in range(t):\n    (n, x) = R1()\n    a = sorted(R1())\n    s = sum(a)\n    d = n\n    for i in range(n):\n        if s / d >= x:\n            print(d)\n            break\n        s -= a[i]\n        d -= 1\n    else:\n        print(d)", "def answer(n, x, a):\n    a.sort(reverse=True)\n    sa = [a[0]]\n    for i in range(1, n):\n        sa.append(a[i] + sa[-1])\n    for i in range(n):\n        if sa[i] >= (i + 1) * x:\n            pass\n        else:\n            return i\n    return n\n\ndef main():\n    T = int(input())\n    n = [0] * T\n    x = [0] * T\n    a = [0] * T\n    for j in range(T):\n        (n[j], x[j]) = [int(i) for i in input().split()]\n        a[j] = [int(i) for i in input().split()]\n    for j in range(T):\n        print(answer(n[j], x[j], a[j]))\nmain()", "import sys\ninput = lambda : sys.stdin.readline()\nint_arr = lambda : list(map(int, input().split()))\nstr_arr = lambda : list(map(str, input().split()))\nget_str = lambda : map(str, input().split())\nget_int = lambda : map(int, input().split())\nget_flo = lambda : map(float, input().split())\nmod = 1000000007\n\ndef solve(n, k, arr):\n    arr.sort()\n    atp = len([i for i in arr if i >= k])\n    if n == atp:\n        print(atp)\n        return\n    tot = sum(arr)\n    i = 0\n    while n > atp:\n        if tot / n >= k:\n            print(n)\n            return\n        else:\n            n -= 1\n            tot -= arr[i]\n            i += 1\n    print(atp)\nfor _ in range(int(input())):\n    (n, k) = get_int()\n    arr = int_arr()\n    solve(n, k, arr)", "import math\nfrom sys import stdin\nmx = math.inf\nmn = -math.inf\n\ndef i():\n    return int(stdin.readline().strip())\n\ndef f():\n    return float(stdin.readline().strip())\n\ndef s():\n    return stdin.readline().strip()\n\ndef ari():\n    return list(map(int, stdin.readline().split()))\n\ndef arf():\n    return list(map(float, stdin.readline().split()))\n\ndef ars():\n    return list(map(str, stdin.readline().split()))\n\ndef main():\n    (n, x) = ari()\n    arr = ari()\n    arr.sort(reverse=True)\n    (cnt, s) = (0, 0)\n    for i in range(n):\n        s += arr[i]\n        if s / (i + 1) >= x:\n            cnt += 1\n        else:\n            break\n    print(cnt)\nt = 1\nt = i()\nfor _ in range(t):\n    main()", "list_ans = []\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    list1 = list(map(int, input().split()))\n    list1.sort()\n    a = sum(list1)\n    i = 0\n    while n > 0 and a / n < x:\n        a -= list1[i]\n        i += 1\n        n -= 1\n    list_ans.append(n)\nfor item in list_ans:\n    print(item)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = sum(a) / n\n    if s >= x:\n        print(n)\n    else:\n        a.sort(reverse=True)\n        if a[0] < x:\n            print(0)\n        else:\n            extra = 0\n            i = 0\n            while i < n and a[i] >= x:\n                extra += a[i] - x\n                i += 1\n            while i < n and extra >= x - a[i]:\n                extra -= x - a[i]\n                i += 1\n            print(i)", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = [*map(int, input().split())]\n    s = 0\n    f = n\n    for (i, e) in enumerate(sorted(a, reverse=1)):\n        if (e + s) // (i + 1) < x:\n            f = i\n            break\n        s += e\n    print(f)", "import math\nfor i in range(0, int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    sum_ = 0\n    count = 0\n    for i in range(0, len(a)):\n        sum_ += a[i]\n        if sum_ >= (i + 1) * x:\n            count += 1\n        else:\n            break\n    print(count)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = sorted([int(j) for j in input().split()])\n    summa = sum(c)\n    ans = a\n    for j in range(a):\n        if summa / ans >= b:\n            break\n        else:\n            summa -= c[j]\n            ans -= 1\n    print(ans)", "for i in range(int(input())):\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    k = sum(a)\n    s = k / n\n    count = n\n    a.sort()\n    while s < x:\n        count -= 1\n        if count == 0:\n            break\n        k -= a[n - count - 1]\n        s = k / count\n    print(count)", "def solve():\n    (n, p) = map(int, input().split())\n    v = [int(x) for x in input().split()]\n    v = sorted(v)\n    sum = 0\n    for x in v:\n        sum += x\n    for i in range(n):\n        if sum // (n - i) >= p:\n            print(n - i)\n            return\n        else:\n            sum -= v[i]\n    print(0)\nfor _ in range(int(input())):\n    solve()", "def main():\n    testcases = int(input())\n    for t in range(testcases):\n        line1 = input().split()\n        n = int(line1[0])\n        x = int(line1[1])\n        line2 = input().split()\n        savings = []\n        ans = 0\n        sum = 0\n        for i in range(n):\n            savings.append(int(line2[i]))\n        savings.sort(reverse=1)\n        i = 0\n        while i < len(savings) and (sum + savings[i]) / (ans + 1) >= x:\n            sum += savings[i]\n            ans += 1\n            i += 1\n        print(ans)\nmain()", "cases = int(input())\nfor i in range(cases):\n    (size, minimum) = [int(x) for x in input().split()]\n    savings = [int(x) for x in input().split()]\n    savings.sort(reverse=True)\n    money = count = 0\n    for s in savings:\n        if (money + s) / (count + 1) < minimum:\n            break\n        else:\n            money += s\n            count += 1\n    print(count)", "while True:\n    try:\n        T = int(input())\n        for i in range(T):\n            (n, x) = input().split()\n            n = int(n)\n            x = int(x)\n            money = list(input().split())\n            money = list(map(int, money))\n            result = 0\n            sum = 0\n            money.sort(reverse=True)\n            for j in range(len(money)):\n                sum += money[j]\n                if sum / (j + 1) < x:\n                    break\n                else:\n                    result += 1\n            print(result)\n    except EOFError:\n        break", "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n    (n, x) = R()\n    a = sorted(R())\n    s = sum(a)\n    while s < n * x:\n        s -= a[-n]\n        n -= 1\n    print(n)", "t = int(input())\nfor e in range(t):\n    (n, x) = map(int, input().rstrip().split())\n    arr = list(map(int, input().rstrip().split()))\n    arr.sort(reverse=True)\n    count = 0\n    summ = 0\n    s = 0\n    d = 1\n    for i in range(n):\n        summ = summ + arr[i]\n        s = summ / d\n        d += 1\n        if s >= x:\n            count += 1\n            continue\n        else:\n            break\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().strip().split()))\n    a.sort(reverse=True)\n    c = s = f = 0\n    for i in range(n):\n        s += a[i]\n        if s / (i + 1) >= x:\n            c += 1\n        else:\n            f = 1\n            break\n    print(c)", "for t in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = sorted(list(map(int, input().split())))[::-1]\n    h = 0\n    a = 0\n    while h >= 0 and a < n:\n        if arr[a] - x + h >= 0:\n            h += arr[a] - x\n            a += 1\n        else:\n            break\n    print(a)", "a1 = int(input())\nwhile a1:\n    number = 0\n    carry = 0\n    a2 = [int(i) for i in input().split()]\n    a1 -= 1\n    a = [int(i) for i in input().split()]\n    a.sort()\n    a = a[::-1]\n    for i in range(a2[0]):\n        if a[i] + carry - a2[1] >= 0:\n            number += 1\n            carry = a[i] + carry - a2[1]\n        else:\n            break\n    print(number)", "I = input\nfor _ in range(int(I())):\n    (n, x) = map(int, I().split())\n    lst = sorted(map(int, I().split()), reverse=True)\n    (res, i) = (0, 0)\n    while res >= 0 and i < n:\n        res += lst[i] - x\n        i += 1\n    print(i - 1 if res < 0 else i)", "test_cases = int(input())\n\ndef handle():\n    (_, x) = input().split(' ')\n    x = int(x)\n    values = sorted([int(s) for s in input().split(' ')], reverse=True)\n    count = 0\n    summation = 0\n    for value in values:\n        if value >= x:\n            summation += value\n            count += 1\n        elif count > 0 and (summation + value) / (count + 1) >= x:\n            summation += value\n            count += 1\n        else:\n            break\n    return count\nfor _ in range(test_cases):\n    print(handle())", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort(reverse=True)\n    answer = 0\n    freq = 0\n    value = 0\n    for i in range(n):\n        value += arr[i]\n        freq += 1\n        if value / freq >= x:\n            answer += 1\n        else:\n            break\n    print(answer)", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    s = 0\n    c = 0\n    for i in range(n):\n        s += a[i]\n        if s / (i + 1) >= x:\n            c += 1\n    print(c)", "import sys\n\ndef main():\n    res = ''\n    input = sys.stdin.readline\n    print = sys.stdout.write\n    t = int(input())\n    for _ in range(t):\n        count_rich = 0\n        (n, x) = map(int, input().split())\n        cash = list(map(int, input().split()))\n        cash.sort()\n        l = -1\n        r = n\n        while l + 1 < r:\n            mid = (l + r) // 2\n            if cash[mid] >= x:\n                r = mid\n            else:\n                l = mid\n        if l == -1:\n            count_rich = n\n        elif r != n:\n            count_rich = n - r\n            cash_of_rich = sum(cash[r:]) - x * count_rich\n            while cash_of_rich > 0 and l >= 0:\n                cash_of_rich -= x - cash[l]\n                if cash_of_rich >= 0:\n                    count_rich += 1\n                l -= 1\n        res += str(count_rich) + '\\n'\n    print(res)\nmain()", "from itertools import accumulate\nt = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split(' ')))\n    nums = list(map(int, input().split(' ')))\n    ans = 0\n    nums.sort(reverse=True)\n    acc = list(accumulate(nums))\n    s = 0\n    OK = -1\n    NG = n\n    m = (OK + NG) // 2\n\n    def judge(m):\n        return acc[m] >= k * (m + 1)\n    while NG - OK > 1:\n        if judge(m):\n            OK = m\n        else:\n            NG = m\n        m = (OK + NG) // 2\n    print(OK + 1)", "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n    (n, x) = R()\n    a = sorted(R())\n    s = sum(a)\n    while s < n * x:\n        s -= a[-n]\n        n -= 1\n    print(n)", "for i in range(int(input())):\n    (a, b) = [int(i) for i in input().split()]\n    l = [int(i) for i in input().split()]\n    l.sort(reverse=True)\n    count = 0\n    sumi = 0\n    for i in range(a):\n        if l[i] < b:\n            k = b - l[i]\n            if sumi >= k:\n                count += 1\n                sumi -= k\n        else:\n            count += 1\n            sumi += l[i] - b\n    print(count)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    m = list(map(int, input().split()))\n    m.sort()\n    s = sum(m)\n    num = n\n    for i in range(n):\n        if x <= s / num:\n            break\n        s = s - m[i]\n        num -= 1\n    print(num)", "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n    (n, x) = R()\n    a = sorted(R())\n    s = sum(a)\n    while s < n * x:\n        s -= a[-n]\n        n -= 1\n    print(n)", "for i in range(int(input())):\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    total = sum(a)\n    for j in sorted(a):\n        if x > total / n:\n            n -= 1\n            total -= j\n    print(n)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(sorted(map(int, input().split())))\n    i = 0\n    su = sum(a)\n    while su < n * m:\n        n -= 1\n        su -= a[i]\n        i += 1\n    print(n)", "from sys import *\ninput = lambda : stdin.readline()\nint_arr = lambda : list(map(int, stdin.readline().strip().split()))\nstr_arr = lambda : list(map(str, stdin.readline().split()))\nget_str = lambda : map(str, stdin.readline().strip().split())\nget_int = lambda : map(int, stdin.readline().strip().split())\nget_float = lambda : map(float, stdin.readline().strip().split())\nmod = 1000000007\nsetrecursionlimit(1000)\nfor _ in range(int(input())):\n    (n, x) = get_int()\n    arr = int_arr()\n    arr.sort(reverse=True)\n    if arr[0] < x:\n        print(0)\n    else:\n        (ct, tot) = (0, 0)\n        for i in range(n):\n            if arr[i] >= x:\n                ct += 1\n                tot += arr[i]\n            elif (tot + arr[i]) / (i + 1) >= x:\n                tot += arr[i]\n                ct += 1\n            else:\n                break\n        print(ct)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    y = 0\n    for i in range(n):\n        y += a[i]\n        if y / (i + 1) < x:\n            y = -1\n            print(i)\n            break\n    if y != -1:\n        print(n)", "t = int(input())\nfor inh in range(0, t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    (i, s) = (0, 0)\n    while i < n:\n        s += a[i]\n        if s / (i + 1) >= x:\n            i += 1\n        else:\n            break\n    print(i)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(map(int, input().split()))\n    summa = sum(a)\n    i = 0\n    while i < n and summa / (n - i) < x:\n        summa -= a[i]\n        i += 1\n    print(n - i)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = sorted(list(map(int, input().split())), reverse=True)\n    sum = 0\n    count = n\n    for i in range(n):\n        sum += arr[i]\n        if sum / (i + 1) < k:\n            count = i\n            break\n    print(count)", "t = int(input())\nfor k in range(t):\n    s = []\n    (n, x) = map(int, input().split())\n    s = list(map(int, input().split()))\n    s.sort(reverse=True)\n    (cnt, sum) = (0, 0)\n    while cnt < n and sum + s[cnt] >= (cnt + 1) * x:\n        sum += s[cnt]\n        cnt += 1\n    print(cnt)", "from typing import List\n\ndef countMaxWealthy(savings: List[int], x: int) -> int:\n    savings.sort()\n    total = sum(savings)\n    i = 0\n    while i < len(savings) and total / (len(savings) - i) < x:\n        total -= savings[i]\n        i += 1\n    return len(savings) - i\nn = int(input().strip())\nfor _ in range(n):\n    (_, x) = map(int, input().strip().split())\n    savings = list(map(int, input().strip().split()))\n    count = countMaxWealthy(savings, x)\n    print(count)", "cases = int(input())\nfor _ in range(cases):\n    (num_people, wealthy_min) = [int(x) for x in input().split()]\n    people: list = sorted([int(x) for x in input().split()], reverse=True)\n    res: int = 0\n    total: int = 0\n    avg_w: float = 0\n    for (idx, lad) in enumerate(people):\n        total += lad\n        avg_w = total / (idx + 1)\n        if avg_w >= wealthy_min:\n            res += 1\n        else:\n            break\n    print(res)", "for i in range(int(input())):\n    (n, x) = [int(i) for i in input().split(' ')]\n    arr = [int(i) for i in input().split(' ')]\n    arr.sort()\n    running_sum = 0\n    count = 0\n    for i in range(n - 1, -1, -1):\n        running_sum += arr[i]\n        if running_sum / (n - i) < x:\n            break\n        count += 1\n    print(count)", "from math import floor\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))\n    a = a[::-1]\n    i = n - 1\n    s = sum(a)\n    res = 0\n    while i >= 0:\n        if floor(s / (i + 1)) >= x:\n            res = i + 1\n            break\n        s -= a[i]\n        i -= 1\n    print(res)", "t = int(input())\nfor i in range(t):\n    f = 0\n    (n, x) = map(int, input().split())\n    ls = list(map(int, input().split()))\n    ls.sort(reverse=True)\n    for j in range(n):\n        if (f + ls[j]) / (j + 1) >= x:\n            if j < n - 1:\n                f += ls[j]\n            else:\n                print(j + 1)\n        else:\n            print(j)\n            break", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    a = sorted(map(int, input().split()), reverse=True)\n    r = 0\n    suma = 0\n    i = 0\n    while i < n and suma + a[i] >= x * (i + 1):\n        suma += a[i]\n        i += 1\n    print(i)", "def solve(n, x, arr):\n    arr.sort()\n    curr_sum = total_rich = 0\n    for i in range(n - 1, -1, -1):\n        curr_sum += arr[i]\n        curr_avg = float(curr_sum) / float(n - i)\n        if curr_avg >= x:\n            total_rich += 1\n        else:\n            break\n    return total_rich\nt = int(input())\nresults = list()\nfor _ in range(0, t):\n    (n, x) = list(map(int, input().split(' ')))\n    arr = list(map(int, input().split(' ')))\n    results.append(solve(n, x, arr))\nfor result in results:\n    print(result)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    c = 0\n    if a[0] >= x:\n        i = 1\n        f = a[0]\n        while c == 0 and i < n:\n            f = f + a[i]\n            v = f / (i + 1)\n            if v < x:\n                c = 1\n            else:\n                i += 1\n        if i == n:\n            print(n)\n        else:\n            print(i)\n    else:\n        print(0)", "for p in range(int(input())):\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    s = a[0]\n    if s >= x:\n        (f, g, y) = (0, 1, 2)\n        for i in range(1, n):\n            s += a[i]\n            c = s / y\n            if c < x:\n                f = 1\n                break\n            y += 1\n        if f:\n            print(i)\n        else:\n            print(n)\n    else:\n        print(0)", "import io\nimport os\nimport sys\nimport math\nimport heapq\nimport bisect\nimport random\nimport string\nimport decimal\nimport functools\nimport fractions\nimport itertools\nimport collections\nfrom sys import stdin, stdout\nfrom io import BytesIO, IOBase\nfrom math import gcd, floor, sqrt, log, factorial\nfrom bisect import bisect_left, bisect_right\nfrom collections import deque, Counter, defaultdict, OrderedDict, namedtuple, UserDict, UserList, UserString\nMOD = 1000000007\nsys.setrecursionlimit(100000000)\nBUFSIZE = 8192\nt = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort(reverse=True)\n    res = 0\n    cnt = 0\n    sum = 0\n    for i in arr:\n        sum += i\n        cnt += 1\n        if sum / cnt >= x:\n            res += 1\n    print(res)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    people = list(map(int, input().split()))\n    ans = 0\n    total = 0\n    people.sort(reverse=True)\n    notFound = True\n    for i in range(n):\n        total += people[i]\n        avg = total / (i + 1)\n        if avg < x:\n            break\n        ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, x) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    b = list()\n    c = 0\n    m = 0\n    for i in a:\n        if i < x:\n            b.append(i)\n        else:\n            c += i - x\n            m += 1\n    b.sort(reverse=True)\n    for i in b:\n        if x - i > c:\n            break\n        c -= x - i\n        m += 1\n    print(m)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = sorted(list(map(int, input().split())), reverse=True)\n    sum = 0\n    i = 0\n    while i < n:\n        sum += arr[i]\n        if sum / (i + 1) < k:\n            break\n        i += 1\n    print(i)", "import math\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))\n    c = sum(a)\n    if c / n >= k:\n        print(n)\n    else:\n        for i in range(n):\n            c -= a[i]\n            if n - i - 1 != 0 and c / (n - i - 1) >= k:\n                break\n        print(n - i - 1)", "for t in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    kol = 0\n    mx = 0\n    for i in range(n):\n        if a[i] >= x:\n            mx += a[i] - x\n        else:\n            mx -= x - a[i]\n        if mx >= 0:\n            kol += 1\n        if mx < 0:\n            break\n    print(kol)", "for t in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    kol = 0\n    mx = 0\n    for i in range(n):\n        if a[i] >= x:\n            mx += a[i] - x\n        else:\n            mx -= x - a[i]\n        if mx >= 0:\n            kol += 1\n        if mx < 0:\n            break\n    print(kol)", "def funk():\n    (n, x) = map(int, input().split())\n    lst = map(int, input().split())\n    por = []\n    (rich, many) = (0, 0)\n    for i in lst:\n        if i >= x:\n            rich += 1\n            many += i - x\n        else:\n            por.append(i)\n    por.sort(reverse=True)\n    for i in por:\n        many -= x - i\n        if many >= 0:\n            rich += 1\n        else:\n            break\n    print(rich)\nt = int(input())\nfor _ in range(t):\n    funk()", "def middle(arr, x):\n    if sum(arr) / len(arr) >= x:\n        return len(arr)\n    ans = 0\n    suma = 0\n    arr.sort()\n    for i in arr[::-1]:\n        suma += i\n        ans += 1\n        if suma / ans < x:\n            return ans - 1\n    return len(ans)\nt = int(input())\nfor i in range(t):\n    (n, x) = list(map(int, input().rstrip().split()))\n    arr = list(map(int, input().rstrip().split()))\n    print(middle(arr, x))", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort(reverse=True)\n    if arr[0] < x:\n        print(0)\n        continue\n    sm = ans = 0\n    for i in range(n):\n        sm += arr[i]\n        if sm // (i + 1) < x:\n            ans = i\n            break\n    print(ans if ans else n)", "t = int(input())\nres = []\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    s = 0\n    m = 0\n    for i in range(n):\n        s += a[i]\n        if s / (i + 1) >= x:\n            m = i + 1\n    print(m)", "t = int(input())\nfor _ in range(t):\n    inp = [int(x) for x in input().split()]\n    n = inp[0]\n    x = inp[1]\n    ppl = [int(x) for x in input().split()]\n    ppl.sort()\n    summ = 0\n    cnt = 0\n    for i in range(n - 1, -1, -1):\n        summ += ppl[i]\n        if summ // (cnt + 1) >= x:\n            cnt += 1\n        else:\n            break\n    print(cnt)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    people = sorted(list(map(int, input().split())), reverse=True)\n    s = sum(people)\n    ans = n\n    for i in range(n, 0, -1):\n        c = s / i\n        if c >= m:\n            break\n        else:\n            s -= people[i - 1]\n            ans -= 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr = sorted(arr, reverse=True)\n    summ = 0\n    count = 0\n    for i in range(len(arr)):\n        summ += arr[i]\n        if summ / (i + 1) < k:\n            break\n        count += 1\n    print(count)", "def solve(n, x, arr):\n    arr.sort()\n    curr_sum = total_rich = 0\n    for i in range(n - 1, -1, -1):\n        curr_sum += arr[i]\n        curr_avg = float(curr_sum) / float(n - i)\n        if curr_avg >= x:\n            total_rich += 1\n        else:\n            break\n    return total_rich\nt = int(input())\nresults = list()\nfor _ in range(0, t):\n    (n, x) = map(int, input().split(' '))\n    arr = list(map(int, input().split(' ')))\n    results.append(solve(n, x, arr))\nfor result in results:\n    print(result)", "def main():\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    cum = 0\n    for i in range(n):\n        cum += a[i]\n        if cum < x * (i + 1):\n            return i\n    return n\nt = int(input())\nfor i in range(t):\n    print(main())", "def solve_case():\n    (n, x) = map(int, input().split())\n    inp = sorted(list(map(int, input().split())), reverse=True)\n    rs = 0\n    ic = 1\n    for i in inp:\n        rs += i\n        if x * ic > rs:\n            return ic - 1\n        ic += 1\n    return n\n\ndef main():\n    tests = int(input())\n    for t in range(1, tests + 1):\n        print(solve_case())\nmain()", "def RA():\n    l = input().split()\n    return [int(s) for s in l]\n\ndef solve():\n    [n, x] = RA()\n    arr = RA()\n    arr.sort(reverse=True)\n    count = 0\n    fail = False\n    s = 0\n    for i in range(n):\n        count += 1\n        s += arr[i]\n        if s < x * count:\n            fail = True\n            break\n    if fail:\n        print(count - 1)\n    else:\n        print(n)\nt = int(input())\nwhile t > 0:\n    solve()\n    t -= 1", "def solve():\n    (n, x) = map(int, input().split())\n    people = [int(p) for p in input().split()]\n    begin_reach = [p for p in people if p >= x]\n    surplus = sum(begin_reach) - x * len(begin_reach)\n    become_reach = 0\n    for poor_man in sorted((p for p in people if p < x), reverse=True):\n        delta = x - poor_man\n        if delta > surplus:\n            break\n        surplus -= delta\n        become_reach += 1\n    return len(begin_reach) + become_reach\ntask_number = int(input())\nfor _ in range(task_number):\n    print(solve())", "def solve():\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    km = 0\n    for i in range(n):\n        km += a[i]\n        if km / (i + 1) < x:\n            print(i)\n            return\n    print(n)\nt = int(input())\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    ar = list(map(int, input().split()))\n    ar.sort()\n    wi = -1\n    for i in range(n):\n        if ar[i] >= x:\n            wi = i\n            break\n    else:\n        wi = n\n    wc = n - wi\n    ws = sum(ar[wi:])\n    pc = wc\n    for i in range(wi - 1, -1, -1):\n        pc += 1\n        ws += ar[i]\n        if ws / pc >= x:\n            wc += 1\n        else:\n            break\n    print(wc)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    wealth = list(map(int, input().split()))\n    wealth.sort(reverse=True)\n    s = 0\n    index = 0\n    for i in range(n):\n        s += wealth[i]\n        if not s / (i + 1) >= x:\n            print(i)\n            break\n        index = i + 1\n    else:\n        print(index)", "for _ in range(int(input())):\n    (n, k) = [int(a) for a in input().split()]\n    ar = list(map(int, input().split()))[:n]\n    ar.sort(reverse=True)\n    s = 0\n    p = 0\n    for i in range(n):\n        if ar[i] < k:\n            t = s + ar[i]\n            if t // (i + 1) >= k:\n                s = s + ar[i]\n            else:\n                p = 1\n                break\n        else:\n            s = s + ar[i]\n    if s == 0:\n        print(0)\n    elif p == 1:\n        print(i)\n    else:\n        print(n)", "for _ in range(int(input())):\n    (n, k) = [int(a) for a in input().split()]\n    ar = list(map(int, input().split()))[:n]\n    ar.sort(reverse=True)\n    s = 0\n    p = 0\n    for i in range(n):\n        if ar[i] < k:\n            t = s + ar[i]\n            if t // (i + 1) >= k:\n                s = s + ar[i]\n            else:\n                p = 1\n                break\n        else:\n            s = s + ar[i]\n    if s == 0:\n        print(0)\n    elif p == 1:\n        print(i)\n    else:\n        print(n)", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort(reverse=True)\n    c = 0\n    cnt = 1\n    s = 0\n    for i in range(len(arr)):\n        s += arr[i]\n        if s / (cnt * 1.0) >= x:\n            c += 1\n            cnt += 1\n        else:\n            break\n    print(c)"]