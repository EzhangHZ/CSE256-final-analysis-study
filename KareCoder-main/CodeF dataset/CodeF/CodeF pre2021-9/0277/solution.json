["def values(n, A):\n    O = []\n    for i in range(0, n, 2):\n        j = i + 1\n        O.extend(((1, i + 1, j + 1), (2, i + 1, j + 1), (1, i + 1, j + 1), (2, i + 1, j + 1), (1, i + 1, j + 1), (2, i + 1, j + 1)))\n    return (len(O), O)\n\ndef main():\n    t = readint()\n    L = []\n    for _ in range(t):\n        n = readint()\n        A = readinti()\n        (m, O) = values(n, A)\n        L.append(str(m))\n        L.extend((f'{o[0]} {o[1]} {o[2]}' for o in O))\n    print('\\n'.join(L))\nimport sys\n\ndef readint():\n    return int(input())\n\ndef readinti():\n    return map(int, input().split())\n\ndef readintl():\n    return list(readinti())\n\ndef readintll(k):\n    return [readintl() for _ in range(k)]\n\ndef log(*args, **kwargs):\n    print(*args, **kwargs, file=sys.stderr)\nmain()", "a = '2 {0} {1}\\n1 {0} {1}'\nfor _ in range(int(input())):\n    n = int(input())\n    l = input()\n    print(n * 3)\n    for i in range(0, n, 2):\n        for _ in range(3):\n            print(a.format(i + 1, i + 2))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input()\n    print(3 * n)\n    for i in range(0, n, 2):\n        first = str(i + 1)\n        second = str(i + 2)\n        print('1 ' + first + ' ' + second)\n        print('1 ' + first + ' ' + second)\n        print('2 ' + first + ' ' + second)\n        print('1 ' + first + ' ' + second)\n        print('1 ' + first + ' ' + second)\n        print('2 ' + first + ' ' + second)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(n * 3)\n    for i in range(0, n, 2):\n        x = ' ' + str(i + 1) + ' ' + str(i + 2)\n        for j in range(0, 6):\n            print(str(2 - j % 2) + x)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(n * 3)\n    for i in range(0, n, 2):\n        x = ' ' + str(i + 1) + ' ' + str(i + 2)\n        for j in range(6):\n            print(str(2 - j % 2) + x)", "import os\nimport sys\nfrom io import BytesIO, IOBase\nimport math\nfrom collections import Counter\n\ndef a(x):\n    print(3 * len(x))\n    for i in range(0, len(x), 2):\n        for j in range(3):\n            print(f'2 {i + 1} {i + 2}')\n            print(f'1 {i + 1} {i + 2}')\n\ndef main():\n    q = int(parse_input())\n    r = []\n    for _ in range(q):\n        n = int(parse_input())\n        x = [int(i) for i in parse_input().split()]\n        a(x)\nparse_input = lambda : sys.stdin.readline().rstrip('\\r\\n')\nmain()", "loop = int(input())\nwhile loop > 0:\n    loop -= 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(n * 6 // 2)\n    for i in range(1, n, 2):\n        print('{0} {1} {2}'.format(1, i, i + 1))\n        print('{0} {1} {2}'.format(2, i, i + 1))\n        print('{0} {1} {2}'.format(1, i, i + 1))\n        print('{0} {1} {2}'.format(1, i, i + 1))\n        print('{0} {1} {2}'.format(2, i, i + 1))\n        print('{0} {1} {2}'.format(1, i, i + 1))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(n * 3)\n    for i in range(0, n, 2):\n        x = ' ' + str(i + 1) + ' ' + str(i + 2)\n        for j in range(6):\n            print(str(2 - j % 2) + x)", "import math\nfrom functools import reduce\nfrom math import comb\nfrom collections import defaultdict\nfrom sys import stdout\nNO = 'NO'\nYES = 'YES'\nMOD = 1000000007\nALPH = 'abcdefghijklmnopqrstuvwxyz'\n\ndef input_int():\n    return int(input())\n\ndef input_list():\n    return input().split(' ')\n\ndef input_list_int():\n    return list(map(int, input_list()))\n\ndef list_int_to_str(a, sep=' '):\n    return sep.join((str(x) for x in a))\nglobal_ans = []\n\ndef pr(a):\n    global_ans.append(a)\n\ndef solve():\n    n = input_int()\n    a = input()\n    t = n * 6\n    pr(n * 3)\n    for i in range(0, n, 2):\n        pr('1 {} {}'.format(i + 1, i + 2))\n        pr('2 {} {}'.format(i + 1, i + 2))\n        pr('2 {} {}'.format(i + 1, i + 2))\n        pr('1 {} {}'.format(i + 1, i + 2))\n        pr('2 {} {}'.format(i + 1, i + 2))\n        pr('2 {} {}'.format(i + 1, i + 2))\nquery_count = 1\nquery_count = input_int()\nwhile query_count:\n    query_count -= 1\n    solve()\nfor global_ans_line in global_ans:\n    print(global_ans_line)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    v = list(map(int, input().split()))\n    print(n * 3)\n    for j in range(0, n, 2):\n        i = j + 1\n        print('1 ' + str(i) + ' ' + str(i + 1))\n        print('2 ' + str(i) + ' ' + str(i + 1))\n        print('1 ' + str(i) + ' ' + str(i + 1))\n        print('2 ' + str(i) + ' ' + str(i + 1))\n        print('1 ' + str(i) + ' ' + str(i + 1))\n        print('2 ' + str(i) + ' ' + str(i + 1))\n    t = t - 1", "def solve(n, a):\n    k = 3 * n\n    print(k)\n    i = 1\n    while i <= n:\n        print('2' + ' ' + str(i) + ' ' + str(i + 1))\n        print('1' + ' ' + str(i) + ' ' + str(i + 1))\n        print('1' + ' ' + str(i) + ' ' + str(i + 1))\n        print('2' + ' ' + str(i) + ' ' + str(i + 1))\n        print('1' + ' ' + str(i) + ' ' + str(i + 1))\n        print('1' + ' ' + str(i) + ' ' + str(i + 1))\n        i += 2\n    return\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().strip().split()))[:n]\n    solve(n, a)", "def solve(n, a):\n    k = 3 * n\n    print(k)\n    i = 1\n    while i <= n:\n        print('2' + ' ' + str(i) + ' ' + str(i + 1))\n        print('1' + ' ' + str(i) + ' ' + str(i + 1))\n        print('1' + ' ' + str(i) + ' ' + str(i + 1))\n        print('2' + ' ' + str(i) + ' ' + str(i + 1))\n        print('1' + ' ' + str(i) + ' ' + str(i + 1))\n        print('1' + ' ' + str(i) + ' ' + str(i + 1))\n        i += 2\n    return\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().strip().split()))[:n]\n    solve(n, a)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(n * 3)\n    for i in range(0, n, 2):\n        x = ' ' + str(i + 1) + ' ' + str(i + 2)\n        for j in range(6):\n            print(str(2 - j % 2) + x)", "def solve(n, arr):\n    print(6 * (n // 2))\n    for i in range(0, n, 2):\n        print('1 ' + str(i + 1) + ' ' + str(i + 2) + ' ')\n        print('2 ' + str(i + 1) + ' ' + str(i + 2) + ' ')\n        print('1 ' + str(i + 1) + ' ' + str(i + 2) + ' ')\n        print('1 ' + str(i + 1) + ' ' + str(i + 2) + ' ')\n        print('2 ' + str(i + 1) + ' ' + str(i + 2) + ' ')\n        print('1 ' + str(i + 1) + ' ' + str(i + 2) + ' ')\nT = int(input())\nwhile T:\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    solve(n, arr)\n    T -= 1", "def solution(n, a):\n    print(len(a) // 2 * 6)\n    for i in range(1, len(a), 2):\n        print('1 {} {}'.format(i, i + 1))\n        print('2 {} {}'.format(i, i + 1))\n        print('1 {} {}'.format(i, i + 1))\n        print('2 {} {}'.format(i, i + 1))\n        print('1 {} {}'.format(i, i + 1))\n        print('2 {} {}'.format(i, i + 1))\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    solution(n, a)", "cases = int(input())\nfor _ in range(cases):\n    n = int(input())\n    numbers = [int(number) for number in input().split()]\n    print(n * 3)\n    for i in range(0, n, 2):\n        for k in range(6):\n            print('%s %s %s' % (k % 2 + 1, i + 1, i + 2))", "t = int(input())\n\ndef ao(a, i, j):\n    a[i] = a[i] + a[j]\nao.t = 1\n\ndef at(a, i, j):\n    a[j] = a[j] - a[i]\nat.t = 2\n\ndef reverse_values(a):\n    seq = [ao, at, ao, at, ao, at]\n    for i in range(0, len(a), 2):\n        for s in seq:\n            s(a, i, i + 1)\n            print(f'{s.t} {i + 1} {i + 2}')\nfor _ in range(t):\n    n = int(input())\n    a_vec = input().split(' ')\n    a_vec = [int(a) for a in a_vec]\n    print(f'{3 * n}')\n    reverse_values(a_vec)", "for _ in range(int(input())):\n    n = int(input())\n    input()\n    print(3 * n)\n    for i in range(1, n, 2):\n        for j in [1, 2] * 3:\n            print(j, i, i + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(6 * (n // 2))\n    for j in range(1, n, 2):\n        print(1, j, j + 1)\n        print(2, j, j + 1)\n        print(1, j, j + 1)\n        print(1, j, j + 1)\n        print(2, j, j + 1)\n        print(1, j, j + 1)", "I = input\nfor _ in range(int(I())):\n    (n, __) = (int(I()), I())\n    print(3 * n)\n    for i in range(1, n + 1, 2):\n        print(1, i, i + 1)\n        print(2, i, i + 1)\n        print(1, i, i + 1)\n        print(1, i, i + 1)\n        print(2, i, i + 1)\n        print(1, i, i + 1)", "for _ in range(int(input())):\n    n = int(input())\n    input()\n    print(n * 3)\n    for i in range(0, n, 2):\n        print(1, i + 1, i + 2)\n        print(2, i + 1, i + 2)\n        print(1, i + 1, i + 2)\n        print(1, i + 1, i + 2)\n        print(2, i + 1, i + 2)\n        print(1, i + 1, i + 2)", "for _ in range(int(input())):\n    n = int(input())\n    l11 = list(map(int, input().split()))\n    print(n // 2 * 6)\n    for i in range(1, n + 1, 2):\n        print(1, i, i + 1)\n        print(2, i, i + 1)\n        print(2, i, i + 1)\n        print(1, i, i + 1)\n        print(2, i, i + 1)\n        print(2, i, i + 1)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(6 * (n // 2))\n    for k in range(n // 2):\n        i = 2 * k\n        print(str(1) + ' ' + str(i + 1) + ' ' + str(i + 2))\n        print(str(2) + ' ' + str(i + 1) + ' ' + str(i + 2))\n        print(str(1) + ' ' + str(i + 1) + ' ' + str(i + 2))\n        print(str(2) + ' ' + str(i + 1) + ' ' + str(i + 2))\n        print(str(1) + ' ' + str(i + 1) + ' ' + str(i + 2))\n        print(str(2) + ' ' + str(i + 1) + ' ' + str(i + 2))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    operations = []\n    for i in range(0, n, 2):\n        (a, b) = (arr[i], arr[i + 1])\n        while arr[i] != -a or arr[i + 1] != -b:\n            arr[i] += arr[i + 1]\n            arr[i + 1] -= arr[i]\n            operations.append('1 %d %d' % (i + 1, i + 2))\n            operations.append('2 %d %d' % (i + 1, i + 2))\n    k = len(operations)\n    print(k)\n    for i in range(k):\n        print(operations[i])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(n // 2 * 6)\n    for i in range(0, n, 2):\n        print(1, i + 1, i + 2)\n        print(2, i + 1, i + 2)\n        print(2, i + 1, i + 2)\n        print(1, i + 1, i + 2)\n        print(2, i + 1, i + 2)\n        print(2, i + 1, i + 2)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    print(6 * n // 2)\n    while i < n:\n        print(1, i + 1, i + 2)\n        print(1, i + 1, i + 2)\n        print(2, i + 1, i + 2)\n        print(1, i + 1, i + 2)\n        print(1, i + 1, i + 2)\n        print(2, i + 1, i + 2)\n        i += 2", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(n // 2 * 6)\n    for i in range(0, n, 2):\n        print(2, i + 1, i + 2)\n        print(1, i + 1, i + 2)\n        print(1, i + 1, i + 2)\n        print(2, i + 1, i + 2)\n        print(1, i + 1, i + 2)\n        print(1, i + 1, i + 2)", "t = int(input())\nfor _ in range(t):\n    nn = int(input())\n    l = list(map(int, input().split()))\n    out = []\n    for x in range(0, nn, +2):\n        out.append(['1', str(x + 1), str(x + 2)])\n        out.append(['2', str(x + 1), str(x + 2)])\n        out.append(['2', str(x + 1), str(x + 2)])\n        out.append(['1', str(x + 1), str(x + 2)])\n        out.append(['2', str(x + 1), str(x + 2)])\n        out.append(['2', str(x + 1), str(x + 2)])\n    print(len(out))\n    for x in out:\n        print(' '.join(x))", "import sys\n\ndef ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\nT = int(input())\nwhile T:\n    T -= 1\n    n = int(input())\n    ls = ints()\n    print(6 * n // 2)\n    for i in range(1, n, 2):\n        print(1, i, i + 1)\n        print(2, i, i + 1)\n        print(1, i, i + 1)\n        print(2, i, i + 1)\n        print(1, i, i + 1)\n        print(2, i, i + 1)", "t = int(input())\nlongitudes = []\ncadenas = []\nfor i in range(t):\n    longitudes.append(int(input()))\n    cadena = [int(j) for j in input().split()]\n    cadenas.append(cadena)\nfor i in range(t):\n    print(3 * longitudes[i])\n    for j in range(1, int(longitudes[i] / 2) + 1):\n        print(1, 2 * j - 1, 2 * j)\n        print(2, 2 * j - 1, 2 * j)\n        print(1, 2 * j - 1, 2 * j)\n        print(2, 2 * j - 1, 2 * j)\n        print(1, 2 * j - 1, 2 * j)\n        print(2, 2 * j - 1, 2 * j)", "for _ in range(int(input())):\n    n = int(input())\n    input()\n    print(3 * n)\n    for i in range(1, n, 2):\n        for j in [1, 2, 1, 1, 2, 1]:\n            print(j, i, i + 1)", "for _ in range(int(input())):\n    n = int(input())\n    input()\n    print(3 * n)\n    for i in range(1, n, 2):\n        for j in [1, 2] * 3:\n            print(j, i, i + 1)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    a = input()\n    print(n * 3)\n    for i in range(1, n + 1, 2):\n        print(1, i, i + 1)\n        print(2, i, i + 1)\n        print(1, i, i + 1)\n        print(1, i, i + 1)\n        print(2, i, i + 1)\n        print(1, i, i + 1)\nfor i in range(int(input())):\n    solve()", "t = int(input())\nINF = 1000500700\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    r = n // 2\n    print(r * 6)\n    for k in range(r):\n        i = 2 * k + 1\n        j = 2 * k + 2\n        print(1, i, j)\n        print(2, i, j)\n        print(1, i, j)\n        print(1, i, j)\n        print(2, i, j)\n        print(1, i, j)", "def shu(i):\n    print('{} {} {}'.format(1, i, i + 1))\n    print('{} {} {}'.format(2, i, i + 1))\n    print('{} {} {}'.format(1, i, i + 1))\n    print('{} {} {}'.format(1, i, i + 1))\n    print('{} {} {}'.format(2, i, i + 1))\n    print('{} {} {}'.format(1, i, i + 1))\nt = eval(input())\nfor r in range(t):\n    n = eval(input())\n    a = input().split(' ')\n    a = [eval(x) for x in a]\n    i = 0\n    print(n * 3)\n    while i <= n - 2:\n        shu(i + 1)\n        i += 2", "def fun(ls, n):\n    print(3 * n)\n    for i in range(0, n, 2):\n        index = i + 1\n        print(1, index, index + 1)\n        print(2, index, index + 1)\n        print(1, index, index + 1)\n        print(1, index, index + 1)\n        print(2, index, index + 1)\n        print(1, index, index + 1)\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    fun(ls, n)", "def fun(ls, n):\n    print(3 * n)\n    for i in range(0, n, 2):\n        index = i + 1\n        print(1, index, index + 1)\n        print(2, index, index + 1)\n        print(1, index, index + 1)\n        print(1, index, index + 1)\n        print(2, index, index + 1)\n        print(1, index, index + 1)\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    fun(ls, n)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    print(n * 3)\n    while i < n:\n        print(1, i + 1, i + 2)\n        print(2, i + 1, i + 2)\n        print(1, i + 1, i + 2)\n        print(2, i + 1, i + 2)\n        print(1, i + 1, i + 2)\n        print(2, i + 1, i + 2)\n        i += 2", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(n * 3)\n    for i in range(0, n, 2):\n        print(2, 1 + i, 2 + i)\n        print(1, 1 + i, 2 + i)\n        print(1, 1 + i, 2 + i)\n        print(2, 1 + i, 2 + i)\n        print(1, 1 + i, 2 + i)\n        print(1, 1 + i, 2 + i)", "def solve():\n    ans = []\n    for i in range(0, N, 2):\n        ans.append((2, i + 1, i + 2))\n    for i in range(0, N, 2):\n        ans.append((1, i + 1, i + 2))\n        ans.append((1, i + 1, i + 2))\n    for i in range(0, N, 2):\n        ans.append((2, i + 1, i + 2))\n    for i in range(0, N, 2):\n        ans.append((1, i + 1, i + 2))\n        ans.append((1, i + 1, i + 2))\n    return ans\ntest_cases = int(input())\nfor test_case in range(test_cases):\n    N = int(input())\n    A = list(map(int, input().split()))\n    result = solve()\n    print(len(result))\n    for row in result:\n        print(*row)", "for _ in range(int(input())):\n    n = int(input())\n    input()\n    print(3 * n)\n    for i in range(1, n, 2):\n        for j in [1, 2, 1, 1, 2, 1]:\n            print(j, i, i + 1)", "for _ in range(int(input())):\n    n = int(input())\n    input()\n    print(3 * n)\n    for i in range(1, n, 2):\n        for j in [1, 2] * 3:\n            print(j, i, i + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(3 * n)\n    for i in range(0, n, 2):\n        tog = 1\n        j = 0\n        while j < 6:\n            print(tog, i + 1, i + 2)\n            if tog == 2:\n                tog = 1\n            else:\n                tog += 1\n            j += 1", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    w = list(map(int, input().split()))\n    d = [1, 2, 2, 1, 2, 2]\n    print(6 * n // 2)\n    for i in range(n // 2):\n        for j in range(6):\n            print(d[j], i * 2 + 1, i * 2 + 2)", "def one(i, j, a, b):\n    a = a + b\n    return (a, b)\n\ndef two(i, j, a, b):\n    b = b - a\n    return (a, b)\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        print(n // 2 * 6)\n        for i in range(1, n + 1, 2):\n            j = i + 1\n            print(1, i, j)\n            print(2, i, j)\n            print(1, i, j)\n            print(1, i, j)\n            print(2, i, j)\n            print(1, i, j)\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(n * 3)\n    for i in range(1, n + 1, 2):\n        print(1, i, i + 1)\n        print(2, i, i + 1)\n        print(2, i, i + 1)\n        print(1, i, i + 1)\n        print(2, i, i + 1)\n        print(2, i, i + 1)", "for _t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(3 * n)\n    for i in range(0, n, 2):\n        print(1, i + 1, i + 2)\n        print(2, i + 1, i + 2)\n        print(1, i + 1, i + 2)\n        print(2, i + 1, i + 2)\n        print(1, i + 1, i + 2)\n        print(2, i + 1, i + 2)", "cases = int(input())\nfor _ in range(cases):\n    num = int(input())\n    arr = list(map(int, input().split()))\n    print(num * 3)\n    for i in range(1, num + 1, 2):\n        for _ in range(3):\n            print(1, i, i + 1)\n            print(2, i, i + 1)", "for _ in range(int(input())):\n    n = int(input())\n    input()\n    print(3 * n)\n    for i in range(1, n, 2):\n        for j in [1, 2, 1, 1, 2, 1]:\n            print(j, i, i + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(n * 3)\n    for i in range(0, n, 2):\n        print(1, i + 1, i + 2)\n        print(2, i + 1, i + 2)\n        print(1, i + 1, i + 2)\n        print(1, i + 1, i + 2)\n        print(2, i + 1, i + 2)\n        print(1, i + 1, i + 2)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(w) for w in input().split(' ')]\n    print(3 * n)\n    for i in range(0, n, 2):\n        print(2, i + 1, i + 2)\n        print(2, i + 1, i + 2)\n        print(1, i + 1, i + 2)\n        print(2, i + 1, i + 2)\n        print(2, i + 1, i + 2)\n        print(1, i + 1, i + 2)", "t = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(n * 3)\n    for i in range(1, n, 2):\n        print(1, i, i + 1)\n        print(2, i, i + 1)\n        print(2, i, i + 1)\n        print(1, i, i + 1)\n        print(2, i, i + 1)\n        print(2, i, i + 1)", "for tc in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(3 * n)\n    for i in range(1, n, 2):\n        print(1, i, i + 1)\n        print(2, i, i + 1)\n        print(2, i, i + 1)\n        print(1, i, i + 1)\n        print(2, i, i + 1)\n        print(2, i, i + 1)", "import math\n\ndef solve():\n    n = int(input())\n    l = list(map(int, input().split()))\n    tmp = n // 2\n    print(3 * n)\n    for i in range(1, n + 1, 2):\n        x = i\n        y = i + 1\n        print(1, x, y)\n        print(2, x, y)\n        print(1, x, y)\n        print(1, x, y)\n        print(2, x, y)\n        print(1, x, y)\nt = int(input())\nfor z in range(t):\n    solve()", "def solve(n, a):\n    n /= 2\n    n = int(n)\n    print(n * 6)\n    for i in range(n):\n        print('2', 2 * i + 1, 2 * i + 2)\n        print('1', 2 * i + 1, 2 * i + 2)\n        print('2', 2 * i + 1, 2 * i + 2)\n        print('2', 2 * i + 1, 2 * i + 2)\n        print('1', 2 * i + 1, 2 * i + 2)\n        print('2', 2 * i + 1, 2 * i + 2)\nt = int(input())\nfor j in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    solve(n, a)", "has = int(input())\nfor jeme in range(has):\n    lol = int(input())\n    l = list(map(int, input().split()))\n    hass = lol // 2\n    print(3 * lol)\n    for i in range(1, lol + 1, 2):\n        h1 = i\n        h2 = i + 1\n        print(1, h1, h2)\n        print(2, h1, h2)\n        print(1, h1, h2)\n        print(1, h1, h2)\n        print(2, h1, h2)\n        print(1, h1, h2)", "for _ in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    K = 6 * (N // 2)\n    print(K)\n    for i in range(1, N, 2):\n        (ai, aj) = (i, i + 1)\n        print(1, ai, aj)\n        print(2, ai, aj)\n        print(2, ai, aj)\n        print(1, ai, aj)\n        print(2, ai, aj)\n        print(2, ai, aj)", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    i = 0\n    print(3 * n)\n    while i < n - 1:\n        a1 = a[i]\n        a2 = a[i + 1]\n        print('1', i + 1, i + 2)\n        print('2', i + 1, i + 2)\n        print('1', i + 1, i + 2)\n        print('1', i + 1, i + 2)\n        print('2', i + 1, i + 2)\n        print('1', i + 1, i + 2)\n        i += 2", "def solve(l, n):\n    a = []\n    b = []\n    c = []\n    for i in range(0, n, 2):\n        a.append(1)\n        b.append(i + 1)\n        c.append(i + 2)\n        a.append(2)\n        b.append(i + 1)\n        c.append(i + 2)\n        a.append(2)\n        b.append(i + 1)\n        c.append(i + 2)\n        a.append(1)\n        b.append(i + 1)\n        c.append(i + 2)\n        a.append(2)\n        b.append(i + 1)\n        c.append(i + 2)\n        a.append(2)\n        b.append(i + 1)\n        c.append(i + 2)\n    print(len(a))\n    for i in range(len(a)):\n        print(a[i], b[i], c[i])\nfor t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    solve(l, n)", "for _ in range(int(input())):\n    n = int(input())\n    ans = n // 2 * 6\n    a = [int(x) for x in input().split()]\n    print(ans)\n    for i in range(0, n, 2):\n        for n in range(3):\n            print(2, i + 1, i + 2)\n            print(1, i + 1, i + 2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    print(3 * n)\n    for i in range(1, n + 1, 2):\n        for _ in range(2):\n            print(1, i, i + 1)\n            print(2, i, i + 1)\n            print(1, i, i + 1)", "T = int(input())\nwhile T > 0:\n    n = int(input())\n    list1 = [int(x) for x in input().split()]\n    print(3 * n)\n    for i in range(0, n, 2):\n        print(2, i + 1, i + 2)\n        print(2, i + 1, i + 2)\n        print(1, i + 1, i + 2)\n        print(2, i + 1, i + 2)\n        print(2, i + 1, i + 2)\n        print(1, i + 1, i + 2)\n    T -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(d) for d in input().split()]\n    print(3 * n)\n    for i in range(1, n // 2 + 1):\n        for j in range(3):\n            print(2, 2 * i - 1, 2 * i)\n            print(1, 2 * i - 1, 2 * i)", "MAX_ACTIONS = 5000\n\ndef op1(i1, i2):\n    print(1, i1, i2)\n\ndef op2(i1, i2):\n    print(2, i1, i2)\n\ndef op(i1, i2):\n    op2(i1, i2)\n    op1(i1, i2)\n    op2(i1, i2)\n    op2(i1, i2)\n    op1(i1, i2)\n    op2(i1, i2)\n\ndef solve():\n    nr_var = int(input())\n    a = list(map(int, input().split()))\n    print(3 * nr_var)\n    for i in range(0, nr_var, 2):\n        op(i + 1, i + 2)\nt = int(input())\nfor i in range(t):\n    solve()", "def solve():\n    N = int(input())\n    arr = list(map(int, input().split()))\n    print(3 * N)\n    for i in range(0, N, 2):\n        for k in range(0, 3):\n            print(1, i + 1, i + 2)\n            print(2, i + 1, i + 2)\nfor testis in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(6 * (n // 2))\n    for i in range(0, n, 2):\n        print(2, i + 1, i + 2)\n        print(1, i + 1, i + 2)\n        print(2, i + 1, i + 2)\n        print(2, i + 1, i + 2)\n        print(1, i + 1, i + 2)\n        print(2, i + 1, i + 2)", "from collections import Counter, defaultdict, deque\nimport math\nimport sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    s = [int(x) for x in input().split()]\n    print(n * 3)\n    for i in range(1, n + 1, 2):\n        print(1, i, i + 1)\n        print(2, i, i + 1)\n        print(1, i, i + 1)\n        print(1, i, i + 1)\n        print(2, i, i + 1)\n        print(1, i, i + 1)\ntt = int(input())\nfor test in range(tt):\n    solve()", "PI = 3.141592653589793\nINF = 999999999\nMOD = 1000000007\n\ndef add(x, y):\n    return (x + y) % MOD\n\ndef sub(x, y):\n    return (x - y + MOD) % MOD\n\ndef mul(x, y):\n    return x * y % MOD\n\ndef gcd(x, y):\n    if y == 0:\n        return x\n    return gcd(y, x % y)\n\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\ndef power(x, y):\n    res = 1\n    x %= MOD\n    while y != 0:\n        if y & 1:\n            res = mul(res, x)\n        y >>= 1\n        x = mul(x, x)\n    return res\n\ndef mod_inv(n):\n    return power(n, MOD - 2)\n\ndef prob(p, q):\n    return mul(p, power(q, MOD - 2))\n\ndef ii():\n    return int(input())\n\ndef li():\n    return [int(i) for i in input().split()]\n\ndef ls():\n    return [i for i in input().split()]\nfor t in range(ii()):\n    t += 1\n    n = ii()\n    a = li()\n    print(3 * n)\n    for j in range(0, n, 2):\n        i = j + 1\n        print(1, i, i + 1)\n        print(2, i, i + 1)\n        print(2, i, i + 1)\n        print(1, i, i + 1)\n        print(2, i, i + 1)\n        print(2, i, i + 1)", "q = int(input())\nfor i in range(q):\n    w = int(input())\n    e = input()\n    print(w * 3)\n    for j in range(w // 2):\n        print(*[2, 2 * j + 1, 2 * j + 2], sep=' ')\n        print(*[1, 2 * j + 1, 2 * j + 2], sep=' ')\n        print(*[2, 2 * j + 1, 2 * j + 2], sep=' ')\n        print(*[1, 2 * j + 1, 2 * j + 2], sep=' ')\n        print(*[2, 2 * j + 1, 2 * j + 2], sep=' ')\n        print(*[1, 2 * j + 1, 2 * j + 2], sep=' ')", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    print(n * 3)\n    for i in range(0, n, 2):\n        for j in range(3):\n            print(1, i + 1, i + 2)\n            print(2, i + 1, i + 2)", "def operations(i, j):\n    print(1, i, j)\n    print(2, i, j)\n    print(2, i, j)\n    print(1, i, j)\n    print(2, i, j)\n    print(2, i, j)\nfor _ in range(int(input())):\n    n = int(input())\n    a = input()\n    print(n // 2 * 6)\n    for i in range(1, n, 2):\n        j = i + 1\n        for _ in range(2):\n            print(1, i, j)\n            print(2, i, j)\n            print(2, i, j)", "import collections\nimport functools\nimport math\nimport sys\nimport bisect\n\ndef In():\n    return map(int, sys.stdin.readline().split())\ninput = sys.stdin.readline\n\ndef lord():\n    for _ in range(int(input())):\n        n = int(input())\n        l = input()\n        print(n // 2 * 6)\n        for i in range(0, n, 2):\n            for i1 in range(6):\n                print(i1 % 2 + 1, i + 1, i + 2)\nlord()", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    ops = [1, 2, 1, 1, 2, 1]\n    print(6 * n // 2)\n    for i in range(0, n, 2):\n        for j in range(len(ops)):\n            print(ops[j], i + 1, i + 2)", "inp = int(input())\nfor _ in range(inp):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    print(3 * len(a))\n    for i in range(0, len(a), 2):\n        p = [[2, i + 1, i + 2], [2, i + 1, i + 2], [1, i + 1, i + 2]]\n        for _ in range(2):\n            for j in p:\n                print(*j)", "inp = int(input())\nfor _ in range(inp):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    print(3 * len(a))\n    for i in range(0, len(a), 2):\n        p = [[1, i + 1, i + 2], [2, i + 1, i + 2], [1, i + 1, i + 2], [2, i + 1, i + 2], [1, i + 1, i + 2], [2, i + 1, i + 2]]\n        for j in p:\n            print(*j)", "import sys, os.path, math\nfrom collections import defaultdict, deque\nif os.path.exists('amz42.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nfor _ in range(int(input().strip(' '))):\n    n = int(input().strip(' '))\n    l = [int(x) for x in input().strip(' ').split(' ')]\n    print(n // 2 * 6)\n    for i in range(1, n, 2):\n        print(1, i, i + 1)\n        print(2, i, i + 1)\n        print(2, i, i + 1)\n        print(1, i, i + 1)\n        print(2, i, i + 1)\n        print(2, i, i + 1)", "for tc in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    print(int(len(arr) / 2 * 6))\n    for i in range(0, n, 2):\n        j = i + 1\n        for x in range(6):\n            if x % 2 == 0:\n                print('1', i + 1, j + 1)\n            else:\n                print('2', i + 1, j + 1)", "import sys\nfrom os import path\nif path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nimport math\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    li = list(map(int, input().split()))\n    print(3 * n)\n    for i in range(1, n + 1, 2):\n        print(1, i, i + 1)\n        print(2, i, i + 1)\n        print(1, i, i + 1)\n        print(1, i, i + 1)\n        print(2, i, i + 1)\n        print(1, i, i + 1)", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = []\n    l2 = []\n    l3 = []\n    for i in range(0, n, 2):\n        l1.append(1)\n        l2.append(i + 1)\n        l3.append(i + 2)\n        l1.append(2)\n        l2.append(i + 1)\n        l3.append(i + 2)\n        l1.append(2)\n        l2.append(i + 1)\n        l3.append(i + 2)\n        l1.append(1)\n        l2.append(i + 1)\n        l3.append(i + 2)\n        l1.append(2)\n        l2.append(i + 1)\n        l3.append(i + 2)\n        l1.append(2)\n        l2.append(i + 1)\n        l3.append(i + 2)\n    print(len(l1))\n    for i in range(len(l1)):\n        print(l1[i], l2[i], l3[i])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(j) for j in input().split()]\n    ans = []\n    for i in range(0, n, 2):\n        a[i] = a[i] + a[i + 1]\n        ans += [[1, i, i + 1]]\n        a[i + 1] = a[i + 1] - a[i]\n        ans += [[2, i, i + 1]]\n        a[i] = a[i] + a[i + 1]\n        ans += [[1, i, i + 1]]\n        a[i + 1] = a[i + 1] - a[i]\n        ans += [[2, i, i + 1]]\n        a[i] = a[i] + a[i + 1]\n        ans += [[1, i, i + 1]]\n        a[i + 1] = a[i + 1] - a[i]\n        ans += [[2, i, i + 1]]\n    print(len(ans))\n    for x in ans:\n        print(x[0], x[1] + 1, x[2] + 1)", "import sys\nimport string\nfrom decimal import Decimal\n\ndef inp():\n    return int(input())\n\ndef inplist():\n    return list(map(int, input().split()))\n\ndef inpstrlist():\n    s = input()\n    return list(s[:len(s)])\n\ndef invr():\n    return map(int, input().split())\n\ndef printlist(var):\n    sys.stdout.write(' '.join(map(str, var)) + '\\n')\nt = inp()\nfor _ in range(t):\n    n = inp()\n    arr = inplist()\n    cnt = 6 * (n // 2)\n    print(cnt)\n    for i in range(1, n + 1, 2):\n        print(1, i, i + 1)\n        print(2, i, i + 1)\n        print(2, i, i + 1)\n        print(1, i, i + 1)\n        print(2, i, i + 1)\n        print(2, i, i + 1)", "a = int(input())\nfor x in range(0, a):\n    t = int(input())\n    n = map(int, input().split())\n    print(t * 3)\n    for i in range(0, t, 2):\n        print(1, i + 1, i + 2)\n        print(2, i + 1, i + 2)\n        print(1, i + 1, i + 2)\n        print(1, i + 1, i + 2)\n        print(2, i + 1, i + 2)\n        print(1, i + 1, i + 2)", "tcs = int(input())\nfor tc in range(tcs):\n    n = int(input())\n    L = list(map(int, input().split()))\n    print(3 * n)\n    for i in range(1, n + 1, 2):\n        for j in [2, 1, 2, 1, 2, 1]:\n            print(j, i, i + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    print(int(6 * (n / 2)))\n    for i in range(0, len(s), +2):\n        for j in range(6):\n            if j % 2 == 1:\n                print('2', i + 1, i + 2)\n            else:\n                print('1', i + 1, i + 2)", "def solve():\n    n = int(input())\n    l = list(map(int, input().split()))\n    n //= 2\n    k = n\n    l1 = []\n    j = 1\n    for i in range(k):\n        l1.append([1, j, j + 1])\n        l1.append([2, j, j + 1])\n        l1.append([1, j, j + 1])\n        l1.append([1, j, j + 1])\n        l1.append([2, j, j + 1])\n        l1.append([1, j, j + 1])\n        j += 2\n    print(6 * k)\n    for i in l1:\n        print(*i)\nfor _ in range(int(input())):\n    solve()"]