["import sys, math\n\ndef get_intl():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_strl():\n    return sys.stdin.readline().strip().split()\n\ndef get_str():\n    return sys.stdin.readline().strip()\n\ndef prt(msg=''):\n    if isinstance(msg, list):\n        sys.stdout.write(' '.join(map(str, msg)) + '\\n')\n    else:\n        sys.stdout.write(str(msg) + '\\n')\nsys.setrecursionlimit(100000000)\nMOD = 998244353\n\ndef solve():\n    k = get_intl()\n    barrels = get_intl()\n    barrels.sort()\n    prt(sum(barrels[k[1] * -1 - 1:]))\n\ndef main():\n    haveTestCases = 1\n    testCase = 1\n    if haveTestCases:\n        testCase = get_int()\n    for i in range(testCase):\n        solve()\nmain()", "t = int(input())\nfor i in range(t):\n    a = list(map(int, input().split(' ')))\n    n = a[0]\n    k = a[1]\n    a = list(map(int, input().split(' ')))\n    a.sort()\n    print(sum(a[n - k - 1:]))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    print(sum(l[:-b - 2:-1]))", "I = lambda : map(int, input().split())\n(t,) = I()\nexec('n,k=I();print(sum(sorted(I())[~k:]));' * t)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    print(sum(a[:k + 1]))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    print(sum(a[0:k + 1]))", "t1 = int(input())\nfor z in range(t1):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    print(sum(a[0:k + 1]))", "for l in range(int(input())):\n    (l, k) = map(int, input().split())\n    print(sum(sorted(map(int, input().split()))[-k - 1:]))", "t = int(input(''))\nfor i in range(t):\n    (n, k) = map(int, input('').split())\n    a = list(map(int, input('').split()))\n    d = max(a)\n    a.remove(d)\n    a.sort(reverse=True)\n    print(d + sum(a[0:k:1]))", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(sum(sorted([int(i) for i in input().split()])[n - k - 1:n]))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    array = list(map(int, input().split()))\n    array = sorted(array, reverse=True)\n    suma = sum(array[0:k + 1])\n    print(suma)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    if k < n:\n        print(sum(arr[n - k - 1:]))\n    else:\n        print(sum(arr))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    if k >= n - 1:\n        print(sum(a))\n        continue\n    print(sum(a[:k + 1]))", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    (n, k) = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    a.sort(reverse=True)\n    res = sum(a[0:k + 1])\n    print(res)", "loopcount = int(input())\nfor loop in range(loopcount):\n    x = input()\n    x = x.split(' ')\n    x = list(map(int, x))\n    y = input()\n    y = y.split(' ')\n    y = list(map(int, y))\n    y.sort(reverse=True)\n    print(sum(y[0:x[1] + 1:1]))", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(sum(sorted(list(map(int, input().split())), reverse=True)[0:k + 1]))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(sum(a[n - k - 1:]))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    s = sum(l[-m - 1:])\n    print(s)", "t = int(input())\nfor _ in range(t):\n    (n, k) = tuple(map(int, input().split()))\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    s = a[0]\n    for i in range(k):\n        s += a[i + 1]\n    print(s)", "def fun(ls, k):\n    k = k + 1\n    lt = sorted(ls)[::-1]\n    ans = 0\n    count = 0\n    for i in lt:\n        ans += i\n        count += 1\n        if count >= k:\n            break\n    print(ans)\nT = int(input())\nfor i in range(T):\n    (n, k) = list(map(int, input().split()))\n    ls = list(map(int, input().split()))\n    fun(ls, k)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort()\n    print(sum(A[-k - 1:]))", "t = int(input())\nfor i in range(0, t):\n    (k, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    s = sum(a[:m + 1])\n    print(s - 0)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    print(sum(l[:k + 1]))", "for i in range(0, int(input())):\n    (x, z) = map(int, input().split())\n    y = list(map(int, input().split()))\n    y.sort()\n    print(sum(y[len(y) - z - 1:len(y)]))", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    mx = a[0]\n    for i in range(1, k + 1):\n        if i >= n:\n            break\n        mx += a[i]\n    print(mx)", "import heapq\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = sorted(list(map(int, input().split())))\n    print(sum(l[~k:]))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    a.sort(reverse=True)\n    res = 0\n    for i in range(k + 1):\n        res += a[i]\n    print(res)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    print(sum(arr[:-k - 2:-1]))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = [int(x) for x in input().split()]\n    l.sort(reverse=True)\n    res = l[0]\n    res += sum(l[1:k + 1])\n    print(res)", "m = int(input())\nl = []\nfor i in range(m):\n    (t, k) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))\n    for i in range(len(a) - 2, len(a) - k - 2, -1):\n        a[-1] += a[i]\n        a[i] = 0\n    l.append(a[-1])\nfor i in l:\n    print(i)", "for _ in range(0, int(input())):\n    (n, k) = map(int, input().split())\n    s = list(sorted(map(int, input().split()), reverse=True))\n    print(sum(s[:k + 1]))", "def solve():\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = a.pop()\n    a.sort(reverse=True)\n    for i in range(k):\n        ans += a[i]\n    print(ans)\n    return\nt = int(input())\nfor _ in range(t):\n    solve()", "def ans(a, k):\n    if k >= len(a):\n        return sum(a)\n    else:\n        a.sort(reverse=True)\n        return sum(a[:k + 1])\nt = int(input())\nfor i in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    print(ans(a, k))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    l1 = l[n - k - 1:]\n    print(sum(l1))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    l1 = l[n - k - 1:]\n    print(sum(l1))", "def helper(arr, l, k):\n    arr.sort()\n    answer = 0\n    for i in range(k + 1):\n        if i >= l:\n            break\n        currentIdx = l - i - 1\n        answer = answer + arr[currentIdx]\n    return answer\ntest = int(input())\nfor i in range(test):\n    (l, k) = list(map(int, input().split()))\n    inp = list(map(int, input().split()))\n    ans = helper(inp, l, k)\n    print(ans)", "from math import *\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom collections import Counter as ctr\nfrom collections import deque as dq\nfrom array import array\nfrom re import search\ninp = lambda : int(input())\nli = lambda : list(map(int, input().split()))\nls = lambda : list(input())\narr = lambda a: array('i', a)\nbi = lambda n: bin(n).replace('0b', '')\nyn = lambda f: print('NYOE S'[f::2])\nsbstr = lambda a, s: search('.*'.join(a), s)\n\ndef solve():\n    for _ in range(inp()):\n        (n, k) = li()\n        a = li()\n        a.sort(reverse=True)\n        print(sum(a[:k + 1]))\nsolve()", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    barrels = list(map(int, input().split()))\n    barrels.sort(reverse=True)\n    sum = barrels[0]\n    for i in range(k):\n        sum += barrels[i + 1]\n    print(sum)", "a = []\nt = int(input())\nfor i in range(t):\n    n1 = input().split()\n    n = int(n1[0])\n    k = int(n1[1])\n    a = [int(i) for i in input().split()]\n    a.sort(reverse=True)\n    ca = 0\n    for j in range(k + 1):\n        ca += a[j]\n    print(ca)", "import math\nimport sys\nimport itertools\nimport fractions\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nfor t in [wtf[i:i + 2] for i in range(1, len(wtf), 2)]:\n    (n, k) = map(int, t[0].split())\n    A = sorted(map(int, t[1].split()), reverse=True)\n    print(sum(A[:k + 1]))", "for i in range(int(input())):\n    (n, k) = [int(i) for i in input().split(' ')]\n    arr = [int(i) for i in input().split(' ')]\n    arr.sort(reverse=True)\n    temp = 0\n    for i in range(1, k + 1):\n        arr[0] += arr[i]\n    print(arr[0])", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = sorted([int(i) for i in input().split()])\n    m = sum(a[n - k - 1:n])\n    print(m)", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().strip().split()))\n    barrels = list(map(int, input().strip().split()))\n    barrels.sort()\n    if k == 0:\n        print(barrels[-1] - barrels[0])\n    else:\n        sum = barrels[-1]\n        for i in range(k):\n            sum += barrels[n - i - 2]\n        print(sum)", "t = int(input())\nfor case in range(t):\n    inp = list(map(int, str.split(input(), ' ')))\n    s = list(map(int, str.split(input(), ' ')))\n    n = inp[0]\n    k = inp[1]\n    s.sort()\n    if s.count(0) == n:\n        print(0)\n    elif k < n:\n        for i in range(n - 2, n - 2 - k, -1):\n            s[n - 1] += s[i]\n        print(s[n - 1])\n    else:\n        for i in range(n - 2, -1, -1):\n            s[n - 1] += s[i]\n        print(s[n - 1])", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    arr.reverse()\n    b = arr[0]\n    arr.pop(0)\n    for i in range(k):\n        b += arr[i]\n        arr[i] = 0\n    print(b - min(arr))\n    t -= 1", "for case in range(int(input())):\n    (n, k) = list(map(int, str.split(input())))\n    a = list(map(int, str.split(input())))\n    a.sort(reverse=True)\n    if a[0] == 0:\n        print(0)\n    else:\n        rslt = sum(a[:k + 1])\n        print(rslt)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    array = list(map(int, input().split()))\n    array = sorted(array, reverse=True)\n    suma = 0\n    for i in range(k + 1):\n        suma += array[i]\n    print(suma)", "t1 = int(input())\nfor _ in range(t1):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    a.reverse()\n    p = a[0]\n    for i in range(1, k + 1):\n        p += a[i]\n    if p == 0:\n        print(max(a) - min(a))\n    else:\n        print(p)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    for i in range(1, b + 1):\n        l[0] += l[i]\n        l[i] = 0\n    print(l[0])", "def getint():\n    return [int(i) for i in input().split()]\n\ndef get():\n    return int(input())\n\ndef S():\n    for test in range(int(input())):\n        solve()\n\ndef solve():\n    (n, k) = getint()\n    a = getint()\n    a.sort(reverse=True)\n    res = 0\n    for i in range(k + 1):\n        res += a[i]\n    if k == 0:\n        print(a[0] - a[-1])\n        return\n    print(res)\nS()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    li = sorted(list(map(int, input().split())))\n    print(sum(li[-k - 1:]))", "t = int(input())\nfor _ in range(t):\n    (n, k) = (int(i) for i in input().split())\n    a = sorted((int(i) for i in input().split()))\n    res = sum(a[n - k - 1:n])\n    print(res)", "import sys\ninput = sys.stdin.readline\ninputLines = sys.stdin.readlines\n\ndef readIntList():\n    return list(map(int, input().split()))\n\ndef readStrList():\n    return list(map(lambda x: x.strip(), inputLines()))\n\ndef indexOf(l: list, elem: int):\n    return l.index(elem) if elem in l else -1\n\ndef lastIndexOf(l: list, elem: int):\n    indexes = [idx for (idx, val) in enumerate(l) if val == elem]\n    return max(indexes) if len(indexes) > 0 else -1\n\ndef solution():\n    for _ in range(int(input())):\n        data = readIntList()\n        (n, k) = (data[0], data[1])\n        l = readIntList()\n        l.sort(reverse=True)\n        for i in range(1, k + 1):\n            if i < n and l[i] > 0:\n                l[0] += l[i]\n            else:\n                break\n        print(l[0])\nsolution()", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(map(int, input().split()))\n    s.sort(reverse=True)\n    print(sum(s[:k + 1])) if k <= n else sum(s)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    a.sort(reverse=True)\n    print(sum(a[:k + 1]))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    li = list(map(int, input().split()))\n    li.sort()\n    li.reverse()\n    s = sum(li[:k + 1])\n    print(s)", "t = int(input())\nfor i in range(0, t, 1):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    s = 0\n    for j in range(0, k + 1, 1):\n        s = s + l[j]\n    print(s)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    res = sorted(map(int, input().split()))\n    print(sum(res[-1 - k:]))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = [int(i) for i in input().split()]\n    l.sort(reverse=True)\n    m = l[0]\n    m += sum(l[1:k + 1])\n    print(m)", "import heapq\nfor j in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = sorted(list(map(int, input().split())))\n    print(sum(l[~k:]))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    print(sum(arr[:-k - 2:-1]))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = [int(i) for i in input().split()]\n    lst.sort(reverse=True)\n    res = 0\n    for i in range(k + 1):\n        res += lst[i]\n    print(res)", "for tca in range(int(input())):\n    (n1, k) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    a.sort()\n    ans = 0\n    a.reverse()\n    for i in range(k + 1):\n        ans += a[i]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    print(sum(l[:k + 1]))", "n = int(input())\nwhile n > 0:\n    (n1, k) = map(int, input().split())\n    d = list(map(int, input().split()))\n    s = 0\n    d = sorted(d)\n    d = d[::-1]\n    for i in range(0, k + 1):\n        s += d[i]\n    print(s)\n    n -= 1", "def maxDiff(a, k):\n    if k >= len(a):\n        return sum(a)\n    else:\n        a.sort(reverse=True)\n        return sum(a[:k + 1])\nt = int(input())\nfor i in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    print(maxDiff(a, k))", "for _ in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    w = [int(i) for i in input().split()]\n    w.sort()\n    w.reverse()\n    d = 0\n    for i in range(k + 1):\n        d += w[i]\n    print(d)", "t = int(input())\nfor _ in range(t):\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    lst = list(map(int, input().split()))\n    lst = sorted(lst, reverse=True)\n    ans = lst[0]\n    i = 1\n    for _ in range(k):\n        ans += lst[i]\n        i += 1\n    print(ans)", "for _ in range(int(input())):\n    a1 = [int(_) for _ in input().split()]\n    a2 = sorted([int(_) for _ in input().split()], reverse=True)\n    a2.append(0)\n    f = a2[-1]\n    for i in range(a1[1] + 1):\n        f += a2[i]\n    print(f)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split(' ')))\n    a = sorted(list(map(int, input().split(' '))))\n    print(sum(a[-k - 1:]))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    m = a[0]\n    for i in range(1, k + 1):\n        m += a[i]\n    print(m)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    array = list(map(int, input().split()))\n    array.sort()\n    sum = 0\n    for i in range(n - 1, n - k - 2, -1):\n        sum = sum + array[i]\n    print(sum)", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().strip().split()))\n    arr.sort()\n    arr.reverse()\n    mmaxim = max(arr)\n    sum = 0\n    for i in range(k + 1):\n        sum = sum + arr[i]\n    print(sum)\n    t = t - 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    a.sort(reverse=True)\n    ss = 0\n    for i in range(k + 1):\n        ss += a[i]\n    print(ss)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    a_max = 0\n    for i in range(k + 1):\n        a_max += a[i]\n    print(a_max)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    a = a[::-1]\n    b = sum(a[:k + 1])\n    print(b)", "for u in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    s = sum(l[:k + 1])\n    print(s)", "x = int(input())\nfor _ in range(x):\n    (n, k) = map(int, input().split())\n    a = sorted(map(int, input().split()), reverse=True)\n    print(sum(a[:k + 1]))", "def main():\n    (n, k) = map(int, input().split())\n    aa = list(map(int, input().split()))\n    aa.sort()\n    print(sum(aa[-(k + 1):]))\nt = int(input())\nfor _ in range(t):\n    main()", "test = int(input())\n\ndef maximin(L, n, k):\n    L.sort()\n    m = 0\n    for i in range(k + 1):\n        m += L[-i - 1]\n    return m\nfor loop in range(test):\n    (n, k) = [int(x) for x in input().split()]\n    L = [int(x) for x in input().split()]\n    print(maximin(L, n, k))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    if k <= n - 2:\n        print(sum(l[-1:-k - 2:-1]))\n    else:\n        print(sum(l))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))\n    print(sum(a[-k - 1:]))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    li = list(map(int, input().split()))\n    li.sort()\n    li.reverse()\n    s = sum(li[:k + 1])\n    print(s)", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    l.append(sum(l[-1:-k - 2:-1]))\n    print(max(l))\n    t -= 1", "t = int(input())\nfor i in range(t):\n    ans = 0\n    (n, k) = [int(i) for i in input().split()]\n    lst = [int(i) for i in input().split()]\n    lst.sort(reverse=True)\n    for i in range(k + 1):\n        ans += lst[i]\n    print(ans)", "for i in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    nums = list(map(int, input().split(' ')))\n    nums.sort(reverse=True)\n    sum1 = nums[0] + sum(nums[1:k + 1])\n    print(sum1)", "R = lambda : map(int, input().split())\n(t,) = R()\nexec(t * 'n,k=R();print(sum(sorted(R())[~k:]));')", "n = int(input())\nfor i in range(n):\n    (m, k) = tuple(map(int, input().split()))\n    s = sorted(list(map(int, input().split())))\n    s[-1] = s[-1] + sum(s[-1 - k:-1])\n    print(s[-1])", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    s = 0\n    for i in range(k + 1):\n        s += a[n - 1 - i]\n    print(s)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    a.sort(reverse=True)\n    res = 0\n    for i in range(k + 1):\n        res += a[i]\n    print(res)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = [int(i) for i in input().split()]\n    lst.sort(reverse=True)\n    res = 0\n    for i in range(k + 1):\n        res += lst[i]\n    print(res)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    li = list(map(int, input().split()))\n    li.sort()\n    res = li[n - 1]\n    for i in range(n - 2, -1, -1):\n        if m:\n            res += li[i]\n            m -= 1\n    print(res)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    a = sum(l[:k + 1])\n    print(a)", "t = int(input())\nfor j in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = max(a)\n    b = sorted(a)\n    for i in range(n - k - 1, n - 1):\n        s += b[i]\n    print(s)", "k = []\nfor _ in range(int(input())):\n    (n, p) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    a.reverse()\n    k.append(sum(a[:min(n, p + 1)]))\nfor i in k:\n    print(i)", "t = int(input())\nfor j in range(t):\n    s = 0\n    (l, n) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    for i in range(1, n + 2):\n        s += a[-i]\n    print(s)", "n1 = int(input())\nfor z in range(n1):\n    (n, k) = map(int, input().split(' '))\n    b = list(map(int, input().split()))\n    b.sort()\n    for i in range(n - 2, -1, -1):\n        if k == 0:\n            break\n        b[n - 1] += b[i]\n        k -= 1\n    print(b[n - 1])", "case = int(input())\nfor i in range(case):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    for j in range(k + 1):\n        ans += a[-1 - j]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    nk = input()\n    (n, k) = [int(i) for i in nk.split(' ')]\n    bs = input()\n    bs = [int(i) for i in bs.split(' ')]\n    bs.sort()\n    for i in range(k):\n        bs[-2] += bs[-1]\n        bs.pop()\n    print(bs[-1])"]