["(n, m, _) = map(int, input().split())\nprint(2 * (n - 1) + (n + 1) * (m - 1))\nprint('U' * (n - 1) + 'L' * (m - 1), end='')\nfor i in range(n):\n    if i != 0:\n        print('D', end='')\n    if i % 2 == 0:\n        print('R' * (m - 1), end='')\n    else:\n        print('L' * (m - 1), end='')", "import sys\n\ndef run_case():\n    (n, m, k) = map(int, input().split())\n    print(n + m - 3 + n + n * (m - 1))\n    print('U' * (n - 1), end='')\n    print('L' * (m - 1), end='')\n    for i in range(n):\n        print('R' * (m - 1) if i % 2 == 0 else 'L' * (m - 1), end='')\n        if i != n - 1:\n            print('D', end='')\n    print()\nrun_case()", "(n, m, _) = map(int, input().split())\nprint(2 * (n - 1) + (n + 1) * (m - 1))\nprint('U' * (n - 1) + 'L' * (m - 1), end='')\nfor i in range(n):\n    if i != 0:\n        print('D', end='')\n    if i % 2 == 0:\n        print('R' * (m - 1), end='')\n    else:\n        print('L' * (m - 1), end='')", "(n, m, _) = map(int, input().split())\nprint(2 * (n - 1) + (n + 1) * (m - 1))\nprint('U' * (n - 1) + 'L' * (m - 1), end='')\nfor i in range(n):\n    if i != 0:\n        print('D', end='')\n    if i % 2 == 0:\n        print('R' * (m - 1), end='')\n    else:\n        print('L' * (m - 1), end='')", "(n, m, _) = map(int, input().split())\nprint(2 * (n - 1) + (n + 1) * (m - 1))\nprint('U' * (n - 1) + 'L' * (m - 1), end='')\nfor i in range(n):\n    if i != 0:\n        print('D', end='')\n    if i % 2 == 0:\n        print('R' * (m - 1), end='')\n    else:\n        print('L' * (m - 1), end='')", "(n, m, _) = map(int, input().split())\nprint(2 * (n - 1) + (n + 1) * (m - 1))\nprint('U' * (n - 1) + 'L' * (m - 1), end='')\nfor i in range(n):\n    if i != 0:\n        print('D', end='')\n    if i % 2 == 0:\n        print('R' * (m - 1), end='')\n    else:\n        print('L' * (m - 1), end='')", "(n, m, _) = map(int, input().split())\nprint(2 * (n - 1) + (n + 1) * (m - 1))\nprint('U' * (n - 1) + 'L' * (m - 1), end='')\nfor i in range(n):\n    if i != 0:\n        print('D', end='')\n    if i % 2 == 0:\n        print('R' * (m - 1), end='')\n    else:\n        print('L' * (m - 1), end='')", "(n, m, k) = map(int, input().split())\nfor i in range(k):\n    (x, y) = map(int, input().split())\nfor i in range(k):\n    (x, y) = map(int, input().split())\na = str()\na += 'U' * (n - 1)\na += 'L' * (m - 1)\nfor i in range(n):\n    if i % 2 == 0:\n        a += 'R' * (m - 1)\n    else:\n        a += 'L' * (m - 1)\n    if i != n - 1:\n        a += 'D'\nprint(n * m + n + m - 3)\nprint(a)", "(n, m, _) = map(int, input().split())\nprint(2 * (n - 1) + (n + 1) * (m - 1))\nprint('U' * (n - 1) + 'L' * (m - 1), end='')\nfor i in range(n):\n    if i != 0:\n        print('D', end='')\n    if i % 2 == 0:\n        print('R' * (m - 1), end='')\n    else:\n        print('L' * (m - 1), end='')", "(n, m, _) = map(int, input().split())\nprint(2 * (n - 1) + (n + 1) * (m - 1))\nprint('U' * (n - 1) + 'L' * (m - 1), end='')\nfor i in range(n):\n    if i != 0:\n        print('D', end='')\n    if i % 2 == 0:\n        print('R' * (m - 1), end='')\n    else:\n        print('L' * (m - 1), end='')", "(n, m, k) = map(int, input().split())\nl1 = []\nfor i in range(k):\n    l1.append([int(j) for j in input().split()])\nl2 = []\nfor i in range(k):\n    l2.append([int(j) for j in input().split()])\ntotal = n * m + n + m - 3\nprint(total)\nprint('U' * (n - 1) + 'L' * (m - 1), end='')\nfor i in range(n):\n    if i == n - 1:\n        if n % 2 == 0:\n            print('L' * (m - 1), end='')\n        else:\n            print('R' * (m - 1), end='')\n    elif i % 2 == 0:\n        print('R' * (m - 1), end='')\n        print('D', end='')\n    else:\n        print('L' * (m - 1), end='')\n        print('D', end='')", "(n, m, k) = map(int, input().split())\ntotal = n * m + n + m - 3\nprint(total)\nprint('U' * (n - 1) + 'L' * (m - 1), end='')\nfor i in range(n):\n    if i == n - 1:\n        if n % 2 == 0:\n            print('L' * (m - 1), end='')\n        else:\n            print('R' * (m - 1), end='')\n    elif i % 2 == 0:\n        print('R' * (m - 1), end='')\n        print('D', end='')\n    else:\n        print('L' * (m - 1), end='')\n        print('D', end='')", "(n, m, _) = map(int, input().split())\nprint(2 * (n - 1) + (n + 1) * (m - 1))\nprint('U' * (n - 1) + 'L' * (m - 1), end='')\nfor i in range(n):\n    if i != 0:\n        print('D', end='')\n    if i % 2 == 0:\n        print('R' * (m - 1), end='')\n    else:\n        print('L' * (m - 1), end='')", "(n, m, k) = map(int, input().split())\nx = []\nfor i in range(k):\n    x.append(list(map(int, input().split())))\ny = []\nfor i in range(k):\n    y.append(list(map(int, input().split())))\nans = ''\nans += 'U' * (n - 1)\nans += 'L' * (m - 1)\nd = 1\nfor i in range(n):\n    if i % 2 == 0:\n        ans += 'R' * (m - 1)\n    else:\n        ans += 'L' * (m - 1)\n    if i != n - 1:\n        ans += 'D'\nprint(len(ans))\nprint(ans)", "(n, m, k) = [int(x) for x in input().split()]\n(chips, dest) = ([], [])\nfor i in range(k):\n    chips.append([int(x) for x in input().split()])\nfor i in range(k):\n    dest.append([int(x) for x in input().split()])\nans = (n - 1) * 'U' + (m - 1) * 'L'\nfor i in range(n):\n    if i % 2 == 0:\n        ans += (m - 1) * 'R'\n    else:\n        ans += (m - 1) * 'L'\n    if i != n - 1:\n        ans += 'D'\nprint(len(ans))\nprint(ans)", "(n, m, k) = map(int, input().split())\nprint(2 * (n - 1) + (n + 1) * (m - 1))\nprint('U' * (n - 1) + 'L' * (m - 1), end='')\nfor i in range(n):\n    if i != 0:\n        print('D', end='')\n    if i % 2 == 0:\n        print('R' * (m - 1), end='')\n    else:\n        print('L' * (m - 1), end='')", "(n, m, _) = map(int, input().split())\nprint(2 * (n - 1) + (n + 1) * (m - 1))\nprint('U' * (n - 1) + 'L' * (m - 1), end='')\nfor i in range(n):\n    if i != 0:\n        print('D', end='')\n    if i % 2 == 0:\n        print('R' * (m - 1), end='')\n    else:\n        print('L' * (m - 1), end='')", "(n, m, _) = map(int, input().split())\nprint(2 * (n - 1) + (n + 1) * (m - 1))\nprint('U' * (n - 1) + 'L' * (m - 1), end='')\nfor i in range(n):\n    if i != 0:\n        print('D', end='')\n    if i % 2 == 0:\n        print('R' * (m - 1), end='')\n    else:\n        print('L' * (m - 1), end='')", "def task4(n, m, k, start, end):\n    print(n + m + n * m - 3)\n    for i in range(n - 1):\n        print('U', end='')\n    for i in range(m - 1):\n        print('L', end='')\n    for i in range(n):\n        if i:\n            print('D', end='')\n        for j in range(m - 1):\n            if i % 2:\n                print('L', end='')\n            else:\n                print('R', end='')\n[n, m, k] = input().split()\nstart = []\nend = []\nfor i in range(int(k)):\n    [x, y] = input().split()\n    start.append([int(x), int(y)])\nfor i in range(int(k)):\n    [x, y] = input().split()\n    end.append([int(x), int(y)])\ntask4(int(n), int(m), int(k), start, end)", "def task4(n, m, k, start, end):\n    print(n + m + n * m - 3)\n    for i in range(n - 1):\n        print('U', end='')\n    for i in range(m - 1):\n        print('L', end='')\n    for i in range(n):\n        if i:\n            print('D', end='')\n        for j in range(m - 1):\n            if i % 2:\n                print('L', end='')\n            else:\n                print('R', end='')\n[n, m, k] = input().split()\nstart = []\nend = []\nfor i in range(int(k)):\n    [x, y] = input().split()\n    start.append([int(x), int(y)])\nfor i in range(int(k)):\n    [x, y] = input().split()\n    end.append([int(x), int(y)])\ntask4(int(n), int(m), int(k), start, end)", "def task2(n, m, k, start, end):\n    print(n + m + n * m - 3)\n    for i in range(n - 1):\n        print('U', end='')\n    for i in range(m - 1):\n        print('L', end='')\n    for i in range(n):\n        if i:\n            print('D', end='')\n        for j in range(m - 1):\n            if i % 2:\n                print('L', end='')\n            else:\n                print('R', end='')\n[n, m, k] = input().split()\nstart = []\nend = []\nfor i in range(int(k)):\n    [x, y] = input().split()\n    start.append([int(x), int(y)])\nfor i in range(int(k)):\n    [x, y] = input().split()\n    end.append([int(x), int(y)])\ntask2(int(n), int(m), int(k), start, end)", "(n, m, _) = map(int, input().split())\nprint(2 * (n - 1) + (n + 1) * (m - 1))\nprint('U' * (n - 1) + 'L' * (m - 1), end='')\nfor i in range(n):\n    if i != 0:\n        print('D', end='')\n    if i % 2 == 0:\n        print('R' * (m - 1), end='')\n    else:\n        print('L' * (m - 1), end='')", "(n, m, _) = list(map(int, input().split()))\nprint(2 * (n - 1) + (n + 1) * (m - 1))\nprint('U' * (n - 1) + 'L' * (m - 1), end='')\nfor i in range(n):\n    if i != 0:\n        print('D', end='')\n    if i % 2 == 0:\n        print('R' * (m - 1), end='')\n    else:\n        print('L' * (m - 1), end='')", "(n, m, _) = map(int, input().split())\nprint(2 * (n - 1) + (n + 1) * (m - 1))\nprint('U' * (n - 1) + 'L' * (m - 1), end='')\nfor i in range(n):\n    if i != 0:\n        print('D', end='')\n    if i % 2 == 0:\n        print('R' * (m - 1), end='')\n    else:\n        print('L' * (m - 1), end='')", "(n, m, _) = map(int, input().split())\nprint(2 * (n - 1) + (n + 1) * (m - 1))\nprint('U' * (n - 1) + 'L' * (m - 1), end='')\nfor i in range(n):\n    if i != 0:\n        print('D', end='')\n    if i % 2 == 0:\n        print('R' * (m - 1), end='')\n    else:\n        print('L' * (m - 1), end='')", "(n, m, _) = map(int, input().split())\nprint(2 * (n - 1) + (n + 1) * (m - 1))\nprint('U' * (n - 1) + 'L' * (m - 1), end='')\nfor i in range(n):\n    if i != 0:\n        print('D', end='')\n    if i % 2 == 0:\n        print('R' * (m - 1), end='')\n    else:\n        print('L' * (m - 1), end='')", "def main():\n    (n, m, k) = map(int, input().split())\n    ops = n - 1 + (m - 1) + n * (m - 1) + (n - 1)\n    print(ops)\n    moves = 'U' * (n - 1) + 'L' * (m - 1)\n    for i in range(n):\n        if i != 0:\n            moves += 'D'\n        if i % 2 == 0:\n            moves += 'R' * (m - 1)\n        else:\n            moves += 'L' * (m - 1)\n    print(moves)\nmain()", "(n, m, k) = map(int, input().split())\nxy = []\nfor i in range(k):\n    xy.append(list(map(int, input().split())))\nans = 'U' * (n - 1) + 'L' * (m - 1)\nfor i in range(n):\n    if i % 2 == 0:\n        ans += 'R' * (m - 1) + 'D'\n    else:\n        ans += 'L' * (m - 1) + 'D'\nprint(len(ans) - 1)\nprint(ans[:len(ans) - 1])", "(n, m, _) = map(int, input().split())\nprint(2 * (n - 1) + (n + 1) * (m - 1))\nprint('U' * (n - 1) + 'L' * (m - 1), end='')\nfor i in range(n):\n    if i != 0:\n        print('D', end='')\n    if i % 2 == 0:\n        print('R' * (m - 1), end='')\n    else:\n        print('L' * (m - 1), end='')", "(n, m, _) = map(int, input().split())\nprint(2 * (n - 1) + (n + 1) * (m - 1))\nprint('U' * (n - 1) + 'L' * (m - 1), end='')\nfor i in range(n):\n    if i != 0:\n        print('D', end='')\n    if i % 2 == 0:\n        print('R' * (m - 1), end='')\n    else:\n        print('L' * (m - 1), end='')", "(n, m, _) = map(int, input().split())\nprint(2 * (n - 1) + (n + 1) * (m - 1))\nprint('U' * (n - 1) + 'L' * (m - 1), end='')\nfor i in range(n):\n    if i != 0:\n        print('D', end='')\n    if i % 2 == 0:\n        print('R' * (m - 1), end='')\n    else:\n        print('L' * (m - 1), end='')", "(n, m, k) = map(int, input().split())\nprint(n + m - 3 + n * m)\nprint('U' * (n - 1) + 'L' * (m - 1), end='')\nfor i in range(n):\n    if i != 0:\n        print('D', end='')\n    if i % 2 == 1:\n        print('L' * (m - 1), end='')\n    elif i % 2 == 0:\n        print('R' * (m - 1), end='')", "(n, m, k) = map(int, input().split())\nn -= 1\nm -= 1\nans = 'U' * n + 'L' * m + ('R' * m + 'D' + 'L' * m + 'D') * ((n + 1) // 2) + 'R' * m * ((n + 1) % 2)\nif ans and ans[-1] == 'D':\n    ans = ans[:-1]\nprint(len(ans))\nprint(ans)", "(n, m, k) = map(int, input().split())\nsxy = [list(map(int, input().split())) for _ in range(k)]\nfxy = [list(map(int, input().split())) for _ in range(k)]\nans = 'U' * (n - 1) + 'L' * (m - 1)\nfor i in range(n):\n    if i != 0:\n        ans += 'D'\n    if i % 2 == 0:\n        ans += 'R' * (m - 1)\n    else:\n        ans += 'L' * (m - 1)\nprint(len(ans))\nprint(ans)", "liStr = input().split()\nn = int(liStr[0])\nm = int(liStr[1])\nk = int(liStr[2])\nfor _ in range(0, 2 * k):\n    liStr = input()\nctr = 0\nans = ''\nfor _ in range(0, n - 1):\n    ctr += 1\n    ans = ans + 'U'\nfor _ in range(0, m - 1):\n    ctr += 1\n    ans = ans + 'L'\nfor i in range(1, n + 1):\n    ch = 'R'\n    if i % 2 == 0:\n        ch = 'L'\n    for j in range(0, m - 1):\n        ctr += 1\n        ans = ans + ch\n    if i != n:\n        ctr += 1\n        ans = ans + 'D'\nprint(ctr)\nprint(ans)", "from sys import exit\n\ndef i():\n    return input()\n\ndef ii():\n    return int(input())\n\ndef iis():\n    return map(int, input().split())\n\ndef liis():\n    return list(map(int, input().split()))\n\ndef print_array(a):\n    print(' '.join(map(str, a)))\n(n, m, k) = iis()\n\ndef move(side, distances, chips):\n    if side == 'L':\n        for i in distances:\n            i[0] = max(0, i[0] - 1)\n    elif side == 'R':\n        for i in distances:\n            i[0] = min(len(distances[0]) - 1, i[0] + 1)\n    elif side == 'U':\n        for i in distances:\n            i[1] = max(0, i[1] - 1)\n    else:\n        for i in distances:\n            i[1] = min(i[1] + 1, len(distances) - 1)\n    for i in range(len(distances)):\n        if distances[i][0] == 0 and distances[i][1] == 0:\n            chips.discard(i)\n    return (distances, chips)\nans = []\ncur = []\nchips = set()\nfor i in range(k):\n    cur.append(liis())\n    chips.add(i)\nshould = []\nfor i in range(k):\n    should.append(liis())\nfor i in range(n - 1):\n    ans.append('U')\nfor i in range(m - 1):\n    ans.append('L')\nflag = True\nfor i in range(n):\n    for j in range(m - 1):\n        if flag:\n            ans.append('R')\n        else:\n            ans.append('L')\n    flag = not flag\n    if i != n - 1:\n        ans.append('D')\nprint(len(ans))\nprint(''.join(ans))", "(n, m, k) = list(map(int, input().split()))\nlist1 = []\nfor i in range(k):\n    list1.append(list(map(int, input().split())))\nass = []\nfor i in range(k):\n    ass.append(list(map(int, input().split())))\nU = ''\nD = ''\nL = ''\nR = ''\nans = ''\nfor i in range(1, n):\n    U += 'U'\n    D += 'D'\nfor i in range(1, m):\n    L += 'L'\n    R += 'R'\nans += U\nans += L\nfor i in range(0, n - 1):\n    for j in range(0, m - 1):\n        if i % 2 == 0:\n            ans += 'R'\n        else:\n            ans += 'L'\n    ans += 'D'\nif i % 2 != 0:\n    ans += R\nelse:\n    ans += L\nprint(len(ans))\nprint(ans)", "(n, m, k) = map(int, input().split())\ns = 'U' * (n - 1)\ns += 'L' * (m - 1)\nfor i in range(n):\n    if i % 2 == 0:\n        s += 'R' * (m - 1)\n    else:\n        s += 'L' * (m - 1)\n    if i != n - 1:\n        s += 'D'\nprint(len(s))\nprint(s)", "(n, m, k) = [int(x) for x in input().split()]\nans = ''\nans = (n - 1) * 'U' + (m - 1) * 'L'\nfor i in range(n):\n    if i % 2 == 0:\n        ans += (m - 1) * 'R'\n    else:\n        ans += (m - 1) * 'L'\n    if i < n - 1:\n        ans += 'D'\nprint(len(ans))\nprint(ans)", "(n, m, _) = map(int, input().split())\nprint(2 * (n - 1) + (n + 1) * (m - 1))\nprint('U' * (n - 1) + 'L' * (m - 1), end='')\nprint('R' * (m - 1), end='')\nfor i in range(n - 1):\n    print('D', end='')\n    if i % 2 == 0:\n        print('L' * (m - 1), end='')\n    else:\n        print('R' * (m - 1), end='')", "(n, m, _) = map(int, input().split())\nprint(2 * (n - 1) + (n + 1) * (m - 1))\nprint('U' * (n - 1) + 'L' * (m - 1), end='')\nfor i in range(n):\n    if i != 0:\n        print('D', end='')\n    if i % 2 == 0:\n        print('R' * (m - 1), end='')\n    else:\n        print('L' * (m - 1), end='')", "(n, m, k) = map(int, input().split())\nleft = 'D' + 'L' * (m - 1)\nright = 'D' + 'R' * (m - 1)\nans = ''.join(['U' * (n - 1), 'L' * (m - 1), 'R' * (m - 1)] + [left if x % 2 == 0 else right for x in range(n - 1)])\nprint(len(ans))\nprint(ans)", "(n, m, k) = map(int, input().split())\nprint(n - 1 + m - 1 + n * (m - 1) + n - 1)\nprint('U' * (n - 1) + 'L' * (m - 1), end='')\nfor i in range(n):\n    if i != 0:\n        print('D', end='')\n    if i & 1:\n        print('L' * (m - 1), end='')\n    else:\n        print('R' * (m - 1), end='')"]