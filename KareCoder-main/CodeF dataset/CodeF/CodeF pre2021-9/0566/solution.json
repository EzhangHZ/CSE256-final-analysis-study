["import sys\ninput = sys.stdin.readline\nR = lambda : map(int, input().split())\nI = lambda : int(input())\nS = lambda : input().rstrip('\\n')\nL = lambda : list(R())\n\ndef solve():\n    (x, y) = R()\n    ans = 0\n    i = 1\n    while i * i <= x:\n        temp = min(y, x // i - 1) - i\n        ans += 0 if temp < 0 else temp\n        i += 1\n    print(ans)\nfor _ in range(I()):\n    solve()", "def answer():\n    ans = 0\n    for i in range(1, b + 1):\n        val = min(a // i, b + 1) - i - 1\n        if val <= 0:\n            break\n        ans += val\n    return ans\nfor T in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(answer())", "from math import isqrt\n\ndef solve(x, y):\n    rmax = min(isqrt(x), y - 1)\n    res = 0\n    for r in range(1, rmax + 1):\n        if x // r - 1 > r:\n            b = min(y, x // r - 1) - r\n            res += b\n    return res\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    print(solve(x, y))", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (x, y) = map(int, input().split())\n    if x < 3 or y < 2:\n        return 0\n    ans = 0\n    for i in range(3, min(10 ** 5 + 4, y + 2)):\n        if i * (i - 2) > x:\n            break\n        ans += min(x // (i - 2), y + 1) - i + 1\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "def find():\n    (x, y) = map(int, input().split())\n    s = 0\n    for j in range(1, int(x ** 0.5) + 1):\n        s += max(0, min(y, x // j - 1) - j)\n    return s\nfor i in range(int(input())):\n    print(find())", "import math\n\ndef spceial_numbers(x, y):\n    sum = 0\n    for k in range(1, int(math.sqrt(x)) + 1):\n        sum += max(0, min(y, x // k - 1) - k)\n    return sum\nt = int(input())\nfor i in range(t):\n    (x, y) = [int(i) for i in input().split()]\n    print(spceial_numbers(x, y))", "import sys, io, os, math, time\nfrom math import ceil, log, gcd, inf, floor, sqrt\nfrom itertools import permutations\nimport datetime\nmod = 1000000007\nmod1 = 998244353\n\ndef intinp():\n    return int(sys.stdin.readline())\n\ndef strinp():\n    return sys.stdin.readline()\n\ndef arrinp():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef mulinp():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef flush():\n    return sys.stdout.flush()\n\ndef power_two(x):\n    return 1 << x\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef power(a, n, p):\n    res = 1\n    while n:\n        if n & 1:\n            res = res * a\n            n -= 1\n        else:\n            a = a * a\n            n = n // 2\n    return res\n\ndef solution():\n    (a, b) = mulinp()\n    ans = 0\n    for i in range(1, int(sqrt(a)) + 1):\n        ans += max(min(b, a // i - 1) - i, 0)\n    print(ans)\n\ndef main():\n    tc = intinp()\n    while tc:\n        solution()\n        tc -= 1\nmain()", "for _ in range(int(input())):\n    (x, y) = list(map(int, input().split()))\n    s = 0\n    for i in range(1, min(x - 1, y)):\n        c = x // i - 1\n        if c <= i:\n            break\n        s += min(c, y) - i\n    print(s)", "for test_case in range(int(input())):\n    (x, y) = map(int, input().split())\n    ans = 0\n    for k in range(1, y):\n        w = min(y, x // k - 1) - k\n        if w <= 0:\n            break\n        ans += w\n    print(ans)", "import math\n\ndef solve():\n    (x, y) = map(int, input().split())\n    ds = 0\n    i = 1\n    while i * i < x:\n        ds += max(min(y, x // i - 1) - i, 0)\n        i += 1\n    print(ds)\n    return\nt = int(input())\nfor _ in range(t):\n    solve()", "def solve():\n    (x, y) = list(map(int, input().split(' ')))\n    ans = 0\n    i = 1\n    while i * i < x:\n        ans += max(min(y, x // i - 1) - i, 0)\n        i += 1\n    print(ans)\nt = int(input())\nfor i in range(t):\n    solve()", "for t in range(int(input())):\n    (a, b) = [int(x) for x in input().rstrip().split()]\n    count = 0\n    for i in range(1, min(a - 1, b)):\n        c = a // i - 1\n        if c <= i:\n            break\n        else:\n            count += min(c, b) - i\n    print(count)", "T = int(input())\nfor t in range(T):\n    (x, y) = tuple([int(x) for x in input().split()])\n    sqrt_x = int(x ** 0.5)\n    result = 0\n    for i in range(1, sqrt_x + 1):\n        num_n = min(x // i, y + 1) - i - 1\n        if num_n <= 0:\n            break\n        result += num_n\n    print(result)", "from math import sqrt\nimport operator\nimport sys\ninf = sys.stdin\ninput = inf.readline\n\ndef read_one_int():\n    return int(input().rstrip('\\n'))\n\ndef read_list_of_ints():\n    res = [int(val) for val in input().rstrip('\\n').split(' ')]\n    return res\n\ndef read_str():\n    return input().rstrip()\n\ndef check_seq(x, y):\n    res = 0\n    if y < 2 or x < 3:\n        return res\n    k = 1\n    while k * k <= x:\n        res += max(0, min(y, x // k - 1) - k)\n        k += 1\n    return res\n\ndef main():\n    samples = read_one_int()\n    for _ in range(samples):\n        (x, y) = read_list_of_ints()\n        cur_res = check_seq(x, y)\n        print(cur_res)\nmain()", "from math import sqrt\n\ndef fm(a, b):\n    total = 0\n    for k in range(1, min(int(sqrt(a + 1)) - 1, b - 1) + 1):\n        total += max(min(b, int(a / k) - 1) - k, 0)\n    return total\nt = int(input())\nfor i in range(t):\n    (A, B) = map(int, input().split())\n    print(fm(A, B))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    total = 0\n    for i in range(1, b + 1):\n        c = a // i - 1\n        val = min(c, b) - i\n        if val <= 0:\n            break\n        total += val\n    print(total)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    if b == 1 or a == 1:\n        print(0)\n    else:\n        k = int(a ** 0.5)\n        ans = 0\n        for i in range(1, k + 1):\n            ans += max(0, min(b, a // i - 1) - i)\n        print(ans)", "T = int(input())\nfor i in range(T):\n    (x, y) = map(int, input().split())\n    ans = 0\n    for k in range(1, int(pow(x, 1 / 2)) + 1):\n        ans += max(0, min(x // k - 1, y) - k)\n    print(ans)", "import math\nfor _ in range(int(input())):\n    (x, y) = [int(i) for i in input().split()]\n    ans = 0\n    k = math.ceil(x ** 0.5)\n    for j in range(1, k + 1):\n        ans += max(0, min(y, x // j - 1) - j)\n    print(ans)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    sumo = 0\n    for j in range(1, b + 1):\n        if a // j <= j + 1 or b - j <= 0:\n            break\n        sumo = sumo + min(a // j - 1, b) - j\n    print(sumo)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    s = 0\n    i = 1\n    while True:\n        t = min(b, (a - i) // i) - i\n        if t > 0:\n            s += t\n        else:\n            break\n        i += 1\n    print(s)", "from pprint import pprint\nimport sys\ninput = sys.stdin.readline\n\ndef do():\n    (a, b) = map(int, input().split())\n    if a == 1:\n        print(0)\n        return\n    res = 0\n    i = 1\n    while True:\n        init = i * (i + 2)\n        rest = a - init\n        if rest < 0:\n            break\n        cnt = rest // i + 1\n        res += max(0, min(cnt, b - i))\n        i += 1\n    print(res)\nq = int(input())\nfor _ in range(q):\n    do()", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    k = 2\n    ost = 1\n    p = min(a // ost - k, b - k + 1)\n    c = 0\n    while p > 0:\n        k += 1\n        c += p\n        ost += 1\n        p = min(a // ost - k, b - k + 1)\n    print(c)", "t = int(input())\nfor i in range(t):\n    l1 = input().split(' ')\n    (x, y) = (int(l1[0]), int(l1[1]))\n    s = 0\n    for j in range(1, y):\n        k = (x - j) // j\n        if k <= j:\n            break\n        s += min(k, y) - j\n        j += 1\n    print(s)", "t = int(input())\nfor _ in range(t):\n    (x, y) = (int(i) for i in input().split())\n    (k, res) = (1, 0)\n    while True:\n        temp = min(x // k - k - 1, y - k)\n        if temp <= 0:\n            break\n        res += temp\n        k += 1\n    print(res)", "for nt in range(int(input())):\n    (x, y) = map(int, input().split())\n    ans = 0\n    for i in range(1, int(x ** 0.5) + 1):\n        ans += max(min(y, x // i - 1) - i, 0)\n    print(ans)", "from math import sqrt\nfor _ in range(int(input())):\n    (x, y) = [int(x) for x in input().split()]\n    (ans, fl) = (0, False)\n    for k in range(1, int(sqrt(x)) + 1):\n        ans += max(0, min(y, x // k - 1) - k)\n    print(ans)", "from math import *\nt = int(input())\nwhile t:\n    xy = [int(a) for a in input().split()]\n    x = xy[0]\n    y = xy[1]\n    ans = 0\n    for i in range(1, ceil(sqrt(x))):\n        ans += max(min(y, x // i - 1) - i, 0)\n    print(ans)\n    t = t - 1", "import math\nt = int(input())\nfor _ in range(t):\n    (x, y) = input().split()\n    x = int(x)\n    y = int(y)\n    ans = 0\n    for i in range(1, int(math.ceil(math.sqrt(x)))):\n        ans += max(min(y, x // i - 1) - i, 0)\n    print(ans)", "for test_case in range(int(input())):\n    (x, y) = map(int, input().split())\n    ans = 0\n    k = 1\n    while k * (k + 1) < x and k < y:\n        ans += min(y, x // k - 1) - k\n        k += 1\n    print(ans)", "for test_case in range(int(input())):\n    (x, y) = map(int, input().split())\n    ans = 0\n    k = 1\n    while k * (k + 1) < x and k < y:\n        ans += min(y, x // k - 1) - k\n        k += 1\n    print(ans)", "for test_case in range(int(input())):\n    (x, y) = map(int, input().split())\n    res = 0\n    k = 1\n    while k * (k + 1) < x and k < y:\n        res += min(y, x // k - 1) - k\n        k += 1\n    print(res)", "import math\nfrom math import sqrt\nfor i in range(int(input())):\n    (x, y) = map(int, input().split())\n    n = 0\n    t = int(sqrt(x))\n    for k in range(1, int(sqrt(x)) + 1):\n        n += max(0, min(y, x // k - 1) - k)\n    print(n)", "import math\nfor tt in range(int(input())):\n    (x, y) = map(int, input().split())\n    ans = 0\n    for i in range(1, int(math.sqrt(x)) + 1):\n        ans += max(0, min(y, x // i - 1) - i)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    ans = 0\n    c = 1\n    while c * c <= a:\n        x = (a - c) // c\n        if x > b:\n            x = b\n        ans += max(x - c, 0)\n        c += 1\n    print(ans)", "import math\n\ndef CountSpecialsPairs_NT(x, y):\n    count = 0\n    for i in range(1, int(math.sqrt(x)) + 1):\n        count += max(0, min(y, int(x / i) - 1) - i)\n    return count\nn = int(input())\nfor i in range(n):\n    s = input().split()\n    x = int(s[0])\n    y = int(s[1])\n    print(CountSpecialsPairs_NT(x, y))", "for t in range(int(input())):\n    (x, y) = map(int, input().split())\n    res = 0\n    k = 1\n    while k * (k + 1) < x and k < y:\n        res += min(y, x // k - 1) - k\n        k += 1\n    print(res)", "for test_case in range(int(input())):\n    (x, y) = map(int, input().split())\n    ans = 0\n    k = 1\n    while k * (k + 1) < x and k < y:\n        ans += min(y, x // k - 1) - k\n        k += 1\n    print(ans)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    sumo = 0\n    for j in range(1, b + 1):\n        if a // j <= j + 1 or b - j <= 0:\n            break\n        sumo = sumo + min(a // j - 1, b) - j\n    print(sumo)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    sumo = 0\n    for j in range(1, b + 1):\n        if a // j <= j + 1 or b - j <= 0:\n            break\n        sumo = sumo + min(a // j - 1, b) - j\n    print(sumo)", "for t in range(int(input())):\n    (x, y) = map(int, input().split())\n    res = 0\n    k = 1\n    while k * (k + 1) < x and k < y:\n        res += min(y, x // k - 1) - k\n        k += 1\n    print(res)", "for p in [*open(0)][1:]:\n    (a, b) = map(int, p.split())\n    s = 0\n    j = 0\n    while j < b:\n        j += 1\n        if a <= j * j + j or b <= j:\n            break\n        s += min(a // j - 1, b) - j\n    print(s)"]