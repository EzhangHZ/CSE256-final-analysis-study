["def get_ints():\n    return map(int, input().split())\n\ndef main():\n    (_, m) = get_ints()\n    s = [set() for _ in range(m)]\n    (prev, score) = (-1, -1)\n    for (index, dest) in enumerate(get_ints()):\n        s[dest - 1].add(index)\n        if prev != dest:\n            score += 1\n        prev = dest\n    ans = [score]\n    for _ in range(m - 1):\n        (x, y) = get_ints()\n        (x, y) = (x - 1, y - 1)\n        target = x\n        if len(s[x]) < len(s[y]):\n            (x, y) = (y, x)\n        for e in s[y]:\n            if e - 1 in s[x]:\n                score -= 1\n            if e + 1 in s[x]:\n                score -= 1\n        for e in s[y]:\n            s[x].add(e)\n        s[target] = s[x]\n        ans.append(score)\n    print(*ans, sep='\\n')\nmain()", "def get_ints():\n    return map(int, input().split())\n\ndef main():\n    (_, m) = get_ints()\n    s = [set() for _ in range(m)]\n    (prev, score) = (-1, -1)\n    for (index, dest) in enumerate(get_ints()):\n        s[dest - 1].add(index)\n        if prev != dest:\n            score += 1\n        prev = dest\n    ans = [score]\n    for _ in range(m - 1):\n        (x, y) = get_ints()\n        (x, y) = (x - 1, y - 1)\n        target = x\n        if len(s[x]) < len(s[y]):\n            (x, y) = (y, x)\n        for e in s[y]:\n            if e - 1 in s[x]:\n                score -= 1\n            if e + 1 in s[x]:\n                score -= 1\n        for e in s[y]:\n            s[x].add(e)\n        s[target] = s[x]\n        ans.append(score)\n    print(*ans, sep='\\n')\nmain()", "def get_ints():\n    return map(int, input().split())\n\ndef main():\n    (_, m) = get_ints()\n    s = [set() for _ in range(m)]\n    (prev, score) = (-1, -1)\n    for (index, dest) in enumerate(get_ints()):\n        s[dest - 1].add(index)\n        if prev != dest:\n            score += 1\n        prev = dest\n    ans = [score]\n    for _ in range(m - 1):\n        (x, y) = get_ints()\n        (x, y) = (x - 1, y - 1)\n        target = x\n        if len(s[x]) < len(s[y]):\n            (x, y) = (y, x)\n        for e in s[y]:\n            if e - 1 in s[x]:\n                score -= 1\n            if e + 1 in s[x]:\n                score -= 1\n        for e in s[y]:\n            s[x].add(e)\n        s[target] = s[x]\n        ans.append(score)\n    print(*ans, sep='\\n')\nmain()", "def get_ints():\n    return map(int, input().split())\n\ndef main():\n    (_, m) = get_ints()\n    s = [set() for _ in range(m)]\n    (prev, score) = (-1, -1)\n    for (index, dest) in enumerate(get_ints()):\n        s[dest - 1].add(index)\n        if prev != dest:\n            score += 1\n        prev = dest\n    ans = [score]\n    for _ in range(m - 1):\n        (x, y) = get_ints()\n        (x, y) = (x - 1, y - 1)\n        target = x\n        if len(s[x]) < len(s[y]):\n            (x, y) = (y, x)\n        for e in s[y]:\n            if e - 1 in s[x]:\n                score -= 1\n            if e + 1 in s[x]:\n                score -= 1\n        for e in s[y]:\n            s[x].add(e)\n        s[target] = s[x]\n        ans.append(score)\n    print(*ans, sep='\\n')\nmain()"]