["for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = list(map(int, input().split()))\n    r = [0] * m\n    for i in s:\n        r[i % m] += 1\n    ans = 0\n    if r[0]:\n        ans += 1\n    if not m % 2 and r[m // 2]:\n        ans += 1\n    for i in range(1, (m + 1) // 2):\n        if r[i] or r[m - i]:\n            ans += 1\n            if abs(r[i] - r[m - i]) > 1:\n                ans += abs(r[i] - r[m - i]) - 1\n    print(ans)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = [0] * m\n    for i in map(int, input().split()):\n        d[i % m] += 1\n    if d[0] > 0:\n        c = 1\n    else:\n        c = 0\n    for i in range(1, m // 2 + 1):\n        (a, b) = (d[i], d[m - i])\n        if a == b == 0:\n            continue\n        elif a == b:\n            c += 1\n            continue\n        e = abs(a - b)\n        if e == 1:\n            c += 1\n        else:\n            c += e\n    print(c)", "def solve(A, n, m):\n    if m == 1:\n        return 1\n    freq = [0] * m\n    for a in A:\n        freq[a % m] += 1\n    result = 1 if freq[0] > 0 else 0\n    for i in range(1, m // 2):\n        if freq[i] == 0 and freq[m - i] == 0:\n            continue\n        d = abs(freq[i] - freq[m - i])\n        result += max(d, 1)\n    if m % 2 == 1:\n        if not (freq[m // 2] == 0 and freq[m - m // 2] == 0):\n            d = abs(freq[m // 2] - freq[m - m // 2])\n            result += max(d, 1)\n    else:\n        result += 1 if freq[m // 2] > 0 else 0\n    return result\nt = int(input())\nfor tc in range(t):\n    (n, m) = map(int, input().split())\n    A = list(map(int, input().split()))\n    result = solve(A, n, m)\n    print(result)", "def solve():\n    testis = int(input())\n    for t in range(testis):\n        (n, m) = map(int, input().split())\n        a = list(map(int, input().split()))\n        b = [0] * m\n        for j in a:\n            b[j % m] += 1\n        ans = 0\n        if b[0] > 0:\n            ans += 1\n        for j in range(1, (m + 1) // 2):\n            if b[j] or b[m - j]:\n                ans += max(1, abs(b[m - j] - b[j]))\n        if m % 2 == 0:\n            if b[m // 2]:\n                ans += 1\n        print(ans)\nsolve()", "def main():\n    t = int(input())\n    for _ in range(t):\n        (n, m) = tuple(map(int, input().split()))\n        a = list(map(int, input().split()))\n        dp = [0] * m\n        res = 0\n        for i in a:\n            dp[i % m] += 1\n        if dp[0] > 0:\n            res += 1\n        for i in range(1, (m + 1) // 2):\n            if dp[i] or dp[m - i]:\n                res += max(1, abs(dp[i] - dp[m - i]))\n        if m % 2 == 0 and dp[m // 2]:\n            res += 1\n        print(res)\nmain()", "T = int(input())\n\ndef solve(arr, N, M):\n    rems = [0] * M\n    for a in arr:\n        rems[a % M] += 1\n    res = 0\n    i = 0\n    while i * 2 <= M:\n        x = rems[i]\n        y = rems[M - i] if i != 0 else rems[0]\n        i += 1\n        if x < y:\n            (x, y) = (y, x)\n        if x == 0:\n            continue\n        if y >= x - 1:\n            res += 1\n            continue\n        res += x - y\n    return res\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    arr = map(int, input().split())\n    res = solve(arr, N, M)\n    print(res)", "import sys\ninput = lambda : sys.stdin.readline()\nint_arr = lambda : list(map(int, input().split()))\nstr_arr = lambda : list(map(str, input().split()))\nget_str = lambda : map(str, input().split())\nget_int = lambda : map(int, input().split())\nget_flo = lambda : map(float, input().split())\nmod = 1000000007\n\ndef solve(n, k, arr):\n    out = [0 for i in range(k)]\n    for i in range(n):\n        out[arr[i] % k] += 1\n    c = 0\n    for i in range(k // 2 + 1):\n        val = (k - i) % k\n        if out[val] + out[i] > 0:\n            c += max(abs(out[val] - out[i]), 1)\n    print(c)\nfor _ in range(int(input())):\n    (n, k) = get_int()\n    arr = int_arr()\n    solve(n, k, arr)", "t = int(input())\nfor i in range(t):\n    (n, m) = input().split()\n    n = int(n)\n    m = int(m)\n    mod = []\n    for j in range(m):\n        mod.append(0)\n    s = list(input().split())\n    for j in s:\n        mod[int(j) % m] += 1\n    if mod[0] != 0:\n        result = 1\n    else:\n        result = 0\n    for j in range(1, m // 2 + 1):\n        if mod[j] != 0:\n            if mod[j] == mod[m - j]:\n                result += 1\n            elif mod[m - j] != 0:\n                result = result + 1 + max(mod[j], mod[m - j]) - min(mod[j], mod[m - j]) - 1\n            else:\n                result += mod[j]\n        else:\n            result += mod[m - j]\n    print(result)", "import math\nfrom collections import *\nimport math\n\ndef solve():\n    (n, m) = map(int, input().split())\n    x = [int(i) for i in input().split()]\n    a = [0] * m\n    for i in range(n):\n        a[x[i] % m] += 1\n    c = 0\n    for i in range(1, m // 2 + 1):\n        if a[i] == a[m - i]:\n            if a[i] != 0 and a[m - i] != 0:\n                c += 1\n        elif a[i] > a[m - i]:\n            a[i] -= a[m - i] + 1\n            c += a[i] + 1\n        else:\n            a[m - i] -= a[i] + 1\n            c += a[m - i] + 1\n    if a[0] != 0:\n        print(c + 1)\n    else:\n        print(c)\nt = int(input())\nfor _ in range(t):\n    solve()", "answers = []\n\ndef solve(n, m, arr):\n    if n == 1:\n        answers.append(1)\n        return\n    count = 0\n    store = {}\n    for ele in arr:\n        rem = ele % m\n        if rem not in store:\n            store[rem] = 1\n        else:\n            store[rem] += 1\n    if 0 in store:\n        count = 1\n    start = 1\n    end = m - 1\n    while start <= end:\n        count1 = 0\n        count2 = 0\n        if start in store:\n            count1 = store[start]\n        if end in store:\n            count2 = store[end]\n        if count1 == 0 or count2 == 0:\n            count += max(count1, count2)\n        else:\n            diff = abs(count1 - count2)\n            if diff < 2:\n                count += 1\n            else:\n                least = min(count1, count2)\n                best = max(count1, count2)\n                count += 1\n                best -= least\n                best -= 1\n                count += best\n        start += 1\n        end -= 1\n    answers.append(count)\nT = int(input())\nwhile T:\n    (n, m) = [int(x) for x in input().split()]\n    arr = [int(x) for x in input().split()]\n    solve(n, m, arr)\n    T -= 1\nfor ans in answers:\n    print(ans)", "def processing():\n    (n, m) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    deli = [0] * m\n    for x in a:\n        deli[x % m] += 1\n    res = 0\n    if deli[0] != 0:\n        res += 1\n        deli[0] = 0\n    if m % 2 == 0:\n        for i in range(1, m // 2):\n            if deli[i] == 0 and deli[m - i] == 0:\n                continue\n            if abs(deli[i] - deli[m - i]) <= 1:\n                res += 1\n            else:\n                res += abs(deli[i] - deli[m - i])\n            deli[i] = 0\n            deli[m - i] = 0\n        if deli[m // 2] != 0:\n            res += 1\n            deli[m // 2] = 0\n    else:\n        for i in range(1, m // 2 + 1):\n            if deli[i] == 0 and deli[m - i] == 0:\n                continue\n            if abs(deli[i] - deli[m - i]) <= 1:\n                res += 1\n            else:\n                res += abs(deli[i] - deli[m - i])\n            deli[i] = 0\n            deli[m - i] = 0\n    print(res)\nt = int(input())\nfor i in range(t):\n    processing()", "def ass(a, b):\n    print(f'Assertion error: {a} != {b}' if a != b else 'OK')\n\ndef number():\n    return int(input())\n\ndef numbers():\n    return [int(item) for item in input().split()]\n\ndef f(m, arr):\n    res = [0 for i in range(m)]\n    for item in arr:\n        res[item % m] += 1\n    total = 0\n    if m % 2 == 0:\n        if res[0] > 0:\n            total += 1\n        if res[m // 2] > 0:\n            total += 1\n        for i in range(1, m // 2):\n            j = m - i\n            diff = abs(res[i] - res[j])\n            if diff == 0:\n                if res[i] != 0:\n                    total += 1\n            elif diff <= 1:\n                total += 1\n            else:\n                total += diff\n        return total\n    else:\n        if res[0] > 0:\n            total += 1\n        for i in range(1, (m + 1) // 2):\n            j = m - i\n            diff = abs(res[i] - res[j])\n            if diff == 0:\n                if res[i] > 0:\n                    total += 1\n            else:\n                total += diff\n        return total\nfor i in range(number()):\n    (n, m) = numbers()\n    print(f(m, numbers()))", "def solve():\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    x = [0] * m\n    for i in range(n):\n        x[a[i] % m] += 1\n    c = 0\n    if x[0] != 0:\n        c += 1\n    for i in range(1, m // 2 + 1):\n        if x[i] != x[m - i]:\n            z = min(x[i], x[m - i]) + 1\n            c += 1 + max(x[i], x[m - i]) - z\n        elif x[i] != 0:\n            c += 1\n    print(c)\n\ndef main():\n    for ii in range(int(input())):\n        solve()\nmain()", "from sys import *\nfrom itertools import accumulate\ninput = lambda : stdin.readline()\nint_arr = lambda : list(map(int, stdin.readline().strip().split()))\nstr_arr = lambda : list(map(str, stdin.readline().split()))\nget_str = lambda : map(str, stdin.readline().strip().split())\nget_int = lambda : map(int, stdin.readline().strip().split())\nget_float = lambda : map(float, stdin.readline().strip().split())\nmod = 1000000007\nsetrecursionlimit(1000)\nfor _ in range(int(input())):\n    (n, m) = get_int()\n    arr = int_arr()\n    lst = [0] * m\n    for i in arr:\n        val = i % m\n        lst[val] += 1\n    ct = 0\n    for i in range(m // 2 + 1):\n        val1 = (m - i) % m\n        if lst[val1] + lst[i] > 0:\n            ct += max(1, abs(lst[val1] - lst[i]))\n    print(ct)", "t = int(input())\nfor _ in range(0, t):\n    (n, m) = map(int, input().split(' '))\n    d = [0] * m\n    q = list(map(int, input().split(' ')))\n    for i in q:\n        d[i % m] += 1\n    c = 0\n    if d[0] > 0:\n        c += 1\n    for x in range(1, (m + 1) // 2):\n        if d[x] > 0 or d[m - x] > 0:\n            c += max(1, abs(d[m - x] - d[x]))\n    if d[m // 2] != 0 and m % 2 == 0:\n        c += 1\n    print(c)", "from collections import defaultdict, Counter\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr = [el % m for el in arr]\n    d = Counter(arr)\n    ans = 0\n    if d[0] > 0:\n        ans += 1\n    if m % 2 == 0 and d[m // 2] > 0:\n        ans += 1\n    for i in range(1, (m + 1) // 2):\n        if d[i] > 0 or d[m - i] > 0:\n            ans += 1\n            if abs(d[i] - d[m - i]) > 1:\n                ans += abs(d[i] - d[m - i]) - 1\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = [int(x) for x in input().split(' ')]\n    a = [int(x) for x in input().split(' ')]\n    cnt = [0] * m\n    for v in a:\n        cnt[v % m] += 1\n    ans = 0\n    if cnt[0] >= 1:\n        ans += 1\n    for i in range(1, m):\n        if cnt[i] == 0:\n            continue\n        if cnt[i] >= 1 and cnt[m - i] >= 1:\n            if cnt[i] == cnt[m - i]:\n                ans += 1\n            else:\n                max_v = max(cnt[i], cnt[m - i])\n                min_v = min(cnt[i], cnt[m - i])\n                if max_v == min_v + 1:\n                    ans += 1\n                else:\n                    ans += max_v - min_v\n            cnt[i] = 0\n            cnt[m - i] = 0\n        else:\n            ans += cnt[i]\n    print(ans)", "def max(x, y):\n    if x == y and y == 0:\n        return 0\n    if x >= y + 1:\n        return x - y\n    elif y >= x + 1:\n        return y - x\n    return 1\n\ndef zero(a):\n    if a > 0:\n        return 1\n    return 0\n\ndef MMM(n, m, a):\n    D = [0] * m\n    for i in range(n):\n        D[a[i] % m] += 1\n    total = 0\n    if m % 2 == 0:\n        total += zero(D[0]) + zero(D[m // 2])\n        for i in range(1, m // 2):\n            total += max(D[i], D[m - i])\n    else:\n        total += zero(D[0])\n        for i in range(1, (m + 1) // 2):\n            total += max(D[i], D[m - i])\n    print(total)\n    return 0\nt = int(input())\nfor p in range(t):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    MMM(n, m, a)", "k = int(input())\nimport collections\nfor i in range(k):\n    (num, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    lst = [i % k for i in lst]\n    kk = collections.Counter(lst)\n    tj = []\n    ans1 = 0\n    ans2 = 0\n    ans3 = 0\n    if 0 in kk:\n        ans3 += 1\n        del kk[0]\n    if k % 2 == 0:\n        if k // 2 in kk:\n            ans3 += 1\n            del kk[k // 2]\n    for i in kk:\n        if k - i not in kk:\n            ans1 += kk[i]\n        elif kk[i] == kk[k - i] or abs(kk[i] - kk[k - i]) == 1:\n            ans2 += 1\n        else:\n            ans2 += abs(kk[i] - kk[k - i])\n    print(ans1 + ans2 // 2 + ans3)", "def find():\n    (n, m) = map(int, input().split())\n    mas = list(map(int, input().split()))\n    ost = {}\n    for j in mas:\n        o = j % m\n        if o > m // 2:\n            ost[m - o] = ost.get(m - o, 0) - 1\n        else:\n            ost[o] = ost.get(o, 0) + 1\n    ans = 0\n    for j in ost:\n        if j == 0 or j == m / 2:\n            ans += 1\n        else:\n            ans += max(abs(ost[j]), 1)\n    return ans\nfor i in range(int(input())):\n    print(find())", "def main():\n    for _ in range(int(input())):\n        (n, m) = tuple(map(int, input().split()))\n        a = list(map(int, input().split()))\n        dp = [0] * m\n        res = 0\n        for i in a:\n            dp[i % m] += 1\n        if dp[0] > 0:\n            res += 1\n        for i in range(1, (m + 1) // 2):\n            if dp[i] or dp[m - i]:\n                res += max(1, abs(dp[i] - dp[m - i]))\n        if m % 2 == 0 and dp[m // 2]:\n            res += 1\n        print(res)\nmain()", "t = int(input())\nfor _ in range(0, t):\n    (n, m) = map(int, input().split(' '))\n    d = [0] * m\n    q = list(map(int, input().split(' ')))\n    for i in q:\n        d[i % m] += 1\n    c = 0\n    if d[0] > 0:\n        c += 1\n    for x in range(1, (m + 1) // 2):\n        if d[x] > 0 or d[m - x] > 0:\n            c += max(1, abs(d[m - x] - d[x]))\n    if d[m // 2] != 0 and m % 2 == 0:\n        c += 1\n    print(c)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    li = list(map(int, input().split()))\n    lim = [0] * m\n    for ele in li:\n        k = ele % m\n        lim[k] = lim[k] + 1\n    ans = 0\n    if m % 2 == 0:\n        p = m // 2\n    else:\n        p = (m + 1) // 2\n    for i in range(1, p):\n        if lim[i] == 0 or lim[m - i] == 0:\n            ans = ans + lim[i] + lim[m - i]\n        elif lim[i] == lim[m - i]:\n            ans = ans + 1\n        else:\n            ans = ans + abs(lim[i] - lim[m - i])\n    if lim[0] != 0:\n        ans = ans + 1\n    if m % 2 == 0:\n        if lim[m // 2] != 0 and m != 1:\n            ans = ans + 1\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if m == 1:\n        print(1)\n    else:\n        trash = [0] * m\n        for i in arr:\n            temp = i % m\n            trash[temp] += 1\n        c = 0\n        for i in range(m // 2 + 1):\n            j = (m - i) % m\n            if trash[i] + trash[j] > 0:\n                bruh = abs(trash[i] - trash[j])\n                c += max(bruh, 1)\n        print(c)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    A = list(map(int, input().split()))\n    mod = [0] * m\n    for i in range(n):\n        mod[A[i] % m] += 1\n    ans = 0\n    if mod[0] != 0:\n        ans += 1\n    for i in range(1, m // 2 + 1):\n        _max = max(mod[i], mod[m - i])\n        _min = min(mod[i], mod[m - i])\n        if _max == 0 and _min == 0:\n            continue\n        elif _max - _min <= 1:\n            ans += 1\n        else:\n            ans += _max - (_min + 1) + 1\n    print(ans)", "from collections import Counter\n\ndef read_int():\n    return int(input())\n\ndef read_ints():\n    return map(int, input().split(' '))\nt = read_int()\nfor case_num in range(t):\n    (n, m) = read_ints()\n    cnt = Counter((i % m for i in read_ints()))\n    ans = 0\n    if cnt[0] > 0:\n        ans += 1\n    if m % 2 == 0 and cnt[m // 2] > 0:\n        ans += 1\n    for i in range(1, (m + 1) // 2):\n        if cnt[i] > 0 or cnt[m - i] > 0:\n            ans += 1\n            if abs(cnt[i] - cnt[m - i]) > 1:\n                ans += abs(cnt[i] - cnt[m - i]) - 1\n    print(ans)", "def mArrays(n, m, array):\n    d = {}\n    for x in array:\n        if x % m in d:\n            d[x % m] += 1\n        else:\n            d[x % m] = 1\n    v = set()\n    ans = 0\n    for x in d:\n        if x not in v:\n            if m - x in d and m - x not in v:\n                if abs(d[x] - d[m - x]) > 1:\n                    ans += abs(d[x] - d[m - x])\n                else:\n                    ans += 1\n            elif x == 0:\n                ans += 1\n            else:\n                ans += d[x]\n            v.add(x)\n            v.add(m - x)\n    return ans\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    print(mArrays(n, m, l))", "I = lambda : map(int, input().split())\nfor _ in [0] * int(input()):\n    (n, m) = I()\n    a = list(I())\n    d = {}\n    for i in a:\n        x = i % m\n        if x not in d:\n            d[x] = 1\n            if m - x not in d:\n                d[m - x] = 0\n        else:\n            d[x] = d[x] + 1\n    op = int(0 in d)\n    for i in range(1, m // 2 + 1, 1):\n        if i in d:\n            x = m - i\n            dif = abs(d[x] - d[i])\n            if dif > 1:\n                op = op + dif\n            else:\n                op = op + 1\n    print(op)", "def Solve():\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = [0] * m\n    for i in range(len(a)):\n        b[a[i] % m] += 1\n    if b[0] > 0:\n        x = 1\n        b[0] = 0\n    else:\n        x = 0\n    i = 1\n    j = m - 1\n    while i <= j:\n        if b[i] > 0 or b[j] > 0:\n            x += 1\n            mi = min(b[i], b[j])\n            ma = max(b[i], b[j])\n            if ma - mi > 1:\n                x += ma - (mi + 1)\n        i += 1\n        j -= 1\n    print(x)\nq = int(input())\nwhile q:\n    Solve()\n    q -= 1", "import math\nimport sys\ninput = sys.stdin.readline\nt = int(input())\nfor i1 in range(t):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l2 = [0] * m\n    for i in l:\n        p = i % m\n        l2[p] += 1\n    cnt = 0\n    if l2[0] > 0:\n        cnt += 1\n    m1 = math.floor(m / 2)\n    for i in range(1, m1 + 1):\n        if l2[i] > 0:\n            if l2[i] == l2[m - i] or abs(l2[i] - l2[m - i]) == 1:\n                cnt += 1\n            else:\n                p = abs(l2[i] - l2[m - i]) - 1\n                cnt += p + 1\n        elif l2[m - i] > 0:\n            cnt += l2[m - i]\n    print(cnt)", "import sys\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    db = [0] * m\n    for i in map(int, sys.stdin.readline().split()):\n        db[i % m] += 1\n    res = 0\n    if m == 1:\n        res = 1\n    elif m == 2:\n        res += bool(db[0]) + bool(db[1])\n    else:\n        for i in range(1, (m + 1) // 2):\n            if db[i] == db[m - i]:\n                if db[i]:\n                    res += 1\n            else:\n                res += abs(db[i] - db[m - i])\n        if m % 2:\n            res += bool(db[0])\n        else:\n            res += bool(db[0]) + bool(db[m // 2])\n    print(res)", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    L = [*map(int, input().split())]\n    if n == 1:\n        print(1)\n        continue\n    mul = False\n    ans = n\n    dic = {}\n    for el in L:\n        ths = el % m\n        if not ths:\n            if not mul:\n                mul = True\n                continue\n            ans -= 1\n            continue\n        if ths in dic:\n            dic[ths] += 1\n        else:\n            dic[ths] = 1\n    chk = {}\n    half = m // 2\n    if m % 2:\n        half += 1\n    if not m % 2:\n        if half in dic:\n            ans -= dic[half] - 1\n    A = sorted(dic.keys())\n    for el in A:\n        if el >= half:\n            break\n        if m - el in dic:\n            (a, b) = (dic[el], dic[m - el])\n            if a == b:\n                ans -= 2 * a - 1\n                continue\n            if a + b == 2:\n                ans -= 1\n                continue\n            if a > b:\n                (a, b) = (b, a)\n            ans -= 2 * a\n    print(ans)", "def main():\n    t = int(input())\n    for _ in range(t):\n        (n, m) = list(map(int, input().split()))\n        a = list(map(int, input().split()))\n        r = [0] * m\n        for i in range(n):\n            r[a[i] if a[i] < m else a[i] % m] += 1\n        arr = 0\n        if r[0] != 0:\n            arr += 1\n        p = m // 2 + 1\n        if m % 2 == 1:\n            for i in range(1, p):\n                if r[i] == 0 and r[m - i] == 0:\n                    pass\n                elif r[i] == r[m - i]:\n                    arr += 1\n                elif r[i] >= r[m - i]:\n                    arr += r[i] - r[m - i]\n                else:\n                    arr += r[m - i] - r[i]\n        else:\n            for i in range(1, p - 1):\n                if r[i] == 0 and r[m - i] == 0:\n                    pass\n                elif r[i] == r[m - i]:\n                    arr += 1\n                elif r[i] >= r[m - i]:\n                    arr += r[i] - r[m - i]\n                else:\n                    arr += r[m - i] - r[i]\n            if r[p - 1] != 0:\n                arr += 1\n        print(arr)\nmain()", "import math\n\ndef solve():\n    (n, m) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    rem = {}\n    for a in arr:\n        r = a % m\n        rem[r] = 1 if r not in rem else rem[r] + 1\n    ans = 0\n    for (a, cnt) in rem.items():\n        if a == 0:\n            ans += 1\n        elif a == m / 2:\n            ans += 1\n        elif a < m / 2 or m - a not in rem:\n            y = rem[m - a] if m - a in rem else 0\n            diff = abs(cnt - y)\n            if diff <= 1:\n                ans += 1\n            else:\n                ans += diff\n    return ans\ntc = int(input())\nfor _ in range(tc):\n    print(solve())", "import sys\nfrom collections import defaultdict, Counter as CC\nfrom math import sqrt, ceil, floor, log2\nINF = float('inf')\nMOD = 10 ** 9 + 7\nread = lambda : [int(s) for s in sys.stdin.readline().split()]\n\ndef solve():\n    (n, m) = read()\n    a = read()\n    cnt = [0] * m\n    for i in a:\n        cnt[i % m] += 1\n    res = 0\n    if cnt[0] > 0:\n        res += 1\n    if m % 2 == 0 and cnt[m // 2] > 0:\n        res += 1\n    for i in range(1, ceil(m / 2)):\n        tm = min(cnt[i], cnt[m - i])\n        if tm > 0:\n            res += 1\n            cnt[i] -= tm\n            cnt[m - i] -= tm\n            if cnt[i] > 0:\n                cnt[i] -= 1\n            elif cnt[m - i] > 0:\n                cnt[m - i] -= 1\n        res += cnt[i] + cnt[m - i]\n    print(res)\n_ = 1\n_ = int(input())\nwhile _:\n    solve()\n    _ -= 1", "t = int(input())\nfor k in range(0, t):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        mod = arr[i] % m\n        if mod in d:\n            d[mod] += 1\n        else:\n            d[mod] = 1\n    ans = 0\n    vis = {}\n    for i in d:\n        if i not in vis:\n            if i == 0:\n                ans += 1\n            elif m - i not in d:\n                ans += d[i]\n            else:\n                r = d[m - i]\n                c = d[i]\n                if r == c - 1 or r == c:\n                    ans += 1\n                else:\n                    ans += abs(c - r)\n                vis[m - i] = None\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = list(map(lambda x: int(x) % m, input().split()))\n    d = dict()\n    for i in arr:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    ans = 0\n    if 0 in d:\n        ans += 1\n    for i in range(1, int(m / 2) + 1):\n        if i == m - i and i in d:\n            ans += 1\n            continue\n        if i in d and m - i in d:\n            if d[i] == d[m - i]:\n                ans += 1\n                continue\n            ans += max(d[i], d[m - i]) - min(d[i], d[m - i])\n        elif i in d:\n            ans += d[i]\n        elif m - i in d:\n            ans += d[m - i]\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    mod = [0] * m\n    for i in a:\n        mod[i % m] += 1\n    ans = 0\n    if mod[0] != 0:\n        ans += 1\n    for i in range(1, m):\n        if m - i < i:\n            break\n        if i * 2 == m:\n            if mod[i] != 0:\n                ans += 1\n        elif mod[i] == 0 and mod[m - i] == 0:\n            continue\n        elif mod[i] == 0 or mod[m - i] == 0:\n            ans += mod[i] + mod[m - i]\n        else:\n            ans += 1\n            if mod[i] != mod[m - i]:\n                ans += abs(mod[m - i] - mod[i]) - 1\n    print(ans)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0 for i in range(k)]\n    for i in range(n):\n        d[l[i] % k] += 1\n    ans = 0\n    if d[0] > 0:\n        ans += 1\n    for i in range(1, k // 2 + 1):\n        if d[i] == 0 or d[k - i] == 0:\n            ans += d[i] + d[k - i]\n        elif abs(d[i] - d[k - i]) <= 1:\n            ans += 1\n        else:\n            ans += abs(d[i] - d[k - i])\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0 for i in range(k)]\n    for i in range(n):\n        d[l[i] % k] += 1\n    ans = 0\n    if d[0] > 0:\n        ans += 1\n    for i in range(1, k // 2 + 1):\n        if d[i] == 0 or d[k - i] == 0:\n            ans += d[i] + d[k - i]\n        elif abs(d[i] - d[k - i]) <= 1:\n            ans += 1\n        else:\n            ans += abs(d[i] - d[k - i])\n    print(ans)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = [0 for i in range(k)]\n    for i in range(n):\n        d[l[i] % k] += 1\n    ans = 0\n    if d[0] > 0:\n        ans += 1\n    for i in range(1, k // 2 + 1):\n        if d[i] == 0 or d[k - i] == 0:\n            ans += d[i] + d[k - i]\n        elif abs(d[i] - d[k - i]) <= 1:\n            ans += 1\n        else:\n            ans += abs(d[i] - d[k - i])\n    print(ans)", "for t in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    l = list(map(int, input().split(' ')))\n    d = [0 for i in range(k)]\n    for i in range(n):\n        d[l[i] % k] += 1\n    ans = 0\n    if d[0] > 0:\n        ans += 1\n    for i in range(1, k // 2 + 1):\n        if d[i] == 0 or d[k - i] == 0:\n            ans += d[i] + d[k - i]\n        elif abs(d[i] - d[k - i]) <= 1:\n            ans += 1\n        else:\n            ans += abs(d[i] - d[k - i])\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = [0] * m\n    for j in a:\n        b[j % m] += 1\n    ans = 0\n    if b[0] > 0:\n        ans += 1\n    for j in range(1, (m + 1) // 2):\n        if b[j] or b[m - j]:\n            ans += max(1, abs(b[m - j] - b[j]))\n    if m % 2 == 0 and b[m // 2]:\n        ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, m) = input().split()\n    n = int(n)\n    m = int(m)\n    count = 0\n    b = 0\n    d = [0] * m\n    a = list(map(int, input().split()))\n    for i in range(n):\n        d[a[i] % m] += 1\n    if d[0] > 0:\n        count += 1\n    for i in range(1, (m + 1) // 2):\n        if d[i] or d[m - i]:\n            count += max(1, abs(d[i] - d[m - i]))\n    if m % 2 == 0 and d[m // 2]:\n        count += 1\n    print(count)", "k = int(input())\nans = []\nfor i in range(k):\n    (n, m) = map(int, input().split())\n    mass = list(map(int, input().split()))\n    dp = [0] * m\n    sum = 0\n    for i in range(n):\n        dp[mass[i] % m] += 1\n    if m % 2 == 0:\n        for j in range(1, m // 2):\n            if dp[j] != 0 and dp[m - j] != 0:\n                ma = max(dp[j], dp[m - j])\n                mi = min(dp[j], dp[m - j])\n                if ma == mi:\n                    sum += 1\n                else:\n                    sum += ma - (mi + 1) + 1\n            else:\n                if dp[j] != 0:\n                    sum += dp[j]\n                if dp[m - j] != 0:\n                    sum += dp[m - j]\n        if dp[0] != 0:\n            sum += 1\n        if dp[m // 2] != 0:\n            sum += 1\n    else:\n        for j in range(1, m // 2 + 1):\n            if dp[j] != 0 and dp[m - j] != 0:\n                ma = max(dp[j], dp[m - j])\n                mi = min(dp[j], dp[m - j])\n                if ma == mi:\n                    sum += 1\n                else:\n                    sum += ma - (mi + 1) + 1\n            else:\n                if dp[j] != 0:\n                    sum += dp[j]\n                if dp[m - j] != 0:\n                    sum += dp[m - j]\n        if dp[0] != 0:\n            sum += 1\n    ans.append(sum)\nfor j in ans:\n    print(j)", "from collections import Counter\n\ndef solve():\n    (n, m) = map(int, input().split())\n    arr = map(int, input().split())\n    arr = [i % m for i in arr]\n    flag = [1] * m\n    c = Counter(arr)\n    ans = 0\n    for (key, val) in c.items():\n        if key == 0:\n            ans += 1\n        elif flag[key]:\n            ans += max(0, abs(val - c[m - key]) - 1) + 1\n            flag[m - key] = 0\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    solve()", "def process(A, m):\n    d = {}\n    for x in A:\n        x2 = x % m\n        if x2 not in d:\n            d[x2] = 0\n        d[x2] += 1\n    answer = 0\n    for x in d:\n        if x == 0 or 2 * x == m:\n            answer += 1\n        elif m - x in d:\n            if x < m - x:\n                v1 = d[x]\n                v2 = d[m - x]\n                (v1, v2) = (min(v1, v2), max(v1, v2))\n                if v1 == v2 or v1 + 1 == v2:\n                    answer += 1\n                else:\n                    answer += 1\n                    answer += v2 - v1 - 1\n        else:\n            answer += d[x]\n    return answer\nt = int(input())\nfor i in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    A = [int(x) for x in input().split()]\n    print(process(A, m))", "T = int(input())\nfrange = range\nfprint = print\nfint = int\nfinput = input\nfor i in frange(T):\n    ans = 0\n    (n, m) = map(fint, finput().split())\n    arr = list(map(fint, finput().split()))\n    b = [0] * m\n    for i in range(n):\n        arr[i] %= m\n        b[arr[i] % m] += 1\n    if b[0]:\n        ans += 1\n    for i in range(1, m):\n        if b[i] != 0:\n            l = b[m - i]\n            if abs(l - b[i]) <= 1:\n                ans += 1\n            else:\n                ans += abs(b[i] - l)\n            b[m - i] = 0\n    fprint(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().rstrip().split()))\n    arr = list(map(int, input().rstrip().split()))\n    d = [0] * m\n    for i in range(n):\n        d[arr[i] % m] += 1\n    count = 0\n    if d[0] != 0:\n        count += 1\n    i = 1\n    j = m - 1\n    while j >= i:\n        if d[i] == 0 and d[j]:\n            count += d[j]\n        elif d[j] == 0 and d[i]:\n            count += d[i]\n        elif d[j] == 0 and d[i] == 0:\n            i += 1\n            j -= 1\n            continue\n        elif i == j:\n            count += 1\n        elif abs(d[j] - d[i]) <= 1:\n            count += 1\n        else:\n            mn = min(d[i], d[j])\n            mx = max(d[i], d[j])\n            count += mx - (mn + 1) + 1\n        i += 1\n        j -= 1\n    print(count)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = [0] * m\n    for i in a:\n        b[i % m] += 1\n    if len(a) == 1 or m == 1:\n        print(1)\n    else:\n        ans = 0\n        if b[0] > 0:\n            ans = 1\n        for i in range(1, m // 2 + 1):\n            if abs(b[i] - b[m - i]) <= 1 and (b[i] > 0 or b[m - i] > 0):\n                ans += 1\n            else:\n                ans += 1 + (max(b[i], b[m - i]) - (min(b[i], b[m - i]) + 1))\n        print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = [0] * k\n    c = 0\n    for i in a:\n        b[i % k] += 1\n    for i in range(k // 2 + 1):\n        if i == 0:\n            if b[i]:\n                c += 1\n            else:\n                continue\n        else:\n            x = min(b[i], b[k - i % k])\n            y = max(b[i], b[k - i % k])\n            if x == y + 1 or y == x + 1:\n                c += 1\n            elif x == 0 and y == 0:\n                continue\n            elif x == 0 or y == 0:\n                c += max(x, y)\n            elif x == y:\n                c += 1\n            else:\n                c += y - x\n    print(c)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = {}\n    for x in map(int, input().split()):\n        x %= m\n        c[x] = c.get(x, 0) + 1\n    a = 0\n    for (k, v) in c.items():\n        if k == 0:\n            a += 1\n        elif k * 2 == m:\n            a += 1\n        elif m - k not in c:\n            a += v\n        elif k * 2 < m:\n            x = c.get(m - k, 0)\n            if abs(v - x) > 1:\n                a += abs(v - x) - 1 + 1\n            else:\n                a += 1\n    print(a)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = Counter(map(lambda x: int(x) % m, input().split()))\n    res = 0\n    for i in range(m // 2 + 1):\n        if i == 0 and arr[0] != 0:\n            res += 1\n        else:\n            (x, y) = sorted([arr[i], arr[m - i]])\n            if y == 0:\n                continue\n            if x == 0:\n                res += y\n                continue\n            res += 1\n            if x == y:\n                continue\n            else:\n                res += y - x - 1\n    print(res)", "T = int(input())\nfor t in range(T):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = [0] * m\n    for e in a:\n        d[e % m] += 1\n    count = d[0] > 0\n    for i in range(1, (m + 1) // 2):\n        if d[i] != 0 or d[m - i] != 0:\n            if d[i] == d[m - i]:\n                count += 1\n            else:\n                count += abs(d[i] - d[m - i])\n    if m % 2 == 0:\n        count += d[m // 2] > 0\n    print(int(count))", "def solve(arr, m):\n    rem = [0 for i in range(m)]\n    for x in arr:\n        temp = x % m\n        rem[temp] += 1\n    count = 0\n    if len(arr) == 1:\n        return 1\n    for i in range(m // 2 + 1):\n        if i == 0 and rem[0] != 0:\n            count += 1\n        elif i != 0:\n            x = rem[i]\n            y = rem[m - i]\n            (x, y) = (max(x, y), min(x, y))\n            if x == y and x != 0:\n                count += 1\n            elif x != y:\n                z = y + 1\n                count += 1\n                x = x - z\n                count += x\n    return count\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(solve(arr, m))", "import sys\ninput = sys.stdin.readline\nt = int(input())\nwhile t:\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    freq = {}\n    for i in range(m):\n        freq[i] = 0\n    for i in a:\n        freq[i % m] += 1\n    for i in range(m // 2 + 1):\n        if i == 0:\n            if freq[0] == 0:\n                ans += 0\n            else:\n                ans += 1\n            continue\n        if freq[i] == freq[m - i]:\n            if freq[i] != 0:\n                ans += 1\n        else:\n            ans += abs(freq[i] - freq[m - i])\n    print(ans)\n    t -= 1", "import math\n\ndef solve():\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = [0] * m\n    for i in a:\n        d[i % m] += 1\n    ans = 1 if d[0] > 0 else 0\n    for i in range(1, m // 2 + 1):\n        if min(d[i], d[m - i]) > 0:\n            ans += 1\n            mn = min(d[i], d[m - i])\n            d[m - i] = max(0, d[m - i] - 1 - mn)\n            d[i] = max(0, d[i] - 1 - min(d[i], mn))\n        ans += d[i] + d[m - i]\n    print(ans)\nt = 1\nt = int(input())\nfor _ in range(t):\n    solve()", "import sys\nfrom collections import Counter\ninput = sys.stdin.readline\n\ndef solve(arr, k):\n    ans = 1 if arr[0] > 0 else 0\n    (a, b) = (1, k - 1)\n    while a <= b:\n        if arr[a] == arr[b] and arr[a] > 0:\n            ans += 1\n        else:\n            ans += abs(arr[a] - arr[b])\n        a += 1\n        b -= 1\n    return ans\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = Counter([int(x) % k for x in input().split()])\n    print(solve(arr, k))", "import collections\nimport os\nimport sys\nif os.environ.get('NOT_JUDGE'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\n\ndef solve():\n    (n, m) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    hm = collections.defaultdict(int)\n    for x in arr:\n        hm[x % m] += 1\n    ans = 0\n    for (k, v) in hm.items():\n        if k == 0:\n            ans += 1\n        elif 2 * k == m:\n            ans += 1\n        elif 2 * k < m or m - k not in hm:\n            (x, y) = (v, hm.get(m - k, 0))\n            ans += 1 + max(0, abs(x - y) - 1)\n    print(ans)\n\ndef main():\n    n = int(input())\n    for _ in range(n):\n        solve()\nmain()", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in a:\n        if i % m in d:\n            d[i % m] += 1\n        else:\n            d[i % m] = 1\n    cnt = 0\n    for i in d:\n        if d[i] == 0:\n            continue\n        if i == 0:\n            cnt += 1\n            d[i] = 0\n        if m - i in d and d[m - i] != 0:\n            if m % 2 == 0 and i == m // 2:\n                cnt += 1\n                d[i] = 0\n            elif abs(d[i] - d[m - i]) <= 1:\n                cnt += 1\n                d[i] = 0\n                d[m - i] = 0\n            else:\n                x = min(d[i], d[m - i])\n                if d[i] == x:\n                    d[i] = 0\n                    d[m - i] -= x + 1\n                    cnt += 1\n                else:\n                    d[m - i] = 0\n                    d[i] -= x + 1\n                    cnt += 1\n    for i in d:\n        cnt += d[i]\n    print(cnt)", "import sys\ninput = sys.stdin.readline\n\nclass Problem:\n\n    def __init__(self):\n        pass\n\n    def solve(self):\n        t = int(input())\n        for _ in range(t):\n            (n, m) = map(int, input().split())\n            A = list(map(int, input().split()))\n            ans = 0\n            rem = {}\n            for a in A:\n                r = a % m\n                mr = m - r\n                if r not in rem and mr not in rem:\n                    ans += 1\n                    rem[r] = 0\n                if r in rem:\n                    rem[r] += 1\n                if mr in rem:\n                    rem[mr] -= 1\n            for (k, v) in rem.items():\n                if k == 0:\n                    continue\n                extra = abs(v)\n                if extra > 1:\n                    ans += extra - 1\n            print(ans)\n\ndef main():\n    p = Problem()\n    p.solve()\nmain()", "def solve():\n    freq = [0] * m\n    for i in range(n):\n        freq[arr[i] % m] += 1\n    ans = 1 if freq[0] else 0\n    i = 1\n    j = m - 1\n    while i <= j:\n        mi = min(freq[i], freq[j])\n        ma = max(freq[i], freq[j])\n        if mi or ma:\n            if ma != mi:\n                ans += ma - mi\n            else:\n                ans += 1\n        i += 1\n        j -= 1\n    return ans\nq = int(input())\nwhile q:\n    (n, m) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    print(solve())\n    q -= 1", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        mod = arr[i] % m\n        if mod in d:\n            d[mod] += 1\n        else:\n            d[mod] = 1\n    ans = 0\n    vis = {}\n    for i in d:\n        if i not in vis:\n            if i == 0:\n                ans += 1\n            elif m - i not in d:\n                ans += d[i]\n            else:\n                r = d[m - i]\n                c = d[i]\n                if r == c - 1 or r == c:\n                    ans += 1\n                else:\n                    ans += abs(c - r)\n                vis[m - i] = None\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    c = 0\n    freq = [0 for i in range(m)]\n    for i in arr:\n        freq[i % m] += 1\n    if freq[0] > 0:\n        c = 1\n    for i in range(1, m):\n        if freq[i] != 0:\n            if freq[m - i] != 0:\n                diff = abs(freq[i] - freq[m - i])\n                if diff <= 1:\n                    c += 1\n                else:\n                    c += diff\n                freq[m - i] = 0\n            else:\n                c += freq[i]\n            freq[i] = 0\n    print(c)", "from collections import Counter\nt = int(input())\nfor q in range(0, t):\n    (n, m) = map(int, input().split())\n    a = [int(x) % m for x in input().split()]\n    cnt = Counter(a)\n    ans = 0\n    for i in set(a):\n        if cnt[i] == -1000000000.0:\n            continue\n        r = (m - i) % m\n        ans += max(abs(cnt[r] - cnt[i]), 1)\n        cnt[r] = -1000000000.0\n    print(ans)", "for t in range(int(input())):\n    (n, k) = list(map(int, input().split(' ')))\n    a = list(map(int, input().split(' ')))\n    d = [0] * k\n    for i in range(0, len(a)):\n        d[a[i] % k] += 1\n    op = 0\n    if d[0] > 0:\n        op += 1\n    for i in range(1, k // 2 + 1):\n        if d[i] == 0 or d[k - i] == 0:\n            op += d[i] + d[k - i]\n        elif abs(d[i] - d[k - i]) <= 1:\n            op += 1\n        else:\n            op += abs(d[i] - d[k - i])\n    print(op)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    d = [0 for i in range(k)]\n    for i in range(n):\n        d[l[i] % k] += 1\n    ans = 0\n    if d[0] > 0:\n        ans += 1\n    for i in range(1, k // 2 + 1):\n        if d[i] == 0 or d[k - i] == 0:\n            ans += d[i] + d[k - i]\n        elif abs(d[i] - d[k - i]) <= 1:\n            ans += 1\n        else:\n            ans += abs(d[i] - d[k - i])\n    print(ans)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n == 1:\n        a = list(map(lambda x: int(x) % m, input().split()))\n        print(1)\n    else:\n        a = list(map(lambda x: int(x) % m, input().split()))\n        arr = [0 for i in range(m)]\n        for items in a:\n            arr[items] += 1\n        if arr[0] > 0:\n            ans = 1\n        else:\n            ans = 0\n        arr = arr[1:]\n        for i in range(m // 2):\n            if arr[i] + arr[m - 2 - i] > 0:\n                if abs(arr[i] - arr[m - 2 - i]) > 1:\n                    ans += abs(arr[i] - arr[m - 2 - i])\n                else:\n                    ans += 1\n        print(ans)", "from collections import defaultdict\nfor t in range(int(input())):\n    (n, m) = map(int, input().split())\n    aaa = list(map(int, input().split()))\n    dic = defaultdict(int)\n    for i in aaa:\n        dic[i % m] += 1\n    ans = 0\n    for i in range(0, m):\n        if i == 0 and dic[i] > 0:\n            ans += 1\n        elif m - i not in dic:\n            ans += dic[i]\n        elif m - i == i:\n            ans += 1\n        elif m - i > i:\n            a = dic[i]\n            b = dic[m - i]\n            if abs(b - a) <= 1:\n                ans += 1\n            elif a > b:\n                a -= b + 1\n                ans += 1\n                ans += a\n            else:\n                b -= a + 1\n                ans += 1\n                ans += b\n    print(ans)", "for pratyush in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    (f, c) = ([], 0)\n    for i in range(m):\n        f.append(0)\n    for i in range(n):\n        f[a[i] % m] += 1\n    for i in range(m // 2 + 1):\n        if f[i] > 0:\n            if i == 0 or (m % 2 == 0 and i == m / 2):\n                c += 1\n            else:\n                x = max(f[i], f[m - i]) - min(f[i], f[m - i])\n                if x <= 1:\n                    c += 1\n                else:\n                    c += 1 + (x - 1)\n        elif i != 0 and f[i] == 0 and (f[m - i] > 0):\n            c += f[m - i]\n    print(c)", "for tc in range(int(input())):\n    (N, M) = map(int, input().split())\n    A = list(map(int, input().split()))\n    modCount = [0] * M\n    for i in A:\n        modCount[i % M] += 1\n    ans = 1 if modCount[0] else 0\n    for i in range(1, M):\n        while modCount[i]:\n            j = (M - i) % M\n            if i == j:\n                ans += 1\n                modCount[i] = 0\n            elif modCount[j] == 0:\n                ans += modCount[i]\n                modCount[i] = 0\n            elif modCount[j] == modCount[i]:\n                modCount[i] = modCount[j] = 0\n                ans += 1\n            elif modCount[j] > modCount[i]:\n                modCount[j] -= modCount[i] + 1\n                modCount[i] = 0\n                ans += 1\n            elif modCount[j] < modCount[i]:\n                modCount[i] -= modCount[j] + 1\n                modCount[j] = 0\n                ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    rem = [0] * m\n    for i in range(n):\n        rem[a[i] % m] += 1\n    p = (rem[0] > 0) * 1\n    tot = rem[0]\n    for i in range(1, (m + 1) // 2):\n        f = min(rem[i], rem[m - i])\n        p += (f > 0) * 1\n        tot += 2 * f + (rem[i] != rem[m - i]) * (f > 0)\n    if m & 1 == 0:\n        f = rem[m // 2] > 0\n        p += f\n        tot += rem[m // 2]\n    print(p + n - tot)", "from collections import Counter\nnn = int(input())\nfor _ in range(nn):\n    (n, m) = [int(s) for s in input().split()]\n    l = [int(s) for s in input().split()]\n    c = Counter([e % m for e in l])\n    res = 0\n    if c[0] > 0:\n        res += 1\n    if m % 2 == 0 and c[m // 2] > 0:\n        res += 1\n    for k in range(1, (m + 1) // 2):\n        if c[k] > 0 and c[m - k] > 0 and (c[k] == c[m - k]):\n            res += 1\n        else:\n            res += abs(c[k] - c[m - k])\n    print(res)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    if len(lis) == 1:\n        print(1)\n    else:\n        dic = {}\n        for i in range(m):\n            dic[i] = 0\n        for i in range(n):\n            dic[lis[i] % m] += 1\n        if dic[0] > 0:\n            ans = 1\n        else:\n            ans = 0\n        for i in range(1, m // 2 + 1):\n            if dic[i] == dic[m - i]:\n                if dic[i] > 0:\n                    ans += 1\n            elif dic[i] > dic[m - i]:\n                if dic[m - i] == 0:\n                    ans += dic[i]\n                else:\n                    ans += 1\n                    a = dic[i] - (dic[m - i] + 1)\n                    ans += a\n            elif dic[i] == 0:\n                ans += dic[m - i]\n            else:\n                ans += 1\n                a = dic[m - i] - (dic[i] + 1)\n                ans += a\n        print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    t = [0] * m\n    for i in range(n):\n        t[arr[i] % m] += 1\n    count = 0\n    i = 1\n    j = len(t) - 1\n    while i <= j:\n        if t[i] == 0 and t[j] == 0:\n            i += 1\n            j -= 1\n            continue\n        elif t[i] == 0 or t[j] == 0:\n            count += t[i] + t[j]\n            i += 1\n            j -= 1\n            continue\n        f = min(t[i], t[j])\n        t[i] -= f\n        t[j] -= f\n        if t[i] >= 1 or t[j] >= 1:\n            count += max(t[i], t[j])\n        else:\n            count += 1\n        i += 1\n        j -= 1\n    if t[0] > 0:\n        count += 1\n    print(count)", "test_num = int(input())\n\ndef solve():\n    (n, m) = map(int, input().split())\n    array = list(map(int, input().split()))\n    mod = [0] * m\n    for a in array:\n        mod[a % m] += 1\n    ans = mod[0] > 0 and 1 or 0\n    for i in range(1, m // 2 + 1):\n        num1 = max(mod[i], mod[m - i])\n        num2 = min(mod[i], mod[m - i])\n        if num1 == 0:\n            continue\n        ans += 1 + max(0, num1 - num2 - 1)\n    print(ans)\nfor i in range(test_num):\n    solve()", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    dico = {}\n    for x in a:\n        if x % m in dico:\n            dico[x % m] += 1\n        else:\n            dico.update({x % m: 1})\n    r = n\n    for x in dico.keys():\n        if 0 < 2 * x < m:\n            y = m - x\n            dicox = dico[x]\n            dicoy = 0\n            if y in dico:\n                dicoy = dico[y]\n            score = 2 * min(dicox, dicoy)\n            if dicox == dicoy:\n                score -= 1\n            r -= score\n    if m % 2 == 0 and m // 2 in dico:\n        dici = dico[m // 2]\n        r -= dici\n        r += 1\n    if 0 in dico:\n        dici = dico[0]\n        r -= dici\n        r += 1\n    print(r)", "import collections\nT = int(input())\nfor _ in range(T):\n    buf = input()\n    temp = buf.split(' ')\n    (n, m) = (int(temp[0]), int(temp[1]))\n    F = [0] * m\n    buf = input()\n    A = [int(x) for x in buf.split(' ')]\n    for x in A:\n        F[x % m] += 1\n    ret = n\n    if F[0] > 0:\n        ret -= F[0] - 1\n    for i in range(1, m):\n        if i > m - i:\n            break\n        if F[i] == 0 or F[m - i] == 0:\n            continue\n        if i == m - i:\n            ret -= F[i] - 1\n            F[i] = 0\n            break\n        if F[i] == F[m - i]:\n            ret -= F[i] + F[m - i] - 1\n            (F[i], F[m - i]) = (0, 0)\n        elif F[i] > F[m - i]:\n            ret -= F[m - i] + F[m - i]\n            (F[i], F[m - i]) = (0, 0)\n        elif F[i] < F[m - i]:\n            ret -= F[i] + F[i]\n            (F[i], F[m - i]) = (0, 0)\n    print(ret)", "def d(a, n):\n    l = [0] * n\n    for i in range(len(a)):\n        r = a[i] % n\n        l[r] += 1\n    if l[0] == 0:\n        c = 0\n    else:\n        c = 1\n    for i in range(1, n // 2 + 1):\n        if i == n - i:\n            if l[i] != 0:\n                c += 1\n            l[i] == 0\n        elif l[i] > l[n - i]:\n            l[i] -= l[n - i] + 1\n            l[n - i] = 0\n            c += 1\n            c += l[i]\n            l[i] = 0\n        elif l[i] == l[n - i]:\n            if l[i] != 0:\n                c += 1\n            l[i] == 0\n            l[n - i] = 0\n        else:\n            l[n - i] -= l[i] + 1\n            l[i] = 0\n            c += 1\n            c += l[n - i]\n            l[n - i] = 0\n    return c\nt = int(input())\nl = []\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = d(a, m)\n    l.append(s)\nfor y in l:\n    print(y)", "def find_arrays(m, arr):\n    ans_dict = {}\n    for i in range(m):\n        ans_dict[i] = 0\n    for num in arr:\n        rem = num % m\n        ans_dict[rem] += 1\n    ans = 0\n    for i in range(1, m // 2 + 1):\n        x = ans_dict[i]\n        y = ans_dict[m - i]\n        if x == y:\n            if x:\n                ans += 1\n        else:\n            ans += abs(x - y)\n    if ans_dict[0] > 0:\n        ans += 1\n    return ans\ntest_cases = int(input())\nans = []\nfor _ in range(test_cases):\n    (n, m) = map(int, input().split())\n    arr = map(int, input().split())\n    ans.append(find_arrays(m, arr))\nfor i in ans:\n    print(i)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    rem = [0 for i in range(m)]\n    count = 0\n    for i in range(n):\n        rem[l[i] % m] += 1\n    count = 0\n    count1 = n\n    if rem[0]:\n        count += 1\n        count1 -= rem[0]\n    for i in range(1, m // 2 + 1):\n        if (m % 2 == 0 and i == m // 2) and rem[m // 2]:\n            count += 1\n            count1 -= rem[m // 2]\n        elif rem[i] == 0 or rem[m - i] == 0:\n            continue\n        elif rem[i] == rem[m - i]:\n            count += 1\n            count1 -= rem[i]\n            count1 -= rem[m - i]\n        else:\n            count += 1\n            count1 -= 2 * min(rem[i], rem[m - i]) + 1\n    print(count + count1)", "from collections import Counter\n\ndef read_int():\n    return int(input())\n\ndef read_ints():\n    return map(int, input().split(' '))\nt = read_int()\nfor case_num in range(t):\n    (n, m) = read_ints()\n    cnt = Counter((i % m for i in read_ints()))\n    ans = 0\n    if cnt[0] > 0:\n        ans += 1\n    if m % 2 == 0 and cnt[m // 2] > 0:\n        ans += 1\n    for i in range(1, (m + 1) // 2):\n        if cnt[i] > 0 or cnt[m - i] > 0:\n            ans += 1\n            if abs(cnt[i] - cnt[m - i]) > 1:\n                ans += abs(cnt[i] - cnt[m - i]) - 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = [0] * m\n    ans = 0\n    for ele in a:\n        d[ele % m] += 1\n    if d[0] > 0:\n        ans += 1\n    for i in range(1, (m + 1) // 2):\n        if d[i] or d[m - i]:\n            ans += max(1, abs(d[m - i] - d[i]))\n    if m % 2 == 0:\n        if d[m // 2]:\n            ans += 1\n    print(ans)", "import math\nt = int(input())\nfor test in range(0, t):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    mod = [0] * m\n    for i in range(0, n):\n        mod[a[i] % m] += 1\n    ans = 0\n    if mod[0] != 0:\n        ans += 1\n    ind = int(m / 2)\n    if m & 1:\n        ind += 1\n    for i in range(1, ind):\n        d = min(mod[i], mod[m - i])\n        if d == 0:\n            ans += max(mod[i], mod[m - i])\n        elif abs(mod[i] - mod[m - i]) > 1:\n            ans += max(mod[i], mod[m - i]) - d\n        elif abs(mod[i] - mod[m - i]) <= 1:\n            ans += 1\n    if not m & 1 and mod[ind] != 0:\n        ans += 1\n    print(ans)", "def MArrays(a, m):\n    s = dict()\n    n = 0\n    for i in range(len(a)):\n        if a[i] % m in s.keys():\n            s[a[i] % m] += 1\n        else:\n            s[a[i] % m] = 1\n    if 0 in s.keys():\n        n += 1\n        s.pop(0)\n    if len(s) != 0:\n        for i in range(1, m // 2 + 1):\n            if i == m / 2 and i in s.keys():\n                n += 1\n                s.pop(i)\n            elif i in s.keys() and m - i in s.keys():\n                if abs(s[m - i] - s[i]) <= 1:\n                    n += 1\n                    s.pop(i)\n                    s.pop(m - i)\n                else:\n                    n += abs(s[m - i] - s[i])\n                    s.pop(i)\n                    s.pop(m - i)\n    if len(s) != 0:\n        n = sum(list(s.values()), n)\n    return n\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(MArrays(a, m))", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = [0] * m\n    ans = 0\n    for ele in a:\n        d[ele % m] += 1\n    if d[0] > 0:\n        ans += 1\n    for i in range(1, (m + 1) // 2):\n        if d[i] or d[m - i]:\n            ans += max(1, abs(d[m - i] - d[i]))\n    if m % 2 == 0:\n        if d[m // 2]:\n            ans += 1\n    print(ans)", "for t in range(int(input())):\n    (N, M) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    mp = [0 for i in range(M)]\n    ans = 0\n    for i in arr:\n        mp[i % M] += 1\n    if mp[0] > 0:\n        ans += 1\n    for j in range(1, M // 2 + 1):\n        if mp[j] == 0 or mp[M - j] == 0:\n            ans += max(mp[j], mp[M - j])\n        elif mp[j] == mp[M - j]:\n            ans += 1\n        elif mp[j] > mp[M - j]:\n            if mp[j] - mp[M - j] <= 1:\n                ans += 1\n            else:\n                mp[j] -= mp[M - j] + 1\n                ans += mp[j] + 1\n        elif mp[M - j] - mp[j] <= 1:\n            ans += 1\n        else:\n            mp[M - j] -= mp[j] + 1\n            ans += mp[M - j] + 1\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    arr = [0] * m\n    for i in lst:\n        arr[i % m] += 1\n    count = int(arr[0] != 0)\n    for i in range(1, m // 2 + 1):\n        if arr[i] != 0 or arr[m - i] != 0:\n            (low, high) = (min(arr[i], arr[m - i]), max(arr[i], arr[m - i]))\n            if low == high - 1 or low == high:\n                count += 1\n            else:\n                count += high - low\n    print(count)", "for u in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = [int(w) for w in input().split()]\n    cnt = [0] * k\n    for i in x:\n        cnt[i % k] += 1\n    ans = 0\n    for i in range(k // 2 + 1):\n        opp = (k - i) % k\n        if i == opp:\n            if cnt[i] > 0:\n                ans += 1\n        elif cnt[i] == 0 or cnt[opp] == 0:\n            ans += cnt[i] + cnt[opp]\n        else:\n            a = max(cnt[i], cnt[opp])\n            b = min(cnt[i], cnt[opp])\n            if a - b <= 1:\n                ans += 1\n            else:\n                ans += a - b\n    print(ans)", "from collections import Counter\nt = int(input())\nfor q in range(0, t):\n    (n, m) = map(int, input().split())\n    a = [int(x) % m for x in input().split()]\n    cnt = Counter(a)\n    ans = 0\n    for i in set(a):\n        if cnt[i] == -1000000000.0:\n            continue\n        r = (m - i) % m\n        ans += max(abs(cnt[r] - cnt[i]), 1)\n        cnt[r] = -1000000000.0\n    print(ans)", "x = int(input())\nfor i in range(x):\n    (n, k) = [int(a) for a in input().split()]\n    ar = list(map(int, input().split()))\n    b = [0] * k\n    for j in range(n):\n        b[ar[j] % k] = b[ar[j] % k] + 1\n    d = 1\n    e = k - 1\n    s = 0\n    while d <= e:\n        if b[d] == b[e] and b[d] != 0:\n            s = s + 1\n        else:\n            s = s + abs(b[d] - b[e])\n        d = d + 1\n        e = e - 1\n    if b[0] > 0:\n        s = s + 1\n    print(s)", "import math as m\ni = int(input())\ninp = []\nfor a in range(0, i):\n    inp += [[[int(x) for x in input().split()], [int(x) for x in input().split()]]]\nfor i in inp:\n    [n, m] = i[0]\n    arr = [x % m for x in i[1]]\n    d = {}\n    even = m % 2 == 0\n    l = m // 2\n    for x in arr:\n        if x > l:\n            x_c = m - x\n            if x_c in d:\n                d[x_c][1] = d[x_c][1] + 1\n            else:\n                d[x_c] = [0, 1]\n        elif x in d:\n            d[x][0] = d[x][0] + 1\n        else:\n            d[x] = [1, 0]\n    c = 0\n    for k in d:\n        if k == 0:\n            c += 1\n        elif k == l and even:\n            c += 1\n        else:\n            c += max(1, abs(d[k][0] - d[k][1]))\n    print(c)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    a = (m + 2) // 2\n    f = []\n    for i in range(m):\n        f.append(0)\n    for i in range(n):\n        b = l[i] % m\n        f[b] += 1\n    if f[0] > 0:\n        ans = 1\n    else:\n        ans = 0\n    for i in range(m // 2):\n        a = f[i + 1]\n        b = f[m - i - 1]\n        d = abs(a - b)\n        if d > 1:\n            ans += d\n        elif a != 0 or b != 0:\n            ans += 1\n    print(ans)", "for tt in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    lm = [0 for i in range(m)]\n    for i in l:\n        lm[i % m] += 1\n    cnt = 0\n    if lm[0] >= 1:\n        cnt += 1\n    if m % 2 == 0 and lm[m // 2] >= 1:\n        cnt += 1\n    for i in range(1, m // 2 + m % 2):\n        ma = max(lm[m - i], lm[i])\n        mi = min(lm[m - i], lm[i])\n        jo = 0\n        if ma > 0:\n            jo = 1\n        cnt += max(ma - mi, jo)\n    print(cnt)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if m == 1:\n        print(1)\n        continue\n    d = [0] * m\n    for x in a:\n        d[x % m] = d[x % m] + 1\n    ans = 0\n    if d[0] > 0:\n        ans = ans + 1\n    for i in range(1, m // 2 + 1):\n        if (d[i] != 0) & (d[m - i] != 0) & (abs(d[i] - d[m - i]) <= 1):\n            ans = ans + 1\n        else:\n            ans = ans + abs(d[i] - d[m - i])\n    print(ans)", "tim = int(input())\nwhile tim > 0:\n    tim -= 1\n    (n, m) = map(int, input().split())\n    ar = list(map(int, input().split()))\n    cnt = [0 for i in range(m)]\n    for i in range(n):\n        ar[i] = ar[i] % m\n        cnt[ar[i]] += 1\n    ans = 0\n    if cnt[0] != 0:\n        ans += 1\n    if m % 2 == 0:\n        if cnt[m // 2] != 0:\n            ans += 1\n    for i in range(1, (m + 1) // 2):\n        a = cnt[i]\n        b = cnt[m - i]\n        if a > b:\n            (a, b) = (b, a)\n        if b == 0:\n            continue\n        ans += 1 + max(0, b - a - 1)\n    print(ans)", "def func(arr, n, m):\n    arr = [i % m for i in arr]\n    am = {i: 0 for i in range(m)}\n    for i in arr:\n        am[i] += 1\n    c = 0\n    if am[0] > 0:\n        c += 1\n    if m % 2 == 0 and am[m // 2] > 0:\n        c += 1\n    ub = m // 2 if m % 2 == 0 else m // 2 + 1\n    for i in range(1, ub):\n        (mi, ma) = (min(am[i], am[m - i]), max(am[i], am[m - i]))\n        if mi == 0:\n            c += ma\n        elif ma - mi > 1:\n            c += ma - mi\n        else:\n            c += 1\n    print(c)\nt = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    func(arr, n, m)"]