["def solve() -> bool:\n    n = int(input())\n    array = list(map(int, input().split()))\n    s = 0\n    for e in array:\n        s ^= e\n    if s == 0:\n        return True\n    current = 0\n    counter = 0\n    for e in array:\n        current ^= e\n        if current == s:\n            counter += 1\n            current = 0\n    if counter > 2:\n        return True\n    return False\nfor _ in range(int(input())):\n    print('YES' if solve() else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in a:\n        ans = ans ^ i\n    if ans == 0:\n        print('YES')\n    else:\n        x = 0\n        ans1 = 0\n        for i in a:\n            x = x ^ i\n            if x == ans:\n                ans1 += 1\n                x = 0\n        if ans1 % 2 == 1 and ans1 > 2:\n            print('YES')\n        else:\n            print('NO')", "for s in [*open(0)][2::2]:\n    a = [0]\n    for x in s.split():\n        a += (a[-1] ^ int(x),)\n    print('NYOE S'[0 in a[a.index(a[-1]):]::2])", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    V = 0\n    for i in range(n):\n        V ^= arr[i]\n    if V > 0:\n        curr = cnt = 0\n        for i in range(n):\n            curr ^= arr[i]\n            if curr == V:\n                cnt += 1\n                curr = 0\n        return 'YES' if cnt % 2 and cnt > 2 else 'NO'\n    else:\n        return 'YES'\nfor _ in range(int(input())):\n    print(solve())", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    x = c = y = 0\n    for n in a:\n        x ^= n\n    for n in a:\n        y ^= n\n        if y == x:\n            c += 1\n            y = 0\n    print('NYOE S'[x < 1 or c > 1::2])", "def solve():\n    n = int(input())\n    v = [int(e) for e in input().split()]\n    (x, y, c) = (0, 0, 0)\n    for i in range(0, n):\n        x ^= v[i]\n    for i in range(n - 1, -1, -1):\n        y ^= v[i]\n        if y == x:\n            c += 1\n            y = 0\n    if not x or c > 1:\n        return 'YES'\n    return 'NO'\n\ndef init():\n    T = 1\n    T = int(input())\n    while T:\n        print(solve())\n        T -= 1\ninit()", "def solve(arr):\n    ans = 0\n    for a in arr:\n        ans ^= a\n    if ans == 0:\n        print('YES')\n        return\n    s = 0\n    cnt = 0\n    for a in arr:\n        s ^= a\n        if s == ans:\n            s = 0\n            cnt += 1\n    if s == 0 and cnt > 1:\n        print('YES')\n        return\n    print('NO')\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    solve(arr)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (xor, acc_a, pos0) = (0, [], [])\n    for i in range(n):\n        xor ^= a[i]\n        acc_a.append(xor)\n        if xor == 0:\n            pos0.append(i)\n    if xor == 0:\n        print('YES')\n    else:\n        T = len(pos0) > 0 and xor in acc_a[:pos0[-1]]\n        print('YES' if T else 'NO')", "import math\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = a[0]\n    for i in range(1, n):\n        ans = ans ^ a[i]\n    if ans == 0:\n        print('YES')\n    else:\n        ok = 0\n        count = 0\n        for i in range(n):\n            ok = ok ^ a[i]\n            if ok == ans:\n                count += 1\n                ok = 0\n        if count >= 2:\n            print('YES')\n        else:\n            print('NO')", "def xor(a):\n    ans = 0\n    for i in a:\n        ans ^= i\n    return ans\n\ndef main(a, n):\n    b = xor(a)\n    if b == 0:\n        print('YES')\n        return ''\n    else:\n        main = 0\n        ct = 0\n        for i in a:\n            main ^= i\n            if main == b:\n                ct += 1\n                main = 0\n            if ct > 1:\n                print('YES')\n                return ''\n    print('NO')\n    return ''\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    main(a, n)", "def win(lst):\n    count = 0\n    x = 0\n    for i in range(n):\n        x = x ^ lst[i]\n    if x == 0:\n        print('YES')\n        return\n    else:\n        k = 0\n        for i in range(n):\n            k ^= lst[i]\n            if k == x:\n                k = 0\n                count += 1\n    if count >= 2:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nwhile t:\n    n = int(input())\n    lst = list(map(int, input().split()))\n    win(lst)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    if l.count(l[0]) == n:\n        print('YES')\n        continue\n    for i in l:\n        ans = ans ^ i\n    if ans == 0:\n        print('YES')\n    else:\n        c = 0\n        k = 0\n        for i in l:\n            k = k ^ i\n            if k == ans:\n                c += 1\n                k = 0\n        if c >= 2:\n            print('YES')\n        else:\n            print('NO')", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    data = list(map(int, sys.stdin.readline().split()))\n    temp = 0\n    for i in range(len(data)):\n        temp ^= data[i]\n    if temp == 0:\n        print('YES')\n        continue\n    cnt = 0\n    cnt_temp = 0\n    for i in range(len(data)):\n        cnt_temp ^= data[i]\n        if cnt_temp == temp:\n            cnt += 1\n            cnt_temp = 0\n    print('YES' if cnt >= 3 else 'NO')", "for s in [*open(0)][2::2]:\n    a = [0]\n    for x in s.split():\n        a += (a[-1] ^ int(x),)\n    print('NYOE S'[0 in a[a.index(a[-1]):]::2])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    xor = 0\n    for i in a:\n        xor ^= i\n    if xor == 0:\n        print('YES')\n    else:\n        count = 0\n        curxor = 0\n        for i in a:\n            curxor ^= i\n            if curxor == xor:\n                count += 1\n                curxor = 0\n        if curxor == 0 and count >= 2:\n            print('YES')\n        else:\n            print('NO')", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = 0\n    x = 0\n    for i in arr:\n        x ^= i\n    if x == 0:\n        print('YES')\n        return\n    nx = 0\n    for i in arr:\n        nx ^= i\n        if nx == x:\n            count += 1\n            nx = 0\n    if count >= 3:\n        print('YES')\n    else:\n        print('NO')\n\ndef main():\n    t = int(input())\n    while t:\n        solve()\n        t -= 1\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    ok = False\n    pre = 0\n    for i in range(n):\n        pre = pre ^ A[i]\n    if pre == 0:\n        print('YES')\n    else:\n        t = 0\n        c = 0\n        for i in range(n):\n            t = t ^ A[i]\n            if t == pre:\n                t = 0\n                c += 1\n        if c > 2:\n            print('YES')\n        else:\n            print('NO')", "import math\nt = int(input())\nfor test in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    check = arr[0]\n    for x in arr[1:]:\n        check = check ^ x\n    if check == 0:\n        print('YES')\n    else:\n        done = False\n        left = 0\n        mid = 0\n        right = 0\n        for i in range(n):\n            left = left ^ arr[i]\n            if check ^ left != 0:\n                continue\n            mid = 0\n            right = 0\n            for j in range(i + 1, n - 1):\n                mid = mid ^ arr[j]\n                right = check ^ mid ^ left\n                if left == mid and mid == right:\n                    print('YES')\n                    done = True\n                    break\n            if done:\n                break\n        if not done:\n            print('NO')", "import sys\ntimes = int(input())\nfor i in range(times):\n    n = int(input())\n    values = list(map(int, input().split()))\n    targ = 0\n    for i in values:\n        targ ^= i\n    if targ == 0:\n        print('YES')\n        continue\n    xor_val = 0\n    count = 0\n    for i in range(0, n):\n        xor_val ^= values[i]\n        if xor_val == targ:\n            count += 1\n            xor_val = 0\n    if xor_val == 0 and count > 1:\n        print('YES')\n        continue\n    else:\n        print('NO')", "def helper(a):\n    xsum = 0\n    for i in range(len(a)):\n        xsum ^= a[i]\n    if xsum == 0:\n        return 'YES'\n    t3 = xsum\n    l = -1\n    tl = 0\n    r = len(a)\n    tr = 0\n    while l < len(a) - 1:\n        l += 1\n        tl ^= a[l]\n        if tl == t3:\n            break\n    while r > 0:\n        r -= 1\n        tr ^= a[r]\n        if tr == t3:\n            break\n    if l < r:\n        return 'YES'\n    else:\n        return 'NO'\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    res = helper(a)\n    print(res)", "def solve(arr, n):\n    if n == 2:\n        if arr[0] == arr[-1]:\n            return 'YES'\n        else:\n            return 'NO'\n    x = 0\n    for it in arr:\n        x ^= it\n    if x == 0:\n        pref = 0\n        for it in arr[:-1]:\n            pref ^= it\n            if pref == x ^ pref:\n                return 'YES'\n        return 'NO'\n    count = 0\n    cur = 0\n    for it in arr:\n        cur ^= it\n        if cur == x:\n            count += 1\n            cur = 0\n    if count > 1 and cur == 0:\n        return 'YES'\n    else:\n        return 'NO'\nfor case in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = solve(arr, n)\n    print(ans)", "import sys\n\ndef solve(n, a):\n    b = a[:]\n    for i in range(1, n):\n        b[i] ^= b[i - 1]\n\n    def X(i, j):\n        if i == 0:\n            return b[j]\n        return b[j] ^ b[i - 1]\n    seen = set()\n    for i in range(n - 1):\n        cur = b[i]\n        x = X(i + 1, n - 1)\n        if cur == x:\n            return 'YES'\n        if x in seen and cur ^ x == x:\n            return 'YES'\n        seen.add(cur)\n    return 'NO'\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(n, a))", "import sys\nimport math\nimport bisect\nimport functools\nfrom functools import lru_cache\nfrom sys import stdin, stdout\nfrom math import gcd, floor, sqrt, log, ceil\nfrom heapq import heappush, heappop, heapify\nfrom collections import defaultdict as dd\nfrom collections import Counter as cc\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\n\ndef lcm(a, b):\n    return abs(a * b) // math.gcd(a, b)\nsys.setrecursionlimit(100000000)\nintinp = lambda : int(input().strip())\nstripinp = lambda : input().strip()\nfltarr = lambda : list(map(float, input().strip().split()))\nintarr = lambda : list(map(int, input().strip().split()))\nceildiv = lambda x, d: x // d if x % d == 0 else x // d + 1\nMOD = 1000000007\nnum_cases = intinp()\nfor _ in range(num_cases):\n    n = intinp()\n    arr = intarr()\n    x = 0\n    for v in arr:\n        x ^= v\n    y = 0\n    ans = 0\n    if not x:\n        print('YES')\n        continue\n    for v in arr:\n        y ^= v\n        if y == x:\n            y = 0\n            ans += 1\n    if not y and ans > 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    ls = [int(x) for x in input().split()]\n    xorsum = 0\n    ans = 0\n    for i in ls:\n        xorsum ^= i\n    if xorsum == 0:\n        ans = 1\n    if ans == 0:\n        xorsum2 = 0\n        cnt = 0\n        for i in ls:\n            xorsum2 ^= i\n            if xorsum2 == xorsum:\n                xorsum2 = 0\n                cnt += 1\n    if ans == 0:\n        if xorsum2 == 0 and cnt >= 3:\n            ans = 1\n    if ans == 1:\n        print('YES')\n    else:\n        print('NO')", "def solve(arr):\n    n = len(arr)\n    if arr[-1] == 0:\n        return 'YES'\n    for i in range(n - 2):\n        if arr[i] == arr[-1]:\n            for j in range(i + 1, n - 1):\n                if arr[j] == 0:\n                    return 'YES'\n    return 'NO'\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    xor = a[0]\n    xors = [xor]\n    for x in a[1:]:\n        xor ^= x\n        xors.append(xor)\n    result = solve(xors)\n    print(result)", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    acc_a = [x]\n    i = 1\n    while i < n and x ^ a[i] != 0:\n        x = x ^ a[i]\n        acc_a.append(x)\n        i += 1\n    if i == n:\n        print('NO')\n    elif i == n - 1:\n        print('YES')\n    else:\n        y = 0\n        for j in range(i + 1, n):\n            y = y ^ a[j]\n        if y == 0:\n            print('YES')\n        else:\n            z = 0\n            flag = False\n            for k in reversed(range(1, i + 1)):\n                z = z ^ a[k]\n                if z == y and acc_a[k - 1] == y:\n                    flag = True\n                    break\n            print('YES' if flag else 'NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (xor, acc_a, pos0) = (0, [], [])\n    for (i, ai) in enumerate(a):\n        xor ^= ai\n        acc_a.append(xor)\n        if xor == 0:\n            pos0.append(i)\n    T = xor == 0 or (len(pos0) > 0 and xor in acc_a[:pos0[-1]])\n    print('YES' if T else 'NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    xor_arr = 0\n    for ele in a:\n        xor_arr = xor_arr ^ ele\n    if xor_arr == 0:\n        print('YES')\n    else:\n        count = 0\n        xor = 0\n        for ele in a:\n            xor = xor ^ ele\n            if xor == xor_arr:\n                count += 1\n                xor = 0\n        if count >= 2 and xor == 0:\n            print('YES')\n        else:\n            print('NO')", "import sys, math, itertools, random, bisect\nfrom collections import defaultdict\nINF = 10 ** 18\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_array():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nmod = 10 ** 9 + 7\ntest = 1\ntest = int(input())\nfor _ in range(test):\n    (n,) = get_ints()\n    a = get_array()\n    x = 0\n    for i in range(n):\n        x ^= a[i]\n    if x == 0:\n        print('YES')\n    else:\n        ele = x\n        x = 0\n        ct = 0\n        for i in range(n):\n            x ^= a[i]\n            if x == ele:\n                x = 0\n                ct += 1\n        if (x == ele or x == 0) and ct > 1:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = 0\n    count = 0\n    for i in range(n):\n        x = x ^ l[i]\n    if x == 0:\n        print('YES')\n    else:\n        i = 0\n        count = 0\n        while i < n - 1:\n            if l[i] == x:\n                i += 1\n                count += 1\n            else:\n                p = l[i] ^ l[i + 1]\n                l[i] = 0\n                l[i + 1] = p\n                i += 1\n        q = list(set(l))\n        q.sort()\n        if len(q) > 2:\n            print('NO')\n        elif count < 2:\n            print('NO')\n        elif len(q) == 2:\n            if q[0] == 0 and q[1] == x:\n                print('YES')\n            else:\n                print('NO')\n        elif q[0] == x:\n            print('YES')\n        else:\n            print('NO')", "for t in range(int(input())):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    p = 0\n    flag = False\n    for x in ls:\n        p = p ^ x\n    if p == 0:\n        flag = True\n    cnt = 0\n    u = 0\n    for i in range(n):\n        u = u ^ ls[i]\n        if u == p:\n            cnt += 1\n            u = 0\n    if cnt >= 2 or flag == True:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = l[0]\n    for i in range(1, n):\n        ans ^= l[i]\n    if ans == 0:\n        print('YES')\n    else:\n        check = 0\n        count = 0\n        for i in range(0, n):\n            check ^= l[i]\n            if ans == check:\n                count += 1\n                check = 0\n        if count >= 2:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = 0\n    k = 0\n    cnt = 0\n    for i in range(n):\n        s = s ^ l[i]\n    if s == 0:\n        print('YES')\n    else:\n        for i in range(n):\n            k = k ^ l[i]\n            if k == s:\n                cnt += 1\n                k = 0\n        if cnt >= 3:\n            print('YES')\n        else:\n            print('NO')", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    xor = 0\n    for i in range(n):\n        xor ^= a[i]\n    if xor == 0:\n        print('YES')\n    else:\n        xort = 0\n        i = 0\n        while i < n - 1:\n            xort ^= a[i]\n            if xort == xor:\n                break\n            i += 1\n        if i == n - 2:\n            print('NO')\n        else:\n            xort = 0\n            i = i + 1\n            while i < n:\n                xort ^= a[i]\n                if xort == xor:\n                    break\n                i += 1\n            if i == n - 1:\n                print('NO')\n            else:\n                xort = 0\n                i += 1\n                while i < n:\n                    xort ^= a[i]\n                    i += 1\n                if xort == xor:\n                    print('YES')\n                else:\n                    print('NO')", "import sys\nimport os.path\nif os.path.exists('input_file.txt'):\n    sys.stdin = open('input_file.txt', 'r')\n    sys.stdout = open('output_file.txt', 'w')\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    aa = []\n    ans = 0\n    comp = a[0]\n    f = 0\n    for i in range(n):\n        if a[i] != comp:\n            f = 1\n            break\n    if f:\n        for i in range(n):\n            ans ^= a[i]\n        if ans != 0:\n            anss = 0\n            f = 0\n            for i in range(n):\n                anss ^= a[i]\n                if anss == ans:\n                    anss = 0\n                    f += 1\n            if anss == 0:\n                if f >= 2:\n                    ans = 0\n        if ans == 0:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    for i in arr:\n        ans ^= i\n    if ans == 0:\n        print('YES')\n        continue\n    f = 0\n    k = 0\n    for i in range(n):\n        f ^= arr[i]\n        if f == ans:\n            k = k + 1\n            ans = 0\n    if k > 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    xor = 0\n    for i in range(n):\n        xor ^= a[i]\n    if xor == 0:\n        print('YES')\n    else:\n        nx = 0\n        c = 0\n        for i in range(n):\n            nx ^= a[i]\n            if nx == xor:\n                c += 1\n                nx = 0\n        if c >= 2:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = a[0]\n    for i in range(1, n):\n        s = s ^ a[i]\n    if s == 0:\n        print('YES')\n    else:\n        s = a[0]\n        c = 0\n        for i in range(1, n):\n            s = s ^ a[i]\n            if s == 0:\n                c = i\n                break\n        s = 0\n        for i in range(c + 1, n):\n            s = s ^ a[i]\n        d = 0\n        z = 0\n        for i in range(c + 1):\n            d = d ^ a[i]\n            if d == s:\n                z += 1\n                d = 0\n        if z == 2 and d == 0:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = 0\n    for i in range(n):\n        x = x ^ a[i]\n    if x == 0:\n        print('YES')\n    else:\n        (c, z) = (0, 0)\n        for i in range(n):\n            z = z ^ a[i]\n            if z == x:\n                c = c + 1\n                z = 0\n        if c >= 3:\n            print('YES')\n        else:\n            print('NO')", "for s in [*open(0)][2::2]:\n    a = [0]\n    i = 0\n    for x in s.split():\n        a += (a[-1] ^ int(x),)\n    print('NYOE S'[0 in a[a.index(a[-1]):]::2])", "for s in [*open(0)][2::2]:\n    a = [0]\n    for x in s.split():\n        a += (a[-1] ^ int(x),)\n    print('NYOE S'[0 in a[a.index(a[-1]):]::2])", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    xor = 0\n    for x in arr:\n        xor ^= x\n    if xor == 0:\n        print('YES')\n    else:\n        count = block = 0\n        for x in arr:\n            count ^= x\n            if count == xor:\n                block += 1\n                count = 0\n        print('YES' if block > 2 else 'NO')", "import sys\n\ndef solve(arr, n):\n    res = 0\n    for elem in arr:\n        res ^= elem\n    if res == 0:\n        return 'YES'\n    a = 0\n    for i in range(n):\n        a ^= arr[i]\n        if a == res:\n            break\n    b = 0\n    for i in range(i + 1, n):\n        b ^= arr[i]\n        if b == res:\n            break\n    return 'YES' if i != n - 1 else 'NO'\n\ndef main():\n    res = ''\n    input = sys.stdin.readline\n    print = sys.stdout.write\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        res += solve(a, n) + '\\n'\n    print(res)\nmain()", "import functools, operator, sys\n\ndef f(t, z):\n    for x in t:\n        z ^= x\n        if not z:\n            yield from t\n    yield from ()\nfor l in sys.stdin.readlines()[2::2]:\n    a = [int(x) for x in l.split()]\n    z = functools.reduce(operator.xor, a)\n    t = iter(a)\n    if z:\n        t = f(t, z)\n        t = f(t, z)\n        print('YES' if next(t, None) is not None else 'NO')\n    else:\n        print('YES')", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    entrada = input()\n    array = [int(x) for x in entrada.split(' ')]\n    ans = 0\n    for i in range(n):\n        ans = ans ^ array[i]\n    if ans == 0:\n        print('YES')\n    else:\n        temp = 0\n        count = 0\n        for i in range(n):\n            temp = temp ^ array[i]\n            if temp == ans:\n                count += 1\n                temp = 0\n        if temp == 0 and count > 1:\n            print('YES')\n        else:\n            print('NO')\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    entrada = input()\n    array = [int(x) for x in entrada.split(' ')]\n    ans = 0\n    for i in range(n):\n        ans = ans ^ array[i]\n    if ans == 0:\n        print('YES')\n    else:\n        temp = 0\n        count = 0\n        for i in range(n):\n            temp = temp ^ array[i]\n            if temp == ans:\n                count += 1\n                temp = 0\n        if temp == 0 and count > 1:\n            print('YES')\n        else:\n            print('NO')\n    t -= 1", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (xor, count, xorr) = (0, 0, 0)\n    for i in range(n):\n        xor = xor ^ a[i]\n    if xor == 0:\n        print('YES')\n    else:\n        for i in range(n):\n            xorr = xorr ^ a[i]\n            if xor == xorr:\n                count += 1\n                xorr = 0\n        if count >= 2:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor i in range(t):\n    x = int(input())\n    a = list(map(int, input().split()))\n    an = 0\n    for i in a:\n        an = an ^ i\n    flag = 0\n    if an == 0:\n        flag = 1\n    c = 0\n    f = 0\n    for i in a:\n        f = f ^ i\n        if f == an:\n            c += 1\n            f = 0\n    if c > 2:\n        flag = 1\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    for x in a:\n        s ^= x\n    if s == 0:\n        print('YES')\n    else:\n        c = 0\n        ps = 0\n        for i in range(n):\n            ps ^= a[i]\n            if ps == s:\n                c += 1\n                ps = 0\n        if c >= 2:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    prev = [arr[0]]\n    for i in arr[1:]:\n        prev.append(prev[-1] ^ i)\n    if prev[-1] == 0:\n        print('YES')\n    else:\n        flag = False\n        for i in range(n):\n            if prev[-1] ^ prev[i] == 0:\n                for j in range(i + 1, n):\n                    if prev[j] == 0:\n                        flag = True\n                        break\n            if flag:\n                break\n        if flag:\n            print('YES')\n        else:\n            print('NO')", "for s in [*open(0)][2::2]:\n    a = [0]\n    for x in s.split():\n        a += (a[-1] ^ int(x),)\n    print('NYOE S'[0 in a[a.index(a[-1]):]::2])", "I = input\nIN = lambda x: map(int, x.split())\nL = lambda x: list(IN(x))\nfor _ in range(int(I())):\n    n = int(I())\n    a = L(I())\n    x = 0\n    for i in a:\n        x = x ^ i\n    if x == 0:\n        print('YES')\n    else:\n        c = 0\n        y = 0\n        for i in a:\n            y = y ^ i\n            if y == x:\n                c += 1\n                y = 0\n                if c == 2:\n                    print('YES')\n                    break\n        if c == 1:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = 0\n    for i in range(n):\n        a ^= l[i]\n    if a == 0:\n        print('YES')\n    else:\n        b = 0\n        c = 0\n        for i in l:\n            b ^= i\n            if b == a:\n                c += 1\n                b = 0\n        if c >= 2:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\n\ndef xor(arr, n):\n    res = 0\n    l = 0\n    y = 0\n    for i in arr:\n        res = res ^ i\n    if res == 0:\n        return True\n    for i in arr:\n        y ^= i\n        if y == res:\n            y = 0\n            l += 1\n    return l >= 2\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print('YES' if xor(arr, n) else 'NO')", "from functools import reduce\n\ndef xor(array):\n    return reduce(lambda x, y: x ^ y, array, 0)\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    total_xor = xor(a)\n    if total_xor == 0:\n        print('YES')\n    else:\n        cumulative_xor = 0\n        pieces = 0\n        for element in a:\n            cumulative_xor ^= element\n            if cumulative_xor == total_xor:\n                cumulative_xor = 0\n                pieces += 1\n        if pieces >= 3:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    a = 0\n    for x in arr:\n        a ^= x\n    c = 0\n    cnt = 0\n    for x in arr:\n        c ^= x\n        if c == a:\n            cnt += 1\n            c = 0\n    if a == 0 or cnt > 2:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    array = [int(j) for j in input().split()]\n    a = 0\n    xor = []\n    for j in range(n):\n        a = a ^ array[j]\n        xor.append(a)\n    if a == 0:\n        print('YES')\n    else:\n        c = xor.index(a)\n        if 0 in xor[c + 1:]:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    w = [int(k) for k in input().split()]\n    c = 0\n    for j in w:\n        c = c ^ j\n    eta = 0\n    res = 0\n    for j in w:\n        eta = eta ^ j\n        if eta == c:\n            res += 1\n            eta = 0\n    if res > 1 or c == 0:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin\ninput = stdin.readline\nfrom collections import Counter\nfrom itertools import accumulate\nimport operator\n\ndef solve():\n    n = int(input())\n    A = [int(char) for char in input().split()]\n    xor_acc = list(accumulate(A, operator.xor))\n    total = xor_acc[-1]\n    if total == 0:\n        return True\n    for (i, xor) in enumerate(xor_acc):\n        if xor == total:\n            next_start = i + 1\n            sub_xor = list(accumulate(A[next_start:], operator.xor))\n            if total in sub_xor:\n                return True\n    return False\nfor _ in range(int(input())):\n    if solve():\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    xor = 0\n    for i in range(n):\n        xor ^= arr[i]\n    if xor == 0:\n        print('YES')\n    else:\n        cnt = 0\n        xr = 0\n        for i in range(n):\n            xr ^= arr[i]\n            if xor == xr:\n                cnt += 1\n                xr = 0\n        if cnt >= 2:\n            print('YES')\n        else:\n            print('NO')", "def ass(l, n, axor):\n    ans = 0\n    for i in range(n - 1):\n        ans ^= l[i]\n        xor = ans ^ axor\n        if ans == xor:\n            return True\n        elif xor == 0:\n            flag = 0\n            for j in range(i + 1, n):\n                if ans == xor:\n                    return True\n                xor ^= l[j]\n    return False\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    assxor = 0\n    for i in l:\n        assxor ^= i\n    print('YES' if ass(l, n, assxor) else 'NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    line = input()\n    nums = line.split(' ')\n    last = 0\n    for j in range(0, n):\n        last = last ^ int(nums[j])\n    if last == 0:\n        print('YES')\n        continue\n    xor = last\n    last = 0\n    count = 0\n    for i in range(0, n):\n        last ^= int(nums[i])\n        if last == xor:\n            count += 1\n            last = 0\n    if count >= 3:\n        print('YES')\n        continue\n    print('NO')", "Test = int(input())\nfor T in range(Test):\n    N = int(input())\n    Data = list(map(int, input().split()))\n    (Even, Odd) = (0, 0)\n    for i in range(N):\n        Even = Even ^ Data[i]\n    if Even == 0:\n        print('YES')\n    else:\n        Counter = 0\n        for i in range(N):\n            Odd = Odd ^ Data[i]\n            if Odd == Even:\n                Counter += 1\n                Odd = 0\n        if Counter >= 3:\n            print('YES')\n        else:\n            print('NO')", "def solve(n, a):\n    base = a[0]\n    for i in range(1, n):\n        base ^= a[i]\n    if base == 0:\n        return 'YES'\n    c = 0\n    xor = 0\n    for x in a:\n        xor ^= x\n        if xor == base:\n            c += 1\n            xor = 0\n    return 'YES' if c >= 2 else 'NO'\ntt = int(input())\nwhile tt > 0:\n    tt -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(n, a))", "n = int(input())\nwhile n != 0:\n    le = int(input())\n    lst = list(map(int, input().split()))\n    x = 0\n    for i in range(le):\n        x = lst[i] ^ x\n    (t, c) = (0, 0)\n    for i in range(le):\n        t ^= lst[i]\n        if t == x:\n            c += 1\n            t = 0\n    if c > 1 or x == 0:\n        print('YES')\n    else:\n        print('NO')\n    n -= 1", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    b = [0]\n    i = 0\n    for x in a:\n        b += (b[-1] ^ x,)\n    print('NYOE S'[0 in b[b.index(b[-1]):]::2])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    xor = 0\n    for i in range(n):\n        xor ^= a[i]\n    if xor == 0:\n        print('YES')\n    else:\n        cnt = 0\n        xr = 0\n        for i in range(n):\n            xr ^= a[i]\n            if xor == xr:\n                cnt += 1\n                xr = 0\n        if cnt >= 2:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    xor = 0\n    for i in range(n):\n        xor ^= a[i]\n    if xor == 0:\n        print('YES')\n    else:\n        cnt = 0\n        xr = 0\n        for i in range(n):\n            xr ^= a[i]\n            if xor == xr:\n                cnt += 1\n                xr = 0\n        print('YES') if cnt >= 2 else print('NO')", "def AGAGA_XOOORRR(size, ar):\n    xor = 0\n    for i in range(size):\n        xor ^= ar[i]\n    if xor == 0:\n        print('YES')\n    else:\n        (count, xr) = (0, 0)\n        for i in range(size):\n            xr ^= ar[i]\n            if xor == xr:\n                count += 1\n                xr = 0\n        print('YES') if count >= 2 else print('NO')\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    array = list(map(int, input().split()))\n    AGAGA_XOOORRR(n, array)", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    xor = 0\n    for i in range(n):\n        xor ^= ar[i]\n    if xor == 0:\n        print('YES')\n        continue\n    else:\n        (cnt, temp) = (0, 0)\n        for i in range(n):\n            temp = temp ^ ar[i]\n            if temp == xor:\n                cnt += 1\n                temp = 0\n        if cnt >= 2:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sum = 0\n    for i in range(n):\n        sum ^= a[i]\n    if sum == 0:\n        print('YES')\n        continue\n    cur = 0\n    count = 0\n    for i in range(n):\n        cur ^= a[i]\n        if cur == sum:\n            count += 1\n            cur = 0\n    if cur == 0 and count >= 3:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    nimsum = 0\n    for val in a:\n        nimsum ^= val\n    if nimsum == 0:\n        print('YES')\n        continue\n    front_xor = 0\n    front_id = None\n    for i in range(n):\n        front_xor ^= a[i]\n        if front_xor == nimsum:\n            front_id = i\n            break\n    back_xor = 0\n    back_id = None\n    for i in range(n - 1, -1, -1):\n        back_xor ^= a[i]\n        if back_xor == nimsum:\n            back_id = i\n            break\n    if front_id >= back_id:\n        print('NO')\n        continue\n    print('YES')", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    aa = [int(x) for x in input().split()]\n    bb = [aa[0]]\n    for i in range(1, len(aa)):\n        bb.append(aa[i] ^ bb[i - 1])\n    if bb[-1] == 0:\n        print('YES')\n    else:\n        last_val = bb[-1]\n        zero_pos = None\n        for i in range(len(bb) - 1, -1, -1):\n            if bb[i] == 0:\n                zero_pos = i\n                break\n        if zero_pos is None:\n            print('NO')\n        else:\n            same_last_pos = None\n            for i in range(zero_pos - 1, -1, -1):\n                if bb[i] == last_val:\n                    same_last_pos = i\n                    break\n            if same_last_pos is None:\n                print('NO')\n            else:\n                print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    ans = 0\n    flag = False\n    for (i, j) in enumerate(nums):\n        ans ^= j\n        if i != n - 1 and ans == 0:\n            flag = True\n    if ans:\n        temp = 0\n        cnt = 0\n        for i in nums:\n            temp ^= i\n            if temp == ans:\n                temp = 0\n                cnt += 1\n        print('YES' if cnt > 1 else 'NO')\n    elif flag:\n        print('YES')\n    else:\n        (left, right) = ([], [])\n        ans = 0\n        for i in nums:\n            ans ^= i\n            left.append(ans)\n        for i in reversed(nums):\n            ans ^= i\n            right.append(ans)\n        right = list(reversed(right))\n        for i in range(n - 1):\n            if left[i] == right[i + 1]:\n                print('YES')\n                break\n        else:\n            print('NO')", "from functools import reduce\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a.count(a[0]) == n:\n        print('YES')\n        continue\n    totalXor = reduce(lambda x, y: x ^ y, a)\n    if totalXor == 0:\n        print('YES')\n    else:\n        x = 0\n        c = 0\n        for i in range(n):\n            x ^= a[i]\n            if x == totalXor:\n                c += 1\n                x = 0\n        if c > 1:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    pfx = []\n    xor = 0\n    lst = -1\n    for i in range(n):\n        xor ^= ar[i]\n        pfx.append(xor)\n    if pfx[-1] == 0:\n        print('YES')\n        continue\n    else:\n        x = pfx[-1]\n        (cnt, temp) = (0, 0)\n        for i in range(n):\n            temp = temp ^ ar[i]\n            if temp == x:\n                cnt += 1\n                temp = 0\n        if cnt >= 3:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    total = 0\n    inp = list(map(int, input().split()))\n    q = [0]\n    for i in range(n):\n        total = total ^ inp[i]\n        q.append(total)\n    suc = 0\n    suc2 = 0\n    for i in range(n):\n        if total == q[i]:\n            suc2 = 1\n        if q[i] == 0 and suc2 == 1:\n            suc = 1\n    if suc:\n        print('YES')\n    else:\n        print('NO')", "from sys import *\n\ndef value_of_arr(a):\n    result = 0\n    for x in a:\n        result = x ^ result\n    return result\n\ndef is_good_arr(a, value):\n    for x in a:\n        if x != value:\n            return False\n\ndef check_arr_empty(a, value):\n    left_value = 0\n    for i in range(0, len(a) - 1):\n        x = a[i]\n        left_value = left_value ^ x\n        if left_value == value:\n            return True\n    return False\n\ndef solve_case(t):\n    n = int(stdin.readline())\n    a = [int(x) for x in stdin.readline().rstrip().split()]\n    has_pass = False\n    all_value = value_of_arr(a)\n    if all_value == 0:\n        has_pass = len(a) > 1\n    else:\n        left_value = 0\n        for i in range(0, len(a) - 1):\n            x = a[i]\n            left_value = left_value ^ x\n            if left_value == all_value:\n                has_pass = check_arr_empty(a[i + 1:], all_value)\n                if has_pass:\n                    break\n    if has_pass:\n        print('YES')\n    else:\n        print('NO')\n\ndef main():\n    T = int(stdin.readline())\n    for t in range(T):\n        solve_case(t)\nmain()", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ar = a[::-1]\n    (t, t2) = (0, 0)\n    d = defaultdict(int)\n    (pre, suff) = ([], [])\n    for x in ar:\n        t2 ^= x\n        suff.append(t2)\n    suff.reverse()\n    p = 0\n    f = 0\n    t = t2\n    for i in range(n - 1):\n        p ^= a[i]\n        if t ^ p == p:\n            f = 1\n            break\n        if p == 0 and d[suff[i + 1]] == 1:\n            f = 1\n            break\n        d[p] = 1\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')", "import functools\nreduce = functools.reduce\ntests = int(input())\nfor case in range(tests):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    he = reduce(lambda x, y: x ^ y, a)\n    if he == 0:\n        print('YES')\n    else:\n        sm = 0\n        flag = 0\n        for i in a:\n            sm ^= i\n            if sm == he:\n                flag += 1\n                sm = 0\n        if flag >= 3:\n            print('YES')\n        else:\n            print('NO')", "import sys, math, itertools, random, bisect\nfrom collections import defaultdict\nINF = 10 ** 18\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_array():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nmod = 10 ** 9 + 7\ntest = 1\ntest = int(input())\nfor _ in range(test):\n    (n,) = get_ints()\n    a = get_array()\n    x = 0\n    for i in range(n):\n        x ^= a[i]\n    if x == 0:\n        print('YES')\n    else:\n        ele = x\n        x = 0\n        ct = 0\n        for i in range(n):\n            x ^= a[i]\n            if x == ele:\n                x = 0\n                ct += 1\n        if x == ele or (x == 0 and ct > 1):\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = 0\n    for i in range(n):\n        s = s ^ l[i]\n    if s == 0:\n        print('YES')\n    else:\n        cur = 0\n        ct = 0\n        for i in range(n):\n            cur = cur ^ l[i]\n            if cur == s:\n                cur = 0\n                ct += 1\n        if cur == 0 and ct >= 2:\n            print('YES')\n        else:\n            print('NO')", "def solve(a, n, xor):\n    res = 0\n    for i in range(n - 1):\n        res ^= a[i]\n        x = res ^ xor\n        if res == x:\n            return True\n        elif x == 0:\n            bel = 0\n            for j in range(i + 1, n):\n                if res == x:\n                    return True\n                x ^= a[j]\n    return False\ntest = int(input())\nfor _ in range(test):\n    n = int(input())\n    a = list(map(int, input().split()))\n    result = 0\n    for i in a:\n        result ^= i\n    if solve(a, n, result):\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter\nimport math\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        x = a[0]\n        for i in range(1, n):\n            x = x ^ a[i]\n        if x == 0:\n            print('YES')\n        else:\n            c = 0\n            j = 0\n            flag = 0\n            m = a[j]\n            while m == x:\n                c += 1\n                j += 1\n                if j < n:\n                    m = a[j]\n                else:\n                    break\n            while j < n:\n                while m != x:\n                    j += 1\n                    if j == n:\n                        break\n                    m = m ^ a[j]\n                if m == x:\n                    c += 1\n                    j += 1\n                    if j < n:\n                        m = a[j]\n                elif m == 0:\n                    j += 1\n                    if j < n:\n                        m = a[j]\n                else:\n                    flag = 1\n            if flag == 0:\n                if c > 2 and c % 2 == 1:\n                    print('YES')\n                else:\n                    print('NO')\n            else:\n                print('NO')\nmain()", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    x = c = y = 0\n    for n in a:\n        x ^= n\n    for n in a:\n        y ^= n\n        if y == x:\n            c += 1\n            y = 0\n    print('NYOE S'[x < 1 or c > 1::2])", "def ans(l, n):\n    (xr, x) = (0, 0)\n    for i in range(n):\n        xr ^= l[i]\n    if xr == 0:\n        return 'YES'\n    for i in range(n):\n        x ^= l[i]\n        c = 0\n        if x == xr:\n            for j in range(i + 1, n - 1):\n                c ^= l[j]\n                if c == x:\n                    return 'YES'\n    return 'NO'\ntc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(ans(l, n))", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    xor = 0\n    for item in arr:\n        xor ^= item\n    if not xor:\n        print('YES')\n    else:\n        cnt = 0\n        tmp = 0\n        for item in arr:\n            tmp ^= item\n            if tmp == xor:\n                tmp = 0\n                cnt += 1\n        if cnt > 1:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = 0\n    for i in range(n):\n        d ^= a[i]\n    if d == 0:\n        print('YES')\n    else:\n        (s, xor) = (0, 0)\n        for i in range(n):\n            xor ^= a[i]\n            if xor == d:\n                s += 1\n                xor = 0\n        if s >= 3:\n            print('YES')\n        else:\n            print('NO')", "for i in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    d = 0\n    ans = 0\n    for k in arr:\n        d ^= k\n    if d == 0:\n        print('YES')\n    else:\n        a = 0\n        for j in range(n):\n            a ^= arr[j]\n            if a == d:\n                ans += 1\n                a = 0\n        if ans >= 2:\n            print('YES')\n        else:\n            print('NO')"]