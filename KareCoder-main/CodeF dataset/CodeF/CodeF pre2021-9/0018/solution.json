["import sys\n\ndef calculate_minimum_difference(val):\n    coin1 = val // 3\n    coin2 = coin1\n    if val - coin1 * 3 == 1:\n        coin2 += 1\n    elif val - coin1 * 3 == 2:\n        coin1 += 1\n    sys.stdout.write(f'{coin2} {coin1}\\n')\ninfile = []\nfor line in sys.stdin:\n    if '' == line.rstrip():\n        break\n    infile.append(int(line.rstrip()))\ncases = infile[0]\nfor x in range(1, len(infile)):\n    calculate_minimum_difference(infile[x])", "from math import ceil\nfor s in [*open(0)][1:]:\n    n = int(s)\n    n2 = (n + 1) // 3\n    print(n - n2 * 2, n2)", "ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    d = n // 3\n    r = n % 3\n    if r == 0:\n        ans += ['%d %d' % (d, d)]\n    elif r == 1:\n        ans += ['%d %d' % (d + 1, d)]\n    else:\n        ans += ['%d %d' % (d, d + 1)]\nprint('\\n'.join(ans))", "t = int(input())\nnatija = []\nfor i in range(t):\n    n = int(input())\n    c1 = n // 3\n    c2 = n // 3\n    if n - 3 * c1 == 1:\n        c1 += 1\n    elif n - 3 * c1 == 2:\n        c2 += 1\n    natija.append(str(c1) + ' ' + str(c2))\nfor i in range(t):\n    print(natija[i])", "for s in [*open(0)][1:]:\n    s = int(s)\n    print('%s %s' % (s // 3 + (s % 3 == 1), s // 3 + (s % 3 == 2)))", "for s in [*open(0)][1:]:\n    s = int(s)\n    print('%s %s' % (s // 3 + (s % 3 == 1), s // 3 + (s % 3 == 2)))", "t = int(input())\nans = []\nfor i in range(0, t):\n    n = int(input())\n    temp = round(n / 3)\n    s = f'{n - temp * 2} {temp}'\n    ans.append(s)\nfor i in ans:\n    print(i)", "import sys\ninput = sys.stdin.readline\noutput = sys.stdout.write\n\ndef main():\n    tests = int(input().rstrip())\n    for i in range(tests):\n        ones = 0\n        twos = 0\n        num = int(input().rstrip())\n        temp = num // 3\n        dif = num % 3\n        if dif == 1:\n            ones += 1\n        elif dif == 2:\n            twos += 1\n        ones += temp\n        twos += temp\n        output(str(ones) + ' ' + str(twos) + '\\n')\nmain()", "from sys import *\nfrom math import floor\ninput = lambda : stdin.readline()\nint_arr = lambda : list(map(int, stdin.readline().strip().split()))\nstr_arr = lambda : list(map(str, stdin.readline().split()))\nget_str = lambda : map(str, stdin.readline().strip().split())\nget_int = lambda : map(int, stdin.readline().strip().split())\nget_float = lambda : map(float, stdin.readline().strip().split())\nmod = 1000000007\nsetrecursionlimit(1000)\nfor _ in range(int(input())):\n    n = int(input())\n    val = floor(n / 3 + 0.5)\n    print(n - 2 * val, val)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    x = n // 3\n    y = n % 3\n    (c1, c2) = (x, x)\n    if y == 1:\n        c1 += 1\n    elif y == 2:\n        c2 += 1\n    print(c1, c2)", "def main():\n    import sys\n    input = sys.stdin.readline\n    for _ in range(int(input())):\n        n = int(input())\n        x = n // 3\n        if (n - x) % 2 == 0:\n            y = (n - x) // 2\n            print(x, y)\n        else:\n            y = n - 2 * x\n            print(y, x)\nmain()", "t = int(input())\nif t >= 1 and t <= 10000:\n    lan = []\n    for i in range(t):\n        n = int(input())\n        if n >= 1 and n <= 10 ** 9:\n            c = n // 3\n            if n % 3 == 0:\n                c1 = c\n                c2 = c\n                lan.append(f'{c1} {c2}')\n            elif n % 3 == 1:\n                c1 = c + 1\n                c2 = c\n                lan.append(f'{c1} {c2}')\n            elif n % 3 == 2:\n                c1 = c\n                c2 = c + 1\n                lan.append(f'{c1} {c2}')\n    print(*lan, sep='\\n')", "for s in [*open(0)][1:]:\n    n = int(s)\n    print((c := (n // 3 + n % 3 % 2)), n - c >> 1)", "for s in [*open(0)][1:]:\n    n = int(s)\n    print((c := (n // 3 + n % 3 % 2)), n - c >> 1)", "from os import sep\nanswer = []\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    if n % 3 == 0:\n        c1 = int(n / 3)\n        c2 = int(n / 3)\n    elif n % 3 == 1:\n        c2 = int((n - 1) / 3)\n        c1 = c2 + 1\n    else:\n        c1 = int((n - 2) / 3)\n        c2 = c1 + 1\n    arr = [c1, c2]\n    answer.append(arr)\nfor j in range(0, len(answer)):\n    print(*answer[j], sep=' ')", "for s in [*open(0)][1:]:\n    n = int(s)\n    print((c := (n // 3 + n % 3 % 2)), (n - c) // 2)", "for s in [*open(0)][1:]:\n    n = int(s)\n    print((c := (n // 3 + n % 3 % 2)), n - c >> 1)", "for s in [*open(0)][1:]:\n    n = int(s)\n    print((c := (n // 3 + n % 3 % 2)), n - c >> 1)", "def solve():\n    n = int(input())\n    if n % 3 == 0:\n        return str(n // 3) + ' ' + str(n // 3)\n    if n % 3 == 1:\n        return str(n // 3 + 1) + ' ' + str(n // 3)\n    return str(n // 3) + ' ' + str(n // 3 + 1)\nt = int(input())\nans = []\nwhile t:\n    ans.append(str(solve()))\n    t -= 1\nprint('\\n'.join(ans))", "result = ''\nfor i in range(0, int(input())):\n    n = int(input())\n    temp = n\n    for k in range(0, 4):\n        if temp % 3 == 0:\n            break\n        else:\n            temp -= 1\n    if n - temp == 0:\n        result += str(n // 3) + ' ' + str(n // 3) + '\\n'\n    elif n - temp == 1:\n        result += str(n // 3 + 1) + ' ' + str(n // 3) + '\\n'\n    else:\n        result += str(n // 3) + ' ' + str(n // 3 + 1) + '\\n'\nprint(result)", "t = int(input())\n(a, s) = ([], [])\nfor i in range(t):\n    c = 0\n    n = int(input())\n    a.append(n)\n    if len(a) > 0:\n        if a[0] // 3 + a[0] // 3 * 2 == a[0]:\n            c += a[0] // 3\n            s.append(str(c) + ' ' + str(c))\n            del a[0]\n            continue\n        elif a[0] // 3 + 1 + a[0] // 3 * 2 == a[0]:\n            c += a[0] // 3 + 1\n            s.append(str(c) + ' ' + str(c - 1))\n            del a[0]\n            continue\n        else:\n            c += a[0] // 3 + 1\n            s.append(str(c - 1) + ' ' + str(c))\n            del a[0]\n            continue\n    else:\n        break\nprint(*s, sep='\\n')", "ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    t = n // 3\n    if t * 3 == n:\n        ans.append((t, t))\n    elif t + 2 * (t + 1) == n:\n        ans.append((t, t + 1))\n    else:\n        ans.append((t + 1, t))\nfor i in ans:\n    print(*i)", "o = []\nfor q in range(int(input())):\n    n = int(input())\n    a = n // 3\n    n -= a\n    if n % 2 == 0:\n        b = int(n / 2)\n    else:\n        a += 1\n        b = n // 2\n    o.append([a, b])\nfor i in range(len(o)):\n    print(str(o[i][0]) + ' ' + str(o[i][1]))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    print(n // 3 + (n % 3 == 1), n // 3 + (n % 3 == 2))", "t = int(input())\nl = [int(input()) for i in range(t)]\nfor n in l:\n    c = n // 3\n    if n % 3 == 0:\n        print('%d %d' % (c, c))\n    elif n % 3 == 1:\n        print('%d %d' % (c + 1, c))\n    elif n % 3 == 2:\n        print('%d %d' % (c, c + 1))", "from sys import stdin\n\ndef solve():\n    n = int(stdin.readline().strip())\n    c = n // 3\n    if n % 3 == 0:\n        print(str(c) + ' ' + str(c))\n    elif n % 3 == 1:\n        print(str(c + 1) + ' ' + str(c))\n    else:\n        print(str(c) + ' ' + str(c + 1))\nt = int(stdin.readline().strip())\nfor _ in range(t):\n    solve()", "for s in [*open(0)][1:]:\n    n = int(s)\n    print((c := (n // 3 + n % 3 % 2)), n - c >> 1)", "test = int(input())\nvalues = []\nfor i in range(0, test):\n    a = int(input())\n    values.append(a)\nc1 = 1\nc2 = 2\nnumber_c1 = 0\nnumber_c2 = 0\nfor value in values:\n    if value % 3 == 0:\n        c1 = c2 = value / 3\n    elif (value - 1) % 3 == 0:\n        c2 = (value - 1) / 3\n        c1 = c2 + 1\n    elif (value - 2) % 3 == 0:\n        c1 = (value - 2) / 3\n        c2 = c1 + 1\n    else:\n        pass\n    print(f'{int(c1)} {int(c2)}')", "for s in [*open(0)][1:]:\n    n = int(s)\n    print((c := (n // 3 + n % 3 % 2)), n - c >> 1)", "for s in [*open(0)][1:]:\n    n = int(s)\n    print((c := (n // 3 + n % 3 % 2)), n - c >> 1)", "nums = []\nn = int(input())\nfor i in range(n):\n    num = int(input())\n    nums.append(num)\nfor j in nums:\n    x = j // 3\n    y = j % 3\n    if y == 0:\n        print(x, x)\n    elif y == 1:\n        print(x + 1, x)\n    else:\n        print(x, x + 1)", "def solution(n):\n    c1 = 0\n    c2 = 0\n    if n % 3 == 1:\n        c1 += 1\n    if n % 3 == 2:\n        c2 += 1\n    c1 += n // 3\n    c2 += n // 3\n    return ' '.join(list(map(str, [c1, c2])))\nresult = []\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    result.append(solution(n))\nprint(*result, sep='\\n')", "cases = int(input())\nall_cases = [int(input()) for i in range(cases)]\n\ndef minimiser(all_cases):\n    for i in all_cases:\n        amount = i // 3\n        if i % 3 == 0:\n            print(str(amount) + ' ' + str(amount))\n        elif i % 3 == 1:\n            print(str(amount + 1) + ' ' + str(amount))\n        elif i % 3 == 2:\n            print(str(amount) + ' ' + str(amount + 1))\nminimiser(all_cases)", "t = int(input())\nA = []\nB = []\n\ndef Input(a):\n    b = a // 3\n    if a % 3 == 2:\n        A.append(b)\n        B.append(b + 1)\n    elif a % 3 == 1:\n        A.append(b + 1)\n        B.append(b)\n    else:\n        A.append(b)\n        B.append(b)\nfor i in range(t):\n    a = int(input())\n    Input(a)\nfor i in range(t):\n    print(A[i], B[i])", "for s in [*open(0)][1:]:\n    s = int(s)\n    print(f'{s - s // 3 * 2} {s // 3}' if s % 3 <= 1 else f'{s - s // 3 * 2 - 2} {s // 3 + 1}')", "for s in [*open(0)][1:]:\n    n = int(s)\n    print((c := (n // 3 + n % 3 % 2)), n - c >> 1)", "for s in [*open(0)][1:]:\n    n = int(s)\n    print((c := (n // 3 + n % 3 % 2)), n - c >> 1)", "for s in [*open(0)][1:]:\n    n = int(s)\n    print((c := (n // 3 + n % 3 % 2)), n - c >> 1)", "k = int(input())\nn = []\nfor i in range(k):\n    n.append(int(input()))\nfor i in range(k):\n    if n[i] % 3 == 0:\n        c1 = n[i] // 3\n        c2 = c1\n    else:\n        n[i] -= 1\n        if n[i] % 3 == 0:\n            temp = n[i] // 3\n            c1 = temp + 1\n            c2 = temp\n        else:\n            n[i] -= 1\n            temp = n[i] // 3\n            c1 = temp\n            c2 = temp + 1\n    print(c1, c2)", "for s in [*open(0)][1:]:\n    n = int(s)\n    print((c := (n // 3 + n % 3 % 2)), n - c >> 1)", "n = int(input())\nans1 = []\nans2 = []\nfor i in range(n):\n    k = int(input())\n    a1 = k // 3\n    a2 = k // 3\n    k %= 3\n    if k == 1:\n        a1 += 1\n    elif k == 2:\n        a2 += 1\n    ans1.append(a1)\n    ans2.append(a2)\ni = 0\nwhile i < n:\n    print(ans1[i], ans2[i])\n    i += 1", "from sys import stdin\ninput = stdin.readline\nrn = lambda : int(input())\nrns = lambda : map(int, input().split())\nrl = lambda : list(map(int, input().split()))\nrs = lambda : input().strip()\nYN = lambda x: print('YES') if x else print('NO')\nmod = 10 ** 9 + 7\nfor _ in range(rn()):\n    n = rn()\n    if n % 3 == 0:\n        print(n // 3, n // 3)\n    elif n % 3 == 1:\n        print(n // 3 + 1, n // 3)\n    else:\n        print(n // 3, n // 3 + 1)", "import sys, math\nsys.setrecursionlimit(10 ** 6)\nINF = float('inf')\nmod = 10 ** 9 + 7\ninput = lambda : sys.stdin.readline().rstrip()\n\ndef li():\n    return list(map(int, input().split()))\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = n // 3\n    b = n // 3\n    if n % 3 == 2:\n        b += 1\n    elif n % 3 == 1:\n        a += 1\n    print(a, b)", "for _ in range(int(input())):\n    n = int(input())\n    c1 = c2 = n // 3\n    if n % 3 == 1:\n        c1 += 1\n    elif n % 3 == 2:\n        c2 += 1\n    print(c1, c2)", "def solve():\n    n = int(input())\n    uno = dos = int(n / 3)\n    if n % 3 == 1:\n        uno += 1\n    if n % 3 == 2:\n        dos += 1\n    print(uno, dos)\n\ndef init():\n    T = 1\n    T = int(input())\n    while T:\n        solve()\n        T -= 1\ninit()", "n = int(input())\nfor i in range(n):\n    s = int(input())\n    if s % 3 == 0:\n        print(s // 3, s // 3)\n    elif s % 3 == 2:\n        print(s // 3, s // 3 + 1)\n    else:\n        print(s // 3 + 1, s // 3)", "import collections\nimport math\n\ndef function():\n    n = int(input())\n    res = []\n    for _ in range(n):\n        p = int(input())\n        if p == 1:\n            res.append((1, 0))\n            continue\n        two = round(2 / 3 * p)\n        one = p - two\n        res.append((two - one, one))\n    return res\nfor e in function():\n    print(' '.join((str(p) for p in e)))", "for i in range(int(input())):\n    n = int(input())\n    x = n\n    n = n % 3\n    if n == 0:\n        print(x // 3, x // 3)\n    elif n == 1:\n        print(x // 3 + 1, x // 3)\n    else:\n        print(x // 3, x // 3 + 1)", "for _ in range(int(input())):\n    n = int(input())\n    if n % 3 == 1:\n        print(n // 3 + 1, n // 3)\n    elif n % 3 == 0:\n        print(n // 3, n // 3)\n    else:\n        print(n // 3, n // 3 + 1)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = n // 3\n    b = n // 3\n    if n % 3 == 0:\n        print(a, b)\n    elif n % 3 == 1:\n        print(a + 1, b)\n    else:\n        print(a, b + 1)", "for _ in range(int(input())):\n    n = int(input())\n    n12 = n // 3\n    n1 = n // 3\n    n2 = n // 3\n    n = n % 3\n    if n == 2:\n        n2 += 1\n    if n == 1:\n        n1 += 1\n    print(n1, n2)", "for _ in range(int(input())):\n    n = int(input())\n    p = n // 3\n    if n % 3 == 2:\n        print(p, p + 1)\n    else:\n        print(p + n % 3, p)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    d = n // 3\n    r = n % 3\n    if r == 2:\n        print(d, d + 1)\n    elif r == 1:\n        print(d + 1, d)\n    else:\n        print(d, d)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n % 3 == 0:\n        print('{} {}'.format(n // 3, n // 3))\n    if n % 3 == 1:\n        print('{} {}'.format((n - 1) // 3 + 1, (n - 1) // 3))\n    if n % 3 == 2:\n        print('{} {}'.format((n - 2) // 3, (n - 2) // 3 + 1))", "for _ in range(int(input())):\n    n = int(input())\n    a = round(n / 3)\n    val = a * 2\n    val2 = n - val\n    print(val2, a)", "for _ in range(int(input().strip())):\n    total = int(input().strip())\n    two = total // 3\n    one = total // 3\n    rem = total % 3\n    if rem == 1:\n        one += 1\n    elif rem == 2:\n        two += 1\n    print(one, two)", "t = int(input())\nfor case in range(t):\n    n = int(input())\n    c1 = n // 3\n    if 3 * c1 == n:\n        print(str(c1) + ' ' + str(c1))\n    elif 3 * c1 + 1 == n:\n        print(str(c1 + 1) + ' ' + str(c1))\n    else:\n        print(str(c1) + ' ' + str(c1 + 1))", "import math\nfor t in range(int(input())):\n    n = int(input())\n    (c1, c2) = (0, 0)\n    if n % 3 == 0:\n        (c1, c2) = (n // 3, n // 3)\n    elif n % 3 == 1:\n        (c1, c2) = (n // 3 + 1, n // 3)\n    else:\n        (c1, c2) = (n // 3, n // 3 + 1)\n    print(c1, c2)", "import sys\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_array():\n    return list(map(int, sys.stdin.readline().rstrip().split()))\n\ndef get_num():\n    return int(sys.stdin.readline())\ntest = get_num()\nfor i in range(test):\n    n = get_num()\n    x = n // 3\n    y = n // 3\n    remaining = n - (2 * x + y)\n    if remaining == 1:\n        x += 1\n    elif remaining == 2:\n        y += 1\n    print(x, y)", "for _ in range(int(input())):\n    n = int(input())\n    r = n % 3\n    n //= 3\n    if r == 0:\n        print(n, n)\n    elif r == 1:\n        print(n + 1, n)\n    elif r == 2:\n        print(n, n + 1)", "def solve(n):\n    q = n // 3\n    r = n % 3\n    if r == 0:\n        return (q, q)\n    elif r == 1:\n        return (q + 1, q)\n    else:\n        return (q, q + 1)\n\ndef main():\n    p = int(input())\n    for i in range(p):\n        l = int(input())\n        (a, b) = solve(l)\n        print(f'{a} {b}')\nmain()", "import sys\nimport math\ninput = sys.stdin.readline\nfrom itertools import permutations\nfrom collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    div = math.ceil(2 / 3 * n)\n    offset = 0\n    if div % 2 != 0:\n        offset = 1\n    two = div // 2\n    one = n - div\n    print(one + offset, two)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    c1 = n // 3\n    c2 = n // 3\n    if n % 3 == 1:\n        c1 += 1\n    elif n % 3 == 2:\n        c2 += 1\n    print('%d %d' % (c1, c2))", "c1 = 0\nc2 = 0\nfor i in range(int(input())):\n    n = int(input())\n    y = n / 3\n    c1 = y\n    c2 = y\n    if n % 3 == 1:\n        c1 += 1\n    elif n % 3 == 2:\n        c2 += 1\n    print(int(c1), int(c2))", "n = int(input())\nfor i in range(n):\n    ans = int(input())\n    if ans % 3 == 0:\n        c1 = ans // 3\n        c2 = ans // 3\n    elif (ans - 1) % 3 == 0:\n        c1 = (ans - 1) // 3\n        c2 = c1 + 1\n    elif (ans - 2) % 3 == 0:\n        c2 = (ans - 2) // 3\n        c1 = c2 + 1\n    print('{} {}'.format(c2, c1))", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    a = n // 3\n    if n % 3 == 0:\n        print(a, a)\n    elif (n - 2) % 3 == 0:\n        print((n - 2) // 3, (n + 1) // 3)\n    elif (n - 1) % 3 == 0:\n        print((n + 2) // 3, (n - 1) // 3)\n    else:\n        pass\n    t -= 1", "for i in range(int(input())):\n    n = int(input())\n    if n % 3 == 0:\n        print(n // 3, n // 3)\n    elif n % 3 == 1:\n        print(n // 3 + 1, n // 3)\n    elif n % 3 == 2:\n        print(n // 3, n // 3 + 1)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef main():\n    n = inp()\n    for i in range(n):\n        tc = inp()\n        ans2 = round(tc / 3.0)\n        ans1 = tc - 2 * ans2\n        print(ans1, ans2)\nmain()", "import math\nfrom array import *\nc = array('i')\nt = int(input())\nfor z in range(0, t):\n    n = int(input())\n    a = b = math.floor(n / 3)\n    if n - 3 * a == 1:\n        a = a + 1\n    elif n - 3 * a == 0:\n        a = a\n        b = b\n    else:\n        b = b + 1\n    c.extend([a, b])\nfor i in range(0, t):\n    print(c[2 * i], c[1 + 2 * i])", "for _ in range(int(input())):\n    n = int(input())\n    if n % 3 == 0:\n        print(f'{n // 3} {n // 3}')\n    elif n % 3 == 1:\n        print(f'{n // 3 + 1} {n // 3}')\n    else:\n        print(f'{n // 3} {n // 3 + 1}')", "t = int(input())\ns_1 = s_2 = 0\nfor i in range(t):\n    N = int(input())\n    s = N // 3\n    r = N % 3\n    s_2 = s\n    if r >= 2:\n        s_2 = s + r // 2\n        r = r % 2\n    s_1 = s + r\n    print(f'{s_1} {s_2}')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 3 == 1:\n        print(n // 3 + 1, n // 3)\n    elif n % 3 == 2:\n        print(n // 3, n // 3 + 1)\n    else:\n        print(n // 3, n // 3)", "x = int(input())\nc1 = 0\nc2 = 0\nfor i in range(x):\n    n = int(input())\n    if n % 3 == 0:\n        c1 = n // 3\n        c2 = c1\n    elif n % 3 == 1:\n        c2 = n // 3\n        c1 = c2 + 1\n    else:\n        c1 = n // 3\n        c2 = c1 + 1\n    print(c1, c2)", "n = int(input())\nfor i in range(n):\n    x = int(input())\n    a = round(x / 3)\n    b = x - 2 * a\n    print(b, a)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    t = int(n / 3)\n    r = n % 3\n    if r == 0:\n        print(t, t)\n    elif r == 1:\n        print(t + 1, t)\n    else:\n        print(t, t + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 3 == 0:\n        print(n // 3, n // 3)\n    elif n % 3 == 1:\n        print(n // 3 + 1, n // 3)\n    else:\n        print(n // 3, n // 3 + 1)", "for i in range(int(input())):\n    n = int(input())\n    if n % 3 == 0:\n        print(n // 3, n // 3)\n    elif n % 3 == 1:\n        print(n // 3 + 1, n // 3)\n    elif n % 3 == 2:\n        print(n // 3, n // 3 + 1)", "TestCases = int(input(''))\nResults = []\nCounter = 0\n\ndef solve(case):\n    if case % 3 == 0:\n        Results.append(int(case / 3))\n        Results.append(int(case / 3))\n    else:\n        Value1 = int(case / 2 / 1.5)\n        Value2 = Value1 + 1\n        if Value1 + Value2 * 2 == case:\n            Results.append(Value1)\n            Results.append(Value2)\n        else:\n            Results.append(Value2)\n            Results.append(Value1)\nfor c in range(TestCases):\n    case = int(input(''))\n    solve(case)\nfor c in Results:\n    print(c, end=' ')\n    Counter += 1\n    if Counter == 2:\n        print('')\n        Counter = 0", "for t in range(int(input())):\n    n = int(input())\n    a = n // 3\n    b = n // 3\n    co = n % 3\n    if co == 1:\n        print(a + 1, b)\n    elif co == 2:\n        print(a, b + 1)\n    else:\n        print(a, b)", "d = int(input())\nfor i in range(d):\n    n = int(input())\n    quyu = n % 3\n    num = int(n / 3)\n    a = 0\n    b = 0\n    if quyu == 1:\n        a = num + 1\n        b = num\n        print(a, b)\n    elif quyu == 0:\n        a = b = num\n        print(a, b)\n    elif quyu == 2:\n        a = num\n        b = num + 1\n        print(a, b)", "t = int(input())\nwhile t:\n    num = int(input())\n    k = num // 3\n    l = num // 3 + 1\n    if num == 1:\n        print('1', '0')\n    if num == 2:\n        print('0', '1')\n    elif num > 3 and num % 3 != 0:\n        if k + 2 * l == num:\n            print(k, l)\n        elif l + 2 * k == num:\n            print(l, k)\n    elif num >= 3 and num % 3 == 0:\n        print(k, k)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    two = n // 3\n    if n % 3 == 2:\n        two += 1\n    one = n - two * 2\n    print(one, two)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 3 == 0:\n        print(n // 3, n // 3)\n    elif n % 3 == 2:\n        print(n // 3, n // 3 + 1)\n    else:\n        print(n // 3 + 1, n // 3)", "import math\nt = int(input())\nfor _ in range(t):\n    a = int(input())\n    if a % 3 == 1:\n        c2 = (a - 1) // 3\n        c1 = a - c2 * 2\n    if a % 3 == 2:\n        c1 = (a - 2) // 3\n        c2 = (a - c1) // 2\n    if a % 3 == 0:\n        c1 = a // 3\n        c2 = a // 3\n    print(f'{c1} {c2}')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    k = n * (1 / 3)\n    if n % 3 == 0:\n        print(int(k), int(k))\n    elif int(k) + 1 + int(k) * 2 == n:\n        print(int(k) + 1, int(k))\n    else:\n        print(int(k), int(k) + 1)", "for i in range(int(input())):\n    n = int(input())\n    c1 = c2 = n // 3\n    if n % 3 == 1:\n        c1 += 1\n    elif n % 3 == 2:\n        c2 += 1\n    print(c1, c2)", "for _ in range(int(input())):\n    n = int(input())\n    if n % 3 == 0:\n        (k1, k2) = (n // 3, n // 3)\n    elif n % 3 == 1:\n        (k1, k2) = (n // 3 + 1, n // 3)\n    else:\n        (k1, k2) = (n // 3, n // 3 + 1)\n    print(k1, k2)", "for t in range(int(input())):\n    n = int(input())\n    j1 = (n - 2) // 3\n    j2 = (n + 2) // 3\n    j3 = n // 3\n    if j2 + (j2 - 1) * 2 == n:\n        print(j2, j2 - 1)\n    elif j2 + (j2 + 1) * 2 == n:\n        print(j2, j2 + 1)\n    elif j3 + j3 * 2 == n:\n        print(j3, j3)\n    elif j1 + (j1 + 1) * 2 == n:\n        print(j1, j1 + 1)", "import math\nfor i in range(int(input())):\n    n = int(input())\n    c1 = math.ceil(n / 3)\n    c2 = math.floor(n / 3)\n    if c1 + 2 * c2 == n:\n        print(c1, c2)\n    else:\n        print(c2, c1)", "t = int(input())\nfor i in range(t):\n    x = int(input())\n    if x % 3 == 0:\n        print(int(x / 3), int(x / 3))\n    elif x % 3 == 1:\n        print(int(x / 3) + 1, int(x / 3))\n    else:\n        print(int(x / 3), int(x / 3) + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 3 == 1:\n        print(n // 3 + 1, n // 3)\n    elif n % 3 == 2:\n        print(n // 3, n // 3 + 1)\n    else:\n        print(n // 3, n // 3)", "def solve():\n    n = int(input())\n    if n % 3 == 0:\n        print(n // 3, n // 3)\n    elif n % 3 == 1:\n        print(n // 3 + 1, n // 3)\n    else:\n        print(n // 3, n // 3 + 1)\n\ndef main():\n    for _ in range(int(input())):\n        solve()\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    count = int(1 / 3 * n)\n    if count * 1 + count * 2 == n:\n        print('{} {}'.format(count, count))\n    elif (count + 1) * 1 + count * 2 == n:\n        print('{} {}'.format(count + 1, count))\n    else:\n        print('{} {}'.format(count, count + 1))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    count = int(1 / 3 * n)\n    if count * 1 + count * 2 == n:\n        print('{} {}'.format(count, count))\n    elif (count + 1) * 1 + count * 2 == n:\n        print('{} {}'.format(count + 1, count))\n    else:\n        print('{} {}'.format(count, count + 1))", "import math\nn = int(input())\nfor i in range(n):\n    a = int(input())\n    b = a / 3\n    if math.ceil(b) * 2 + int(b) == a:\n        print(int(b), math.ceil(b))\n    else:\n        print(math.ceil(b), int(b))", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    print(a // 3 + (a % 3 == 1), a // 3 + (a % 3 == 2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n % 3 == 0:\n        print(n // 3, n // 3)\n    elif n % 3 == 2:\n        print(n // 3, n // 3 + 1)\n    else:\n        print(n // 3 + 1, n // 3)", "import collections as cc\nimport bisect as bi\nimport heapq as hp\nimport math as mt\nimport itertools as it\nimport sys\ninput = sys.stdin.readline\nI = lambda : list(map(int, input().split()))\nfor tc in range(int(input())):\n    (n,) = I()\n    a = n // 3\n    b = n // 3\n    if n % 3 == 1:\n        a += 1\n    if n % 3 == 2:\n        b += 1\n    print(a, b)"]