["import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0] * (n + 2)\n    sp = 0\n    sn = 0\n    for i in range(1, n):\n        b[i] = a[i] - a[i - 1]\n        if b[i] < 0:\n            sn += b[i]\n        else:\n            sp += b[i]\n    b[0] = a[0]\n    print((b[0] + sp + 1) // 2)\n    for q in range(int(input())):\n        (l, r, x) = map(int, input().split())\n        if l > 1:\n            if b[l - 1] >= 0:\n                sp -= b[l - 1]\n            b[l - 1] += x\n            if b[l - 1] >= 0:\n                sp += b[l - 1]\n        else:\n            b[l - 1] += x\n        if r < n:\n            if b[r] >= 0:\n                sp -= b[r]\n            b[r] -= x\n            if b[r] >= 0:\n                sp += b[r]\n        else:\n            b[r] -= x\n        print((b[0] + sp + 1) // 2)\nsolve()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0] * (n + 2)\n    sp = 0\n    for i in range(1, n):\n        b[i] = a[i] - a[i - 1]\n        if b[i] > 0:\n            sp += b[i]\n    b[0] = a[0]\n    print((b[0] + sp + 1) // 2)\n    for q in range(int(input())):\n        (l, r, x) = map(int, input().split())\n        if l > 1:\n            if b[l - 1] > 0:\n                sp -= b[l - 1]\n            b[l - 1] += x\n            if b[l - 1] > 0:\n                sp += b[l - 1]\n        else:\n            b[l - 1] += x\n        if r < n:\n            if b[r] > 0:\n                sp -= b[r]\n            b[r] -= x\n            if b[r] > 0:\n                sp += b[r]\n        else:\n            b[r] -= x\n        print((b[0] + sp + 1) // 2)\nsolve()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0] * (n + 2)\n    sp = 0\n    sn = 0\n    for i in range(1, n):\n        b[i] = a[i] - a[i - 1]\n        if b[i] < 0:\n            sn += b[i]\n        else:\n            sp += b[i]\n    b[0] = a[0]\n    print((b[0] + sp + 1) // 2)\n    for q in range(int(input())):\n        (l, r, x) = map(int, input().split())\n        if l > 1:\n            if b[l - 1] < 0:\n                sn -= b[l - 1]\n            else:\n                sp -= b[l - 1]\n            b[l - 1] += x\n            if b[l - 1] < 0:\n                sn += b[l - 1]\n            else:\n                sp += b[l - 1]\n        else:\n            b[l - 1] += x\n        if r < n:\n            if b[r] < 0:\n                sn -= b[r]\n            else:\n                sp -= b[r]\n            b[r] -= x\n            if b[r] < 0:\n                sn += b[r]\n            else:\n                sp += b[r]\n        else:\n            b[r] -= x\n        print((b[0] + sp + 1) // 2)\nsolve()", "from sys import stdin\nn = int(stdin.readline())\na = [int(x) for x in stdin.readline().split()]\nprev = a[0]\ndiff = [prev]\nbsum = prev\nfor el in a[1:]:\n    d = el - prev\n    diff.append(d)\n    if d > 0:\n        bsum += d\n    prev = el\nprint((bsum + 1) // 2)\nq = int(stdin.readline())\nfor _ in range(q):\n    (l, r, w) = [int(x) for x in stdin.readline().split()]\n    if l == 1:\n        bsum += w\n        diff[l - 1] += w\n    else:\n        if diff[l - 1] > 0:\n            bsum -= diff[l - 1]\n        diff[l - 1] += w\n        if diff[l - 1] > 0:\n            bsum += diff[l - 1]\n    if r < n:\n        if diff[r] > 0:\n            bsum -= diff[r]\n        diff[r] -= w\n        if diff[r] > 0:\n            bsum += diff[r]\n    print((bsum + 1) // 2)", "import sys\n\ndef calc(a0, db, dc):\n    b0 = (a0 - db) // 2\n    c0 = a0 - b0\n    c1 = (a0 - dc) // 2\n    b1 = a0 - c1\n    return min(max(b0 + db, c0), max(b1 + db, c1))\n\ndef main():\n    n = int(input())\n    A = [int(a) for a in input().split()]\n    D = [A[i + 1] - A[i] for i in range(n - 1)]\n    a0 = A[0]\n    db = sum(filter(lambda d: d > 0, D))\n    dc = sum(filter(lambda d: d < 0, D))\n    q = int(input())\n    ans = [calc(a0, db, dc)]\n    for i in range(q):\n        (l, r, x) = map(int, input().split())\n        if l > 1:\n            if D[l - 2] < 0:\n                dc -= D[l - 2]\n            else:\n                db -= D[l - 2]\n            D[l - 2] += x\n            if D[l - 2] < 0:\n                dc += D[l - 2]\n            else:\n                db += D[l - 2]\n        if r < n:\n            if D[r - 1] < 0:\n                dc -= D[r - 1]\n            else:\n                db -= D[r - 1]\n            D[r - 1] -= x\n            if D[r - 1] < 0:\n                dc += D[r - 1]\n            else:\n                db += D[r - 1]\n        if l == 1:\n            a0 += x\n        ans.append(calc(a0, db, dc))\n    print('\\n'.join(map(str, ans)))\nmain()", "import sys\ninput = sys.stdin.readline\nimport math\nn = int(input())\nnum = list(map(int, input().split()))\nfirst = num[0]\ndiff = []\nfor i in range(n - 1):\n    diff.append(num[i + 1] - num[i])\nplus = 0\nfor j in diff:\n    if j > 0:\n        plus += j\nprint(math.ceil((first + plus) / 2))\nq = int(input())\nfor k in range(q):\n    (l, r, x) = map(int, input().split())\n    if l != 1:\n        check_1 = diff[l - 2]\n        diff[l - 2] += x\n        if check_1 > 0 and diff[l - 2] > 0:\n            plus += x\n        elif check_1 > 0 and diff[l - 2] <= 0:\n            plus -= check_1\n        elif check_1 <= 0 and diff[l - 2] > 0:\n            plus += diff[l - 2]\n    if l == 1:\n        first += x\n    if r != len(num):\n        check_2 = diff[r - 1]\n        diff[r - 1] -= x\n        if check_2 > 0 and diff[r - 1] > 0:\n            plus -= x\n        elif check_2 > 0 and diff[r - 1] <= 0:\n            plus -= check_2\n        elif check_2 <= 0 and diff[r - 1] > 0:\n            plus += diff[r - 1]\n    print(math.ceil((first + plus) / 2))", "import sys\nsys.setrecursionlimit(10 ** 5)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\nn = II()\naa = LI()\ndd = [0] * n\ns = 0\nfor i in range(n - 1):\n    dd[i + 1] = aa[i + 1] - aa[i]\nfor d in dd:\n    if d > 0:\n        s += d\nb0 = (aa[0] - s) // 2\nprint(max(b0 + s, aa[0] - b0))\n\ndef add(i, a, s):\n    if i == 0:\n        aa[0] += a\n        return s\n    if dd[i] > 0:\n        s -= dd[i]\n    dd[i] += a\n    if dd[i] > 0:\n        s += dd[i]\n    return s\nfor _ in range(II()):\n    (l, r, x) = MI()\n    l -= 1\n    s = add(l, x, s)\n    if r < n:\n        s = add(r, -x, s)\n    b0 = (aa[0] - s) // 2\n    print(max(b0 + s, aa[0] - b0))", "n = int(input())\naa = list(map(int, input().split()))\ndd = [0] * n\ns = 0\nfor i in range(n - 1):\n    dd[i + 1] = aa[i + 1] - aa[i]\nfor d in dd:\n    if d > 0:\n        s += d\nb0 = (aa[0] - s) // 2\nprint(max(b0 + s, aa[0] - b0))\n\ndef add(i, a, s):\n    if i == 0:\n        aa[0] += a\n        return s\n    if dd[i] > 0:\n        s -= dd[i]\n    dd[i] += a\n    if dd[i] > 0:\n        s += dd[i]\n    return s\nfor _ in range(int(input())):\n    (l, r, x) = map(int, input().split())\n    l -= 1\n    s = add(l, x, s)\n    if r < n:\n        s = add(r, -x, s)\n    b0 = (aa[0] - s) // 2\n    print(max(b0 + s, aa[0] - b0))", "n = int(input())\na = list(map(int, input().split()))\npre_delta = [0] * n\nup_delta = 0\nfor i in range(1, n):\n    pre_delta[i] = a[i] - a[i - 1]\n    if pre_delta[i] > 0:\n        up_delta += pre_delta[i]\nans = (up_delta + a[0] + 1) // 2\nprint(ans)\nq = int(input())\nfor _ in range(q):\n    (l, r, x) = map(int, input().split())\n    if l == 1:\n        a[0] += x\n    else:\n        if pre_delta[l - 1] > 0:\n            up_delta -= pre_delta[l - 1]\n        pre_delta[l - 1] += x\n        if pre_delta[l - 1] > 0:\n            up_delta += pre_delta[l - 1]\n    if r < n:\n        if pre_delta[r] > 0:\n            up_delta -= pre_delta[r]\n        pre_delta[r] -= x\n        if pre_delta[r] > 0:\n            up_delta += pre_delta[r]\n    ans = (up_delta + a[0] + 1) // 2\n    print(ans)", "import sys\nsys.setrecursionlimit(10 ** 5)\nn = int(input())\naa = list(map(int, input().split()))\ndd = [0] * n\ns = 0\nfor i in range(n - 1):\n    dd[i + 1] = aa[i + 1] - aa[i]\nfor d in dd:\n    if d > 0:\n        s += d\nb0 = (aa[0] - s) // 2\nprint(max(b0 + s, aa[0] - b0))\n\ndef add(i, a, s):\n    if i == 0:\n        aa[0] += a\n        return s\n    if dd[i] > 0:\n        s -= dd[i]\n    dd[i] += a\n    if dd[i] > 0:\n        s += dd[i]\n    return s\nfor _ in range(int(input())):\n    (l, r, x) = map(int, input().split())\n    l -= 1\n    s = add(l, x, s)\n    if r < n:\n        s = add(r, -x, s)\n    b0 = (aa[0] - s) // 2\n    print(max(b0 + s, aa[0] - b0))", "n = int(input())\naa = list(map(int, input().split()))\ndd = [0] * n\ns = 0\nfor i in range(n - 1):\n    dd[i + 1] = aa[i + 1] - aa[i]\nfor d in dd:\n    if d > 0:\n        s += d\nb0 = (aa[0] - s) // 2\nprint(max(b0 + s, aa[0] - b0))\n\ndef add(i, a, s):\n    if i == 0:\n        aa[0] += a\n        return s\n    if dd[i] > 0:\n        s -= dd[i]\n    dd[i] += a\n    if dd[i] > 0:\n        s += dd[i]\n    return s\nfor _ in range(int(input())):\n    (l, r, x) = map(int, input().split())\n    l -= 1\n    s = add(l, x, s)\n    if r < n:\n        s = add(r, -x, s)\n    b0 = (aa[0] - s) // 2\n    print(max(b0 + s, aa[0] - b0))", "n = int(input())\naa = list(map(int, input().split()))\ndd = [0] * n\ns = 0\nfor i in range(n - 1):\n    dd[i + 1] = aa[i + 1] - aa[i]\nfor d in dd:\n    if d > 0:\n        s += d\nb0 = (aa[0] - s) // 2\nprint(max(b0 + s, aa[0] - b0))\n\ndef add(i, a, s):\n    if i == 0:\n        aa[0] += a\n        return s\n    if dd[i] > 0:\n        s -= dd[i]\n    dd[i] += a\n    if dd[i] > 0:\n        s += dd[i]\n    return s\nfor _ in range(int(input())):\n    (l, r, x) = map(int, input().split())\n    l -= 1\n    s = add(l, x, s)\n    if r < n:\n        s = add(r, -x, s)\n    b0 = (aa[0] - s) // 2\n    print(max(b0 + s, aa[0] - b0))", "n = int(input())\naa = list(map(int, input().split()))\ndd = [0] * n\ns = 0\nfor i in range(n - 1):\n    dd[i + 1] = aa[i + 1] - aa[i]\nfor d in dd:\n    if d > 0:\n        s += d\nb0 = (aa[0] - s) // 2\nprint(max(b0 + s, aa[0] - b0))\n\ndef add(i, a, s):\n    if i == 0:\n        aa[0] += a\n        return s\n    if dd[i] > 0:\n        s -= dd[i]\n    dd[i] += a\n    if dd[i] > 0:\n        s += dd[i]\n    return s\nfor _ in range(int(input())):\n    (l, r, x) = map(int, input().split())\n    l -= 1\n    s = add(l, x, s)\n    if r < n:\n        s = add(r, -x, s)\n    b0 = (aa[0] - s) // 2\n    print(max(b0 + s, aa[0] - b0))", "n = int(input())\na = [int(i) for i in input().split()]\nd = [a[i + 1] - a[i] for i in range(n - 1)]\ndif = sum([max(v, 0) for v in d])\nprint((a[0] - dif + 1) // 2 + dif)\nfor k in range(int(input())):\n    (l, r, x) = [int(i) for i in input().split()]\n    (l, r) = (l - 1, r - 1)\n    if l == 0:\n        a[0] += x\n    if l > 0:\n        dif -= max(0, d[l - 1])\n        d[l - 1] += x\n        dif += max(0, d[l - 1])\n    if r < n - 1:\n        dif -= max(0, d[r])\n        d[r] -= x\n        dif += max(0, d[r])\n    print((a[0] - dif + 1) // 2 + dif)", "import math\nn = int(input())\nnum = list(map(int, input().split()))\nfirst = num[0]\ndiff = []\nfor i in range(n - 1):\n    diff.append(num[i + 1] - num[i])\nplus = 0\nfor j in diff:\n    if j > 0:\n        plus += j\nprint(math.ceil((first + plus) / 2))\nq = int(input())\nfor k in range(q):\n    (l, r, x) = map(int, input().split())\n    if l != 1:\n        check_1 = diff[l - 2]\n        diff[l - 2] += x\n        if check_1 > 0 and diff[l - 2] > 0:\n            plus += x\n        elif check_1 > 0 and diff[l - 2] <= 0:\n            plus -= check_1\n        elif check_1 <= 0 and diff[l - 2] > 0:\n            plus += diff[l - 2]\n    if l == 1:\n        first += x\n    if r != len(num):\n        check_2 = diff[r - 1]\n        diff[r - 1] -= x\n        if check_2 > 0 and diff[r - 1] > 0:\n            plus -= x\n        elif check_2 > 0 and diff[r - 1] <= 0:\n            plus -= check_2\n        elif check_2 <= 0 and diff[r - 1] > 0:\n            plus += diff[r - 1]\n    print(math.ceil((first + plus) / 2))", "n = int(input())\na = list(map(int, input().split()))\nq = int(input())\nb = [0] * n\nc = [0] * n\ndifn = 0\ndiff = [0] * n\nfor i in range(1, n):\n    if a[i] - a[i - 1] > 0:\n        difn += a[i] - a[i - 1]\n    diff[i] = a[i] - a[i - 1]\nbo = (a[0] - difn) // 2\nans = max(bo + difn, a[0] - bo)\nprint(ans)\ntd = difn\nfor i in range(q):\n    (l, r, x) = map(int, input().split())\n    if l != 1:\n        if diff[l - 1] + x > 0:\n            td -= max(0, diff[l - 1])\n            diff[l - 1] = diff[l - 1] + x\n            td += diff[l - 1]\n        else:\n            td = td - max(0, diff[l - 1])\n            diff[l - 1] = diff[l - 1] + x\n    elif l == 1:\n        a[0] += x\n    if r != n:\n        if diff[r] - x > 0:\n            td -= max(0, diff[r])\n            diff[r] = diff[r] - x\n            td += diff[r]\n        else:\n            td = td - max(0, diff[r])\n            diff[r] = diff[r] - x\n    bo = (a[0] - td) // 2\n    ans = max(bo + td, a[0] - bo)\n    print(ans)"]