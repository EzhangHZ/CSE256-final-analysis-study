["for p in range(int(input())):\n    (a, b) = map(int, input().split())\n    k = list(input())\n    if k.count('*') == 1:\n        print(1)\n    elif k.count('*') == 2:\n        print(2)\n    else:\n        l = []\n        for i in range(a):\n            if k[i] == '*':\n                l.append(i)\n        r = 2\n        if l[-1] - l[0] <= b:\n            print(r)\n        else:\n            (p1, p2, f) = (0, 0, 0)\n            while 1:\n                while l[p1 + 1] - l[p2] <= b:\n                    p1 += 1\n                    if p1 == len(l) - 1:\n                        f = 1\n                        break\n                (p2, p1) = (p1, p1)\n                if f:\n                    break\n                else:\n                    r += 1\n            print(r)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    f = s.find('*')\n    l = s.rfind('*')\n    if f == l:\n        print(1)\n    else:\n        ans = 2\n        while l - f > k:\n            f = s[:f + k + 1].rfind('*')\n            ans += 1\n        print(ans)", "def partialReplacement(n, k, string):\n    string = list(string)\n    stars = []\n    for x in range(n):\n        if string[x] == '*':\n            stars.append(x)\n    if len(stars) in (0, 1, 2):\n        return len(stars)\n    ans = 2\n    x = 0\n    while x < len(stars):\n        if stars[x] + k >= stars[-1]:\n            return ans\n        y = x\n        while stars[x] + k > stars[y]:\n            y += 1\n        if stars[x] + k < stars[y]:\n            y -= 1\n        x = y\n        ans += 1\n    return ans\nt = int(input())\nfinal = []\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    string = input()\n    final.append(partialReplacement(n, k, string))\nfor _ in range(t):\n    print(final[_])", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input().rstrip()\n    if s.count('*') == 1:\n        print(1)\n    else:\n        idx1 = idx2 = -1\n        for i in range(n):\n            if s[i] == '*':\n                idx1 = i\n                break\n        for i in range(n - 1, -1, -1):\n            if s[i] == '*':\n                idx2 = i\n                break\n        c = 1\n        i = 0\n        idx = idx1\n        while True:\n            idx = s.rfind('*', idx + 1, min(idx + k, n - 1) + 1)\n            if idx == -1:\n                break\n            else:\n                c += 1\n        print(c)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = input()[:-1]\n    (i, j, c, d) = (w.index('*'), w.rindex('*'), 0, 0)\n    while True:\n        if w[i] == '*':\n            i += k\n            c += 1\n            d = 0\n            if i >= n:\n                c += i - k != j\n                break\n        else:\n            i -= 1\n            d += 1\n            if d == k:\n                break\n    print(c)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    c = 1\n    f = s.find('*')\n    while f < s.rfind('*'):\n        f = s.rfind('*', f, f + k + 1)\n        c += 1\n    print(c)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    var = 1\n    ind = s.index('*')\n    last = 0\n    s = s[0:ind] + 'X' + s[ind + 1:n]\n    for p in range(n - 1, -1, -1):\n        if s[p] == '*' and ind != p:\n            s = s[0:p] + 'X' + s[p + 1:n]\n            last = p\n            var += 1\n            break\n    while ind + k < last:\n        for j in range(ind + k, ind, -1):\n            if s[j] == 'X':\n                break\n            if s[j] == '*':\n                ind = j\n                s = s[0:ind] + 'X' + s[ind + 1:n]\n                var += 1\n                break\n    print(var)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    f = s.find('*')\n    l = s.rfind('*')\n    if f == l:\n        print(1)\n    else:\n        c = 2\n        while l - f > k:\n            f = s[:f + k + 1].rfind('*')\n            c += 1\n        print(c)", "__version__ = '0.1'\n__date__ = '2021-03-25'\nimport sys\n\ndef solve(n, k, s) -> int:\n    for i in range(n):\n        if s[i] == '*':\n            left = i\n            break\n    for i in range(n - 1, -1, -1):\n        if s[i] == '*':\n            right = i\n            break\n    if left == right:\n        return 1\n    ans = 2\n    curr = left\n    while curr + k < right:\n        for step in range(k, 0, -1):\n            if s[curr + step] == '*':\n                curr += step\n                ans += 1\n                break\n    return ans\n\ndef main(argv=None):\n    t = int(input())\n    for _ in range(t):\n        (n, k) = map(int, input().split())\n        s = input()\n        print(solve(n, k, s))\n    return 0\nSTATUS = main()\nsys.exit(STATUS)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = map(int, input().split(' '))\n    l1 = list(input())\n    count = 0\n    i1 = 0\n    i2 = 0\n    for i in range(n):\n        if l1[i] == '*':\n            l1[i] = 'x'\n            count += 1\n            i1 = i\n            break\n    for i in range(n - 1, -1, -1):\n        if l1[i] == '*':\n            l1[i] = 'x'\n            count += 1\n            i2 = i\n            break\n    temp = i1\n    while temp + k < i2 and temp < n:\n        for i in range(temp + k, temp, -1):\n            if l1[i] == '*':\n                l1[i] = 'x'\n                count += 1\n                temp = i\n                break\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(s) for s in input().split(' ')]\n    s = input()\n    s = list(s)\n    ans = 0\n    for i in range(len(s)):\n        if s[i] == '*':\n            s[i] = 'x'\n            ans += 1\n            break\n    for i in range(len(s) - 1, 0, -1):\n        if s[i] == '*':\n            s[i] = 'x'\n            ans += 1\n            break\n    index = []\n    for i in range(len(s)):\n        if s[i] == '*':\n            index.append(i)\n        elif s[i] == 'x':\n            index.append(i)\n    st = index[0]\n    lst = st\n    for i in range(1, len(index)):\n        if index[i] - st <= k:\n            lst = index[i]\n        else:\n            ans += 1\n            st = lst\n            lst = index[i]\n    print(ans)", "t = int(input())\nfor tt in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    l = 0\n    while s[l] != '*':\n        l += 1\n    r = n - 1\n    while s[r] != '*':\n        r -= 1\n    if l == r:\n        print(1)\n    else:\n        ans = 2\n        i = l\n        while i < r:\n            i += k\n            while i < r and s[i] != '*':\n                i -= 1\n            ans += 1 * (i < r)\n        print(ans)", "import sys\nimport math\nt = int(input())\n\ndef solve(n, k, x):\n    ans = 1\n    l = x.index('*')\n    r = x.rindex('*')\n    i = l\n    while i < r:\n        substr = x[i:i + k + 1]\n        ans = ans + 1\n        nexti = i + substr.rindex('*')\n        if nexti == i or nexti == r:\n            break\n        i = nexti\n    return ans\nfor i in range(t):\n    s = input()\n    w = input()\n    [n, m] = [int(x) for x in s.split()]\n    print(solve(n, m, w))", "import math\n\ndef get_inp():\n    return list(map(int, input().split()))\n\ndef solve():\n    (n, k) = get_inp()\n    s = input()\n    i = 0\n    cnt = 0\n    while i < len(s):\n        j = i\n        if s[i] == '*':\n            cnt += 1\n            j = min(i + k, len(s) - 1)\n            while j > i:\n                if s[j] == '*':\n                    i = j - 1\n                    break\n                j -= 1\n        i += 1\n    return cnt\ntc = int(input())\nfor _ in range(tc):\n    print(solve())", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    l = list(s)\n    flag = 0\n    for i in range(n):\n        if l[i] == '*':\n            if flag == 0:\n                flag = 1\n                start = i\n            end = i\n    l[start] = 'x'\n    last = start\n    c = 1\n    while last < end:\n        j = 0\n        i = last + 1\n        m = -1\n        while j < k and i < n:\n            if l[i] == '*':\n                m = i\n            j += 1\n            i += 1\n        last = m\n        c += 1\n    print(c)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    p = list(reversed(s))\n    a = [x for x in s]\n    b = n - p.index('*') - 1\n    m = a.index('*')\n    if b == m:\n        count = 1\n    else:\n        count = 2\n    i = m\n    while i < b - k:\n        q = list(reversed(a[i:i + k + 1]))\n        i += k - q.index('*')\n        count += 1\n    print(count)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    last = -1\n    prev = 99999999999\n    ans = 0\n    for (i, symb) in enumerate(s):\n        if symb == '*':\n            if prev == 99999999999:\n                prev = i\n                ans += 1\n            last = i\n        if i - prev >= k and prev != last:\n            prev = last\n            ans += 1\n    if last != prev:\n        ans += 1\n    print(ans)", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    first = 0\n    last = n - 1\n    S = []\n    for el in s:\n        if el == '.':\n            S.append(0)\n        else:\n            S.append(1)\n    for (idx, el) in enumerate(S):\n        if el == 1:\n            first = idx\n            break\n    for i in range(n - 1, -1, -1):\n        if S[i] == 1:\n            last = i\n            break\n    S[first] = 2\n    S[last] = 2\n    here = first\n    cnt = 2\n    if first == last:\n        cnt -= 1\n    done = False\n    while not done:\n        here = min(here, n - k - 1)\n        for i in range(here + k, here - 1, -1):\n            if S[i] == 1:\n                here = i\n                S[i] = 2\n                cnt += 1\n                break\n            elif S[i] == 2:\n                done = True\n                break\n    print(cnt)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    p = list(reversed(s))\n    a = [x for x in s]\n    b = n - p.index('*') - 1\n    m = a.index('*')\n    count = 1 if b == m else 2\n    i = m\n    while i < b - k:\n        ans = list(reversed(a[i:i + k + 1]))\n        i += k - ans.index('*')\n        count += 1\n    print(count)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    s = input()\n    a = []\n    for i in range(len(s)):\n        if s[i] == '*':\n            a.append(i)\n    if len(a) < 3:\n        print(len(a))\n    else:\n        i = 0\n        count = 0\n        while i < len(a) - 1:\n            j = i\n            while j < len(a) and a[j] <= a[i] + k:\n                j += 1\n            count += 1\n            i = j - 1\n        print(count + 1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    sim = -1\n    h = 0\n    count = 0\n    for i in range(n):\n        if sim == -1 and s[i] == '*':\n            count += 1\n            sim = i\n        if s[i] == '*':\n            h = i\n        if i - sim >= k and sim != -1 and (sim != h):\n            sim = h\n            count += 1\n    if h != sim:\n        count += 1\n    print(count)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    start = s.index('*')\n    ans = 1\n    while True:\n        try:\n            start = s[start + 1:start + k + 1].rindex('*') + start + 1\n            ans += 1\n        except:\n            break\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    i = 0\n    ans = 0\n    while i < n:\n        if s[i] == '*':\n            dis = k\n            ans += 1\n            while (i + dis >= n or s[i + dis] != '*') and dis > 0:\n                dis -= 1\n            if dis == 0:\n                break\n            i += dis\n        else:\n            i += 1\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    (l, k) = map(int, input().split())\n    first = None\n    last = None\n    s = list(input())\n    for i in range(l):\n        if s[i] == '*':\n            first = i\n            s[i] = 'x'\n            break\n    for i in reversed(range(l)):\n        if s[i] == '*':\n            last = i\n            s[i] = 'x'\n            break\n    if first is not None and last is not None:\n        while last - first > k:\n            for i in range(first + 1, last + 1):\n                if s[i] == '*' and i - first <= k:\n                    new = i\n                if i - first > k:\n                    break\n            s[new] = 'x'\n            first = new\n    print(s.count('x'))", "def ii():\n    return int(input())\n\ndef li():\n    return [int(i) for i in input().split()]\nfor t in range(ii()):\n    (n, k) = li()\n    s = input()\n    prev = -1\n    last = -1\n    for i in range(n):\n        if s[i] == '*':\n            prev = i\n            break\n    for i in range(n - 1, -1, -1):\n        if s[i] == '*':\n            last = i\n            break\n    total = 1\n    if last != prev:\n        total = 2\n    cnt = 0\n    index = prev\n    while index + k < last:\n        for i in range(index + k, index, -1):\n            if s[i] == '*':\n                total += 1\n                index = i\n                break\n    print(total)", "for i in range(int(input())):\n    nk = input().split()\n    n = int(nk[0])\n    k = int(nk[1])\n    s = input()\n    if s.count('*') < 3:\n        print(s.count('*'))\n    else:\n        count = 2\n        i = s.index('*')\n        s = s[::-1]\n        j = s.index('*')\n        j = n - 1 - j\n        s = s[::-1]\n        while i < j - k:\n            for x in range(i + k, i, -1):\n                if s[x] == '*':\n                    count += 1\n                    i = x\n                    break\n        print(count)", "def solve():\n    for i in range(int(input())):\n        (m, k) = [int(i) for i in input().split()]\n        s = input().strip('.')\n        extra = 0\n        dist = -1\n        c = 1\n        for p in range(len(s)):\n            if s[p] == '*':\n                extra = 0\n            else:\n                extra += 1\n            dist += 1\n            if dist == k:\n                c += 1\n                dist = extra\n        if dist != 0:\n            c += 1\n        print(c)\nsolve()", "for _ in range(int(input())):\n    (r, c) = list(map(int, input().split()))\n    s = input()\n    k = 0\n    d = 0\n    for i in range(r):\n        if s[i] == '*':\n            k = i\n            d += 1\n            break\n    i = min(k + c, r - 1)\n    while i > k:\n        if s[i] == '*':\n            k = i\n            i = min(i + c, r - 1)\n            d += 1\n        else:\n            i -= 1\n    print(d)", "def partial(n, k, s):\n    first = 0\n    last = n - 1\n    for i in range(n):\n        if s[i] == '*':\n            first = i\n            break\n    for i in range(n - 1, -1, -1):\n        if s[i] == '*':\n            last = i\n            break\n    if first == last:\n        count = 1\n    else:\n        count = 2\n    while first + k < last:\n        for i in range(first + k, first, -1):\n            if i < n and s[i] == s[first]:\n                first = i\n                count += 1\n                break\n    print(count)\ntc = int(input().strip())\nfor t in range(tc):\n    (n, k) = list(map(int, input().strip().split()))\n    s = input()\n    partial(n, k, s)", "import math\nt = int(input())\nfor i in range(0, t):\n    (a, b) = input().split()\n    a = int(a)\n    b = int(b)\n    s = str(input())\n    f = []\n    h = 0\n    for i in range(0, len(s)):\n        if s[i] == '*':\n            f.append(i)\n    if len(f) < 3:\n        print(len(f))\n    else:\n        y = f[0]\n        for j in range(0, len(f)):\n            if f[j] - y > b:\n                h = h + 1\n                y = f[j - 1]\n                j = j - 1\n        print(2 + h)", "from sys import stdin, stdout\n\ndef sree(shan, k):\n    (nR, cR) = (0, 0)\n    while cR <= len(shan) - 2:\n        lR = cR\n        while cR <= len(shan) - 2 and shan[cR + 1] - shan[lR] <= k:\n            cR += 1\n        if cR == lR:\n            return -1\n        if cR <= len(shan) - 2:\n            nR += 1\n    return nR\nfor _ in range(int(stdin.readline())):\n    (n, k) = map(int, stdin.readline().split())\n    s = stdin.readline().strip('\\n')\n    shan = []\n    for i in range(n):\n        if s[i] != '.':\n            shan.append(i)\n    if len(shan) == 1:\n        print(1)\n    else:\n        count = 0\n        i = 0\n        k = sree(shan, k)\n        if k == -1:\n            print(-1)\n        else:\n            print(k + 2)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    li = []\n    cnt = 0\n    for i in s:\n        if i == '*':\n            li.append(cnt)\n        cnt += 1\n    (first, res, stars_length) = (li[0], 1, len(li))\n    for i in range(stars_length):\n        if i == 0:\n            continue\n        if li[i] - first > k:\n            first = li[i - 1]\n            res += 1\n    if stars_length > 1:\n        res += 1\n    print(res)", "for _ in ' ' * int(input()):\n    (n, k) = map(int, input().split())\n    s = input()\n    f = s.find('*')\n    l = s.rfind('*')\n    if f == l:\n        print(1)\n    else:\n        c = 2\n        while l - f > k:\n            f = s[:f + k + 1].rfind('*')\n            c += 1\n        print(c)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = 0\n    s = list(input())\n    for i in range(n):\n        if s[i] == '*':\n            a = i\n            ans += 1\n            break\n    b = a\n    for j in range(n - 1, a, -1):\n        if s[j] == '*':\n            b = j\n            ans += 1\n            break\n    ans1 = ans\n    i = a\n    while i < b:\n        if s[i] == '*':\n            for j in range(i + k, i, -1):\n                if j > n - 1:\n                    continue\n                if s[j] == '*':\n                    if i != a:\n                        ans += 1\n                    i = j\n                    break\n        else:\n            i += 1\n    i = b\n    while i > a:\n        if s[i] == '*':\n            for j in range(i - k, i):\n                if j < 0:\n                    continue\n                if s[j] == '*':\n                    i = j\n                    ans1 += 1\n                    break\n        else:\n            i -= 1\n    print(min(ans1, ans))", "import os\nimport math\nimport sys\nparse_input = lambda : sys.stdin.readline().rstrip('\\r\\n')\n\ndef func(n, k, string):\n    first_ind = string.find('*')\n    last_ind = string.rfind('*')\n    count = 2\n    if first_ind == last_ind:\n        return 1\n    else:\n        i = first_ind\n        while i < last_ind - k:\n            j = k\n            while j > 0:\n                if i + j == last_ind:\n                    return count\n                elif string[i + j] == '*':\n                    count += 1\n                    i += j\n                    j = 0\n                else:\n                    j -= 1\n        return count\nn = 7\nk = 3\ns = '.**.***'\nfunc(n, k, s)\n\ndef main():\n    n_cases = int(parse_input())\n    for i in range(n_cases):\n        (n, k) = [int(i) for i in parse_input().split()]\n        string = parse_input()\n        print(func(n, k, string))\nmain()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    s = input()\n    ans = 0\n    res = [0] * n\n    for i in range(n):\n        if s[i] == '*':\n            res[i] = 'x'\n            break\n    i = n - 1\n    while i >= 0:\n        if s[i] == '*':\n            res[i] = 'x'\n            break\n        i = i - 1\n    for i in range(n):\n        if res[i] == 'x':\n            p = min(n - 1, i + k)\n            while p >= i:\n                if s[p] == '*':\n                    res[p] = 'x'\n                    break\n                p = p - 1\n    ans = res.count('x')\n    print(ans)", "import collections\n\ndef process(n, k, s):\n    res = 1\n    i = s.find('*')\n    while True:\n        j = min(n - 1, i + k)\n        while i < j and s[j] == '.':\n            j -= 1\n        if i == j:\n            break\n        res += 1\n        i = j\n    print(res)\ntcs = int(input())\nfor tc in range(tcs):\n    (n, k) = list(map(int, input().split()))\n    s = input()\n    process(n, k, s)", "t = int(input())\nfor _ in range(t):\n    (n, k) = (int(s) for s in input().split())\n    s = input()\n    i = s.find('*')\n    res = 1\n    while i < n:\n        fragment = s[i + 1:i + k + 1]\n        if '*' not in fragment:\n            break\n        fragment = enumerate(fragment)\n        mx = max(fragment, key=lambda el: (el[1] == '*', el[0]))\n        res += 1\n        i = i + mx[0] + 1\n    print(res)", "import sys\nimport math\ninput = sys.stdin.readline\n\nclass Problem:\n\n    def __init__(self):\n        pass\n\n    def solve(self):\n        ans = 1\n        (n, k) = map(int, input().split())\n        s = input()\n        i = -1\n        for i in range(n):\n            if s[i] == '*':\n                break\n        while i < n - 1:\n            j = min(n - 1, i + k)\n            while j > i and s[j] != '*':\n                j -= 1\n            if j == i:\n                break\n            ans += 1\n            i = j\n        print(ans)\n\ndef main():\n    p = Problem()\n    t = int(input())\n    while t:\n        p.solve()\n        t -= 1\nmain()", "import math\nimport sys\ninf = float('inf')\ninput = sys.stdin.readline\nmod = 10 ** 9 + 7\nfrom collections import Counter\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(input())\n    ans = 1\n    i = arr.index('*')\n    flag = True\n    while flag:\n        j = min(n - 1, i + k)\n        while j > i and arr[j] == '.':\n            j -= 1\n        if i == j:\n            break\n        ans += 1\n        i = j\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    (i, j) = (s.find('*'), s.rfind('*'))\n    if i == j:\n        print(1)\n    else:\n        t = 0\n        while j - i > k:\n            i = s[:i + k + 1].rfind('*')\n            t += 1\n        print(t + 2)", "def find_cell(pat, m):\n    pass\n    first = False\n    count = 0\n    i = 0\n    while i < len(pat):\n        if pat[i] == '*':\n            count += 1\n            k = i + 1\n            l = -1\n            while k < len(pat) and k - i <= m:\n                if pat[k] == '*':\n                    l = k\n                k += 1\n            if l != -1:\n                i = l\n            else:\n                break\n        else:\n            i += 1\n    return count\ns = int(input())\nq = []\nfor i in range(s):\n    sub_q = [int(l) for l in input().strip().split()]\n    pat = input().strip()\n    print(find_cell(pat, sub_q[1]))", "def fun(ls, ms):\n    (n, k) = ms\n    min_index = None\n    star = '*'\n    ans = 1\n    for (i, val) in enumerate(ls):\n        if val == star:\n            min_index = i\n            break\n    while True:\n        j = min(n - 1, i + k)\n        while i < j and ls[j] == '.':\n            j -= 1\n        if i == j:\n            break\n        i = j\n        ans += 1\n    print(ans)\nT = int(input())\nfor i in range(T):\n    ms = list(map(int, input().split()))\n    st = input()\n    fun(st, ms)", "t = int(input())\nfor _ in range(t):\n    nk = input().split()\n    n = int(nk[0])\n    k = int(nk[1])\n    a = input()\n    c = a.index('*')\n    b = a.rindex('*')\n    cnt = 2\n    if c == b:\n        print(1)\n    else:\n        while b - c > k:\n            c = a[:c + k + 1].rindex('*')\n            cnt += 1\n        print(cnt)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    f = s.find('*')\n    l = s.rfind('*')\n    if f == l:\n        print(1)\n    else:\n        c = 2\n        f1 = 0\n        while l - f > k:\n            f1 = s[:f + k + 1].rfind('*')\n            if f1 == f:\n                break\n            else:\n                f = f1\n                c += 1\n        print(c)", "def main():\n    (n, k) = [int(x) for x in input().split()]\n    s = input()\n    res = 1\n    i = s.find('*')\n    while True:\n        j = min(n - 1, i + k)\n        while i < j and s[j] == '.':\n            j -= 1\n        if i == j:\n            break\n        else:\n            res += 1\n            i = j\n    print(res)\n    return\nt = int(input())\nfor i in range(t):\n    main()", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    s = list(s)\n    val = s.count('*')\n    if val <= 2:\n        print(val)\n    else:\n        pehla = s.index('*')\n        j = pehla\n        cnt = 1\n        while j < n:\n            tmp = min(j + k, n - 1)\n            flg = 1\n            while tmp > j:\n                if s[tmp] == '*':\n                    j = tmp\n                    cnt += 1\n                    flg = 0\n                    break\n                else:\n                    tmp -= 1\n            if flg:\n                break\n        print(cnt)", "from math import floor\n\ndef pc(s, cp, k):\n    for i in range(min(len(s) - 1, cp + k), cp, -1):\n        if s[i] == '*':\n            return i\n    return cp\nn = int(input())\nfor v in range(n):\n    (n, k) = map(int, input().split(' '))\n    s = input()\n    f = s.find('*')\n    n = s.rfind('*', f, f + k + 1)\n    a = 1\n    while f != n and n != -1:\n        a = a + 1\n        f = n\n        n = s.rfind('*', f, f + k + 1)\n    print(a)", "t = int(input().strip())\n\ndef doOne(s, k):\n    nxt = s.index('X')\n    if nxt >= k:\n        pos = k - 1\n        while s[pos] != '*':\n            pos -= 1\n        return (s[pos + 1:], 1)\n    return (s[nxt + 1:], 0)\nfor _ in range(t):\n    (n, k) = map(int, input().strip().split())\n    s = input().strip().strip('.')\n    if len(s) <= 2:\n        print(len(s))\n        continue\n    s = s[1:len(s) - 1] + 'X'\n    ans = 2\n    while True:\n        (s, a) = doOne(s, k)\n        ans += a\n        if len(s) == 0:\n            break\n    print(ans)", "import sys\ntc = int(sys.stdin.readline().rstrip())\nfor _ in range(tc):\n    (n, k) = map(int, sys.stdin.readline().split())\n    s = sys.stdin.readline().rstrip()\n    start = s.find('*')\n    end = s.rfind('*')\n    s = list(s)\n    s[start] = s[end] = 'x'\n    cnt = 0\n    if start != end:\n        cnt = 2\n    if start == end:\n        cnt = 1\n    while start < end:\n        star = 0\n        dist = start + k + 1\n        flag = True\n        for i in range(start + 1, min(n, dist)):\n            if s[i] == '*':\n                star = i\n            if s[i] == 'x':\n                flag = False\n        if star and flag:\n            s[star] = 'x'\n            start = star\n            cnt += 1\n        else:\n            start = i\n    print(cnt)", "def ass(a, b):\n    print(f'Assertion error: {a} != {b}' if a != b else 'OK')\n\ndef nr():\n    return int(input())\n\ndef nrs():\n    return [int(i) for i in input().split()]\n\ndef nrss(n):\n    return [nrs() for _ in range(n)]\n\ndef word():\n    return input()\n\ndef words():\n    return [w for w in input().split()]\n\ndef f(k, s):\n    first = s.index('*')\n    last = s.rindex('*')\n    arr = list(s)\n    arr[first] = 'x'\n    antal = 1\n    if first == last:\n        return antal\n    arr[last] = 'x'\n    antal += 1\n    i = first\n    while i < len(arr) - 1:\n        for j in range(i + k, i, -1):\n            if j < len(arr):\n                if arr[j] == '*':\n                    arr[j] = 'x'\n                    antal += 1\n                    i = j\n                    break\n                elif arr[j] == 'x':\n                    return antal\n            else:\n                return antal\n    return antal\nfor t in range(nr()):\n    (_, k) = nrs()\n    w = word()\n    print(f(k, w))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    start = s.index('*')\n    end = n - 1 - s[::-1].index('*')\n    if start == end:\n        print(1)\n        continue\n    count = 2\n    dist = 0\n    last = start\n    for i in range(start + 1, end):\n        dist += 1\n        if s[i] == '*':\n            last = i\n        if dist == k:\n            count += 1\n            dist = i - last\n    print(count)", "t = int(input())\nfor i in range(t):\n    (n, k) = [int(a) for a in input().split()]\n    s = [o for o in input()]\n    lp = None\n    rp = None\n    if s.count('*') == 1 or s.count('*') == 0:\n        print(s.count('*'))\n        continue\n    for l in range(len(s)):\n        if s[l] == '*':\n            s[l] = 'x'\n            lp = l\n            break\n    for r in range(len(s) - 1, -1, -1):\n        if s[r] == '*':\n            s[r] = 'x'\n            rp = r\n            break\n    while True:\n        if rp - lp <= k:\n            break\n        for m in range(k, 0, -1):\n            if s[lp + m] == '*':\n                lp += m\n                s[lp] = 'x'\n                break\n        if rp - lp <= k:\n            break\n        for n in range(k, 0, -1):\n            if s[rp - n] == '*':\n                rp -= n\n                s[rp] = 'x'\n                break\n        if rp - lp <= k:\n            break\n    print(s.count('x'))", "for __ in range(int(input())):\n    (a, k) = map(int, input().split())\n    s = input()\n    i = 0\n    while s[i] != '*':\n        i += 1\n    ls = i\n    c = 1\n    flag = 1\n    while i < len(s):\n        ii = min(i + k, len(s) - 1)\n        for j in range(ii, i - 1, -1):\n            if j == i:\n                flag = 0\n                break\n            if s[j] == '*':\n                c += 1\n                i = j\n                break\n        if ii == len(s) - 1 or flag == 0:\n            break\n    print(c)", "def solve():\n    (n, k) = map(int, input().split())\n    s = input()\n    a = [0] * n\n    for i in range(n):\n        if s[i] == '*':\n            a[i] = 1\n    for i in range(n):\n        if a[i] == 1:\n            a[i] = 2\n            break\n    for i in range(n - 1, -1, -1):\n        if a[i] == 1:\n            a[i] = 2\n            break\n    for i in range(n):\n        if a[i] == 2:\n            j = min(n - 1, i + k)\n            while a[j] == 0:\n                j -= 1\n            ok = True\n            if a[j] == 2:\n                ok = False\n            for l in range(i + 1, j):\n                if a[l] == 2:\n                    ok = False\n            if not ok:\n                break\n            a[j] = 2\n            i = j - 1\n    print(a.count(2))\nt = int(input())\nfor i in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    if s.count('*') == 1:\n        print(1)\n    elif s.count('*') == 2:\n        print(2)\n    else:\n        x = s.find('*')\n        y = s.rfind('*')\n        s = s[x + 1:y]\n        c = 2\n        while '*' in s and len(s) >= k:\n            s1 = s[:k]\n            x = s1.rfind('*')\n            c += 1\n            s = s[x + 1:]\n        print(c)", "tests = int(input())\nfor _ in range(tests):\n    (n, k) = [int(x) for x in input().split()]\n    s = list(input())\n    start = 0\n    end = len(s)\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '*':\n            s[i] = 'x'\n            start = i\n            count += 1\n            break\n    for i2 in range(len(s)):\n        i = len(s) - i2 - 1\n        if s[i] == '*':\n            s[i] = 'x'\n            end = i\n            count += 1\n            break\n    if end == len(s):\n        end = start\n    counter = 0\n    while end - start > k:\n        for i in range(start + k, start, -1):\n            if s[i] == '*':\n                s[i] = 'x'\n                start = i\n                count += 1\n                break\n    print(count)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = str(input())\n    i = 0\n    j = -1\n    if s.count('*') < 3:\n        print(s.count('*'))\n    else:\n        while i < n:\n            if s[i] == '*':\n                break\n            i += 1\n        while j >= -n:\n            if s[j] == '*':\n                break\n            j -= 1\n        g = i\n        sc = 2\n        while 1 > 0:\n            if g >= n + j - k:\n                break\n            f = s[g + 1:g + k + 1]\n            o = -1\n            while o >= -k:\n                if f[o] == '*':\n                    sc += 1\n                    g = g + k + o + 1\n                    break\n                o -= 1\n        print(sc)", "def main():\n    t = int(input())\n    for _ in range(t):\n        (n, k) = map(int, input().split())\n        s = list(input())\n        i = 0\n        while i < n:\n            if s[i] == '*':\n                s[i] = 'x'\n                for j in range(k, 0, -1):\n                    try:\n                        if s[i + j] == '*':\n                            i += j\n                            break\n                    except IndexError:\n                        continue\n            else:\n                i += 1\n        print(s.count('x'))\nmain()", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().strip().split())\n    s = input()\n    old = '*'\n    new = 'x'\n    count = 0\n    if s.count('*') >= 1:\n        s = new.join(s.rsplit(old, 1))\n        count += 1\n    if s.count('*') >= 1:\n        s = s.replace('*', 'x', 1)\n        count += 1\n    last_index = s.find('x')\n    for i in range(last_index + 1, n):\n        if s[i] == '*' and i - last_index > k or (s[i] == 'x' and i - last_index > k):\n            j = i - 1\n            while True:\n                if s[j] == '*':\n                    last_index = j\n                    count += 1\n                    break\n                j -= 1\n    else:\n        print(count)", "test = int(input())\n\ndef convenient(L, n, k):\n    T = []\n    counter = 0\n    for i in range(n):\n        if L[i] == '*':\n            T.append(i)\n    for i in range(len(T) - 1):\n        if i == 0:\n            last = T[0]\n            counter += 1\n        elif T[i + 1] - last > k:\n            L[T[i]] = 'x'\n            counter += 1\n            last = T[i]\n    return counter + 1\nfor loop in range(test):\n    (n, k) = [int(x) for x in input().split()]\n    s = list(input())\n    print(convenient(s, n, k))", "for test in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    r = 0\n    i = s.find('*')\n    j = i - 1\n    while j != i:\n        if s[i] == '*':\n            r += 1\n            j = i\n            i = min(i + k, n - 1)\n        else:\n            i -= 1\n    print(r)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    s = [str(i) for i in s]\n    (x, c) = (0, 0)\n    for i in range(n):\n        if s[i] == '*':\n            if c == 0:\n                s[i] = 'X'\n                c = c + 1\n                x = i\n            elif i - x == k:\n                s[i] = 'X'\n                x = i\n                c = c + 1\n            elif i == n - 1:\n                s[i] = 'X'\n                x = i\n                c = c + 1\n        elif s[i] == '.' and (i - x == k or i == n - 1):\n            for i in range(i - 1, x, -1):\n                if s[i] == '*':\n                    s[i] = 'X'\n                    x = i\n                    c = c + 1\n                    break\n    print(c)", "z = int(input())\nfor i in range(z):\n    (a, b) = list(map(int, input().split()))\n    c = input()\n    count = 0\n    index = c.index('*')\n    while index < a:\n        count += 1\n        for j in range(min(index + b, a - 1), index, -1):\n            if c[j] == '*':\n                index = j\n                break\n        else:\n            break\n    print(count)", "import time\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    ans = 1\n    j = s.find('*')\n    while True:\n        s1 = s[j + 1:j + k + 1]\n        length = len(s1)\n        for i in range(length):\n            if s1[length - i - 1] == '*':\n                ans += 1\n                j += length - i\n                break\n        else:\n            break\n    print(ans)", "def solve():\n    (n, k) = map(int, input().split())\n    s = list(input())\n    arr = []\n    for i in range(n):\n        if s[i] == '*':\n            arr.append(i)\n    p = arr[0]\n    c = 1\n    i = 1\n    while i < len(arr):\n        if arr[i] - p == k:\n            p = arr[i]\n            c += 1\n            i += 1\n        elif arr[i] - p > k:\n            p = arr[i - 1]\n            c += 1\n        else:\n            i += 1\n    if p != arr[-1]:\n        c += 1\n    print(c)\n\ndef main():\n    for _ in range(int(input())):\n        solve()\nmain()", "def solve(k, s):\n    firstStar = s.find('*')\n    lastStar = len(s) - s[::-1].find('*') - 1\n    numstar = 1\n    i = firstStar\n    while i < lastStar:\n        tmpk = min(k, len(s) - i - 1)\n        while s[i + tmpk] != '*':\n            tmpk -= 1\n        i = i + tmpk\n        numstar += 1\n    return numstar\nres = []\ncount = int(input())\nfor i in range(count):\n    (n, k) = map(int, input().split())\n    s = input()\n    res.append(solve(k, s))\nfor i in res:\n    print(i)", "def solve(s, n, k):\n    lind = []\n    for (i, it) in enumerate(s):\n        if it == '*':\n            lind.append(i)\n    changes = 1\n    prev = lind[0]\n    i = 0\n    while i + 1 < len(lind):\n        while i + 1 < len(lind) and lind[i + 1] - prev <= k:\n            i += 1\n        changes += 1\n        prev = lind[i]\n    return changes\nfor case in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    ans = solve(s, n, k)\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = str(input())\n    p = s.find('*')\n    q = s.rfind('*')\n    if p == q:\n        print(1)\n    else:\n        ans = 2\n        while q - p > k:\n            p = s.rfind('*', 0, p + k + 1)\n            ans += 1\n        print(ans)", "t = int(input())\nfor t1 in range(t):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    counter = k\n    ans = 0\n    flag = False\n    i = 0\n    while i < n:\n        if s[i] == '*' and (not flag):\n            s[i] = 'x'\n            ans += 1\n            flag = True\n        if not flag:\n            i += 1\n        if flag:\n            flag2 = True\n            for j in range(min(i + k, n - 1), i, -1):\n                if s[j] == '*':\n                    ans += 1\n                    s[j] = 'x'\n                    i = j\n                    flag2 = False\n                    break\n            if flag2:\n                break\n    print(ans)", "def solve(n, k, s):\n    i = 0\n    res = 0\n    while i < n:\n        if s[i] == '*':\n            res += 1\n            if i == n - 1:\n                return res\n            j = min(n - 1, i + k)\n            while s[j] != '*':\n                j -= 1\n            i = j + (1 if i == j else 0)\n        else:\n            i += 1\n    return res\nT = int(input())\nfor case in range(T):\n    (N, K) = map(int, input().split())\n    S = input()\n    res = solve(N, K, S)\n    print(res)", "T = int(input())\nfor i in range(T):\n    (n, k) = map(int, input().split())\n    s = list(map(str, input().split()))\n    result = 1\n    l = min((s[0].find('*') for i in s[0]))\n    while True:\n        r = min(n - 1, l + k)\n        while s[0][r] != '*' and r >= l:\n            r = r - 1\n        if r == l:\n            break\n        l = r\n        result = result + 1\n    print(result)", "x = int(input())\nfor testcase in range(1, x + 1):\n    (n, k) = map(int, input().split())\n    st = input()\n    ans = 0\n    index = []\n    for i in range(len(st)):\n        if st[i] == '*':\n            index.append(i)\n    if len(index) <= 2:\n        print(len(index))\n        continue\n    start = index[0]\n    last = index[-1]\n    while start + k < last:\n        for i in range(start + k, start, -1):\n            if st[i] == '*':\n                ans += 1\n                start = i\n                break\n    print(ans + 2)", "def replace(n, k, s):\n    ind = []\n    count = 1\n    j = 0\n    for i in range(n):\n        if s[i] == '*':\n            ind.append(i)\n    while j <= len(ind) - 1:\n        i = j + 1\n        while i < len(ind) and ind[i] - ind[j] <= k:\n            i = i + 1\n        if i >= len(ind):\n            j = i\n        else:\n            j = i - 1\n        count = count + 1\n    if len(ind) == 1:\n        return count - 1\n    else:\n        return count\nx = int(input())\nm = []\nfor i in range(x):\n    y = input()\n    y1 = y.split(' ')\n    y2 = [int(t) for t in y1]\n    z = input()\n    m.append((y2, z))\nfor j in range(x):\n    print(replace(m[j][0][0], m[j][0][1], m[j][1]))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    (left, right) = (s.find('*'), s.rfind('*'))\n    if left == right:\n        print(1)\n    else:\n        count = 2\n        while right - left > k:\n            left = s[:left + k + 1].rfind('*')\n            count += 1\n        print(count)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    r = 0\n    i = s.find('*')\n    j = i - 1\n    while j != i:\n        if s[i] == '*':\n            r += 1\n            j = i\n            i = min(i + k, n - 1)\n        else:\n            i -= 1\n    print(r)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    arr = []\n    for (i, c) in enumerate(s):\n        if c == '*':\n            arr += [i]\n    if len(arr) == 1:\n        print(1)\n        continue\n    res = 1\n    prev = arr[0]\n    i = 1\n    for curr in arr[1:]:\n        if curr - prev > k:\n            prev = arr[i - 1]\n            res += 1\n        i += 1\n    print(res + 1)", "def solve():\n    (n, k) = map(int, input().split())\n    s = input()\n    first = 0\n    while s[first] != '*':\n        first += 1\n    last = n - 1\n    while s[last] != '*':\n        last -= 1\n    cnt = 1\n    if first != last:\n        cnt = 2\n    (last_star, prev, next) = (first, first, first)\n    while next != last:\n        next += 1\n        if s[next] == '*':\n            if next - prev > k:\n                cnt += 1\n                prev = last_star\n            last_star = next\n    print(cnt)\nt = int(input())\nfor _ in range(t):\n    solve()", "for q_ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    res = 1\n    i = s.find('*') + 1\n    while True:\n        f = s[i:i + k].rfind('*')\n        if f == -1:\n            break\n        i = i + f + 1\n        res += 1\n    print(res)", "T = int(input())\nfor case in range(T):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    if s.count('*') == 1:\n        print(1)\n        continue\n    count = 0\n    for i in range(n):\n        if s[i] == '*':\n            s[i] = 'x'\n            count += 1\n            left = i\n            break\n    for i in range(n - 1, -1, -1):\n        if s[i] == '*':\n            right = i\n            s[i] = 'x'\n            count += 1\n            break\n    while left + k < right:\n        for i in range(left + k, left, -1):\n            if s[i] == 'x':\n                left = i\n                break\n            elif s[i] == '*':\n                s[i] == 'x'\n                left = i\n                count += 1\n                break\n    print(count)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    (n, k) = map(int, sys.stdin.readline().split())\n    data = list(sys.stdin.readline().rstrip())\n    stars = []\n    for (idx, item) in enumerate(data):\n        if item == '*':\n            stars.append(idx)\n    if len(stars) == 1:\n        print(1)\n        continue\n    (ans, now) = (1, stars[0])\n    for i in range(1, len(stars)):\n        if now + k < stars[i]:\n            ans += 1\n            now = stars[i - 1]\n    print(ans if now == stars[-1] else ans + 1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input().strip('\\n')\n    if s.count('*') <= 2:\n        print(s.count('*'))\n    else:\n        ans = 2\n        li = list(s)\n        ind = li.index('*')\n        li[ind] = 'X'\n        for i in range(n - 1, -1, -1):\n            if li[i] == '*':\n                li[i] = 'X'\n                break\n        li = li[:i + 1]\n        n = len(li)\n        i = 0\n        while i < n:\n            if li[i] == 'X':\n                j = i + 1\n                if i + k >= n:\n                    i += 1\n                    break\n                f = 0\n                ind = i + 1\n                while j <= i + k:\n                    if li[j] == '*':\n                        ind = j\n                    if li[j] == 'X':\n                        f = 1\n                        break\n                    j += 1\n                if f == 0:\n                    ans += 1\n                    li[ind] = 'X'\n            i += 1\n        print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    li = []\n    f = 0\n    c = 0\n    for i in range(n):\n        if s[i] == '*' and f == 0:\n            f = 1\n            li.append('x')\n            y = i\n        else:\n            li.append(s[i])\n    for i in range(n):\n        if li[n - 1 - i] == '*':\n            li[n - 1 - i] = 'x'\n            y = n - 1 - i\n            break\n    f = 0\n    for i in range(n):\n        if i == y:\n            break\n        if li[i] == 'x':\n            f = 0\n            for j in range(i + 1, i + k + 1):\n                if li[j] == 'x':\n                    f = 1\n                    break\n                if li[j] == '*':\n                    z = j\n            if f == 0:\n                li[z] = 'x'\n    for i in range(n):\n        if li[i] == 'x':\n            c = c + 1\n    print(c)", "from collections import *\nfrom sys import exit\nfrom copy import deepcopy as copy\nINF = 1000000000.0 + 7\nt = int(input())\nans = [None for _ in range(t)]\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input().strip()\n    fst_pos = None\n    good = INF\n    prev = INF\n    for (i, c) in enumerate(s):\n        if c == '*':\n            prev = i\n            if fst_pos is None:\n                fst_pos = i\n                ans = 1\n                good = i\n        if i - good >= k:\n            if prev != good:\n                ans += 1\n                good = prev\n    if good != prev:\n        ans += 1\n    print(ans)", "t = int(input())\nfor q in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    s = input()\n    ans = s.count('*')\n    s = s.replace('*', 'x')\n    i = 0\n    while i < n - 1:\n        if s[i] == 'x':\n            minus = 0\n            for j in range(i + 1, min(i + k + 1, n)):\n                if s[j] == 'x':\n                    ans -= 1\n                    minus = 1\n                    i = j\n            if minus:\n                ans += 1\n            else:\n                i += 1\n        else:\n            i += 1\n    print(ans)", "I = input\nfor _ in range(int(I())):\n    (n, k) = map(int, I().split())\n    idx = [i for (i, c) in enumerate(I().strip()) if c == '*']\n    (res, p) = (1, idx[0])\n    for (i, j) in enumerate(idx):\n        if j - p > k:\n            p = idx[i - 1]\n            res += 1\n    print(res + 1 if len(idx) > 1 else res)", "from collections import defaultdict\n\ndef func():\n    n = int(input())\n    for _ in range(n):\n        (a, b) = map(int, input().split())\n        s = input()\n        l = []\n        for i in range(a):\n            if s[i] == '*':\n                l.append(i)\n        k = 1\n        base = l[0]\n        last = l[0]\n        for i in l:\n            if i - base > b:\n                k += 1\n                base = last\n            last = i\n        if base == l[-1]:\n            print(k)\n        else:\n            print(k + 1)\nfunc()", "def solve():\n    t = int(input().strip())\n    for _ in range(t):\n        (n, k) = map(int, input().split())\n        s = input().strip()\n        asterisks = []\n        for (i, c) in enumerate(s):\n            if c == '*':\n                asterisks.append(i)\n        used = 1\n        last = asterisks[0]\n        for i in range(1, len(asterisks)):\n            if asterisks[i] - last > k and last != asterisks[i - 1]:\n                last = asterisks[i - 1]\n                used += 1\n        if asterisks[-1] != last:\n            used += 1\n        print(used)\nsolve()", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    st = s.index('*')\n    ans = 1\n    while True:\n        try:\n            st = s[st + 1:st + k + 1].rindex('*') + st + 1\n            ans += 1\n        except:\n            break\n    print(ans)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    st = s.index('*')\n    ans = 1\n    while True:\n        try:\n            st = s[st + 1:st + k + 1].rindex('*') + st + 1\n            ans += 1\n        except:\n            break\n    print(ans)", "import sys\nN = int(200000.0 + 5)\nsys.setrecursionlimit(N)\n\ndef charming():\n    (n, k) = map(int, input().split())\n    s = input()\n    pos = list()\n    for i in range(len(s)):\n        if s[i] == '*':\n            pos.append(i)\n    res = 0\n    last = pos[0]\n    i = 1\n    if len(pos) <= 1:\n        print(1)\n        return\n    while True:\n        j = i\n        while j < len(pos) and pos[j] - last <= k:\n            j += 1\n        if j == len(pos):\n            break\n        res += 1\n        i = j\n        last = pos[j - 1]\n    print(res + 2)\nfor t in range(int(input())):\n    charming()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = input()\n    cnt = 0\n    prev = -1\n    pprev = -1\n    for i in range(n):\n        if a[i] == '*' and (not cnt):\n            cnt += 1\n            pprev = i\n            prev = i\n        elif a[i] == '*':\n            if i - pprev > k:\n                cnt += 1\n                pprev = prev\n            prev = i\n    if a.rfind('*') != pprev:\n        cnt += 1\n    print(cnt)", "test_n = int(input())\nfor _ in range(test_n):\n    (n, k) = map(int, input().split(' '))\n    string = input()\n    ans = 0\n    left = string.index('*')\n    right = string.rindex('*')\n    if left == right:\n        print(1)\n        continue\n    ans += 2\n    while True:\n        idx = left + k\n        if idx >= right:\n            print(ans)\n            break\n        if string[idx] == '.':\n            while True:\n                idx -= 1\n                if string[idx] == '*':\n                    break\n        ans += 1\n        if right - idx <= k:\n            print(ans)\n            break\n        left = idx", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    L = input()\n    count = 1\n    stars = []\n    for i in range(N):\n        if L[i] == '*':\n            stars += [i]\n    last = stars[0]\n    for i in range(2, len(stars)):\n        if stars[i] - last > K:\n            count += 1\n            last = stars[i - 1]\n    if len(stars) > 1:\n        count += 1\n    print(count)", "t = int(input())\nfor test in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    arr = []\n    start = 0\n    end = 0\n    for i in range(n):\n        if s[i] == '*':\n            arr.append(i)\n    count = 1\n    start = arr[0]\n    arr.pop(0)\n    i = 0\n    while True:\n        if i == len(arr):\n            break\n        if arr[i] - start == k:\n            count += 1\n            start = arr[i]\n            i += 1\n        elif arr[i] - start > k:\n            count += 1\n            start = arr[i - 1]\n        else:\n            if i == len(arr) - 1:\n                count += 1\n            i += 1\n    print(count)", "def solve():\n    (n, k) = map(int, input().split())\n    s = list(input())\n    i = 0\n    while i < n:\n        if s[i] == '*':\n            s[i] = 'x'\n            j = min(i + k, n - 1)\n            while s[j] != '*' and j > i:\n                j -= 1\n            i = j - 1\n        i += 1\n    return s.count('x')\nt = int(input())\nwhile t > 0:\n    print(solve())\n    t -= 1", "import sys\n\ndef answer(n, k, s):\n    ans = 0\n    sl = list(s)\n    if sl.count('*') == 1:\n        return 1\n    ans = 2\n    i1 = sl.index('*')\n    sl[i1] = 'x'\n    sl.reverse()\n    i2 = sl.index('*')\n    sl[i2] = 'x'\n    sl.reverse()\n    i2 = n - 1 - i2\n    lsi = -1\n    lxi = i1\n    for i in range(i1 + 1, i2, 1):\n        if sl[i] == '*':\n            lsi = i\n        if i - lxi >= k:\n            sl[lsi] = 'x'\n            lxi = lsi\n            ans += 1\n    return ans\n\ndef main():\n    t = int(input())\n    n = [0] * t\n    k = [0] * t\n    s = [0] * t\n    for j in range(t):\n        (n[j], k[j]) = [int(i) for i in sys.stdin.readline().split()]\n        s[j] = input()\n    for j in range(t):\n        print(answer(n[j], k[j], s[j]))\n    return\nmain()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    if s.count('*') == 1:\n        print(1)\n        continue\n    l = list(s)\n    t = s.find('*')\n    l[t] = 'x'\n    r = s.rfind('*')\n    l[r] = 'x'\n    c = 2\n    while t < r:\n        if t + k >= r:\n            break\n        j = t + k\n        while l[j] != '*':\n            j -= 1\n        l[j] = 'x'\n        c += 1\n        t = j\n    print(c)"]