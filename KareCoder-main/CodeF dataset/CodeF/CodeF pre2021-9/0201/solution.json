["t = int(input())\nres = ''\nfor x in range(t):\n    (a, b) = map(int, input().split())\n    if b == 1:\n        res += 'NO\\n'\n    else:\n        res += 'YES\\n' + str(a * b) + ' ' + str(a) + ' ' + str(a * b + a) + '\\n'\nprint(res)", "import sys\n\ndef get_int():\n    return int(sys.stdin.readline())\n\ndef get_string():\n    return sys.stdin.readline().strip()\nFILE = False\nif FILE:\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nt = get_int()\nfor i in range(t):\n    (a, b) = get_string().split()\n    a = int(a)\n    b = int(b)\n    if b == 1:\n        sys.stdout.write('NO\\n')\n        continue\n    else:\n        sys.stdout.write('YES\\n')\n        x = a\n        y = a * b\n        z = a * (b + 1)\n        answer = str(x) + ' ' + str(y) + ' ' + str(z) + '\\n'\n        sys.stdout.write(answer)", "import sys\n\ndef good_ngood(n: list) -> str:\n    (a, b) = (int(n[0]), int(n[1]))\n    if b == 1:\n        return 'NO' + '\\n'\n    x = a * b\n    y = a\n    z = x + y\n    return str('YES') + '\\n' + str(x) + ' ' + str(y) + ' ' + str(z) + '\\n'\ntest = int(sys.stdin.readline())\nfor i in range(test):\n    sys.stdout.write(good_ngood(sys.stdin.readline().split()))", "res = ''\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    f = s = t = 0\n    if b == 1:\n        res += 'NO\\n'\n    else:\n        res += 'YES\\n%d %d %d\\n' % (a, a * b, a * b + a)\nprint(res)", "import sys\n\ndef good_ngood(n: list) -> str:\n    (a, b) = (int(n[0]), int(n[1]))\n    if b == 1:\n        return 'NO' + '\\n'\n    x = a * b\n    y = a\n    z = x + y\n    return str('YES') + '\\n' + str(x) + ' ' + str(y) + ' ' + str(z) + '\\n'\ntest = int(sys.stdin.readline())\nfor i in range(test):\n    sys.stdout.write(good_ngood(sys.stdin.readline().split()))", "def read_one_line_input():\n    s = input()\n    read_one_line = [int(i) for i in s.split()]\n    return read_one_line\n\ndef read_lines_input():\n    read_in = []\n    n = int(input())\n    for i in range(n):\n        s = input()\n        read_one_line = [int(i) for i in s.split()]\n        read_in.append(read_one_line)\n    return read_in\n\ndef print_list(out_list):\n    [print(s) for s in out_list]\n\ndef get_out(a, b):\n    max = 10 ** 18\n    max_j = max // a - b\n    for j in range(1, min(b, max_j)):\n        if j % b != 0:\n            break\n    else:\n        return -1\n    if a * (j + b) > max:\n        return -1\n    return str(a * j) + ' ' + str(a * b) + ' ' + str(a * j + a * b)\n\ndef main(read_in):\n    out_lines = []\n    for line in read_in:\n        (a, b) = line\n        out = get_out(a, b)\n        if out == -1:\n            out_lines.append('NO')\n        else:\n            out_lines.append('YES')\n            out_lines.append(out)\n    return out_lines\nread_in = read_lines_input()\nout_list = main(read_in)\nprint_list(out_list)", "def read_one_line_input():\n    s = input()\n    read_one_line = [int(i) for i in s.split()]\n    return read_one_line\n\ndef read_lines_input():\n    read_in = []\n    n = int(input())\n    for i in range(n):\n        s = input()\n        read_one_line = [int(i) for i in s.split()]\n        read_in.append(read_one_line)\n    return read_in\n\ndef print_list(out_list):\n    [print(s) for s in out_list]\n\ndef get_out(a, b):\n    ab = a * b\n    sum = a + ab\n    if b == 1:\n        return -1\n    return str(a) + ' ' + str(a * b) + ' ' + str(sum)\n\ndef main(read_in):\n    out_lines = []\n    for line in read_in:\n        (a, b) = line\n        out = get_out(a, b)\n        if out == -1:\n            out_lines.append('NO')\n        else:\n            out_lines.append('YES')\n            out_lines.append(out)\n    return out_lines\nread_in = read_lines_input()\nout_list = main(read_in)\nprint_list(out_list)", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    (a, b) = map(int, sys.stdin.readline().split())\n    if b == 1:\n        print('NO')\n        continue\n    print('YES')\n    print(f'{a} {a * b} {a + a * b}')", "def read_one_line_input():\n    s = input()\n    read_one_line = [int(i) for i in s.split()]\n    return read_one_line\n\ndef read_lines_input():\n    read_in = []\n    n = int(input())\n    for i in range(n):\n        s = input()\n        read_one_line = [int(i) for i in s.split()]\n        read_in.append(read_one_line)\n    return read_in\n\ndef print_list(out_list):\n    [print(s) for s in out_list]\n\ndef get_out(a, b):\n    max = 10 ** 18\n    max_j = max // a - b\n    for j in range(1, min(b, max_j)):\n        if j % b != 0:\n            break\n    else:\n        return -1\n    if a * (j + b) > max:\n        return -1\n    return str(a * j) + ' ' + str(a * b) + ' ' + str(a * j + a * b)\n\ndef main(read_in):\n    out_lines = []\n    for line in read_in:\n        (a, b) = line\n        out = get_out(a, b)\n        if out == -1:\n            out_lines.append('NO')\n        else:\n            out_lines.append('YES')\n            out_lines.append(out)\n    return out_lines\nread_in = read_lines_input()\nout_list = main(read_in)\nprint_list(out_list)", "selam = int(input())\ninput_list = list()\nfor i in range(selam):\n    (a, b) = input().split()\n    input_list.append((int(a), int(b)))\nfor (a, b) in input_list:\n    if b == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(a, a * b, a * b + a)", "import sys\nimport math\n\ndef scan(input_type='int'):\n    if input_type == 'int':\n        return list(map(int, sys.stdin.readline().strip().split()))\n    else:\n        return list(map(str, sys.stdin.readline().strip()))\n\ndef solution():\n    for _ in range(int(input())):\n        (a, b) = scan()\n        x = a * b\n        y = a\n        z = x + y\n        if x == y or y == z or x == z or (x == y and y == z):\n            print('NO')\n        else:\n            print('YES')\n            print(x, y, z)\nsolution()", "import math\nimport sys\nimport collections\nimport bisect\nimport time\nimport random\nfrom itertools import permutations\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\nfor t in range(int(input())):\n    (a, b) = get_ints()\n    if b == 1:\n        print('NO')\n        continue\n    print('YES')\n    print(a, a * b, a * (b + 1))", "def numbers(a, b):\n    if b == 1:\n        print('NO')\n    else:\n        x = str(a * b)\n        y = str(a)\n        z = str((b + 1) * a)\n        w = x + ' ' + y + ' ' + z\n        print('YES')\n        print(w)\nx = int(input())\nm = []\nfor i in range(x):\n    y = input()\n    z = y.split(' ')\n    u = [int(t) for t in z]\n    m.append(u)\nfor j in range(x):\n    numbers(m[j][0], m[j][1])", "t = int(input())\nimport sys\nfrom sys import stdin\nfor i in range(t):\n    arr = list(map(int, stdin.readline().strip().split()))\n    if arr[1] == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(str(arr[0]) + ' ' + str(arr[0] * arr[1]) + ' ' + str(arr[0] * arr[1] + arr[0]))", "import sys\nt = sys.stdin.readlines()\nfor i in range(1, int(t[0]) + 1):\n    (a, b) = map(int, t[i].split())\n    x = a * b\n    y = a\n    z = a * (1 + b)\n    if b == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(x, y, z)", "n = int(input())\ninputs = []\nfor i in range(n):\n    inp = input()\n    inputs.append([int(item) for item in inp.split(' ')])\nfor item in inputs:\n    if item[1] == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(item[0], ' ', item[0] * item[1], ' ', item[0] * (item[1] + 1))", "t = int(input())\nans = []\nfor i in range(t):\n    (A, B) = map(int, input().split())\n    if B == 1:\n        ans.append([-1])\n    else:\n        ans.append([A, A * B, A * (B + 1)])\nfor i in range(t):\n    if ans[i] == [-1]:\n        print('NO')\n    else:\n        print('YES')\n        print(*ans[i])", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    (a, b) = map(int, sys.stdin.readline().split())\n    if b != 1:\n        print('YES')\n        print(a * b, a, a * (b + 1))\n    else:\n        print('NO')", "t = int(input())\nfor tt in range(t):\n    (a, b) = list(map(int, input().split()))\n    multiple = a * b\n    if b == 1:\n        print('NO')\n    else:\n        if b < 2:\n            multiple += multiple\n        print('YES\\n' + str(a), multiple, multiple + a)", "t = int(input())\nfor i in range(t):\n    l = [int(i) for i in input().split()]\n    a = l[0]\n    b = l[1]\n    if b == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(a, a * b, a * (b + 1))", "n = int(input())\nfor _ in range(n):\n    (a, b) = map(int, input().split())\n    if b == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(a, b * a, (b + 1) * a)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if b == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(a * b, a, a * (b + 1))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if b == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(a, a * b, a * b + a)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if b == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(a, a * b, a * b + a)", "t = int(input())\nwhile t:\n    (a, b) = map(int, input().split())\n    if b == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(a * b, a, a * (b + 1))\n    t -= 1", "for i in range(int(input())):\n    (p, q) = map(int, input().split())\n    if q != 1:\n        print('YES')\n        print(p * q, p, p * q + p)\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if b == 1:\n        print('NO')\n    else:\n        print('YES')\n        x = a\n        y = a * b\n        z = a * b + a\n        print(x, y, z)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    arr = []\n    if b == 1:\n        print('NO')\n    else:\n        print('YES')\n        arr.append(str(a * b))\n        arr.append(str(a))\n        arr.append(str((b + 1) * a))\n        print(' '.join(arr))", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if b != 1:\n        print('YES')\n        print(a * b, a, (1 + b) * a)\n    else:\n        print('NO')", "n = int(input())\nfor i in range(0, n):\n    (a, b) = (int(x) for x in input().split())\n    if b == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(a, a * b, a + a * b)", "nn = int(input())\nwhile nn != 0:\n    (a, b) = map(int, input().split())\n    if b == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(a, a * b, a * (b + 1))\n    nn -= 1", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if b == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(a * b, a, a * (b + 1))", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if b == 1:\n        print('NO')\n    else:\n        print('YES')\n        x = a\n        y = a * b\n        z = a * b + a\n        print(x, y, z)", "task_num = int(input().strip())\nfor task_id in range(task_num):\n    num_list = list(map(int, input().strip().split()))\n    A = num_list[0]\n    B = num_list[1]\n    if B > 1:\n        print('YES')\n        print(str(A) + ' ' + str(A * B) + ' ' + str(A * (B + 1)))\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (inp, n) = map(int, input().split())\n    if n == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(inp, inp * n, inp * n + inp)", "raw_input = input('')\ntimes = int(raw_input)\n\ndef find_result(a, b):\n    x = a * b\n    y = a\n    z = x + y\n    if b == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(f'{x} {y} {z}')\nfor t in range(times):\n    raw_input = input('')\n    (a, b) = raw_input.split(' ')\n    find_result(int(a), int(b))", "n = int(input())\nfor i in range(n):\n    l = list(map(int, input().split()))\n    if l[1] == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(l[0], l[0] * l[1], l[0] * (l[1] + 1))", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split(' '))\n    if b == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(a * b, a, a * b + a)", "li = lambda : list(map(int, input().split()))\nlis = lambda : sorted(list(map(int, input().split())))\nmp = lambda : map(int, input().split())\nit = lambda : int(input())\nst = lambda : str(input())\nfrom collections import Counter\n\ndef twopointers(A, N, X):\n    i = 0\n    j = N - 1\n    while i < j:\n        if A[i] + A[j] == X:\n            return True\n        elif A[i] + A[j] < X:\n            i += 1\n        else:\n            j -= 1\n    return 0\n\ndef shortest_path(k, n, neighbors):\n    mark = [-1] * (n + 1)\n    mark[k] = 0\n    bfs_queue = [k]\n    i = 0\n    while i < len(bfs_queue):\n        u = bfs_queue[i]\n        for v in neighbors[u]:\n            if mark[v] == -1:\n                mark[v] = mark[u] + 1\n                bfs_queue.append(v)\n        i += 1\n    return mark\n\ndef main():\n    (a, b) = mp()\n    if b == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(a, a * b, a * (b + 1))\nfor __ in range(it()):\n    main()", "for _ in range(0, int(input())):\n    (a, b) = map(int, input().split())\n    if b == 1:\n        print('NO')\n    else:\n        x = a * b\n        y = a\n        z = x + y\n        print(str('YES') + '\\n' + str(x) + ' ' + str(y) + ' ' + str(z))", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    if b == 1:\n        print('NO')\n        continue\n    else:\n        print('YES')\n        print(a, a * b, a + a * b)", "T = int(input())\nwhile T:\n    T -= 1\n    (a, b) = input().split()\n    a = int(a)\n    b = int(b)\n    if b == 1:\n        print('NO')\n        continue\n    print('YES')\n    A = a * b\n    B = a\n    C = A + B\n    print('%d' % A, '%d' % B, '%d' % C)", "t = int(input())\nfor i in range(t):\n    ab = input().split(' ')\n    a = int(ab[0])\n    b = int(ab[1])\n    if a == 0 or b == 0:\n        print('NO')\n        continue\n    if a * b == a or a == a * (b + 1) or b == b + 1:\n        print('NO')\n        continue\n    print('YES')\n    print(str(a * b) + ' ' + str(a) + ' ' + str(a * (b + 1)))", "t = int(input())\nfor _ in range(t):\n    (a, b) = list(map(int, input().split()))\n    if b == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(a, a * b, a * b + a)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if b == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(a, a * b, a * (b + 1))", "def solve():\n    (a, b) = map(int, input().split())\n    if b == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(a, a * b, a * (b + 1))\nfor t in range(0, int(input())):\n    solve()", "n = int(input())\nfor i in range(n):\n    (n, k) = map(int, input().split())\n    if k != 1:\n        print('YES')\n        print(n, n * k, n * (k + 1))\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b) = [int(x) for x in input().split()]\n    if b == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(a, a * b, a * (b + 1))", "t = int(input())\nfor _ in range(t):\n    (A, B) = map(int, input().split())\n    if B == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(A, A * B, A * (B + 1))"]