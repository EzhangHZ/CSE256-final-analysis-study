["import math\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    ok = True\n    while a != sorted(a):\n        ans += 1\n        i = 0\n        while i < n and a[i] <= x:\n            i += 1\n        if i == n:\n            ok = False\n            break\n        (a[i], x) = (x, a[i])\n    if ok:\n        print(ans)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    c = 0\n    lst1 = lst.copy()\n    lst1.sort()\n    ind = 0\n    while True:\n        if lst1 == lst or ind > n - 1:\n            break\n        elif lst[ind] > x:\n            (lst[ind], x) = (x, lst[ind])\n            c += 1\n            lst1 = lst.copy()\n            lst1.sort()\n            ind += 1\n        else:\n            ind += 1\n    lst1 = lst.copy()\n    lst1.sort()\n    if lst1 == lst:\n        print(c)\n    else:\n        print(-1)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    B = sorted(arr)\n    if arr == B:\n        return 0\n    b = n - 1\n    while b >= 0 and arr[b] == B[b]:\n        b -= 1\n    A = arr + [x]\n    A.sort()\n    cnt = 0\n    prev = x\n    for i in range(b + 1):\n        if arr[i] != A[i]:\n            if A[i] != prev:\n                return -1\n            prev = arr[i]\n            cnt += 1\n    return cnt\nfor _ in range(int(input())):\n    print(solve())", "def swap(l, r, x):\n    temp = arr[r]\n    for o in range(r, l, -1):\n        arr[o] = arr[o - 1]\n    arr[l] = x\n    return temp\nt = int(input())\nfor z in range(t):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    count = 0\n    ok = 0\n    for i in range(n - 1):\n        if arr[i] > arr[i + 1]:\n            if x <= arr[i + 1]:\n                j = i - 1\n                while j >= 0:\n                    if x < arr[j]:\n                        j = j - 1\n                    else:\n                        break\n                count = count + len(set(arr[j + 1:i + 1]))\n                x = swap(j + 1, i, x)\n                if arr[i] > arr[i + 1]:\n                    ok = 1\n            else:\n                ok = 1\n    if ok == 1:\n        print('-1')\n    else:\n        print(count)", "def sol():\n    (n, x) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    a = 0\n    solution = 0\n    if arr == sorted(arr):\n        return 0\n    for i in range(n):\n        if arr[i] > x:\n            solution += 1\n            (arr[i], x) = (x, arr[i])\n            if arr == sorted(arr):\n                return solution\n        if i == len(arr) - 1:\n            return -1\n    return solution\nfor _ in range(int(input())):\n    print(sol())", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        if sorted(arr) == arr:\n            break\n        if arr[i] > x:\n            (x, arr[i]) = (arr[i], x)\n            count += 1\n    if sorted(arr) == arr:\n        print(count)\n    else:\n        print(-1)", "T = int(input())\nr = 1\nwhile r <= T:\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ans = 0\n    stack = [0]\n    temp = [x]\n    for i in range(len(arr)):\n        a = arr[i]\n        if stack[-1] <= a:\n            stack.append(a)\n            continue\n        if stack[-1] <= temp[-1]:\n            ans = -1\n            break\n        while stack[-1] > temp[0]:\n            temp.append(stack.pop())\n        temp = [temp[0]] + temp[1:][::-1]\n        for ele in temp[:-1]:\n            stack.append(ele)\n            if ele != arr[len(stack) - 2]:\n                ans += 1\n        temp = [temp[-1]]\n        if stack[-1] <= a:\n            stack.append(a)\n        else:\n            ans = -1\n            break\n    print(ans)\n    r += 1", "I = input\nfor _ in range(int(I())):\n    (n, k) = map(int, I().split())\n    l = [*map(int, I().split())]\n    a = 0\n    for i in range(n):\n        if sorted(l) == l:\n            break\n        if l[i] > k:\n            (l[i], k) = (k, l[i])\n            a += 1\n    print([-1, a][sorted(l) == l])", "from sys import stdin\nstdin.readline\n\ndef mp():\n    return list(map(int, stdin.readline().strip().split()))\n\ndef it():\n    return int(stdin.readline().strip())\n\ndef not_sorted(l):\n    for i in range(1, len(l)):\n        if l[i] < l[i - 1]:\n            return 1\n    return 0\nfor _ in range(it()):\n    (n, x) = mp()\n    l = mp()\n    (count, flag, i) = (0, 0, 0)\n    while not_sorted(l):\n        count += 1\n        while i < n and l[i] <= x:\n            i += 1\n        if i == n:\n            flag = 1\n            break\n        (l[i], x) = (x, l[i])\n    if flag:\n        print(-1)\n    else:\n        print(count)", "import collections\nfrom collections import defaultdict\nimport math\nfrom collections import Counter\n\ndef fun(a):\n    flag = True\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            flag = False\n            break\n    return flag\nfor _ in range(int(input())):\n    (n, x) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    ans = 0\n    flag = fun(a)\n    if flag:\n        print(0)\n        continue\n    while not fun(a):\n        flag = False\n        for i in range(n):\n            if a[i] > x:\n                (a[i], x) = (x, a[i])\n                ans += 1\n                flag = True\n                break\n        if not flag:\n            ans = -1\n            break\n    print(ans)", "I = input\nfor _ in range(int(I())):\n    (n, k) = map(int, I().split())\n    l = [*map(int, I().split())]\n    a = 0\n    for i in range(n):\n        if sorted(l) == l:\n            break\n        if l[i] > k:\n            (l[i], k) = (k, l[i])\n            a += 1\n    print([-1, a][sorted(l) == l])", "T = int(input())\nfor _ in range(T):\n    (N, X) = map(int, input().split())\n    L1 = list(map(int, input().split()))\n    D = 0\n    for i in range(N):\n        if L1 == sorted(L1):\n            break\n        if L1[i] > X:\n            (X, L1[i]) = (L1[i], X)\n            D += 1\n    if L1 == sorted(L1):\n        print(D)\n    else:\n        print(-1)", "import sys\nimport math\nfrom collections import defaultdict as dd\nmod = 1000000007\nT = 1\nT = int(sys.stdin.readline())\nfor _ in range(T):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ff = 1\n    for i in range(n - 1):\n        if l[i] > l[i + 1]:\n            ff = 0\n            break\n    if ff:\n        print('0')\n        continue\n    ans = 0\n    flg = 1\n    for i in range(n - 1):\n        if l[i] > x:\n            (x, l[i]) = (l[i], x)\n            ans += 1\n        if l[i] > l[i + 1]:\n            flg = 0\n            break\n        t = 1\n        for j in range(i, n - 1):\n            if l[j] > l[j + 1]:\n                t = 0\n                break\n        if t:\n            break\n    if flg:\n        print(ans)\n    else:\n        print(-1)", "def sortultra():\n    (z, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    if a == sorted(a):\n        return 0\n    else:\n        steps = 0\n        while a != sorted(a):\n            for i in range(len(a)):\n                if x < a[i]:\n                    steps += 1\n                    temp = x\n                    x = a[i]\n                    a[i] = temp\n                    break\n                if i == len(a) - 1:\n                    return -1\n        return steps\nfor _ in range(int(input())):\n    print(sortultra())", "inn = lambda : int(input())\ninm = lambda : map(int, input().split())\nins = lambda : str(input())\nina = lambda : list(map(int, input().split()))\n\ndef solve():\n    (n, x) = inm()\n    a = ina()\n    if sorted(a) == a:\n        print(0)\n        return\n    moves = 0\n    pref = [1] * n\n    for i in range(n - 2, -1, -1):\n        if a[i] <= a[i + 1]:\n            pref[i] = 1 & pref[i + 1]\n        else:\n            pref[i] = 0\n    for (i, v) in enumerate(a):\n        if v > x:\n            (a[i], x) = (x, a[i])\n            moves += 1\n        if pref[i]:\n            break\n    b = a[:]\n    if sorted(b) == a:\n        print(moves)\n    else:\n        print(-1)\n\ndef main():\n    t = 1\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "inn = lambda : int(input())\ninm = lambda : map(int, input().split())\nins = lambda : str(input())\nina = lambda : list(map(int, input().split()))\n\ndef solve():\n    (n, x) = inm()\n    a = ina()\n    moves = 0\n    pref = [1] * n\n    for i in range(n - 2, -1, -1):\n        if a[i] <= a[i + 1]:\n            pref[i] = 1 & pref[i + 1]\n        else:\n            pref[i] = 0\n    for (i, v) in enumerate(a):\n        if pref[i]:\n            break\n        if v > x:\n            (a[i], x) = (x, a[i])\n            moves += 1\n    b = a[:]\n    if sorted(b) == a:\n        print(moves)\n    else:\n        print(-1)\n\ndef main():\n    t = 1\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "Inp = input\nfor _ in range(int(Inp())):\n    (n, k) = map(int, Inp().split())\n    l = [*map(int, Inp().split())]\n    b = 0\n    for i in range(n):\n        if sorted(l) == l:\n            break\n        if l[i] > k:\n            (l[i], k) = (k, l[i])\n            b += 1\n    print([-1, b][sorted(l) == l])", "I = lambda : map(int, input().split())\ns = sorted\n(T,) = I()\nfor _ in range(T):\n    (n, k) = I()\n    l = [*I()]\n    a = 0\n    for i in range(n):\n        if s(l) == l:\n            break\n        if l[i] > k:\n            (l[i], k) = (k, l[i])\n            a += 1\n    print([a, -1][s(l) < l])", "import sys\nimport math\nmod = 10 ** 9 + 7\nLI = lambda : [int(k) for k in input().split()]\ninput = lambda : sys.stdin.readline().rstrip()\nIN = lambda : int(input())\nS = lambda : input()\nr = range\nfor t in r(IN()):\n    (n, k) = LI()\n    a = LI()\n    flag = False\n    cnt = 0\n    ans = 0\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            if a[i] > k and a[i + 1] >= k:\n                (a[i], k) = (k, a[i])\n                ans += cnt + 1\n                cnt = 0\n            else:\n                print(-1)\n                break\n        elif a[i] > k:\n            k = a[i]\n            cnt += 1\n    else:\n        print(ans)", "for T in range(int(input())):\n    (n, x) = [int(x) for x in input().split()]\n    arr = [int(x) for x in input().split()]\n    ans = 0\n    if arr == sorted(arr):\n        print(ans)\n        continue\n    done = 0\n    for i in range(n):\n        if arr == sorted(arr):\n            print(ans)\n            done = 1\n            break\n        if arr[i] > x:\n            (arr[i], x) = (x, arr[i])\n            ans += 1\n    if done:\n        continue\n    elif arr == sorted(arr):\n        print(ans)\n    else:\n        print(-1)", "def check(l, n):\n    for i in range(n - 1):\n        if l[i] > l[i + 1]:\n            return False\n    return True\n\ndef main(n, x, l):\n    c = 0\n    for i in range(n):\n        if check(l, n) is True:\n            return c\n        if l[i] > x:\n            (x, l[i]) = (l[i], x)\n            c += 1\n    if check(l, n) is True:\n        return c\n    return -1\nk = int(input())\nfor _ in range(k):\n    (n, x) = map(int, input().strip().split())\n    l = list(map(int, input().strip().split()))\n    n = len(l)\n    print(main(n, x, l))", "from collections import Counter\nfrom math import *\nfrom os import rename\nimport sys\nmod = 1000000007\n\ndef is_sorted(arr):\n    for i in range(1, len(arr)):\n        if arr[i - 1] > arr[i]:\n            return 0\n    return 1\n\ndef first(arr, x):\n    for i in range(len(arr)):\n        if arr[i] > x:\n            return i\n    return -1\n\ndef pro(arr, x):\n    ans = 0\n    while not is_sorted(arr):\n        ind = first(arr, x)\n        if ind == -1:\n            break\n        ans += 1\n        (arr[ind], x) = (x, arr[ind])\n    print(ans if is_sorted(arr) else -1)\nt = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    pro(arr, k)", "from sys import stdin, stdout\nimport collections, heapq, bisect, math\ninput = stdin.readline\n\ndef rint():\n    return int(input())\n\ndef rstr():\n    return input().strip()\n\ndef rlstr():\n    return list(input().strip().split())\n\ndef rlint():\n    return list(map(int, input().split()))\n\ndef main():\n    (n, x) = rlint()\n    arr = rlint()\n    if all((arr[i] <= arr[i + 1] for i in range(n - 1))):\n        return 0\n    res = 0\n    for i in range(n):\n        if x < arr[i]:\n            (x, arr[i]) = (arr[i], x)\n            res += 1\n            flag = True\n            for j in range(n - 1):\n                if arr[j] > arr[j + 1]:\n                    flag = False\n            if flag:\n                return res\n    for i in range(n - 1):\n        if arr[i] > arr[i + 1]:\n            return -1\n    return res\nfor _ in range(rint()):\n    print(main())", "from sys import stdin, stdout\nimport collections, heapq, bisect, math\ninput = stdin.readline\n\ndef rint():\n    return int(input())\n\ndef rstr():\n    return input().strip()\n\ndef rlstr():\n    return list(input().strip().split())\n\ndef rlint():\n    return list(map(int, input().split()))\n\ndef main():\n    (n, x) = rlint()\n    arr = rlint()\n    if all((arr[i] <= arr[i + 1] for i in range(n - 1))):\n        return 0\n    res = 0\n    for i in range(n):\n        if x < arr[i]:\n            (x, arr[i]) = (arr[i], x)\n            res += 1\n            flag = True\n            for j in range(i, n - 1):\n                if arr[j] > arr[j + 1]:\n                    flag = False\n                    break\n            if flag:\n                return res\n        if i > 0 and arr[i - 1] > arr[i]:\n            return -1\n    return res\nfor _ in range(rint()):\n    print(main())", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    res = 0\n    i = 0\n    backward = False\n    while i < n - 1:\n        if not backward:\n            if a[i] > a[i + 1]:\n                if a[i] <= x or x > a[i + 1]:\n                    res = -1\n                    break\n                elif i > 0:\n                    if a[i - 1] <= x:\n                        buffer = a[i]\n                        a[i] = x\n                        x = buffer\n                        res += 1\n                        i += 1\n                    else:\n                        backward = True\n                        i -= 1\n                else:\n                    buffer = a[i]\n                    a[i] = x\n                    x = buffer\n                    res += 1\n                    i += 1\n            else:\n                i += 1\n        elif i > 0:\n            if a[i - 1] > x:\n                i -= 1\n            else:\n                backward = False\n                buffer = a[i]\n                a[i] = x\n                x = buffer\n                res += 1\n                i += 1\n        else:\n            backward = False\n            buffer = a[i]\n            a[i] = x\n            x = buffer\n            res += 1\n            i += 1\n    print(res)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    l = 0\n    sumo = 0\n    for j in range(1, n):\n        if a[j] < a[j - 1]:\n            l = l + 1\n    if l == 0:\n        print('0')\n    else:\n        l = 0\n        m = 0\n        for j in range(n - 1, 1, -1):\n            m = m + 1\n            if a[j] < a[j - 1]:\n                break\n        for j in range(n):\n            if a[j] > k:\n                if j >= n - m:\n                    break\n                t = a[j]\n                a[j] = k\n                k = t\n                sumo = sumo + 1\n        for j in range(1, n):\n            if a[j] < a[j - 1]:\n                l = l + 1\n                break\n        if l == 0:\n            print(sumo)\n        else:\n            print('-1')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    ans = 0\n    temp = 0\n    x1 = x\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            if a[i] <= x:\n                ans = -1\n                break\n            elif x > a[i + 1]:\n                ans = -1\n                break\n            else:\n                ans += 1 + temp\n                x = a[i]\n            temp = 0\n        elif x < a[i] and i == 0:\n            temp += 1\n            x = a[i]\n        elif i != 0:\n            if x < a[i] and a[i] != a[i - 1]:\n                temp += 1\n                x = a[i]\n    print(ans)", "def notsorted(l, n):\n    for i in range(0, n - 1):\n        if l[i] > l[i + 1]:\n            return True\n    return False\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = 0\n    i = 0\n    flag = True\n    while notsorted(l, n):\n        ans += 1\n        while i < n and l[i] <= x:\n            i += 1\n        if i == n:\n            print(-1)\n            flag = False\n            break\n        else:\n            (x, l[i]) = (l[i], x)\n    if flag:\n        print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    cnt = 0\n    tmp = sorted(arr)\n    if tmp == arr:\n        print('0')\n    else:\n        for i in range(n):\n            if arr[i] > x:\n                (arr[i], x) = (x, arr[i])\n                cnt += 1\n            if arr == sorted(arr):\n                break\n        tmp = sorted(arr)\n        if arr != tmp:\n            print(-1)\n        else:\n            print(cnt)", "def sol():\n    for _ in range(int(input())):\n        (n, x) = map(int, input().split())\n        arr = list(map(int, input().split()))\n        if arr == sorted(arr):\n            print(0)\n        else:\n            count = 0\n            flag = False\n            for i in range(n):\n                if arr[i] > x:\n                    (arr[i], x) = (x, arr[i])\n                    count += 1\n                    if arr == sorted(arr):\n                        flag = True\n                        break\n            if flag == False:\n                print(-1)\n            else:\n                print(count)\nsol()", "for _ in range(0, int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    t = 0\n    for i in range(0, n):\n        if a == sorted(a):\n            break\n        elif a[i] > x:\n            m = x\n            x = a[i]\n            a[i] = m\n            t += 1\n        else:\n            continue\n    if a == sorted(a):\n        print(t)\n    else:\n        print(-1)", "t = int(input())\n\ndef is_sorted(a, i, j):\n    if i == j or i + 1 == j:\n        return True\n    if a[i] > a[i + 1]:\n        return False\n    for ii in range(i + 1, j):\n        if a[ii - 1] > a[ii]:\n            return False\n    return True\nwhile t:\n    (n, x) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    if is_sorted(arr, 0, len(arr)):\n        print(0)\n    else:\n        ans = 0\n        for i in range(len(arr)):\n            if arr[i] > x:\n                tmp = arr[i]\n                arr[i] = x\n                x = tmp\n                ans += 1\n            if is_sorted(arr, i, len(arr)):\n                break\n        if is_sorted(arr, 0, len(arr)):\n            print(ans)\n        else:\n            print(-1)\n    t -= 1", "def read():\n    return [int(x) for x in input().split()]\n(ca,) = read()\nfor _ in range(ca):\n    (n, x) = read()\n    ds = read()\n    i = 0\n    r = 0\n    for j in range(1, len(ds)):\n        if ds[j] < ds[j - 1]:\n            while i < j:\n                if x < ds[i]:\n                    r += 1\n                    ds[i] ^= x\n                    x ^= ds[i]\n                    ds[i] ^= x\n                i += 1\n        if ds[j] < ds[j - 1]:\n            r = -1\n            break\n    print(r)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if arr == sorted(arr):\n        print(0)\n    else:\n        res = 0\n        for i in range(n):\n            if arr[i] > x:\n                temp = x\n                x = arr[i]\n                arr[i] = temp\n                res += 1\n            if arr == sorted(arr):\n                print(res)\n                break\n            elif i == n - 1:\n                print(-1)\n                break", "import sys\n\ndef solve():\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    o = 0\n    if a == sorted(a):\n        print(o)\n        return\n    for i in range(len(a)):\n        if a == sorted(a):\n            print(o)\n            return\n        if a[i] > x:\n            temp = a[i]\n            a[i] = x\n            x = temp\n            o += 1\n    if a != sorted(a):\n        print(-1)\n    else:\n        print(o)\nnum = int(input())\nfor n in range(num):\n    solve()", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    prob = 0\n    rang = 0\n    for i in range(1, n):\n        if a[i] < a[i - 1]:\n            prob = 1\n            rang = i\n    for i in range(rang):\n        if a[i] > k:\n            (a[i], k) = (k, a[i])\n            ans += 1\n    probb = 0\n    for i in range(1, n):\n        if a[i] < a[i - 1]:\n            probb = 1\n            break\n    if prob == 0:\n        print('0')\n    elif probb == 1:\n        print('-1')\n    else:\n        print(ans)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ans = 0\n    while not all((arr[j] <= arr[j + 1] for j in range(len(arr) - 1))):\n        ans += 1\n        for j in range(len(arr)):\n            if arr[j] > x:\n                (arr[j], x) = (x, arr[j])\n                break\n        else:\n            ans = -1\n            break\n    print(ans)", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    j = list(map(int, input().split()))\n    k = 0\n    m = 0\n    if j == sorted(j):\n        m = 1\n        print(k)\n    elif j != sorted(j):\n        for z in range(len(j)):\n            if j[z] > x:\n                t = j[z]\n                j[z] = x\n                x = t\n                k += 1\n                if j == sorted(j):\n                    m = 1\n                    print(k)\n                    break\n    if m == 0:\n        print(-1)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l1 = list(map(int, input().split()))\n    l2 = l1[:]\n    l2.sort()\n    if l1 == l2:\n        print(0)\n    else:\n        co = 0\n        for i in range(n):\n            f1 = 0\n            if l1[i] <= x:\n                pass\n            else:\n                (l1[i], x) = (x, l1[i])\n                co += 1\n                for j in range(i + 1, n - 1, 1):\n                    if l1[j] > l1[j + 1]:\n                        f1 = 1\n                if f1 == 0:\n                    break\n        l3 = l1[:]\n        l3.sort()\n        if l3 == l1:\n            print(co)\n        else:\n            print(-1)", "import sys\nfrom bisect import bisect_left\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nf_inf = float('inf')\nmod = 10 ** 9 + 7\n\ndef resolve():\n    t = int(input())\n    for _ in range(t):\n        (n, x) = map(int, input().split())\n        A = [-f_inf] + list(map(int, input().split())) + [f_inf]\n        res = 0\n        while True:\n            for i in range(n + 1):\n                if A[i] > A[i + 1]:\n                    break\n            else:\n                break\n            for i in range(n + 1):\n                if A[i] > x:\n                    tmp = A[i]\n                    A[i] = x\n                    x = tmp\n                    res += 1\n                    break\n            else:\n                res = -1\n                break\n        print(res)\nresolve()", "t = int(input())\n\ndef do_step(arr, x, i):\n    while i < len(arr):\n        if x < arr[i]:\n            (arr[i], x) = (x, arr[i])\n            return (x, i)\n        i += 1\n    return (x, i)\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    arr = [int(v) for v in input().split()]\n    steps = 0\n    i = 0\n    while i != len(arr):\n        if sorted(arr) == arr:\n            break\n        (x, i) = do_step(arr, x, i)\n        if i != -1:\n            steps += 1\n    if sorted(arr) != arr:\n        steps = -1\n    print(steps)", "def find(a, si):\n    x = a[si]\n    for i in range(si + 1, len(a)):\n        if x > a[i]:\n            return False\n        x = a[i]\n    return True\n\ndef solve(a, x):\n    p = 0\n    c = 0\n    while p < len(a):\n        if find(a, 0):\n            return c\n        if x < a[p]:\n            (x, a[p]) = (a[p], x)\n            c += 1\n        p += 1\n    return -1\nt = int(input())\nfor _ in range(t):\n    (n, x) = [int(i) for i in input().split()]\n    l = [int(i) for i in input().split()]\n    print(solve(l, x))", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        if sorted(arr) == arr:\n            break\n        if arr[i] > x:\n            (x, arr[i]) = (arr[i], x)\n            count += 1\n    print(count) if sorted(arr) == arr else print(-1)", "import math\n\ndef check(l):\n    return l == sorted(l)\nfor tt in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ma = -1\n    cnt = 0\n    while not check(l):\n        ind = -1\n        for i in range(n):\n            if l[i] > x:\n                ind = i\n                (l[i], x) = (x, l[i])\n                cnt += 1\n                break\n        if check(l):\n            break\n        if ind == -1:\n            break\n    if check(l):\n        print(cnt)\n    else:\n        print(-1)", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        if sorted(arr) == arr:\n            break\n        if arr[i] > x:\n            (x, arr[i]) = (arr[i], x)\n            count += 1\n    print(count) if sorted(arr) == arr else print(-1)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = [*map(int, input().split())]\n    if l == sorted(l):\n        print(0)\n        continue\n    cunt = 0\n    for i in range(n):\n        if l == sorted(l):\n            break\n        if l[i] > x:\n            (x, l[i]) = (l[i], x)\n            cunt += 1\n    if l == sorted(l):\n        print(cunt)\n        continue\n    print(-1)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    count = 0\n    if l == sorted(l):\n        print(0)\n    else:\n        for i in range(n):\n            if l[i] > x:\n                (l[i], x) = (x, l[i])\n                count += 1\n            if l == sorted(l):\n                break\n        if l == sorted(l):\n            print(count)\n        else:\n            print(-1)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    count = 0\n    if l == sorted(l):\n        print(0)\n    else:\n        for i in range(n):\n            if l[i] > x:\n                (l[i], x) = (x, l[i])\n                count += 1\n            if l == sorted(l):\n                break\n        if l == sorted(l):\n            print(count)\n        else:\n            print(-1)", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    m = 0\n    for i in range(n):\n        if sorted(l) == l:\n            break\n        if l[i] > x:\n            c = max(l[i], x)\n            l[i] = x\n            x = c\n            m += 1\n    k = sorted(l)\n    if k == l:\n        print(m)\n    else:\n        print(-1)", "def calc_swaps(nums, x):\n    if nums == sorted(nums):\n        return 0\n    swaps = 0\n    for ind in range(len(nums)):\n        if nums[ind] > x:\n            (x, nums[ind]) = (nums[ind], x)\n            swaps += 1\n        if nums == sorted(nums):\n            return swaps\n    return -1\ndata_count = int(input())\nans = []\nfor _ in range(data_count):\n    (cnt, x) = list(map(int, input().split()))\n    nums = list(map(int, input().split()))\n    ans.append(calc_swaps(nums, x))\nfor res in ans:\n    print(res)", "def not_sorted(n, a):\n    for i in range(1, n):\n        if a[i] < a[i - 1]:\n            return -1\n    return 0\n\ndef solve(n, x, a):\n    cnt = 0\n    while not_sorted(n, a):\n        cnt += 1\n        i = 0\n        while i < n and a[i] <= x:\n            i += 1\n        if i == n:\n            return -1\n        (a[i], x) = (x, a[i])\n    return cnt\nt = int(input())\nwhile t:\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solve(n, x, a))\n    t -= 1", "test = int(input())\nfor t in range(0, test):\n    (n, x) = input().split()\n    n = int(n)\n    x = int(x)\n    a = [int(i) for i in input().split(' ')]\n    ans = 0\n    while 1:\n        if a == sorted(a):\n            print(ans)\n            break\n        f = 0\n        for i in range(0, len(a)):\n            if a[i] > x:\n                temp = a[i]\n                a[i] = x\n                x = temp\n                ans += 1\n                f = 1\n                break\n        if a == sorted(a):\n            print(ans)\n            break\n        if f == 0:\n            print(-1)\n            break", "def check(ll):\n    for i in range(len(l) - 1):\n        if l[i] <= l[i + 1]:\n            continue\n        else:\n            return False\n    return True\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    if len(l) == 1:\n        print(0)\n        continue\n    if check(l):\n        print(0)\n        continue\n    for i in range(len(l)):\n        if l[i] > k:\n            t = l[i]\n            l[i] = k\n            k = t\n            c += 1\n            if not check(l):\n                continue\n            else:\n                break\n    if not check(l):\n        c = -1\n    print(c)", "I = input\nfor _ in range(int(I())):\n    (n, k) = map(int, I().split())\n    l = [*map(int, I().split())]\n    a = 0\n    for i in range(n):\n        if sorted(l) == l:\n            break\n        if l[i] > k:\n            (l[i], k) = (k, l[i])\n            a += 1\n    print([-1, a][sorted(l) == l])", "t = int(input())\nfor i in range(t):\n    (n, x) = [int(c) for c in input().split()]\n    a = [int(c) for c in input().split()]\n    a = [-1] + a + [1000]\n    check1 = check2 = swaps = indx = 0\n    for j in range(n, 1, -1):\n        if a[j - 1] > a[j]:\n            indx = j - 1\n            check1 = 1\n            break\n    for j in range(1, indx + 2):\n        if x < a[j]:\n            swaps += 1\n            (a[j], x) = (x, a[j])\n        if a[j - 1] > a[j]:\n            check2 = 1\n            break\n    if not check1:\n        print(0)\n    elif not check2:\n        print(swaps)\n    else:\n        print(-1)", "def check(a):\n    if sorted(a) == a:\n        return 1\n    return 0\nt = int(input())\nfor _ in range(t):\n    kt = 0\n    cnt = 0\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if check(a):\n        print(0)\n        continue\n    for i in range(n):\n        if x < a[i]:\n            a[i] = a[i] ^ x\n            x = a[i] ^ x\n            a[i] = a[i] ^ x\n            cnt = cnt + 1\n        if check(a):\n            kt = 1\n            break\n    if kt:\n        print(cnt)\n    else:\n        print(-1)", "t = int(input())\nfor o in range(t):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    (c, flag) = (0, False)\n    for i in range(n):\n        m = l[:]\n        m.sort()\n        if m == l:\n            flag = True\n            break\n        elif l[i] > x:\n            (x, l[i]) = (l[i], x)\n            c += 1\n    if flag:\n        print(c)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        if sorted(a) == a:\n            break\n        if a[i] > x:\n            (a[i], x) = (x, a[i])\n            count += 1\n    if sorted(a) == a:\n        print(count)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 0\n    i = 0\n    while i < len(a):\n        if a == sorted(a):\n            break\n        if a[i] > x:\n            (a[i], x) = (x, a[i])\n            count += 1\n        else:\n            i += 1\n    if a == sorted(a):\n        print(count)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = sorted(b)\n    flag = False\n    if b == c:\n        print(0)\n    else:\n        count = 0\n        for j in range(a[0]):\n            if sorted(b) != b:\n                if b[j] > a[1]:\n                    count += 1\n                    (b[j], a[1]) = (a[1], b[j])\n                    if sorted(b) == b:\n                        print(count)\n                        flag = True\n                        break\n        if flag == False:\n            print(-1)", "a = int(input())\nfor i in range(a):\n    (n, k) = map(int, input().split())\n    x = list(map(int, input().split()))\n    l = 0\n    for j in range(n):\n        if sorted(x) == x:\n            break\n        elif x[j] > k:\n            (x[j], k) = (k, x[j])\n            l = l + 1\n    if sorted(x) == x:\n        print(l)\n    else:\n        print(-1)", "n = int(input())\nwhile n > 0:\n    (a, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    i = 0\n    count = 0\n    while i < len(arr):\n        if sorted(arr) == arr:\n            break\n        if arr[i] > x:\n            (x, arr[i]) = (arr[i], x)\n            count += 1\n        i += 1\n    if sorted(arr) == arr:\n        print(count)\n    else:\n        print(-1)\n    n -= 1", "t_count = int(input())\nfor _ in range(t_count):\n    (num_count, x) = map(int, input().split())\n    nums = list(map(int, input().split()))\n    operation_count = 0\n    sorted_until = 0\n    place_of_x = 0\n    last_was_swap = False\n    while sorted_until != num_count - 1:\n        if nums[sorted_until + 1] >= nums[sorted_until]:\n            if nums[sorted_until] <= x:\n                place_of_x += 1\n            sorted_until += 1\n            last_was_swap = False\n        else:\n            operation_count += 1\n            (nums[place_of_x], x) = (x, nums[place_of_x])\n            if last_was_swap:\n                operation_count = -1\n                break\n            last_was_swap = True\n            sorted_until = place_of_x\n    print(operation_count)", "def check(arr):\n    newarr = []\n    for i in range(1, len(arr)):\n        if arr[i - 1] > arr[i]:\n            return False\n    return True\nt = int(input())\nfor i in range(t):\n    (n, x) = input().split()\n    n = int(n)\n    x = int(x)\n    a = [int(i) for i in input().split()]\n    j = 0\n    c = 0\n    while j < n:\n        if check(a):\n            break\n        if a[j] > x:\n            (a[j], x) = (x, a[j])\n            c += 1\n        j += 1\n    z = []\n    for i in a:\n        z.append(i)\n    z.sort()\n    c1 = 0\n    for i in range(len(a)):\n        if a[i] == z[i]:\n            c1 += 1\n    if c1 == len(a):\n        pass\n    else:\n        c = -1\n    print(c)", "def func(x, l1):\n    num = 0\n    x0 = 0\n    repeat = 0\n    for i in range(len(l1) - 1):\n        if l1[i] <= x:\n            x0 = i + 1\n        if x0 < i:\n            if l1[i] == l1[i - 1]:\n                repeat += 1\n        if l1[i] > l1[i + 1]:\n            if x > l1[i + 1] or (i > 0 and l1[i - 1] > l1[i + 1]):\n                return -1\n            num += i + 1 - x0 - repeat\n            repeat = 0\n            xx = x\n            x = l1[i]\n            l1[i] = xx\n    return num\nfor test_num in range(int(input())):\n    x = int(input().split(' ')[1])\n    l = input().split(' ')\n    l1 = []\n    for i in l:\n        l1.append(int(i))\n    print(func(x, l1))", "def swap(arr, x):\n    count = 0\n    for i in range(1, len(arr)):\n        if arr[i] < x and arr[i] < arr[i - 1]:\n            return -1\n        if arr[i] < arr[i - 1]:\n            for j in range(0, i):\n                if arr[j] > x:\n                    scratch = x\n                    x = arr[j]\n                    arr[j] = scratch\n                    count += 1\n            if arr[i] < x and arr[i] < arr[i - 1]:\n                return -1\n            if arr[i] < arr[i - 1]:\n                scratch = x\n                x = arr[i]\n                arr[i] = scratch\n                count += 1\n    return count\nt = int(input())\nfor i in range(0, t):\n    nx = list(map(int, input().strip().split()))\n    arr = list(map(int, input().strip().split()))\n    print(swap(arr, nx[1]))", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_int():\n    return list(map(int, sys.stdin.readline().strip().split()))[0]\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\nN = 0\na = []\n\ndef solve():\n    global N\n    (N, X) = get_ints()\n    a = get_list()\n    lastSortedPosition = N - 1\n    notSorted = False\n    for i in reversed(range(1, N)):\n        if a[i] < a[i - 1]:\n            lastSortedPosition = i\n            notSorted = True\n            break\n    if not notSorted:\n        print(0)\n        return\n    bad = False\n    answer = 0\n    for i in range(lastSortedPosition):\n        if a[i] > X:\n            (a[i], X) = (X, a[i])\n            answer = answer + 1\n            if i != N - 1 and a[i] > a[i + 1]:\n                bad = True\n                break\n        elif i == lastSortedPosition - 1 and a[i] > a[i + 1]:\n            bad = True\n            break\n        elif i != 0 and a[i] < a[i - 1]:\n            bad = True\n            break\n    if bad:\n        print(-1)\n    else:\n        print(answer)\ntest_cases = get_int()\nfor _ in range(test_cases):\n    solve()", "import math\nfrom math import log2, sqrt\nimport sys\nfrom sys import stdin, stdout\nimport os\nsys.setrecursionlimit(pow(10, 6))\nimport collections\nfrom collections import defaultdict\nfrom statistics import median\ninf = float('inf')\n\ndef fun(index, previous, x):\n    if index == n:\n        return 0\n    if l[index] < previous:\n        return inf\n    if l[index] <= x or x < previous:\n        no_change = fun(index + 1, l[index], x)\n        return no_change\n    if True:\n        no_change = fun(index + 1, l[index], x)\n        change = 1 + fun(index + 1, x, l[index])\n        return min(no_change, change)\nt = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = fun(0, -1, x)\n    if ans == inf:\n        print(-1)\n        continue\n    print(ans)", "def ans(arr, x):\n    if len(arr) == 1:\n        return 0\n    elif arr == sorted(arr):\n        return 0\n    else:\n        cnt = 0\n        for i in range(len(arr)):\n            if arr[i] > x:\n                (arr[i], x) = (x, arr[i])\n                cnt += 1\n            if arr == sorted(arr):\n                return cnt\n                break\n    return -1\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(ans(arr, x))", "a = int(input())\nfor i in range(0, a):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    i = 0\n    count = 0\n    while i < len(arr):\n        if sorted(arr) == arr:\n            break\n        if arr[i] > x:\n            (x, arr[i]) = (arr[i], x)\n            count = count + 1\n        i = i + 1\n    if sorted(arr) == arr:\n        print(count)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    s = 0\n    a = list(map(int, input().split()))\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            s = 1\n    if s == 0:\n        print(0)\n    else:\n        c = 0\n        for i in range(n - 1):\n            if a[i] > x:\n                (a[i], x) = (x, a[i])\n                c += 1\n                jj = 1\n                for j in range(i, n - 1):\n                    if a[j] > a[j + 1]:\n                        jj = 0\n                if jj == 1:\n                    break\n        r = 0\n        for i in range(n - 1):\n            if a[i] > a[i + 1]:\n                r = 1\n        if r == 1:\n            print(-1)\n        else:\n            print(c)", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_string():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_print_int(x):\n    sys.stdout.write(str(x) + '\\n')\n\ndef get_print(x):\n    sys.stdout.write(x + '\\n')\nfrom sys import maxsize\n\ndef arrsort(arr, n):\n    for i in range(1, n):\n        if arr[i] < arr[i - 1]:\n            return False\n    return True\n\ndef solve():\n    for _ in range(get_int()):\n        (n, x) = get_ints()\n        arr = get_list()\n        if arrsort(arr, n):\n            get_print_int(0)\n        else:\n            ans = 0\n            f = 0\n            while True:\n                ans += 1\n                i = 0\n                while i < n and arr[i] <= x:\n                    i += 1\n                if i == n:\n                    ans = -1\n                    break\n                (arr[i], x) = (x, arr[i])\n                if arrsort(arr, n):\n                    break\n            get_print_int(ans)\nsolve()", "import sys\nimport math\nfrom collections import Counter, defaultdict\nLI = lambda : list(map(int, input().split()))\nMAP = lambda : map(int, input().split())\nIN = lambda : int(input())\nS = lambda : input()\n\ndef case():\n    (n, x) = MAP()\n    a = LI()\n    b = a.copy()\n    b.sort()\n    for i in range(n - 1, -1, -1):\n        if b[i] != a[i]:\n            break\n        else:\n            a.pop()\n    l = len(a)\n    if l == 0:\n        print(0)\n        return\n    b = b[:l]\n    b.remove(max(a))\n    b += [x]\n    b.sort()\n    c = []\n    for i in range(l):\n        if a[i] != b[i]:\n            c += [a[i]]\n    for i in range(1, len(c)):\n        if c[i - 1] > c[i]:\n            print(-1)\n            return\n    if x >= min(c):\n        print(-1)\n    else:\n        print(len(c))\nfor _ in range(IN()):\n    case()", "import copy\nt = int(input())\nfor _ in range(t):\n    (n, x) = (int(number) for number in input().split(' '))\n    number_list = [int(number) for number in input().split(' ')]\n    temp = copy.copy(number_list)\n    temp.append(x)\n    all_numbers_sorted = sorted(temp)\n    if number_list == sorted(number_list):\n        print(0)\n    elif all_numbers_sorted[n] == x:\n        print(-1)\n    else:\n        number_of_correct_at_end = 0\n        number_of_possibly_correct = 0\n        for i in range(n - 1, -1, -1):\n            if number_list[i] == all_numbers_sorted[i + 1]:\n                number_of_correct_at_end += 1\n            else:\n                break\n        operations = 0\n        busted = False\n        for i in range(0, n - number_of_correct_at_end):\n            if number_list[i] == all_numbers_sorted[i]:\n                continue\n            elif x == all_numbers_sorted[i]:\n                x = number_list[i]\n                operations += 1\n            else:\n                busted = True\n                break\n        if busted:\n            print(-1)\n        else:\n            print(operations)", "t = int(input())\nall = []\nx_arr = []\nfor i in range(t):\n    k = input()\n    k = [int(m) for m in k.split()]\n    (l, x) = k\n    x_arr.append(x)\n    h = input()\n    a = [int(z) for z in h.split()]\n    all.append(a)\nfor i in range(t):\n    x = x_arr[i]\n    arr = all[i]\n    sorted_ = sorted(arr)\n    if sorted_ == arr:\n        print(0)\n    else:\n        step = 0\n        for idx in range(len(arr)):\n            if x < arr[idx]:\n                swa = x\n                x = arr[idx]\n                arr[idx] = swa\n                step += 1\n            s = sorted(arr)\n            if s == arr:\n                break\n        if sorted(arr) == arr:\n            print(step)\n        else:\n            print(-1)", "a = int(input())\nfor i in range(0, a):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    i = 0\n    count = 0\n    while i < len(arr):\n        if sorted(arr) == arr:\n            break\n        if arr[i] > x:\n            (x, arr[i]) = (arr[i], x)\n            count = count + 1\n        i = i + 1\n    if sorted(arr) == arr:\n        print(count)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = 0\n    f = 0\n    for i in range(1, n):\n        if l[i] < l[i - 1]:\n            f = 1\n            break\n    if f == 1:\n        for i in range(n):\n            ff = 0\n            if l[i] > x:\n                temp = l[i]\n                l[i] = x\n                x = temp\n                ans += 1\n            for i in range(1, n):\n                if l[i] < l[i - 1]:\n                    ff = 1\n                    break\n            if ff == 0:\n                break\n        if ff == 1:\n            print(-1)\n        else:\n            print(ans)\n    else:\n        print(0)", "t = int(input())\nans = ''\n\ndef is_sorted(lst, key=lambda x: x):\n    for (i, el) in enumerate(lst[1:]):\n        if key(el) < key(lst[i]):\n            return False\n    return True\nfor j in range(t):\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    cnt = 0\n    if is_sorted(a) == False:\n        for i in range(n):\n            if x < a[i]:\n                (x, a[i]) = (a[i], x)\n                cnt += 1\n            if is_sorted(a):\n                break\n    if is_sorted(a) == False:\n        cnt = -1\n    ans += str(cnt) + '\\n'\nprint(ans)", "n = int(input())\nwhile n > 0:\n    (a, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    i = 0\n    count = 0\n    while i < len(arr):\n        if sorted(arr) == arr:\n            break\n        if arr[i] > x:\n            (x, arr[i]) = (arr[i], x)\n            count += 1\n        i += 1\n    if sorted(arr) == arr:\n        print(count)\n    else:\n        print(-1)\n    n -= 1", "tc = int(input())\nwhile tc:\n    (n, x) = map(int, input().split())\n    li = list(map(int, input().split()))\n    pre = [li[0]]\n    m = 0\n\n    def not_sorted(li):\n        for i in range(1, n):\n            if li[i] < li[i - 1]:\n                return 1\n        return 0\n    m = 0\n    flag = True\n    while not_sorted(li):\n        m += 1\n        i = 0\n        while i < n and li[i] <= x:\n            i += 1\n        if i == n:\n            flag = False\n            break\n        (li[i], x) = (x, li[i])\n    if flag:\n        print(m)\n    else:\n        print(-1)\n    tc -= 1", "for u in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    i = 0\n    ans = 0\n    while i < n:\n        k = list(a)\n        k.sort()\n        if k == a:\n            break\n        if a[i] > x:\n            (a[i], x) = (x, a[i])\n            ans += 1\n        if x > max(a):\n            break\n        i += 1\n    k = list(a)\n    k.sort()\n    if k == a:\n        print(ans)\n    else:\n        print(-1)", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        if sorted(arr) == arr:\n            break\n        if arr[i] > x:\n            (x, arr[i]) = (arr[i], x)\n            count += 1\n    if sorted(arr) == arr:\n        print(count)\n    else:\n        print(-1)", "for u in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        if sorted(a) == a:\n            break\n        if a[i] > k:\n            (a[i], k) = (k, a[i])\n            ans += 1\n    if sorted(a) == a:\n        print(ans)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    f = 1\n    ans = 0\n    for i in range(1, n):\n        if l[i] < l[i - 1]:\n            idx = i - 1\n            val = i - 1\n            for j in range(i - 2, -1, -1):\n                val = j\n                if x >= l[j]:\n                    break\n            idx = val\n            if idx == 0 and l[0] > x:\n                idx -= 1\n            for k in range(idx + 1, i - 1):\n                if x == l[k]:\n                    continue\n                temp = l[k]\n                l[k] = x\n                x = temp\n                ans += 1\n            cv = l[i - 1]\n            if l[i - 1] > x and l[i] >= x:\n                temp = cv\n                l[i - 1] = x\n                x = temp\n                ans += 1\n            else:\n                f = 0\n    if f:\n        print(ans)\n    else:\n        print(-1)", "for i in range(int(input())):\n    (n, x) = [int(_) for _ in input().split()]\n    arr = [int(_) for _ in input().split()]\n    c = 0\n    for i in range(n):\n        if sorted(arr) == arr:\n            break\n        if arr[i] > x:\n            (x, arr[i]) = (arr[i], x)\n            c += 1\n    if sorted(arr) == arr:\n        print(c)\n    else:\n        print(-1)", "def sort1(l):\n    n = len(l)\n    for i in range(1, n):\n        if l[i - 1] > l[i]:\n            return False\n    return True\nfor _ in range(int(input())):\n    (n, x) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    ans = 0\n    f = 0\n    while not sort1(l):\n        ans += 1\n        i = 0\n        while i < n and l[i] <= x:\n            i += 1\n        if i == n:\n            f = 1\n            break\n        (x, l[i]) = (l[i], x)\n    if f == 1:\n        print(-1)\n    else:\n        print(ans)", "I = input\nfor _ in range(int(I())):\n    (n, k) = map(int, I().split())\n    l = [*map(int, I().split())]\n    a = 0\n    for i in range(n):\n        if sorted(l) == l:\n            break\n        if l[i] > k:\n            (l[i], k) = (k, l[i])\n            a += 1\n    print([-1, a][sorted(l) == l])", "I = input\nfor _ in range(int(I())):\n    (n, k) = map(int, I().split())\n    l = [*map(int, I().split())]\n    a = 0\n    for i in range(n):\n        if sorted(l) == l:\n            break\n        if l[i] > k:\n            (l[i], k) = (k, l[i])\n            a += 1\n    print([-1, a][sorted(l) == l])", "def sorted_list(mylist):\n    n = len(mylist)\n    if n == 1:\n        return 1\n    for i in range(1, n):\n        if mylist[i - 1] > mylist[i]:\n            return -1\n        elif i == n - 1:\n            return 1\ncases = int(input())\nfor z in range(cases):\n    (n, x) = input().split()\n    n = int(n)\n    x = int(x)\n    mylist = [int(i) for i in input().split()]\n    flag = 0\n    count = 0\n    for i in range(0, n):\n        if sorted_list(mylist) == 1:\n            flag = 1\n            break\n        if mylist[i] > x:\n            temp = x\n            count += 1\n            x = mylist[i]\n            mylist[i] = temp\n    if flag == 1:\n        print(count)\n    else:\n        print(-1)", "for _ in ' ' * int(input()):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if a == sorted(a):\n        print(0)\n    else:\n        b = sorted(a)\n        cnt = 0\n        for i in range(n):\n            if a == sorted(a):\n                break\n            if a[i] > x:\n                (x, a[i]) = (a[i], x)\n                cnt += 1\n        if a == sorted(a):\n            print(cnt)\n        else:\n            print(-1)", "def solve(l, x):\n    count = 0\n    for i in range(len(l)):\n        if sorted(l) == l:\n            break\n        if l[i] > x:\n            (l[i], x) = (x, l[i])\n            count += 1\n    if sorted(l) == l:\n        return count\n    else:\n        return -1\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    print(solve(l, x))", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    A = [int(x) for x in input().split()]\n    count = 0\n    for i in range(n):\n        if A == sorted(A):\n            break\n        if A[i] > x:\n            k = A[i]\n            A[i] = x\n            x = k\n            count += 1\n    if A == sorted(A):\n        print(count)\n    else:\n        print(-1)", "for i in range(int(input())):\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    n = a[0]\n    x = a[1]\n    if n == 1:\n        print(0)\n        continue\n    i = 0\n    count = 0\n    f = 0\n    flag = 0\n    while i < n:\n        ans = 0\n        for j in range(i, n):\n            if j == 0:\n                continue\n            if b[j] < b[j - 1]:\n                flag = 1\n                break\n        for z in range(i, j + 1):\n            if z == j and b[z] < b[z - 1] and (x < b[z]) and (flag == 1):\n                ans += 1\n                q = b[z]\n                b[z] = x\n                x = q\n                break\n            elif b[z] > x and flag == 1:\n                q = b[z]\n                b[z] = x\n                x = q\n                ans += 1\n        i = j + 1\n        flag = 0\n        for g in range(1, j + 1):\n            if b[g] < b[g - 1]:\n                f = 1\n        if f == 1:\n            count = -1\n            break\n        else:\n            count += ans\n    if f == 1:\n        print(-1)\n    else:\n        print(count)", "def check(arr):\n    for i in range(len(arr) - 1):\n        if arr[i] > arr[i + 1]:\n            return False\n    return True\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if check(arr):\n        print(0)\n    else:\n        asn = 0\n        for j in range(n):\n            if arr[j] > x:\n                (arr[j], x) = (x, arr[j])\n                asn += 1\n            if check(arr):\n                break\n        if check(arr) == False:\n            print(-1)\n        else:\n            print(asn)", "from collections import defaultdict as dd\nfrom sys import stdin, stdout\nfrom bisect import bisect_left, insort\nfrom math import log, sqrt\nfor t in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = a.copy()\n    b.sort()\n    if a == b:\n        print(0)\n        continue\n    c = 0\n    flag = True\n    for i in range(n):\n        if a[i] > x:\n            (a[i], x) = (x, a[i])\n            c += 1\n        b = a.copy()\n        b.sort()\n        if a == b:\n            print(c)\n            flag = False\n            break\n    if flag:\n        print(-1)", "t = int(input())\n\ndef swap(a, b):\n    return (b, a)\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    l = [*map(int, input().split())]\n    a = 0\n    for i in range(n):\n        if sorted(l) == l:\n            break\n        if l[i] > x:\n            (l[i], x) = swap(l[i], x)\n            a += 1\n    print([-1, a][sorted(l) == l])"]