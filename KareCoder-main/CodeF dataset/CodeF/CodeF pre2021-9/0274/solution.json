["def read_int():\n    return int(input())\n\ndef read_ints():\n    return map(int, input().split(' '))\nt = read_int()\nfor case_num in range(t):\n    n = read_int()\n    a = []\n    for i in range(n):\n        a.append(input())\n    ans = []\n    pos = [(0, 1), (1, 0), (n - 1, n - 2), (n - 2, n - 1)]\n    target = '0011'\n    for (i, p) in enumerate(pos):\n        if a[p[0]][p[1]] != target[i]:\n            ans.append((p[0] + 1, p[1] + 1))\n    if len(ans) <= 2:\n        print(len(ans))\n        for (r, c) in ans:\n            print(r, c)\n    else:\n        target = '1100'\n        ans = []\n        for (i, p) in enumerate(pos):\n            if a[p[0]][p[1]] != target[i]:\n                ans.append((p[0] + 1, p[1] + 1))\n        print(len(ans))\n        for (r, c) in ans:\n            print(r, c)", "for _ in range(int(input())):\n    n = int(input())\n    a = [input() for i in range(n)]\n    a1 = []\n    a2 = []\n    if a[0][1] != '0':\n        a1.append([0, 1])\n    if a[1][0] != '0':\n        a1.append([1, 0])\n    if a[n - 1][n - 2] != '1':\n        a1.append([n - 1, n - 2])\n    if a[n - 2][n - 1] != '1':\n        a1.append([n - 2, n - 1])\n    if a[0][1] != '1':\n        a2.append([0, 1])\n    if a[1][0] != '1':\n        a2.append([1, 0])\n    if a[n - 1][n - 2] != '0':\n        a2.append([n - 1, n - 2])\n    if a[n - 2][n - 1] != '0':\n        a2.append([n - 2, n - 1])\n    if len(a1) <= 2:\n        print(len(a1))\n        for (i, j) in a1:\n            print(i + 1, j + 1)\n    else:\n        print(len(a2))\n        for (i, j) in a2:\n            print(i + 1, j + 1)", "l = [(1, 0), (0, 1), (-1, -2), (-2, -1)]\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = [input() for _ in range(n)]\n    cnt = 0\n    for (x, y) in l:\n        if (s[x][y] == '1') ^ (x >= 0):\n            cnt += 1\n    if cnt >= 2:\n        print(4 - cnt)\n        for (x, y) in l:\n            if (s[x][y] == '1') ^ (x < 0):\n                print(x % n + 1, y % n + 1)\n    else:\n        print(cnt)\n        for (x, y) in l:\n            if (s[x][y] == '1') ^ (x >= 0):\n                print(x % n + 1, y % n + 1)", "for _ in range(int(input())):\n    n = int(input())\n    m = [input() for _ in range(n)]\n    p = [[1, 2], [2, 1], [n - 1, n], [n, n - 1]]\n    w = ['0011', '1100']\n    for u in w:\n        c = []\n        for i in range(4):\n            (x, y) = (p[i][0], p[i][1])\n            if m[x - 1][y - 1] != u[i]:\n                c.append((x, y))\n        if len(c) <= 2:\n            print(len(c))\n            for e in c:\n                print(*e)\n            break", "for _ in range(int(input())):\n    n = int(input())\n    m = [input() for _ in range(n)]\n    p = [[1, 2], [2, 1], [n - 1, n], [n, n - 1]]\n    for w in ['0011', '1100']:\n        c = [(p[i][0], p[i][1]) for i in range(4) if m[p[i][0] - 1][p[i][1] - 1] != w[i]]\n        if len(c) <= 2:\n            print(len(c))\n            for e in c:\n                print(*e)\n            break", "l = [(1, 0), (0, 1), (-1, -2), (-2, -1)]\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = [input() for _ in range(n)]\n    cnt = 0\n    for (x, y) in l:\n        if (s[x][y] == '1') ^ (x >= 0):\n            cnt += 1\n    if cnt >= 2:\n        print(4 - cnt)\n        for (x, y) in l:\n            if (s[x][y] == '1') ^ (x < 0):\n                print(x % n + 1, y % n + 1)\n    else:\n        print(cnt)\n        for (x, y) in l:\n            if (s[x][y] == '1') ^ (x >= 0):\n                print(x % n + 1, y % n + 1)", "def solve(n, grid):\n    l = [(1, 0), (0, 1), (-1, -2), (-2, -1)]\n    cnt = 0\n    for (x, y) in l:\n        if (grid[x][y] == '1') ^ (x >= 0):\n            cnt += 1\n    ret = ''\n    if cnt >= 2:\n        ret += str(4 - cnt) + '\\n'\n        for (x, y) in l:\n            if (grid[x][y] == '1') ^ (x < 0):\n                ret += str(x % n + 1) + ' ' + str(y % n + 1) + '\\n'\n    else:\n        ret += str(cnt) + '\\n'\n        for (x, y) in l:\n            if (grid[x][y] == '1') ^ (x >= 0):\n                ret += str(x % n + 1) + ' ' + str(y % n + 1) + '\\n'\n    return ret\nfor _ in range(int(input())):\n    n = int(input())\n    grid = [input() for _ in range(n)]\n    print(solve(n, grid), end='')", "def read_int():\n    return int(input())\n\ndef read_ints():\n    return map(int, input().split(' '))\nt = read_int()\nfor case_num in range(t):\n    n = read_int()\n    a = []\n    for i in range(n):\n        a.append(input())\n    ans = []\n    pos = [(0, 1), (1, 0), (n - 1, n - 2), (n - 2, n - 1)]\n    target = '0011'\n    for (i, p) in enumerate(pos):\n        if a[p[0]][p[1]] != target[i]:\n            ans.append((p[0] + 1, p[1] + 1))\n    if len(ans) <= 2:\n        print(len(ans))\n        for (r, c) in ans:\n            print(r, c)\n    else:\n        target = '1100'\n        ans = []\n        for (i, p) in enumerate(pos):\n            if a[p[0]][p[1]] != target[i]:\n                ans.append((p[0] + 1, p[1] + 1))\n        print(len(ans))\n        for (r, c) in ans:\n            print(r, c)", "for _ in range(int(input())):\n    n = int(input())\n    mat = []\n    for i in range(n):\n        mat.append(input())\n    d = [(1, 2), (2, 1), (n - 1, n), (n, n - 1)]\n    items = [int(mat[0][1]), int(mat[1][0]), int(mat[-2][-1]), int(mat[-1][-2])]\n    ans = []\n    if items[:2] == [0, 0] or items[2:] == [1, 1]:\n        for i in range(4):\n            if i < 2 and items[i]:\n                ans.append(d[i])\n            elif i > 1 and (not items[i]):\n                ans.append(d[i])\n    else:\n        for i in range(4):\n            if i > 1 and items[i]:\n                ans.append(d[i])\n            elif i < 2 and (not items[i]):\n                ans.append(d[i])\n    print(len(ans))\n    for i in ans:\n        print(*i)", "k = int(input())\nfor i in range(k):\n    ans = []\n    n = int(input())\n    for i in range(n):\n        ans.append(input())\n    (a, b) = (ans[0][1], ans[1][0])\n    (c, d) = (ans[-1][-2], ans[-2][-1])\n    flag = 0\n    for q in range(0, 2):\n        if flag == 1:\n            break\n        for w in range(0, 2):\n            if flag == 1:\n                break\n            for e in range(0, 2):\n                if flag == 1:\n                    break\n                for r in range(0, 2):\n                    if flag:\n                        break\n                    ans = 0\n                    if r != int(d):\n                        ans += 1\n                    if e != int(c):\n                        ans += 1\n                    if w != int(b):\n                        ans += 1\n                    if int(a) != q:\n                        ans += 1\n                    if (q == w and e == r and (q != e)) and ans <= 2:\n                        print(ans)\n                        if r != int(d):\n                            print(n - 1, n)\n                        if e != int(c):\n                            print(n, n - 1)\n                        if w != int(b):\n                            print(2, 1)\n                        if q != int(a):\n                            print(1, 2)\n                        flag = 1\n                        break"]