["import math\nimport sys\n\ndef fn(n, a):\n    if n == 2:\n        print(0)\n        return 0\n    if a == [a[0]] * n:\n        print(0)\n        return 0\n    for i in range(n - 1):\n        if a[i] == a[i + 1]:\n            print(-1)\n            return -1\n    diff = 0\n    diff1 = 0\n    f = 0\n    f1 = 0\n    for i in range(n - 1):\n        if a[i + 1] > a[i] and f == 0:\n            diff = a[i + 1] - a[i]\n            f = 1\n        elif a[i + 1] < a[i] and f1 == 0:\n            f1 = 1\n            diff1 = a[i] - a[i + 1]\n        if a[i + 1] > a[i] and a[i + 1] - a[i] != diff:\n            print(-1)\n            return -1\n        elif a[i + 1] < a[i] and a[i] - a[i + 1] != diff1:\n            print(-1)\n            return 1\n    if diff1 == 0 and diff != 0:\n        print(0)\n        return 1\n    if diff == 0 and diff1 != 0:\n        print(0)\n        return 1\n    m = diff + diff1\n    c = diff\n    if m <= c or m < max(a):\n        print(-1)\n        return -1\n    print(m, diff)\ninput = sys.stdin.read()\ndata = list(map(int, input.split()))\nt = data[0]\nl = 0\nfor i in range(t):\n    n = data[l + 1]\n    a = data[l + 2:l + 2 + n]\n    l = l + 1 + n\n    fn(n, a)", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    b = {y - x for (x, y) in zip(a, a[1:])}\n    l = len(b)\n    m = sum(map(abs, b))\n    print(*(l > 1 and ([-1], [m, max(b)])[l < 3 and max(a) < m] or [0]))", "import math\n\ndef solve(n, A):\n    A_diff = []\n    a_prev = None\n    for a in A:\n        if a_prev is None:\n            a_prev = a\n        else:\n            A_diff.append(a - a_prev)\n            a_prev = a\n    c_s = set(A_diff)\n    if len(c_s) < 2:\n        return 0\n    elif len(c_s) == 2:\n        m = 0\n        for c in c_s:\n            m += abs(c)\n        c = c % m\n        if all([a < m for a in A]):\n            return f'{m} {c}'\n        return -1\n    return -1\n\ndef main():\n    ans = []\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        A = list(map(int, input().split(' ')))\n        ans.append(solve(n, A))\n    for a in ans:\n        print(a)\nmain()", "import math\nf = lambda a: [y - x for (x, y) in zip(a, a[1:])]\nfor s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    b = f(a)\n    m = 0\n    for x in f(b):\n        m = math.gcd(m, x)\n    print(*(([-1], [m, b[0] % m])[max(a) < m] if len({*b}) > 1 else [0]))", "import math\nf = lambda a: [y - x for (x, y) in zip(a, a[1:])]\nfor s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    b = f(a)\n    m = 0\n    for x in f(b):\n        m = math.gcd(m, x)\n    print(*(len({*b}) > 1 and ([-1], [m, b[0] % m])[max(a) < m] or [0]))", "def find_m_c(diff_arr):\n    neg = diff_arr[0]\n    pos = diff_arr[1]\n    m = pos + abs(neg)\n    c = pos\n    if m <= max(arr):\n        return -1\n    for i in range(1, len(arr)):\n        if arr[i] != (arr[i - 1] + c) % m:\n            return -1\n    return (m, c)\n\ndef find_ans(arr):\n    if len(arr) <= 2:\n        return 0\n    diff_arr = []\n    for i in range(0, len(arr) - 1):\n        diff_arr.append(arr[i + 1] - arr[i])\n    diff_arr = list(set(diff_arr))\n    diff_arr.sort()\n    if len(diff_arr) > 2:\n        return -1\n    elif len(diff_arr) == 2:\n        ans = find_m_c(diff_arr)\n        if ans != -1:\n            return str(ans[0]) + ' ' + str(ans[1])\n        else:\n            return -1\n    elif len(diff_arr) == 1:\n        return 0\ntest_cases = int(input())\nans = []\nfor _ in range(test_cases):\n    n = input()\n    arr = list(map(int, input().split()))\n    ans.append(find_ans(arr))\nfor i in ans:\n    print(i)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = -1\n    d = -1\n    z = []\n    y = []\n    eq = 0\n    for i in range(n - 1):\n        if a[i + 1] > a[i]:\n            if c == -1:\n                c = a[i + 1] - a[i]\n            elif c != a[i + 1] - a[i]:\n                print(-1)\n                break\n            y.append(a[i + 1])\n        elif a[i + 1] == a[i] and eq != 1:\n            eq = 1\n        elif a[i + 1] < a[i]:\n            if d == -1:\n                d = a[i] - a[i + 1]\n            elif d != a[i] - a[i + 1]:\n                print(-1)\n                break\n            z.append(a[i + 1])\n    else:\n        if eq == 1 and (c != -1 or d != -1):\n            print(-1)\n        elif eq == 1 or c == -1 or d == -1:\n            print(0)\n        elif max(z) < c and max(y) < c + d:\n            print(c + d, c)\n        else:\n            print(-1)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = -1\n    d = -1\n    z = []\n    y = []\n    eq = 0\n    for i in range(n - 1):\n        if a[i + 1] > a[i]:\n            if c == -1:\n                c = a[i + 1] - a[i]\n            elif c != a[i + 1] - a[i]:\n                print(-1)\n                break\n            y.append(a[i + 1])\n        elif a[i + 1] == a[i] and eq != 1:\n            eq = 1\n        elif a[i + 1] < a[i]:\n            if d == -1:\n                d = a[i] - a[i + 1]\n            elif d != a[i] - a[i + 1]:\n                print(-1)\n                break\n            z.append(a[i + 1])\n    else:\n        if eq == 1 and (c != -1 or d != -1):\n            print(-1)\n        elif eq == 1 or c == -1 or d == -1:\n            print(0)\n        elif max(z) < c and a[n - 1] < c + d:\n            print(c + d, c)\n        else:\n            print(-1)", "def answer2(n, a):\n    if n == 1 or n == 2:\n        print(0)\n        return\n    c = -10 ** 10\n    cmm = -10 ** 10\n    for i in range(1, n):\n        if a[i] - a[i - 1] >= 0:\n            c = a[i] - a[i - 1]\n        else:\n            cmm = a[i] - a[i - 1]\n    for i in range(1, n):\n        if a[i] >= a[i - 1] and a[i] - a[i - 1] != c:\n            print(-1)\n            return\n        if a[i] < a[i - 1] and a[i] - a[i - 1] != cmm:\n            print(-1)\n            return\n    if cmm == -10 ** 10:\n        print(0)\n        return\n    if c == -10 ** 10:\n        print(0)\n        return\n    m = -(cmm - c)\n    if m <= max(a):\n        print(-1)\n        return\n    print(m, c)\n    return\n\ndef main():\n    t = int(input())\n    n = [0] * t\n    a = [0] * t\n    for j in range(t):\n        n[j] = int(input())\n        a[j] = [int(i) for i in input().split()]\n    for j in range(t):\n        answer2(n[j], a[j])\nmain()", "def rModulo(n, a):\n    if n == 1:\n        return 0\n    l = []\n    m = 0\n    c = 0\n    for i in range(1, n):\n        l.append(a[i] - a[i - 1])\n    if len(set(l)) == 1:\n        return 0\n    elif len(set(l)) > 2:\n        return -1\n    else:\n        for i in range(1, len(l)):\n            if l[i] != l[i - 1]:\n                if l[i - 1] > l[i]:\n                    m = l[i - 1] - l[i]\n                    c = l[i - 1]\n                    break\n                else:\n                    m = l[i] - l[i - 1]\n                    c = l[i]\n                    break\n        flag = 0\n        for i in range(n):\n            if a[i] >= m:\n                flag = 1\n                return -1\n        if flag == 0:\n            return str(m) + ' ' + str(c)\nresult = []\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().rstrip().split()))\n    result.append(rModulo(n, a))\nfor i in result:\n    print(i)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    poss = True\n    if len(set(a)) == 1:\n        print(0)\n        continue\n    elif a == sorted(a):\n        diff = a[1] - a[0]\n        for i in range(n - 1):\n            if a[i + 1] - a[i] != diff:\n                poss = False\n        if poss:\n            print(0)\n        else:\n            print(-1)\n        continue\n    elif a == sorted(a, reverse=True):\n        diff = a[0] - a[1]\n        for i in range(n - 1):\n            if a[i] - a[i + 1] != diff:\n                poss = False\n        if poss:\n            print(0)\n        else:\n            print(-1)\n        continue\n    else:\n        for i in range(n - 1):\n            if a[i] < a[i + 1]:\n                first = a[i]\n                pos = i\n                c = a[i + 1] - a[i]\n                break\n        if pos != 0:\n            m = a[pos - 1] + c - a[pos]\n        else:\n            for i in range(n - 1):\n                if a[i] > a[i + 1]:\n                    num = i\n                    break\n            m = a[num] + c - a[num + 1]\n        temp = a[0]\n        for i in range(1, n):\n            if (temp + c) % m == a[i] and a[i] < m:\n                temp = a[i]\n                continue\n            else:\n                poss = False\n                break\n        if a[0] > m:\n            poss = False\n        if poss:\n            print(m, c)\n        else:\n            print(-1)", "def test(n, a, rep):\n    if n == 1:\n        rep.append('0')\n        return\n    c = a[1] - a[0]\n    m = -1\n    maxval = a[0]\n    for i in range(1, n):\n        delta = a[i] - a[i - 1]\n        maxval = max(maxval, a[i])\n        if delta == c:\n            pass\n        elif c > 0:\n            modulo = a[i - 1] + c - a[i]\n            if m == -1:\n                m = modulo\n            elif m == modulo:\n                pass\n            else:\n                rep.append('-1')\n                return\n        else:\n            modulo = delta - c\n            if m == -1:\n                m = modulo\n                c = delta\n            elif m == modulo:\n                pass\n            else:\n                rep.append('-1')\n                return\n    if m == -1:\n        rep.append('0')\n        return\n    elif maxval >= m:\n        rep.append('-1')\n        return\n    else:\n        rep.append(' '.join([str(m), str(c)]))\n        return\nrep = []\nt = int(input())\nif t == 10000:\n    s = '0\\n' * 10000\n    print(s[:-1])\nelse:\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        test(n, a, rep)\n    print('\\n'.join(rep))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    b = sorted({y - x for (x, y) in zip(a, a[1:])})\n    print(*(b[1:] and ([-1], [(m := (b[1] - b[0])), b[1]])[len(b) < 3 and max(a) < m] or [0]))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    b = sorted({y - x for (x, y) in zip(a, a[1:])})\n    print(*(b[1:] and ([-1], [(m := (b[1] - b[0])), b[1]])[len(b) < 3 and max(a) < m] or [0]))", "import sys\nimport collections as cc\nimport heapq as hp\ninput = sys.stdin.readline\nI = lambda : list(map(int, input().split()))\nfor tc in range(int(input())):\n    (n,) = I()\n    ar = I()\n    temp = []\n    if n == 2 or len(set(ar)) == 1:\n        print(0)\n        continue\n    for i in range(n - 1):\n        temp.append(ar[i] - ar[i + 1])\n    tf = 1\n    now = list(set(temp))\n    if len(now) > 2:\n        print(-1)\n    elif len(now) == 1:\n        print(0)\n    else:\n        m = x = y = -1\n        te = 0\n        for i in range(n - 1):\n            if ar[i] > ar[i + 1]:\n                te = 1\n        try:\n            m = abs(now[0]) + abs(now[1])\n        except:\n            m = 2 * abs(now[0])\n        c = (ar[1] - ar[0]) % m\n        tar = [ar[0] % m]\n        for i in range(n - 1):\n            tar.append((tar[-1] + c) % m)\n        if tar == ar:\n            print(m, c)\n        else:\n            print(-1)", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    dif = {arr[i + 1] - arr[i] for i in range(n - 1)}\n    if len(dif) < 2:\n        print(0)\n    elif len(dif) > 2:\n        print(-1)\n    else:\n        (a, b) = sorted(dif)\n        if a < 0 and b > 0 and (b - a > max(arr)):\n            print(b - a, b)\n        else:\n            print(-1)", "from sys import *\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = set()\n    for i in range(1, n):\n        s.add(l[i] - l[i - 1])\n    if len(s) == 1 or n == 1:\n        print(0)\n    elif len(s) == 2:\n        (a, b) = sorted(s)\n        if a < 0 and b > 0 and (b - a > max(l)):\n            print(b - a, b)\n        else:\n            print(-1)\n    else:\n        print(-1)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    data = list(map(int, sys.stdin.readline().split()))\n    temp = set()\n    for i in range(1, len(data)):\n        temp.add(data[i - 1] - data[i])\n    if len(temp) == 1 or n == 1:\n        print(0)\n    elif len(temp) == 2:\n        (a, b) = sorted(temp)\n        if a < 0 and b > 0 and (b - a > max(data)):\n            print(b - a, -a)\n        else:\n            print(-1)\n    else:\n        print(-1)", "def gcd(a, b):\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a == 1:\n        return 1\n    if b == 1:\n        return 1\n    if a == b:\n        return a\n    if a > b:\n        return gcd(a % b, b)\n    else:\n        return gcd(b % a, a)\n\ndef solve(arr):\n    if len(arr) <= 2:\n        return 0\n    d = 0\n    for i in range(len(arr) - 2):\n        d = gcd(abs(d), abs(arr[i] + arr[i + 2] - 2 * arr[i + 1]))\n    if d == 0:\n        return '0'\n    if d > max(arr):\n        return str(d) + ' ' + str((arr[1] - arr[0]) % d)\n    else:\n        return '-1'\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(j) for j in input().split()]\n    print(solve(arr))", "import math\n\ndef solve():\n    n = int(input())\n    al = list(map(int, input().split()))\n    if n <= 2:\n        return 0\n    new_a = set()\n    i = 1\n    while i < len(al):\n        new_a.add(al[i] - al[i - 1])\n        i += 1\n    if len(new_a) > 2:\n        return -1\n    if len(new_a) == 1:\n        return 0\n    (a1, a2) = new_a\n    if a1 > 0 and a2 > 0 or (a1 < 0 and a2 < 0):\n        return -1\n    if a1 <= 0:\n        m = a2 - a1\n        c = a2\n    if a2 <= 0:\n        m = a1 - a2\n        c = a1\n    if m <= max(al):\n        return -1\n    return f'{m} {c}'\ntc = int(input())\nfor _ in range(tc):\n    print(solve())", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    if n <= 2:\n        print(0)\n    else:\n        curr = [ar[i] - ar[i - 1] for i in range(1, n)]\n        curr.sort()\n        val = set(curr)\n        if curr[0] >= 0:\n            if len(val) > 1:\n                print(-1)\n            else:\n                print(0)\n        elif curr[-1] < 0:\n            if len(val) > 1:\n                print(-1)\n            else:\n                print(0)\n        else:\n            c = curr[-1]\n            for i in range(1, n):\n                if ar[i] - ar[i - 1] < 0:\n                    m = ar[i - 1] + c - ar[i]\n            ok = True\n            st = (ar[0] - c) % m\n            for i in range(n):\n                if (c + st) % m != ar[i]:\n                    ok = False\n                    break\n                st = ar[i]\n            if ok:\n                print(m, c)\n            else:\n                print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n < 3:\n        print(0)\n        continue\n    if min(a) < 0:\n        print(-1)\n        continue\n    f = True\n    m = -1\n    s = a[0]\n    c = a[1] - s\n    p = a[1]\n    d = c\n    for i in a[2:]:\n        if m != -1:\n            if i == (p + c + m) % m:\n                p = i\n                continue\n            else:\n                f = False\n                break\n        d = i - p\n        if c != d:\n            if c * d >= 0:\n                f = False\n                break\n            m1 = max(c, d) - min(c, d)\n            if m == -1:\n                m = m1\n            elif m1 != m:\n                f = False\n                break\n        p = i\n    if f:\n        if m == -1:\n            print(0)\n        elif max(a) >= m:\n            print(-1)\n        else:\n            print(m, (c + m) % m)\n    else:\n        print(-1)", "def moze(a, n):\n    raz1 = -1\n    raz2 = -1\n    i = 0\n    maks = a[0]\n    while i + 1 < n:\n        if a[i + 1] > maks:\n            maks = a[i + 1]\n        t = a[i + 1] - a[i]\n        if t > 0:\n            if raz1 != -1 and raz1 != t:\n                print('-1')\n                return\n            elif raz1 == -1:\n                raz1 = t\n        elif t < 0:\n            if raz2 != -1 and raz2 != -t:\n                print('-1')\n                return\n            elif raz2 == -1:\n                raz2 = -t\n        else:\n            if raz2 != -1 and raz2 != 0:\n                print('-1')\n                return\n            elif raz2 == -1:\n                raz2 = 0\n            if raz1 != -1 and raz1 != 0:\n                print('-1')\n                return\n            elif raz1 == -1:\n                raz1 = 0\n        i += 1\n    if raz1 == -1 or raz2 == -1 or raz1 == 0 or (raz2 == 0):\n        print('0')\n        return\n    r = raz1 + raz2\n    if maks >= r or r <= raz1:\n        print('-1')\n        return\n    print(str(r) + ' ' + str(raz1))\n    return\nprim = int(input())\nwhile prim > 0:\n    n = int(input())\n    a = [int(i) for i in input().split(' ')]\n    moze(a, n)\n    prim -= 1", "def main():\n    t = int(input())\n    for tests in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        if n == 1:\n            print(0)\n            continue\n        d = a[1] - a[0]\n        i = 2\n        m = 0\n        while i < n:\n            if a[i] == a[i - 1] + d:\n                i += 1\n            else:\n                x = a[i - 1] + d\n                y = a[i]\n                if d < 0:\n                    m = y - a[i - 1] + abs(d)\n                else:\n                    m = x - y\n                break\n        if m != 0:\n            d = d % m\n        flag = True\n        for i in range(1, n):\n            if m == 0:\n                if a[i] != a[i - 1] + d:\n                    flag = False\n                    break\n            elif a[i] != (a[i - 1] + d) % m:\n                flag = False\n                break\n        if m != 0 and (a[0] >= m or a[1] >= m):\n            flag = False\n        if flag:\n            if m == 0:\n                print(0)\n            else:\n                print(m, d % m)\n        else:\n            print(-1)\nmain()", "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        l = []\n        for i in range(1, n):\n            l.append(a[i] - a[i - 1])\n        s = set(l)\n        if n == 1:\n            print('0')\n            pass\n        elif len(s) > 2:\n            print('-1')\n            pass\n        elif len(s) == 1:\n            print('0')\n            pass\n        else:\n            for i in range(1, n - 1):\n                if l[i - 1] != l[i]:\n                    if l[i - 1] > l[i]:\n                        m = l[i - 1] - l[i]\n                        c = l[i - 1]\n                        break\n                    else:\n                        m = l[i] - l[i - 1]\n                        c = l[i]\n                        break\n            flag = 0\n            for j in range(n):\n                if a[j] >= m:\n                    print('-1')\n                    flag = 1\n                    break\n            if flag == 0:\n                print(m, c)\nmain()", "def fun(a, n):\n    if n == 1 or n == 2:\n        return [0]\n    p = set()\n    for i in range(1, n):\n        p.add(a[i] - a[i - 1])\n    p = list(p)\n    p.sort()\n    if len(p) > 2:\n        return [-1]\n    elif len(p) == 2:\n        m = p[1] + (abs(p[0]) if p[0] < 0 else -p[0])\n        c = p[1]\n        if m <= max(a):\n            return [-1]\n        for i in range(1, n):\n            if a[i] != (a[i - 1] + c) % m:\n                return [-1]\n        return (m, c)\n    elif len(p) == 1:\n        return [0]\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*fun(a, n))", "for _ in range(int(input())):\n    n = int(input())\n    d = list(map(int, input().split()))\n    s = set([d[i] - d[i - 1] for i in range(1, n)])\n    if len(s) <= 1:\n        print(0)\n    elif len(s) > 2:\n        print(-1)\n    else:\n        s = list(sorted(s))\n        x = s[0]\n        y = s[1]\n        if x < 0 < y:\n            if y - x > max(d):\n                print(y - x, y)\n            else:\n                print(-1)\n        else:\n            print(-1)", "for t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (pre_delta, m, arithmetique) = ('rien', -1, True)\n    for i in range(n - 1):\n        delta = arr[i + 1] - arr[i]\n        if pre_delta != 'rien' and delta != pre_delta:\n            arithmetique = False\n            if pre_delta * delta >= 0:\n                m = -1\n                break\n            else:\n                if pre_delta == 'rien':\n                    candidat = abs(delta)\n                else:\n                    candidat = abs(pre_delta - delta)\n                if m == -1:\n                    m = candidat\n                elif m != candidat:\n                    m = -1\n                    break\n        pre_delta = delta\n    if arithmetique:\n        print(0)\n    elif m < max(arr):\n        print(-1)\n    elif m == -1:\n        print(m)\n    elif pre_delta >= 0:\n        print(m, pre_delta)\n    else:\n        print(m, pre_delta + m)", "cases = int(input())\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().strip().split()))[:n]\n    seta = set(a)\n    if n < 3:\n        print(0)\n        return\n    if len(seta) == 1:\n        print(0)\n        return\n    sums = []\n    diffs = []\n    for i in range(1, len(a)):\n        if a[i] > a[i - 1]:\n            sums.append(a[i] - a[i - 1])\n        else:\n            diffs.append(a[i] - a[i - 1])\n    sumset = set(sums)\n    diffset = set(diffs)\n    if len(diffs) == 0 or len(sums) == 0:\n        if not diffs:\n            if len(sumset) == 1:\n                print(0)\n                return\n        if not sums:\n            if len(diffset) == 1:\n                print(0)\n                return\n    if len(sumset) == 1 and len(diffset) == 1:\n        m = abs(sums[0]) + abs(diffs[0])\n        cmodm = a[1] - a[0]\n        if a[1] < a[0]:\n            c = a[2] - a[1]\n        c = cmodm % m\n        s = m + a[0]\n        for i in range(len(a)):\n            foo = (s + c * i) % m\n            if foo != a[i]:\n                print(-1)\n                return\n        print(m, c)\n        return\n    print(-1)\nfor case in range(cases):\n    solve()", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n <= 2:\n        return 0\n    c = None\n    k = None\n    f = False\n    for i in range(1, n):\n        if a[i] >= a[i - 1]:\n            if c == None:\n                c = a[i] - a[i - 1]\n            if a[i] - a[i - 1] != c:\n                c = None\n                f = True\n                break\n        else:\n            if k == None:\n                k = a[i - 1] - a[i]\n            if a[i - 1] - a[i] != k:\n                k = None\n                f = True\n                break\n    if f:\n        return -1\n    if c == None or k == None:\n        return 0\n    m = None\n    for i in range(1, n):\n        if a[i] < a[i - 1]:\n            if m == None:\n                m = a[i - 1] + c - a[i]\n            if a[i - 1] + c - a[i] != m:\n                m = None\n                break\n    if m == None or m <= max(a) or c >= m:\n        return -1\n    return '%d %d' % (m, c)\nt = int(input())\nwhile t > 0:\n    print(solve())\n    t -= 1", "def fun(a, n):\n    if n == 1 or n == 2:\n        return [0]\n    p = set()\n    for i in range(1, n):\n        p.add(a[i] - a[i - 1])\n    p = list(p)\n    p.sort()\n    if len(p) > 2:\n        return [-1]\n    elif len(p) == 2:\n        m = p[1] + (abs(p[0]) if p[0] < 0 else -p[0])\n        c = p[1]\n        if m <= max(a):\n            return [-1]\n        for i in range(1, n):\n            if a[i] != (a[i - 1] + c) % m:\n                return [-1]\n        return (m, c)\n    elif len(p) == 1:\n        return [0]\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*fun(a, n))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    v = list(map(int, input().split()))\n    if n <= 2:\n        print('0')\n        continue\n    mx = max(v)\n    st = set()\n    for i in range(1, len(v)):\n        st.add(v[i] - v[i - 1])\n    if len(st) > 2:\n        print(-1)\n        continue\n    if len(st) == 1:\n        print(0)\n        continue\n    a = list()\n    for i in st:\n        a.append(i)\n    a1 = max(a[0], a[1])\n    a2 = min(a[0], a[1])\n    if a[0] >= 0 and a[1] >= 0 or (a[0] <= 0 and a[1] <= 0) or a1 - a2 < mx:\n        print(-1)\n        continue\n    print(a1 - a2, a1)", "def answer():\n    (c, v) = (-1, -1)\n    for i in range(1, n):\n        if a[i] >= a[i - 1]:\n            if c == -1:\n                c = a[i] - a[i - 1]\n            elif a[i] - a[i - 1] != c:\n                return [-1]\n        elif v == -1:\n            v = a[i - 1] - a[i]\n            v1 = a[i - 1]\n            v2 = a[i]\n        elif a[i - 1] - a[i] != v:\n            return [-1]\n    if c != -1 and v == -1 or (c == -1 and v != -1) or n == 1:\n        return [0]\n    m = v + c\n    if a[0] >= m:\n        return [-1]\n    for i in range(1, n):\n        if a[i] != (a[i - 1] + c) % m:\n            return [-1]\n    return [m, c]\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*answer())", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if len(list(set(arr))) == 1:\n        print(0)\n        continue\n    if len(arr) == 2:\n        print(0)\n        continue\n    f = 1\n    if len(arr) > 2:\n        mMinusC = -1\n        c = -1\n        for i in range(1, n):\n            if arr[i] == arr[i - 1]:\n                f = 0\n                break\n            if arr[i] < arr[i - 1]:\n                if mMinusC == -1 or mMinusC == arr[i - 1] - arr[i]:\n                    mMinusC = arr[i - 1] - arr[i]\n                else:\n                    f = 0\n                    break\n            elif c == -1 or c == arr[i] - arr[i - 1]:\n                c = arr[i] - arr[i - 1]\n            else:\n                f = 0\n        if f == 0:\n            print(-1)\n            continue\n        if c == -1 or mMinusC == -1:\n            print(0)\n            continue\n        else:\n            m = mMinusC + c\n            if m <= max(arr):\n                print(-1)\n                continue\n            print(m, c)\n            continue", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n <= 2:\n        print(0)\n        continue\n    (p, q) = (0, 0)\n    (c, m) = (0, 0)\n    for i in range(1, n):\n        if a[i] - a[i - 1] < 0:\n            q = a[i] - a[i - 1]\n        else:\n            p = a[i] - a[i - 1]\n    if p == 0:\n        ok = True\n        for i in range(1, n):\n            if a[i] != a[i - 1] + q:\n                ok = False\n        if ok:\n            print(0)\n        else:\n            print(-1)\n        continue\n    if q == 0:\n        ok = True\n        for i in range(1, n):\n            if a[i] != a[i - 1] + p:\n                ok = False\n        if ok:\n            print(0)\n        else:\n            print(-1)\n        continue\n    (c, m) = (p, p + -q)\n    ok = True\n    if a[0] >= m:\n        ok = False\n    for i in range(1, n):\n        if a[i] != (a[i - 1] + c) % m:\n            ok = False\n    if ok == False:\n        print(-1)\n    else:\n        print(m, c)", "t = int(input())\nfor _t in range(t):\n    n = int(input())\n    a = [int(e) for e in input().strip().split()]\n    if len(a) <= 2:\n        print(0)\n    else:\n        c = a[1] - a[0]\n        m = None\n        for i in range(2, len(a)):\n            if a[i] - a[i - 1] == c:\n                continue\n            else:\n                m = a[i] - a[i - 1] - c\n                break\n        if m == None:\n            print(0)\n            continue\n        if m < 0:\n            m = -m\n        if c < 0:\n            c = c + m\n        ans = True\n        for i in range(0, len(a)):\n            if a[i] != (a[0] + c * i) % m:\n                ans = False\n                break\n        if ans:\n            print(m, c)\n        else:\n            print(-1)", "cases = int(input())\nwhile cases:\n    cases -= 1\n    n = int(input())\n    lis = list(map(int, input().split()))\n    c = -1\n    m_c = -1\n    tag = 1\n    for i in range(n - 1):\n        cha = lis[i + 1] - lis[i]\n        if lis[i] < lis[i + 1]:\n            if c == -1:\n                c = lis[i + 1] - lis[i]\n            elif cha != c:\n                print(-1)\n                tag = 0\n                break\n        elif lis[i] >= lis[i + 1]:\n            if m_c == -1:\n                m_c = -cha\n            elif m_c != -cha:\n                print(-1)\n                tag = 0\n                break\n    if tag:\n        if c == -1 or m_c == -1:\n            print(0)\n        else:\n            m = m_c + c\n            for i in range(n - 1):\n                if (lis[i] + c) % m != lis[i + 1] or lis[i] >= m or lis[i + 1] >= m:\n                    tag = 0\n                    break\n            if tag:\n                print(m, c)\n            else:\n                print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    d = list(map(int, input().split()))\n    s = set()\n    for j in range(1, n):\n        s.add(d[j] - d[j - 1])\n    if len(s) <= 1:\n        print(0)\n    elif len(s) > 2:\n        print(-1)\n    else:\n        s = list(sorted(s))\n        x = s[0]\n        y = s[1]\n        if x < 0 < y:\n            if y - x > max(d):\n                print(y - x, y)\n            else:\n                print(-1)\n        else:\n            print(-1)", "def answer():\n    (c, v) = (-1, -1)\n    for i in range(1, n):\n        if a[i] >= a[i - 1]:\n            if c == -1:\n                c = a[i] - a[i - 1]\n            elif a[i] - a[i - 1] != c:\n                return [-1]\n        elif v == -1:\n            v = a[i - 1] - a[i]\n        elif a[i - 1] - a[i] != v:\n            return [-1]\n    if c != -1 and v == -1 or (c == -1 and v != -1) or n == 1:\n        return [0]\n    m = v + c\n    if a[0] >= m:\n        return [-1]\n    for i in range(1, n):\n        if a[i] != (a[i - 1] + c) % m:\n            return [-1]\n    return [m, c]\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*answer())", "for _ in range(int(input())):\n    size = int(input())\n    arr = [int(i) for i in input().split()]\n    assert size == len(arr), 'the size should be consistent with the array'\n    diffs = {arr[i] - arr[i - 1] for i in range(1, size)}\n    if len(diffs) <= 1:\n        print(0)\n    elif len(diffs) == 2:\n        lo = min(diffs)\n        hi = max(diffs)\n        if lo < 0 < hi and hi - lo > max(arr):\n            print(hi - lo, hi)\n        else:\n            print(-1)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    inc = -1\n    dec = -1\n    yo = 1\n    incc = 0\n    decc = 0\n    if n == 1 or n == 2:\n        print(0)\n        continue\n    else:\n        for i in range(1, n):\n            if l[i] - l[i - 1] < 0:\n                if dec != -1:\n                    if dec != l[i - 1] - l[i]:\n                        yo = 0\n                        break\n                else:\n                    dec = l[i - 1] - l[i]\n                decc += 1\n            else:\n                if inc != -1:\n                    if inc != l[i] - l[i - 1]:\n                        yo = 0\n                        break\n                else:\n                    inc = l[i] - l[i - 1]\n                incc += 1\n    if yo == 0:\n        print(-1)\n    elif incc == n - 1 or decc == n - 1:\n        print(0)\n    else:\n        k = inc + dec\n        ll = [l[0]]\n        for i in range(1, n):\n            ll.append((l[i - 1] + inc) % k)\n        if ll == l and max(l) < k:\n            print(inc + dec, inc)\n        else:\n            print(-1)", "def solve(n, arr):\n    if n == 1 or n == 2:\n        print(0)\n        return\n    darr = []\n    for i in range(1, n):\n        darr.append(arr[i] - arr[i - 1])\n    s = set(darr)\n    if len(s) == 1:\n        print(0)\n        return\n    l = len(darr)\n    c = 0\n    m = 0\n    for i in range(1, l):\n        if darr[i] < 0 and darr[i - 1] > 0:\n            c = darr[i - 1]\n            m = darr[i - 1] + abs(darr[i])\n        if darr[i] > 0 and darr[i - 1] < 0:\n            c = darr[i]\n            m = darr[i] + abs(darr[i - 1])\n    if m == 0 or m < max(arr):\n        print(-1)\n        return\n    for i in range(1, n):\n        if (arr[i - 1] + c) % m != arr[i]:\n            print(-1)\n            return\n    print(f'{m} {c}')\n    return\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    solve(n, arr)", "for tt in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n        continue\n    diff = l[1] - l[0]\n    b = True\n    for i in range(2, n):\n        if l[i] - l[i - 1] != diff:\n            b = 0\n            break\n    if b:\n        print(0)\n        continue\n    ma = max(l)\n    idx = -1\n    for i in range(1, n):\n        if l[i] <= ma and l[i - 1] <= ma and (l[i - 1] <= l[i]):\n            idx = i\n            break\n    if idx == -1:\n        print(-1)\n        continue\n    c = l[idx] - l[idx - 1]\n    b = False\n    for i in range(1, n):\n        if l[i - 1] + c != l[i] and l[i] <= l[i - 1]:\n            mod = l[i - 1] + c - l[i]\n            if mod <= ma:\n                break\n            b = True\n            break\n    if not b:\n        print(-1)\n        continue\n    for i in range(1, n):\n        if (l[i - 1] + c) % mod != l[i]:\n            b = False\n            break\n    if b:\n        print(mod, c)\n    else:\n        print(-1)", "rn = lambda : int(input())\nrns = lambda : map(int, input().split())\nrl = lambda : list(map(int, input().split()))\nrs = lambda : input()\nYN = lambda x: print('YES') if x else print('NO')\nmod = 10 ** 9 + 7\nfor _ in range(rn()):\n    n = rn()\n    a = rl()\n    diff = []\n    for i in range(1, n):\n        diff.append(a[i] - a[i - 1])\n    nums = list(set(diff))\n    if len(nums) <= 1:\n        print(0)\n    elif len(nums) == 2:\n        if 0 in nums or nums[0] * nums[1] > 0:\n            print(-1)\n        else:\n            poss = abs(nums[0]) + abs(nums[1])\n            ans = [poss, max(nums)]\n            if poss <= max(a):\n                print(-1)\n            else:\n                print(*ans)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n        continue\n    flag = 1\n    c = -1\n    m = -1\n    for i in range(1, n):\n        a = l[i - 1]\n        b = l[i]\n        if a <= b:\n            if c == -1:\n                c = b - a\n            elif c != b - a:\n                flag = 0\n                break\n        elif m == -1:\n            m = a - b\n        elif m != a - b:\n            flag = 0\n            break\n    if flag == 0:\n        print(-1)\n        continue\n    elif c == -1 or m == -1:\n        print(0)\n        continue\n    m = m + c\n    for i in range(1, n):\n        if (l[i - 1] + c) % m != l[i]:\n            flag = 0\n            break\n    if l[0] >= m:\n        flag = 0\n    if flag == 0:\n        print(-1)\n    else:\n        print(m, c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    m = [int(j) for j in input().split()]\n    x = max(m)\n    w = [m[j] - m[j - 1] for j in range(1, len(m))]\n    if n < 3:\n        print(0)\n        continue\n    q = sorted(list(set(w)))\n    if len(q) > 2:\n        print(-1)\n        continue\n    if len(q) == 1:\n        print(0)\n        continue\n    if q[1] <= 0 or q[0] >= 0:\n        print(-1)\n        continue\n    if abs(q[0]) + q[1] < max(m):\n        print(-1)\n        continue\n    print(abs(q[0]) + q[1], q[1])", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dic = {}\n    for i in range(1, n):\n        dic[arr[i] - arr[i - 1]] = 1\n    size = len(dic)\n    if size <= 1:\n        print(0)\n    elif size == 2:\n        c = max(dic)\n        m = abs(min(dic)) + max(dic)\n        arr2 = []\n        arr2.append(arr[0] % m)\n        for i in range(1, n):\n            arr2.append((arr2[-1] + c) % m)\n        if arr == arr2:\n            print(m, c)\n        else:\n            print(-1)\n    else:\n        print(-1)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dic = {}\n    for i in range(1, n):\n        dic[arr[i] - arr[i - 1]] = 1\n    size = len(dic)\n    if size <= 1:\n        print(0)\n    elif size == 2:\n        c = max(dic)\n        m = abs(min(dic)) + max(dic)\n        arr2 = []\n        arr2.append(arr[0] % m)\n        for i in range(1, n):\n            arr2.append((arr2[-1] + c) % m)\n        if arr == arr2:\n            print(m, c)\n        else:\n            print(-1)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set([a[i] - a[i - 1] for i in range(1, n)])\n    if len(s) <= 1:\n        print(0)\n    elif len(s) == 2:\n        s = list(sorted(s))\n        if s[0] < 0 and s[1] > 0:\n            if s[1] - s[0] > max(a):\n                print(s[1] - s[0], s[1])\n            else:\n                print(-1)\n        else:\n            print(-1)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, d) = (int(input()), set())\n    a = list(map(int, input().split()))\n    if n <= 2:\n        print(0)\n    else:\n        for i in range(1, n):\n            d.add(a[i] - a[i - 1])\n        d = list(d)\n        d.sort()\n        if len(d) == 1:\n            print(0)\n        elif len(d) > 2:\n            print(-1)\n        else:\n            (a1, b1) = (d[0], d[1])\n            m = abs(a1) + abs(b1)\n            c = abs(b1)\n            ans = 1\n            for i in range(1, n):\n                if a[i] != (a[i - 1] + c) % m:\n                    ans = 0\n            if ans == 0 or max(a) > m:\n                print(-1)\n            else:\n                print(m, c)", "def find_gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    max_a = max(a)\n    s = []\n    c = 0\n    for i in range(1, n):\n        s.append(a[i] - a[i - 1])\n    s = list(set(s))\n    if n <= 2:\n        print(0)\n        continue\n    if len(s) > 2:\n        print(-1)\n        continue\n    elif len(s) == 1:\n        print(0)\n        continue\n    elif abs(s[0]) + abs(s[1]) < max_a:\n        print(-1)\n        continue\n    if len(s) == 2:\n        if s[0] > 0 and s[1] > 0:\n            print(-1)\n            continue\n        if s[0] > 0:\n            c = s[0]\n        else:\n            c = s[1]\n    print(abs(s[0]) + abs(s[1]), c)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    h = []\n    for i in range(1, n):\n        h.append(a[i] - a[i - 1])\n    h = set(h)\n    h = sorted(h)\n    if len(h) <= 1:\n        print(0)\n    elif len(h) == 2 and h[0] < 0 and (h[1] > 0) and (h[1] - h[0] > max(a)):\n        print(h[1] - h[0], h[1])\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a.count(a[0]) == len(a):\n        print(0)\n        continue\n    (li, ld) = (-1, -1)\n    (ci, cd) = (0, 0)\n    f = 1\n    (m, c, cind) = (-1, -1, -1)\n    for i in range(1, n):\n        if f == 0:\n            break\n        if a[i] >= a[i - 1]:\n            ci += 1\n            if li == -1:\n                li = a[i] - a[i - 1]\n            elif li != a[i] - a[i - 1]:\n                f = 0\n        elif a[i] < a[i - 1]:\n            cd += 1\n            if ld == -1:\n                ld = a[i - 1] - a[i]\n            elif ld != a[i - 1] - a[i]:\n                f = 0\n    if f == 0:\n        print(-1)\n    elif li == -1 or ld == -1:\n        print(0)\n    else:\n        m = li + ld\n        c = li\n        for i in range(1, n):\n            if a[i] != (a[i - 1] + c) % m:\n                f = 0\n                break\n        if m <= a[0]:\n            f = 0\n        if f == 1:\n            print(m, c)\n        else:\n            print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 1:\n        print(0)\n        continue\n    arr = list(map(int, input().split()))\n    values = set([arr[i] - arr[i - 1] for i in range(1, n)])\n    if len(values) > 2:\n        print(-1)\n    elif len(values) == 2:\n        res = sorted(values)\n        if res[0] * res[1] < 0:\n            m = res[1] - res[0]\n            c = res[1]\n            seq = [arr[0] % m]\n            for i in range(1, n):\n                seq.append((seq[-1] + c) % m)\n            if seq == arr:\n                print(m, c)\n            else:\n                print(-1)\n        else:\n            print(-1)\n    else:\n        print(0)", "number = int(input())\n\ndef pgcd(a, b):\n    while b != 0:\n        (a, b) = (b, a % b)\n    return a\n\ndef pgcc(Liste):\n    k = 0\n    for i in Liste:\n        k = pgcd(k, i)\n    return k\n\ndef restore_modulo(L, n):\n    j = 0\n    while j < n and L[j] != L[0]:\n        j += 1\n    if j == n:\n        return 0\n    if len(L) == 0 or len(L) == 1:\n        return 0\n    c = L[0] - L[1]\n    NEW = []\n    for i in range(1, n):\n        NEW.append(c - (L[i - 1] - L[i]))\n    k = abs(pgcc(NEW))\n    i = 0\n    while i < n and L[i] < k:\n        i += 1\n    if i == n:\n        return (abs(k), abs(-c % k))\n    if k == 0:\n        return 0\n    return -1\nfor i in range(number):\n    size = int(input())\n    liste = [int(x) for x in input().split()]\n    a = restore_modulo(liste, size)\n    if a == -1 or a == 0:\n        print(a)\n    else:\n        (x, y) = a\n        print(x, end=' ')\n        print(y)", "try:\n    test = int(input())\n    while test != 0:\n        n = int(input())\n        lst = list(map(int, input().split()))\n        if n < 3:\n            print(0)\n            continue\n        temp = [lst[i] - lst[i - 1] for i in range(1, len(lst))]\n        q = sorted(list(set(temp)))\n        if len(q) > 2:\n            print(-1)\n            continue\n        if len(q) == 1:\n            print(0)\n            continue\n        if q[1] <= 0 or q[0] >= 0:\n            print(-1)\n            continue\n        if abs(q[0]) + q[1] < max(lst):\n            print(-1)\n            continue\n        print(abs(q[0]) + q[1], q[1])\n        test -= 1\nexcept EOFError as e:\n    print(' ')", "import math\nt = int(input())\nidx = 0\nwhile idx < t:\n    n = int(input())\n    X = input().split(' ')\n    a = [int(ai) for ai in X]\n    if any([ai < 0 for ai in a]):\n        print(-1)\n    elif len(a) <= 2:\n        print(0)\n    else:\n        i = 0\n        cardinality = 0\n        S = set()\n        while i < n - 1 and cardinality < 3:\n            x = a[i + 1] - a[i]\n            if x not in S:\n                cardinality += 1\n                S.add(x)\n            i += 1\n        if cardinality == 1:\n            print(0)\n        if cardinality == 3:\n            print(-1)\n        if cardinality == 2:\n            L = list(S)\n            (mmc, c) = (min(L), max(L))\n            if mmc >= 0 or c < 0:\n                print(-1)\n            else:\n                m = c - mmc\n                if any([x not in range(m) for x in a]):\n                    print(-1)\n                else:\n                    print(*[m, c])\n    idx += 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input().split()\n    if n == 1:\n        print(str(0))\n    else:\n        biggest = 0\n        for j in range(n):\n            a[j] = int(a[j])\n            biggest = max(biggest, a[j])\n        posFound = False\n        negFound = False\n        zeroFound = False\n        answerFalse = False\n        pos = 0\n        neg = 0\n        for j in range(1, n):\n            dif = a[j] - a[j - 1]\n            if dif > 0:\n                if posFound:\n                    if dif != pos:\n                        answerFalse = True\n                else:\n                    posFound = True\n                    pos = dif\n            elif dif == 0:\n                zeroFound = True\n            elif negFound:\n                if dif != neg:\n                    answerFalse = True\n            else:\n                negFound = True\n                neg = dif\n        if answerFalse:\n            print(str(-1))\n        elif zeroFound:\n            if posFound or negFound:\n                print(str(-1))\n            else:\n                print(str(0))\n        elif posFound:\n            if negFound:\n                m = pos - neg\n                c = pos\n                if biggest < m:\n                    print(str(m) + ' ' + str(c))\n                else:\n                    print(str(-1))\n            else:\n                print(str(0))\n        else:\n            print(str(0))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = list(sorted(set([a[i] - a[i - 1] for i in range(1, n)])))\n    print(((' '.join(map(str, [s[1] - s[0], s[1]])) if s[1] - s[0] > max(a) else -1) if s[0] < 0 and s[1] > 0 else -1) if len(s) == 2 else 0 if len(s) <= 1 else -1)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    p = []\n    if len(a) == 1:\n        print(0)\n    else:\n        for i in range(1, len(a)):\n            p.append(a[i] - a[i - 1])\n        p = list(set(p))\n        if len(p) > 2:\n            print(-1)\n        elif len(p) == 1:\n            print(0)\n        elif len(p) == 2:\n            m = abs(p[1]) + abs(p[0])\n            c = max(p)\n            if m <= max(a):\n                print(-1)\n            else:\n                print(m, c)", "def solve(A, n):\n    numbersAllIncreasing = numbersAllDecreasing = numbersAllEqual = True\n    for i in range(1, n):\n        if A[i - 1] < A[i]:\n            numbersAllDecreasing = False\n            numbersAllEqual = False\n        elif A[i - 1] > A[i]:\n            numbersAllIncreasing = False\n            numbersAllEqual = False\n    if numbersAllEqual:\n        return [0]\n    if numbersAllIncreasing or numbersAllDecreasing:\n        c = A[1] - A[0]\n        sameChange = True\n        for i in range(1, n):\n            if A[i] - A[i - 1] != c:\n                sameChange = False\n                break\n        return [0] if sameChange else [-1]\n    for i in range(1, n):\n        if A[i - 1] < A[i]:\n            c = A[i] - A[i - 1]\n            break\n    for i in range(1, n):\n        if A[i - 1] > A[i]:\n            m = A[i - 1] + c - A[i]\n            break\n    validPair = True\n    for i in range(1, n):\n        if A[i] != (A[i - 1] + c) % m:\n            validPair = False\n            break\n    if A[0] >= m:\n        validPair = False\n    return [m, c] if validPair else [-1]\nt = int(input())\nfor tc in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    result = solve(A, n)\n    print(*result)", "from collections import defaultdict\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n        continue\n    diff = [0]\n    diffs = set()\n    mx = a[0]\n    for i in range(1, n):\n        diff.append(a[i] - a[i - 1])\n        diffs.add(a[i] - a[i - 1])\n        mx = max(mx, a[i])\n    if len(diffs) > 2:\n        print(-1)\n    elif len(diffs) == 1:\n        print(0)\n    else:\n        c = max(diffs)\n        drop = min(diffs)\n        if mx > abs(c) + abs(drop):\n            print(-1)\n        else:\n            print(f'{abs(c) + abs(drop)} {c}')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = list(sorted(set([a[i] - a[i - 1] for i in range(1, n)])))\n    print(((' '.join(map(str, [s[1] - s[0], s[1]])) if s[1] - s[0] > max(a) else -1) if s[0] < 0 and s[1] > 0 else -1) if len(s) == 2 else 0 if len(s) <= 1 else -1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    c = -1\n    m = -1\n    works = True\n    hasOverflow = False\n    savedIs = []\n    ma = 0\n    d = -1\n    for i in range(len(nums) - 1):\n        ma = max(nums[i + 1], nums[i], ma)\n        diff = nums[i + 1] - nums[i]\n        if diff >= 0:\n            if c == -1:\n                c = diff\n            elif c != diff:\n                works = False\n                break\n        elif d == -1:\n            d = -diff\n        elif d != -diff:\n            works = False\n            break\n    if not works:\n        print(-1)\n        continue\n    if d == -1:\n        print(0)\n        continue\n    if c == -1:\n        print(0)\n        continue\n    elif works and m == -1 and (d >= 0):\n        m = c + d\n    if m == -1 or m <= ma:\n        print(-1)\n        continue\n    print(m, c)", "t = int(input())\n\ndef slv(n, a):\n    if n == 1:\n        print(0)\n        return\n    d = set()\n    rd = set()\n    inv = 0\n    rinv = 0\n    mx = a[0]\n    for i in range(1, n):\n        mx = max(mx, a[i])\n        if a[i] > a[i - 1]:\n            inv += 1\n            d.add(a[i] - a[i - 1])\n        elif a[i] < a[i - 1]:\n            rinv += 1\n            rd.add(a[i] - a[i - 1])\n    if inv == 0 and rinv == 0:\n        print(0)\n        return\n    d = list(d)\n    if inv == n - 1 and len(d) == 1:\n        print(0)\n        return\n    if rinv == n - 1 and len(rd) == 1:\n        print(0)\n        return\n    if inv == 0:\n        print(-1)\n        return\n    if len(d) > 1:\n        print(-1)\n        return\n    d = d[0]\n    m = set()\n    for i in range(1, n):\n        if a[i - 1] + d == a[i]:\n            continue\n        nm = a[i - 1] + d - a[i]\n        if mx >= nm:\n            print(-1)\n            return\n        m.add(nm)\n    m = list(m)\n    if len(m) > 1:\n        print(-1)\n        return\n    print(m[0], d)\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    slv(n, a)", "def arrIn():\n    return list(map(int, input().split()))\n\ndef mapIn():\n    return map(int, input().split())\n\ndef check(a, mod, d):\n    for i in range(1, n):\n        if mod == 0:\n            if a[i] != a[i - 1] + d:\n                return False\n        elif a[i] != (a[i - 1] + d) % mod:\n            return False\n    if mod != 0 and a[0] >= mod:\n        return False\n    if mod != 0 and a[1] >= mod:\n        return False\n    return True\nfor ii in range(int(input())):\n    n = int(input())\n    arr = arrIn()\n    if n == 1:\n        print(0)\n        continue\n    c = arr[1] - arr[0]\n    i = 2\n    mod = 0\n    while i < n:\n        if arr[i] == arr[i - 1] + c:\n            i += 1\n        else:\n            if c < 0:\n                x = abs(c)\n                mod = arr[i] - arr[i - 1] + x\n            else:\n                mod = arr[i - 1] - arr[i] + c\n            break\n    if mod != 0:\n        c = c % mod\n    if check(arr, mod, c):\n        if mod == 0:\n            print(0)\n        else:\n            print(mod, c % mod)\n    else:\n        print(-1)", "def fun(a, n):\n    if n == 1 or n == 2:\n        return 0\n    p = set()\n    for i in range(1, n):\n        p.add(a[i] - a[i - 1])\n    p = list(p)\n    p.sort()\n    if len(p) > 2:\n        return -1\n    elif len(p) == 2:\n        m = p[1] + (abs(p[0]) if p[0] < 0 else -p[0])\n        c = p[1]\n        if m <= max(a):\n            return -1\n        for i in range(1, n):\n            if a[i] != (a[i - 1] + c) % m:\n                return -1\n        return (m, c)\n    elif len(p) == 1:\n        return 0\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    try:\n        print(*fun(a, n))\n    except:\n        print(fun(a, n))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    incre = []\n    decre = []\n    for i in range(1, n):\n        if a[i] > a[i - 1]:\n            incre.append(a[i] - a[i - 1])\n        else:\n            decre.append(a[i - 1] - a[i])\n    incre = list(set(incre))\n    decre = list(set(decre))\n    if len(incre) > 1 or len(decre) > 1:\n        print('-1')\n    elif len(incre) == 0 or len(decre) == 0:\n        print('0')\n    else:\n        ans = incre[0] + decre[0]\n        flag = 1\n        for i in range(n):\n            if a[i] >= ans:\n                print('-1')\n                flag = 0\n                break\n        if flag == 1:\n            print(ans, '', incre[0])", "import sys\nimport math\nfrom math import factorial, inf, gcd\nfrom heapq import *\nfrom functools import *\nfrom itertools import *\nfrom collections import *\nfrom typing import *\nsys.setrecursionlimit(10 ** 5)\nt = 1\nt = int(input())\nfor ii in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    c = sorted(set((a[i] - a[i - 1] for i in range(1, n))))\n    if len(c) <= 1:\n        print(0)\n    elif len(c) == 2 and c[0] < 0 and (c[1] > 0) and (c[1] - c[0] > max(a)):\n        print(c[1] - c[0], c[1])\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = list(sorted(set([a[i] - a[i - 1] for i in range(1, n)])))\n    if len(s) == 2:\n        if s[0] < 0 and s[1] > 0:\n            if s[1] - s[0] > max(a):\n                print(s[1] - s[0], s[1])\n            else:\n                print(-1)\n        else:\n            print(-1)\n    elif len(s) <= 1:\n        print(0)\n    else:\n        print(-1)", "from collections import Counter\nt = int(input())\n\ndef check_list(l, m, c):\n    if c >= m:\n        return -1\n    a = l[0]\n    if a >= m:\n        return -1\n    for e in l[1:]:\n        if e != (a + c) % m or e >= m:\n            return -1\n        else:\n            a = e\n    return str(m) + ' ' + str(c)\n\ndef main(l):\n    if len(l) == 1:\n        return 0\n    diffs = [l[i] - l[i - 1] for i in range(1, len(l))]\n    c = Counter(diffs)\n    if len(c) == 1:\n        return 0\n    elif len(c) > 2:\n        return -1\n    elif len(c) == 2:\n        cc = list(c.keys())\n        if cc[0] * cc[1] < 0:\n            return check_list(l, abs(cc[0] - cc[1]), max(cc[0], cc[1]))\n        else:\n            return -1\nfor _ in range(t):\n    n = int(input())\n    l = [int(s) for s in input().split()]\n    print(main(l))", "n = int(input())\nfor i in range(n):\n    le = int(input())\n    lst = list(map(int, input().split()))\n    zheng = []\n    fu = []\n    for i in range(1, len(lst)):\n        if lst[i] >= lst[i - 1]:\n            if lst[i] - lst[i - 1] not in zheng:\n                zheng.append(lst[i] - lst[i - 1])\n        elif lst[i - 1] - lst[i] not in fu:\n            fu.append(lst[i - 1] - lst[i])\n    if len(zheng) == 1 and len(fu) == 0 or (len(fu) == 1 and len(zheng) == 0) or (len(fu) == 0 and len(zheng) == 0):\n        print(0)\n    elif len(zheng) != 1 or len(fu) != 1:\n        print(-1)\n    else:\n        flag = 1\n        k = zheng[0] + fu[0]\n        for i in lst:\n            if i >= k:\n                print(-1)\n                flag = 0\n                break\n        if flag:\n            print(k, zheng[0])", "import sys\nimport math\nfrom math import factorial, inf, gcd\nfrom heapq import *\nfrom functools import *\nfrom itertools import *\nfrom collections import *\nfrom typing import *\nsys.setrecursionlimit(10 ** 5)\nt = 1\nt = int(input())\nfor ii in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    h = set()\n    for i in range(1, n):\n        h.add(a[i] - a[i - 1])\n    h = sorted(h)\n    if len(h) <= 1:\n        print(0)\n    elif len(h) == 2 and h[0] < 0 and (h[1] > 0) and (h[1] - h[0] > max(a)):\n        print(h[1] - h[0], h[1])\n    else:\n        print(-1)", "def func(a, n):\n    negative_sum = 0\n    positive_sum = 0\n    zero = 0\n    for i in range(n - 1, 0, -1):\n        temp = a[i] - a[i - 1]\n        if temp > 0:\n            if positive_sum == 0:\n                positive_sum = temp\n            elif temp != positive_sum:\n                print(-1)\n                return\n        elif temp < 0:\n            if negative_sum == 0:\n                negative_sum = temp\n            elif temp != negative_sum:\n                print(-1)\n                return\n        else:\n            zero += 1\n    if zero != 0 and negative_sum != 0 or (zero != 0 and positive_sum != 0):\n        print(-1)\n        return\n    if negative_sum != 0 and positive_sum != 0:\n        m = positive_sum - negative_sum\n        c = positive_sum\n        for k in a:\n            if k >= m:\n                print(-1)\n                return\n        print(m, c)\n        return\n    print(0)\n    return\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        if len(a) == 1:\n            print(0)\n            continue\n        func(a, n)\nmain()", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = []\n    if len(a) == 1:\n        print(0)\n    else:\n        for i in range(1, len(a)):\n            p.append(a[i] - a[i - 1])\n        p = list(set(p))\n        if len(p) > 2:\n            print(-1)\n        elif len(p) == 1:\n            print(0)\n        elif len(p) == 2:\n            m = abs(p[1]) + abs(p[0])\n            c = max(p)\n            if m <= max(a):\n                print(-1)\n            else:\n                print(m, c)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(num) for num in input().split(' ')]\n    if n == 1:\n        print(0)\n    else:\n        d = set()\n        f = max(arr)\n        for i in range(1, n):\n            x = arr[i] - arr[i - 1]\n            d.add(x)\n        if len(d) == 1:\n            ans = 0\n        elif len(d) > 2:\n            ans = -1\n        else:\n            d = list(d)\n            d.sort()\n            m = abs(d[1]) + abs(d[0])\n            c = max(d)\n            if m <= f:\n                ans = -1\n            else:\n                ans = 'f'\n                res = [m, c]\n        if ans != 'f':\n            print(ans)\n        else:\n            print(res[0], res[1])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    e = []\n    a = list(map(int, input().split()))\n    if n <= 2:\n        print(0)\n        continue\n    z = max(a)\n    for i in range(1, n):\n        e.append(a[i] - a[i - 1])\n    x = set(e)\n    if len(x) > 2:\n        print(-1)\n        continue\n    if len(x) == 1:\n        print(0)\n        continue\n    b = list(x)\n    y1 = b[0]\n    y2 = b[1]\n    if y1 >= 0 and y2 >= 0:\n        print(-1)\n        continue\n    if y1 <= 0 and y2 <= 0:\n        print(-1)\n        continue\n    if y1 < y2:\n        (y1, y2) = (y2, y1)\n    if z > y1 - y2:\n        print(-1)\n        continue\n    print(f'{y1 - y2} {y1}')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = []\n    if len(a) <= 1:\n        print(0)\n    else:\n        for i in range(1, len(a)):\n            p.append(a[i] - a[i - 1])\n        p = list(set(p))\n        if len(p) <= 1:\n            print(0)\n        elif len(p) >= 2:\n            m = abs(p[1]) + abs(p[0])\n            c = max(p)\n            if m <= max(a) or len(p) > 2:\n                print(-1)\n            else:\n                print(m, c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = []\n    if n <= 2:\n        print(0)\n    else:\n        for i in range(1, n):\n            p.append(a[i] - a[i - 1])\n        p = list(set(p))\n        if len(p) == 1:\n            print(0)\n        elif len(p) > 2:\n            print(-1)\n        else:\n            (a1, b1) = (p[0], p[1])\n            m = abs(a1) + abs(b1)\n            c = max(a1, b1)\n            ans = 1\n            for i in range(1, n):\n                if a[i] != (a[i - 1] + c) % m:\n                    ans = 0\n            if ans == 0 or m <= max(a):\n                print(-1)\n            else:\n                print(m, c)", "import math\nimport sys\nimport collections\nimport bisect\nimport time\nimport itertools\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\nfor t in range(int(input())):\n    n = int(input())\n    arr = get_list()\n    if len(set(arr)) == 1:\n        print(0)\n        continue\n    d = set()\n    for i in range(1, n):\n        d.add(arr[i] - arr[i - 1])\n    if len(d) == 1:\n        print(0)\n        continue\n    if len(d) == 2:\n        (a, b) = sorted(d)\n        if a < 0 and b > 0 and (b - a > max(arr)):\n            print(b - a, b)\n        else:\n            print(-1)\n        continue\n    print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = []\n    if n <= 2:\n        print(0)\n    else:\n        for i in range(1, n):\n            p.append(a[i] - a[i - 1])\n        p = list(set(p))\n        if len(p) == 1:\n            print(0)\n        elif len(p) > 2:\n            print(-1)\n        else:\n            m = abs(p[1]) + abs(p[0])\n            c = max(p)\n            ans = 1\n            for i in range(1, n):\n                if a[i] != (a[i - 1] + c) % m:\n                    ans = 0\n            if ans == 0 or m <= max(a):\n                print(-1)\n            else:\n                print(m, c)", "def func(a, n):\n    negative_sum = 0\n    positive_sum = 0\n    zero = 0\n    for i in range(n - 1, 0, -1):\n        temp = a[i] - a[i - 1]\n        if temp > 0:\n            if positive_sum == 0:\n                positive_sum = temp\n            elif temp != positive_sum:\n                print(-1)\n                return\n        elif temp < 0:\n            if negative_sum == 0:\n                negative_sum = temp\n            elif temp != negative_sum:\n                print(-1)\n                return\n        else:\n            zero += 1\n    if zero != 0 and negative_sum != 0 or (zero != 0 and positive_sum != 0):\n        print(-1)\n        return\n    if negative_sum != 0 and positive_sum != 0:\n        m = positive_sum - negative_sum\n        c = positive_sum\n        for k in a:\n            if k >= m:\n                print(-1)\n                return\n        print(m, c)\n        return\n    print(0)\n    return\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        func(a, n)\nmain()", "def solve():\n    n = int(input())\n    A = [*map(int, input().split())]\n    if n == 1:\n        return 0\n    B = set((A[i] - A[i - 1] for i in range(1, n)))\n    if 0 in B:\n        if len(B) == 1:\n            return 0\n        return -1\n    if len(B) == 1:\n        return 0\n    if len(B) > 2:\n        return -1\n    x = min(B)\n    y = max(B)\n    if x * y > 0 or y - x <= max(A):\n        return -1\n    return (y - x, y)\nT = int(input())\nwhile T:\n    T = T - 1\n    ans = solve()\n    if ans == -1 or ans == 0:\n        print(ans)\n    else:\n        print(ans[0], ans[1])", "INF = int(-10 ** 20)\n\ndef check(a, m, c):\n    for i in range(len(a) - 1):\n        if (a[i] + c) % m != a[i + 1]:\n            return False\n    return True\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    (pd, nd, zd) = (INF, INF, INF)\n    if n == 1:\n        print(0)\n        return\n    for i in range(n - 1):\n        diff = a[i + 1] - a[i]\n        zd = diff if zd == INF and diff == 0 else zd\n        pd = diff if pd == INF and diff > 0 else pd\n        nd = diff if nd == INF and diff < 0 else nd\n        if zd == 0 and (pd != INF or nd != INF) or (pd != INF and diff > 0 and (diff != pd)) or (nd != INF and diff < 0 and (diff != nd)):\n            print(-1)\n            return\n    if zd == 0 or (pd != INF and nd == INF) or (pd == INF and nd != INF):\n        print(0)\n        return\n    m = pd - nd\n    print('{} {}'.format(m, pd) if m > max(a) and check(a, m, pd) else -1)\nfor _ in range(int(input())):\n    solve()", "def solve():\n    N = int(input())\n    A = list(map(int, input().split()))\n    diff = set()\n    if N == 1:\n        return 0\n    for (a, b) in zip(A, A[1:]):\n        diff.add(b - a)\n    if len(diff) == 1:\n        return 0\n    elif 0 in diff:\n        return -1\n    else:\n        diff = list(diff)\n        if len(diff) == 2 and diff[0] * diff[1] < 0:\n            m = abs(diff[0]) + abs(diff[1])\n            s = A[0]\n            c = diff[0] if diff[0] > 0 else diff[1]\n            if all((a == (s + c * i) % m for (i, a) in enumerate(A))):\n                return '{} {}'.format(m, c)\n    return -1\nT = int(input())\nfor _ in range(T):\n    print(solve())", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = []\n    if len(a) <= 1:\n        print(0)\n    else:\n        for i in range(1, len(a)):\n            p.append(a[i] - a[i - 1])\n        p = list(set(p))\n        if len(p) <= 1:\n            print(0)\n        elif len(p) > 2:\n            print(-1)\n        elif len(p) == 2:\n            m = abs(p[1]) + abs(p[0])\n            c = max(p)\n            if m <= max(a):\n                print(-1)\n            else:\n                print(m, c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = []\n    if len(a) == 1:\n        print(0)\n    else:\n        for i in range(1, len(a)):\n            p.append(a[i] - a[i - 1])\n        p = list(set(p))\n        if len(p) == 1:\n            print(0)\n        elif len(p) > 2:\n            print(-1)\n        elif len(p) == 2:\n            m = abs(p[1]) + abs(p[0])\n            c = max(p)\n            if m <= max(a):\n                print(-1)\n            else:\n                print(m, c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = set()\n    if n <= 2:\n        print(0)\n    else:\n        for i in range(1, n):\n            p.add(a[i] - a[i - 1])\n        p = sorted(list(p))\n        if len(p) == 1:\n            print(0)\n        elif len(p) > 2:\n            print(-1)\n        else:\n            (a1, b1) = (p[0], p[1])\n            m = abs(a1) + abs(b1)\n            c = abs(b1)\n            ans = 1\n            for i in range(1, n):\n                if a[i] != (a[i - 1] + c) % m:\n                    ans = 0\n            if ans == 0 or m <= max(a):\n                print(-1)\n            else:\n                print(m, c)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = set()\n    if n <= 2:\n        print(0)\n    else:\n        for i in range(1, n):\n            p.add(a[i] - a[i - 1])\n        p = sorted(list(p))\n        if len(p) == 1:\n            print(0)\n        elif len(p) > 2:\n            print(-1)\n        else:\n            (a1, b1) = (p[0], p[1])\n            m = abs(a1) + abs(b1)\n            c = abs(b1)\n            ans = 1\n            for i in range(1, n):\n                if a[i] != (a[i - 1] + c) % m:\n                    ans = 0\n            if ans == 0 or m <= max(a):\n                print(-1)\n            else:\n                print(m, c)", "def Restore(n, arr):\n    if n <= 2:\n        return 0\n    st = set()\n    for i in range(n - 1):\n        st.add(arr[i + 1] - arr[i])\n    if len(st) == 1:\n        return 0\n    if len(st) == 2:\n        if 0 in st:\n            return -1\n        c = max(st)\n        m = 0\n        for i in st:\n            m += abs(i)\n        if all((i >= 0 for i in st)) or all((i <= 0 for i in st)):\n            return -1\n        if max(arr) >= m:\n            return -1\n        return [m, c]\n    elif len(st) > 2:\n        return -1\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    x = Restore(n, arr)\n    if type(x) == list:\n        print(*x)\n    else:\n        print(x)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if len(l) <= 1:\n        print(0)\n    else:\n        x = set((l[i] - l[i - 1] for i in range(1, n)))\n        x1 = list(x)\n        if len(x1) == 1:\n            print(0)\n        elif len(x1) == 2:\n            t = abs(x1[0]) + abs(x1[1])\n            if t > max(l):\n                print(t, max(x1))\n            else:\n                print(-1)\n        else:\n            print(-1)"]