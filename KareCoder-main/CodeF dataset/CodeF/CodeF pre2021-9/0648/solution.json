["def main():\n    for _ in range(int(input())):\n        (n, cnt, dp, best) = (int(input()), [0] * 200001, [0] * 200001, 0)\n        for a in map(int, input().split()):\n            cnt[a] += 1\n        for (a, c) in enumerate(cnt):\n            if c:\n                c += dp[a]\n                if best < c:\n                    best = c\n                for i in range(2 * a, 200001, a):\n                    if dp[i] < c:\n                        dp[i] = c\n        print(n - best)\nmain()", "def solve():\n    for _ in range(int(input())):\n        n = int(input())\n        cnt = [0] * 200001\n        dp = [0] * 200001\n        best = 0\n        for a in map(int, input().split()):\n            cnt[a] += 1\n        for (a, c) in enumerate(cnt):\n            if c:\n                c += dp[a]\n                if best < c:\n                    best = c\n                for i in range(2 * a, 200001, a):\n                    if dp[i] < c:\n                        dp[i] = c\n        print(n - best)\nsolve()", "def main():\n    for _ in range(int(input())):\n        (n, cnt, dp, best) = (int(input()), [0] * 200001, [0] * 200001, 0)\n        for a in map(int, input().split()):\n            cnt[a] += 1\n        for (a, c) in enumerate(cnt):\n            if c:\n                c += dp[a]\n                if best < c:\n                    best = c\n                for i in range(2 * a, 200001, a):\n                    if dp[i] < c:\n                        dp[i] = c\n        print(n - best)\nmain()", "def main():\n    for _ in range(int(input())):\n        (n, cnt, dp, best) = (int(input()), [0] * 200001, [0] * 200001, 0)\n        for a in map(int, input().split()):\n            cnt[a] += 1\n        for (a, c) in enumerate(cnt):\n            if c:\n                c += dp[a]\n                if best < c:\n                    best = c\n                for i in range(2 * a, 200001, a):\n                    if dp[i] < c:\n                        dp[i] = c\n        print(n - best)\nmain()"]