["inn = lambda : int(input())\ninm = lambda : map(int, input().split())\nins = lambda : str(input())\nina = lambda : list(map(int, input().split()))\n\ndef solve():\n    (x, y) = inm()\n    c = ina()\n    ans = [0, 0, 0]\n    ans[0] = (x * c[5] if x >= 0 else -x * c[2]) + (y * c[1] if y >= 0 else -y * c[4])\n    ans[1] = ((x - y) * c[5] if x >= y else (y - x) * c[2]) + (y * c[0] if y >= 0 else -y * c[3])\n    ans[2] = ((y - x) * c[1] if y >= x else (x - y) * c[4]) + (x * c[0] if x >= 0 else -x * c[3])\n    print(min(ans))\n\ndef main():\n    t = 1\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "T = int(input())\nfor t in range(T):\n    (x, y) = tuple(map(int, input().split()))\n    (c1, c2, c3, c4, c5, c6) = tuple(map(int, input().split()))\n    h_p = min(c2, c1 + c3)\n    h_n = min(c5, c6 + c4)\n    v_p = min(c6, c1 + c5)\n    v_n = min(c3, c2 + c4)\n    d_p = min(c1, c2 + c6)\n    d_n = min(c4, c3 + c5)\n    h = h_p if y > 0 else h_n\n    v = v_p if x > 0 else v_n\n    cost = abs(x * v) + abs(y * h)\n    d = d_p if x > 0 else d_n\n    h = h_p if x < y else h_n\n    cost = min(cost, abs(x * d) + abs(abs(x - y) * h))\n    d = d_p if y > 0 else d_n\n    v = v_p if y < x else v_n\n    cost = min(cost, abs(y * d) + abs(abs(x - y) * v))\n    print(cost)", "t = int(input())\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    c = list(map(int, input().split()))\n    path1 = abs(x) * c[0 if x >= 0 else 3] + abs(y - x) * c[1 if y - x >= 0 else 4]\n    path2 = abs(y) * c[0 if y >= 0 else 3] + abs(x - y) * c[5 if x - y >= 0 else 2]\n    path3 = abs(y) * c[1 if y >= 0 else 4] + abs(x) * c[5 if x >= 0 else 2]\n    print(min(path1, path2, path3))", "for _ in range(int(input())):\n    (x, y) = [int(i) for i in input().split()]\n    z = [0] + [int(i) for i in input().split()]\n    k1 = abs(x) * z[3 if x < 0 else 6] + abs(y) * z[5 if y < 0 else 2]\n    k2 = abs(y) * z[4 if y < 0 else 1] + abs(x - y) * z[3 if x - y < 0 else 6]\n    k3 = abs(x) * z[4 if x < 0 else 1] + abs(y - x) * z[5 if y - x < 0 else 2]\n    print(min((k1, k2, k3)))", "def func(x, c2, c5):\n    if x < 0:\n        return -x * c5\n    else:\n        return x * c2\n\ndef func_2(x, c4, c1):\n    if x < 0:\n        return -x * c4\n    else:\n        return x * c1\n\ndef func_3(x, c6, c3):\n    if x < 0:\n        return -x * c3\n    else:\n        return x * c6\n\ndef main():\n    (y, x) = map(int, input().split())\n    (c1, c2, c3, c4, c5, c6) = map(int, input().split())\n    lu = (1, 0)\n    ru = (1, 1)\n    rd = (-1, 0)\n    r = (0, 1)\n    l = (1, 0)\n    ld = (-1, -1)\n    a = func_3(y, c6, c3) + func(x, c2, c5)\n    b = func_2(y, c4, c1) + func(x - y, c2, c5)\n    c = func_2(x, c4, c1) + func_3(y - x, c6, c3)\n    print(min(a, b, c))\nt = int(input())\nfor i in range(t):\n    main()", "t = int(input())\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    c = list(map(int, input().split()))\n    path1 = abs(x) * c[0 if x >= 0 else 3] + abs(y - x) * c[1 if x <= y else 4]\n    path2 = abs(x) * c[5 if x >= 0 else 2] + abs(y) * c[1 if y >= 0 else 4]\n    path3 = abs(y) * c[0 if y >= 0 else 3] + abs(y - x) * c[5 if y <= x else 2]\n    print(min(path1, path2, path3))", "n = int(input())\nfor i in range(n):\n    (x, y) = list(map(int, input().split()))\n    c = [0] + list(map(int, input().split()))\n    p1 = abs(x) * c[3 if x < 0 else 6] + abs(y) * c[5 if y < 0 else 2]\n    p2 = abs(y) * c[4 if y < 0 else 1] + abs(x - y) * c[3 if x - y < 0 else 6]\n    p3 = abs(x) * c[4 if x < 0 else 1] + abs(y - x) * c[5 if y - x < 0 else 2]\n    print(min((p1, p2, p3)))", "def cost(d, c1, c2):\n    return d * (c1 if d > 0 else -c2)\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    c = [0] + list(map(int, input().split()))\n    opt = []\n    opt.append(cost(x - y, c[6], c[3]) + cost(y, c[1], c[4]))\n    opt.append(cost(x, c[6], c[3]) + cost(y, c[2], c[5]))\n    opt.append(cost(x, c[1], c[4]) + cost(y - x, c[2], c[5]))\n    print(min(opt))", "p = lambda : list(map(int, input().split()))\nT = int(input())\nfor _ in range(T):\n    (Y, X) = p()\n    c = p()\n    for i in range(6):\n        c[i] = min(c[i], c[(i + 1) % 6] + c[(i + 5) % 6])\n    M = min(abs(X), abs(Y))\n    if X > 0:\n        if Y > 0:\n            C = M * c[0]\n            X -= M\n            Y -= M\n            C += c[1] * X\n            C += c[5] * Y\n            print(C)\n        else:\n            C = c[1] * X\n            C += c[2] * -Y\n            print(C)\n    elif Y > 0:\n        C = c[5] * Y\n        C += c[4] * -X\n        print(C)\n    else:\n        C = M * c[3]\n        X += M\n        Y += M\n        C += c[4] * -X\n        C += c[2] * -Y\n        print(C)", "t = int(input())\nfor _ in range(t):\n    (x, y) = list(map(int, input().split()))\n    (c1, c2, c3, c4, c5, c6) = list(map(int, input().split()))\n    a1 = min(c1, c6 + c2)\n    a2 = min(c2, c1 + c3)\n    a3 = min(c3, c2 + c4)\n    a4 = min(c4, c3 + c5)\n    a5 = min(c5, c4 + c6)\n    a6 = min(c6, c5 + c1)\n    if x > 0 and y > 0:\n        if x > y:\n            ans = a1 * y + a6 * (x - y)\n        else:\n            ans = a1 * x + a2 * (y - x)\n    elif x >= 0 and y <= 0:\n        ans = a5 * -y + a6 * x\n    elif x <= 0 and y >= 0:\n        ans = a2 * y + a3 * -x\n    else:\n        x *= -1\n        y *= -1\n        if x > y:\n            ans = a4 * y + a3 * (x - y)\n        else:\n            ans = a4 * x + a5 * (y - x)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    (c1, c2, c3, c4, c5, c6) = map(int, input().split())\n    c1 = min(c1, c2 + c6)\n    c2 = min(c2, c1 + c3)\n    c3 = min(c3, c2 + c4)\n    c4 = min(c4, c3 + c5)\n    c5 = min(c5, c4 + c6)\n    c6 = min(c6, c1 + c5)\n    ans = 0\n    if x * y <= 0:\n        ans += c6 * x if x >= 0 else c3 * -x\n        ans += c2 * y if y >= 0 else c5 * -y\n    else:\n        if x < 0 or y < 0:\n            cc = max(x, y)\n            x -= cc\n            y -= cc\n            ans += c4 * -cc\n        else:\n            cc = min(x, y)\n            x -= cc\n            y -= cc\n            ans += c1 * cc\n        ans += c6 * x if x >= 0 else c3 * -x\n        ans += c2 * y if y >= 0 else c5 * -y\n    print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    (x, y) = list(map(int, input().strip().split()))\n    (c1, c2, c3, c4, c5, c6) = list(map(int, input().strip().split()))\n    (t1, t2, t3, t4, t5, t6) = (c1, c2, c3, c4, c5, c6)\n    c1 = min(c1, t2 + t6)\n    c2 = min(c2, t1 + t3)\n    c3 = min(c3, t2 + t4)\n    c4 = min(c4, t3 + t5)\n    c5 = min(c5, t4 + t6)\n    c6 = min(c6, t5 + t1)\n    ans = 0\n    if x >= 0 and y >= 0:\n        tmp = min(x, y)\n        ans += tmp * c1\n        x -= tmp\n        y -= tmp\n    elif x < 0 and y < 0:\n        tmp = min(-x, -y)\n        ans += tmp * c4\n        x += tmp\n        y += tmp\n    if x < 0:\n        ans += -x * c3\n    elif x > 0:\n        ans += x * c6\n    if y < 0:\n        ans += -y * c5\n    elif y > 0:\n        ans += y * c2\n    print(ans)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    (c1, c2, c3, c4, c5, c6) = map(int, input().split())\n    a1 = min(c1, c6 + c2)\n    a2 = min(c2, c1 + c3)\n    a3 = min(c3, c4 + c2)\n    a4 = min(c4, c3 + c5)\n    a5 = min(c5, c4 + c6)\n    a6 = min(c6, c5 + c1)\n    c1 = a1\n    c2 = a2\n    c3 = a3\n    c4 = a4\n    c5 = a5\n    c6 = a6\n    k = 0\n    if x >= 0 and y >= 0:\n        r = min(x, y)\n        k += c1 * r\n        x -= r\n        y -= r\n    if x <= 0 and y <= 0:\n        r = max(x, y)\n        x -= r\n        y -= r\n        r *= -1\n        k += c4 * r\n    if y >= 0:\n        k += c2 * y\n    else:\n        y *= -1\n        k += c5 * y\n    if x >= 0:\n        k += c6 * x\n    else:\n        x *= -1\n        k += c3 * x\n    print(k)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    (c1, c2, c3, c4, c5, c6) = map(int, input().split())\n    a1 = min(c1, c6 + c2)\n    a2 = min(c2, c1 + c3)\n    a3 = min(c3, c4 + c2)\n    a4 = min(c4, c3 + c5)\n    a5 = min(c5, c4 + c6)\n    a6 = min(c6, c5 + c1)\n    c1 = a1\n    c2 = a2\n    c3 = a3\n    c4 = a4\n    c5 = a5\n    c6 = a6\n    k = 0\n    if x >= 0 and y >= 0:\n        r = min(x, y)\n        k += c1 * r\n        x -= r\n        y -= r\n    if x <= 0 and y <= 0:\n        r = max(x, y)\n        x -= r\n        y -= r\n        r *= -1\n        k += c4 * r\n    if y >= 0:\n        k += c2 * y\n    else:\n        y *= -1\n        k += c5 * y\n    if x >= 0:\n        k += c6 * x\n    else:\n        x *= -1\n        k += c3 * x\n    print(k)", "t = int(input())\nwhile t > 0:\n    (x, y) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    cost = lst.copy()\n    for i in range(1, 7):\n        cost[i % 6] = min(cost[i % 6], cost[(i - 1) % 6] + cost[(i + 1) % 6])\n    cnt = [0] * 6\n    if x == 0 and y == 0:\n        pass\n    elif x >= 0 and y >= 0:\n        if x == y:\n            cnt[0] = x\n        elif x > y:\n            cnt[0] = y\n            cnt[5] = x - y\n        elif x < y:\n            cnt[0] = x\n            cnt[1] = y - x\n    elif x <= 0 and y <= 0:\n        if x == y:\n            cnt[3] = -x\n        elif x > y:\n            cnt[3] = -x\n            cnt[4] = x - y\n        elif x < y:\n            cnt[3] = -y\n            cnt[2] = y - x\n    elif x >= 0 and y <= 0:\n        cnt[4] = -y\n        cnt[5] = x\n    else:\n        cnt[2] = -x\n        cnt[1] = y\n    ans = 0\n    for i in range(6):\n        ans += cnt[i] * cost[i]\n    print(ans)\n    t -= 1", "def read_int():\n    return int(input())\n\ndef read_ints():\n    return map(int, input().split(' '))\nd = [(1, 1), (0, 1), (-1, 0), (-1, -1), (0, -1), (1, 0)]\nt = read_int()\nfor case_num in range(t):\n    (x, y) = read_ints()\n    c = list(read_ints())\n    ans = -1\n    for i in range(6):\n        dx = d[i][0]\n        dy = d[i][1]\n        if dx != 0 and x // dx >= 0:\n            t = x // dx\n            cost = t * c[i]\n            y1 = d[i][1] * t\n            for j in range(6):\n                if j == i or d[j][0] != 0:\n                    continue\n                t1 = (y - y1) // d[j][1]\n                if t1 >= 0:\n                    nc = cost + t1 * c[j]\n                    if ans == -1 or ans > nc:\n                        ans = nc\n        if dy != 0 and y // dy >= 0:\n            t = y // dy\n            cost = t * c[i]\n            x1 = d[i][0] * t\n            for j in range(6):\n                if j == i or d[j][1] != 0:\n                    continue\n                t1 = (x - x1) // d[j][0]\n                if t1 >= 0:\n                    nc = cost + t1 * c[j]\n                    if ans == -1 or ans > nc:\n                        ans = nc\n    print(ans)", "for _ in range(int(input())):\n    (x0, y0) = input().split()\n    (x0, y0) = (int(x0), int(y0))\n    c = [0] + list(map(int, input().split()))\n    c[0] = c[-1]\n    c.append(c[1])\n    for i in range(1, 7):\n        c[i] = min(c[i], c[i - 1] + c[i + 1])\n    c[7] = c[1]\n    s = (None, [1, 1], [0, 1], [-1, 0], [-1, -1], [0, -1], [1, 0], [1, 1])\n    ans = 1e+30\n    for i in range(1, 7):\n        (x1, y1) = s[i]\n        (x2, y2) = s[i + 1]\n        a = (x0 * y2 - y0 * x2) // (x1 * y2 - y1 * x2)\n        b = (x0 * y1 - y0 * x1) // (x2 * y1 - y2 * x1)\n        if a >= 0 and b >= 0:\n            ans = min(ans, a * c[i] + b * c[i + 1])\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (x0, y0) = input().split()\n    (x0, y0) = (int(x0), int(y0))\n    c = [0] + list(map(int, input().split()))\n    c[0] = c[-1]\n    c.append(c[1])\n    for i in range(1, 7):\n        c[i] = min(c[i], c[i - 1] + c[i + 1])\n    c[7] = c[1]\n    s = (None, [1, 1], [0, 1], [-1, 0], [-1, -1], [0, -1], [1, 0], [1, 1])\n    ans = 1e+30\n    for i in range(1, 7):\n        (x1, y1) = s[i]\n        (x2, y2) = s[i + 1]\n        a = (x0 * y2 - y0 * x2) // (x1 * y2 - y1 * x2)\n        b = (x0 * y1 - y0 * x1) // (x2 * y1 - y2 * x1)\n        if a >= 0 and b >= 0:\n            ans = min(ans, a * c[i] + b * c[i + 1])\n    print(ans)", "def read_int():\n    return int(input())\n\ndef read_ints():\n    return map(int, input().split(' '))\nd = [(1, 1), (0, 1), (-1, 0), (-1, -1), (0, -1), (1, 0)]\nt = read_int()\nfor case_num in range(t):\n    (x, y) = read_ints()\n    c = list(read_ints())\n    ans = -1\n    for i in range(6):\n        dx = d[i][0]\n        dy = d[i][1]\n        if dx != 0 and x // dx >= 0:\n            t = x // dx\n            cost = t * c[i]\n            y1 = d[i][1] * t\n            for j in range(6):\n                if j == i or d[j][0] != 0:\n                    continue\n                t1 = (y - y1) // d[j][1]\n                if t1 >= 0:\n                    nc = cost + t1 * c[j]\n                    if ans == -1 or ans > nc:\n                        ans = nc\n        if dy != 0 and y // dy >= 0:\n            t = y // dy\n            cost = t * c[i]\n            x1 = d[i][0] * t\n            for j in range(6):\n                if j == i or d[j][1] != 0:\n                    continue\n                t1 = (x - x1) // d[j][0]\n                if t1 >= 0:\n                    nc = cost + t1 * c[j]\n                    if ans == -1 or ans > nc:\n                        ans = nc\n    print(ans)", "n = int(input())\nfor _ in range(n):\n    (y, x) = map(int, input().split())\n    costs = list(map(int, input().split()))\n    for i in range(36):\n        costs[i % 6] = min(costs[i % 6], costs[(i + 5) % 6] + costs[(i + 1) % 6])\n    ans = 0\n    if x >= 0:\n        if y >= 0:\n            if x >= y:\n                ans = (x - y) * costs[1] + y * costs[0]\n            else:\n                ans = x * costs[0] + (y - x) * costs[5]\n        else:\n            ans = x * costs[1] - y * costs[2]\n    elif y >= 0:\n        ans = -x * costs[4] + y * costs[5]\n    elif x <= y:\n        ans = (y - x) * costs[4] - y * costs[3]\n    else:\n        ans = -x * costs[3] + (x - y) * costs[2]\n    print(ans)"]