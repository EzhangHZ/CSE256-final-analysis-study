["import math\n\ndef euclidean_distance(x1, y1, x2, y2):\n    return ((x1 - x2) ** 2 + (y1 - y2) ** 2) ** 0.5\nt = int(input())\nfor i in range(t):\n    (n, distance) = map(int, input().split())\n    fav_numbers = list(map(int, input().split()))\n    if distance in fav_numbers:\n        print(1)\n    elif max(fav_numbers) > distance:\n        print(2)\n    else:\n        print(math.ceil(distance / max(fav_numbers)))", "for _ in [0] * int(input()):\n    (n, x) = map(int, input().split())\n    a = [*map(int, input().split())]\n    print(-(-x // max(a)) + (x < max(a) and x not in a))", "from sys import stdin\n\ndef solve():\n    (n, x) = map(int, input().split())\n    a = set(map(int, input().split()))\n    summ = sum(a)\n    maximal = max(a)\n    if summ == x:\n        return n\n    if x in a:\n        return 1\n    if maximal > x:\n        return 2\n    if x % maximal == 0:\n        return x // maximal\n    return x // maximal + 1\n\ndef main():\n    t = int(input())\n    while t > 0:\n        t -= 1\n        print(solve())\nmain()", "import math\n\ndef cowAndFriend(n, x, array):\n    m = max(array)\n    hops = math.ceil(x / m)\n    if hops == 1 and x not in array:\n        hops += 1\n    return hops\nt = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    print(cowAndFriend(n, x, l))", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if x in a:\n        print(1)\n    else:\n        m = max(a)\n        if m > x:\n            print(2)\n        elif x % m == 0:\n            print(x // m)\n        else:\n            print(x // m + 1)", "def main():\n    t = int(input())\n    for i1 in range(t):\n        (x, n) = list(map(int, input().split()))\n        a = list(map(int, input().split()))\n        y = max(a)\n        if n < y:\n            if n in a:\n                print(1)\n            else:\n                print(2)\n        elif n // y == n / y:\n            print(n // y)\n        else:\n            print(n // y + 1)\nmain()", "t = int(input())\nwhile t != 0:\n    (n, d) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    if d in a:\n        print(1)\n    else:\n        x = max(a)\n        print(max(2, (d + x - 1) // x))\n    t -= 1", "for _ in ' ' * int(input()):\n    (a, b) = map(int, input().split())\n    z = list(map(int, input().split()))\n    if b in z:\n        print(1)\n    else:\n        print(max(2, (b + max(z) - 1) // max(z)))", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    m = max(a)\n    if x in a:\n        print(1)\n    else:\n        print(max(2, ceil(x / m)))", "for _ in range(int(input())):\n    (n, x) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    if x in a:\n        print(1)\n    else:\n        g = max(a)\n        if g > x:\n            print(2)\n        else:\n            print(int((x - 0.001) // g) + 1)", "import math\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l1 = [int(a) for a in input().split()]\n    mx = max(l1)\n    if x in l1:\n        print(1)\n    else:\n        print(max(2, math.ceil(x / mx)))", "import math\n\ndef main():\n    for _ in range(int(input())):\n        (n, x) = map(int, input().split())\n        arr = list(map(int, input().split()))\n        if x in arr:\n            print(1)\n        else:\n            print(max(2, math.ceil(x / max(arr))))\nmain()", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if x in a:\n        print(1)\n    else:\n        m = max(a)\n        if m > x:\n            print(2)\n        elif x % m == 0:\n            print(x // m)\n        else:\n            print(x // m + 1)", "import math\n\ndef main_function():\n    test_cases = range(int(input()))\n    for test_case in test_cases:\n        (n, x) = [int(i) for i in input().split(' ')]\n        a = [int(u) for u in input().split(' ')]\n        if x in a:\n            print(1)\n        else:\n            z = math.ceil(x / max(a))\n            if z == 1:\n                print(2)\n            else:\n                print(z)\nmain_function()", "import math\nfor _ in ' ' * int(input()):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    mx = max(a)\n    print(1 if x in a else 2 if mx > x else math.ceil(x / mx))", "for _ in ' ' * int(input()):\n    (a, b) = map(int, input().split())\n    z = list(map(int, input().split()))\n    if b in z:\n        print(1)\n    else:\n        print(max(2, (b + max(z) - 1) // max(z)))", "from sys import *\ninput = stdin.readline\nI = int\nR = range\nlistInput = lambda : list(map(int, input().strip().split()))\nlineInput = lambda : map(int, input().strip().split())\nsJoin = lambda a, sep: '{}'.format(sep).join(a)\narrJoin = lambda a, sep: '{}'.format(sep).join(map(str, a))\n\ndef isPrime(n):\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    for i in range(5, int(math.sqrt(n) + 1), 6):\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n    return True\n\ndef main():\n    for _ in R(I(input())):\n        (n, d) = lineInput()\n        arr = listInput()\n        m = max(arr)\n        if d in arr:\n            print(1)\n        else:\n            print(max(2, (d + m - 1) // m))\nmain()", "from math import ceil\nfor bipki in range(int(input())):\n    (n, x) = map(int, input().split())\n    A = set(map(int, input().split()))\n    y = max(A)\n    if x in A:\n        print(1)\n    else:\n        print(max(2, ceil(x / y)))", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    li = list(map(int, input().split()))\n    ma = max(li)\n    if x in li:\n        print(1)\n    elif ma > x:\n        print(2)\n    else:\n        c = x // ma\n        if x % ma != 0:\n            c += 1\n        print(c)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if x in a:\n        print(1)\n    else:\n        m = max(a)\n        print(max(2, (x - 1) // m + 1))", "p = int(input())\nfor j in range(p):\n    (n, x) = map(int, input().split())\n    s = set()\n    num = 0\n    for i in input().split():\n        s.add(int(i))\n    m = max(s)\n    if x in s:\n        print(1)\n    else:\n        if x % m == 0:\n            num += x // m\n        else:\n            if x // m < 1:\n                k = 1\n            else:\n                k = x // m\n            num += k + 1\n        print(num)", "mas = list(map(int, input().split()))\nt = mas[0]\nfor j in range(t):\n    mas = list(map(int, input().split()))\n    n = mas[0]\n    x = mas[1]\n    lst = list(map(int, input().split()))\n    maxa = lst[0]\n    ok1 = False\n    ok2 = False\n    for i in lst:\n        if i > maxa:\n            maxa = i\n        if i == x:\n            ok1 = True\n        if i > x:\n            ok2 = True\n    if ok1:\n        print(1)\n    elif ok2:\n        print(2)\n    else:\n        s = x // maxa\n        if x % maxa != 0:\n            s += 1\n        print(s)", "T = int(input())\nfor i in range(T):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if a.count(x):\n        print(1)\n    else:\n        mx = max(a)\n        if mx > x:\n            print(2)\n        else:\n            print(x // mx + (x % mx > 0))", "import math\n\ndef numbersListInput():\n    aux = list(map(int, input().strip().split()))\n    return aux\n\ndef findHops(distance, favorites):\n    if distance in favorites:\n        return 1\n    biggest_number = max(favorites)\n    if biggest_number > x:\n        return 2\n    else:\n        return math.ceil(x / biggest_number)\ntest_cases = int(input())\nfor i in range(test_cases):\n    aux = numbersListInput()\n    n = aux[0]\n    x = aux[1]\n    aux = numbersListInput()\n    print(findHops(x, aux))", "t = int(input())\nfrom math import ceil\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if x in arr:\n        print(1)\n        continue\n    mx = max(arr)\n    ans = max(ceil(x / mx), 2)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = a[1]\n    if x in b:\n        print('1')\n        continue\n    big = max(b)\n    print(max(2, (x + big - 1) // big))", "from math import ceil\nt = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if x in a:\n        print(1)\n    else:\n        MAX = 0\n        for j in a:\n            if j > MAX:\n                MAX = j\n        val = int(ceil(x / MAX))\n        ans = max(2, val)\n        print(ans)", "from math import ceil\np = int(input())\nfor _ in range(p):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if k in l:\n        print('1')\n    elif ceil(k / max(l)) > 1:\n        print(ceil(k / max(l)))\n    else:\n        print('2')", "import math\n\ndef f():\n    l1 = input().split(' ')\n    l2 = input().split(' ')\n    n = int(l1[0])\n    x = int(l1[1])\n    am = 0\n    for i in range(n):\n        if int(l2[i]) == x:\n            print(1)\n            return 0\n        am = max(am, int(l2[i]))\n    if am > x:\n        print(2)\n        return 0\n    else:\n        print(math.ceil(x / am))\n        return 0\nrow = int(input())\nfor r in range(row):\n    f()", "for t in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if x in a:\n        print('1')\n    elif x < max(a):\n        print('2')\n    elif x % max(a) == 0:\n        print(x // max(a))\n    else:\n        print(x // max(a) + 1)", "T = int(input())\nfor test in range(T):\n    (favnum, distance) = map(int, input().split())\n    favlst = list(map(int, input().split()))\n    if distance in favlst:\n        print(1)\n    else:\n        Max = max(favlst)\n        if Max > distance:\n            print(2)\n        else:\n            if distance % Max == 0:\n                ans = int(distance / Max)\n            else:\n                ans = int(distance / Max) + 1\n            print(ans)", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if k in arr:\n        print('1')\n        t -= 1\n        continue\n    else:\n        tmx = max(arr)\n        result = max(2, (k + tmx - 1) // tmx)\n    print(result)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if a.count(x):\n        print(1)\n    else:\n        q = max(a)\n        print(max(2, int((x + q - 1) / q)))", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if x in a:\n        print(1)\n    else:\n        print(max(2, (x - 1) // max(a) + 1))", "import math\nt = int(input())\nfor i in range(t):\n    (n, X) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if X in a:\n        print('1')\n    else:\n        print(max(2, math.ceil(X / max(a))))", "import math\nt = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    jumps = list(map(int, input().split()))\n    if x in jumps:\n        print(1)\n    else:\n        maxJump = max(jumps)\n        res = int(max(2, math.ceil(x / maxJump)))\n        print(res)", "from math import ceil\nt = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    t = max(l)\n    if x % t == 0:\n        print(x // t)\n    elif x // t or x - x // t in l:\n        print(x // t + 1)\n    else:\n        print(x // t + 2)", "t = int(input())\nanswer = []\nfor iteration in range(t):\n    (n, x) = [int(element) for element in input().split(' ')]\n    favorite = [int(element) for element in input().split(' ')]\n    if x in favorite:\n        answer.append(str(1))\n    elif x % max(favorite) == 0:\n        answer.append(str(max(x // max(favorite), 2)))\n    else:\n        answer.append(str(max(x // max(favorite) + 1, 2)))\nprint('\\n'.join(answer))", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    m = max(l)\n    if m > x:\n        if x in l:\n            print(1)\n        else:\n            print(2)\n    elif x % m == 0:\n        print(x // m)\n    else:\n        print(x // m + 1)", "from math import ceil\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    numbers = set(map(int, input().split()))\n    if x in numbers:\n        print(1)\n        continue\n    k = max(numbers)\n    if k >= x:\n        print(2)\n        continue\n    print(int(ceil(x / k)))", "def f():\n    t = int(input())\n    for _ in range(t):\n        _input = input()\n        n = int(_input.split(' ')[0])\n        x = int(_input.split(' ')[1])\n        a = list(map(int, input().split(' ')))\n        b = max(a)\n        if x in a:\n            print(1)\n        elif x <= 2 * b:\n            print(2)\n        else:\n            print((x + b - 1) // b)\nf()", "t = int(input())\nfor i in range(t):\n    (n, x) = list(map(int, input().split()))\n    a = set(map(int, input().split()))\n    nmax = max(a)\n    counter = max(x // nmax - 1, 0)\n    dist = x - counter * nmax\n    if dist in a:\n        counter = counter + 1\n    else:\n        counter = counter + 2\n    print(counter)", "import math\n\ndef smallestSubWithSum(arr, n, x):\n    min_len = n + 1\n    for start in range(0, n):\n        curr_sum = arr[start]\n        if curr_sum > x:\n            return 1\n        for end in range(start + 1, n):\n            curr_sum += arr[end]\n            if curr_sum > x and end - start + 1 < min_len:\n                min_len = end - start + 1\n    return min_len\nT = int(input())\nfor i in range(T):\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    if x in a:\n        print(1)\n    elif max(a) > x:\n        print(2)\n    else:\n        print(math.ceil(x / max(a)))", "import math\nt = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if x in a:\n        print(1)\n    else:\n        d = max(a)\n        print(max(2, math.ceil(x / d)))", "import math\nt = int(input())\nwhile t != 0:\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    m = max(a)\n    if x in a:\n        print(1)\n    elif m >= x / 2:\n        print(2)\n    elif x % m in a:\n        print(math.floor(x / m) + 1)\n    else:\n        print(math.ceil(x / m))\n    t = t - 1", "t = int(input())\nimport math\n\ndef find(x, arr):\n    for k in arr:\n        if k == x:\n            return 1\n    if min(arr) > x:\n        return 2\n    if max(arr) < x:\n        if x % max(arr):\n            return x // max(arr) + 1\n        else:\n            return x // max(arr)\n    else:\n        return 2\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(find(x, arr))", "import math\nfor i in range(int(input())):\n    (x, y) = map(int, input().split())\n    l = list(map(int, input().split()))\n    k = l\n    l = max(l)\n    if y in k:\n        print(1)\n    elif y < l:\n        print(2)\n    else:\n        print(int(math.ceil(y / l)))", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if x in a:\n        print('1')\n    elif max(a) > x:\n        print('2')\n    else:\n        k = max(a)\n        if x % k == 0:\n            print(x // k)\n        else:\n            print(x // k + 1)", "t = int(input())\nfor _ in range(t):\n    (n, x) = (int(i) for i in input().split())\n    f = [int(i) for i in input().split()]\n    ans = 0\n    if x in f:\n        ans = 1\n    else:\n        m = max(f)\n        ans = (x + m - 1) // m\n        ans = max(ans, 2)\n    print(ans)", "import math\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if x in a:\n        print(1)\n    else:\n        f = max(a)\n        print(max(2, (x + f - 1) // f))", "t = int(input())\nz = []\nfor i in range(0, t):\n    (n, x) = input().split()\n    n = int(n)\n    x = int(x)\n    s = 0\n    cnt = 0\n    b = list(map(int, input().strip().split()))[:n]\n    m = max(b)\n    if x in b:\n        z.append(1)\n    elif m > x:\n        z.append(2)\n    elif x % m == 0:\n        z.append(x // m)\n    else:\n        z.append(x // m + 1)\nfor i in z:\n    print(i)", "import math\nfor _ in range(int(input())):\n    (n, d) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    if d in a:\n        print(1)\n    else:\n        print(max(2, math.ceil(d / max(a))))", "import math\nt = int(input())\nwhile t != 0:\n    (n, d) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    if d in a:\n        print(1)\n    else:\n        x = max(a)\n        print(max(2, (d + x - 1) // x))\n    t -= 1", "for _ in range(int(input())):\n    (n, x) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    if x in a:\n        print(1)\n    elif max(a) > x:\n        print(2)\n    else:\n        k = max(a)\n        if x % k == 0:\n            print(x // k)\n        else:\n            print(x // k + 1)", "from collections import defaultdict\nfrom sys import stdin\nimport math\ninput = stdin.readline\nt = int(input())\nfor _ in range(t):\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    if x in a:\n        print(1)\n    else:\n        print(max(2, math.ceil(x / max(a))))", "from sys import exit\n\ndef iis():\n    return map(int, input().split())\n\ndef ii():\n    return int(input())\n\ndef liis():\n    return list(map(int, input().split()))\nt = ii()\nfor _ in range(t):\n    (n, x) = iis()\n    a = liis()\n    maxi = max(a)\n    if x in a:\n        print(1)\n    elif x % maxi == 0:\n        print(x // maxi)\n    elif x // maxi == 0:\n        print(2)\n    else:\n        print(x // maxi + 1)", "def solve(n, a, x):\n    if x in a:\n        return 1\n    step = max(a)\n    if step > x:\n        return 2\n    return (x + step - 1) // step\nt = int(input())\nfor _ in range(t):\n    (n, x) = [int(_) for _ in input().split()]\n    a = [int(_) for _ in input().split()]\n    print(solve(n, a, x))", "def main(t):\n    while t:\n        (_, distance) = map(int, input().split())\n        numbers = list(map(int, input().split()))\n        if distance in numbers:\n            print('1')\n            t -= 1\n            continue\n        max_val = max(numbers)\n        if distance < max_val:\n            print('2')\n            t -= 1\n            continue\n        step = distance // max_val\n        if distance % max_val:\n            step += 1\n        print(step)\n        t -= 1\n    return\ntrials = int(input())\nmain(trials)", "t = int(input())\nans = []\nfor i in range(t):\n    (n, x) = map(int, input().strip().split())\n    a = list(map(int, input().strip().split()))[0:n]\n    max1 = a[0]\n    flag = 0\n    for i in a:\n        if max1 < i:\n            max1 = i\n        if i == x:\n            flag = 1\n    if flag == 1:\n        ans.append(1)\n    elif x % max1 == 0:\n        ans.append(max(2, x // max1))\n    else:\n        ans.append(max(2, x // max1 + 1))\nfor i in ans:\n    print(i)", "import math\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    m = max(l)\n    if x in l:\n        print(1)\n    else:\n        d = max(2, math.ceil(x / m))\n        print(d)", "import math\ns = int(input(''))\nwhile s > 0:\n    (n, d) = input('').split()\n    n = int(n)\n    d = int(d)\n    c = 0\n    l = list(map(int, input('').split()))\n    for i in l:\n        if i == d:\n            print(1)\n            c = 1\n            break\n    if c == 0:\n        print(max(2, math.ceil(d / max(l))))\n    s = s - 1", "t = int(input())\nfor i in range(t):\n    (n, d) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if d in arr:\n        print('1')\n    else:\n        maxe = max(arr)\n        print(max(2, (d + maxe - 1) // maxe))", "import math\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = set(map(int, input().split()))\n    if x in s:\n        print(1)\n    else:\n        print(math.ceil(max(2, x / max(s))))", "for k in range(int(input())):\n    (n, x) = map(int, input().split())\n    mass = [int(x) for x in input().split()]\n    if x in mass:\n        print(1)\n    elif max(mass) > x:\n        print(2)\n    else:\n        print((x + max(mass) - 1) // max(mass))", "t = int(input())\nfor te in range(t):\n    (n, d) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    far = max(arr)\n    if arr.__contains__(d) == True:\n        print(1)\n    else:\n        print(max(2, (d + far - 1) // far))", "import math\n\ndef numbersListInput():\n    aux = list(map(int, input().strip().split()))\n    return aux\n\ndef findHops(distance, favorites):\n    if distance in favorites:\n        return 1\n    biggest_number = max(favorites)\n    if biggest_number > x:\n        return 2\n    else:\n        return math.ceil(x / biggest_number)\ntest_cases = int(input())\nfor i in range(test_cases):\n    aux = numbersListInput()\n    n = aux[0]\n    x = aux[1]\n    aux = numbersListInput()\n    print(findHops(x, aux))", "from math import ceil\nfor saquif in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    y = 1\n    for i in a:\n        if i == x:\n            rslt = 1\n            y = 0\n            break\n    if y and max(a) < x:\n        rslt = ceil(x / max(a))\n    elif y and max(a) > x:\n        rslt = 2\n    print(rslt)", "testCases = int(input())\nfor i1 in range(testCases):\n    (x, n) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    y = max(a)\n    if n <= y:\n        if n in a:\n            print(1)\n        else:\n            print(2)\n    elif n // y == n / y:\n        print(n // y)\n    else:\n        print(n // y + 1)", "import math\nR = lambda : map(int, input().split())\nt = int(input())\n\ndef solve(n, x, a):\n    for i in a:\n        if i == x:\n            print('1')\n            return\n    a = max(a)\n    if x % a == 0:\n        print(x // a)\n    else:\n        ans = 2\n        x -= 2 * a\n        if x > 0:\n            ans += math.ceil(x / a)\n        print(ans)\nfor _ in range(t):\n    (n, x) = R()\n    a = list(R())\n    solve(n, x, a)", "t = int(input())\nwhile t > 0:\n    b = [int(x) for x in input().split()]\n    n = b[0]\n    k = b[1]\n    a = [int(x) for x in input().split()]\n    m = max(a)\n    if k % m == 0:\n        print(k // m)\n    elif k in a:\n        print(1)\n    elif m > k:\n        print(2)\n    else:\n        print(k // m + 1)\n    t -= 1", "import math\nt = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if x in a:\n        print(1)\n    else:\n        k = max(a)\n        print(max(2, math.ceil(x / k)))", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if max(a) > x:\n        if x in a:\n            print(1)\n        else:\n            print(2)\n    else:\n        print(x // max(a) + int(x % max(a) != 0))", "T = int(input())\n\ndef solve():\n    (n, x) = input().split()\n    n = int(n)\n    x = int(x)\n    a = input().split()\n    for i in range(len(a)):\n        a[i] = int(a[i])\n    mx = int(max(a))\n    if x < mx:\n        ok = 0\n        for i in a:\n            if i == x:\n                ok = 1\n        if ok == 1:\n            print(1)\n        else:\n            print(2)\n    else:\n        print(x // mx + (1 if x % mx else 0))\nwhile T:\n    solve()\n    T -= 1", "t = int(input())\nfor o in range(t):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = max(a)\n    if c > m:\n        f = 0\n        for i in range(n):\n            if a[i] == m:\n                f = 1\n                cnt = 1\n                break\n        if f == 0:\n            cnt = 2\n    else:\n        cnt = 0\n        cnt += m // c\n        if m % c != 0:\n            cnt += 1\n    print(cnt)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = dict(map(lambda x: (int(x), 0), input().split()))\n    m = max(a)\n    if x in a:\n        print(1)\n    elif m > x:\n        print(2)\n    else:\n        ans = x // m\n        if x % m != 0:\n            ans += 1\n        print(ans)", "n = int(input())\nfor _ in range(n):\n    (kk, m) = map(int, input().split())\n    nums = list(map(int, input().split()))\n    if m in nums:\n        print(1)\n        continue\n    maxx = max(nums)\n    (a, b) = divmod(m, maxx)\n    ap = 0\n    if b:\n        ap += 1\n    if a == 0:\n        ap += 1\n    print(a + ap)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = list(map(int, input().split()))\n    p = 1\n    for i in s:\n        if i == m:\n            print(1)\n            p = 0\n            break\n    if p:\n        mx = max(s)\n        print(max(2, (m + mx - 1) // mx))", "t = int(input())\nfor o in range(0, t):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    iss = False\n    maxi = 0\n    for i in range(0, n):\n        if arr[i] == x:\n            iss = True\n        maxi = max(maxi, arr[i])\n    hi = x // maxi\n    if x % maxi != 0:\n        hi += 1\n        hi = max(hi, 2)\n    if iss:\n        print(1)\n    else:\n        print(hi)", "from math import *\nfrom collections import *\nfrom functools import *\nfrom bisect import *\nfrom itertools import *\nfrom heapq import *\nfrom statistics import *\ninf = float('inf')\nninf = -float('inf')\nip = input\nalphal = 'abcdefghijklmnopqrstuvwxyz'\nalphau = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\ndef ipl():\n    return list(map(int, ip().split()))\n\ndef ipn():\n    return int(ip())\n\ndef ipf():\n    return float(ip())\n\ndef solve():\n    (n, x) = ipl()\n    a = ipl()\n    print(1 if x in a else max(2, ceil(x / max(a))))\nfor _ in range(ipn()):\n    solve()", "for _ in range(int(input())):\n    (n, x) = list(map(int, input().split()))\n    ar = list(map(int, input().split()))\n    num = (x + max(ar) - 1) // max(ar)\n    if num == 1 and x not in ar:\n        num = 2\n    print(num)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (n, x) = [int(item) for item in input().split()]\n    a = [int(item) for item in input().split()]\n    max_a = max(a)\n    ans = (x + max_a - 1) // max_a\n    if ans == 1 and x not in a:\n        ans = 2\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ma = max(a)\n    if x in a:\n        print(1)\n    elif ma > x:\n        print(2)\n    elif x % ma == 0:\n        print(x // ma)\n    else:\n        print(x // ma + 1)", "t = int(input())\nfor i in range(t):\n    (n, x) = list(map(int, input().split()))\n    num = list(map(int, input().split()))\n    if x in num:\n        print(1)\n        continue\n    ma = max(num)\n    if ma > x:\n        print(2)\n    else:\n        print((x + ma - 1) // ma)", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        (N, X) = [int(x) for x in input().split()]\n        A = [int(x) for x in input().split()]\n        ma = max(A)\n        if X in A:\n            print(1)\n            continue\n        elif ma > X:\n            print(2)\n            continue\n        else:\n            print(-(-X // ma))\n            continue\nmain()", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    m = max(a)\n    ans = 0\n    if x in a:\n        ans = 1\n    elif m > x:\n        ans = 2\n    else:\n        q = x // m\n        r = x % m\n        if r == 0:\n            ans = q\n        else:\n            ans = q + 1\n    print(ans)", "from math import ceil\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    jumps = set(map(int, input().split()))\n    if x in jumps:\n        print(1)\n        continue\n    jumpmax = max(jumps)\n    if jumpmax > x:\n        print(2)\n    else:\n        print(ceil(x / jumpmax))", "from math import ceil\nfor i in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    m = max(a)\n    ans = 0\n    if m <= x:\n        ans = ceil(x / m)\n    else:\n        ans = 2\n    for i in a:\n        if i == x:\n            ans = 1\n    print(ans)", "for i in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    to = 0\n    l = []\n    t = 0\n    l = list(map(int, input().split()))\n    d = max(l)\n    if b == d:\n        to = 1\n    elif d > b:\n        to = 2\n        for vaibhav in l:\n            if vaibhav == b:\n                to = 1\n                break\n    elif b % d == 0:\n        to = b // d\n    else:\n        to = b // d + 1\n    print(to)", "def solution():\n    from sys import stdin, stdout\n    (_input, _print, _range, _int, _len, _str) = (stdin.readline, stdout.write, range, int, len, str)\n    _max = max\n    for _ in _range(_int(_input())):\n        (n, x) = [_int(i) for i in _input().split()]\n        arr = [_int(i) for i in _input().split()]\n        max_ = _max(arr)\n        step = x // max_\n        if x % max_ > 0 and step == 0:\n            for i in arr:\n                if i == x:\n                    step += 1\n                    break\n            else:\n                step += 2\n        elif x % max_ > 0:\n            step += 1\n        print(step)\nsolution()", "from math import ceil, sqrt, gcd\n\ndef ii():\n    return int(input())\n\ndef si():\n    return input()\n\ndef mi():\n    return map(int, input().strip().split(' '))\n\ndef li():\n    return list(mi())\n\ndef divisor(n):\n    b = []\n    for i in range(2, int(sqrt(n)) + 1):\n        if n % i == 0:\n            if i == n // i:\n                b.append(i)\n            else:\n                b.append(i)\n                b.append(n // i)\n    return b\nt = ii()\nwhile t:\n    t -= 1\n    (n, x) = mi()\n    a = li()\n    if x in a:\n        print('1')\n        continue\n    a1 = max(a)\n    a1 *= a1\n    if x * x < a1:\n        print('2')\n        continue\n    a2 = max(a)\n    y = x // a2\n    if x % a2:\n        print(y + 1)\n    else:\n        print(y)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    m = max(l)\n    if x in l:\n        print(1)\n    elif m >= x / 2:\n        print(2)\n    else:\n        print(math.ceil(x / m))", "import math\nq = int(input())\nfor x in range(q):\n    (n, d) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    if d in l:\n        print(1)\n    elif d < 2 * max(l):\n        print(2)\n    else:\n        print(math.ceil(d / max(l)))", "t = int(input())\nfor i in range(t):\n    (n, x) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    mx = max(l)\n    ans = 0\n    if x in l:\n        print(1)\n    elif mx > x:\n        print(2)\n    else:\n        ct = x // mx\n        if x % mx != 0:\n            ct += 1\n        print(ct)", "has_tests = True\n\ndef solve_case():\n    (n, x) = get([int])\n    jumps = get([int])\n    if x in jumps:\n        return 1\n    max_jump = max(jumps)\n    if x % max_jump == 0:\n        return x // max_jump\n    if max_jump > x:\n        return 2\n    return x // max_jump + 1\n\ndef get(x, times=None):\n    if times is not None:\n        return [get(x, times=None) for _ in range(times)]\n    if isinstance(x, list):\n        return list(map(x[0], input().strip().split()))\n    return x(input().strip())\nif has_tests:\n    for _ in range(get(int)):\n        print(solve_case())\nelse:\n    solve_case()", "import math\nt = int(input())\nfor _i in range(t):\n    (n, m) = map(int, input().split())\n    s = list(map(int, input().split()))\n    flag = False\n    for j in range(n):\n        if s[j] == m:\n            print(1)\n            flag = True\n            break\n    if flag == False:\n        maxx = max(s)\n        print(max(2, math.ceil(m / maxx)))", "t = int(input())\nfor case_num in range(t):\n    (n, x) = map(int, input().split(' '))\n    a = list(map(int, input().split(' ')))\n    b = 0\n    for i in a:\n        if x % i == 0:\n            b = max(b, i)\n    c = max(a)\n    ans = 10000000000.0 if b == 0 else x // b\n    ans = min(ans, 1 + max(1, x // c))\n    print(ans)", "for t in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    m = max(a)\n    if x in a:\n        print(1)\n    elif x < m:\n        print(2)\n    elif x % m == 0:\n        print(x // m)\n    else:\n        print(x // m + 1)", "import math, sys\nfor _ in range(int(sys.stdin.readline())):\n    (n, x) = map(int, input().split())\n    ints = [int(x) for x in input().split()]\n    max1 = max(ints)\n    if max1 > x and (not x in ints):\n        sys.stdout.write('2\\n')\n    else:\n        sys.stdout.write(str(math.ceil(x / max1)) + '\\n')", "l = int(input())\ni = 0\nfor _ in range(l):\n    (n, x) = list(map(int, input().split()))\n    ll = list(map(int, input().split()))\n    llmax = max(ll)\n    if x in ll:\n        print(1)\n    elif llmax > x:\n        print(2)\n    else:\n        print((x - 1) // llmax + 1)", "d = int(input())\nwhile d:\n    (a, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = max(l)\n    t = 0\n    for i in l:\n        if i == x:\n            t += 1\n    if t == 1:\n        print(1)\n    elif c < x and c >= x / 2:\n        print(2)\n    elif c > x:\n        print(2)\n    elif x / c == x // c:\n        print(x // c)\n    else:\n        print(x // c + 1)\n    d -= 1"]