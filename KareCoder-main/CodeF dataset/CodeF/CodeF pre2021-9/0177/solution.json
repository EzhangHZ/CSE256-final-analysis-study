["for _ in [*open(0)][2::2]:\n    arr = list(map(int, _.split()))\n    k = sum(arr) % len(arr)\n    print(k * (len(arr) - k))", "for s in [*open(0)][2::2]:\n    n = len((a := s.split()))\n    r = sum(map(int, a)) % n\n    print(r * (n - r))", "for s in [*open(0)][2::2]:\n    n = len((a := s.split()))\n    r = sum(map(int, a)) % n\n    print(r * (n - r))", "for s in [*open(0)][2::2]:\n    n = len((a := s.split()))\n    r = sum(map(int, a)) % n\n    print(r * (n - r))", "for s in [*open(0)][2::2]:\n    n = len((a := s.split()))\n    r = sum(map(int, a)) % n\n    print(r * (n - r))", "for s in [*open(0)][2::2]:\n    n = len((a := s.split()))\n    r = sum(map(int, a)) % n\n    print(r * (n - r))", "for s in [*open(0)][2::2]:\n    n = len((a := s.split()))\n    r = sum(map(int, a)) % n\n    print(r * (n - r))", "for s in [*open(0)][2::2]:\n    n = len((a := s.split()))\n    r = sum(map(int, a)) % n\n    print(r * (n - r))", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    data = list(map(int, input().split()))\n    total = sum(data)\n    temp = total - total // n * n\n    if temp == 0:\n        print(0)\n    else:\n        print(temp * (n - temp))", "def main():\n    import sys\n    input = sys.stdin.readline\n    for _ in range(int(input())):\n        n = int(input())\n        l = sum(list(map(int, input().split())))\n        print((n - l % n) * (l % n))\nmain()", "for s in [*open(0)][2::2]:\n    n = len((a := s.split()))\n    r = sum(map(int, a)) % n\n    print(r * (n - r))", "DEB = False\n\ndef solve(tests):\n    return [min_incon(a) for a in tests]\n\ndef min_incon(a):\n    n = len(a)\n    s = sum(a)\n    return s % n * (n - s % n)\n\ndef print_sol(sol):\n    [print(min_inc) for min_inc in sol]\n\ndef print_test(t, tests):\n    print()\n    print(t)\n    [print(test) for test in tests]\n    print()\n\ndef parse_input():\n    t = int(input())\n    tests = [list(map(int, input() and input().split())) for _ in range(t)]\n    return (t, tests)\n\ndef main():\n    (t, tests) = parse_input()\n    if DEB:\n        print_test(t, tests)\n    print_sol(solve(tests))\nmain()", "for s in [*open(0)][2::2]:\n    n = len((a := s.split()))\n    r = sum(map(int, a)) % n\n    print(r * (n - r))", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    large = sum(a) % n\n    small = n - large\n    print(large * small)", "for s in [*open(0)][2::2]:\n    l = map(int, s.split())\n    total = 0\n    x = (*l,)\n    sz_of_array = len(x)\n    for c in x:\n        total += c\n    avg = total // sz_of_array\n    rem = avg * sz_of_array\n    t_rem = total - rem\n    print((sz_of_array - t_rem) * t_rem)", "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    res = sum(li) % len(li)\n    print(res * (n - res))", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    print(sum(p) % n * (n - sum(p) % n))", "b = int(input())\np = 0\nfor i in range(0, b):\n    n = int(input())\n    m = list(map(int, input().split()))\n    p = sum(m) % n\n    print(p * (n - p))", "def my_sum(a):\n    result = 0\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            result += abs(a[i] - a[j])\n    return result\n\ndef solution():\n    n = int(input())\n    a = list(map(int, input().split()))\n    assert len(a) == n\n    remainder = sum(a) % len(a)\n    return remainder * (len(a) - remainder)\nt = int(input())\nfor i in range(t):\n    print(solution())", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    count = sum(a)\n    d = count % n\n    count1 = d * (n - d)\n    print(count1)", "n = int(input())\nl1 = []\nl2 = []\nfor i in range(n):\n    l1.append(int(input()))\n    l2.append([int(x) for x in input().split()])\nfor i in range(n):\n    a = sum(l2[i])\n    b = a % l1[i]\n    if b == 0:\n        print(0)\n    else:\n        print(b * (l1[i] - b))\nprint()", "for run in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    s = sum(lst)\n    print(s % n * (n - s % n))", "import math\nfrom collections import deque, defaultdict\nfrom math import sqrt, ceil, factorial, floor, inf, gcd\nimport bisect\nimport sys\nimport random\nimport heapq\n\ndef get_array():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef input():\n    return sys.stdin.readline().strip()\nfrom types import GeneratorType\n\ndef bootstrap(f, stack=[]):\n\n    def wrappedfunc(*args, **kwargs):\n        if stack:\n            return f(*args, **kwargs)\n        else:\n            to = f(*args, **kwargs)\n            while True:\n                if type(to) is GeneratorType:\n                    stack.append(to)\n                    to = next(to)\n                else:\n                    stack.pop()\n                    if not stack:\n                        break\n                    to = stack[-1].send(to)\n            return to\n    return wrappedfunc\nfor _ in range(int(input())):\n    n = int(input())\n    a = get_array()\n    remain = sum(a) % n\n    print(remain * (n - remain))", "for s in [*open(0)][2::2]:\n    n = len((a := s.split()))\n    r = sum(map(int, a)) % n\n    print(r * (n - r))", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = sum(l) % n\n    print(x * (n - x))", "from math import *\nfrom math import factorial as fact, comb as ncr\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom collections import Counter as ctr\nfrom collections import deque as dq\nfrom array import array\nfrom re import search\nli = lambda : list(map(int, input().split()))\narr = lambda a: array('i', a)\nbi = lambda n: bin(n).replace('0b', '')\nyn = lambda f: print('NYOE S'[f::2])\nsbstr = lambda a, s: search('.*'.join(a), s)\n\ndef solve():\n    for _ in range(int(input())):\n        n = int(input())\n        a = li()\n        r = sum(a) % n\n        print(r * (n - r))\nsolve()", "q = int(input())\nfor i in range(q):\n    n = int(input())\n    l = [int(i) for i in input().split(' ')]\n    print(sum(l) % n * (n - sum(l) % n))", "t = int(input())\nfor i in range(t):\n    s = 0\n    n = int(input())\n    temp = list(map(int, input().split()))\n    s = sum(temp)\n    print(s % n * (n - s % n))", "num = int(input())\nfor i in range(num):\n    n = int(input())\n    arr = input().split(' ')\n    arr = list(map(int, arr))\n    avg = int(sum(arr) / n)\n    remain = sum(arr) - avg * n\n    print(remain * (n - remain))", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    for i in range(n):\n        s += a[i]\n    r = s % n\n    print(r * (n - r))\n    t -= 1", "for p in range(int(input())):\n    n = int(input())\n    m = list(map(int, input().split()))\n    s = sum(m)\n    a = s // n\n    b = s - a * n\n    print(b * (n - b))", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    s = input()\n    arr = s.split(' ')\n    res = 0\n    for a in arr:\n        res += int(a)\n    rem = res % n\n    print(rem * (n - rem))", "for _ in range(int(input())):\n    n = int(input())\n    a = sum(map(int, input().split())) % n\n    print(a * (n - a))", "import sys\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef LI1():\n    return list(map(int1, sys.stdin.readline().split()))\n\ndef LLI1(rows_number):\n    return [LI1() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline().rstrip()\ninf = 10 ** 16\nmd = 10 ** 9 + 7\nfor testcase in range(II()):\n    n = II()\n    aa = LI()\n    s = sum(aa)\n    r = s % n\n    ans = r * (n - r)\n    print(ans)", "import sys\nfor i in range(int(input())):\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    S = sum(a)\n    e = S % n\n    print(e * (n - e))", "def solve():\n    n = int(input())\n    a = sum(map(int, input().split()))\n    (a, b) = (a % n, n - a % n)\n    print(a * b)\nk = int(input())\nfor i in range(k):\n    solve()", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    A = list(map(int, input().split(' ')))\n    sA = sum(A)\n    g = sA % n\n    l = n - g\n    print(l * g)", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_string():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_print_int(x):\n    sys.stdout.write(str(x) + '\\n')\n\ndef get_print(x):\n    sys.stdout.write(x + '\\n')\n\ndef get_print_int_same(x):\n    sys.stdout.write(str(x) + ' ')\n\ndef get_print_same(x):\n    sys.stdout.write(x + ' ')\nfrom sys import maxsize\n\ndef solve():\n    for _ in range(get_int()):\n        n = get_int()\n        arr = get_list()\n        summ = sum(arr)\n        each = summ // n\n        rem = summ - each * n\n        get_print_int(rem * (n - rem))\nsolve()", "import math\nimport sys\nfrom functools import reduce\nimport decimal\nsys.setrecursionlimit(10 ** 9)\ndecimal.getcontext().rounding = decimal.ROUND_HALF_UP\n\ndef rounding(n):\n    return int(decimal.Decimal(f'{n}').to_integral_value())\n\ndef factors(n):\n    return set(reduce(list.__add__, ([i, n // i] for i in range(1, int(n ** 0.5) + 1) if n % i == 0)))\n\ndef inp():\n    return sys.stdin.readline().strip()\n\ndef map_inp(v_type):\n    return map(v_type, inp().split())\n\ndef list_inp(v_type):\n    return list(map_inp(v_type))\nfor _ in range(int(inp())):\n    n = int(inp())\n    arr = list_inp(int)\n    total = sum(arr)\n    remaining = total % n\n    print(remaining * (n - remaining))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    c2 = s % n\n    c1 = n - c2\n    print(c1 * c2)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a) % n\n    print(s * (n - s))", "import sys\nfrom sys import stdin, stdout\nfrom math import ceil, floor, sqrt, log, log2, log10\nfrom collections import Counter\nint_max = float('inf')\nint_min = -float('inf')\nANS = []\ninput = stdin.readline\n\ndef solve():\n    pass\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().strip().split()))\n    summ = sum(arr)\n    a = floor(summ / n) * n\n    rem = summ - a\n    print((summ - a) * (n - rem))", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    c = sum(map(int, input().split())) % n\n    print((n - c) * c)", "for q in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    p = sum(l1)\n    p1 = p // n\n    r = p % n\n    print(r * (n - r))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    q = sum(a)\n    x = q // n\n    b = q - n * x\n    print(b * (n - b))", "from sys import stdin\ninput = stdin.readline\nrn = lambda : int(input())\nrns = lambda : map(int, input().split())\nrl = lambda : list(map(int, input().split()))\nrs = lambda : input().strip()\nYN = lambda x: print('YES') if x else print('NO')\nmod = 10 ** 9 + 7\nfor _ in range(rn()):\n    n = rn()\n    a = rl()\n    s = sum(a)\n    if s % n == 0:\n        print(0)\n    else:\n        ans = s % n * (n - s % n)\n        print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    temp = sum(arr) % n\n    print(temp * (n - temp))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sm = sum(a)\n    a = sm % n\n    b = n - a\n    print(a * b)", "tt = int(input())\nfor x in range(tt):\n    tot = int(input())\n    sm = sum(list(map(int, input().split(' '))))\n    b = sm % tot\n    print((tot - b) * b)", "for s in [*open(0)][2::2]:\n    n = len((a := s.split()))\n    r = sum(map(int, a)) % n\n    print(r * (n - r))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = sum(l)\n    k = s % n\n    print(k * abs(k - n))", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    k = s % n * (n - s % n)\n    print(k)", "for i in range(int(input())):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    summ = sum(ls)\n    ex = summ % n\n    print((n - ex) * ex)", "t = int(input())\nans = []\nfor _ in range(t):\n    n = int(input())\n    s = sum((int(x) for x in input().split()))\n    r = s % n\n    ans.append(str((n - r) * r))\nprint('\\n'.join(ans))", "a = int(input())\nfor i in range(a):\n    b = int(input())\n    c = [int(i) for i in input().split()]\n    d = sum(c)\n    e = d % b\n    f = b - e\n    print(e * f)", "def cf_730B(numbers: list):\n    n = len(numbers)\n    total = sum(numbers)\n    rem = total % n\n    return rem * (n - rem)\nfor _ in range(int(input())):\n    n = int(input())\n    print(cf_730B(list(map(int, input().split()))))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    total = sum(arr)\n    print(total % n * (n - total % n))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    q = sum(a)\n    x = q % n\n    print(x * (n - x))", "for _ in range(0, int(input())):\n    n = int(input())\n    s = sum(map(int, input().split()))\n    print(s % n * (-s % n))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    h = sum(a)\n    if h % n == 0:\n        print(0)\n    else:\n        r = h % n\n        print(r * (n - r))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    b = [s // n] * n\n    ss = s % n\n    print(ss * (n - ss))", "for i in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    su = sum(li)\n    print((n - su % n) * (su % n))", "num = int(input())\nfor i in range(num):\n    n = int(input())\n    arr = input().split(' ')\n    arr = list(map(int, arr))\n    s = sum(arr)\n    avg = int(s / n)\n    remain = s - avg * n\n    print(remain * (n - remain))", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split(' ')))\n    S = sum(A)\n    print(S % N * (N - S % N))", "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        x = sum(a) % n\n        print(x * (n - x))\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    w = list(map(int, input().split()))\n    x = sum(w) % n\n    print(x * (n - x))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    total = sum(a)\n    e = total % n\n    one = n - e\n    two = e\n    print(one * two)", "from collections import Counter, deque\nfrom sys import stdout\nimport time\nfrom math import factorial, log, gcd\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    s = sum(a)\n    o = s % n\n    print(o * (n - o))\nfor t in range(int(input())):\n    main()", "for k in range(int(input())):\n    n = int(input())\n    W = list(map(int, input().split()))\n    Sum = sum(W)\n    print((n - Sum % n) * (Sum % n))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    x = s - s // n * n\n    print(x * (n - x))", "tests = int(input())\nfor test in range(tests):\n    len = int(input())\n    a = input().split()\n    sum = 0\n    for i in a:\n        sum += int(i)\n    r = sum % len\n    print(r * (len - r))", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    L = input().split()\n    s = 0\n    for j in range(n):\n        s = s + int(L[j])\n    print(s % n * (n - s % n))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a) % n\n    print(s * (n - s))", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = sum(l) % n\n    print(d * (n - d))", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    s = sum(lst)\n    k = s % n\n    res = k * (n - k)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    s = sum(list(map(int, input().split())))\n    x = s % n\n    y = n - x\n    print(x * y)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    n1 = sum(A) % n\n    print((n - n1) * n1)", "from math import *\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    k = sum(arr) % n\n    ans = k * (n - k)\n    print(ans)\nn = int(input())\nfor _ in range(n):\n    solve()", "import sys\n\ndef solve(n, cars):\n    s_cars = sum(cars)\n    return s_cars % n * (n - s_cars % n)\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        cars = list(map(int, input().split()))\n        print(solve(n, cars))\n    pass\nsys.exit(main())", "import math\n\ndef primeFactors(n):\n    l = []\n    c = 2\n    while n > 1:\n        if n % c == 0:\n            l.append(c)\n            n = n / c\n        else:\n            c = c + 1\n    return l\n\ndef primeFactors(n):\n    l = []\n    c = 2\n    while n > 1:\n        if n % c == 0:\n            l.append(c)\n            n = n / c\n        else:\n            c = c + 1\n    return l\n\ndef prime(n):\n    prime_flag = 0\n    if n > 1:\n        for i in range(2, int(math.sqrt(n)) + 1):\n            if n % i == 0:\n                prime_flag = 1\n                break\n    return prime_flag\nt = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = sum(l)\n    extra = s % n\n    x = n - extra\n    y = extra\n    print(x * y)\n    t = t - 1", "def debug(*a):\n    return\n    print('[DEBUG]', *a)\n\ndef solve_case():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    a0 = s // n\n    a1 = a0 + 1\n    n1 = s % n\n    n0 = n - n1\n    debug(a0, a1)\n    debug(n0, n1)\n    print(n0 * n1)\nn = int(input())\nfor i in range(n):\n    solve_case()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    m = s % n\n    print(m * (n - m))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    mas = list(map(int, input().split()))\n    s = sum(mas)\n    x = s % n\n    print((n - x) * x)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = sum(l) - n * (sum(l) // n)\n    print(a * (n - a))", "def tracks(l, n):\n    leftover = sum(l) % n\n    return leftover * (n - leftover)\nans = []\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans.append(tracks(l, n))\nfor i in ans:\n    print(i)", "t = int(input())\nfor _ in range(t):\n    input()\n    a = list(map(int, input().split()))\n    total = sum(a)\n    tt = total // len(a)\n    left = total % len(a)\n    print((len(a) - left) * left)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r = sum(a) % n\n    if r == 0:\n        print(0)\n        continue\n    print(r * (n - r))", "for i in range(int(input())):\n    n = int(input())\n    m = sum(map(int, input().split())) % n\n    print(m * (n - m))", "import sys\nfrom math import ceil, floor, modf, sqrt\nfrom collections import deque\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_array():\n    return list(get_ints())\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\nT = int(input())\nwhile T > 0:\n    n = int(input())\n    Arr = get_array()\n    s = sum(Arr)\n    each = s // n\n    p = s % n\n    left = n - p\n    ans = p * left\n    print(ans)\n    T -= 1", "def calc():\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    ss = sum(l)\n    ans = ss % n * (n - ss % n)\n    print(ans)\nt = int(input())\nfor _i in range(t):\n    calc()", "import math\nimport collections\nfrom sys import stdin, stdout, setrecursionlimit\nfrom bisect import bisect_left as bsl\nfrom bisect import bisect_right as bsr\nimport heapq as hq\nsetrecursionlimit(2 ** 20)\nt = 1\nt = int(stdin.readline())\nfor _ in range(t):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().rstrip().split()))\n    su = sum(a)\n    if su % n == 0:\n        print(0)\n    else:\n        tmp = su // n\n        r = su - tmp * n\n        print((n - r) * r)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    sume = 0\n    for j in a:\n        sume += j\n    avg = sume // n\n    total = avg * n\n    extra = sume - total\n    ans = extra * (n - extra)\n    print(ans)\n    t -= 1", "t = int(input())\nfor hh in range(0, t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    su = sum(a)\n    li = [0] * n\n    val = su // n\n    rem = su % n\n    if rem == 0:\n        print(0)\n    else:\n        print(rem * (n - rem))", "from math import gcd\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        x = sum(a) % n\n        print(max(x, n - x) * min(x, n - x))\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    x = s % n\n    print((n - x) * x)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    s = sum(arr)\n    dv = s // n\n    ans = []\n    rem = s % n\n    cnt = 0\n    cnt += rem * (n - rem)\n    print(cnt)", "def main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        total = sum(a)\n        r = total % n\n        k = n - r\n        res = n * (n - 1) // 2\n        if r > 1:\n            res -= r * (r - 1) // 2\n        if k > 1:\n            res -= k * (k - 1) // 2\n        print(res)\nwhile True:\n    try:\n        main()\n    except:\n        break", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    avg = math.floor(s / n)\n    inc = s - avg * n\n    print(inc * (n - inc))", "t = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = sum(l) % n\n    print(x * (n - x))\n    t -= 1", "a = int(input())\nfor i in range(a):\n    n = int(input())\n    b = [int(i) for i in input().split()]\n    sum1 = sum(b)\n    avg = sum1 // n\n    rem = sum1 - avg * n\n    print(rem * (n - rem))"]