["def solve(s):\n    a_count = 0\n    b_count = 0\n    c_count = 0\n    start = 1\n    MOD = 10 ** 9 + 7\n    for i in range(len(s)):\n        if s[i] == 'a':\n            a_count += start\n        elif s[i] == 'b':\n            b_count += a_count\n        elif s[i] == 'c':\n            c_count += b_count\n        else:\n            (a_count, b_count, c_count, start) = ((3 * a_count + start) % MOD, (3 * b_count + a_count) % MOD, (3 * c_count + b_count) % MOD, 3 * start % MOD)\n    return c_count % MOD\nn = input()\ntmp = input()\nprint(solve(tmp))", "def main():\n    n = int(input())\n    s = input()\n    (a, b, ans) = (0, 0, 0)\n    cnt = 1\n    for i in range(n):\n        if s[i] == '?':\n            ans = (ans * 3 + b) % 1000000007\n            b = (b * 3 + a) % 1000000007\n            a = (a * 3 + cnt) % 1000000007\n            cnt = cnt * 3 % 1000000007\n        elif s[i] == 'c':\n            ans = (ans + b) % 1000000007\n        elif s[i] == 'b':\n            b = (b + a) % 1000000007\n        elif s[i] == 'a':\n            a = (a + cnt) % 1000000007\n    print(ans)\ntn = 1\nfor _ in range(tn):\n    main()", "def solve():\n    n = int(input())\n    s = input()\n    none = 1\n    a = 0\n    ab = 0\n    abc = 0\n    MOD = 10 ** 9 + 7\n    for i in s:\n        if i == 'a':\n            a += none\n        elif i == 'b':\n            ab += a\n        elif i == 'c':\n            abc += ab\n        else:\n            abc *= 3\n            abc += ab\n            ab *= 3\n            ab += a\n            a *= 3\n            a += none\n            none *= 3\n        abc %= MOD\n        ab %= MOD\n        a %= MOD\n        none %= MOD\n    print(abc)\n    return\n\ndef main():\n    t = 1\n    for _ in range(t):\n        solve()\nmain()", "class CodeforcesTask1426FSolution:\n\n    def __init__(self):\n        self.result = '24'\n\n    def read_input(self):\n        self.n = input()\n        self.seq = input()\n\n    def process_task(self):\n        M = 10 ** 9 + 7\n        o = a = b = 0\n        v = 1\n        for c in self.seq:\n            if c == 'a':\n                a += v\n            elif c == 'b':\n                b += a\n            elif c == 'c':\n                o += b\n            else:\n                (a, b, o, v) = ((3 * a + v) % M, (3 * b + a) % M, (3 * o + b) % M, 3 * v % M)\n        self.result = o % M\n\n    def get_result(self):\n        return str(self.result)\nSolution = CodeforcesTask1426FSolution()\nSolution.read_input()\nSolution.process_task()\nprint(Solution.get_result())", "n = int(input())\ns = input()\nd1 = 0\nd2 = 0\nd3 = 0\ncounter = 1\nm = pow(10, 9) + 7\nfor i in range(n):\n    if s[i] == 'a':\n        d1 = (d1 + counter) % m\n    elif s[i] == 'b':\n        d2 = (d2 + d1) % m\n    elif s[i] == 'c':\n        d3 = (d3 + d2) % m\n    else:\n        d3 = (d3 * 3 + d2) % m\n        d2 = (d2 * 3 + d1) % m\n        d1 = (d1 * 3 + counter) % m\n        counter = counter * 3 % m\nprint(d3 % m)", "z = int(input())\ns = input()\nmo = 10 ** 9 + 7\n(a, b, c, v) = (0, 0, 0, 1)\nfor i in range(z):\n    if s[i] == 'a':\n        a += v\n    elif s[i] == 'b':\n        b += a\n    elif s[i] == 'c':\n        c += b\n    else:\n        c = (3 * c + b) % mo\n        b = (3 * b + a) % mo\n        a = (3 * a + v) % mo\n        v = 3 * v % mo\nprint(c % mo)", "from sys import stdin, stdout\nimport collections, heapq, bisect, math\ninput = stdin.readline\n\ndef rint():\n    return int(input())\n\ndef rstr():\n    return input().strip()\n\ndef rlstr():\n    return list(input().strip().split())\n\ndef rlint():\n    return list(map(int, input().split()))\n\ndef main():\n    n = rint()\n    s = rstr()\n    mod = 10 ** 9 + 7\n    at = 1\n    a = ab = abc = 0\n    for i in range(n):\n        if s[i] == 'a':\n            a += at\n        elif s[i] == 'b':\n            ab += a\n        elif s[i] == 'c':\n            abc += ab\n        elif s[i] == '?':\n            abc = 3 * abc + ab\n            ab = 3 * ab + a\n            a = 3 * a + at\n            at *= 3\n        abc %= mod\n        ab %= mod\n        a %= mod\n        at %= mod\n    print(abc)\nmain()", "pass\n\ndef main():\n    n = int(input())\n    arr = list(input())\n    (a, b, c, t, M) = (0, 0, 0, 1, 10 ** 9 + 7)\n    for i in range(n):\n        if arr[i] == 'a':\n            a += t\n        elif arr[i] == 'b':\n            b += a\n        elif arr[i] == 'c':\n            c += b\n        else:\n            (t, a, b, c) = (3 * t % M, (3 * a + t) % M, (3 * b + a) % M, (3 * c + b) % M)\n    print(c % M)\nmain()", "def solve(s, n):\n    a = 0\n    ab = 0\n    abc = 0\n    aTimes = 1\n    for i in range(s):\n        if n[i] == 'a':\n            a += aTimes\n            a = a % mod\n        elif n[i] == 'b':\n            ab += a\n            ab = ab % mod\n        elif n[i] == 'c':\n            abc += ab\n            abc = abc % mod\n        elif n[i] == '?':\n            abc = (3 * abc + ab) % mod\n            ab = (3 * ab + a) % mod\n            a = (3 * a + aTimes) % mod\n            aTimes = aTimes * 3 % mod\n    return abc\nmod = 10 ** 9 + 7\ns = int(input())\nn = input()\nprint(solve(s, n))", "n = int(input())\ns = input()\na = 0\nb = 0\no = 0\nv = 1\nM = 10 ** 9 + 7\nfor ch in s:\n    if ch == 'a':\n        a += v\n    elif ch == 'b':\n        b += a\n    elif ch == 'c':\n        o += b\n    else:\n        (a, b, o, v) = ((3 * a + v) % M, (3 * b + a) % M, (3 * o + b) % M, 3 * v % M)\nprint(o % M)", "input()\no = a = b = 0\nv = 1\nM = 10 ** 9 + 7\nfor c in input():\n    if c == 'a':\n        a += v\n    elif c == 'b':\n        b += a\n    elif c == 'c':\n        o += b\n    else:\n        (a, b, o, v) = ((3 * a + v) % M, (3 * b + a) % M, (3 * o + b) % M, 3 * v % M)\nprint(o % M)", "input()\no = a = b = 0\nv = 1\nM = 10 ** 9 + 7\nfor c in input():\n    if c == 'a':\n        a += v\n    elif c == 'b':\n        b += a\n    elif c == 'c':\n        o += b\n    else:\n        (a, b, o, v) = ((3 * a + v) % M, (3 * b + a) % M, (3 * o + b) % M, 3 * v % M)\nprint(o % M)", "n = int(input())\ns = input()\nret = 0\nMod = int(1000000000.0 + 7)\ndp = [0, 0, 0]\ncnt = 1\nfor i in range(n):\n    if s[i] == 'a':\n        dp[0] += cnt\n    elif s[i] == 'b':\n        dp[1] += dp[0]\n    elif s[i] == 'c':\n        dp[2] += dp[1]\n    else:\n        dp[2] = (3 * dp[2] + dp[1]) % Mod\n        dp[1] = (3 * dp[1] + dp[0]) % Mod\n        dp[0] = (3 * dp[0] + cnt) % Mod\n        cnt = cnt * 3 % Mod\nprint(dp[2] % Mod)", "input()\no = a = b = 0\nv = 1\nM = 10 ** 9 + 7\nfor c in input():\n    if c == 'a':\n        a += v\n    elif c == 'b':\n        b += a\n    elif c == 'c':\n        o += b\n    else:\n        (a, b, o, v) = ((3 * a + v) % M, (3 * b + a) % M, (3 * o + b) % M, 3 * v % M)\nprint(o % M)", "input()\na = 0\nb = 0\nc = 0\nv = 1\nm = 10 ** 9 + 7\nfor i in input():\n    if i == 'a':\n        a += v\n    elif i == 'b':\n        b += a\n    elif i == 'c':\n        c += b\n    else:\n        (a, b, c, v) = ((3 * a + v) % m, (3 * b + a) % m, (3 * c + b) % m, 3 * v % m)\nprint(c % m)", "n = int(input())\nseq = input()\na = 0\nab = 0\nabc = 0\nu = 1\nd = 10 ** 9 + 7\nfor i in seq:\n    if i == 'a':\n        a += u\n    elif i == 'b':\n        ab += a\n    elif i == 'c':\n        abc += ab\n    else:\n        abc = (3 * abc + ab) % d\n        ab = (3 * ab + a) % d\n        a = (3 * a + u) % d\n        u = 3 * u % d\nprint(abc % (10 ** 9 + 7))", "input()\no = a = b = 0\nv = 1\nM = 10 ** 9 + 7\nfor c in input():\n    if c == 'a':\n        a += v\n    elif c == 'b':\n        b += a\n    elif c == 'c':\n        o += b\n    else:\n        (a, b, o, v) = ((3 * a + v) % M, (3 * b + a) % M, (3 * o + b) % M, 3 * v % M)\nprint(o % M)", "input()\no = a = b = 0\nv = 1\nM = 10 ** 9 + 7\nfor c in input():\n    if c == 'a':\n        a += v\n    elif c == 'b':\n        b += a\n    elif c == 'c':\n        o += b\n    else:\n        (a, b, o, v) = ((3 * a + v) % M, (3 * b + a) % M, (3 * o + b) % M, 3 * v % M)\nprint(o % M)", "n = int(input())\nif n < 3:\n    print(0)\nelse:\n    a = 0\n    ab = 0\n    abc = 0\n    count = 1\n    modv = 10 ** 9 + 7\n    for i in input():\n        if i == 'a':\n            a += count\n        elif i == 'b':\n            ab += a\n        elif i == 'c':\n            abc += ab\n        else:\n            abc = (abc * 3 + ab) % modv\n            ab = (ab * 3 + a) % modv\n            a = (a * 3 + count) % modv\n            count = 3 * count % modv\n    print(abc % modv)", "input()\na = b = c = 0\np = 1\nm = 10 ** 9 + 7\nfor i in input():\n    if i == 'a':\n        a += p\n    elif i == 'b':\n        b += a\n    elif i == 'c':\n        c += b\n    else:\n        (a, b, c, p) = ((a * 3 + p) % m, (b * 3 + a) % m, (c * 3 + b) % m, p * 3 % m)\nprint(c % m)", "input()\no = a = b = 0\nv = 1\nM = 10 ** 9 + 7\nfor c in input():\n    if c == 'a':\n        a += v\n    elif c == 'b':\n        b += a\n    elif c == 'c':\n        o += b\n    else:\n        (a, b, o, v) = ((3 * a + v) % M, (3 * b + a) % M, (3 * o + b) % M, 3 * v % M)\nprint(o % M)", "n = int(input())\ns = input()\na = 0\nb = 0\nc = 0\nmod = 10 ** 9 + 7\nv = 1\nfor i in range(n):\n    if s[i] == 'a':\n        a += v\n    elif s[i] == 'b':\n        b += a\n    elif s[i] == 'c':\n        c += b\n    else:\n        (a, b, c, v) = ((3 * a + v) % mod, (3 * b + a) % mod, (3 * c + b) % mod, 3 * v % mod)\nprint(c % mod)", "n = int(input())\ns = input()\nmo = 10 ** 9 + 7\n(a, b, c, v) = (0, 0, 0, 1)\nfor i in range(n):\n    if s[i] == 'a':\n        a += v\n    elif s[i] == 'b':\n        b += a\n    elif s[i] == 'c':\n        c += b\n    else:\n        c = (3 * c + b) % mo\n        b = (3 * b + a) % mo\n        a = (3 * a + v) % mo\n        v = 3 * v % mo\nprint(c % mo)", "n = int(input())\ns = input()\nret = 0\nMod = int(1000000000.0 + 7)\ndp = [0, 0, 0]\ncnt = 1\nfor i in range(n):\n    if s[i] == 'a':\n        dp[0] += cnt\n    elif s[i] == 'b':\n        dp[1] += dp[0]\n    elif s[i] == 'c':\n        dp[2] += dp[1]\n    else:\n        dp[2] = (3 * dp[2] + dp[1]) % Mod\n        dp[1] = (3 * dp[1] + dp[0]) % Mod\n        dp[0] = (3 * dp[0] + cnt) % Mod\n        cnt = cnt * 3 % Mod\nprint(dp[2] % Mod)", "n = int(input())\ns = input()\nret = 0\nMod = int(1000000000.0 + 7)\ndp = [0, 0, 0]\ncnt = 1\nfor i in range(n):\n    if s[i] == 'a':\n        dp[0] += cnt\n    elif s[i] == 'b':\n        dp[1] += dp[0]\n    elif s[i] == 'c':\n        dp[2] += dp[1]\n    else:\n        dp[2] = (3 * dp[2] + dp[1]) % Mod\n        dp[1] = (3 * dp[1] + dp[0]) % Mod\n        dp[0] = (3 * dp[0] + cnt) % Mod\n        cnt = cnt * 3 % Mod\nprint(dp[2] % Mod)", "n = int(input())\ns = input()\na = 0\nb = 0\nc = 0\nmod = 10 ** 9 + 7\nv = 1\nfor i in range(n):\n    if s[i] == 'a':\n        a += v\n    elif s[i] == 'b':\n        b += a\n    elif s[i] == 'c':\n        c += b\n    else:\n        (a, b, c, v) = ((3 * a + v) % mod, (3 * b + a) % mod, (3 * c + b) % mod, 3 * v % mod)\nprint(c % mod)", "n = int(input())\nseq = input()\ndp = [0, 0]\nans = 0\nmod = int(1000000000.0 + 7)\npat = 1\nfor i in seq:\n    if i == 'a':\n        dp[0] = (dp[0] + pat) % mod\n    elif i == 'b':\n        dp[1] += dp[0]\n        dp[1] %= mod\n    elif i == 'c':\n        ans = (ans + dp[1]) % mod\n    else:\n        ans = (3 * ans + dp[1]) % mod\n        dp[1] = (3 * dp[1] + dp[0]) % mod\n        dp[0] = (3 * dp[0] + pat) % mod\n        pat = 3 * pat % mod\nprint(ans)", "n = int(input())\nseq = input()\ndp = [0, 0]\nans = 0\nmod = int(1000000000.0 + 7)\npat = 1\nfor i in seq:\n    if i == 'a':\n        dp[0] = (dp[0] + pat) % mod\n    elif i == 'b':\n        dp[1] += dp[0]\n        dp[1] %= mod\n    elif i == 'c':\n        ans = (ans + dp[1]) % mod\n    else:\n        ans = (3 * ans + dp[1]) % mod\n        dp[1] = (3 * dp[1] + dp[0]) % mod\n        dp[0] = (3 * dp[0] + pat) % mod\n        pat = 3 * pat % mod\nprint(ans)", "n = int(input())\ns = input()\na = 0\nb = 0\nc = 0\nv = 1\nmod = 10 ** 9 + 7\nfor i in range(n):\n    if s[i] == 'a':\n        a += v\n    elif s[i] == 'b':\n        b += a\n    elif s[i] == 'c':\n        c += b\n    else:\n        c = (3 * c + b) % mod\n        b = (3 * b + a) % mod\n        a = (3 * a + v) % mod\n        v = 3 * v % mod\nprint(c % mod)", "n = int(input())\ns = input()\nret = 0\nMod = int(1000000000.0 + 7)\ndp = [0, 0, 0]\ncnt = 1\nfor i in range(n):\n    if s[i] == 'a':\n        dp[0] += cnt\n    elif s[i] == 'b':\n        dp[1] += dp[0]\n    elif s[i] == 'c':\n        dp[2] += dp[1]\n    else:\n        dp[2] = (3 * dp[2] + dp[1]) % Mod\n        dp[1] = (3 * dp[1] + dp[0]) % Mod\n        dp[0] = (3 * dp[0] + cnt) % Mod\n        cnt = cnt * 3 % Mod\nprint(dp[2] % Mod)", "mod = int(1000000000.0 + 7)\n(n, s) = (int(input()), input())\nseen = {'a': 0, 'ab': 0, 'abc': 0, '': 1}\nfor c in s:\n    if c == 'a':\n        seen['a'] = (seen['a'] + seen['']) % mod\n    elif c == 'b':\n        seen['ab'] = (seen['ab'] + seen['a']) % mod\n    elif c == 'c':\n        seen['abc'] = (seen['abc'] + seen['ab']) % mod\n    else:\n        seen['abc'] = (seen['ab'] + 3 * seen['abc']) % mod\n        seen['ab'] = (seen['a'] + 3 * seen['ab']) % mod\n        seen['a'] = (seen[''] + 3 * seen['a']) % mod\n        seen[''] = seen[''] * 3 % mod\nprint(seen['abc'])", "n = int(input())\ns = '-'\ns += input()\na = 0\nb = 0\nc = 0\nm = 1\nmod = 10 ** 9 + 7\nl = len(s)\nfor i in range(1, l):\n    if s[i] == 'a':\n        a = (a + m) % mod\n    elif s[i] == 'b':\n        b = (b + a) % mod\n    elif s[i] == 'c':\n        c = (c + b) % mod\n    elif s[i] == '?':\n        c = (c * 3 + b) % mod\n        b = (b * 3 + a) % mod\n        a = (a * 3 + m) % mod\n        m = m * 3 % mod\nprint(c)", "n = int(input())\ns = input()\nret = 0\nMod = int(1000000000.0 + 7)\ndp = [0, 0, 0]\ncnt = 1\nfor i in range(n):\n    if s[i] == 'a':\n        dp[0] += cnt\n    elif s[i] == 'b':\n        dp[1] += dp[0]\n    elif s[i] == 'c':\n        dp[2] += dp[1]\n    else:\n        dp[2] = (3 * dp[2] + dp[1]) % Mod\n        dp[1] = (3 * dp[1] + dp[0]) % Mod\n        dp[0] = (3 * dp[0] + cnt) % Mod\n        cnt = cnt * 3 % Mod\nprint(dp[2] % Mod)", "n = int(input())\ns = input()\ndp = [0, 0, 0]\nmod = int(1000000000.0 + 7)\ncnt = 1\nfor i in range(n):\n    if s[i] == 'a':\n        dp[0] += cnt\n    elif s[i] == 'b':\n        dp[1] += dp[0]\n    elif s[i] == 'c':\n        dp[2] += dp[1]\n    else:\n        dp[2] = (3 * dp[2] + dp[1]) % mod\n        dp[1] = (3 * dp[1] + dp[0]) % mod\n        dp[0] = (3 * dp[0] + cnt) % mod\n        cnt = cnt * 3 % mod\nprint(dp[2] % mod)", "n = input()\ns = input()\nzcolv = 0\nfor i in s:\n    if i == '?':\n        zcolv += 1\na = 0\nab = 0\nmod = 10 ** 9 + 7\nabc = 0\nz = 0\nzb = 0\naz = 0\nzz = 0\nabz = 0\nazc = 0\nzbc = 0\nazz = 0\nzbz = 0\nzzc = 0\nzzz = 0\nfor i in s:\n    if i == 'a':\n        a += 1\n    if i == 'b':\n        ab += a\n        zb += z\n        zb %= mod\n        ab %= mod\n    if i == 'c':\n        abc += ab\n        zbc += zb\n        zzc += zz\n        azc += az\n        zbc %= mod\n        zzc %= mod\n        azc %= mod\n        abc %= mod\n    if i == '?':\n        abz += ab\n        azz += az\n        zbz += zb\n        zzz += zz\n        zz += z\n        az += a\n        z += 1\n        abz %= mod\n        azz %= mod\n        zbz %= mod\n        zzz %= mod\n        zz %= mod\n        az %= mod\n        z %= mod\nprint((abc * pow(3, zcolv, mod) + (abz + azc + zbc) * pow(3, max(zcolv - 1, 0), mod) + (azz + zbz + zzc) * pow(3, max(zcolv - 2, 0), mod) + zzz * pow(3, max(zcolv - 3, 0))) % mod)", "Mod = 10 ** 9 + 7\nn = int(input())\ns = input()\n(cnt, a, ab, abc) = (1, 0, 0, 0)\nfor i in range(len(s)):\n    if s[i] == 'a':\n        a += cnt\n        a %= Mod\n    elif s[i] == 'b':\n        ab += a\n        ab %= Mod\n    elif s[i] == 'c':\n        abc += ab\n        abc %= Mod\n    else:\n        abc *= 3\n        abc += ab\n        abc %= Mod\n        ab *= 3\n        ab += a\n        ab %= Mod\n        a *= 3\n        a += cnt\n        a %= Mod\n        cnt *= 3\n        cnt %= Mod\nprint(abc)", "n = int(input())\nS = list(input())\nmod = 10 ** 9 + 7\ndpa = [0] * (2 * 10 ** 5 + 10)\ndpc = [0] * (2 * 10 ** 5 + 10)\nhatena_count = 0\npow3 = [1] * (2 * 10 ** 5 + 10)\nfor i in range(1, 2 * 10 ** 5 + 10):\n    pow3[i] = pow3[i - 1] * 3 % mod\nfor i in range(n):\n    if S[i] == 'a':\n        dpa[i + 1] = (dpa[i] + pow3[hatena_count]) % mod\n    elif S[i] == '?':\n        dpa[i + 1] = (3 * dpa[i] + pow3[hatena_count]) % mod\n        hatena_count += 1\n    else:\n        dpa[i + 1] = dpa[i]\nS.reverse()\nhatena_count = 0\nfor i in range(n):\n    if S[i] == 'c':\n        dpc[i + 1] = (dpc[i] + pow3[hatena_count]) % mod\n    elif S[i] == '?':\n        dpc[i + 1] = (3 * dpc[i] + pow3[hatena_count]) % mod\n        hatena_count += 1\n    else:\n        dpc[i + 1] = dpc[i]\nans = 0\nfor i in range(1, n - 1):\n    if S[i] == 'b' or S[i] == '?':\n        ans += dpa[n - 1 - i] * dpc[i]\n        ans %= mod\nprint(ans)", "INF = 1000000007\nn = int(input(''))\ns = input('')\ndp = [[0] * 3] * (n + 1)\na = 1\nsol = []\nfor i in range(1, n + 1):\n    d = dp[i - 1][0]\n    b = dp[i - 1][1]\n    c = dp[i - 1][2]\n    if s[i - 1] == 'a':\n        dp[i][0] += a\n    elif s[i - 1] == 'b':\n        dp[i][1] += dp[i - 1][0]\n    elif s[i - 1] == 'c':\n        dp[i][2] += dp[i - 1][1]\n    else:\n        dp[i][0] = 3 * d + a\n        dp[i][1] = 3 * b + d\n        dp[i][2] = 3 * c + b\n        a *= 3\n    dp[i][0] = dp[i][0] % INF\n    dp[i][1] = dp[i][1] % INF\n    dp[i][2] = dp[i][2] % INF\n    a = a % INF\nprint(dp[n][2])", "n = int(input())\ns = input()\nans = 0\nmod = int(1000000000.0 + 7)\ncnt_a = 0\ncnt_c = 0\nver_a = 1\nver_c = 1\nfor c in reversed(s):\n    if c == 'c':\n        cnt_c += ver_c\n    if c == '?':\n        cnt_c = (cnt_c * 3 + ver_c) % mod\n        ver_c = ver_c * 3 % mod\nfor c in s:\n    if c == 'c':\n        cnt_c = (cnt_c - ver_c + mod) % mod\n    if c == 'b':\n        ans = (ans + cnt_a * cnt_c) % mod\n    if c == 'a':\n        cnt_a = (cnt_a + ver_a) % mod\n    if c == '?':\n        if ver_c % 3 == 1:\n            ver_c += mod\n        elif ver_c % 3 == 2:\n            ver_c += mod * 2\n        ver_c = ver_c // 3 % mod\n        cnt_c = (cnt_c - ver_c + mod) % mod\n        if cnt_c % 3 == 1:\n            cnt_c += mod\n        elif cnt_c % 3 == 2:\n            cnt_c += mod * 2\n        cnt_c = cnt_c // 3 % mod\n        ans = (ans + cnt_a * cnt_c) % mod\n        cnt_a = (cnt_a * 3 + ver_a) % mod\n        ver_a = ver_a * 3 % mod\nprint(ans)", "from collections import defaultdict as dd\nmod = 10 ** 9 + 7\npw = {-1: 0, 0: 1}\nfor i in range(1, 200001):\n    pw[i] = pw[i - 1] * 3 % mod\n\ndef solve(st, n):\n    (a, c, q) = (dd(int), dd(int), dd(int))\n    for (i, it) in enumerate(st):\n        (a[i], c[i], q[i]) = (a[i - 1], c[i - 1], q[i - 1])\n        if it == 'a':\n            a[i] += 1\n        elif it == 'c':\n            c[i] += 1\n        elif it == '?':\n            q[i] += 1\n    ans = 0\n    for i in range(n):\n        if st[i] in '?b':\n            (ca, q1) = (a[i - 1], q[i - 1])\n            (cc, q2) = (c[n - 1] - c[i], q[n - 1] - q[i])\n            ta = ca * pw[q1] % mod\n            ta = (ta + q1 * pw[q1 - 1]) % mod\n            tc = cc * pw[q2] % mod\n            tc = (tc + q2 * pw[q2 - 1]) % mod\n            ans += ta * tc\n            ans %= mod\n    return ans\nn = int(input())\nst = input()\nans = solve(st, n)\nprint(ans)", "from collections import defaultdict as dd\nmod = 10 ** 9 + 7\npw = {-1: 0, 0: 1}\nfor i in range(1, 200001):\n    pw[i] = pw[i - 1] * 3 % mod\n\ndef solve(st, n):\n    (a, c, q) = (dd(int), dd(int), dd(int))\n    for (i, it) in enumerate(st):\n        (a[i], c[i], q[i]) = (a[i - 1], c[i - 1], q[i - 1])\n        if it == 'a':\n            a[i] += 1\n        elif it == 'c':\n            c[i] += 1\n        elif it == '?':\n            q[i] += 1\n    ans = 0\n    for i in range(n):\n        if st[i] in '?b':\n            (ca, q1) = (a[i - 1], q[i - 1])\n            (cc, q2) = (c[n - 1] - c[i], q[n - 1] - q[i])\n            ta = (ca * pw[q1] % mod + q1 * pw[q1 - 1] % mod) % mod\n            tc = (cc * pw[q2] % mod + q2 * pw[q2 - 1] % mod) % mod\n            ans += ta * tc\n            ans %= mod\n    return ans\nn = int(input())\nst = input()\nans = solve(st, n)\nprint(ans)"]