["p = lambda : list(map(int, input().split()))\nn = p()[0]\nA = [0] + p()\nB = [0] + p()\nd = 0\nv = [0] * (n + 1)\np = [-9 ** 42] + [0] * n\ns = []\nfor i in range(1, n + 1):\n    while s and A[s[-1]] > A[i]:\n        d = max(d, v[len(s)])\n        s.pop()\n    s += [i]\n    v[len(s)] = d\n    d = p[len(s)] = max(p[len(s) - 1], d + B[i])\nprint(d)", "p = lambda : list(map(int, input().split()))\nn = p()[0]\nA = [0] + p()\nB = [0] + p()\nd = 0\nv = [0] * (n + 1)\np = [-9 ** 42] + [0] * n\ns = []\nfor i in range(1, n + 1):\n    while s and A[s[-1]] > A[i]:\n        d = max(d, v[len(s)])\n        s.pop()\n    s += [i]\n    v[len(s)] = d\n    d = p[len(s)] = max(p[len(s) - 1], d + B[i])\nprint(d)", "p = lambda : list(map(int, input().split()))\nn = p()[0]\nA = [0] + p()\nB = [0] + p()\nd = 0\nv = [0] * (n + 1)\np = [-9 ** 42] + [0] * n\ns = []\nfor i in range(1, n + 1):\n    while s and A[s[-1]] > A[i]:\n        d = max(d, v[len(s)])\n        s.pop()\n    s += [i]\n    v[len(s)] = d\n    d = p[len(s)] = max(p[len(s) - 1], d + B[i])\nprint(d)", "n = int(input())\nA = [0] + list(map(int, input().split()))\nB = [0] + list(map(int, input().split()))\ndp = [0] * (n + 1)\nval = [0] * (n + 1)\npre = [0] * (n + 1)\npre[0] = float('-inf')\nstack = []\nfor i in range(1, n + 1):\n    tmp = dp[i - 1]\n    while stack and A[stack[-1]] > A[i]:\n        tmp = max(tmp, val[len(stack)])\n        stack.pop()\n    stack.append(i)\n    val[len(stack)] = tmp\n    dp[i] = pre[len(stack)] = max(pre[len(stack) - 1], tmp + B[i])\nprint(dp[-1])", "import sys\ninput = sys.stdin.readline\nn = int(input())\nA = [0] + list(map(int, input().split()))\nB = [0] + list(map(int, input().split()))\ndp = [0] * (n + 1)\nval = [0] * (n + 1)\npre = [0] * (n + 1)\npre[0] = float('-inf')\nstack = []\nfor i in range(1, n + 1):\n    tmp = dp[i - 1]\n    while stack and A[stack[-1]] > A[i]:\n        tmp = max(tmp, val[len(stack)])\n        stack.pop()\n    stack.append(i)\n    val[len(stack)] = tmp\n    dp[i] = pre[len(stack)] = max(pre[len(stack) - 1], tmp + B[i])\nprint(dp[-1])", "n = int(input())\nA = [0] + list(map(int, input().split()))\nB = [0] + list(map(int, input().split()))\n(dp, val, pre) = ([0] * (n + 1), [0] * (n + 1), [0] * (n + 1))\npre[0] = float('-inf')\nstack = []\nfor i in range(1, n + 1):\n    temp = dp[i - 1]\n    while stack and A[stack[-1]] > A[i]:\n        temp = max(temp, val[len(stack)])\n        stack.pop()\n    stack.append(i)\n    val[len(stack)] = temp\n    dp[i] = pre[len(stack)] = max(pre[len(stack) - 1], temp + B[i])\nprint(dp[-1])"]