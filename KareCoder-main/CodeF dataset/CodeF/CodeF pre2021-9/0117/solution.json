["def solve():\n    k = int(input())\n    s = input()\n    s = s.split('A')\n    s = s[1:]\n    ans = 0\n    for element in s:\n        ans = max(ans, len(element))\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    k = int(input())\n    s = str(input())\n    s = s.lstrip('P')\n    sp = s.split('A')\n    print(max(map(len, s.split('A'))))", "t1 = int(input())\nfor _ in range(t1):\n    n = int(input())\n    p = 0\n    o = 0\n    s = str(input())\n    b = []\n    for i in s:\n        if i == 'A':\n            o = 1\n        if o == 1:\n            if i == 'A':\n                b.append(p)\n                p = 0\n            else:\n                p += 1\n    b.append(p)\n    print(max(b))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if 'A' not in s:\n        print(0)\n    else:\n        ind = s.index('A')\n        temp = 0\n        con = 0\n        for j in range(ind + 1, n):\n            if s[j] == 'A':\n                con = 0\n            else:\n                con += 1\n            temp = max(temp, con)\n        print(temp)", "for _ in range(int(input())):\n    n = int(input())\n    ls = [*input()]\n    c = 0\n    flag = 0\n    for i in range(len(ls) - 1, -1, -1):\n        if ls[i] == 'P':\n            c = c + 1\n        else:\n            flag = max(flag, c)\n            c = 0\n    print(flag)", "for _ in range(int(input())):\n    input()\n    s = input().lstrip('P')\n    print(max(map(len, s.split('A'))))", "n = int(input())\nfor i in range(n):\n    size = int(input())\n    s = input()\n    cnt = 0\n    temp = s.replace('AP', 'AA')\n    while temp != s:\n        cnt += 1\n        s = temp\n        temp = s.replace('AP', 'AA')\n    print(cnt)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = [0] * n\n    for i in range(1, n):\n        if s[i - 1:i + 1] == 'AP':\n            a[i] = 1\n        elif a[i - 1] and s[i] != 'A':\n            a[i] = a[i - 1] + 1\n    print(max(a))", "t = int(input())\nfor i in range(t):\n    k = int(input())\n    a = input()\n    angry = False\n    patient = 0\n    ans = 0\n    for j in range(len(a)):\n        if a[j] == 'A':\n            angry = True\n            ans = max(ans, patient)\n            patient = 0\n        elif a[j] == 'P' and angry:\n            patient += 1\n    ans = max(ans, patient)\n    print(ans)", "cases = int(input())\nwhile cases:\n    cases -= 1\n    num = input()\n    s = input()\n    mx = 0\n    sm = 0\n    start = False\n    for i in s:\n        if i == 'A':\n            start = True\n            sm = 0\n        elif start:\n            sm += 1\n            mx = max(sm, mx)\n    print(mx)", "q = int(input())\nfor _ in range(q):\n    n = int(input())\n    s = input()\n    if s[0] == 'P':\n        s = s.lstrip('P')\n    s = s.split('A')\n    s = [x for x in s if x != '']\n    if len(s) != 0:\n        print(len(max(s)))\n    else:\n        print(0)", "m = int(input())\nl = []\nfor i in range(m):\n    t = int(input())\n    a = input()\n    if 'A' in a:\n        a = a[a.index('A'):]\n        l.append(len(max(a.split('A'), key=len)))\n    else:\n        l.append(0)\nfor i in l:\n    print(i)", "t = int(input())\nfor inh in range(0, t):\n    n = int(input())\n    s = input()\n    j = False\n    ans = 0\n    m = 0\n    for i in range(0, n):\n        if j:\n            if s[i] == 'A':\n                m = 0\n            else:\n                m += 1\n        elif s[i] == 'A':\n            j = True\n        if m > ans:\n            ans = m\n    print(ans)", "k = []\nfor _ in range(int(input())):\n    n = int(input())\n    c = 0\n    s = input('')\n    while 'AP' in s:\n        c += 1\n        s = s.replace('AP', 'AA')\n    k.append(c)\nfor i in k:\n    print(i)", "def countMin(a):\n    lst = []\n    for i in range(len(a)):\n        if a[i] == 'A':\n            lst.append(i)\n    if len(lst) == 0:\n        return 0\n    else:\n        lst.append(len(a))\n        res = 0\n        for i in range(1, len(lst)):\n            if lst[i] - lst[i - 1] - 1 > res:\n                res = lst[i] - lst[i - 1] - 1\n        return res\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    print(countMin(a))", "for i in range(int(input())):\n    n = int(input())\n    a = list(input())\n    mx = 0\n    cnt = 0\n    hasAngry = False\n    for i in range(len(a)):\n        if a[i] == 'A':\n            hasAngry = True\n        if a[i] == 'P' and hasAngry:\n            cnt += 1\n        else:\n            mx = max(mx, cnt)\n            cnt = 0\n    mx = max(mx, cnt)\n    print(mx)", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    s = input()\n    i = 0\n    ma = 0\n    while i < n and s[i] == 'P':\n        i += 1\n    while i < n:\n        while i < n and s[i] == 'A':\n            i += 1\n        if i < n:\n            j = i\n            while j < n and s[j] == 'P':\n                j += 1\n            ma = max(ma, j - i)\n            i = j\n    print(ma)", "from math import *\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom collections import Counter as ctr\nfrom collections import deque as dq\nfrom array import array\nfrom re import search\nli = lambda : list(map(int, input().split()))\narr = lambda a: array('i', a)\nbi = lambda n: bin(n).replace('0b', '')\nyn = lambda f: print('NYOE S'[f::2])\nsbstr = lambda a, s: search('.*'.join(a), s)\n\ndef solve():\n    for _ in range(int(input())):\n        n = int(input())\n        s = input()\n        if 'P' in s and 'A' in s:\n            s = s.split('A')\n            s.pop(0)\n            print(max((len(x) for x in s)))\n        else:\n            print('0')\nsolve()", "def solve(n, students):\n    angry_idx = -1\n    post_angry_patient_count = 0\n    max_post_angry_patient_count = 0\n    for i in range(0, n):\n        if students[i] == 'A':\n            angry_idx = i\n            post_angry_patient_count = 0\n        elif angry_idx != -1:\n            post_angry_patient_count += 1\n        max_post_angry_patient_count = max(post_angry_patient_count, max_post_angry_patient_count)\n    return max_post_angry_patient_count\nt = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    students = input()\n    print(solve(n, students))", "n = int(input())\na = []\nfor i in range(n):\n    k = int(input())\n    s = input() + 'yo'\n    m = 0\n    x = 0\n    if 'A' in s:\n        z = s.index('A') + 1\n        for i in range(z, len(s)):\n            if s[i] == 'P':\n                x += 1\n            else:\n                m = max(m, x)\n                x = 0\n    a += [m]\nfor i in range(len(a)):\n    print(a[i])", "n = int(input())\na = []\nfor i in range(n):\n    k = int(input())\n    s = input() + 'yo'\n    m = 0\n    x = 0\n    if 'A' in s:\n        z = s.index('A') + 1\n        for i in range(z, len(s)):\n            if s[i] == 'P':\n                x += 1\n            else:\n                m = max(m, x)\n                x = 0\n    a += [m]\nfor i in range(len(a)):\n    print(a[i])", "def split(a):\n    return [char for char in a]\ntestcases = int(input())\nwhile testcases != 0:\n    n = int(input())\n    students = input()\n    count = 0\n    ans = 0\n    students_split = split(students)\n    for i in range(n - 1, -1, -1):\n        if students_split[i] == 'P':\n            count += 1\n        else:\n            ans = max(ans, count)\n            count = 0\n    print(ans)\n    testcases -= 1", "def result(a):\n    angry_idx = -1\n    post_angry_patient_count = 0\n    max_post_angry_patient_count = 0\n    for i in range(len(a)):\n        if a[i] == 'A':\n            angry_idx = i\n            post_angry_patient_count = 0\n        elif angry_idx != -1:\n            post_angry_patient_count += 1\n        max_post_angry_patient_count = max(post_angry_patient_count, max_post_angry_patient_count)\n    return max_post_angry_patient_count\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = str(input())\n    print(result(a))", "t = int(input())\nfor _ in range(t):\n    k = int(input())\n    if k == 0:\n        continue\n    s = input()\n    s = s.lstrip('P')\n    a = []\n    num = 0\n    for i in range(len(s)):\n        if s[i] == 'A':\n            a.append(num)\n            num = 0\n        else:\n            num += 1\n    if num != 0:\n        a.append(num)\n    if a == []:\n        print(0)\n        continue\n    print(max(a))", "t = int(input(''))\nfor i in range(t):\n    n = int(input(''))\n    d = input('')\n    dem = 0\n    a = []\n    i = 0\n    while d[i] == 'P':\n        i += 1\n        if i == n:\n            break\n    for j in range(i, len(d)):\n        if d[j] == 'A':\n            if dem > 0:\n                a.append(dem)\n            dem = 0\n        else:\n            dem += 1\n    if dem > 0:\n        a.append(dem)\n    if len(a) == 0:\n        print(0)\n    else:\n        print(max(a))", "def solve():\n    k = int(input())\n    s = input()\n    s = s.split('A')\n    s = s[1:]\n    ans = 0\n    for element in s:\n        ans = max(ans, len(element))\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nfor s in range(t):\n    k = int(input())\n    line = input()\n    start = -1\n    i = 0\n    maks = 0\n    curr_len = 0\n    f_A = False\n    for l in line:\n        if l == 'A':\n            f_A = True\n        if f_A:\n            if l == 'P' and start == -1:\n                start = i\n            if l == 'A':\n                start = -1\n        if start != -1:\n            if i - start + 1 > maks:\n                maks = i - start + 1\n        i += 1\n    print(maks)", "t = int(input())\nfor _ in range(t):\n    k = int(input())\n    line = input()\n    first_A = 0\n    for l in line:\n        if l == 'A':\n            break\n        first_A += 1\n    start = -1\n    maks = 0\n    for i in range(first_A, k):\n        if line[i] == 'P' and start == -1:\n            start = i\n        if line[i] == 'A':\n            start = -1\n        if start != -1:\n            if i - start + 1 > maks:\n                maks = i - start + 1\n    print(maks)", "n = int(input())\nfor i in range(0, n):\n    m = int(input())\n    s = input().split('A')[1:]\n    print(max(map(len, s), default=0))", "for _ in range(int(input())):\n    n = int(input())\n    s = str(input())\n    t = 0\n    while True:\n        k = s.replace('AP', 'AA')\n        if s != k:\n            s = k\n            t += 1\n        else:\n            break\n    print(t)", "for _ in range(int(input())):\n    input()\n    s = input()\n    print(max(map(len, s.split('A')[1:]), default=0))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    (count, a, b) = (0, 0, 0)\n    for i in range(n):\n        if s[i] == 'P':\n            if a == 1:\n                count += 1\n                if count > b:\n                    b = count\n        else:\n            count = 0\n            a = 1\n    print(b)", "for _ in range(int(input())):\n    l = int(input())\n    s = input()\n    count = 0\n    count_list = [0]\n    for i in range(l):\n        if s[i] == 'A':\n            if count != 0:\n                count_list.append(count)\n            count = 1\n            continue\n        elif s[i] == 'P' and count != 0:\n            count += 1\n    if count != 1:\n        count_list.append(count)\n    print(max(max(count_list) - 1, 0))", "for _ in range(int(input())):\n    l = int(input())\n    sl = list(input().split('A'))\n    count_list = []\n    for i in sl:\n        count_list.append(len(i))\n    if count_list[0] != 0:\n        count_list[0] = 0\n    print(max(count_list))", "exec(int(input()) * \"input();print(max(0,0,*map(len,input().split('A')[1:])));\")", "def solve(n, stds):\n    an_index = -1\n    p_cnt = 0\n    max_p_cnt = 0\n    for i in range(n):\n        if stds[i] == 'A':\n            an_index = i\n            p_cnt = 0\n        elif an_index != -1:\n            p_cnt += 1\n        max_p_cnt = max(p_cnt, max_p_cnt)\n    return max_p_cnt\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    stds = input()\n    print(solve(n, stds))", "I = input\nexec(int(I()) * \"I();print(max(0,0,*map(len,I().split('A')[1:])));\")", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = input()\n    (k, cnt, mx) = (0, 0, 0)\n    if n == 1 and lst[0] == 'A' or (n == 1 and lst[0] == 'P') or lst.count('P') == len(lst):\n        print(0)\n    else:\n        while lst[k] != 'A' and k < len(lst) - 1:\n            cnt += 1\n            k += 1\n        for i in range(cnt, len(lst)):\n            if lst[i] == 'A':\n                cnt = 0\n            else:\n                cnt += 1\n                mx = max(mx, cnt)\n        print(mx)", "for _ in range(int(input())):\n    b = int(input())\n    l = input()\n    c = 0\n    m = 0\n    flag = False\n    for i in l:\n        if i == 'A':\n            if not flag:\n                flag = True\n            else:\n                if c > m:\n                    m = c\n                c = 0\n        elif flag:\n            c += 1\n    if c > m:\n        m = c\n    print(m)", "n = int(input())\nfor i in range(n):\n    temp = int(input())\n    a = input()\n    ans = 0\n    c = -9999999999999\n    for i in a:\n        if i == 'A':\n            ans = max(ans, c)\n            c = 0\n        else:\n            c += 1\n    print(max(ans, c))", "for i in range(int(input())):\n    k = int(input())\n    s = input().lstrip('P').split('A')\n    print(len(max(s)))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    no_of_students = int(input())\n    students = input()\n    for (index, value) in enumerate(students):\n        if value == 'A':\n            break\n    count = 0\n    max = 0\n    for i in range(index + 1, no_of_students):\n        if students[i] == 'A':\n            if count > max:\n                max = count\n                count = 0\n            count = 0\n        else:\n            count += 1\n    if count > max:\n        max = count\n    print(max)", "for _ in range(int(input())):\n    input()\n    s = input().lstrip('P').split('A')\n    print(len(max(s)))", "I = input\nexec(int(I()) * \"I();print(max(0,0,*map(len,I().split('A')[1:])));\")", "t = int(input())\nfor _ in range(t):\n    (k, s) = (int(input()), input())\n    (res, last) = (0, None)\n    for i in range(k):\n        if s[i] == 'A':\n            last = i\n        elif last is not None:\n            res = max(res, i - last)\n    print(res)", "t = int(input())\nfor ele in range(0, t):\n    n = int(input())\n    a = input()\n    p = a.lstrip('P')\n    r = p.split('A')\n    max_len = 0\n    for ele in r:\n        if len(ele) > max_len:\n            max_len = len(ele)\n    print(max_len)", "for ele in range(int(input())):\n    t = int(input())\n    n = input().lstrip('P').split('A')\n    print(len(max(n)))", "for _ in range(int(input())):\n    n = int(input())\n    arr = input()\n    flag = 0\n    f = 0\n    c = 0\n    for i in range(n):\n        if arr[i] == 'A':\n            flag = 1\n            c = 0\n        if arr[i] == 'P' and flag == 1:\n            c += 1\n        if c > f:\n            f = c\n    print(f)", "for _ in range(int(input())):\n    n = int(input())\n    (m, t) = (0, 0)\n    a = input()\n    if n == 1 or len(set(a)) == 1:\n        print(0)\n        continue\n    j = a.index('A')\n    for i in range(j + 1, n):\n        if a[i] == 'P':\n            t += 1\n        else:\n            m = max(m, t)\n            t = 0\n    print(max(m, t))", "t = int(input())\nfor _ in range(t):\n    k = int(input())\n    s = input()\n    ans = 0\n    while 'AP' in s:\n        s = s.replace('AP', 'AA')\n        ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s1 = str(input()).upper()\n    tup = tuple(s1)\n    ls = list(tup)\n    (cnt, temp) = (0, 0)\n    for i in range(n):\n        if ls[i] == 'A':\n            for j in range(i + 1, n):\n                if ls[j] == 'P':\n                    cnt += 1\n                elif ls[j] == 'A':\n                    break\n            if cnt > temp:\n                temp = cnt\n            cnt = 0\n    print(temp)", "for i in range(int(input())):\n    input()\n    s = input().lstrip('P')\n    print(max(map(len, s.split('A'))))", "testCase = int(input())\nlistTemp = []\nwhile testCase:\n    n = int(input())\n    inputStr = input()\n    m = 0\n    while inputStr.count('AP') > 0:\n        inputStr = inputStr.replace('AP', 'AA')\n        m += 1\n    listTemp.append(m)\n    testCase -= 1\nfor x in listTemp:\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    l = []\n    for i in range(n - 1):\n        if s[i] == 'A':\n            c = 1\n            while c + i < n:\n                if s[c + i] == 'P':\n                    c += 1\n                else:\n                    break\n            l.append(c)\n    if l:\n        print(max(l) - 1)\n    else:\n        print(0)", "for _ in [*open(0)][2::2]:\n    (k, q) = (0, 0)\n    for i in _[::-1]:\n        if i == 'P':\n            q += 1\n        else:\n            k = max(k, q)\n            q = 0\n    print(k)", "for _ in range(int(input())):\n    n = int(input())\n    a = input().split('A')\n    c = 0\n    for i in range(1, len(a)):\n        c = max(c, len(a[i]))\n    print(c)", "t = int(input())\ntemplist = []\nwhile t:\n    k = int(input())\n    str = input()\n    c = 0\n    while str.count('AP') > 0:\n        str = str.replace('AP', 'AA')\n        c += 1\n    templist.append(c)\n    t -= 1\nfor x in templist:\n    print(x)", "t = int(input())\nfor i in range(t):\n    k = int(input())\n    s = input()\n    ans = 0\n    for j in range(k):\n        if s[j] == 'A':\n            cnt = 0\n            for l in range(j + 1, k):\n                if s[l] == 'P':\n                    cnt += 1\n                else:\n                    ans = max(ans, cnt)\n                    break\n            else:\n                ans = max(ans, cnt)\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    s = input()\n    c = 0\n    ans = 0\n    m = False\n    for i in range(n):\n        if s[i] == 'P' and m:\n            c += 1\n        elif s[i] == 'A' and (not m):\n            m = True\n        else:\n            c = 0\n        ans = max(c, ans)\n    print(ans)", "t = int(input())\nwhile t:\n    count = 0\n    n = int(input())\n    s = input()\n    k = -1\n    ans = 0\n    for i in range(n):\n        if s[i] == 'P' and k > -1:\n            ans = max(ans, i - k)\n        elif s[i] == 'A':\n            k = i\n    print(ans)\n    t -= 1", "for i in range(int(input())):\n    n = int(input())\n    print(max(map(len, input().split('A')[1:] + [''])))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(input())\n    c = 0\n    ai = -1\n    for i in range(n):\n        if arr[i] == 'A':\n            ai = i\n            arr[i] = 0\n        elif arr[i] == 'P' and ai == -1:\n            arr[i] = 0\n        elif arr[i] == 'P' and ai != -1:\n            arr[i] = i - ai\n    print(max(arr))", "for _ in range(int(input())):\n    input()\n    s = input().lstrip('P')\n    print(max(map(len, s.split('A'))))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    mx = 0\n    c = 0\n    for i in range(n - 1, -1, -1):\n        if s[i] == 'P':\n            c += 1\n        else:\n            mx = max(mx, c)\n            c = 0\n    print(mx)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    s.reverse()\n    if not 'P' in s:\n        print(0)\n        continue\n    isA = 0\n    noP = 0\n    mx = -1\n    for i in range(s.index('P'), n):\n        if s[i] == 'P':\n            noP += 1\n        else:\n            mx = max(mx, noP)\n            noP = 0\n    if mx == -1:\n        print(0)\n    else:\n        print(mx)", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    s = input()\n    i = 0\n    max_cnt = 0\n    while i < n - 1:\n        cur_s = s[i]\n        next_s = s[i + 1]\n        if cur_s == 'A' and next_s == 'P':\n            cnt = 0\n            i += 1\n            while i < n and s[i] == 'P':\n                cnt += 1\n                i += 1\n            if cnt > max_cnt:\n                max_cnt = cnt\n        else:\n            i += 1\n    print(max_cnt)", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    s = list(input().split('A'))\n    N = 0\n    for j in range(1, len(s)):\n        if len(s[j]) > N:\n            N = len(s[j])\n    print(N)", "def main():\n    for i in range(int(input())):\n        k = int(input())\n        s = input()\n        max = 0\n        count = 0\n        check = False\n        for student in s:\n            if student == 'A':\n                if count > max:\n                    max = count\n                count = 0\n                check = True\n            elif check == True:\n                count += 1\n        if s[-1] == 'P' and count > max:\n            max = count\n        print(max)\nmain()", "def solve():\n    n = int(input())\n    s = input()\n    ans = 0\n    k = -1\n    for i in range(n):\n        if s[i] == 'P' and k > -1:\n            ans = max(ans, i - k)\n        elif s[i] == 'A':\n            k = i\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = list(input())\n    m = 0\n    if s.count('A') == 1 and s[-1] == 'A':\n        print(0)\n    else:\n        c = 0\n        for i in range(n - 1):\n            if s[i] == 'A' and s[i + 1] == 'P':\n                c += 1\n                s[i + 1] = 'A'\n            else:\n                m = max(m, c)\n                c = 0\n        m = max(m, c)\n        print(m)", "for _ in range(0, int(input())):\n    n = int(input())\n    c = 0\n    m = 0\n    f = False\n    for i in input():\n        if i == 'A':\n            c = 0\n            f = True\n        if i == 'P' and f:\n            c += 1\n            m = max(m, c)\n    print(m)", "for i in range(int(input())):\n    k = int(input())\n    s = input().lstrip('P').split('A')\n    print(len(max(s)))", "for _ in range(int(input())):\n    input()\n    s = input().lstrip('P')\n    print(max(map(len, s.split('A'))))", "for _ in range(int(input())):\n    input()\n    s = input().lstrip('P')\n    print(max(map(len, s.split('A'))))", "import math\nimport sys\nimport itertools\nimport fractions\nimport re\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nfor t in [wtf[i:i + 2] for i in range(1, len(wtf), 2)]:\n    k = int(t[0])\n    S = t[1]\n    ans = max([len(s) - 1 for s in re.findall('(AP+)', S)], default=0)\n    print(ans)", "for _ in range(int(input())):\n    n_ = input()\n    s = []\n    s.extend(input())\n    total = 0\n    count = 1\n    while count > 0:\n        count = 0\n        x = -1\n        for i in range(int(n_) - 1):\n            if s[i] == 'A' and s[i + 1] == 'P' and (i != x):\n                count += 1\n                s[i + 1] = 'A'\n                x = i + 1\n        if count > 0:\n            total += 1\n    print(total)", "t = int(input())\nfor i in range(t):\n    size = int(input())\n    children = input()\n    (max_sequence, last_angry) = (0, -1)\n    curr_sequence = 0\n    for j in range(len(children)):\n        if children[j] == 'A':\n            last_angry = j\n            if curr_sequence > max_sequence:\n                max_sequence = curr_sequence\n            curr_sequence = 0\n        elif last_angry != -1:\n            curr_sequence += 1\n    if curr_sequence > max_sequence:\n        max_sequence = curr_sequence\n    print(max_sequence)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    students = input()\n    count = 0\n    maxCount = 0\n    prev = 'P'\n    i = 0\n    while i < len(students) and students[i] != 'A':\n        i += 1\n    for j in range(i, len(students)):\n        if students[j] == 'P':\n            count += 1\n        else:\n            count = 0\n        maxCount = max(maxCount, count)\n    print(maxCount)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    (c, ans) = (0, 0)\n    cnt = 0\n    for i in range(n):\n        if s[i] == 'A':\n            c = 0\n            cnt = 1\n        elif s[i] == 'P' and cnt == 1:\n            c += 1\n        ans = max(ans, c)\n    print(ans)", "I = input\nexec(int(I()) * \"I();print(max(0,0,*map(len,I().split('A')[1:])));\")", "groups = int(input())\nwhile groups:\n    n = int(input())\n    students = str(input())\n    moment = 0\n    while students.count('AP') > 0:\n        students = students.replace('AP', 'AA')\n        moment += 1\n    print(moment)\n    groups -= 1", "for _ in range(int(input())):\n    n = int(input())\n    l = input()\n    ind = -1\n    for (i, x) in enumerate(l):\n        if x == 'A':\n            ind = i\n            break\n    l = l[ind:]\n    if l == 'P':\n        print(0)\n        continue\n    l = list(l.split('A'))\n    print(max(map(len, l)))", "g = int(input())\nwhile g:\n    n = int(input())\n    students = str(input())\n    m = 0\n    while students.count('AP') > 0:\n        students = students.replace('AP', 'AA')\n        m += 1\n    print(m)\n    g -= 1", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if 'A' not in s:\n        print(0)\n        continue\n    i = s.find('A')\n    k = 0\n    m = 0\n    i += 1\n    while i < n:\n        if s[i] == 'P':\n            k += 1\n        else:\n            m = max(m, k)\n            k = 0\n        i += 1\n    m = max(m, k)\n    print(m)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if s.count('A') == 0 or s.count('P') == 0:\n        print(0)\n    else:\n        s = s[s.index('A'):]\n        s = list(s.split('A'))\n        while s.count('') > 0:\n            s.remove('')\n        if s == []:\n            print(0)\n        else:\n            Max = 0\n            for i in range(len(s)):\n                if len(s[i]) > Max:\n                    Max = len(s[i])\n            print(Max)", "for _ in range(int(input())):\n    n = int(input())\n    print(max(map(len, input().split('A')[1:] + [''])))", "t = int(input())\nfor i in range(t):\n    length = int(input())\n    k = str(input())\n    k += '!'\n    arr = [str(i) for i in k]\n    answer = [0]\n    for j in range(len(arr)):\n        if arr[j] == 'A':\n            pos = j + 1\n            count = 0\n            while arr[pos] == 'P':\n                count += 1\n                pos += 1\n            answer.append(count)\n    print(max(answer))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    mins = 0\n    temp = 'AP'\n    for i in range(len(s)):\n        if temp in s:\n            mins += 1\n            s = s.replace(temp, 'AA')\n    print(mins)", "s1 = input().split()\nT = int(s1[0])\nfor case in range(0, T):\n    s2 = input().split()\n    n = int(s2[0])\n    a = input().split()\n    s = []\n    for i in range(0, n):\n        s.append(a[0][i])\n    ss = 0\n    ans = 0\n    for i in range(0, n):\n        if s[i] == 'A':\n            for j in range(i + 1, n):\n                if s[j] == 'P':\n                    ss += 1\n                else:\n                    break\n            ans = max(ans, ss)\n        else:\n            ss = 0\n    print(ans)", "def main():\n    n = int(input())\n    for _ in range(0, n):\n        num = int(input())\n        num -= 1\n        student = input()\n        student = list(student)\n        end = False\n        counter = 0\n        while not end:\n            endd = True\n            i = 0\n            while i < num:\n                if student[i] == 'A' and student[i + 1] == 'P':\n                    student[i + 1] = 'A'\n                    endd = False\n                    i += 1\n                i += 1\n            if endd:\n                end = True\n            counter += 1\n        print(counter - 1)\nmain()", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    a = input()\n    m = []\n    if 'A' in a:\n        for i in range(n):\n            if a[i] == 'A':\n                pos1 = i + 1\n                if 'A' in a[i + 1:n]:\n                    pos2 = a[i + 1:n].index('A') + 1 + i\n                else:\n                    pos2 = n\n                m.append(len(a[pos1:pos2]))\n        print(max(m))\n    else:\n        print(0)", "for s in [*open(0)][2::2]:\n    s = [*s.strip()]\n    cnt = 0\n    while True:\n        ok = False\n        for i in range(len(s) - 2, -1, -1):\n            if s[i] == 'A' and s[i + 1] == 'P':\n                ok = True\n                s[i + 1] = 'A'\n        if not ok:\n            break\n        cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    n_ = input()\n    s = []\n    s.extend(input())\n    total = 0\n    count = 1\n    while count > 0:\n        count = 0\n        x = -1\n        for i in range(int(n_) - 1):\n            if s[i] == 'A' and s[i + 1] == 'P' and (i != x):\n                count += 1\n                s[i + 1] = 'A'\n                x = i + 1\n        if count > 0:\n            total += 1\n    print(total)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    c = 'A'\n    if c not in s:\n        print(0)\n    else:\n        ind = s.index(c)\n        s = s[ind + 1:]\n        l = s.split(c)\n        print(len(max(l)))", "n = int(input())\nc = 0\nl = []\nfor _ in range(n):\n    m = int(input())\n    s = list(input())\n    max = 0\n    if 'A' in s:\n        d = s.index('A')\n        for i in range(d, m):\n            if s[i] == 'P':\n                c += 1\n                if c > max:\n                    max = c\n            else:\n                c = 0\n        print(max)\n    else:\n        print('0')", "for _ in range(int(input())):\n    N = int(input())\n    st = input()\n    j = 0\n    while j < len(st) and st[j] != 'A':\n        j += 1\n    ma_x = 0\n    while j < len(st):\n        max2 = 0\n        j += 1\n        while j < len(st) and st[j] != 'A':\n            j += 1\n            max2 += 1\n        ma_x = max(ma_x, max2)\n    print(ma_x)", "for _ in range(int(input())):\n    n = int(input())\n    t = input()\n    print(max([len(n) for n in (t + 'A').split('A')][1:]))", "n = input()\nlens = []\nstring = []\nkq = []\nfor i in range(int(n)):\n    lens.append(input())\n    string.append(input())\n    kq.append(0)\nfor i in range(int(n)):\n    (temp, flag) = (0, 0)\n    for k in range(int(lens[i])):\n        if string[i][k] == 'A':\n            if temp > kq[i] and flag > 0:\n                kq[i] = temp\n            flag += 1\n            temp = 0\n        else:\n            temp += 1\n    if temp > kq[i] and flag >= 1:\n        kq[i] = temp\nfor i in range(int(n)):\n    print(kq[i])", "for i in range(int(input())):\n    p = int(input())\n    s = list(input().split('A'))\n    if len(s) > 0:\n        t = []\n        for k in range(len(s)):\n            if 'P' in s[k]:\n                if k > 0:\n                    t.append(len(s[k]))\n        if len(t) > 0:\n            print(max(t))\n        else:\n            print(0)\n    else:\n        print(0)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = input()\n    c = 0\n    for i in range(len(l) - 1):\n        if l[i] == 'A':\n            c = 1\n            break\n    if c == 0:\n        print('0')\n    else:\n        idx = 0\n        for i in range(len(l)):\n            if l[i] == 'A':\n                idx = i\n                break\n        a = 0\n        ma = 0\n        for i in range(idx, len(l) - 1):\n            if l[i] == 'P' and l[i] == l[i + 1]:\n                a += 1\n            else:\n                if l[i] == 'P':\n                    a += 1\n                if ma < a:\n                    ma = a\n                a = 0\n        if l[len(l) - 1] == 'P':\n            a += 1\n        if ma < a:\n            ma = a\n            a = 0\n        print(ma)"]