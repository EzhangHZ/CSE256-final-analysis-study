["for s in [*open(0)][1:]:\n    (n, x, t) = map(int, s.split())\n    d = min(n, t // x)\n    print(d * (2 * n - d - 1) // 2)", "for s in [*open(0)][1:]:\n    (n, x, t) = map(int, s.split())\n    d = min(n, t // x)\n    print(d * ~d // 2 + d * n)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, x, t) = map(int, input().split())\n    a = min(n, t // x)\n    print((a - 1) * a // 2 + max(0, n - a) * a)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, x, t) = map(int, input().split())\n    if x > t:\n        return 0\n    v = t // x\n    if n - 1 - v < 0:\n        return (n - 1) * n // 2\n    ans = v * (n - 1 - v) + v * (v + 1) // 2\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "from math import ceil\n\ndef solve(n, x, t):\n    dis_sat = 0\n    first = ceil((t + 1) / x)\n    if first > n:\n        first = n - 1\n    else:\n        first -= 1\n    end_of_first = n - first\n    dis_sat += (end_of_first - 1) * first + (first + 1) * first // 2\n    print(dis_sat)\nfor i in range(int(input())):\n    (n, x, t) = map(int, input().split())\n    solve(n, x, t)", "for i in [*open(0)][1:]:\n    (n, x, t) = map(int, i.split())\n    d = min(n, t // x)\n    print(d * (2 * n - d - 1) // 2)", "k = int(input())\nfor _ in range(k):\n    (n, x, t) = map(int, input().split())\n    dekh = min(n, t // x)\n    print((n - dekh) * dekh + max(0, dekh - 1) * dekh // 2)", "for _ in range(int(input())):\n    (n, x, t) = map(int, input().split())\n    q = min(n, t // x)\n    print(q * (2 * n - q - 1) // 2)", "def sumHasStarted(n, x, t):\n    r = t // x + 1\n    k = n - min(r, n)\n    return k * (2 * r + k - 1) // 2 + (n - k) * n\n\ndef sumDisatisfaction(n, x, t):\n    return sumHasStarted(n, x, t) - n * (n + 1) // 2\nfor case in range(int(input())):\n    (n, x, t) = map(int, input().split())\n    ans = sumDisatisfaction(n, x, t)\n    print(ans)", "def main():\n    (n, x, t) = map(int, input().split())\n    ans = 0\n    if (n - 1) * x <= t:\n        return n * (n - 1) // 2\n    complete = (n * x - t) // x\n    rem = n - complete\n    ans += complete * (t // x)\n    ans += rem * (rem - 1) // 2\n    return ans\nfor _ in range(int(input())):\n    print(main())", "k = int(input())\nfor i in range(k):\n    (n, x, t) = map(int, input().split())\n    a = t // x\n    if n == 1:\n        print(0)\n        continue\n    ans = a * (a + 1) // 2\n    if a <= n - 1:\n        print(a * (n - a - 1) + ans)\n    else:\n        print(n * (n - 1) // 2)", "t = int(input())\nfor i in range(t):\n    (n, x, t) = [int(x) for x in input().split()]\n    if t // x > n:\n        print(n * (n - 1) // 2)\n    else:\n        print(t // x * n - t // x * (t // x + 1) // 2)", "for s in [*open(0)][1:]:\n    (n, x, t) = map(int, s.split())\n    d = t // x\n    print(max(0, n - d) * d + min(d - 1, n - 1) * min(d, n) // 2)", "import math\ninter = int(input())\ndis = []\nfor i in range(inter):\n    info = input().split()\n    n = int(info[0])\n    x = int(info[1])\n    t = int(info[2])\n    k = int(math.floor(t / x))\n    if n > k:\n        dis.append(k * (2 * n - k - 1) // 2)\n    else:\n        dis.append(int(n * (n - 1) // 2))\nfor i in range(inter):\n    print(dis[i])", "import sys\n\ndef readnum():\n    input = sys.stdin.readline\n    a = list(map(int, input().split()))\n    return a\n\ndef printf(val):\n    sys.stdout.write(str(val) + '\\n')\nt = readnum()[0]\nfor _ in range(t):\n    (n, x, t) = readnum()\n    l = t // x\n    if n < l:\n        print(int(n * (n - 1) // 2))\n    else:\n        extra = int(t % x != 0)\n        print(int((n - l) * l + (l - 1) * l // 2))", "k = int(input())\nfor i in range(k):\n    (n, x, t) = [int(x) for x in input().split()]\n    if t // x > n:\n        print(n * (n - 1) // 2)\n    else:\n        print(t // x * n - t // x * (t // x + 1) // 2)", "from sys import stdin\ninput = stdin.readline\n\ndef solve():\n    (n, x, t) = [int(char) for char in input().split()]\n    p = min(n, t // x)\n    return p * (p - 1) // 2 + p * (n - p)\nfor i in range(int(input())):\n    print(solve())", "for _ in range(int(input())):\n    (x, y, z) = map(int, input().split())\n    m = z // y\n    if m > x:\n        print((x - 1) * x // 2)\n    else:\n        l = x * m - m * (m + 1) // 2\n        print(l)", "for t in range(int(input())):\n    (n, x, t) = map(int, input().split())\n    d = min(n, t // x)\n    print(d * ~d // 2 + d * n)", "for _ in range(int(input())):\n    (n, x, t) = map(int, input().split())\n    q = min(n, t // x)\n    print(q * (2 * n - q - 1) // 2)", "def main():\n    for _ in range(int(input())):\n        (n, x, t) = map(int, input().split())\n        print(solution(n, x, t))\n\ndef solution(n, x, t):\n    div = t // x\n    if div >= n:\n        return int(n * (n - 1) // 2)\n    else:\n        return int(div * (div - 1) // 2 + div * (n - div))\n\ndef test():\n    pass\nmain()", "a = int(input())\nfor i in range(0, a):\n    (n, x, t) = (int(x) for x in input().split())\n    ans = 0\n    c = t // x\n    if n - c >= 0:\n        ans = (n - c) * c + c * (c - 1) // 2\n    else:\n        ans = n * (n - 1) // 2\n    print(ans)", "from math import *\nfrom sys import *\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom collections import Counter as ctr\nfrom collections import deque as dq\ninp = lambda : int(input())\nli = lambda : list(map(int, input().split()))\nlb = lambda : list(map(int, input().split()[0]))\nls = lambda : list(input())\nbi = lambda n: bin(n).replace('0b', '')\nyn = lambda f: print('NYOE S'[f::2])\nsrp = lambda s, i, c: s[:i] + c + s[i + 1:]\n\ndef solve(__=1):\n    for _ in range(__):\n        (n, x, t) = li()\n        tmp = min(t // x, n - 1)\n        print((n - tmp) * tmp + (tmp - 1) * tmp // 2)\nsolve(inp())", "k = int(input())\nfor _ in range(k):\n    (n, x, t) = map(int, input().split())\n    if x > t:\n        print(0)\n    else:\n        s = 0\n        r = t // x\n        if n < r:\n            s += n * (n - 1) >> 1\n        else:\n            s += (n - r) * r\n            s += r * (r - 1) >> 1\n        print(s)", "for i in range(int(input())):\n    (n, x, t) = map(int, input().split())\n    s = min(t // x, n - 1)\n    print(s * (s - 1) // 2 + s * (n - s))", "for _ in range(int(input())):\n    (n, x, t) = map(int, input().split())\n    p = min(n, t // x)\n    ans = p * n - p * (p + 1) // 2\n    print(ans)", "for _ in range(int(input())):\n    (n, x, t) = map(int, input().split())\n    q = min(n, t // x)\n    print(q * (2 * n - q - 1) // 2)", "t = int(input())\nfor _ in range(t):\n    (n, interval, duration) = map(int, input().split())\n    dis = duration // interval\n    tot = max(n - dis, 0) * dis\n    dis = min(n, dis)\n    tot += dis * (dis - 1) // 2\n    print(tot)", "t = int(input())\nfor _ in range(t):\n    (n, interval, duration) = map(int, input().split())\n    dis = duration // interval\n    tot = max(n - dis, 0) * dis\n    dis = min(n, dis)\n    tot += dis * (dis - 1) // 2\n    print(tot)", "def main():\n    (n, x, t) = map(int, input().split())\n    if x == 0:\n        return print(0)\n    k = min(t // x, n - 1)\n    print((n - k) * k + (k - 1) * k // 2)\ntests = int(input())\nfor _ in range(tests):\n    main()", "for _ in range(int(input())):\n    (n, x, t) = map(int, input().split())\n    ans = max(0, n - t // x) * (t // x) + min(n - 1, t // x - 1) * min(n, t // x) // 2\n    print(ans)", "tc = int(input())\nfor _ in range(tc):\n    (n, x, t) = list(map(int, input().split()))\n    print(min(t // x, n - 1) * (n - min(t // x, n - 1)) + min(t // x, n - 1) * (min(t // x, n - 1) - 1) // 2)", "for _ in range(int(input())):\n    (n, x, t) = list(map(int, input().split()))\n    print(min(t // x, n - 1) * (n - min(t // x, n - 1)) + min(t // x, n - 1) * (min(t // x, n - 1) - 1) // 2)", "tc = int(input())\nfor _ in range(tc):\n    (n, x, t) = list(map(int, input().split()))\n    print(min(t // x, n - 1) * (n - min(t // x, n - 1)) + min(t // x, n - 1) * (min(t // x, n - 1) - 1) // 2)", "def solve():\n    (n, x, t) = map(int, input().split(' '))\n    maxp = t // x\n    if n < maxp:\n        print(n * (n - 1) // 2)\n        return\n    print(maxp * (maxp - 1) // 2 + (n - maxp) * maxp)\nt = int(input())\nfor _ in range(t):\n    solve()", "n = int(input())\nfor _ in range(n):\n    (n, x, t) = map(int, input().split())\n    a = t // x\n    b = min(n - 1, a)\n    ans = b * (b + 1) // 2 + a * (n - 1 - b)\n    print(ans)", "I = input\nfor _ in range(int(I())):\n    (n, x, t) = map(int, I().split())\n    m = t // x\n    print((min(n, m) - 1) * min(n, m) // 2 + (n - m) * m * (n > m))", "k = int(input())\nfor i in range(k):\n    (n, x, t) = map(int, input().split())\n    if x > t:\n        print(0)\n    elif x == t:\n        print(n - 1)\n    else:\n        s = t // x\n        y = 0\n        if s >= n:\n            s = n - 1\n        if s % 2 == 0:\n            y = (s - 1) * (s // 2)\n        else:\n            y = s * (s // 2)\n        y += s * (n - s)\n        print(y)", "for s in [*open(0)][1:]:\n    (n, x, t) = map(int, s.split())\n    d = min(n, t // x)\n    print(d * (2 * n - d - 1) // 2)", "for pratyush in range(int(input())):\n    (n, s, t) = map(int, input().split())\n    f = min(n - 1, t // s)\n    c = f * (f - 1) // 2 + f * (n - f)\n    print(c)", "for s in [*open(0)][1:]:\n    (n, x, t) = map(int, s.split())\n    d = min(n, t // x)\n    print(d * ~d // 2 + d * n)", "for s in [*open(0)][1:]:\n    (n, x, t) = map(int, s.split())\n    d = min(n, t // x)\n    print(d * (2 * n - d - 1) // 2)", "import math\ncase = int(input())\nfor i in range(case):\n    (n, x, t) = map(int, input().split())\n    a = math.ceil((t + 1) / x)\n    if (t + x) / x >= n:\n        print((n - 1) * n // 2)\n    else:\n        print((n - a) * (a - 1) + (a - 1) * a // 2)", "t = int(input())\nfor i in range(t):\n    (n, x, t) = map(int, input().split())\n    a = t // x\n    print(max(0, n - a) * a + min(n, a) * min(n - 1, a - 1) // 2)", "for _ in range(int(input())):\n    (n, m, t) = map(int, input().split())\n    tre = t // m\n    if n * m <= t:\n        sum = n * (n - 1) // 2\n        print(sum)\n    else:\n        sum = tre * (n - tre)\n        sum += tre * (tre - 1) // 2\n        print(sum)", "for i in range(int(input())):\n    (n, x, t) = map(int, input().split())\n    d = min(n, t // x)\n    print(d * (2 * n - d - 1) // 2)", "import bisect\nfor _ in range(int(input())):\n    (n, x, t) = map(int, input().split())\n    z = t // x\n    if z > n:\n        print((n - 1) * n // 2)\n    else:\n        print(z * n - z * (z + 1) // 2)", "for _ in range(int(input())):\n    (n, x, t) = map(int, input().split())\n    z = t // x\n    if z > n:\n        print(n * (n - 1) // 2)\n    else:\n        ans = z * n\n        ans -= z * (z + 1) // 2\n        print(ans)", "for s in [*open(0)][1:]:\n    (n, x, t) = map(int, s.split())\n    d = min(n, t // x)\n    print(d * ~d // 2 + d * n)", "for s in [*open(0)][1:]:\n    (n, x, t) = map(int, s.split())\n    d = min(n, t // x)\n    print(d * ~d // 2 + d * n)", "count = 0\ns = 0\nk = int(input())\nfor i in range(k):\n    (n, x, t) = map(int, input().split())\n    d = min(n, t // x)\n    print(d * ~d // 2 + d * n)", "for _ in range(int(input())):\n    (n, x, t) = map(int, input().split())\n    a = t // x + 1\n    if a < n:\n        print((a - 1) * (n - a) + a * (a - 1) // 2)\n    else:\n        print(n * (n - 1) // 2)", "for _ in range(int(input())):\n    (n, x, t) = map(int, input().split())\n    c = t // x\n    if c >= n - 1:\n        print(n * (n - 1) // 2)\n    else:\n        print(c * (n - c) + c * (c - 1) // 2)", "R = lambda : map(int, input().split())\nk = int(input())\n\ndef solve(n, x, t):\n    wait = t // x\n    remain = min(wait, n)\n    ans = max((n - wait) * wait, 0) + remain * (remain - 1) // 2\n    return ans\nfor _ in range(k):\n    (n, x, t) = R()\n    print(solve(n, x, t))", "def gcd(x, y):\n    while x:\n        (x, y) = (y % x, x)\n    return y\nk = int(input())\nfor _ in range(k):\n    (n, x, t) = map(int, input().split())\n    discontent = t // x\n    fin = min(n, discontent)\n    res = fin * (fin - 1) // 2\n    m = n - fin\n    res += m * discontent\n    print(res)", "k = int(input())\nans = 0\nfor i in range(k):\n    (n, x, t) = map(int, input().split())\n    r = t // x\n    ans = 0\n    ans = (n - r) * r + r * (r - 1) // 2\n    if n - r < 0:\n        ans = (n - 1) * n // 2\n    print(ans)", "for _ in range(int(input())):\n    (n, x, t) = map(int, input().split())\n    small = min(t // x, n)\n    print(small * (small - 1) // 2 + (n - small) * (t // x))", "def dheeraj1(g):\n    g += 1\ntest1 = int(input())\nfor _ in range(test1):\n    dheeraj1(10)\n    (N, x, t) = map(int, input().split())\n    total = min(N - 1, t // x)\n    print(total * (total - 1) // 2 + total * (N - total))", "t = int(input())\nfor i in range(t):\n    (n, x, t) = map(int, input().split())\n    if n == 1:\n        print(0)\n    elif t < x:\n        print(0)\n    elif t == x:\n        print(n - 1)\n    else:\n        ans = 0\n        a = min(n - 1, t // x)\n        ans += (n - a) * a\n        f = a\n        f -= 1\n        ans += f * (f + 1) // 2\n        print(ans)", "k = int(input())\nif 1 <= k <= 1000:\n    n = [0 for i in range(k)]\n    x = [0 for i in range(k)]\n    t = [0 for i in range(k)]\n    for i in range(k):\n        (n[i], x[i], t[i]) = map(int, input().split())\n        if 1 <= n[i] <= 2 * 10 ** 9 and 1 <= x[i] <= 2 * 10 ** 9 and (1 <= t[i] <= 2 * 10 ** 9):\n            if t[i] < x[i]:\n                print('0')\n                continue\n            j = min(n[i], t[i] // x[i])\n            count = j * (n[i] - j) + j * (j - 1) // 2\n            print(count)", "for _ in range(int(input())):\n    (n, x, t) = map(int, input().split())\n    if (n - 1) * x > t:\n        if t // x == 0:\n            print(0)\n        else:\n            a = t // x\n            c = a * (n - a)\n            print(c + a * (a - 1) // 2)\n    else:\n        print(n * (n - 1) // 2)", "for tc in range(int(input())):\n    (N, X, T) = map(int, input().split())\n    U = 0\n    if T // X < N:\n        U += (N - T // X - 1) * (T // X)\n        U += (T // X + 1) * (T // X) >> 1\n    else:\n        U += N * (N - 1) >> 1\n    print(U)", "k = int(input())\nres = []\nfor _ in range(k):\n    (n, x, t) = list(map(int, input().split()))\n    rng = t // x\n    delim = max(-1, n - 1 - rng)\n    ans = rng * (delim + 1)\n    ans += (n - 1 - delim) * (n - 1)\n    ans -= (n - 1 - delim) * (n + delim) // 2\n    res.append(ans)\nfor ans in res:\n    print(ans)", "testcase = int(input())\nfor k in range(testcase):\n    st = input().split(' ')\n    numcont = int(st[0])\n    interval = int(st[1])\n    duration = int(st[2])\n    p = duration // interval\n    result = 0\n    if p >= numcont:\n        result = numcont * (numcont - 1) // 2\n    else:\n        result = p * (numcont - p) + p * (p - 1) // 2\n    print(result)", "k = int(input())\nn = []\nx = []\nt = []\nfor i in range(k):\n    inp = input().split(' ')\n    n.append(int(inp[0]))\n    x.append(int(inp[1]))\n    t.append(int(inp[2]))\nfor i in range(k):\n    temp = t[i] // x[i]\n    c1 = temp * n[i] - temp * (temp + 1) // 2\n    c2 = n[i] * (n[i] - 1) // 2\n    if n[i] * x[i] > t[i]:\n        print(int(c1))\n    else:\n        print(int(c2))", "tests = int(input())\nwhile tests:\n    tests -= 1\n    (n, x, t) = list(map(int, input().split()))\n    temp = t // x\n    if temp >= n:\n        print((n - 1) * n // 2)\n    else:\n        a = (n - temp) * temp\n        b = (temp - 1) * temp // 2\n        print(a + b)", "for s in [*open(0)][1:]:\n    (n, x, t) = map(int, s.split())\n    d = min(n, t // x)\n    print(d * (2 * n - d - 1) // 2)", "def Getresult(n, x, t):\n    a = t // x\n    if n < a + 1:\n        return n * (n - 1) // 2\n    else:\n        return (a + 1) * a // 2 + (n - a - 1) * a\nk = int(input())\nresult = list()\nfor i in range(k):\n    list1 = input().split(' ')\n    list2 = list()\n    for j in list1:\n        list2.append(int(j))\n    result.append(Getresult(list2[0], list2[1], list2[2]))\nfor i in result:\n    print(i)", "k = int(input())\nfor _ in range(k):\n    (n, x, t) = map(int, input().split())\n    d = t // x\n    l = min(d, n)\n    res = (n - l) * d + l * (l - 1) // 2\n    print(res)", "m = int(input())\nfor i in range(m):\n    (n, x, t) = map(int, input().split())\n    a = min(t // x, n)\n    if a == 0:\n        print('0')\n    else:\n        print(a * (a - 1) // 2 + (n - a) * a)", "k = int(input())\nfor i in range(k):\n    (n, x, t) = map(int, input().split())\n    print(max(0, n - t // x) * (t // x) + min(n - 1, t // x - 1) * min(n, t // x) // 2)", "for _ in range(int(input())):\n    arr = [int(x) for x in input().split()]\n    (n, x, t) = (arr[0], arr[1], arr[2])\n    temp = t // x\n    ans = 0\n    if n - temp > 0:\n        k = n - temp\n        ans = k * temp\n        temp -= 1\n        ans += temp * (temp + 1) // 2\n    else:\n        n -= 1\n        ans += n * (n + 1) // 2\n    print(ans)", "for _ in range(int(input())):\n    (n, x, t) = map(int, input().split())\n    k = min(n - 1, t // x)\n    print((n - 1 - k) * k + (1 + k) * k // 2)", "for testcase in range(int(input())):\n    (n, x, t) = [int(x) for x in input().split()]\n    k = t // x\n    if t > (n - 1) * x:\n        print(n * (n - 1) // 2)\n    else:\n        print(n * k - k * (k + 1) // 2)", "for ti in range(int(input())):\n    (n, x, t) = map(int, input().split())\n    a = t // x\n    b = min(a, n)\n    r = b * (b - 1) // 2\n    r += (n - b) * a\n    print(r)", "k = int(input())\nfor test in range(k):\n    (n, x, t) = [int(i) for i in input().split(' ')]\n    d = t // x\n    d = min(n, d)\n    ans = (n - d) * d + (d - 1) * d // 2\n    print(ans)", "from sys import stdin, stdout\n\ndef arrin():\n    return list(map(int, stdin.readline().split()))\n\ndef num1in():\n    return int(stdin.readline())\n\ndef num2in():\n    (a, b) = map(int, stdin.readline().split())\n    return (a, b)\n\ndef num3in():\n    (a, b, c) = map(int, stdin.readline().split())\n    return (a, b, c)\n\ndef num4in():\n    (a, b, c, d) = map(int, stdin.readline().split())\n    return (a, b, c, d)\n\ndef num5in():\n    (a, b, c, d, e) = map(int, stdin.readline().split())\n    return (a, b, c, d, e)\nt = num1in()\nfor test in range(t):\n    (n, x, k) = num3in()\n    pe = k // x\n    if n <= pe:\n        ans = n * (n - 1) // 2\n        print(ans)\n    else:\n        ans = pe * (pe - 1) // 2\n        ans += (n - pe) * pe\n        print(ans)", "k = int(input())\nfor _ in range(k):\n    (n, x, t) = map(int, input().split())\n    if n < t // x + 1:\n        print(n * (n - 1) // 2)\n    else:\n        print((t // x + 1) * (t // x) // 2 + (n - t // x - 1) * (t // x))", "from collections import Counter\nfrom collections import defaultdict as dfd\nfrom bisect import bisect, bisect_left\nfrom math import sqrt, gcd, ceil, factorial\nfrom heapq import heapify, heappush, heappop\nMOD = 10 ** 9 + 7\ninf = float('inf')\nans_ = []\n\ndef nin():\n    return int(input())\n\ndef ninf():\n    return int(file.readline())\n\ndef st():\n    return input().strip()\n\ndef stf():\n    return file.readline().strip()\n\ndef read():\n    return list(map(int, input().strip().split()))\n\ndef readf():\n    return list(map(int, file.readline().strip().split()))\n\ndef solve():\n    for _ in range(nin()):\n        (n, x, t) = read()\n        g = t // x\n        if g >= n:\n            ans_.append(n * (n - 1) // 2)\n        else:\n            ans_.append((n - 1) * g - g * (g - 1) // 2)\nsolve()\nfor i in ans_:\n    print(i)", "for s in [*open(0)][1:]:\n    (n, x, t) = map(int, s.split())\n    d = min(n, t // x)\n    print(d * (2 * n - d - 1) // 2)", "for _ in range(int(input())):\n    (n, x, t) = map(int, input().split())\n    s = min(n - 1, t // x)\n    print([s, s * (s - 1) // 2 + s * (n - s)][s != 0])", "def solve(n, x, t):\n    numDissatisfied = 0\n    common = t // x\n    if common >= n:\n        return (n - 1) * n // 2\n    else:\n        numDissatisfied = (n - common) * common + (common - 1) * common // 2\n    return max(numDissatisfied, 0)\nt = int(input())\nfor test in range(1, t + 1):\n    (n, x, t) = list(map(int, input().split()))\n    print(f'{solve(n, x, t)}')", "for _ in range(int(input())):\n    (n, x, t) = [int(x) for x in input().split()]\n    z = t // x\n    if n < z:\n        print(n * (n - 1) // 2)\n    else:\n        print(z * (z - 1) // 2 + z * (n - z))", "for k in range(int(input())):\n    (n, x, t) = map(int, input().split())\n    y = t // x\n    if y >= n:\n        print(n * (n - 1) // 2)\n    else:\n        print(y * (y + 1) // 2 + y * (n - y - 1))", "q = int(input())\nfor t in range(q):\n    (a, b, c) = map(int, input().split())\n    q1 = c // b\n    if a == 1:\n        print(0)\n    else:\n        if q1 >= a:\n            q1 = a - 1\n        a -= q1\n        b = q1 * (a - 1)\n        q1 = q1 * (q1 + 1)\n        q1 //= 2\n        if b >= 0:\n            q1 += b\n        print(q1)", "for _ in range(int(input())):\n    (n, x, t) = map(int, input().split())\n    z = t // x\n    if n <= z:\n        print(n * (n - 1) // 2)\n    else:\n        p = z * (n - z) + z * (z - 1) // 2\n        print(p)", "k = int(input())\nfor i in range(k):\n    (n, x, t) = map(int, input().split())\n    z = t // x\n    res = 0\n    if n < z:\n        res = n * (n - 1) // 2\n    else:\n        y = n - z\n        if z != 2:\n            res += y * z + z * (z - 1) // 2\n        else:\n            res += y * z + 1\n    print(res)", "for _ in range(int(input())):\n    (n, x, t) = list(map(int, input().split()))\n    if x > t:\n        print(0)\n    else:\n        a = t // x\n        if n < a:\n            print(n * (n - 1) // 2)\n            continue\n        ans = n - a\n        ans = ans * a\n        ans += a * (a - 1) // 2\n        print(ans)", "for _ in range(int(input())):\n    (n, m, k) = list(map(int, input().split()))\n    a = k // m\n    if n <= a:\n        print(n * (n - 1) // 2)\n    else:\n        s = (n - a) * a\n        s += (a - 1) * a // 2\n        print(s)", "try:\n    for _ in range(int(input())):\n        (n, x, t) = map(int, input().split())\n        maximum = t // x\n        if maximum >= n:\n            print(n * (n - 1) // 2)\n        else:\n            diff = n - maximum - 1\n            print(diff * maximum + maximum * (maximum + 1) // 2)\nexcept e:\n    pass", "k = int(input())\nwhile k > 0:\n    k -= 1\n    (n, x, t) = map(int, input().split())\n    z = t // x\n    if n < z:\n        print((n - 1) * n // 2)\n    else:\n        print(n * z + (z - 1) * z // 2 - z ** 2)", "def solve():\n    (n, x, t) = map(int, input().split())\n    val = min(n - 1, t // x)\n    if val == 0:\n        print(0)\n        return\n    summ = max(0, val * (val - 1) // 2 + val * (n - val))\n    print(summ)\n    return\nfor _ in range(int(input())):\n    solve()", "def solve(n, x, t):\n    f = n - 1\n    y = t // x\n    mi = min(f, y)\n    if mi == 0:\n        print(0)\n    else:\n        z = mi * (mi - 1) // 2\n        if x > 0:\n            print(z + mi * (n - mi))\n        else:\n            print(mi * (n - mi))\nfor t in range(int(input())):\n    (n, x, t) = map(int, input().split())\n    solve(n, x, t)", "for tt in range(int(input())):\n    (n, x, t) = map(int, input().split())\n    val = min(t // x, n - 1)\n    if val == 0:\n        print(0)\n    else:\n        s = max(0, val * (val - 1) // 2) + val * (n - val)\n        print(s)", "for i in range(int(input())):\n    (n, x, t) = map(int, input().split())\n    l = 0\n    get = min(n - 1, t // x)\n    if get == 0:\n        print(0)\n    else:\n        maxi = max(l, get * (get - 1) // 2 + get * (n - get))\n        print(maxi)", "T = int(input())\nfor i in range(T):\n    (N, X, T) = map(int, input().split())\n    if T >= (N - 1) * X:\n        Calculate = N * (N - 1) // 2\n        print(Calculate)\n    else:\n        Last = (N - 1) * X\n        Last_Full = (Last + X - 1 - T) // X + 1\n        Rest = N - Last_Full\n        Count = T // X * Last_Full\n        Count += Rest * (Rest - 1) // 2\n        print(Count)", "K = int(input())\nfor k in range(K):\n    [n, x, t] = list(map(int, input().split()))\n    if t // x == 0:\n        print(0)\n    else:\n        p = t // x\n        if n >= p:\n            print(p * (p - 1) // 2 + (n - p) * p)\n        else:\n            print(n * (n - 1) // 2)"]