["I = input\nfor _ in [0] * int(I()):\n    i = 0\n    n = int(I())\n    a = (*map(int, I().split()), -2)\n    while a[i] >= i:\n        i += 1\n    while a[i - 1] >= n - i:\n        i += 1\n    print('YNeos'[i < n::2])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    num_array = [int(number) for number in input().split()]\n    sharp = True\n    first_half = n // 2\n    for i in range(first_half):\n        if num_array[i] < i:\n            sharp = False\n    for i in range(first_half, n):\n        if num_array[i] < n - 1 - i:\n            sharp = False\n    if num_array[first_half - 1] == first_half - 1 and num_array[first_half] == first_half - 1:\n        sharp = False\n    if sharp:\n        print('Yes')\n    else:\n        print('No')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    num_array = [int(num) for num in input().split()]\n    sharp = True\n    first_half = n // 2\n    for i in range(first_half):\n        if num_array[i] < i:\n            sharp = False\n    for i in range(first_half, n):\n        if num_array[i] < n - 1 - i:\n            sharp = False\n    if num_array[first_half - 1] == first_half - 1 and num_array[first_half] == first_half - 1:\n        sharp = False\n    if sharp:\n        print('Yes')\n    else:\n        print('No')", "def array_sharp(n, l):\n    i = 0\n    while i < n and l[i] >= i:\n        i += 1\n    order = True\n    while i < n:\n        if l[i] >= l[i - 1]:\n            l[i] = l[i - 1] - 1\n        if l[i] < 0:\n            order = False\n            break\n        i += 1\n    if order:\n        return 'Yes'\n    else:\n        return 'No'\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(array_sharp(n, l))", "import math\n\ndef main_function():\n    test_cases = range(int(input()))\n    for test_case in test_cases:\n        n = int(input())\n        a = [int(i) for i in input().split(' ')]\n        up_mode = True\n        is_good = True\n        current_level = a[0]\n        min_current_level = 0\n        for i in range(1, len(a)):\n            if up_mode:\n                if a[i] > min_current_level:\n                    current_level = a[i]\n                    min_current_level += 1\n                elif a[i] == min_current_level:\n                    if min_current_level >= i:\n                        current_level = a[i]\n                    else:\n                        if current_level == min_current_level:\n                            current_level = min_current_level - 1\n                        else:\n                            current_level = min_current_level\n                        if current_level < 0:\n                            is_good = False\n                        up_mode = False\n                else:\n                    current_level = min(a[i], current_level - 1)\n                    if current_level < 0:\n                        is_good = False\n                    up_mode = False\n            else:\n                current_level = min(a[i], current_level - 1)\n                if current_level < 0:\n                    is_good = False\n                    break\n        if is_good:\n            print('Yes')\n        else:\n            print('No')\nmain_function()", "def sharpeArray(arr):\n    if len(arr) == 1:\n        return 'Yes'\n    left = 0\n    right = 0\n    for i in range(0, len(arr)):\n        if arr[i] >= i:\n            left = i\n        else:\n            break\n    val = 0\n    for i in range(len(arr) - 1, -1, -1):\n        if arr[i] >= val:\n            right = i\n        else:\n            break\n        val += 1\n    if left >= right:\n        return 'Yes'\n    else:\n        return 'No'\ntestCases = int(input())\nfor _ in range(0, testCases):\n    n = int(input())\n    arr = []\n    arr = list(map(int, input().split(' ')))\n    print(sharpeArray(arr))", "t = int(input())\n\ndef go(a):\n    n = len(a)\n    left = [False] * n\n    right = [False] * n\n    for i in range(n):\n        if a[i] >= i:\n            left[i] = True\n        else:\n            break\n    for i in range(n - 1, -1, -1):\n        if a[i] >= n - i - 1:\n            right[i] = True\n        else:\n            break\n    for i in range(n):\n        if left[i] and right[i]:\n            return 'Yes'\n    return 'No'\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print('Yes')\n    else:\n        print(go(a))", "from sys import stdin\n\ndef input():\n    return stdin.readline().strip()\n\ndef solve(n):\n    for i in range(n // 2):\n        if a[i] < i or a[n - 1 - i] < i:\n            return 'No'\n    if n % 2 == 0 and (a[n // 2] >= n // 2 or a[n // 2 - 1] >= n // 2):\n        return 'Yes'\n    elif n % 2 == 1 and a[n // 2] >= n // 2:\n        return 'Yes'\n    else:\n        return 'No'\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(n))", "def f(a):\n    for i in range(len(a)):\n        if a[i] < i:\n            return i - 1\n    return len(a) - 1\n\ndef solve(a):\n    i = f(a)\n    j = len(a) - 1 - f(a[::-1])\n    return 'Yes' if i >= j else 'No'\nn = int(input())\nfor i in range(n):\n    input()\n    a = list(map(int, input().strip().split()))\n    print(solve(a))", "def can_sharpen(n, arr):\n    is_raising = True\n    for (i, a) in enumerate(arr):\n        if is_raising:\n            if i > a:\n                is_raising = False\n                if a < n - 1 - i or arr[i - 1] < n - 1 - i + 1:\n                    return False\n        elif a < n - 1 - i:\n            return False\n    return True\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if can_sharpen(n, arr):\n        print('Yes')\n    else:\n        print('No')", "def solve():\n    n = int(input())\n    array = list(map(int, input().split()))\n    if n % 2 == 1:\n        final = n // 2 + 1\n    else:\n        final = n // 2\n        if array[final - 1] == array[final]:\n            array[final] -= 1\n    for i in range(final):\n        if array[i] < i or array[n - 1 - i] < i:\n            print('No')\n            break\n    else:\n        if n % 2 == 1 or (n % 2 == 0 and array[final] != array[final - 1]):\n            print('Yes')\n        else:\n            print('No')\nT = int(input())\nfor i in range(T):\n    solve()", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    suffix = n\n    prefix = -1\n    for i in range(n):\n        if a[i] < i:\n            break\n        prefix = i\n    for i in range(n - 1, -1, -1):\n        if a[i] < n - 1 - i:\n            break\n        suffix = i\n    if suffix <= prefix:\n        print('Yes')\n    else:\n        print('No')\n    return\n\ndef test():\n    t = int(input())\n    while t:\n        main()\n        t -= 1\ntest()", "def do_nach(a, n):\n    k = -1\n    for i in range(n):\n        if a[i] >= i:\n            pass\n        else:\n            k = i - 1\n            break\n    return k\n\ndef is_ok(a, k, n):\n    if n - k - 2 >= a[k]:\n        return False\n    zn = n - k - 2\n    for i in range(k + 1, n):\n        if a[i] >= zn:\n            pass\n        else:\n            return False\n        zn -= 1\n    return True\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = do_nach(a, n)\n    if k == -1 or is_ok(a, k, n):\n        print('Yes')\n    else:\n        print('No')", "def calc(a):\n    if len(a) == 1:\n        return 'Yes'\n    start = 0\n    found = True\n    for (i, n) in enumerate(a):\n        if i > n:\n            start = i - 1\n            found = False\n            break\n    if found:\n        return 'Yes'\n    for i in range(start, len(a)):\n        if len(a) - i - 1 > a[i]:\n            return 'No'\n    return 'Yes'\nN = int(input())\ncases = []\nfor _ in range(N):\n    _ = input()\n    c = list(map(int, input().split()))\n    cases.append(c)\nfor c in cases:\n    print(calc(c))", "for nt in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    point = -1\n    for i in range(n):\n        if l[i] < i:\n            point = i - 1\n            break\n    if point == -1:\n        print('Yes')\n    else:\n        flag = 0\n        for i in range(n - 1, point - 1, -1):\n            if l[i] < n - 1 - i:\n                flag = 1\n                print('No')\n                break\n        if flag == 0:\n            print('Yes')", "for t in range(int(input())):\n    n = int(input())\n    ll = list(map(int, input().split()))\n    l = len(ll) - 1\n    flag = 1\n    for i in range(len(ll)):\n        if ll[i] < i and ll[i] < l - i:\n            flag = 0\n    k = 1\n    if len(ll) % 2 == 0:\n        if ll[len(ll) // 2] == len(ll) // 2 - 1 and ll[len(ll) // 2 - 1] == len(ll) // 2 - 1:\n            k = 0\n            print('No')\n    if flag == 1 and k == 1:\n        print('Yes')\n    elif k == 1 and flag == 0:\n        print('No')", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    res = 'No'\n    ss = 0\n    ff = n - 1\n    while ss < n and a[ss] >= ss:\n        ss += 1\n    while ff >= 0 and a[ff] >= n - ff - 1:\n        ff -= 1\n    ss -= 1\n    ff += 1\n    if ff <= ss:\n        res = 'Yes'\n    print(res)\n\ndef main():\n    t = int(input())\n    while t:\n        solve()\n        t -= 1\nmain()", "I = input\nfor _ in [0] * int(I()):\n    i = 0\n    n = int(I())\n    a = (*map(int, I().split()), -2)\n    while a[i] >= i:\n        i += 1\n    while a[i - 1] >= n - i:\n        i += 1\n    print('YNeos'[i < n::2])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    y = list(map(int, input().split()))\n    if n == 1:\n        print('Yes')\n    else:\n        pr = 1\n        for i in range(n // 2):\n            if y[i] < i or y[n - 1 - i] < i:\n                print('No')\n                pr = 0\n                break\n        if pr:\n            if n % 2 == 0:\n                if y[n // 2 - 1] == y[n // 2] and y[n // 2] == n // 2 - 1:\n                    print('No')\n                else:\n                    print('Yes')\n            elif y[n // 2] >= n // 2:\n                print('Yes')\n            else:\n                print('No')", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        N = int(input())\n        A = [int(x) for x in input().split()]\n        r1 = [False] * N\n        r2 = [False] * N\n        for (i, a) in enumerate(A):\n            if a >= i:\n                r1[i] = True\n            else:\n                break\n        for (i, a) in enumerate(reversed(A)):\n            if a >= i:\n                r2[-i - 1] = True\n            else:\n                break\n        f = False\n        for i in range(N):\n            if r1[i] and r2[i]:\n                f = True\n                break\n        if f:\n            print('Yes')\n        else:\n            print('No')\nmain()", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        if a[i] < i and a[i] < n - i - 1:\n            print('No')\n            break\n    else:\n        if n % 2 == 0 and a[n // 2] == n // 2 - 1 and (a[n // 2 - 1] == n // 2 - 1):\n            print('No')\n        else:\n            print('Yes')", "for i in range(int(input())):\n    q = int(input())\n    w = list(map(int, input().split()))\n    e = w[::-1].copy()\n    l = 0\n    for i in range(q // 2 if q % 2 == 0 else q // 2 + 1):\n        if w[i] >= i and e[i] >= i:\n            if i == q // 2 - 1 and q % 2 == 0:\n                if w[i] == i and e[i] == i:\n                    l = 0\n                    break\n            l = 1\n        else:\n            l = 0\n            break\n    if l == 0:\n        print('No')\n    else:\n        print('Yes')", "def can_be_sharpened(array):\n    upper = -1\n    lower = -1\n    size = len(array)\n    if size == 1:\n        return 'Yes'\n    for i in range(size):\n        if upper == -1 and i > array[i]:\n            upper = i - 1\n    for i in range(size - 1, -1, -1):\n        val = size - 1 - i\n        if lower == -1 and val > array[i]:\n            lower = i + 1\n    if lower == -1 or upper == -1:\n        return 'Yes'\n    if upper < lower:\n        return 'No'\n    return 'Yes'\nans = []\nn = int(input())\nfor i in range(n):\n    _ = input()\n    array = list(map(int, input().split()))\n    ans.append(can_be_sharpened(array))\nfor i in range(n):\n    print(ans[i])", "I = input\nfor _ in [0] * int(I()):\n    i = 0\n    n = int(I())\n    a = (*map(int, I().split()), -2)\n    while a[i] >= i:\n        i += 1\n    while a[i - 1] >= n - i:\n        i += 1\n    print('YNeos'[i < n::2])", "I = input\nfor _ in [0] * int(I()):\n    i = 0\n    j = int(I())\n    a = (*map(int, I().split()), -2)\n    while a[i] >= i:\n        i += 1\n    while a[i - 1] >= j - i:\n        i += 1\n    print('YNeos'[i < j::2])", "def builder(n, lst):\n    (pref, suf) = (-1, n)\n    for i in range(n):\n        if lst[i] < i:\n            break\n        pref = i\n    for i in range(n - 1, -1, -1):\n        if lst[i] < n - 1 - i:\n            break\n        suf = i\n    return 'Yes' if suf <= pref else 'No'\nfor _ in range(int(input())):\n    m = int(input())\n    a = [int(i) for i in input().split()]\n    print(builder(m, a))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    while i < n and a[i] >= i:\n        i += 1\n    if i == n:\n        print('Yes')\n        continue\n    i -= 1\n    j = n - 1\n    while j >= 0 and a[j] >= n - j - 1:\n        j -= 1\n    if j < i:\n        print('Yes')\n    else:\n        print('No')", "t = int(input())\nfor you in range(t):\n    n = int(input())\n    l = input().split()\n    li = [int(i) for i in l]\n    count = 0\n    poss = 1\n    for i in range(n):\n        if li[i] >= i:\n            count += 1\n        else:\n            for j in range(i, n):\n                if li[j] < n - 1 - j:\n                    poss = 0\n                    break\n            if n - i - 1 >= li[i - 1]:\n                poss = 0\n            break\n    if poss:\n        print('Yes')\n    else:\n        print('No')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    f = 0\n    if n > 2:\n        if n % 2 == 0:\n            for i in range(n // 2):\n                if i != n // 2 - 1:\n                    if l[i] < i or l[n - i - 1] < i:\n                        f = 1\n                        break\n                else:\n                    k = max(l[i], l[n - 1 - i])\n                    k1 = min(l[i], l[n - i - 1])\n                    m1 = min(i, n - i - 1)\n                    m = max(i, n - i - 1)\n                    if k < m or k1 < m1:\n                        f = 1\n                        break\n        elif l[n // 2] >= n // 2:\n            for i in range(n // 2):\n                if l[i] < i or l[n - i - 1] < i:\n                    f = 1\n                    break\n        else:\n            f = 1\n    elif n == 2:\n        if l[0] == 0 and l[1] == 0:\n            f = 1\n    if f == 0:\n        print('Yes')\n    else:\n        print('No')", "def solution(n, a):\n    (left, right) = (0, 0)\n    for (i, x) in enumerate(a):\n        left = i\n        if i > x:\n            break\n        if i == n - 1:\n            return 'Yes'\n    for (i, x) in enumerate(a[::-1]):\n        right = i\n        if i > x:\n            break\n        if i == n - 1:\n            return 'Yes'\n    if left + right <= n:\n        return 'No'\n    else:\n        return 'Yes'\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    print(solution(n, a))", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    while i < n and a[i] >= i:\n        i += 1\n    j = n - 1\n    while j >= 0 and a[j] >= n - 1 - j:\n        j -= 1\n    if i > j + 1:\n        print('Yes')\n    else:\n        print('No')", "caseNumber = int(input())\nwhile caseNumber != 0:\n    arraySize = int(input())\n    array = input().split(' ')\n    positionCount = 0\n    middlePosition = int(arraySize / 2) - 1\n    Pass = True\n    if arraySize % 2 == 0:\n        if int(array[middlePosition]) < middlePosition + 1 and int(array[middlePosition + 1]) < middlePosition + 1:\n            Pass = False\n    for digit in array:\n        digit = int(digit)\n        reversePositionCount = arraySize - 1 - positionCount\n        if reversePositionCount < positionCount:\n            relativePosition = reversePositionCount\n        else:\n            relativePosition = positionCount\n        if digit < relativePosition:\n            Pass = False\n            break\n        positionCount = positionCount + 1\n    if Pass == True:\n        print('Yes')\n    else:\n        print('No')\n    caseNumber = caseNumber - 1", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    asc = 0\n    while asc < n and a[asc] >= asc:\n        asc += 1\n    desc = asc - 1\n    while desc < n and a[desc] >= n - desc - 1:\n        desc += 1\n    if asc == n or desc == n:\n        print('Yes')\n    else:\n        print('No')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    p = -1\n    f = 0\n    for i in range(n):\n        if l[i] < i:\n            p = i\n            break\n    if p > 0:\n        for j in range(p - 1, n):\n            if l[j] < n - 1 - j:\n                f = 1\n                break\n    if f == 1:\n        print('No')\n    else:\n        print('Yes')", "kl = int(input())\nfor l in range(kl):\n    n = int(input())\n    s = [int(i) for i in input().split()]\n    pr = 1\n    if n == 1:\n        print('Yes')\n        continue\n    for i in range(n // 2):\n        if s[i] < i or s[n - 1 - i] < i:\n            print('No')\n            pr = 0\n            break\n    if pr:\n        if n % 2 == 0:\n            if s[n // 2 - 1] == s[n // 2] and s[n // 2] == n // 2 - 1:\n                print('No')\n            else:\n                print('Yes')\n        elif s[n // 2] >= n // 2:\n            print('Yes')\n        else:\n            print('No')", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(c) for c in input().split()]\n    increasing = True\n    res = 'Yes'\n    for i in range(n):\n        if increasing:\n            if a[i] >= i:\n                continue\n            else:\n                increasing = False\n                if a[i] >= n - 1 - i and a[i - 1] >= max(i - 1, n - i):\n                    continue\n                else:\n                    res = 'No'\n                    break\n        elif a[i] >= n - 1 - i:\n            continue\n        else:\n            res = 'No'\n            break\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    left = -1\n    for i in range(n):\n        if arr[i] >= i:\n            left = i\n        else:\n            break\n    if left == n - 1:\n        print('Yes')\n        continue\n    right = -1\n    for i in range(n - 1, -1, -1):\n        if arr[i] >= n - 1 - i:\n            right = i\n        else:\n            break\n    if right <= left:\n        print('Yes')\n    else:\n        print('No')", "for _ in range(int(input())):\n    s = int(input())\n    arr = list(map(int, input().split()))\n    l = s\n    r = s\n    for i in range(s):\n        if i > arr[i] and l == s:\n            l = i\n    arr.reverse()\n    for i in range(s):\n        if i > arr[i] and r == s:\n            r = i\n    if s - l - r >= 0:\n        print('No')\n    else:\n        print('Yes')", "def ebne(n, arr):\n    pre = -1\n    suff = n\n    i = 0\n    while i < n:\n        if arr[i] < i:\n            break\n        i += 1\n    pre = i - 1\n    j = n - 1\n    while j > -1:\n        if arr[j] < n - 1 - j:\n            break\n        j -= 1\n    suff = j + 1\n    if pre >= suff:\n        return 'Yes'\n    return 'No'\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = list(map(int, input().strip().split()))\n    print(ebne(n, s))", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    while i < n and a[i] >= i:\n        i += 1\n    j = n - 1\n    while j >= 0 and a[j] >= n - 1 - j:\n        j -= 1\n    if i > j + 1:\n        print('Yes')\n    else:\n        print('No')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    pref_poss = n\n    suf_poss = 0\n    for i in range(n):\n        if arr[i] >= i:\n            pref_poss = i\n        else:\n            break\n    for i in range(n - 1, -1, -1):\n        if arr[i] >= n - 1 - i:\n            suf_poss = i\n        else:\n            break\n    if pref_poss >= suf_poss:\n        print('Yes')\n    else:\n        print('No')", "import sys\n\ndef sharpen(s, n):\n    i = min([n] + [i for i in range(n) if s[i] < i])\n    j = max([-1] + [i for i in range(n) if s[i] < n - 1 - i])\n    if i == n or j == -1:\n        return 'Yes'\n    if i - 1 < j + 1:\n        return 'No'\n    else:\n        return 'Yes'\nfor _ in range(int(input())):\n    n = int(sys.stdin.readline().split()[0])\n    s = list(map(int, sys.stdin.readline().split()))\n    print(sharpen(s, n))", "def sharpened(a):\n    n = len(a)\n    l = 0\n    r = n - 1\n    for i in range(n):\n        if a[i] >= i:\n            l = i\n            continue\n        else:\n            break\n    for j in range(n - 1, -1, -1):\n        if a[j] >= n - j - 1:\n            r = j\n            continue\n        else:\n            break\n    if l >= r:\n        return 'Yes'\n    return 'No'\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(s) for s in input().split(' ')]\n    print(sharpened(a))", "def solve(l, n):\n    i = 0\n    j = n - 1\n    mmin = 0\n    while i <= j:\n        if i + 1 == j and l[i] == l[j] and (l[j] == mmin):\n            return 'No'\n        temp = [i, j]\n        if l[i] >= mmin:\n            i += 1\n        if l[j] >= mmin:\n            j -= 1\n        if temp == [i, j]:\n            return 'No'\n        mmin += 1\n    return 'Yes'\nfor t in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    print(solve(l, n))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    afind = float('inf')\n    for i in range(n):\n        if a[i] - i < 0:\n            afind = i - 1\n            break\n    if afind != float('inf'):\n        ab = a[afind:][::-1]\n        ans = 'Yes'\n        for i in range(len(ab)):\n            if ab[i] - i < 0:\n                ans = 'No'\n                break\n        print(ans)\n    else:\n        print('Yes')", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    i = 0\n    while i < n:\n        if ar[i] >= i:\n            i += 1\n            continue\n        else:\n            break\n    k = i - 1\n    if k == n - 1:\n        print('Yes')\n        continue\n    j = n - 1\n    while j >= k:\n        if ar[j] >= n - j - 1:\n            j -= 1\n            continue\n        else:\n            break\n    if j != k - 1:\n        print('No')\n    else:\n        print('Yes')", "tt = int(input())\nwhile tt > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    i = 0\n    possible = True\n    while i < n:\n        if arr[i] < i:\n            break\n        i += 1\n    val = arr[i - 1] - 1\n    for j in range(i, n):\n        val = min(val, arr[j])\n        if val < 0:\n            possible = False\n            break\n        val -= 1\n    if possible:\n        print('Yes')\n    else:\n        print('No')\n    tt -= 1", "def c(n, a):\n    for i in range(n):\n        if a[i] < i:\n            return i\n    return n\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    cntl = c(n, a)\n    cntr = n - 1 - c(n, a[::-1])\n    if cntl <= cntr or cntl - cntr == 1:\n        print('No')\n    else:\n        print('Yes')", "t = int(input())\nfor t0 in range(t):\n    n = int(input())\n    list1 = input().split(' ')\n    j1 = True\n    j2 = True\n    j3 = True\n    if n == 1:\n        print('Yes')\n    elif n % 2 == 1:\n        n1 = int((n + 1) / 2)\n        n2 = int(-n1)\n        for n0 in range(0, n1):\n            if int(list1[n0]) < n0:\n                j1 = False\n        for n0 in range(n2, 0):\n            if int(list1[n0]) < -n0 - 1:\n                j2 = False\n        if j1 == True and j2 == True:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        n1 = int(n / 2)\n        n2 = int(-n / 2)\n        n3 = int(n / 2 - 1)\n        for n0 in range(0, n1):\n            if int(list1[n0]) < n0:\n                j1 = False\n        for n0 in range(n2, 0):\n            if int(list1[n0]) < -n0 - 1:\n                j2 = False\n        if int(list1[n3]) == n3 and int(list1[n1]) == n3:\n            j3 = False\n        if j1 == True and j2 == True and (j3 == True):\n            print('Yes')\n        else:\n            print('No')", "cases = int(input())\nfor _ in range(cases):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    left = 0\n    right = 0\n    for a in nums:\n        if a < left:\n            break\n        left += 1\n    for a in nums[::-1]:\n        if a < right:\n            break\n        right += 1\n    if left + right <= n:\n        print('No')\n    else:\n        print('Yes')", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    if N % 2:\n        X = [i if i < N // 2 else N - i - 1 for i in range(N)]\n        if all((a >= x for (a, x) in zip(A, X))):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        X = [i if i < N // 2 + 1 else N - i - 1 for i in range(N)]\n        if all((a >= x for (a, x) in zip(A, X))):\n            print('Yes')\n            continue\n        (X[N // 2 - 1], X[N // 2]) = (X[N // 2], X[N // 2 - 1])\n        if all((a >= x for (a, x) in zip(A, X))):\n            print('Yes')\n        else:\n            print('No')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    limit = 0\n    if len(a) == 1:\n        print('Yes')\n    else:\n        for i in range(0, len(a)):\n            elem = a[i]\n            if elem < limit:\n                limit = a[i - 1] - 1\n                break\n            else:\n                limit += 1\n        else:\n            print('Yes')\n            continue\n        for j in range(i, len(a)):\n            if limit < 0:\n                print('No')\n                break\n            elem = a[j]\n            if elem < limit:\n                limit = elem\n            limit -= 1\n        else:\n            print('Yes')", "n = int(input())\nfor _ in range(n):\n    b = int(input())\n    arr = list(map(int, input().split()))\n    q = -1\n    p = b + 1\n    for i in range(b):\n        if arr[i] < i:\n            p = i\n            break\n    for i in range(b):\n        if arr[b - 1 - i] < i:\n            q = b - 1 - i\n            break\n    if q < p - 1:\n        print('Yes')\n    else:\n        print('No')", "for _ in range(int(input())):\n    n = input()\n    num = list(map(int, input().split()))\n    chk = 0\n    i = 0\n    j = len(num) - 1\n    check = False\n    while True:\n        if i > j:\n            check = True\n            break\n        if i + 1 == j:\n            if num[i] >= chk and num[j] >= chk + 1 or (num[i] >= chk + 1 and num[j] >= chk):\n                check = True\n            break\n        if num[i] >= chk and num[j] >= chk:\n            chk += 1\n            i += 1\n            j -= 1\n            continue\n        break\n    if check:\n        print('Yes')\n    else:\n        print('No')", "t = int(input())\nfor testo in range(t):\n    n = int(input())\n    array = list(map(int, input().split(' ')))\n    start = n\n    end = 0\n    for i in range(0, n):\n        if i > array[i]:\n            start = i - 1\n            break\n    for i in range(0, n):\n        if i > array[n - i - 1]:\n            end = n - i\n            break\n    if start >= end:\n        print('Yes')\n    else:\n        print('No')", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    while i != len(a) and a[i] >= i:\n        i += 1\n    if i == len(a):\n        print('Yes')\n    else:\n        i2 = i\n        i = len(a) - i - 1\n        if i >= a[i2 - 1]:\n            print('No')\n        else:\n            while i2 != len(a) and a[i2] >= i and (i >= 0):\n                i -= 1\n                i2 += 1\n            if i2 == len(a):\n                print('Yes')\n            else:\n                print('No')", "def solve(n, a):\n    i = 0\n    j = len(a) - 1\n    while i <= n - 1:\n        if a[i] >= i:\n            i += 1\n        else:\n            i -= 1\n            break\n    while j >= 0:\n        if a[j] >= len(a) - 1 - j:\n            j -= 1\n        else:\n            j += 1\n            break\n    if i == n - 1 or j == 0 or i - j >= 0:\n        return 'Yes'\n    return 'No'\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        print(solve(n, a))\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    if n == 1:\n        print('Yes')\n    else:\n        (inc, dec) = (-1, n)\n        for i in range(n):\n            if li[i] < i:\n                break\n            inc = i\n        for i in range(n - 1, -1, -1):\n            if li[i] < n - 1 - i:\n                break\n            dec = i\n        print('Yes') if dec <= inc else print('No')", "caseNum = int(input())\narrays = []\nfor i in range(caseNum):\n    arrayLength = int(input())\n    newArray = [int(n) for n in input().split()]\n    arrays.append(newArray)\nfor i in range(len(arrays)):\n    limit = 0\n    sharpen = True\n    increase = True\n    for j in range(len(arrays[i])):\n        if arrays[i][j] < limit:\n            newLimit = len(arrays[i]) - j - 1\n            if increase == False or arrays[i][j - 1] <= newLimit:\n                sharpen = False\n                break\n            increase = False\n            limit = newLimit\n            if arrays[i][j] < limit:\n                sharpen = False\n                break\n        if increase:\n            limit += 1\n        else:\n            limit -= 1\n    if sharpen:\n        print('Yes')\n    else:\n        print('No')", "import sys\n\ndef solve():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    i = 0\n    while i < n and a[i] >= i:\n        i += 1\n    j = n - 1\n    while j >= 0 and a[j] >= n - 1 - j:\n        j -= 1\n    if i > j + 1:\n        print('Yes')\n    else:\n        print('No')\n\ndef main():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        solve()\nmain()", "for _ in ' ' * int(input()):\n    a = int(input())\n    b = list(map(int, input().split()))\n    k = 0\n    k1 = 0\n    for i in range(a):\n        if b[i] < i:\n            break\n        k = i\n    for i in range(a - 1, -1, -1):\n        if b[i] < a - i - 1:\n            break\n        k1 = i\n    if k1 <= k:\n        print('Yes')\n    else:\n        print('No')", "for _ in range(int(input())):\n    i = int(input())\n    l = list(map(int, input().split()))\n    y = 0\n    x = i - 1\n    while y < i:\n        if l[y] < y:\n            y -= 1\n            break\n        else:\n            y += 1\n    while x > -1:\n        if l[x] < i - x - 1:\n            x += 1\n            break\n        else:\n            x -= 1\n    print('Yes' if y >= x else 'No')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = 0\n    while l < n and a[l] >= l:\n        l += 1\n    r = n\n    while r > 0 and a[r - 1] >= n - r:\n        r -= 1\n    print(l > r and 'Yes' or 'No')", "num_t = int(input())\nfor _ in range(num_t):\n    input()\n    arr = [int(i) for i in input().split()]\n    for i in range(len(arr)):\n        if arr[i] < i:\n            break\n    else:\n        print('Yes')\n        continue\n    for j in range(len(arr) - 1, -1, -1):\n        if arr[j] < len(arr) - 1 - j:\n            break\n    else:\n        print('Yes')\n        continue\n    if i - 1 >= j + 1:\n        print('Yes')\n    else:\n        print('No')", "test = int(input())\nfor times in range(test):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    prefix = -1\n    suffix = n\n    for i in range(n):\n        if arr[i] < i:\n            break\n        prefix = i\n    for i in range(n - 1, -1, -1):\n        if arr[i] < n - 1 - i:\n            break\n        suffix = i\n    if suffix <= prefix:\n        print('Yes')\n    else:\n        print('No')", "def solve(L, N):\n    first = N\n    last = -1\n    for i in range(N):\n        if L[i] < i:\n            first = i\n            break\n    for i in range(N - 1, -1, -1):\n        if L[i] < N - i - 1:\n            last = i\n            break\n    if last >= first:\n        print('No')\n        return\n    for i in range(N):\n        if L[i] >= i and L[i] >= N - i - 1 and (i < first) and (i > last):\n            print('Yes')\n            return\n    print('No')\nt = int(input())\nfor cnt in range(t):\n    N = int(input())\n    L = list(map(int, input().split()))\n    solve(L, N)", "t = int(input())\nfor _ in range(t):\n    N = int(input())\n    a = list(map(int, input().split()))\n    flag = True\n    id = 0\n    for i in range(N):\n        if a[i] >= i:\n            if i == N - 1:\n                id = i + 1\n        else:\n            id = i\n            break\n    for i in range(id, N):\n        if a[i - 1] > a[i]:\n            continue\n        else:\n            a[i] = a[i - 1] - 1\n            if a[i] < 0:\n                flag = False\n                break\n    if flag:\n        print('Yes')\n    else:\n        print('No')"]