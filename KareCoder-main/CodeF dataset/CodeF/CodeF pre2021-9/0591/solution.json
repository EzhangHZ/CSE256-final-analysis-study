["for _ in range(int(input())):\n    n = int(input())\n    stones = list(map(int, input().split()))\n    stones.sort()\n    if stones[-1] > sum(stones[:-1]) or n == 1 or sum(stones) % 2 == 1:\n        print('T')\n    else:\n        print('HL')", "for _ in range(int(input())):\n    input()\n    a = list(map(int, input().split()))\n    print('T' if max(a) * 2 > sum(a) or sum(a) % 2 == 1 else 'HL')", "K = int(input())\nwhile K:\n    k = int(input())\n    aa = list(map(int, input().split(' ')))\n    Ma = max(aa)\n    Su = sum(aa)\n    if Ma * 2 > Su or Su % 2 == 1:\n        print('T')\n    else:\n        print('HL')\n    K -= 1", "t = int(input())\n\ndef slv():\n    n = int(input())\n    a = list(map(int, input().split()))\n    sm = sum(a)\n    mx = max(a)\n    if mx > sm - mx:\n        print('T')\n        return\n    if sm & 1:\n        print('T')\n    else:\n        print('HL')\n    return\nfor i in range(t):\n    slv()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    suma = 0\n    winner = 0\n    a = list(map(int, input().split()))\n    suma = sum(a)\n    for i in range(n):\n        winner = max(a[i], winner)\n    if winner > suma / 2 or suma % 2:\n        print('T')\n    else:\n        print('HL')", "def stoned(arr):\n    s = sum(arr)\n    if max(arr) > s // 2:\n        return 'T'\n    if s % 2 == 0:\n        return 'HL'\n    else:\n        return 'T'\nfor i in range(int(input())):\n    a = input()\n    lst = list(map(int, input().strip().split()))\n    print(stoned(lst))", "def solve():\n    return\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    maxx = max(arr)\n    suum = sum(arr)\n    if suum % 2 != 0 or maxx > suum - maxx:\n        print('T')\n    else:\n        print('HL')", "testCases = int(input())\nwinner = 'HL'\nfor x in range(testCases):\n    numberOfPiles = int(input())\n    piles = list(map(int, input().split()))\n    total = sum(piles)\n    if total % 2 == 1:\n        winner = 'T'\n    else:\n        for y in piles:\n            if y > total // 2:\n                winner = 'T'\n                break\n    print(winner)\n    winner = 'HL'", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    maxPile = max(a)\n    numStones = sum(a)\n    if maxPile * 2 > numStones or numStones & 1:\n        print('T')\n    else:\n        print('HL')", "import sys\nT = int(input())\nfor i in range(T):\n    n = input()\n    arr = [int(x) for x in input().split()]\n    maks = max(arr)\n    jumlah = sum(arr) - max(arr)\n    if maks > jumlah:\n        print('T')\n    else:\n        print('T' if (maks + jumlah) % 2 == 1 else 'HL')", "for s in [*open(0)][2::2]:\n    s = sum((a := [*map(int, s.split())]))\n    print('HTL'[s < 2 * max(map(int, a)) or s % 2::2])", "for s in [*open(0)][2::2]:\n    s = sum((a := [*map(int, s.split())]))\n    print('HTL'[s < 2 * max(map(int, a)) or s % 2::2])", "import random\nimport datetime\nimport itertools\nTC = int(input())\nfor tc in range(TC):\n    p = int(input())\n    piles = list(map(int, input().split()))\n    mx = max(piles)\n    s = sum(piles)\n    if mx > s - mx or s % 2 == 1:\n        print('T')\n    else:\n        print('HL')", "def L1():\n    t = int(input())\n    ans = []\n    for j in range(t):\n        piles = int(input())\n        n = [int(i) for i in input().split()]\n        s = int(sum(n) / 2)\n        for i in range(piles):\n            if n[i] > s:\n                ans.append('T')\n                break\n        while len(ans) < j + 1:\n            if sum(n) % 2 == 0:\n                ans.append('HL')\n            else:\n                ans.append('T')\n    for i in ans:\n        print(i)\nL1()", "import math\nans = []\nfor test in range(int(input())):\n    num_of_piles = int(input())\n    piles = input()\n    piles = [int(x) for x in piles.split(' ')]\n    half_sum = math.floor(sum(piles) / 2)\n    winner = ''\n    for pile in piles:\n        if pile > half_sum:\n            winner = 'T'\n    if winner == '':\n        if sum(piles) % 2 != 0:\n            winner = 'T'\n        else:\n            winner = 'HL'\n    ans.append(winner)\nfor i in ans:\n    print(i)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    if max(l) > sum(l) - max(l):\n        print('T')\n    elif sum(l) % 2 == 0:\n        print('HL')\n    else:\n        print('T')", "testCases = int(input())\nfor i in range(testCases):\n    numPiles = int(input())\n    pile = list(map(int, input().split(' ')))\n    maxNumber = max(pile)\n    sumOfPile = sum(pile)\n    if numPiles == 1:\n        print('T')\n    elif numPiles == 2:\n        if pile[0] == pile[1]:\n            print('HL')\n        else:\n            print('T')\n    elif maxNumber > sumOfPile - maxNumber:\n        print('T')\n    elif sumOfPile % 2 == 1:\n        print('T')\n    else:\n        print('HL')", "t = int(input())\nans_arr = []\nfor i in range(t):\n    n = int(input())\n    a_list = list(map(int, input().split()))\n    max_value = max(a_list)\n    stone_inPile = sum(a_list)\n    if max_value * 2 > stone_inPile or stone_inPile & 1:\n        ans_arr.append('T')\n    else:\n        ans_arr.append('HL')\nfor j in ans_arr:\n    print(j)", "t = int(input())\na = []\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    mx = 0\n    sum = 0\n    for i in range(n):\n        if a[i] > mx:\n            mx = a[i]\n        sum += a[i]\n    if mx << 1 > sum:\n        print('T')\n    else:\n        print('T' if sum & 1 else 'HL')", "t = int(input())\narray = []\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    temp = 0\n    max_val = 0\n    array.clear()\n    temp_input = input().split(' ')\n    for i in range(len(temp_input)):\n        array.append(int(temp_input[i]))\n        max_val = max(max_val, array[i])\n        temp += array[i]\n    if n == 1:\n        print('T')\n    elif n == 2:\n        if array[0] == array[1]:\n            print('HL')\n        else:\n            print('T')\n    elif max_val > temp - max_val:\n        print('T')\n    elif temp % 2 == 1:\n        print('T')\n    else:\n        print('HL')", "t = int(input())\nfor i in range(t):\n    n = input()\n    arr = [int(x) for x in input().split()]\n    ma = max(arr)\n    k = sum(arr) - max(arr)\n    if ma > k:\n        print('T')\n    else:\n        print('T' if (ma + k) % 2 == 1 else 'HL')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sum(a) < 2 * max(a):\n        print('T')\n    else:\n        print('T' if sum(a) % 2 == 1 else 'HL')", "a = int(input())\nb = []\nc = []\nfor i in range(a):\n    b.append(int(input()))\n    c.append(list(map(int, input().split())))\nfor i in range(a):\n    if b[i] == 1:\n        print('T')\n    elif b[i] == 2:\n        if c[i][0] == c[i][1]:\n            print('HL')\n        else:\n            print('T')\n    elif max(c[i]) > sum(c[i]) / 2:\n        print('T')\n    elif sum(c[i]) % 2 == 0:\n        print('HL')\n    else:\n        print('T')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mx = max(a)\n    sm = sum(a)\n    if mx << 1 > sm:\n        print('T')\n    else:\n        print('T' if sm & 1 else 'HL')", "from collections import Counter\nfrom typing import *\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    (large, total) = (max(a), sum(a))\n    if large > total // 2:\n        print('T')\n    elif total % 2:\n        print('T')\n    else:\n        print('HL')", "t = int(input())\narr = []\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = 0\n    maxi = 0\n    arr.clear()\n    inpArr = input().split(' ')\n    for i in range(len(inpArr)):\n        arr.append(int(inpArr[i]))\n        maxi = max(maxi, arr[i])\n        a += arr[i]\n    if n == 1:\n        print('T')\n    elif n == 2:\n        if arr[0] == arr[1]:\n            print('HL')\n        else:\n            print('T')\n    elif maxi > a - maxi:\n        print('T')\n    elif a % 2 == 1:\n        print('T')\n    else:\n        print('HL')", "l = []\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    sum = 0\n    for i in range(n):\n        sum = sum + a[i]\n    if sum < 2 * m or sum % 2 == 1:\n        l.append('T')\n    else:\n        l.append('HL')\nfor i in l:\n    print(i)", "t = int(input())\nanswer = []\nfor test in range(t):\n    n = int(input())\n    liste = list(map(int, input().split(' ')))\n    S = sum(liste)\n    indicator = int(S / 2)\n    bool = False\n    for element in liste:\n        if element > indicator:\n            bool = True\n            break\n    if bool:\n        answer.append('T')\n    elif S % 2 == 0:\n        answer.append('HL')\n    else:\n        answer.append('T')\nprint('\\n'.join(answer))", "for w in range(eval(input())):\n    n = eval(input())\n    l = [int(i) for i in input().split()]\n    s = sum(l)\n    if max(l) * 2 > s or s % 2 == 1:\n        print('T')\n    else:\n        print('HL')", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    mas = list(map(int, input().split()))\n    if max(mas) > sum(mas) - max(mas):\n        print('T')\n    elif sum(mas) % 2 == 0:\n        print('HL')\n    else:\n        print('T')", "import sys\n\ndef main():\n    tn = int(input())\n    for ti in range(tn):\n        n = int(input())\n        A = [int(a) for a in input().split()]\n        ma = max(A)\n        sa = sum(A)\n        if ma > sa - ma or sa % 2 == 1:\n            print('T')\n        else:\n            print('HL')\nmain()", "for i in range(int(input())):\n    n = int(input())\n    piles = list(map(int, input().split()))\n    if sum(piles) < 2 * max(piles):\n        print('T')\n    elif sum(piles) % 2 == 0:\n        print('HL')\n    else:\n        print('T')", "import sys\ncases = True\n\ndef c2(n):\n    return n * (n - 1) // 2\n\ndef get():\n    return list(map(int, input().split()))\n\ndef bits(n: int):\n    return list(bin(n)).count('1')\n\ndef main(test_case=False):\n    n = int(input()) if test_case else 1\n    for _ in range(n):\n        test()\n\ndef flush():\n    sys.stdout.flush()\n\ndef parr(arr):\n    print(*arr, sep=' ')\n\ndef gcd(a, b):\n    while b:\n        if b % a == 0:\n            break\n        tmp = a\n        a = b % a\n        b = tmp\n    return a\n\ndef ext_gcd(a: int, b: int):\n    if b == 0:\n        return [a, [1, 0]]\n    res = ext_gcd(b, a % b)\n    g = res[0]\n    x1 = res[1][0]\n    y1 = res[1][1]\n    x = y1\n    y = x1 - y1 * (a // b)\n    return [g, [x, y]]\n\ndef test():\n    n = get()\n    a = sorted(get())\n    if 2 * a[-1] > sum(a):\n        print('T')\n    else:\n        print('T' if sum(a) % 2 else 'HL')\nmain(cases)", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if n == 1:\n        print('T')\n        continue\n    if n == 2:\n        if a[0] == a[1]:\n            print('HL')\n        else:\n            print('T')\n        continue\n    a.sort()\n    s = sum(a[:-1])\n    if a[-1] > s:\n        print('T')\n        continue\n    if a[-1] == s:\n        print('HL')\n        continue\n    s += a[-1]\n    s %= 2\n    print('T' if s else 'HL')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    l = sum(a[:-1])\n    if a[-1] > l:\n        print('T')\n    elif abs(l - a[-1]) % 2 == 0:\n        print('HL')\n    else:\n        print('T')", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    if n == 1:\n        print('T')\n    elif n == 2:\n        if a[0] == a[1]:\n            print('HL')\n        else:\n            print('T')\n    elif max(a) > sum(a) - max(a):\n        print('T')\n    else:\n        num = sum(a) - n\n        if num % 2 == 0 and n % 2 == 0:\n            print('HL')\n        elif num % 2 == 0 and n % 2 == 1:\n            print('T')\n        elif num % 2 == 1 and n % 2 == 0:\n            print('T')\n        elif num % 2 == 1 and n % 2 == 1:\n            print('HL')", "for q in range(int(input())):\n    n = int(input())\n    mas = list(map(int, input().split()))\n    if max(mas) > sum(mas) - max(mas):\n        print('T')\n    else:\n        print('HL') if sum(mas) % 2 == 0 else print('T')", "for i in range(int(input())):\n    n = int(input())\n    piles = list(map(int, input().split()))\n    if sum(piles) < 2 * max(piles):\n        print('T')\n    elif sum(piles) % 2 == 0:\n        print('HL')\n    else:\n        print('T')", "import math\nt = int(input())\nfor w in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    s = sum(l)\n    if max(l) * 2 > s:\n        print('T')\n    elif s % 2 == 0:\n        print('HL')\n    else:\n        print('T')", "for w in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    s = sum(l)\n    if max(l) * 2 > s:\n        print('T')\n    else:\n        print('HL') if s % 2 == 0 else print('T')", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    m = max(a)\n    s = sum(a) - max(a)\n    if m <= s and m % 2 == s % 2:\n        print('HL')\n    else:\n        print('T')", "for i in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    add = sum(a[:-1])\n    if a[-1] > add:\n        print('T')\n    else:\n        print(['HL', 'T'][(add + a[-1]) % 2])", "import heapq\n\ndef checkMax(pilesArr, n):\n    pilesArr.sort()\n    if pilesArr[-1] > sum(pilesArr[:-1]):\n        return 'T'\n    else:\n        pilesArrSum = sum(pilesArr)\n        if pilesArrSum % 2 == 0:\n            return 'HL'\n        return 'T'\ntestCases = input()\nfor i in range(int(testCases)):\n    numOfPiles = int(input())\n    pilesArr = list(map(int, input().split()))\n    ans = checkMax(pilesArr, numOfPiles)\n    print(ans)", "def checkMax(pilesArr, n):\n    pilesArr.sort()\n    pilesArrSum = sum(pilesArr)\n    if pilesArr[-1] > pilesArrSum - pilesArr[-1]:\n        return 'T'\n    else:\n        if pilesArrSum % 2 == 0:\n            return 'HL'\n        return 'T'\ntestCases = input()\nfor i in range(int(testCases)):\n    numOfPiles = int(input())\n    pilesArr = list(map(int, input().split()))\n    ans = checkMax(pilesArr, numOfPiles)\n    print(ans)", "import sys\ninput = iter(sys.stdin.read().splitlines()).__next__\n\ndef solve(N, A):\n    if N == 1:\n        return 'T'\n    s = sum(A)\n    m = max(A)\n    if m > s - m:\n        return 'T'\n    return 'T' if s % 2 == 1 else 'HL'\nTC = int(input())\nfor tc in range(TC):\n    N = int(input())\n    A = list(map(int, input().split()))\n    res = solve(N, A)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    m = max(a)\n    s = sum(a) - max(a)\n    if m <= s and m % 2 == s % 2:\n        print('HL')\n    else:\n        print('T')", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sum(a) % 2 or max(a) * 2 > sum(a):\n        print('T')\n    else:\n        print('HL')", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sum(a) % 2 or max(a) * 2 > sum(a):\n        print('T')\n    else:\n        print('HL')", "t = int(input())\nfor _ in range(t):\n    n = input()\n    a = [int(i) for i in input().split()]\n    maxi = max(a)\n    s = sum(a)\n    if s < 2 * maxi or s % 2 == 1:\n        print('T')\n    else:\n        print('HL')", "import sys\nsys.setrecursionlimit(10 ** 5)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef win():\n    if n == 1:\n        return True\n    if n == 2:\n        if aa[0] == aa[1]:\n            return False\n        return True\n    s = sum(aa)\n    if 2 * max(aa) > s or s % 2:\n        return True\n    return False\nfor _ in range(II()):\n    n = II()\n    aa = LI()\n    if win():\n        print('T')\n    else:\n        print('HL')", "for _ in range(int(input())):\n    (n, lst) = (int(input()), sorted(map(int, input().split(' '))))\n    print('T' if sum(lst) & 1 or n == 1 or lst[n - 1] > sum(lst) - lst[n - 1] else 'HL')", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    lst = list(map(int, input().split()))\n    max_ele = max(lst)\n    sum1 = sum(lst)\n    diff = sum1 - max_ele\n    if max_ele > sum1:\n        print('T')\n    elif diff >= max_ele and diff % 2 == max_ele % 2:\n        print('HL')\n    else:\n        print('T')", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    lst = list(map(int, input().split()))\n    max_ele = max(lst)\n    sum1 = sum(lst)\n    diff = sum1 - max_ele\n    if diff >= max_ele and diff % 2 == max_ele % 2:\n        print('HL')\n    else:\n        print('T')", "t = int(input())\nfor _ in range(t):\n    n = input()\n    a = [int(i) for i in input().split()]\n    maxi = max(a)\n    s = sum(a)\n    if s < 2 * maxi or s % 2 == 1:\n        print('T')\n    else:\n        print('HL')", "for T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    s = 0\n    for i in a:\n        s += i\n    if m > s - m or s & 1 or n == 1:\n        print('T')\n    else:\n        print('HL')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    s = sum(a)\n    if a[n - 1] * 2 > s or s % 2 == 1:\n        print('T')\n    elif s % 2 == 0:\n        print('HL')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    summ = sum(arr)\n    maxi = max(arr)\n    summ = summ - maxi\n    if summ >= maxi and summ % 2 == maxi % 2:\n        print('HL')\n    else:\n        print('T')", "T = int(input())\nfor t in range(1, T + 1):\n    N = int(input())\n    A = [int(s) for s in input().split()]\n    sumA = sum(A)\n    maxA = max(A)\n    if sumA % 2 == 1 or 2 * maxA > sumA:\n        print('T')\n    else:\n        print('HL')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    t = 0\n    hl = 0\n    if max(a) > sum(a) - max(a) or sum(a) % 2:\n        print('T')\n    else:\n        print('HL')", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = max(l)\n    s = sum(l)\n    if s % 2 or 2 * m > s:\n        print('T')\n    else:\n        print('HL')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print('T')\n    else:\n        s = sum(a)\n        m = max(a)\n        check = abs(s - m)\n        if check < m:\n            print('T')\n        elif s % 2 == 0:\n            print('HL')\n        else:\n            print('T')", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    total = sum(a)\n    maxi = max(a)\n    if maxi > total - maxi:\n        print('T')\n        continue\n    if total % 2 == 0:\n        print('HL')\n    else:\n        print('T')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    maxPile = max(a)\n    numStones = sum(a)\n    if maxPile * 2 > numStones or numStones & 1:\n        print('T')\n    else:\n        print('HL')", "for _ in range(int(input())):\n    n = int(input())\n    piles = list(map(int, input().split()))\n    if n == 1:\n        print('T')\n    else:\n        maxx = max(piles)\n        summ = sum(piles)\n        if maxx > summ - maxx:\n            print('T')\n        elif summ % 2 == 0:\n            print('HL')\n        else:\n            print('T')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    maxPile = max(a)\n    numStones = sum(a)\n    if maxPile * 2 > numStones or numStones % 2:\n        print('T')\n    else:\n        print('HL')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = sum(arr)\n    if s % 2 != 0:\n        print('T')\n    else:\n        falg = 0\n        for i in range(n):\n            if arr[i] > s // 2:\n                print('T')\n                falg = 1\n        if falg == 0:\n            print('HL')", "import sys\n\ndef rl(proc=None):\n    if proc is not None:\n        return proc(sys.stdin.readline())\n    else:\n        return sys.stdin.readline().rstrip()\n\ndef srl(proc=None):\n    if proc is not None:\n        return list(map(proc, rl().split()))\n    else:\n        return rl().split()\n\ndef solve(A):\n    tot = sum(A)\n    mx = max(A)\n    if mx > tot - mx:\n        return 0\n    if tot & 1:\n        return 0\n    return 1\n\ndef main():\n    t = rl(int)\n    for _ in range(t):\n        n = rl(int)\n        A = srl(int)\n        print('HL' if solve(A) else 'T')\nmain()", "for w in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    s = sum(l)\n    if max(l) * 2 > s:\n        print('T')\n    else:\n        print('HL') if s % 2 == 0 else print('T')", "from sys import stdin\n\nclass Input:\n\n    def __init__(self):\n        self.next = self.readline()\n\n    def readline(self):\n        return stdin.readline().strip()\n\n    def line(self):\n        try:\n            return self.next\n        finally:\n            self.next = self.readline()\n\n    def array(self, sep=' ', cast=int):\n        return list(map(cast, self.line().split(sep=sep)))\n\n    def known_tests(self):\n        (num_of_cases,) = self.array()\n        for case in range(num_of_cases):\n            yield self\n\n    def unknown_tests(self):\n        while self.next:\n            yield self\n\nclass Problem:\n\n    def __init__(self, input):\n        (n,) = input.array()\n        a = input.array()\n        s = sum(a)\n        m = max(a)\n        if n == 1:\n            print('T')\n        elif 2 * m > s:\n            print('T')\n        elif s % 2 == 0:\n            print('HL')\n        else:\n            print('T')\nfor tc in Input().known_tests():\n    Problem(tc)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ma = tot = 0\n    for i in range(n):\n        if arr[i] > ma:\n            ma = arr[i]\n        tot += arr[i]\n    if ma * 2 > tot:\n        print('T')\n    elif tot & 1:\n        print('T')\n    else:\n        print('HL')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(u) for u in input().split()]\n    s = 0\n    for i in a:\n        s += i\n    a.sort()\n    if a[-1] > s // 2:\n        print('T')\n    elif s % 2 == 0:\n        print('HL')\n    else:\n        print('T')", "def solve(testCase, pile, stone):\n    stone.sort(reverse=True)\n    player1 = 0\n    player2 = 0\n    sum = 0\n    for i in stone:\n        sum += int(i)\n    if 2 * int(stone[0]) > sum:\n        return 'T'\n    elif sum % 2 == 0:\n        return 'HL'\n    else:\n        return 'T'\ntestCase = int(input())\nwhile testCase:\n    testCase -= 1\n    pile = int(input())\n    stone = [int(x) for x in input().split()]\n    print(solve(testCase, pile, stone))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    maxPile = max(a)\n    numStones = sum(a)\n    if maxPile * 2 > numStones or numStones & 1:\n        print('T')\n    else:\n        print('HL')", "t = int(input())\na = []\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    mx = 0\n    sum = 0\n    for i in range(n):\n        if a[i] > mx:\n            mx = a[i]\n        sum += a[i]\n    if mx << 1 > sum:\n        print('T')\n    else:\n        print('T' if sum & 1 else 'HL')", "import math\n\ndef main():\n    n = int(input())\n    lst = list(map(int, input().split()))\n    if n == 1:\n        print('T')\n    elif n == 2:\n        if lst[0] == lst[1]:\n            print('HL')\n        else:\n            print('T')\n    else:\n        sm = 0\n        mx = 0\n        for i in lst:\n            sm += i\n            mx = max(i, mx)\n        if mx > sm - mx:\n            print('T')\n        elif sm % 2 == 0:\n            print('HL')\n        else:\n            print('T')\nt = int(input())\nfor i in range(t):\n    main()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    if sum(a[:-1]) < a[-1]:\n        print('T')\n    else:\n        xr = 0\n        for i in a:\n            xr ^= i\n        if xr % 2 == 0:\n            print('HL')\n        else:\n            print('T')", "import math\nimport itertools\n\ndef winner(piles, n):\n    if piles[-1] > sum(piles) - piles[-1]:\n        print('T')\n    elif sum(piles) % 2 == 0:\n        print('HL')\n    else:\n        print('T')\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    piles = sorted(list(map(int, input().split(' '))))\n    winner(piles, n)", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    s = sum(a)\n    val = s - 2 * a[-1]\n    if a[-1] > s - a[-1] or val % 2 == 1:\n        print('T')\n    else:\n        print('HL')", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    s = sum(a)\n    if n == 1 or s < 2 * m or s % 2 != 0:\n        print('T')\n    else:\n        print('HL')", "t = int(input())\nfor _ in range(t):\n    ok = False\n    n = int(input())\n    a = [int(s) for s in input().split(' ')]\n    if max(a) > sum(a) - max(a):\n        ok = True\n        print('T')\n    if not ok:\n        if sum(a) % 2 == 0:\n            print('HL')\n        else:\n            print('T')", "t = int(input())\na = []\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    mx = 0\n    sum = 0\n    for i in range(n):\n        if a[i] > mx:\n            mx = a[i]\n        sum += a[i]\n    if mx << 1 > sum:\n        print('T')\n    else:\n        print('T' if sum & 1 else 'HL')", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    arr.sort()\n    s = sum(arr)\n    if arr[n - 1] * 2 > s or s % 2:\n        print('T')\n    else:\n        print('HL')", "for _ in range(int(input())):\n    (n, lst, sam, man) = (int(input()), list(map(int, input().split(' '))), 0, 0)\n    for i in lst:\n        (sam, man) = (sam + i, max(man, i))\n    print('T' if sam & 1 or n == 1 or man > sam - man else 'HL')", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    (sum, maximum) = (0, 0)\n    for i in range(n):\n        sum += arr[i]\n        maximum = max(maximum, arr[i])\n    if maximum > sum - maximum:\n        print('T')\n    elif sum % 2 == 0:\n        print('HL')\n    else:\n        print('T')", "def game():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print('T')\n    elif n == 2:\n        if a[0] == a[1]:\n            print('HL')\n        else:\n            print('T')\n    elif sum(a) % 2 or max(a) * 2 > sum(a):\n        print('T')\n    else:\n        print('HL')\nfor _ in range(int(input())):\n    game()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    maxnum = max(a)\n    tot = sum(a)\n    if maxnum * 2 > tot or tot & 1:\n        print('T')\n    else:\n        print('HL')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    q = 0\n    for i in a:\n        count += i\n    for i in a:\n        if i > count // 2:\n            q = 1\n            print('T')\n            break\n    if q == 0:\n        if count % 2 == 0:\n            print('HL')\n        else:\n            print('T')", "for _ in range(int(input())):\n    cantidad = int(input())\n    pilas = list(map(int, input().split()))\n    pilaMasGrande = max(pilas)\n    rocas = sum(pilas)\n    if pilaMasGrande * 2 > rocas or rocas % 2 != 0:\n        print('T')\n    else:\n        print('HL')", "for w in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    s = sum(l)\n    if max(l) * 2 > s:\n        print('T')\n    else:\n        print('HL') if s % 2 == 0 else print('T')", "def f(list):\n    sum = 0\n    max = -1\n    ii = len(list)\n    if ii == 1:\n        return 1\n    for i in range(ii):\n        buff = int(list[i])\n        sum += buff\n        if buff > max:\n            max = buff\n    sum -= max\n    if max > sum:\n        return 1\n    elif max == sum:\n        return 0\n    else:\n        return (sum + max) % 2\nn = int(input())\nwhile n:\n    n -= 1\n    ip1 = int(input())\n    ip2 = input().split()\n    if f(ip2) == 0:\n        print('HL')\n    else:\n        print('T')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    maxPile = max(a)\n    numStones = sum(a)\n    if maxPile * 2 > numStones or numStones & 1:\n        print('T')\n    else:\n        print('HL')", "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush, heappop, heapify\nimport math\nfrom collections import *\nfrom functools import reduce, cmp_to_key\nimport sys\ninput = sys.stdin.readline\nfrom itertools import accumulate\nfrom functools import lru_cache\nM = mod = 998244353\n\ndef factors(n):\n    return sorted(set(reduce(list.__add__, ([i, n // i] for i in range(1, int(n ** 0.5) + 1) if n % i == 0))))\n\ndef inv_mod(n):\n    return pow(n, mod - 2, mod)\n\ndef li():\n    return [int(i) for i in input().rstrip('\\n').split()]\n\ndef st():\n    return input().rstrip('\\n')\n\ndef val():\n    return int(input().rstrip('\\n'))\n\ndef li2():\n    return [i for i in input().rstrip('\\n')]\n\ndef li3():\n    return [int(i) for i in input().rstrip('\\n')]\nsys.setrecursionlimit(10 ** 7)\nfor _ in range(val()):\n    n = val()\n    l = li()\n    ma = max(l)\n    s = sum(l)\n    print('T' if ma > s - ma else 'T' if s & 1 else 'HL')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print('T')\n    else:\n        s = sum(a)\n        if max(a) > s - max(a):\n            print('T')\n        elif s % 2 == 0:\n            print('HL')\n        else:\n            print('T')", "import heapq\nimport sys\n\ndef method1(n, piles):\n    if n == 1:\n        print('T')\n    elif sum(piles) % 2 == 0:\n        print('HL')\n    else:\n        print('T')\n\ndef method2(n, piles):\n    piles = [-x for x in piles]\n    turn = False\n    heapq.heapify(piles)\n    last = 0\n    while piles:\n        curr = heapq.heappop(piles)\n        if last:\n            heapq.heappush(piles, last)\n        last = curr + 1\n        turn = not turn\n    if turn:\n        print('T')\n    else:\n        print('HL')\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        piles = [int(x) for x in input().split()]\n        assert n == len(piles)\n        method2(n, piles)\nmain()", "for ad in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    l.reverse()\n    if n == 1:\n        print('T')\n        continue\n    elif n == 2:\n        if l[0] > l[1]:\n            print('T')\n        else:\n            print('HL')\n        continue\n    t = 0\n    i = 0\n    j = 0\n    while True:\n        l.sort(reverse=True)\n        if t == 0:\n            if l[0] > 0:\n                l[0] -= 1\n            else:\n                i = 1\n                break\n            if l[1] > 0:\n                l[1] -= 1\n            else:\n                j = 1\n                break\n    if i == 1:\n        print('HL')\n    else:\n        print('T')", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfrom heapq import heappush, heappop\nfor i in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    Q = []\n    for i in A:\n        heappush(Q, -i)\n    if n == 1:\n        print('T')\n        continue\n    a = -heappop(Q)\n    b = -heappop(Q)\n    w = -1\n    while len(Q) > 0:\n        c = -Q[0]\n        a -= b - c + 1\n        b -= b - c + 1\n        if c > a and c > b:\n            if a > 0:\n                heappush(Q, -a)\n            a = -heappop(Q)\n            if len(Q) == 0:\n                w = 0 if a > b else 1\n                break\n            if b > 0:\n                heappush(Q, -b)\n            b = -heappop(Q)\n        elif c > b:\n            if b > 0:\n                heappush(Q, -b)\n            b = -heappop(Q)\n    if a > b:\n        w = 1\n    else:\n        w = 0\n    print('T' if w == 1 else 'HL')", "import heapq\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [-int(x) for x in input().split()]\n    if n == 1:\n        print('T')\n    else:\n        heapq.heapify(a)\n        cnt = 0\n        while True:\n            cnt += 1\n            if cnt > 1:\n                last = temp\n            temp = heapq.heappop(a)\n            if cnt > 1:\n                heapq.heappush(a, last)\n            if temp == 0:\n                break\n            temp += 1\n        if cnt % 2:\n            print('HL')\n        else:\n            print('T')", "import sys\nimport math\nimport bisect\nfrom sys import stdin, stdout\nfrom math import gcd, floor, sqrt, log\nfrom collections import defaultdict as dd\nfrom bisect import bisect_left as bl, bisect_right as br\nimport heapq\nsys.setrecursionlimit(100000000)\nii = lambda : int(input())\nsi = lambda : input()\njn = lambda x, l: x.join(map(str, l))\nsl = lambda : list(map(str, input().strip()))\nmi = lambda : map(int, input().split())\nmif = lambda : map(float, input().split())\nlii = lambda : list(map(int, input().split()))\nceil = lambda x: int(x) if x == int(x) else int(x) + 1\nceildiv = lambda x, d: x // d if x % d == 0 else x // d + 1\nflush = lambda : stdout.flush()\nstdstr = lambda : stdin.readline()\nstdint = lambda : int(stdin.readline())\nstdpr = lambda x: stdout.write(str(x))\nmod = 1000000007\nfor _ in range(ii()):\n    n = ii()\n    arr = lii()\n    for i in range(n):\n        arr[i] = -arr[i]\n    heapq.heapify(arr)\n    while len(arr) > 0:\n        x = heapq.heappop(arr)\n        x += 1\n        flag = 0\n        if len(arr) > 0:\n            y = heapq.heappop(arr)\n            y += 1\n            flag = 1\n        if flag == 0:\n            break\n        if x < 0:\n            heapq.heappush(arr, x)\n        if y < 0:\n            heapq.heappush(arr, y)\n    if flag == 0:\n        print('T')\n    else:\n        print('HL')"]