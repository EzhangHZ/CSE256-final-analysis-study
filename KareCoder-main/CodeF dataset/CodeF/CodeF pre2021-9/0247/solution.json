["for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    list1 = []\n    list2 = []\n    for _ in range(n):\n        i = input().split()\n        list1.append(i)\n    for _ in range(m):\n        list2.append([l[_] for l in list1])\n    s1 = list1.count(['0' for q in range(m)])\n    s2 = list2.count(['0' for q in range(n)])\n    c = min(s1, s2)\n    if c % 2 == 0 or c == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "num_inp = lambda : int(input())\narr_inp = lambda : list(map(int, input().split()))\nsp_inp = lambda : map(int, input().split())\nstr_inp = lambda : input()\nI = input\nfor _ in [0] * int(I()):\n    (n, m) = map(int, I().split())\n    k = l = 0\n    for _ in [0] * n:\n        x = int(I()[::2], 2)\n        k += x < 1\n        l |= x\n    print('VAisvheiks h'[min(k, m - bin(l).count('1')) % 2::2])", "I = input\nfor _ in [0] * int(I()):\n    (n, m) = map(int, I().split())\n    k = l = 0\n    for _ in [0] * n:\n        x = int(I()[::2], 2)\n        k += x < 1\n        l |= x\n    print('VAisvheiks h'[min(k, m - bin(l).count('1')) % 2::2])", "I = input\nfor _ in [0] * int(I()):\n    (n, m) = map(int, I().split())\n    k = l = 0\n    for _ in [0] * n:\n        x = int(I()[::2], 2)\n        k += x < 1\n        l |= x\n    print('VAisvheiks h'[min(k, m - bin(l).count('1')) % 2::2])", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    l = []\n    for j in range(n):\n        a = list(map(int, input().split()))\n        l.append(a)\n    b = []\n    c1 = 0\n    c2 = 0\n    for j in l:\n        if 1 in j:\n            c1 = c1 + 1\n    for i in range(m):\n        for j in range(n):\n            if l[j][i] == 1:\n                c2 = c2 + 1\n                break\n    x = min(n - c1, m - c2)\n    if x % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "def matrix_game():\n    for _ in range(int(input())):\n        (n, m) = list(map(int, input().split()))\n        c = []\n        for __ in range(n):\n            c.append(list(map(int, input().split())))\n        rows = 0\n        columns = 0\n        for i in range(n):\n            ans = ''\n            for j in range(m):\n                x = c[i][j]\n                if c[i][j] == 0:\n                    ans = 'YES'\n                else:\n                    ans = 'NO'\n                    break\n            if ans == 'YES':\n                rows += 1\n        for i in range(m):\n            ans = ''\n            for j in range(n):\n                if c[j][i] == 0:\n                    ans = 'YES'\n                else:\n                    ans = 'NO'\n                    break\n            if ans == 'YES':\n                columns += 1\n        m = min(rows, columns)\n        if m % 2 == 0:\n            print('Vivek')\n        else:\n            print('Ashish')\nmatrix_game()", "import enum\nt = int(input())\nfor i in range(t):\n    (row, column) = list(map(int, input().split(' ')))\n    row_sum = [0] * row\n    column_sum = [0] * column\n    for r in range(row):\n        arr = list(map(int, input().split(' ')))\n        temp_sum = sum(arr)\n        if temp_sum > 0:\n            row_sum[r] = 1\n            for (idx, c) in enumerate(arr):\n                if c > 0:\n                    column_sum[idx] = 1\n    poss_row = [idx for (idx, value) in enumerate(row_sum) if value == 0]\n    poss_colum = [idx for (idx, value) in enumerate(column_sum) if value == 0]\n    poss = min(len(poss_colum), len(poss_row))\n    if poss % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "def solve(n, m, grid):\n    track_row = set()\n    track_col = set()\n    for i in range(n):\n        for j in range(m):\n            if grid[i][j] == '1':\n                track_row.add(i)\n                track_col.add(j)\n    min_moves_possible = min(n - len(track_row), m - len(track_col))\n    return 'Ashish' if min_moves_possible % 2 == 1 else 'Vivek'\nt = int(input())\nresults = list()\nfor _ in range(t):\n    (n, m) = map(int, input().split(' '))\n    grid = list()\n    for _ in range(n):\n        row = input().split(' ')\n        grid.append(row)\n    results.append(solve(n, m, grid))\nfor result in results:\n    print(result + ' ')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    M = []\n    p = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        M.append(a)\n        if 1 in a:\n            continue\n        else:\n            p += 1\n    k = m\n    for i in range(m):\n        for j in range(n):\n            if M[j][i] == 0:\n                continue\n            else:\n                k -= 1\n                break\n    ans = min(p, k)\n    if ans % 2 != 0:\n        print('Ashish')\n    else:\n        print('Vivek')", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    matrix = []\n    row = [0] * n\n    col = [0] * m\n    for i in range(n):\n        array = list(map(int, input().split()))\n        matrix.append(array)\n        for j in range(m):\n            if array[j] == 1:\n                row[i] = 1\n                col[j] = 1\n    mat = min(n - sum(row), m - sum(col))\n    if mat % 2 == 1:\n        print('Ashish')\n    else:\n        print('Vivek')", "list_ans = []\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    dict1 = {}\n    dict2 = {}\n    for i in range(n):\n        dict1[i] = 0\n    for i in range(m):\n        dict2[i] = 0\n    for i in range(n):\n        list1 = list(map(int, input().split()))\n        for x in range(m):\n            if list1[x] == 1:\n                dict1[i] = 1\n                dict2[x] = 1\n    a = n - sum(dict1.values())\n    b = m - sum(dict2.values())\n    s = min(a, b)\n    if s % 2 == 0:\n        list_ans.append('Vivek')\n    else:\n        list_ans.append('Ashish')\nfor item in list_ans:\n    print(item)", "import sys\ninput = sys.stdin.readline\n\ndef solve(grid):\n    (m, n) = (len(grid), len(grid[0]))\n    (free_rows, free_cols) = (0, 0)\n    for i in range(m):\n        free_rows += 1\n        for j in range(n):\n            if grid[i][j]:\n                free_rows -= 1\n                break\n    for j in range(n):\n        free_cols += 1\n        for i in range(m):\n            if grid[i][j]:\n                free_cols -= 1\n                break\n    r = min(free_rows, free_cols)\n    if r % 2 == 0:\n        return 'Vivek'\n    else:\n        return 'Ashish'\nN = int(input())\nfor ii in range(N):\n    (m, n) = map(int, input().split())\n    grid = []\n    for i in range(m):\n        grid.append(list(map(int, input().split())))\n    print(solve(grid))", "for t in range(int(input())):\n    lstcol = []\n    lstrow = []\n    (n, m) = map(int, input().split(' '))\n    for j in range(n):\n        lst = list(map(int, input().split(' ')))\n        if 1 in lst:\n            indices = [i for (i, x) in enumerate(lst) if x == 1]\n            lstrow.append(j)\n            for k in indices:\n                if k not in lstcol:\n                    lstcol.append(k)\n    f = min(n - len(lstrow), m - len(lstcol))\n    if f % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "x = int(input())\nfor _ in range(x):\n    (n, m) = map(int, input().split())\n    (rows, cols) = (set(), set())\n    for i in range(n):\n        a = list(map(int, input().split()))\n        for j in range(m):\n            if a[j] == 1:\n                rows.add(i)\n                cols.add(j)\n    x = min(n - len(rows), m - len(cols))\n    print('Ashish' if x % 2 == 1 else 'Vivek')", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    zero_cord = set()\n    one_cord = set()\n    for i in range(n):\n        a = list(map(int, input().split()))\n        for j in range(m):\n            if a[j] == 1:\n                one_cord.add(i)\n                zero_cord.add(j)\n    fr = n - len(one_cord)\n    sc = m - len(zero_cord)\n    if min(fr, sc) % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    grid = []\n    rowsEmpty = 0\n    collumsEmpty = 0\n    for i in range(n):\n        row = list(map(int, input().split()))\n        if 1 not in row:\n            rowsEmpty += 1\n        grid.append(row)\n    for i in range(m):\n        empty = True\n        for j in range(n):\n            if grid[j][i] == 1:\n                empty = False\n                break\n        if empty == True:\n            collumsEmpty += 1\n    if min(rowsEmpty, collumsEmpty) % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "t = int(input())\nfor i in range(t):\n    (n, m) = [int(_) for _ in input().split()]\n    N = [1] * n\n    M = [1] * m\n    for j in range(n):\n        list = [int(_) for _ in input().split()]\n        for k in range(m):\n            if list[k] == 1:\n                N[j] = 0\n                M[k] = 0\n    squares = min(sum(N), sum(M))\n    if squares % 2 == 1:\n        print('Ashish')\n    else:\n        print('Vivek')", "maxn = int(1000.0 + 7)\na = []\n\ndef h(n, m):\n    t = 0\n    for i in range(n):\n        j = 0\n        while j < m:\n            if a[i][j]:\n                break\n            j += 1\n        if j >= m:\n            t += 1\n    return t\n\ndef l(n, m):\n    t = 0\n    for j in range(m):\n        i = 0\n        while i < n:\n            if a[i][j]:\n                break\n            i += 1\n        if i >= n:\n            t += 1\n    return t\nfor cas in range(int(input())):\n    (n, m) = map(int, input().split())\n    a.clear()\n    for i in range(n):\n        b = list(map(int, input().split()))\n        a.append(b)\n    ans = l(n, m)\n    ans = min(ans, h(n, m))\n    if ans & 1:\n        print('Ashish')\n    else:\n        print('Vivek')", "def matrixGame(n, m, matrix):\n    blankX = []\n    blankY = []\n    for x in range(n):\n        flag = 0\n        for y in range(m):\n            if matrix[x][y] == 1:\n                flag = 1\n                break\n        if flag == 0:\n            blankX.append(x)\n    for y in range(m):\n        flag = 0\n        for x in range(n):\n            if matrix[x][y] == 1:\n                flag = 1\n                break\n        if flag == 0:\n            blankY.append(y)\n    p = min(len(blankY), len(blankX))\n    if p % 2 == 0:\n        return 'Vivek'\n    else:\n        return 'Ashish'\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    matrix = []\n    for x in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(matrixGame(n, m, matrix))", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    pole = [0 for j in range(m)]\n    ans = n\n    for j in range(n):\n        b = [int(k) for k in input().split()]\n        ans -= 1 if b.count(1) else 0\n        pole = [pole[j] or b[j] for j in range(m)]\n    ans = min(ans, pole.count(0))\n    print('Ashish' if ans % 2 else 'Vivek')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = [0] * m\n    c = n\n    for i in range(n):\n        w = list(map(int, input().split()))\n        if w.count(1):\n            c -= 1\n        d = [w[j] or d[j] for j in range(m)]\n    x = min(c, d.count(0))\n    print('Ashish' if x % 2 else 'Vivek')", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    matrix = []\n    row = [0] * n\n    col = [0] * m\n    for i in range(n):\n        r = list(map(int, input().split()))\n        matrix.append(r)\n    for i in range(n):\n        for j in range(m):\n            if matrix[i][j] == 1:\n                row[i] = col[j] = 1\n    total = min(n - sum(row), m - sum(col))\n    if total % 2 != 0:\n        print('Ashish')\n    else:\n        print('Vivek')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    b = []\n    s1 = 0\n    for i in range(n):\n        b.append(list(map(int, input().split())))\n    for j in b:\n        if sum(j) == 0:\n            s1 += 1\n    s2 = 0\n    for k in range(m):\n        h = 0\n        for l in range(n):\n            h += b[l][k]\n        if h == 0:\n            s2 += 1\n    if min(s1, s2) % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m) = map(int, input().split())\n    mat = [list(map(int, input().split())) for i in range(n)]\n    vis_row = [0] * n\n    vis_col = [0] * m\n    for i in range(n):\n        for j in range(m):\n            if mat[i][j] == 1:\n                vis_row[i] = 1\n                vis_col[j] = 1\n    cnt = 0\n    for i in range(n):\n        if vis_row[i] == 0:\n            for j in range(m):\n                if vis_col[j] == 0:\n                    cnt += 1\n                    vis_row[i] = 1\n                    vis_col[j] = 1\n                    break\n    if cnt % 2 != 0:\n        print('Ashish')\n    else:\n        print('Vivek')", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    zero_cord = set()\n    one_cord = set()\n    for i in range(n):\n        a = list(map(int, input().split()))\n        for j in range(m):\n            if a[j] == 1:\n                one_cord.add(i)\n                zero_cord.add(j)\n    fr = n - len(one_cord)\n    sc = m - len(zero_cord)\n    if min(fr, sc) % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    x = set()\n    y = set()\n    otv = 0\n    for i in range(n):\n        a = list(map(int, input().split()))\n        for j in range(m):\n            if a[j] == 1:\n                x.add(i)\n                y.add(j)\n    otv = min(n - len(x), m - len(y))\n    if otv % 2 != 0:\n        print('Ashish')\n    else:\n        print('Vivek')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    matrix = [[int(x) for x in input().split()] for j in range(n)]\n    freeRows = freeCols = 0\n    for i in range(n):\n        if 1 not in matrix[i]:\n            freeRows += 1\n    j = 0\n    for i in range(m):\n        for j in range(n):\n            if matrix[j][i] != 0:\n                freeCols += 1\n                break\n    freeCols = m - freeCols\n    if min(freeRows, freeCols) & 1:\n        print('Ashish')\n    else:\n        print('Vivek')", "import enum\nt = int(input())\nfor i in range(t):\n    (row, column) = list(map(int, input().split(' ')))\n    row_sum = [0] * row\n    column_sum = [0] * column\n    for r in range(row):\n        arr = list(map(int, input().split(' ')))\n        temp_sum = sum(arr)\n        if temp_sum > 0:\n            row_sum[r] = 1\n            for (idx, c) in enumerate(arr):\n                if c > 0:\n                    column_sum[idx] = 1\n    poss_row = [idx for (idx, value) in enumerate(row_sum) if value == 0]\n    poss_colum = [idx for (idx, value) in enumerate(column_sum) if value == 0]\n    poss = min(len(poss_colum), len(poss_row))\n    if poss % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "I = input\nfor _ in [0] * int(I()):\n    (p, m) = map(int, I().split())\n    k = l = 0\n    for _ in [0] * p:\n        x = int(I()[::2], 2)\n        k += x < 1\n        l |= x\n    print('VAisvheiks h'[min(k, m - bin(l).count('1')) % 2::2])", "arr = []\n\ndef sn(n, m):\n    s = 0\n    for i in range(n):\n        j = 0\n        while j < m:\n            if arr[i][j]:\n                break\n            j += 1\n        if j >= m:\n            s += 1\n    return s\n\ndef snl(n, m):\n    s = 0\n    for j in range(m):\n        i = 0\n        while i < n:\n            if arr[i][j]:\n                break\n            i += 1\n        if i >= n:\n            s += 1\n    return s\nn = int(input())\nfor i in range(n):\n    (n, m) = map(int, input().split())\n    arr.clear()\n    for i in range(n):\n        a = list(map(int, input().split()))\n        arr.append(a)\n    s = sn(n, m)\n    s = min(s, snl(n, m))\n    if s & 1:\n        print('Ashish')\n    else:\n        print('Vivek')", "List = []\nn = eval(input())\nfor i in range(n):\n    (a, b) = input().split()\n    a = int(a)\n    b = int(b)\n    for j in range(a):\n        mtline = input().split()\n        List.append(mtline)\n    getl = 0\n    for j in range(a):\n        if '1' not in List[j]:\n            getl += 1\n    getc = 0\n    for j in range(b):\n        for i in range(a):\n            if List[i][j] == '1':\n                break\n        else:\n            getc += 1\n    x = min(getc, getl)\n    if x % 2 == 1:\n        print('Ashish')\n    else:\n        print('Vivek')\n    List.clear()", "def answer(n, m, mat):\n    valid_rows = 0\n    for r in mat:\n        if 1 not in r:\n            valid_rows += 1\n    matt = [[mat[j][i] for j in range(n)] for i in range(m)]\n    valid_cols = 0\n    for c in matt:\n        if 1 not in c:\n            valid_cols += 1\n    valid_moves = min(valid_rows, valid_cols)\n    if valid_moves % 2 == 0:\n        return 'Vivek'\n    else:\n        return 'Ashish'\n\ndef main():\n    t = int(input())\n    n = [0] * t\n    m = [0] * t\n    mat = [0] * t\n    for j in range(t):\n        (n[j], m[j]) = [int(i) for i in input().split()]\n        mat[j] = [0] * n[j]\n        for i in range(n[j]):\n            mat[j][i] = [int(q) for q in input().split()]\n    for j in range(t):\n        print(answer(n[j], m[j], mat[j]))\nmain()", "t = int(input())\nfor p in range(t):\n    (n, m) = map(int, input().split())\n    r = []\n    c = []\n    ref1 = []\n    ref2 = []\n    for k in range(1, n + 1):\n        ref1.append(k)\n    for l in range(1, m + 1):\n        ref2.append(l)\n    i = 0\n    while i < n:\n        j = 0\n        a = input().split()\n        while j < m:\n            if a[j] == '1':\n                r.append(i + 1)\n                c.append(j + 1)\n            j += 1\n        i += 1\n    r = set(ref1) - set(r)\n    c = set(ref2) - set(c)\n    x = min(len(r), len(c))\n    if x % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "for i in range(int(input())):\n    (n, m) = [int(i) for i in input().split()]\n    l = []\n    count = 0\n    row = 0\n    for i in range(n):\n        k = [int(j) for j in input().split()]\n        if 1 not in k:\n            row += 1\n        l.append(k)\n    col = 0\n    for i in range(m):\n        flag = False\n        for j in range(n):\n            if l[j][i] == 1:\n                flag = True\n                break\n        if not flag:\n            col += 1\n    ans = min(row, col)\n    if ans % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "t = int(input())\ns = []\nfor i in range(t):\n    k = 0\n    x = list(map(int, input().split()))\n    n = x[0]\n    m = x[1]\n    indices1 = []\n    mylist = []\n    for j in range(n):\n        y = list(map(str, input().split()))\n        indices = [o for (o, z) in enumerate(y) if z == '1']\n        indices1.append(indices)\n        str1 = ' '\n        str1 = str1.join(y)\n        f = str1.find('1')\n        if f == -1:\n            k = k + 1\n    for o in indices1:\n        mylist.extend(o)\n    unique = list(dict.fromkeys(mylist))\n    l = len(unique)\n    l1 = m - l\n    l2 = min(l1, k)\n    if l2 % 2 == 0:\n        s.append('Vivek')\n    else:\n        s.append('Ashish')\nfor i in range(len(s)):\n    print(s[i])", "CASES = int(input())\nfor _ in range(CASES):\n    (m, n) = map(int, input().split())\n    available = min(m, n)\n    num_rows = 0\n    cols = set()\n    for i in range(m):\n        s = list(map(int, input().split()))\n        temp = 0\n        for j in range(len(s)):\n            if s[j] == 1:\n                cols.add(j)\n                temp = 1\n        num_rows += temp\n    num_cols = len(cols)\n    covered = max(num_rows, num_cols)\n    available = min(m - num_rows, n - num_cols)\n    if available % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "t = int(input())\nfor _ in range(t):\n    (n, m) = [int(i) for i in input().split()]\n    r = [0 for _ in range(n)]\n    c = [0 for _ in range(m)]\n    for i in range(n):\n        row = input().split()\n        for j in range(m):\n            if row[j] == '1':\n                r[i] = 1\n                c[j] = 1\n    if min(r.count(0), c.count(0)) % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    (w, l) = (set(), set())\n    for r in range(n):\n        for (y, x) in enumerate(map(int, input().split())):\n            if x == 1:\n                w.add(r)\n                l.add(y)\n    print(['Vivek', 'Ashish'][min(n - len(w), m - len(l)) % 2])", "x = int(input())\nfor _ in range(x):\n    (n, m) = map(int, input().split())\n    (rows, cols) = (set(), set())\n    for i in range(n):\n        a = list(map(int, input().split()))\n        for j in range(m):\n            if a[j] == 1:\n                rows.add(i)\n                cols.add(j)\n    x = min(n - len(rows), m - len(cols))\n    print('Ashish' if x % 2 == 1 else 'Vivek')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    row = [1 for i in range(n)]\n    col = [1 for j in range(m)]\n    for i in range(n):\n        arr = list(map(int, input().split()))\n        for j in range(m):\n            if arr[j] == 1:\n                row[i] = 0\n                col[j] = 0\n    ans = min(sum(row), sum(col))\n    print('Ashish' if ans % 2 else 'Vivek')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (row, col) = (set(), set())\n    for i in range(n):\n        a = list(map(int, input().split()))\n        for j in range(m):\n            if a[j] == 1:\n                row.add(i)\n                col.add(j)\n    d = min(n - len(row), m - len(col))\n    if d % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "import sys\ninput = lambda : sys.stdin.readline()\nint_arr = lambda : list(map(int, input().split()))\nstr_arr = lambda : list(map(str, input().split()))\nget_str = lambda : map(str, input().split())\nget_int = lambda : map(int, input().split())\nget_flo = lambda : map(float, input().split())\nmod = 1000000007\nfor _ in range(int(input())):\n    (n, m) = get_int()\n    (rd, cd) = ([False] * n, [False] * m)\n    for i in range(n):\n        arr = int_arr()\n        for j in range(m):\n            if arr[j] == 1:\n                rd[i] = True\n                cd[j] = True\n    c = min(rd.count(False), cd.count(False))\n    print(('Vivek', 'Ashish')[c % 2])", "def F():\n    (n, m) = map(int, input().split())\n    arr = []\n    brr = [0] * m\n    for i in range(n):\n        arr.append(list(map(int, input().split())))\n    for i in range(n):\n        v = True\n        for j in range(m):\n            if arr[i][j] and v:\n                v = False\n                n -= 1\n            if arr[i][j] == 1:\n                brr[j] = 1\n    m -= sum(brr)\n    print('Vivek' if min(n, m) % 2 == 0 else 'Ashish')\nfor i in range(int(input())):\n    F()", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    matrix = []\n    row = 0\n    col = 0\n    for i in range(n):\n        f = 0\n        c = list(map(int, input().split()))\n        for j in c:\n            if j == 1:\n                f = 1\n                break\n        if f == 0:\n            row += 1\n        matrix.append(c)\n    for i in range(m):\n        f = 0\n        for j in range(n):\n            if matrix[j][i] == 1:\n                f = 1\n                break\n        if f == 0:\n            col += 1\n    if min(row, col) % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (r, c) = (set(), set())\n    for i in range(n):\n        a = list(map(int, input().split()))\n        for j in range(m):\n            if a[j] == 1:\n                r.add(i)\n                c.add(j)\n    if min(n - len(r), m - len(c)) % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "t = int(input())\nfor _ in range(t):\n    inp = [int(x) for x in input().split()]\n    (n, m) = (inp[0], inp[1])\n    arr = []\n    rows = 0\n    for i in range(n):\n        row = [int(x) for x in input().split()]\n        arr.append(row)\n        if row.count(0) == m:\n            rows += 1\n    cols = 0\n    for i in range(m):\n        cnt = 0\n        for j in range(n):\n            if arr[j][i] == 0:\n                cnt += 1\n        if cnt == n:\n            cols += 1\n    if min(rows, cols) % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "t = int(input())\narr = []\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    l = []\n    (n1, m1) = (0, 0)\n    for _ in range(n):\n        l.append(input().split())\n    for i in range(n):\n        n1 += int(l[i].count('1') == 0)\n    for j in range(m):\n        c = 0\n        for i in range(n):\n            c += int(l[i][j])\n        if c == 0:\n            m1 += 1\n    res = min(n1, m1)\n    arr.append('Ashish' if res % 2 else 'Vivek')\nfor i in arr:\n    print(i)", "T = int(input())\nwhile T:\n    (n, m) = map(int, input().split())\n    arr = [[int(x) for x in input().split()] for i in range(n)]\n    arrT = [[arr[j][i] for j in range(n)] for i in range(m)]\n    row = []\n    col = []\n    for i in range(len(arr)):\n        if 1 not in arr[i]:\n            row.append(i)\n    for i in range(len(arrT)):\n        if 1 not in arrT[i]:\n            col.append(i)\n    if min(len(row), len(col)) % 2 != 0:\n        print('Ashish')\n    else:\n        print('Vivek')\n    T -= 1", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    (l, c) = ([0] * n, [0] * m)\n    for i in range(n):\n        v = list(map(int, input().split()))\n        l[i] |= max(v)\n        for j in range(m):\n            c[j] |= v[j]\n    print('Ashish' if min(n - sum(l), m - sum(c)) & 1 else 'Vivek')", "t = int(input())\nfor _ in range(t):\n    inp = input().split()\n    n = int(inp[0])\n    m = int(inp[1])\n    lst = []\n    for i in range(n):\n        ls = input().split()\n        lst.append(ls)\n    sm = [0 for i in range(m)]\n    nn = 0\n    for i in range(n):\n        if '1' not in lst[i]:\n            nn += 1\n        for j in range(m):\n            sm[j] += int(lst[i][j])\n    mm = sm.count(0)\n    if min(mm, nn) % 2 == 1:\n        print('Ashish')\n    else:\n        print('Vivek')", "def ip():\n    return int(input())\n\ndef sip():\n    return input()\n\ndef mip():\n    return map(int, input().split())\n\ndef lip():\n    return list(map(int, input().split()))\n\ndef matip(n, m):\n    lst = []\n    for i in range(n):\n        arr = lip()\n        lst.append(arr)\n    return lst\nt = ip()\nwhile t:\n    t -= 1\n    (n, m) = mip()\n    arr = matip(n, m)\n    row = col = 0\n    for i in range(n):\n        if arr[i].count(0) == m:\n            row += 1\n    for i in range(m):\n        p = 0\n        for j in range(n):\n            if arr[j][i] == 0:\n                p += 1\n        if p == n:\n            col += 1\n    if min(row, col) % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "I = input\nfor _ in range(int(I())):\n    (n, m) = map(int, I().split())\n    (sn, sm) = (set(), set())\n    for i in range(n):\n        for (j, k) in zip(range(m), I().split()):\n            if k == '1':\n                sn.add(i)\n                sm.add(j)\n    print(('Vivek', 'Ashish')[min(n - len(sn), m - len(sm)) % 2])", "t = int(input())\nfor test in range(t):\n    (n, m) = map(int, input().split())\n    a = []\n    for _ in range(n):\n        a.append(list(map(int, input().split())))\n    (row, col) = ([0] * n, [0] * m)\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                row[i] = 1\n                col[j] = 1\n    chances = min(row.count(0), col.count(0))\n    if chances % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "def ip():\n    return int(input())\n\ndef sip():\n    return input()\n\ndef mip():\n    return map(int, input().split())\n\ndef lip():\n    return list(map(int, input().split()))\n\ndef matip(n, m):\n    lst = []\n    for i in range(n):\n        arr = lip()\n        lst.append(arr)\n    return lst\nt = ip()\nwhile t:\n    t -= 1\n    (n, m) = mip()\n    arr = matip(n, m)\n    row = col = 0\n    for i in range(n):\n        if arr[i].count(0) == m:\n            row += 1\n    for i in range(m):\n        p = 0\n        for j in range(n):\n            if arr[j][i] == 0:\n                p += 1\n        if p == n:\n            col += 1\n    if min(row, col) % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    (w, l) = (set(), set())\n    for r in range(n):\n        for (y, x) in enumerate(map(int, input().split())):\n            if x == 1:\n                w.add(r)\n                l.add(y)\n    print(['Vivek', 'Ashish'][min(n - len(w), m - len(l)) % 2])", "I = input\nfor _ in [0] * int(I()):\n    (n, m) = map(int, I().split())\n    k = l = 0\n    for _ in [0] * n:\n        x = int(I().replace(' ', ''), 2)\n        k += x < 1\n        l |= x\n    print('VAisvheiks h'[min(k, m - f'{l:b}'.count('1')) % 2::2])", "I = input\nfor _ in [0] * int(I()):\n    (n, m) = map(int, I().split())\n    k = l = 0\n    for _ in [0] * n:\n        x = int(I()[::2], 2)\n        k += x < 1\n        l |= x\n    print('VAisvheiks h'[min(k, m - bin(l).count('1')) % 2::2])", "I = input\nfor _ in [0] * int(I()):\n    (n, m) = map(int, I().split())\n    k = l = 0\n    for _ in [0] * n:\n        x = int(I()[::2], 2)\n        k += x < 1\n        l |= x\n    print('VAisvheiks h'[min(k, m - bin(l).count('1')) % 2::2])", "I = input\nfor _ in [0] * int(I()):\n    (n, m) = map(int, I().split())\n    k = l = 0\n    for _ in [0] * n:\n        x = int(I()[::2], 2)\n        k += x < 1\n        l |= x\n    print('VAisvheiks h'[min(k, m - bin(l).count('1')) % 2::2])", "def main():\n    control = int(input())\n    first = []\n    second = []\n    for i in range(55):\n        first.append(False)\n        second.append(False)\n    while control != 0:\n        for i in range(55):\n            first[i] = False\n            second[i] = False\n        str = list(input().split(' '))\n        n = int(str[0])\n        m = int(str[1])\n        temp = 0\n        for i in range(0, n):\n            x = input().split(' ')\n            count = 0\n            for j in x:\n                if int(j) != 0:\n                    first[i] = True\n                    second[count] = True\n                count += 1\n        for i in range(0, n):\n            j = 0\n            while first[i] == False and j < m:\n                if second[j] == False:\n                    temp += 1\n                    first[i] = True\n                    second[j] = True\n                j += 1\n        if temp & 1 != 0:\n            print('Ashish')\n        else:\n            print('Vivek')\n        control -= 1\nmain()", "def gray_code_for_2(n):\n    list = ['0', '1']\n    for i in range(1, n):\n        left = ['0' + i for i in list]\n        right = ['1' + i for i in list[::-1]]\n        list = left + right\n    return list\n\ndef fun():\n    (n, m) = map(int, input().split(' '))\n    matrix = []\n    for mdb in range(n):\n        ren = list(map(int, input().split(' ')))\n        matrix.append(ren)\n    countr = 0\n    for mdb in range(n):\n        count = 1\n        for er in range(m):\n            if matrix[mdb][er] == 1:\n                count = 0\n        countr = countr + count\n    jishu = 0\n    for er in range(m):\n        count = 1\n        for mdb in range(n):\n            if matrix[mdb][er] == 1:\n                count = 0\n        jishu += count\n    if min(countr, jishu) % 2 != 1:\n        print('Vivek')\n    else:\n        print('Ashish')\nn = int(input())\nfor _ in range(n):\n    fun()", "n = int(input())\nfor i in range(n):\n    (x, y) = [int(k) for k in input().split()]\n    row = [1] * x\n    col = [1] * y\n    for j in range(x):\n        a = [int(k) for k in input().split()]\n        for q in range(y):\n            if a[q]:\n                row[j] = 0\n                col[q] = 0\n    res = min(sum(row), sum(col))\n    if res % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "t = int(input())\nans = ''\nfor _ in range(t):\n    nm = input().split()\n    n = int(nm[0])\n    m = int(nm[1])\n    x = [0 for i in range(n)]\n    y = [0 for i in range(m)]\n    x1 = n\n    y1 = m\n    for i in range(n):\n        a = [int(j) for j in input().split()]\n        for j in range(m):\n            if a[j] == 1:\n                x[i] = 1\n                y[j] = 1\n    for i in range(n):\n        if x[i] == 1:\n            x1 -= 1\n    for j in range(m):\n        if y[j] == 1:\n            y1 -= 1\n    if min(x1, y1) % 2 == 0:\n        ans += 'Vivek \\n'\n    else:\n        ans += 'Ashish \\n'\nprint(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    cols = [0 for i in range(m)]\n    strs = []\n    for _ in range(n):\n        lst = [i for i in map(int, input().split())]\n        strs.append(sum(lst))\n        for i in range(m):\n            cols[i] += lst[i]\n    if min(cols.count(0), strs.count(0)) % 2:\n        print('Ashish')\n    else:\n        print('Vivek')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    r = {}\n    c = {}\n    for i in range(n):\n        row = list(map(int, input().split()))\n        for j in range(m):\n            if row[j] == 1:\n                r[i] = 1\n                c[j] = 1\n    print('Ashish' if min(n - len(r), m - len(c)) & 1 else 'Vivek')", "import math\nt = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    l = []\n    for i in range(n):\n        x = list(map(int, input().split()))\n        l.append(x)\n    res = 0\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] == 1:\n                res += 1\n                break\n    ans = 0\n    for i in range(m):\n        for j in range(n):\n            if l[j][i] == 1:\n                ans += 1\n                break\n    ans = m - ans\n    res = n - res\n    r = min(ans, res)\n    if r % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    ali = []\n    for i in range(n):\n        li = list(map(int, input().split()))\n        ali.append(li)\n    row = 0\n    col = 0\n    for i in range(n):\n        f = 0\n        for j in range(m):\n            if ali[i][j] == 1:\n                f = 1\n                break\n        if f == 0:\n            row += 1\n    for i in range(m):\n        f = 0\n        for j in range(n):\n            if ali[j][i] == 1:\n                f = 1\n                break\n        if f == 0:\n            col += 1\n    q = min(col, row)\n    if q % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "t = int(input())\nwhile t:\n    (n, m) = [int(x) for x in input().split()]\n    c = 0\n    l1 = []\n    l2 = []\n    for i in range(n):\n        l = [x for x in input().split()]\n        for j in range(m):\n            if l[j] == '1':\n                if i not in l1:\n                    l1.append(i)\n                if j not in l2:\n                    l2.append(j)\n    c1 = len(l1)\n    c2 = len(l2)\n    if c1 == n or c2 == m:\n        c = 0\n    else:\n        c1 = abs(n - c1)\n        c2 = abs(m - c2)\n        c = min(c1, c2)\n    if c % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')\n    t -= 1", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    r = n * [0]\n    c = m * [0]\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                r[i] = 1\n                c[j] = 1\n    (x, y) = (r.count(1), c.count(1))\n    if x == n or y == m:\n        k = 0\n    else:\n        k = min(n - x, m - y)\n    if k % 2 != 0:\n        print('Ashish')\n    else:\n        print('Vivek')", "t = int(input())\nfor j in range(t):\n    (n, m) = map(int, input().split())\n    usedUp = []\n    rows = n\n    columns = m\n    for i in range(n):\n        a = list(map(int, input().split()))\n        if 1 in a:\n            rows -= 1\n            i = 0\n            while i < m:\n                if a[i] == 1 and i not in usedUp:\n                    columns -= 1\n                    usedUp.append(i)\n                i += 1\n    if min(rows, columns) % 2 == 1:\n        print('Ashish')\n    else:\n        print('Vivek')", "import math\nn = int(input())\nwhile n:\n    n = n - 1\n    a = list(map(int, input().split()))\n    mat = []\n    for i in range(a[0]):\n        mat.append(list(map(int, input().split())))\n    r = 0\n    for i in range(a[0]):\n        if sum(mat[i]) == 0:\n            r += 1\n    c = 0\n    for i in range(a[1]):\n        su = 0\n        for j in range(a[0]):\n            su += mat[j][i]\n        if su == 0:\n            c += 1\n    if min(c, r) % 2:\n        print('Ashish')\n    else:\n        print('Vivek')", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    x = [0] * n\n    y = [0] * m\n    for i in range(n):\n        lis = list(map(int, input().split()))\n        if 1 in lis:\n            x[i] = 1\n        for j in range(m):\n            if lis[j] == 1:\n                y[j] = 1\n    t = min(x.count(0), y.count(0))\n    if t % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "def ip():\n    return int(input())\n\ndef sip():\n    return input()\n\ndef mip():\n    return map(int, input().split())\n\ndef lip():\n    return list(map(int, input().split()))\n\ndef matip(n, m):\n    lst = []\n    for i in range(n):\n        arr = lip()\n        lst.append(arr)\n    return lst\nt = ip()\nwhile t:\n    t -= 1\n    (n, m) = mip()\n    arr = matip(n, m)\n    row = col = 0\n    for i in range(n):\n        if arr[i].count(0) == m:\n            row += 1\n    for i in range(m):\n        p = 0\n        for j in range(n):\n            if arr[j][i] == 0:\n                p += 1\n        if p == n:\n            col += 1\n    if min(row, col) % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "def main():\n    (n, m) = map(int, input().split(' '))\n    N = [0] * n\n    M = [0] * m\n    for ni in range(n):\n        for (mi, f) in enumerate(input().split(' ')):\n            if f == '1':\n                N[ni] = 1\n                M[mi] = 1\n    z = min(n - sum(N), m - sum(M))\n    print('Vivek' if z % 2 == 0 else 'Ashish')\nfor t in range(int(input())):\n    main()", "t = int(input())\ncount = 0\nwhile count < t:\n    count += 1\n    l = list(map(int, input().split(' ')))\n    n = l[0]\n    m = l[1]\n    i = 0\n    board = []\n    while i < n:\n        board.append(list(input().split(' ')))\n        i += 1\n    availRows = 0\n    availCols = 0\n    for i in range(n):\n        if '1' not in board[i]:\n            availRows += 1\n    for i in range(m):\n        ans = True\n        for j in board:\n            if j[i] == '1':\n                ans = False\n                break\n        if ans:\n            availCols += 1\n    x = min(availRows, availCols)\n    if x % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "import gc\nt = int(input())\ncount = 0\nwhile count < t:\n    count += 1\n    l = list(map(int, input().split(' ')))\n    n = l[0]\n    m = l[1]\n    i = 0\n    l = []\n    while i < n:\n        l.append(list(input().split(' ')))\n        i += 1\n    availRows = 0\n    availCols = 0\n    for i in range(n):\n        if '1' not in l[i]:\n            availRows += 1\n    for i in range(m):\n        ans = True\n        for j in l:\n            if j[i] == '1':\n                ans = False\n                break\n        if ans:\n            availCols += 1\n    x = min(availRows, availCols)\n    if x % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "I = input\nfor _ in [0] * int(I()):\n    (n, m) = map(int, I().split())\n    k = l = 0\n    for _ in [0] * n:\n        x = int(I()[::2], 2)\n        k += x < 1\n        l |= x\n    print('VAisvheiks h'[min(k, m - bin(l).count('1')) % 2::2])", "test_cases = int(input())\nfor case in range(0, test_cases):\n    z = []\n    p = []\n    dimensions = input()\n    dimensions = dimensions.split()\n    no_of_rows = int(dimensions[0])\n    no_of_cols = int(dimensions[1])\n    elements = [[None] * no_of_cols] * no_of_rows\n    for row in range(0, no_of_rows):\n        inp = input()\n        elements[row] = inp.split()\n        x = '1' in elements[row][:]\n        if x == False:\n            z.append(row)\n    elements = list(map(list, zip(*elements)))\n    for col in range(0, no_of_cols):\n        x = '1' in elements[col]\n        if x == False:\n            p.append(col)\n    possible_spaces = min(len(z), len(p))\n    if possible_spaces % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "def main():\n    (n, m) = list(map(int, input().split()))\n    N = [0] * n\n    M = [0] * m\n    for ni in range(n):\n        for (mi, f) in enumerate(input().split(' ')):\n            if f == '1':\n                N[ni] = 1\n                M[mi] = 1\n    z = min(n - sum(N), m - sum(M))\n    print('Vivek' if z % 2 == 0 else 'Ashish')\nfor t in range(int(input())):\n    main()", "I = input\nfor _ in [0] * int(I()):\n    (n, m) = map(int, I().split())\n    k = l = 0\n    for _ in [0] * n:\n        x = int(I()[::2], 2)\n        k += x < 1\n        l |= x\n    print('VAisvheiks h'[min(k, m - bin(l).count('1')) % 2::2])", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    mat = []\n    for i in range(n):\n        mat.append(input().split())\n    good_r = len([r for r in mat if '1' not in r])\n    good_c = 0\n    for i in range(m):\n        if '1' not in [row[i] for row in mat]:\n            good_c += 1\n    print('Vivek' if min(good_c, good_r) % 2 == 0 else 'Ashish')", "I = input\nfor _ in [0] * int(I()):\n    (n, m) = map(int, I().split())\n    k = l = 0\n    for _ in [0] * n:\n        x = int(I()[::2], 2)\n        k += x < 1\n        l |= x\n    print('VAisvheiks h'[min(k, m - bin(l).count('1')) % 2::2])", "I = input\nfor _ in [0] * int(I()):\n    (n, m) = map(int, I().split())\n    k = l = 0\n    for _ in [0] * n:\n        x = int(I()[::2], 2)\n        k += x < 1\n        l |= x\n    print('VAisvheiks h'[min(k, m - bin(l).count('1')) % 2::2])", "n = input\nfor _ in [0] * int(n()):\n    (x, y) = map(int, n().split())\n    a = b = 0\n    for _ in [0] * x:\n        r = int(n()[::2], 2)\n        a += r < 1\n        b |= r\n    print('VAisvheiks h'[min(a, y - bin(b).count('1')) % 2::2])", "I = input\nfor _ in [0] * int(I()):\n    (n, m) = map(int, I().split())\n    k = l = 0\n    for _ in [0] * n:\n        x = int(I()[::2], 2)\n        k += x < 1\n        l |= x\n    print('VAisvheiks h'[min(k, m - bin(l).count('1')) % 2::2])", "n = int(input())\n\ndef sny(m, n):\n    if m == 0:\n        return n + 1\n    elif m == 1:\n        return n + 2\n    elif n == 0:\n        return 5\n    else:\n        result = 5\n        for i in range(0, n):\n            result = result * 2 + 3\n        return result\n\ndef nb():\n    (n, m) = map(int, input().split(' '))\n    matrix = []\n    for snynb in range(n):\n        ren = list(map(int, input().split(' ')))\n        matrix.append(ren)\n    con = 0\n    for snynb in range(n):\n        count = 1\n        for er in range(m):\n            if matrix[snynb][er] == 1:\n                count = 0\n        con = con + count\n    k = 0\n    for er in range(m):\n        count = 1\n        for snynb in range(n):\n            if matrix[snynb][er] == 1:\n                count = 0\n        k += count\n    if min(con, k) % 2 == 1:\n        print('Ashish')\n    else:\n        print('Vivek')\nfor _ in range(n):\n    nb()", "a = int(input())\nfor i in range(a):\n    i = i + 1\n    x = [0] * 55\n    y = [0] * 55\n    (n, m) = map(int, input().split(' '))\n    tmp = 0\n    for j in range(n):\n        b = input().split()\n        for c in range(m):\n            if int(b[c]) != 0:\n                x[j] = 1\n                y[c] = 1\n    for j in range(n):\n        for c in range(m):\n            if x[j] != 0:\n                break\n            if y[c] == 0:\n                tmp += 1\n                x[j] = 1\n                y[c] = 1\n    if tmp & 1:\n        print('Ashish')\n    else:\n        print('Vivek')", "t = int(input())\nwhile t > 0:\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        a = list(map(int, input().split()))[:m]\n        arr.append(a)\n    r = [0 for i in range(n)]\n    c = [0 for i in range(m)]\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == 1:\n                r[i] += 1\n                c[j] += 1\n    d = r.count(0)\n    e = c.count(0)\n    if min(d, e) % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')\n    t = t - 1", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    unclaimed_row_set = set([i for i in range(1, n + 1)])\n    unclaimed_col_set = set([i for i in range(1, m + 1)])\n    for row in range(1, n + 1):\n        row_vector = list(map(int, input().split()))\n        for col in range(1, m + 1):\n            a = row_vector[col - 1]\n            if a == 1:\n                if row in unclaimed_row_set:\n                    unclaimed_row_set.remove(row)\n                if col in unclaimed_col_set:\n                    unclaimed_col_set.remove(col)\n    (unclaimed_row_count, unclaimed_col_count) = (len(unclaimed_row_set), len(unclaimed_col_set))\n    min_count = min(unclaimed_row_count, unclaimed_col_count)\n    if min_count % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "t = int(input())\nfor t1 in range(t):\n    (r, c) = map(int, input().split())\n    data = []\n    r1 = 0\n    c1 = 0\n    for rz in range(r):\n        d1 = list(map(int, input().split()))\n        if 1 not in d1:\n            r1 += 1\n        data.append(d1)\n    for rz in range(c):\n        flag = True\n        for cz in range(r):\n            if data[cz][rz] == 1:\n                flag = False\n        if flag:\n            c1 += 1\n    ans = min(r1, c1)\n    if ans % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    sums = []\n    for i in range(m):\n        sums.append(0)\n    for i in range(n):\n        row = [int(x) for x in input().split()]\n        if sum(row) != 0:\n            n -= 1\n            for j in range(m):\n                sums[j] += row[j]\n    m = sums.count(0)\n    i = 0\n    while n > 0 and m > 0:\n        n -= 1\n        m -= 1\n        i += 1\n    if i % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "from sys import *\nfrom collections import Counter\ninput = lambda : stdin.readline()\nint_arr = lambda : list(map(int, stdin.readline().strip().split()))\nstr_arr = lambda : list(map(str, stdin.readline().split()))\nget_str = lambda : map(str, stdin.readline().strip().split())\nget_int = lambda : map(int, stdin.readline().strip().split())\nget_float = lambda : map(float, stdin.readline().strip().split())\nmod = 1000000007\nsetrecursionlimit(1000)\nfor _ in range(int(input())):\n    (n, m) = get_int()\n    lst = []\n    row = [0] * n\n    column = [0] * m\n    for i in range(n):\n        arr = int_arr()\n        for j in range(len(arr)):\n            if arr[j] == 1:\n                row[i] = 1\n                column[j] = 1\n    ct = min(row.count(0), column.count(0))\n    print('Ashish' if ct % 2 != 0 else 'Vivek')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = set()\n    p = set()\n    for i in range(n):\n        l = list(map(int, input().split()))\n        for j in range(m):\n            if l[j] == 1:\n                s.add(i)\n                p.add(j)\n    ans = min(n - len(s), m - len(p))\n    if ans % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "for i in range(int(input())):\n    (row, col) = map(int, input().split())\n    (r_set, c_set, get) = (set(), set(), 0)\n    for j in range(row):\n        arr = list(map(int, input().split()))\n        for k in range(col):\n            if arr[k] == 1:\n                r_set.add(j)\n                c_set.add(k)\n    new = min(row - len(r_set), col - len(c_set))\n    if new % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "from math import ceil, gcd, trunc\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom array import array\nfrom collections import Counter as ctr\n\ndef li():\n    return list(map(int, input().split()))\n\ndef arr(a):\n    return array('i', a)\n\ndef solve():\n    for _ in range(int(input())):\n        (n, m) = li()\n        mn = 0\n        mm = [0] * m\n        for i in range(n):\n            temp = li()\n            for i in range(m):\n                mm[i] += temp[i]\n            if temp.count(1) == 0:\n                mn += 1\n        print('Ashish' if min(mn, mm.count(0)) % 2 else 'Vivek')\nsolve()", "t = int(input())\nfor k in range(0, t):\n    (n, m) = map(int, input().split())\n    x = [0] * n\n    y = [0] * m\n    for i in range(n):\n        alist = list(map(int, input().split()))\n        if 1 in alist:\n            x[i] = 1\n        for j in range(m):\n            if alist[j] == 1:\n                y[j] = 1\n    t = min(x.count(0), y.count(0))\n    if t % 2 == 0:\n        print('Vivek')\n    else:\n        print('Ashish')", "maxn = int(1000.0 + 7)\na = []\n\ndef get_h(n, m):\n    ans = 0\n    for i in range(n):\n        j = 0\n        while j < m:\n            if a[i][j]:\n                break\n            j += 1\n        if j >= m:\n            ans += 1\n    return ans\n\ndef get_l(n, m):\n    ans = 0\n    for j in range(m):\n        i = 0\n        while i < n:\n            if a[i][j]:\n                break\n            i += 1\n        if i >= n:\n            ans += 1\n    return ans\nfor cas in range(int(input())):\n    (n, m) = map(int, input().split())\n    a.clear()\n    for i in range(n):\n        b = list(map(int, input().split()))\n        a.append(b)\n    ans = get_l(n, m)\n    ans = min(ans, get_h(n, m))\n    if ans & 1:\n        print('Ashish')\n    else:\n        print('Vivek')"]