["import sys\n\ndef match(a, b):\n    return a ^ b & a\n\ndef solve(args, numargs):\n    res = [0]\n    last = args[0]\n    for arg in args[1:]:\n        res.append(match(last, arg))\n        last = arg ^ res[-1]\n    return ' '.join((str(r) for r in res))\nnum = sys.stdin.readline()\nfor n in range(int(num)):\n    numargs = sys.stdin.readline()\n    args = tuple((int(x) for x in sys.stdin.readline().split()))\n    sys.stdout.write(solve(args, numargs))\n    sys.stdout.write('\\n')", "import fileinput\n\ndef main():\n    it = fileinput.input()\n    num_cases = int(next(it))\n    for _ in range(num_cases):\n        next(it)\n        a = list(map(int, next(it).split()))\n        f(a)\n\ndef f(a):\n    i = 1\n    cosequence = [0]\n    a_len = len(a)\n    while i < a_len:\n        a1 = a[i - 1]\n        a2 = a[i]\n        y1 = cosequence[i - 1]\n        t1 = a1 | y1\n        y2 = (a2 | t1) - a2\n        cosequence.append(y2)\n        i += 1\n    print(' '.join(map(str, cosequence)))\nmain()", "def minCo_growingSequenceWith(array):\n    (sequence, prevValue) = ([], 0)\n    for value in array:\n        n = prevValue & (prevValue ^ value)\n        prevValue = value ^ n\n        sequence.append(str(n))\n    return ' '.join(sequence)\n\ndef testCase_1547d():\n    input()\n    return map(int, input().split(' '))\ntuple((print(minCo_growingSequenceWith(testCase_1547d())) for x in range(int(input()))))", "def minCo_growingSequenceWith(array):\n    (sequence, prevValue) = ([], 0)\n    for value in array:\n        n = prevValue & (prevValue ^ value)\n        prevValue = value ^ n\n        sequence.append(n)\n    return ' '.join(map(str, sequence))\n\ndef testCase_1547d():\n    input()\n    return map(int, input().split(' '))\ntuple((print(minCo_growingSequenceWith(testCase_1547d())) for x in range(int(input()))))", "def minCo_growingSequenceWith(array):\n    (sequence, prevValue) = ([], 0)\n    for value in array:\n        n = prevValue & (prevValue ^ value)\n        prevValue = value ^ n\n        sequence.append(n)\n    return ' '.join(map(str, sequence))\n\ndef testCase_1547d():\n    input()\n    return map(int, input().split(' '))\nfor x in range(int(input())):\n    print(minCo_growingSequenceWith(testCase_1547d()))", "for _ in range(int(input())):\n    n = int(input())\n    ans = [0]\n    l1 = list(map(int, input().split()))\n    for i in range(1, n):\n        ans.append(~(~(ans[-1] ^ l1[i - 1]) | l1[i]))\n    print(' '.join(map(str, ans)))", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    data = list(map(int, input().split()))\n    answer = [0]\n    for i in range(1, n):\n        prev = data[i - 1] ^ answer[i - 1]\n        next = prev | data[i]\n        answer.append(next ^ data[i])\n    print(' '.join(map(str, answer)))", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "import sys\nref = [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4194304, 8388608, 16777216, 33554432, 67108864, 134217728, 268435456, 536870912, 1073741824, 2147483648]\n\ndef process(t, nums):\n    if t == 1:\n        return [0]\n    else:\n        toreturn = [0]\n        for i in range(1, t):\n            a = nums[i - 1]\n            b = nums[i]\n            r = a & b\n            toreturn.append(a - r)\n            nums[i] += a - r\n    return toreturn\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    nums = [int(x) for x in input().split()]\n    save = process(n, nums)\n    sys.stdout.write(' '.join(map(str, save)) + '\\n')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    dp = [0 for i in range(n)]\n    for i in range(1, n):\n        dp[i] = (dp[i - 1] ^ l[i - 1]) & ~l[i]\n    print(' '.join(map(str, dp)))", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "def bnot(n):\n    return (1 << n.bit_length()) - 1 - n\n\ndef solve(n, x):\n    y = []\n    for i in range(n):\n        if i == 0:\n            x[i] = x[i] ^ 0\n            y.append(0)\n        else:\n            xi = x[i - 1] | x[i]\n            y.append(x[i] ^ xi)\n            x[i] = xi\n    return ' '.join(map(str, y))\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    print(solve(n, x))", "import math\n\ndef solve():\n    n = int(input())\n    x = list(map(int, input().split()))\n    ans = [0]\n    for i in range(1, n):\n        ans.append((x[i] | x[i - 1] ^ ans[i - 1]) - x[i])\n    return ' '.join(map(str, ans))\nt = int(input())\nwhile t > 0:\n    t -= 1\n    print(solve())", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "try:\n    import sys\n\n    def solve():\n        n = int(input())\n        x = list(map(int, input().split()))\n        result = 0\n        for i in x:\n            result = result | i\n            sys.stdout.write(str(result ^ i) + ' ')\n        sys.stdout.write('\\n')\n    test = int(input())\n    count1 = 1\n    while count1 <= test:\n        solve()\n        count1 += 1\nexcept EOFError:\n    print('')", "def f(x, y):\n    return x & ~y\n_ = int(input())\nfor tt in range(_):\n    n = int(input())\n    t = list(map(int, input().split()))\n    w = [0] * n\n    for i in range(1, n):\n        w[i] = f(w[i - 1] ^ t[i - 1], t[i])\n    print(' '.join(map(str, w)))", "def f(x, y):\n    return (x | y) ^ y\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    nums = list(map(int, input().split()))\n    ans = [0]\n    for i in range(1, n):\n        ans.append(f(nums[i - 1] ^ ans[i - 1], nums[i]))\n    print(' '.join(map(str, ans)))\n    t -= 1", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(a[i - 1] ^ ans[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "def read_ints():\n    return [int(x) for x in input().split()]\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = read_ints()\n    res = [0]\n    for i in range(1, n):\n        res.append(~a[i] & a[i - 1])\n        a[i] ^= res[-1]\n    print(' '.join([str(x) for x in res]))", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = [0] * n\n    ans = [x[0]] * n\n    for i in range(1, n):\n        y[i] = (ans[i - 1] | x[i]) ^ x[i]\n        ans[i] = x[i] ^ y[i]\n    print(' '.join(map(str, y)))", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "def f(x, y):\n    return x & ~y\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "import math\nimport sys\ninp = int(input())\nfor _ in range(inp):\n    n = int(input())\n    x = list(map(int, input().split(' ')))\n    res = [0]\n    for i in range(1, n):\n        t = x[i - 1] ^ res[i - 1]\n        s = t ^ x[i]\n        s = s & t\n        res.append(s)\n    print(' '.join(map(str, res)))", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "from typing import List\n\ndef find_y_seq(len_x: int, x_seq: List[int]) -> None:\n    ans = [0] * len_x\n    ans[0] = x_seq[0]\n    y_seq = [0] * len_x\n    for i in range(1, len_x):\n        y_seq[i] = (ans[i - 1] | x_seq[i]) ^ x_seq[i]\n        ans[i] = x_seq[i] ^ y_seq[i]\n    print(' '.join((str(v) for v in y_seq)))\nnum_of_cases = int(input())\nfor i in range(num_of_cases):\n    n = int(input())\n    x = [int(i) for i in input().split()]\n    find_y_seq(n, x)", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "def fun(a, b):\n    return a & ~b\nfor _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = [0] * n\n    for i in range(1, n):\n        y[i] = fun(y[i - 1] ^ x[i - 1], x[i])\n    print(' '.join(map(str, y)))", "def solve(n, ar):\n    seq = [0]\n    res = [ar[0]]\n    for i in range(1, n):\n        x = (res[i - 1] ^ ar[i]) & res[i - 1]\n        seq.append(x)\n        res.append(seq[i] ^ ar[i])\n    return seq\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    print(' '.join((str(x) for x in solve(n, ar))))", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "for input_number in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0]\n    c = [a[0]]\n    for i in range(1, n):\n        b.append((c[i - 1] | a[i]) - a[i])\n        c.append(c[i - 1] | a[i])\n    print(' '.join(map(str, b)))", "t = int(input())\nfor _ in range(t):\n    input()\n    x = list(map(int, input().split()))\n    z = [0]\n    for i in range(1, len(x)):\n        temp = x[i - 1] ^ z[i - 1]\n        temp = temp | x[i]\n        temp = temp ^ x[i]\n        z.append(temp)\n    print(' '.join(map(str, z)))", "count = int(input())\n\ndef growing(a, b):\n    return a & b == a\nfor _ in range(count):\n    _ = input()\n    seq = [int(x) for x in input().split(' ')]\n    yseq = [0]\n    prev = seq[0]\n    for i in range(len(seq) - 1):\n        b = prev & (seq[i + 1] ^ prev)\n        yseq.append(b)\n        prev = seq[i + 1] ^ b\n    print(' '.join([str(x) for x in yseq]))", "for t in range(int(input())):\n    n = int(input())\n    xarr = list(map(int, input().split()))\n    y = [0]\n    for i in range(n - 1):\n        xarr[i] = xarr[i] ^ y[i]\n        req = (xarr[i] ^ xarr[i + 1]) & xarr[i]\n        y.append(req)\n    sy = [str(i) for i in y]\n    print(' '.join(sy))", "def minCo_growingSequenceWith(array):\n    (sequence, prevValue) = ('', 0)\n    for value in array:\n        n = prevValue & (prevValue ^ value)\n        prevValue = value ^ n\n        sequence += f' {n}'\n    return sequence[1:]\n\ndef testCase_1547d():\n    input()\n    return map(int, input().split(' '))\ntuple((print(minCo_growingSequenceWith(testCase_1547d())) for x in range(int(input()))))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = [int(x) for x in input().split()]\n    xored = [x[0]]\n    y = ['0']\n    for j in range(n - 1):\n        k = xored[j] | x[j + 1]\n        k -= x[j + 1]\n        y.append(str(k))\n        xored.append(x[j + 1] ^ k)\n    separator = ' '\n    print(separator.join(y))", "def minCo_growingSequenceWith(array):\n    (sequence, prevValue) = ('0', array[0])\n    for value in array[1:]:\n        if prevValue & value != prevValue:\n            n = prevValue & (prevValue ^ value)\n            prevValue = value ^ n\n            sequence += f' {n}'\n        else:\n            prevValue = value\n            sequence += ' 0'\n    return sequence\n\ndef testCase_1547d():\n    input()\n    return tuple(map(int, input().split(' ')))\ntestCases = (testCase_1547d() for x in range(int(input())))\ntuple((print(minCo_growingSequenceWith(testCase)) for testCase in testCases))", "def minCo_growingSequenceWith(array):\n    (sequence, prevValue) = ('0', array[0])\n    for value in array[1:]:\n        n = prevValue & (prevValue ^ value)\n        prevValue = value ^ n\n        sequence += f' {n}'\n    return sequence\n\ndef testCase_1547d():\n    input()\n    return tuple(map(int, input().split(' ')))\ntestCases = (testCase_1547d() for x in range(int(input())))\ntuple((print(minCo_growingSequenceWith(testCase)) for testCase in testCases))", "def f(x, y):\n    return x & ~y\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ a[i - 1], a[i])\n    print(' '.join(map(str, ans)))", "def solution(s):\n    res = [0]\n    a = s[0]\n    i = 1\n    while i < len(s):\n        a = a | s[i]\n        curr = a ^ s[i]\n        res.append(curr)\n        a = curr ^ s[i]\n        i += 1\n    return res\nn = int(input())\nfor i in range(n):\n    input()\n    a = list(map(int, input().split()))\n    print(*solution(a))", "def minCo_growingSequenceWith(arrayLength, array):\n    (sequence, prevValue) = ('0', array[0])\n    for i in range(1, arrayLength):\n        n = array[i - 1] & (array[i - 1] ^ array[i])\n        array[i] = array[i] ^ n\n        sequence += f' {n}'\n    return sequence\n\ndef valueToChange(binPrev, binCurr):\n    (lengthOfPrevValue, lengthOfCurrValue) = (len(binPrev), len(binCurr))\n    if lengthOfPrevValue > lengthOfCurrValue:\n        binCurr = '0' * (lengthOfPrevValue - 2 - len(binCurr)) + binCurr\n    value = ''\n    try:\n        for x in range(-1, 1 - lengthOfPrevValue, -1):\n            if binPrev[x] == '1' != binCurr[x]:\n                value = '1' + value\n            else:\n                value = '0' + value\n    except:\n        return int(value, 2)\n    return int(value, 2)\n\ndef testCase_1547d():\n    return (int(input()), list(map(int, input().split(' '))))\ntestCases = (testCase_1547d() for x in range(int(input())))\ntuple((print(minCo_growingSequenceWith(*testCase)) for testCase in testCases))", "for i in range(0, int(input())):\n    input()\n    res = 0\n    s = []\n    for num in input().split():\n        x = int(num)\n        res = res | x\n        s.append(x ^ res)\n    print(*s)", "from sys import stdin\ninput = stdin.readline\nrn = lambda : int(input())\nrns = lambda : map(int, input().split())\nrl = lambda : list(map(int, input().split()))\nrs = lambda : input().strip()\nYN = lambda x: print('YES') if x else print('NO')\nmod = 10 ** 9 + 7\nfor _ in range(rn()):\n    n = rn()\n    a = rl()\n    ans = [0]\n    for i in range(1, n):\n        add = a[i - 1] - (a[i] & a[i - 1])\n        ans.append(add)\n        a[i] += add\n    print(*ans)", "from math import *\nfrom collections import *\nfrom functools import *\nfrom bisect import *\nfrom itertools import *\nfrom heapq import *\nimport sys\ninf = float('inf')\nninf = -float('inf')\nip = sys.stdin.readline\nalphal = 'abcdefghijklmnopqrstuvwxyz'\nalphau = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nmod = 10 ** 9 + 7\n\ndef ipl():\n    return list(map(int, ip().split()))\n\ndef ipn():\n    return int(ip())\n\ndef ipf():\n    return float(ip())\n\ndef solve():\n    n = ipn()\n    a = ipl()\n    r = [0]\n    for i in range(1, n):\n        r.append((r[i - 1] ^ a[i - 1] | a[i]) ^ a[i])\n    print(*r)\nt = ipn()\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    pst = [0]\n    k = lst[0]\n    for x in lst[1:]:\n        m = (k ^ x) & k\n        pst.append(m)\n        k = m ^ x\n    print(*pst)", "from sys import stdin, setrecursionlimit\nfrom collections import defaultdict\nfrom math import ceil, log\nsetrecursionlimit(10 ** 7)\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    arr = list(map(int, stdin.readline().split()))\n    ans = [0]\n    prev = arr[0]\n    for i in range(1, n):\n        sol = prev & ~arr[i]\n        ans.append(sol)\n        prev = sol ^ arr[i]\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    ans = [0]\n    buf = x[0]\n    for i in range(1, n):\n        ans.append((x[i] | buf) ^ x[i])\n        buf = x[i] | buf\n    print(*ans)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(0, end=' ')\n    c = a[0]\n    for i in range(1, n):\n        c |= a[i]\n        print(c - a[i], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    y = []\n    z = 0\n    for x in map(int, input().split()):\n        z = ~x & (z ^ x)\n        y.append(z)\n        z ^= x\n    print(*y)", "def main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = [0]\n    for i in range(1, n):\n        newx = x[i - 1] | x[i]\n        y.append(newx ^ x[i])\n        x[i] = newx\n    print(*y)\n    return\nt = int(input())\nfor _ in range(t):\n    main()", "import math\n\ndef getList(method=int):\n    return list(map(method, input().split()))\n\ndef getInt():\n    return int(input())\n\ndef solve():\n    n = getInt()\n    arr = getList()\n    ans = [0]\n    v = arr[0]\n    for a in arr[1:]:\n        if v & a != v:\n            v = (a ^ v) & v\n            ans.append(v)\n            v = a ^ v\n        else:\n            ans.append(0)\n            v = a\n    print(*ans)\nfor _ in range(getInt()):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = [0]\n    k = l[0]\n    for i in l[1:]:\n        d = ~i & k\n        l1.append(d)\n        k = d ^ i\n    print(*l1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    pre = 0\n    y = []\n    check = []\n    for i in range(n):\n        y.append(x[i] ^ (pre | x[i]))\n        pre = pre | x[i]\n    print(*y)", "for _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    ans = [0]\n    ors = [array[0]]\n    for i in range(1, len(array)):\n        ors.append(ors[-1] | array[i])\n        ans.append(ors[i] ^ array[i])\n    print(*ans)", "for i in range(0, int(input())):\n    input()\n    res = 0\n    s = []\n    for num in input().split():\n        x = int(num)\n        res = res | x\n        s.append(x ^ res)\n    print(*s)", "from collections import Counter as count\nfrom bisect import bisect\nimport sys\nfrom math import ceil, gcd, log2 as log\nfrom itertools import groupby\ninput = lambda : sys.stdin.readline().rstrip('\\r\\n')\nfor i in range(int(input())):\n    n = int(input())\n    z = list(map(int, input().split()))\n    print(0, end=' ')\n    b = z[0]\n    for i in z[1:]:\n        t = (i ^ b) & b\n        print(t, end=' ')\n        b = t ^ i\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = [0] * n\n    for i in range(1, n):\n        y[i] = (x[i - 1] ^ y[i - 1]) & ~x[i]\n    print(*y)", "def f(x, y):\n    return x & ~y\n\ndef solve():\n    n = int(input())\n    t = list(map(int, input().split()))\n    ans = [0 for _ in range(n)]\n    for i in range(1, n):\n        ans[i] = f(ans[i - 1] ^ t[i - 1], t[i])\n    print(*ans)\ntests = int(input())\nfor _ in range(tests):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    ans = 0\n    for v in x:\n        req = (ans | v) - v\n        print(req, end=' ')\n        ans |= v\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    ans = [0]\n    buf = x[0]\n    for i in range(1, n):\n        ans.append((x[i] | buf) ^ x[i])\n        buf = x[i] | buf\n    print(*ans)", "import sys\n_DEBUG = False\nif _DEBUG:\n    fd = open('input.txt', 'r')\n    sys.stdin = fd\nfor t in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    x = list(map(int, sys.stdin.readline().split()))\n    y = [0]\n    for i in range(1, n):\n        y.append(~x[i] & x[i - 1])\n        x[i] ^= y[i]\n    print(*y)", "def sol():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    res = [0]\n    for i in range(1, n):\n        res += [(a[i] | a[i - 1] | res[i - 1]) - a[i]]\n    return res\nfor _ in range(int(input())):\n    print(*sol(), sep=' ')", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    ans = ['0']\n    for i in range(n - 1):\n        if a[i] & a[i + 1] == a[i]:\n            ans.append('0')\n        else:\n            temp = (a[i] ^ a[i + 1]) & a[i]\n            a[i + 1] = a[i + 1] ^ temp\n            ans.append(str(temp))\n    print(' '.join(ans))", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    l = x[0]\n    for i in range(n):\n        print(x[i] ^ l, end=' ')\n        if i != n - 1:\n            l |= x[i + 1]\n    print()", "t = int(input())\n\ndef solve():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [0] * n\n    for i in range(1, n):\n        pr = a[i - 1] ^ b[i - 1]\n        b[i] = a[i] & pr ^ pr\n    print(*b)\nfor tt in range(t):\n    solve()", "def solve():\n    n = int(input())\n    a = [int(s) for s in input().split(' ')]\n    res = 0\n    ans = []\n    for i in range(n):\n        res |= a[i]\n        ans.append(res ^ a[i])\n    print(*ans)\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    input()\n    x_list = list(map(int, input().split()))\n    y_list = [0]\n    for i in range(1, len(x_list)):\n        y_list.append(~x_list[i] & (x_list[i - 1] ^ y_list[i - 1]))\n    print(*y_list)", "for _ in range(int(input().strip())):\n    n = int(input().strip())\n    x = list(map(int, input().strip().split()))\n    y = [0] * n\n    t = x[0]\n    for i in range(1, n):\n        y[i] = (t | x[i]) ^ x[i]\n        t = y[i] ^ x[i]\n    print(*y)", "import sys\nN = int(200000.0 + 5)\nsys.setrecursionlimit(N)\n\ndef charming():\n    n = int(input())\n    x = list(map(int, input().split()))\n    Xor = 0\n    for i in range(len(x)):\n        if i == 0:\n            print(0, end=' ')\n        else:\n            print(Xor ^ Xor & x[i], end=' ')\n        Xor = x[i] | x[i] ^ Xor\n    print()\nfor t in range(int(input())):\n    charming()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    bunch = list(map(int, input().split()))\n    res = 0\n    for i in range(n):\n        y = res & ~bunch[i]\n        res = bunch[i] ^ y\n        print(y, end=' ')\n    print()", "def solution(s):\n    print(0, end=' ')\n    a = s[0]\n    i = 1\n    while i < len(s):\n        a = a | s[i]\n        curr = a ^ s[i]\n        print(curr, end=' ')\n        a = curr ^ s[i]\n        i += 1\n    print()\nn = int(input())\nfor i in range(n):\n    input()\n    a = list(map(int, input().split()))\n    solution(a)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (a, p) = ([0], l[0])\n    for i in range(1, n):\n        r = p - (p & l[i])\n        p = p | l[i]\n        a.append(r)\n    print(*a)", "T = int(input())\nfor tc in range(1, T + 1):\n    N = int(input())\n    numbers = list(map(int, input().split()))\n    prefix = '0b'\n    answer = [0]\n    if len(numbers) == 1:\n        print(*answer)\n    else:\n        for i in range(1, len(numbers)):\n            before = numbers[i - 1] ^ answer[i - 1]\n            answer.append(before & ~numbers[i])\n        print(*answer)", "t = int(input())\nfor g in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = [0]\n    for i in range(1, n):\n        prev = x[i - 1] ^ y[i - 1]\n        curr = prev & ~x[i]\n        y.append(curr)\n    print(*y)", "import sys\nt = int(sys.stdin.readline())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    print(0, end=' ')\n    for i in range(1, n):\n        ans = x & a[i]\n        ans = ans ^ x\n        print(ans, end=' ')\n        x = ans ^ a[i]\n    print()\n    t -= 1"]