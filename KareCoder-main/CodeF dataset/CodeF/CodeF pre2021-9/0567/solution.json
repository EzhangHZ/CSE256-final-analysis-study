["from typing import List\n\ndef fun(n: int, R: List[str]):\n    if n == 2:\n        return\n    x = n - 1\n    while (n + x - 1) // x <= x:\n        x -= 1\n    x += 1\n    for i in range(x + 1, n):\n        R.append(f'{i} {i + 1}')\n    R.append(f'{n} {x}')\n    R.append(f'{n} {x}')\n    fun(x, R)\nfor _ in range(int(input())):\n    n = int(input())\n    R = []\n    fun(n, R)\n    print(len(R))\n    print('\\n'.join(R))", "from math import ceil\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    z = n\n    res = []\n    for j in range(n - 1, 2, -1):\n        if ceil(z / j) >= j:\n            res.append(str(n) + ' ' + str(j))\n            z = ceil(z / j)\n        res.append(str(j) + ' ' + str(n))\n    while z > 2:\n        z = ceil(z / 2)\n        res.append(str(n) + ' 2')\n    res.append('2 ' + str(n))\n    print(len(res))\n    print('\\n'.join(res))", "q = int(input())\nimport math\nfor _ in range(q):\n    n = int(input())\n    (res, r) = (0, 0)\n    l = [2, 4, 16, 16 * 16, 16 * 16 * 16 * 16]\n    if n in l:\n        k = l.index(n)\n        print(n - 3 + 2 * k - (k - 1))\n        for i in range(3, n):\n            if not i in l:\n                print(str(i) + ' ' + str(i + 1))\n        for i in range(k):\n            print(str(n) + ' ' + str(int(math.sqrt(n))))\n            print(str(n) + ' ' + str(int(math.sqrt(n))))\n            n = int(math.sqrt(n))\n    else:\n        for i in range(5):\n            if n < l[i]:\n                r = l[i - 1]\n                break\n        if r == 0:\n            r = l[-1]\n        k = l.index(r)\n        print(n - 3 + 2 * k + 2 - k)\n        for i in range(3, n):\n            if not i in l:\n                print(str(i) + ' ' + str(i + 1))\n        print(str(n) + ' ' + str(r))\n        print(str(n) + ' ' + str(r))\n        for i in range(k):\n            print(str(r) + ' ' + str(int(math.sqrt(r))))\n            print(str(r) + ' ' + str(int(math.sqrt(r))))\n            r = int(math.sqrt(r))", "from math import ceil\n\ndef test():\n    n = int(input())\n    res = []\n    while n > 2:\n        rt = ceil(n ** (1 / 2))\n        for i in range(rt + 1, n):\n            res.append((i, i + 1))\n        res.append((n, rt))\n        res.append((n, rt))\n        n = rt\n    print(len(res))\n    for sol in res:\n        print(f'{sol[0]} {sol[1]}')\ntc = int(input())\nfor t in range(tc):\n    test()", "import math\n\ndef ceil_divisions(num):\n    num_index = num\n    old_value = num\n    pairs = []\n    while num > 3:\n        next_value = int(math.floor(math.sqrt(num)))\n        for value in range(next_value + 1, old_value):\n            pairs.append((value, num_index))\n        old_value = next_value + 1\n        pairs.append((num_index, next_value))\n        num = int(math.ceil(num / next_value))\n    if old_value > 3:\n        pairs.append((3, num_index))\n    if num > 2:\n        pairs.append((num_index, 2))\n    pairs.append((num_index, 2))\n    return pairs\nnum_test = int(input())\nfor i in range(num_test):\n    num = int(input())\n    pairs = ceil_divisions(num)\n    print(len(pairs))\n    for pair in pairs:\n        print(f'{pair[0]} {pair[1]}')", "import math\nt = int(input())\nfor i in range(t):\n    s = int(input())\n    n = math.ceil(math.log(s))\n    i = n\n    cnt = 0\n    arr = []\n    while n >= 2:\n        for j in range(n + 1, s):\n            arr.append([j, s])\n        cnt += s - n - 1\n        x = s\n        while s != 1:\n            arr.append([x, n])\n            s = math.ceil(s / n)\n            cnt += 1\n        s = n\n        n = math.ceil(math.log(s))\n    print(cnt)\n    for i in range(cnt):\n        print(f'{arr[i][0]} {arr[i][1]}')", "import math\n\ndef calc(x):\n    if x <= 2:\n        return\n    else:\n        y = math.ceil(math.sqrt(x))\n        for i in range(y + 1, x):\n            S.append((i, x))\n        S.append((x, y))\n        S.append((x, y))\n        calc(y)\n\ndef solution(n):\n    calc(n)\n    return S\nfor t in range(int(input())):\n    S = []\n    S = solution(int(input()))\n    print(len(S))\n    for (x, y) in S:\n        print(x, y)", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    if n <= 2:\n        print(0)\n        return\n    if n < 10:\n        mv = [n]\n    else:\n        num = n\n        mv = []\n        while num > 2:\n            mv.append(num)\n            num = num // 10\n        if mv[-1] > 10:\n            mv.append(5)\n    ans = []\n    for i in range(3, n + 1):\n        if i in mv:\n            continue\n        ans.append((i, n))\n    m = len(mv)\n    for i in range(m - 1):\n        (n1, n2) = (mv[i], mv[i + 1])\n        while n1 > 1:\n            ans.append((mv[i], mv[i + 1]))\n            n1 = n1 // n2 if n1 % n2 == 0 else n1 // n2 + 1\n    mi = mv[-1]\n    while mi > 1:\n        ans.append((mv[-1], 2))\n        mi = mi // 2 if mi % 2 == 0 else mi // 2 + 1\n    print(len(ans))\n    for (a, b) in ans:\n        print(a, b)\n    return\nfor _ in range(int(input())):\n    main()", "import sys\nimport math\nt = int(input())\nops = []\n\ndef divide(n):\n    if n == 2:\n        return\n    newn = math.ceil(math.sqrt(n))\n    for i in range(newn + 1, n):\n        ops.append((i, n))\n    ops.append((n, newn))\n    ops.append((n, newn))\n    divide(newn)\nfor i in range(t):\n    n = int(input())\n    ops = []\n    divide(n)\n    print(len(ops))\n    for (a, b) in ops:\n        print('{} {}'.format(a, b))", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    l = []\n    x = 2\n    while x < n:\n        l.append(x)\n        x *= x\n    l.append(n)\n    ans = []\n    for i in range(3, n):\n        if not i in l:\n            ans.append([i, n])\n    l = l[::-1]\n    y = len(l)\n    for i in range(0, y - 1):\n        ans.append([l[i], l[i + 1]])\n        ans.append([l[i], l[i + 1]])\n    print(len(ans))\n    for i in ans:\n        print(f'{i[0]} {i[1]}')", "from math import ceil, sqrt\nfor i in range(int(input())):\n    n = int(input())\n    nsave = n\n    count = 0\n    while n > 2:\n        y = ceil(sqrt(n))\n        count += n - y + 1\n        n = y\n    print(count)\n    n = nsave\n    while n > 2:\n        y = ceil(sqrt(n))\n        for x in range(y + 1, n):\n            print(x, n)\n        print(n, y)\n        print(n, y)\n        n = y", "from math import ceil, log\nfor t in range(int(input())):\n    n = int(input())\n    if n <= 256:\n        m = n - 3 + ceil(log(n, 2))\n        print(m)\n        for i in range(3, n):\n            print(i, i + 1)\n        for _ in range(ceil(log(n, 2))):\n            print(n, 2)\n    else:\n        d = 8\n        l = [d]\n        while l[-1] * d < n:\n            l += [l[-1] * d]\n        l += [n]\n        print(n + 5)\n        m = 0\n        for i in range(3, n):\n            if i not in l:\n                m += 1\n                print(i, i + 1)\n        a = {i: i for i in l + [2]}\n        s = sorted(a)\n        if n > 2 ** 17:\n            print(s[-1], s[-2])\n            print(s[-1], s[1])\n            del a[n]\n            m += 2\n        while len(a) > 1:\n            s = sorted(a, key=lambda x: a[x])\n            a[s[-1]] = ceil(a[s[-1]] / a[s[-2]])\n            print(s[-1], s[-2])\n            a = {i: a[i] for i in a if a[i] != 1}\n            m += 1\n        for _ in range(n + 5 - m):\n            print(1, 2)", "t = int(input())\n\ndef chk(n):\n    g = n\n    c = 0\n    if n > 12:\n        while n != 0:\n            n = int(n / 12)\n            c += 1\n        print(g + c)\n        for i in range(g - 4):\n            if i < 9:\n                print(i + 3, g)\n            else:\n                print(i + 4, g)\n        for i in range(c):\n            print(g, 12)\n        print(12, 2)\n        print(12, 2)\n        print(12, 2)\n        print(12, 2)\n    else:\n        if n > 8 and n < 13:\n            print(n + 1)\n        elif n < 9 and n > 4:\n            print(n)\n        else:\n            print(n - 1)\n        for i in range(n - 3):\n            print(i + 3, n)\n        while n != 1:\n            print(g, 2)\n            n = n - int(n / 2)\n            c += 1\nl = []\nfor i in range(t):\n    l.append(int(input()))\nfor i in l:\n    chk(i)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    if n < 8:\n        (n2, a) = (n, 0)\n        while n2 > 1:\n            n2 = math.ceil(n2 / 2)\n            a += 1\n        print(n - 3 + a)\n        for i in range(3, n):\n            print(i, n)\n        for i in range(a):\n            print(n, 2)\n    else:\n        (n2, a) = (n, 0)\n        while n2 > 1:\n            n2 = math.ceil(n2 / 8)\n            a += 1\n        if n != 8:\n            print(n - 1 + a)\n        else:\n            print(8)\n        for i in range(3, 8):\n            print(i, n)\n        for i in range(9, n):\n            print(i, n)\n        if n != 8:\n            for i in range(a):\n                print(n, 8)\n        for i in range(3):\n            print(8, 2)", "from math import ceil, sqrt\nfor i in range(int(input())):\n    n = int(input())\n    nsave = n\n    count = 0\n    while n > 2:\n        y = ceil(sqrt(n))\n        count += n - y + 1\n        n = y\n    print(count)\n    n = nsave\n    while n > 2:\n        y = ceil(sqrt(n))\n        for x in range(y + 1, n):\n            print(x, n)\n        print(n, y)\n        print(n, y)\n        n = y", "def dev(n, m):\n    ret = n // m\n    if n % m != 0:\n        ret += 1\n    return ret\nT = int(input())\nlis = [int(input()) for i in range(T)]\nfor t in range(T):\n    n = lis[t]\n    count = 1\n    tmp = 2\n    for i in range(10):\n        tmp = tmp * tmp\n        if tmp >= n:\n            break\n        count += 1\n    dic = {2: 0, 4: 0, 16: 0, 256: 0, 65536: 0}\n    de = [1, 2, 4, 16, 256, 65536]\n    print(n + count - 2)\n    for i in range(3, n):\n        if not i in dic:\n            print(i, n)\n    print(n, de[count])\n    print(n, de[count])\n    for i in range(count, 1, -1):\n        print(de[i], de[i - 1])\n        print(de[i], de[i - 1])", "for i in range(int(input())):\n    n = int(input())\n    if n <= 4:\n        print(n - 1)\n        for i in range(3, n):\n            print(i, i + 1)\n        print(n, 2)\n        print(n, 2)\n    elif n <= 8:\n        print(n)\n        for i in range(3, n):\n            print(i, i + 1)\n        for i in range(3):\n            print(n, 2)\n    else:\n        print(n + 5)\n        for i in range(9, n):\n            print(i, i + 1)\n        for i in range(6):\n            print(n, 8)\n        for i in range(3, 8):\n            print(i, i + 1)\n        for i in range(3):\n            print(8, 2)", "def oot(n):\n    lst1 = [n]\n    nt = n\n    while nt > 2:\n        nt = nt ** (1 / 2)\n        if nt != int(nt):\n            nt = int(nt) + 1\n        lst1.append(int(nt))\n    print(n - 3 + len(lst1))\n    for i in range(3, n):\n        if i not in lst1:\n            print(i, i + 1)\n    for i in range(len(lst1) - 1):\n        print(lst1[i], lst1[i + 1])\n        print(lst1[i], lst1[i + 1])\nt = int(input())\nfor i in range(t):\n    x = int(input())\n    oot(x)", "import math\nfor i in range(int(input())):\n    num = int(input())\n    list_key = [2, 4, 16, 256, 65536]\n    list_i = [i for i in list_key if i < num]\n    list_i.append(num)\n    print(num - 2 + len(list_i) - 1)\n    for i in range(3, num):\n        if i not in list_i:\n            print(i, num)\n    list_i.reverse()\n    for i in range(len(list_i) - 1):\n        print(list_i[i], list_i[i + 1])\n        print(list_i[i], list_i[i + 1])", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    k = n\n    s = 0\n    while k > 4:\n        q = math.ceil(math.sqrt(k))\n        for i in range(q + 1, k):\n            s += 1\n        s += 2\n        k = q\n    if k == 3:\n        s += 2\n    if k == 4:\n        s += 3\n    print(s)\n    while n > 4:\n        q = math.ceil(math.sqrt(n))\n        for i in range(q + 1, n):\n            print(i, n)\n        print(n, q)\n        print(n, q)\n        n = q\n    if n == 3:\n        print(3, 2)\n        print(3, 2)\n    if n == 4:\n        print(3, 4)\n        print(4, 2)\n        print(4, 2)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    ans = []\n    if n <= 16:\n        for i in range(3, n):\n            ans.append((i, n))\n        temp = n\n        while temp > 1:\n            ans.append((n, 2))\n            temp = math.ceil(temp / 2)\n    else:\n        for i in range(3, n):\n            if i == 16:\n                continue\n            ans.append((i, n))\n        temp = n\n        while temp > 1:\n            ans.append((n, 16))\n            temp = math.ceil(temp / 16)\n        k = 16\n        temp = k\n        while temp > 1:\n            ans.append((k, 2))\n            temp = math.ceil(temp / 2)\n    print(len(ans))\n    for i in range(len(ans)):\n        print(*ans[i])", "import math\n\ndef cout(n):\n    if n < 3:\n        return\n    k = math.ceil(n ** 0.5)\n    for i in range(k + 1, n):\n        ans[0] += 1\n        hello.append([i, n])\n    ans[0] += 2\n    hello.append([n, k])\n    hello.append([n, k])\n    cout(k)\n    return\nfor _ in range(int(input())):\n    ans = [0]\n    hello = []\n    n = int(input())\n    cout(n)\n    print(ans[0])\n    for i in hello:\n        print(*i)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = []\n    while n != 2:\n        s = int(math.ceil(math.sqrt(n)))\n        for j in range(s + 1, n):\n            ans.append((j, n))\n        ans += [(n, s)] * 2\n        n = s\n    print(len(ans))\n    for i in ans:\n        print(i[0], i[1])", "UPOW = 4\nfor _ in ' ' * int(input()):\n    n = int(input())\n    sq = int(n ** (1 / UPOW))\n    if sq ** UPOW != n:\n        sq += 1\n    nt = n\n    sqt = sq\n    ops = []\n    for i in range(3, n):\n        if i != sq:\n            ops.append((i, n))\n    while nt > 1:\n        ops.append((n, sq))\n        nt = (nt + sq - 1) // sq\n    while sqt > 1 and sq != 2:\n        ops.append((sq, 2))\n        sqt = (sqt + 1) // 2\n    print(len(ops))\n    for o in ops:\n        print(*o)", "import math\nt = int(input())\nwhile t != 0:\n    t -= 1\n    n = int(input())\n    ans = []\n    low = 3\n    mx = n\n    while mx > 2:\n        low = math.ceil(math.sqrt(mx))\n        for i in range(low + 1, mx):\n            ans.append((i, mx))\n        ans.append((mx, low))\n        ans.append((mx, low))\n        mx = low\n        low = math.ceil(math.sqrt(mx))\n    print(len(ans))\n    for i in ans:\n        print(i[0], i[1])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = []\n    if n > 12:\n        for i in range(13, n):\n            ans.append((i, n))\n        prod = 1\n        while prod < n:\n            ans.append((n, 12))\n            prod *= 12\n        for i in range(5, 12):\n            ans.append((i, 12))\n        ans.append((12, 4))\n        ans.append((12, 3))\n        ans.append((3, 4))\n        ans.append((4, 2))\n        ans.append((4, 2))\n    else:\n        for i in range(3, n):\n            ans.append((i, n))\n        prod = 1\n        while prod < n:\n            ans.append((n, 2))\n            prod *= 2\n    print(len(ans))\n    for (i, j) in ans:\n        print(i, j)", "import math\nfor t in range(int(input())):\n    ans = []\n    n = int(input())\n    while n > 2:\n        x = n\n        for i in range(n - 1, math.ceil(n ** 0.5), -1):\n            ans.append([i, n])\n        ans.append([n, math.ceil(n ** 0.5)])\n        ans.append([n, math.ceil(n ** 0.5)])\n        n = math.ceil(n ** 0.5)\n    print(len(ans))\n    for i in ans:\n        print(*i)", "import math\nfor t in range(int(input())):\n    ans = []\n    n = int(input())\n    while n > 2:\n        x = n\n        for i in range(n - 1, math.ceil(n ** 0.5), -1):\n            ans.append([i, n])\n        ans.append([n, math.ceil(n ** 0.5)])\n        ans.append([n, math.ceil(n ** 0.5)])\n        n = math.ceil(n ** 0.5)\n    print(len(ans))\n    for i in ans:\n        print(*i)", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = []\n    l.append(n)\n    while l[-1] != 2:\n        l.append(ceil(l[-1] ** 0.5))\n    ans = []\n    for i in range(2, n):\n        if i not in l:\n            ans.append((i, n))\n    for i in range(len(l) - 1):\n        ans.append((l[i], l[i + 1]))\n        ans.append((l[i], l[i + 1]))\n    print(len(ans))\n    for item in ans:\n        print(item[0], item[1])", "import sys\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef solve():\n    for t in range(int(input())):\n        n = int(input())\n        j = n\n        res = []\n        while j != 2:\n            x = int(j ** 0.5)\n            if x * x < j:\n                x += 1\n            for i in range(x + 1, j):\n                res.append((i, i + 1))\n            res.append((j, x))\n            res.append((j, x))\n            j = x\n        print(len(res))\n        for (a, b) in res:\n            print(a, b)\nsolve()", "import sys\nimport math, bisect, operator\n(inf, mod) = (float('inf'), 10 ** 9 + 7)\nsys.setrecursionlimit(10 ** 5)\nfrom itertools import groupby, accumulate\nfrom heapq import heapify, heappop, heappush\nfrom collections import deque, Counter, defaultdict\nI = lambda : int(sys.stdin.readline())\nneo = lambda : map(int, sys.stdin.readline().split())\nNeo = lambda : list(map(int, sys.stdin.readline().split()))\nfor _ in range(I()):\n    n = I()\n    Ans = []\n    (low, t) = (3, n)\n    while t > 2:\n        low = math.ceil(t ** 0.5)\n        for i in range(low + 1, t):\n            Ans += [(i, t)]\n        Ans += [(t, low)]\n        Ans += [(t, low)]\n        t = low\n    print(len(Ans))\n    for (i, j) in Ans:\n        print(i, j)", "from math import ceil, sqrt\nfor i in range(int(input())):\n    n = int(input())\n    spec = []\n    m = n\n    while m > 2:\n        spec.append(m)\n        m = ceil(sqrt(m))\n    if len(spec) > 0 and spec[-1] != 2:\n        spec.append(2)\n    ans = []\n    used = [0] * n\n    for e in spec:\n        used[e - 1] = 1\n    for i in range(1, n - 1):\n        if not used[i]:\n            ans.append((i + 1, n))\n    for i in range(1, len(spec)):\n        ans.append((spec[i - 1], spec[i]))\n        ans.append((spec[i - 1], spec[i]))\n    print(len(ans))\n    for e in ans:\n        print(*e)", "import math\nfor t in range(int(input())):\n    ans = []\n    n = int(input())\n    while n > 2:\n        x = n\n        for i in range(n - 1, math.ceil(n ** 0.5), -1):\n            ans.append([i, n])\n        ans.append([n, math.ceil(n ** 0.5)])\n        ans.append([n, math.ceil(n ** 0.5)])\n        n = math.ceil(n ** 0.5)\n    print(len(ans))\n    for i in ans:\n        print(*i)", "def solve():\n    n = int(input())\n    num = n - 1\n    den = n\n    ans = ''\n    count = 0\n    while den > 2:\n        while not (den / num <= num and den / (num - 1) > num - 1):\n            ans += '\\n' + str(num) + ' ' + str(den)\n            count += 1\n            num -= 1\n        ans += '\\n' + str(den) + ' ' + str(num)\n        ans += '\\n' + str(den) + ' ' + str(num)\n        count += 2\n        den = num\n        num -= 1\n    ans = str(count) + ans\n    print(ans)\n\ndef main():\n    T = int(input())\n    for c in range(T):\n        solve()\nmain()", "def readLine():\n    return [int(s) for s in input().split(' ')]\nzbior = {2, 4, 16, 256, 65536}\n\ndef solve():\n    n = int(input())\n    ans = []\n    maxi = 2\n    for i in range(2, n + 1):\n        y = {i}\n        if y.issubset(zbior):\n            continue\n        elif i < n:\n            ans.append([i, n])\n        else:\n            while maxi * maxi <= n:\n                maxi = maxi * maxi\n            ans.append([n, maxi])\n            ans.append([n, maxi])\n    while maxi * maxi <= n:\n        maxi = maxi * maxi\n    specjalne = []\n    cur = 2\n    while cur <= maxi:\n        specjalne.append(cur)\n        cur = cur * cur\n    specjalne.reverse()\n    p = 0\n    for cur in specjalne:\n        if cur == 2:\n            break\n        pop = specjalne[p + 1]\n        akt = specjalne[p]\n        ans.append([akt, pop])\n        ans.append([akt, pop])\n        p = p + 1\n    print(len(ans))\n    for x in ans:\n        print(x[0], x[1])\ntt = int(input())\nfor x in range(tt):\n    solve()", "import math\nfor t in range(int(input())):\n    ans = []\n    n = int(input())\n    while n > 2:\n        x = n\n        for i in range(n - 1, math.ceil(n ** 0.5), -1):\n            ans.append([i, n])\n        ans.append([n, math.ceil(n ** 0.5)])\n        ans.append([n, math.ceil(n ** 0.5)])\n        n = math.ceil(n ** 0.5)\n    print(len(ans))\n    for i in ans:\n        print(*i)", "import math\nfor tt in range(int(input())):\n    n = int(input())\n    kn = n\n    if n > 8:\n        ops = []\n        for i in range(3, n):\n            if i == 8:\n                continue\n            ops.append([i, n])\n        while n != 1:\n            n = math.ceil(n / 8)\n            ops.append([kn, 8])\n        ops.append([8, 2])\n        ops.append([8, 2])\n        ops.append([8, 2])\n    else:\n        ops = []\n        for i in range(3, n):\n            ops.append([i, n])\n        for i in range(math.ceil(math.log(n, 2))):\n            ops.append([n, 2])\n    print(len(ops))\n    for i in ops:\n        print(*i)", "from math import *\nfor y in range(int(input())):\n    n = int(input())\n    lst = []\n    while n > 2:\n        temp = ceil(n ** 0.5)\n        for i in range(n - 1, temp, -1):\n            lst.append([i, n])\n        lst.append([n, temp])\n        lst.append([n, temp])\n        n = temp\n    print(len(lst))\n    for i in lst:\n        print(*i)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    ans = []\n    if n <= 8:\n        for i in range(n - 1, 2, -1):\n            ans.append([i, n])\n        temp = n\n        while temp > 1:\n            ans.append([n, 2])\n            if temp / 2 == temp // 2:\n                temp = temp / 2\n            else:\n                temp = temp // 2 + 1\n    else:\n        for i in range(n - 1, 8, -1):\n            ans.append([i, n])\n        temp = n\n        while temp > 1:\n            ans.append([n, 8])\n            if temp / 8 == temp // 8:\n                temp = temp / 8\n            else:\n                temp = temp // 8 + 1\n        for i in range(7, 2, -1):\n            ans.append([i, 8])\n        temp = 8\n        while temp > 1:\n            ans.append([8, 2])\n            if temp / 2 == temp // 2:\n                temp = temp / 2\n            else:\n                temp = temp // 2 + 1\n    print(len(ans))\n    for i in ans:\n        print(i[0], i[1])\n    t -= 1", "from math import ceil\nfor _ in range(int(input())):\n    n = int(input())\n    num = n\n    Div = []\n    if n > 8:\n        for i in range(3, n):\n            if i != 8:\n                Div.append([i, n])\n        while n != 1:\n            Div.append([num, 8])\n            n = ceil(n / 8)\n        n = 8\n        while n != 1:\n            Div.append([8, 2])\n            n //= 2\n    else:\n        for i in range(3, n):\n            Div.append([i, n])\n        while n != 1:\n            Div.append([num, 2])\n            n = ceil(n / 2)\n    print(len(Div))\n    for i in Div:\n        print(*i)", "from math import *\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = []\n    if n > 8:\n        for i in range(3, n):\n            if i != 8:\n                ans.append([i, n])\n                pass\n        nk = n\n        while n != 1:\n            ans.append([nk, 8])\n            n = ceil(n / 8)\n        ans.append([8, 2])\n        ans.append([8, 2])\n        ans.append([8, 2])\n        print(len(ans))\n        for i in ans:\n            print(*i)\n    else:\n        for i in range(3, n):\n            if i != 8:\n                ans.append([i, n])\n                pass\n        nk = n\n        while n != 1:\n            ans.append([nk, 2])\n            n = ceil(n / 2)\n        print(len(ans))\n        for i in ans:\n            print(*i)", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    res = []\n    while n > 2:\n        s = ceil(n ** 0.5)\n        for i in range(s + 1, n):\n            res.append([i, i + 1])\n        res.append([n, s])\n        res.append([n, s])\n        n = s\n    print(len(res))\n    for (a, b) in res:\n        print(a, b)", "T = int(input())\nr = 1\n\ndef getans(target, n):\n    ans = []\n    num1 = target\n    num2 = n\n    flag = True\n    while True:\n        if num1 > num2:\n            num1 = (num1 - 1) // num2 + 1\n            ans.append([target, n])\n        elif num1 < num2:\n            num2 = (num2 - 1) // num1 + 1\n            ans.append([n, target])\n        else:\n            if num1 == 2 and num2 == 2:\n                ans.append([target, n])\n                break\n            else:\n                flag = False\n            break\n    if len(ans) > 7 or not flag:\n        return []\n    ans = ans[::-1]\n    for i in range(n - 2):\n        if i + 2 == target:\n            continue\n        ans.append([i + 2, n])\n    return ans[::-1]\nwhile r <= T:\n    n = int(input())\n    for target in range(2, int(n ** 0.5 + 1) + 1):\n        ans = getans(target, n)\n        if len(ans) == 0:\n            continue\n        else:\n            break\n    print(len(ans))\n    for ele in ans:\n        print(ele[0], ele[1])\n    r += 1", "T = int(input())\nfor t in range(T):\n    d = int(input())\n    n = d\n    ans = []\n    while n > 2:\n        for i in range(n):\n            if i * i >= n:\n                if n >= (i - 1) * (i - 1) + i - 1:\n                    for j in range(n - 1, i, -1):\n                        ans.append([j, n])\n                    ans.append([n, i])\n                    ans.append([n, i])\n                else:\n                    for j in range(n - 1, i, -1):\n                        ans.append([j, n])\n                    ans.append([n, i - 1])\n                    ans.append([n, i])\n                n = i\n                break\n    print(len(ans))\n    for i in ans:\n        print(*i, sep=' ')", "import math\nfor i in range(int(input())):\n    n = int(input())\n    a = [i for i in range(1, n + 1)]\n    g = [-1] * n\n    g[0] = 0\n    g[1] = 0\n    k = n\n    x = []\n    y = []\n    c = 0\n    while k != 2:\n        g[k - 1] = 0\n        k = int(math.ceil(math.sqrt(k)))\n    for j in range(1, n):\n        if g[j] == -1:\n            c = c + 1\n            x.append(j + 1)\n            y.append(n)\n    for j in range(n - 1, 1, -1):\n        if g[j] == 0:\n            c = c + 2\n            y.append(int(math.ceil(math.sqrt(j + 1))))\n            y.append(int(math.ceil(math.sqrt(j + 1))))\n            x.append(j + 1)\n            x.append(j + 1)\n    print(c)\n    for j in range(c):\n        print(x[j], y[j])", "import math\nsqrt = math.sqrt\nceil = math.ceil\niterations = input()\nfor e in range(int(iterations)):\n    n = int(input())\n    ans = []\n    while n > 2:\n        cap = ceil(sqrt(n))\n        for i in range(n - 1, cap, -1):\n            ans.append([i, n])\n        ans.append([n, cap])\n        ans.append([n, cap])\n        n = cap\n    print(len(ans))\n    for v in ans:\n        print(*v)", "from math import ceil\n\ndef solve(n):\n    if n <= 256:\n        m = 0\n        x = n\n        while x > 1:\n            m += 1\n            x = ceil(x / 2)\n        print(n - 3 + m)\n        for i in range(3, n):\n            print(i, ' ', n)\n        a = n\n        while a > 1 and n > 2:\n            print(n, ' ', 2)\n            a = ceil(a / 2)\n    else:\n        m = 0\n        x = n\n        while x > 1:\n            m += 1\n            x = ceil(x / 32)\n        print(n - 4 + m + 5)\n        for i in range(3, n):\n            if i != 32:\n                print(i, ' ', n)\n        a = n\n        while a > 1:\n            print(n, ' ', 32)\n            a = ceil(a / 32)\n        print(32, ' ', 2)\n        print(32, ' ', 2)\n        print(32, ' ', 2)\n        print(32, ' ', 2)\n        print(32, ' ', 2)\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    solve(n)", "for u in range(int(input())):\n    n = int(input())\n    y = []\n    while n > 2:\n        i = n - 1\n        while (i - 1) ** 2 >= n:\n            y.append([i, n])\n            i -= 1\n        y.append([n, i])\n        y.append([n, i])\n        n = i\n    print(len(y))\n    for i in y:\n        print(*i)", "import math\n\ndef solution():\n    for tc in range(int(input())):\n        n = int(input())\n        ls = [i for i in range(1, n + 1)]\n        ans = []\n        for i in range(n - 2, 0, -1):\n            while math.ceil(ls[n - 1] / ls[i]) >= ls[i]:\n                ans.append([n, i + 1])\n                ls[n - 1] = math.ceil(ls[n - 1] / ls[i])\n            ans.append([i + 1, n])\n            ls[i] = math.ceil(ls[i] / ls[n - 1])\n        print(len(ans))\n        for i in range(len(ans)):\n            print(*ans[i])\nsolution()"]