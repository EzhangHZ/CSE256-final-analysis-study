["def lol(arr, t):\n    count = 0\n    n = len(arr)\n    l = 0\n    r = len(arr) - 1\n    while l < r:\n        if arr[l] + arr[r] > t:\n            count += r - l\n            r -= 1\n        else:\n            l += 1\n    return n * (n - 1) / 2 - count\nfor _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    a = lol(arr, r)\n    b = lol(arr, l - 1)\n    print(int(a - b))", "def count_pairs(arr, target):\n    count = 0\n    n = len(arr)\n    l = 0\n    r = len(arr) - 1\n    while l < r:\n        if arr[l] + arr[r] > target:\n            count += r - l\n            r -= 1\n        else:\n            l += 1\n    return n * (n - 1) / 2 - count\nfor _ in range(int(input())):\n    (n, low, high) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    a = count_pairs(arr, high)\n    b = count_pairs(arr, low - 1)\n    print(int(a - b))", "takeArr = lambda : list(map(int, input().split()))\nimport sys\nsys.setrecursionlimit(10 ** 6)\n\ndef find(arr, i, j, x):\n    ans = 0\n    while i < j:\n        if arr[i] + arr[j] < x:\n            ans += j - i\n            i += 1\n        else:\n            j -= 1\n    return ans\nfor t in range(int(input())):\n    (n, l, r) = takeArr()\n    arr = takeArr()\n    arr.sort()\n    ans = find(arr, 0, n - 1, r + 1) - find(arr, 0, n - 1, l)\n    print(ans)", "def find_solution_of_sub_problem(a, x):\n    result = 0\n    left = 0\n    right = len(arr) - 1\n    while left < right:\n        if a[left] + a[right] <= x:\n            result += right - left\n            left += 1\n        else:\n            right -= 1\n    return result\ntry:\n    for _ in range(int(input())):\n        (n, l, r) = map(int, input().split())\n        arr = list(map(int, input().split()))\n        arr.sort()\n        ans1 = find_solution_of_sub_problem(arr, r)\n        ans2 = find_solution_of_sub_problem(arr, l - 1)\n        print(abs(ans1 - ans2))\nexcept e:\n    pass", "def d_c_check(arr, max_val):\n    size = len(arr)\n    i = 0\n    j = size - 1\n    res = 0\n    while i < j:\n        if arr[i] + arr[j] > max_val:\n            res += j - i\n            j -= 1\n        else:\n            i += 1\n    return res\nt = int(input())\nfor z in range(t):\n    a = []\n    res = 0\n    (n, l, r) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    hi_c = d_c_check(a, r)\n    low_c = d_c_check(a, l - 1)\n    print(low_c - hi_c)", "import collections\nfrom math import ceil, gcd, sqrt, log\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    (n, l, r) = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort()\n    net1 = 0\n    (i, j) = (0, n - 1)\n    while i < j:\n        if A[i] + A[j] > r:\n            j -= 1\n        else:\n            net1 += j - i\n            i += 1\n    net2 = 0\n    (i, j) = (0, n - 1)\n    while i < j:\n        if A[i] + A[j] < l:\n            i += 1\n        else:\n            net2 += j - i\n            j -= 1\n    net = n * (n - 1) // 2\n    ans = abs(net - (net1 + net2))\n    print(ans)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "def binary(a, n, l, r):\n    c = 0\n    i = 0\n    low = n - 1\n    high = n - 1\n    while i < high:\n        low = max(i, low)\n        while low > i and a[i] + a[low] >= l:\n            low = low - 1\n        while high > low and a[i] + a[high] > r:\n            high = high - 1\n        c += high - low\n        i += 1\n    print(c)\nfor _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    binary(a, n, l, r)", "def paris(arr, n, x):\n    l = 0\n    r = n - 1\n    result = 0\n    while l < r:\n        if arr[l] + arr[r] <= x:\n            result += r - l\n            l += 1\n        else:\n            r -= 1\n    return result\nt = int(input())\nfor i in range(t):\n    info = list(map(int, input().split()))\n    n = info[0]\n    l = info[1]\n    r = info[2]\n    arr = list(map(int, input().split()))\n    arr.sort()\n    print(paris(arr, n, r) - paris(arr, n, l - 1))", "import bisect\nfrom collections import Counter\n\ndef main(a, l, r):\n    n = len(a)\n    if n < 2:\n        return 0\n    a = sorted(a)\n    i = 0\n    j = len(a) - 1\n    ans1 = 0\n    while j > i:\n        if a[j] + a[i] >= l:\n            j -= 1\n        else:\n            ans1 += j - i\n            i += 1\n    ans2 = 0\n    i = 0\n    j = len(a) - 1\n    while j > i:\n        if a[j] + a[i] <= r:\n            i += 1\n        else:\n            ans2 += j - i\n            j -= 1\n    return int(n * (n - 1) / 2 - (ans1 + ans2))\nt = int(input())\noutputs = []\nfor _ in range(t):\n    (n, l, r) = list(map(int, input().split(' ')))\n    arr = list(map(int, input().split(' ')))\n    output = main(arr, l, r)\n    outputs.append(output)\nfor o in outputs:\n    print(o)", "def main(n, l, r, arr):\n    arr.sort()\n    count = 0\n    (i, l_idx, r_idx) = (0, len(arr) - 1, len(arr) - 1)\n    while i < r_idx:\n        l_idx = max(i, l_idx)\n        while i < l_idx and arr[i] + arr[l_idx] >= l:\n            l_idx -= 1\n        while l_idx < r_idx and arr[i] + arr[r_idx] > r:\n            r_idx -= 1\n        count += r_idx - l_idx\n        i += 1\n    return count\nt = int(input().strip())\nfor _ in range(t):\n    (n, l, r) = map(int, input().strip().split())\n    arr = list(map(int, input().strip().split()))\n    print(main(n, l, r, arr))", "import math\n\ndef sol(A, l, r):\n    A = sorted(A)\n    (greater_than_r, less_than_l) = (0, 0)\n    (i, j) = (0, len(A) - 1)\n    while i < j:\n        if A[i] + A[j] > r:\n            greater_than_r += j - i\n            j -= 1\n        else:\n            i += 1\n    (i, j) = (0, len(A) - 1)\n    while i < j:\n        if A[i] + A[j] < l:\n            less_than_l += j - i\n            i += 1\n        else:\n            j -= 1\n    return math.comb(len(A), 2) - greater_than_r - less_than_l\nx = int(input())\nfor _ in range(x):\n    y = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    print(sol(A, y[1], y[2]))", "def xx(a, n):\n    c = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] + a[j] >= n:\n            j -= 1\n        else:\n            c += j - i\n            i += 1\n    return c\nfrom sys import stdin, stdout\nfor _ in range(int(stdin.readline())):\n    (n, l, r) = map(int, stdin.readline().split())\n    c = 0\n    a = list(map(int, stdin.readline().split()))\n    a.sort()\n    a1 = xx(a, l)\n    a2 = xx(a, r + 1)\n    print(a2 - a1)", "def xx(a, n):\n    c = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] + a[j] >= n:\n            j -= 1\n        else:\n            c += j - i\n            i += 1\n    return c\nfrom sys import stdin, stdout\nfor _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    c = 0\n    a = list(map(int, input().split()))\n    a.sort()\n    a1 = xx(a, l)\n    a2 = xx(a, r + 1)\n    print(a2 - a1)", "import sys\n\ndef till_some_range(a, n, till_range):\n    start = 0\n    end = n - 1\n    valid_pairs = 0\n    while start < end:\n        if a[start] + a[end] < till_range:\n            valid_pairs += end - start\n            start += 1\n        else:\n            end -= 1\n    return valid_pairs\n\ndef solve(a, n, l, r):\n    pairs = 0\n    a.sort()\n    pairs += till_some_range(a, n, r + 1)\n    pairs -= till_some_range(a, n, l)\n    return pairs\ni = sys.stdin.readline\nfor _ in range(int(i())):\n    (n, l, r) = tuple(map(int, i().split()))\n    a = list(map(int, i().split()))\n    result = solve(a, n, l, r)\n    print(result)", "from collections import defaultdict\nlinp = lambda : list(map(int, input().split()))\niinp = lambda : int(input())\ntinp = lambda : map(int, input().split())\nrinp = lambda : range(int(input()))\ndct = lambda : defaultdict(lambda : 0)\nfrom collections import Counter\nfrom math import ceil\n\ndef cnt(a, mx, l, r):\n    c = 0\n    while l < r:\n        if a[l] + a[r] <= mx:\n            c += r - l\n            l += 1\n        else:\n            r -= 1\n    return c\nfor _ in rinp():\n    (n, x, y) = tinp()\n    ar = linp()\n    ar.sort()\n    st = set()\n    a = cnt(ar, y, 0, n - 1)\n    b = cnt(ar, x - 1, 0, n - 1)\n    print(a - b)", "def lessthan(a, end):\n    i = 0\n    j = len(a) - 1\n    c = 0\n    while i < j:\n        k = a[i] + a[j]\n        if k < end:\n            c += j - i\n            i += 1\n        else:\n            j -= 1\n    return c\nfor _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = 0\n    a.sort()\n    a1 = lessthan(a, l)\n    a2 = lessthan(a, r + 1)\n    print(a2 - a1)", "for i in range(int(input())):\n    (n, l, r) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    a.sort()\n\n    def pairs(m):\n        (x, y) = (0, n - 1)\n        ans = 0\n        while x < y:\n            if a[x] + a[y] < m:\n                ans += y - x\n                x += 1\n            else:\n                y -= 1\n        return ans\n    print(pairs(r + 1) - pairs(l))", "for _ in range(int(input())):\n    (n, s, r) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    l = sorted(l)\n    i = 0\n    h = n - 1\n    b = n - 1\n    while i < h:\n        b = max(i, b)\n        while b > i and l[i] + l[b] >= s:\n            b -= 1\n        while h > b and l[i] + l[h] > r:\n            h -= 1\n        c += h - b\n        i += 1\n    print(c)", "for _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))\n    t = n - 1\n    p = n - 1\n    ans = 0\n    for j in range(n):\n        i = a[j]\n        while i + a[p] > r and p >= 0:\n            p -= 1\n        while i + a[t] >= l and t >= 0:\n            t -= 1\n        if p > j:\n            ans += p - max(t, j)\n        else:\n            break\n    print(ans)", "def findPairs(arr, n, x):\n    l = 0\n    r = n - 1\n    result = 0\n    while l < r:\n        if arr[l] + arr[r] < x:\n            result += r - l\n            l += 1\n        else:\n            r -= 1\n    return result\nfor i in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    arr = [int(x) for x in input().split()]\n    arr.sort()\n    print(findPairs(arr, n, r + 1) - findPairs(arr, n, l))", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_string():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_print_int(x):\n    sys.stdout.write(str(x) + '\\n')\n\ndef get_print(x):\n    sys.stdout.write(x + '\\n')\n\ndef get_print_int_same(x):\n    sys.stdout.write(str(x) + ' ')\n\ndef get_print_same(x):\n    sys.stdout.write(x + ' ')\nfrom sys import maxsize\n\ndef helper(arr, summ):\n    n = len(arr)\n    i = 0\n    j = n - 1\n    ans = 0\n    while i < j:\n        x = arr[i] + arr[j]\n        if x <= summ:\n            ans += j - i\n            i += 1\n        else:\n            j -= 1\n    return ans\n\ndef solve():\n    for _ in range(get_int()):\n        (n, l, r) = get_ints()\n        arr = get_list()\n        arr.sort()\n        get_print_int(helper(arr, r) - helper(arr, l - 1))\nsolve()", "def findPairsl(arr, n, x):\n    l = 0\n    r = n - 1\n    result = 0\n    while l < r:\n        if arr[l] + arr[r] < x:\n            result += r - l\n            l += 1\n        else:\n            r -= 1\n    return result\n\ndef findPairsr(arr, n, x):\n    l = 0\n    r = n - 1\n    result = 0\n    while l < r:\n        if arr[l] + arr[r] <= x:\n            result += r - l\n            l += 1\n        else:\n            r -= 1\n    return n * (n - 1) // 2 - result\nt = int(input())\nfor _ in range(t):\n    (n, l, r) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ans = n * (n - 1) // 2\n    ans -= findPairsl(arr, n, l)\n    ans -= findPairsr(arr, n, r)\n    print(ans)", "def fun(l, k):\n    count = 0\n    n = len(l)\n    i = 0\n    j = n - 1\n    while i < j:\n        if l[i] + l[j] < k:\n            count += j - i\n            i += 1\n        else:\n            j -= 1\n    return count\nt = int(input())\nfor t in range(t):\n    (n, l, r) = map(int, input().split())\n    li = list(map(int, input().split()))\n    li.sort()\n    d1 = fun(li, r + 1)\n    d2 = fun(li, l)\n    print(d1 - d2)", "def find(a, k):\n    count = 0\n    n = len(a)\n    (i, j) = (0, n - 1)\n    while i < j:\n        if a[i] + a[j] < k:\n            count += j - i\n            i += 1\n        else:\n            j -= 1\n    return count\nfor _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    v1 = find(a, r + 1)\n    v2 = find(a, l)\n    print(v1 - v2)", "def pair(n, l, r, arr):\n    arr.sort()\n    i = 0\n    ans1 = 0\n    ans2 = 0\n    j = n - 1\n    while j > i:\n        if arr[i] + arr[j] < l:\n            i += 1\n        else:\n            ans1 += j - i\n            j -= 1\n    i = 0\n    j = n - 1\n    while j > i:\n        if arr[i] + arr[j] <= r:\n            i += 1\n        else:\n            ans2 += j - i\n            j -= 1\n    return ans1 - ans2\nfor _ in range(int(input())):\n    (n, l, r) = list(map(int, input().split(' ')))\n    arr = list(map(int, input().split(' ')))\n    print(pair(n, l, r, arr))", "def func(a, n):\n    count = 0\n    i = 0\n    j = len(a) - 1\n    while i < j:\n        if a[i] + a[j] >= n:\n            j -= 1\n        else:\n            count += j - i\n            i += 1\n    return count\nfor _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    d1 = func(a, l)\n    d2 = func(a, r + 1)\n    print(d2 - d1)", "def co(a, n):\n    i = 0\n    j = len(a) - 1\n    c = 0\n    while i < j:\n        if a[i] + a[j] < n:\n            c += j - i\n            i += 1\n        else:\n            j -= 1\n    return c\nfor _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    x = co(a, l)\n    y = co(a, r + 1)\n    print(y - x)", "tests = int(input())\n\ndef solve(a, n, k):\n    i = 0\n    temp = 0\n    for j in range(n - 1, -1, -1):\n        while a[i] + a[j] <= k and i < j:\n            i += 1\n        if i <= j:\n            temp += i\n        else:\n            temp += j\n    return temp\nfor _ in range(tests):\n    (n, l, r) = map(int, input().split())\n    test = list(map(int, input().split()))\n    test.sort()\n    ans = solve(test, n, r) - solve(test, n, l - 1)\n    print(ans)", "from math import *\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom collections import Counter as ctr\nfrom collections import deque as dq\nfrom array import array\nfrom re import search\nli = lambda : list(map(int, input().split()))\narr = lambda a: array('i', a)\nbi = lambda n: bin(n).replace('0b', '')\nyn = lambda f: print('NYOE S'[f::2])\nsbstr = lambda a, s: search('.*'.join(a), s)\n\ndef solve():\n    for _ in range(int(input())):\n        (n, l, r) = li()\n        a = arr(sorted(li()))\n        c = 0\n        i = 0\n        j = n - 1\n        while i < j:\n            if a[i] + a[j] > r:\n                j -= 1\n            elif a[i] + a[j] < l:\n                i += 1\n            else:\n                c += j - bl(a, l - a[i], i + 1) + 1\n                i += 1\n        print(c)\nsolve()", "for _ in range(int(input())):\n    (n, s, r) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    l = sorted(l)\n    i = 0\n    h = n - 1\n    b = n - 1\n    while i < h:\n        b = max(i, b)\n        while b > i and l[i] + l[b] >= s:\n            b -= 1\n        while h > b and l[i] + l[h] > r:\n            h -= 1\n        c += h - b\n        i += 1\n    print(c)", "def findPair(arr, n, x):\n    l = 0\n    r = n - 1\n    result = 0\n    while l < r:\n        if arr[l] + arr[r] < x:\n            result += r - l\n            l += 1\n        else:\n            r -= 1\n    return result\nfor _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ans = 0\n    ans += findPair(arr, n, r + 1)\n    ans -= findPair(arr, n, l)\n    print(ans)", "def countrangesum(n, num, lower, upper):\n    if not n - 1:\n        return 0\n    pairs = 0\n    num = sorted(num)\n    start = 0\n    high = n - 1\n    while num[start] + num[-1] < lower:\n        start += 1\n        if start == n - 1:\n            return pairs\n    low = start + 1\n    while num[start] + num[low] < lower:\n        low += 1\n    while high > start:\n        if low <= start:\n            low = start + 1\n        while num[high] + num[start] > upper and high > start:\n            high -= 1\n        while num[low] + num[start] >= lower:\n            low -= 1\n            if low == start:\n                break\n        pairs += high - low\n        start += 1\n    return pairs\nT = int(input())\nfor _ in range(T):\n    (n, lower, upper) = map(int, input().split())\n    num = list(map(int, input().split()))\n    print(countrangesum(n, num, lower, upper))", "R = lambda : map(int, input().split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, l, r) = R()\n    a = sorted(R())\n    i = j = q = 0\n    while i < n:\n        n -= 1\n        while i < n and a[i] + a[n] < l:\n            i += 1\n        while j < n and a[j] + a[n] <= r:\n            j += 1\n        q += min(j, n) - i\n    print(q)", "for _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    nums = list(map(int, input().split()))\n    nums.sort()\n    (low, high) = (n - 1, n - 1)\n    i = 0\n    count = 0\n    while i < high:\n        low = max(i, low)\n        while low > i and nums[i] + nums[low] >= l:\n            low -= 1\n        while high > low and nums[i] + nums[high] > r:\n            high -= 1\n        count += high - low\n        i += 1\n    print(count)", "import math\n\ndef main():\n\n    def solve(N, L, R, H):\n        H.sort()\n        return helper(H, R) - helper(H, L - 1)\n\n    def helper(H, lim):\n        (i, j) = (0, len(H) - 1)\n        count = 0\n        while i < j:\n            if H[i] + H[j] <= lim:\n                count += j - i\n                i += 1\n            else:\n                j -= 1\n        return count\n\n    def read_input():\n        number_tests = int(input())\n        for i in range(number_tests):\n            (N, L, R) = input().split()\n            H = input().split()\n            H = list(map(lambda x: int(x), H))\n            print(solve(int(N), int(L), int(R), H))\n    read_input()\nmain()", "for _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    i = j = count = 0\n    while i < n:\n        n -= 1\n        while i < n and a[i] + a[n] < l:\n            i += 1\n        while j < n and a[j] + a[n] <= r:\n            j += 1\n        count += min(j, n) - i\n    print(count)", "from collections import defaultdict, Counter\nfrom bisect import bisect, bisect_left\nfrom math import sqrt, gcd, ceil, factorial\nfrom heapq import heapify, heappush, heappop\nMOD = 10 ** 9 + 7\ninf = float('inf')\nans_ = []\n\ndef nin():\n    return int(input())\n\ndef ninf():\n    return int(file.readline())\n\ndef st():\n    return input().strip()\n\ndef stf():\n    return file.readline().strip()\n\ndef read():\n    return list(map(int, input().strip().split()))\n\ndef readf():\n    return list(map(int, file.readline().strip().split()))\n\ndef f(arr, x):\n    n = len(arr)\n    (i, j) = (0, n - 1)\n    ans = 0\n    while i < j:\n        if arr[i] + arr[j] < x:\n            i += 1\n            ans += j - i + 1\n        else:\n            j -= 1\n    return ans\n\ndef solve():\n    for _ in range(nin()):\n        (n, l, r) = read()\n        arr = read()\n        arr.sort()\n        ans_.append(f(arr, r + 1) - f(arr, l))\nsolve()\nfor i in ans_:\n    print(i)", "import bisect as bs\n\ndef solve(nums, mx):\n    n = len(nums)\n    nums = sorted(nums)\n    count = 0\n    i = 0\n    j = n - 1\n    while i < j:\n        while i < j and nums[i] + nums[j] > mx:\n            j -= 1\n        count += j - i\n        i += 1\n    return count\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        (n, l, r) = list(map(int, input().split()))\n        nums = list(map(int, input().split()))\n        print(solve(nums, r) - solve(nums, l - 1))\nmain()", "for _ in range(int(input())):\n    (n, l, r) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    a.sort()\n    c = 0\n    (low, high) = (n - 1, n - 1)\n    i = 0\n    while i < high:\n        low = max(i, low)\n        while low > i and a[i] + a[low] >= l:\n            low -= 1\n        while high > low and a[i] + a[high] > r:\n            high -= 1\n        c += high - low\n        i += 1\n    print(c)", "def pair(a, x):\n    p = 0\n    (l, r) = (0, len(a) - 1)\n    while l < r:\n        if a[l] + a[r] <= x:\n            p += r - l\n        else:\n            while a[l] + a[r] > x and r > l:\n                r -= 1\n            if r > l:\n                p += r - l\n        l += 1\n    return p\nfor _ in range(int(input())):\n    (n, l, r) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    a.sort()\n    print(pair(a, r) - pair(a, l - 1))", "t = int(input())\n\ndef count(arr, target):\n    s = 0\n    (l, r) = (0, len(arr) - 1)\n    while l < r and l > -1 and (r < len(arr)):\n        if arr[l] + arr[r] <= target:\n            s += r - l\n            l += 1\n        else:\n            r -= 1\n    return s\nfor _ in range(t):\n    s = input().split()\n    (n, l, r) = (int(s[0]), int(s[1]), int(s[2]))\n    nums = [int(st) for st in input().split()]\n    nums.sort()\n    print(count(nums, r) - count(nums, l - 1))", "R = lambda : map(int, input().split())\nt = list(R())[0]\nwhile t:\n    t -= 1\n    (n, l, r) = R()\n    a = sorted(R())\n    i = j = q = 0\n    while i < n:\n        n -= 1\n        while i < n and a[i] + a[n] < l:\n            i += 1\n        while j < n and a[j] + a[n] <= r:\n            j += 1\n        q += min(j, n) - i\n    print(q)", "for _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    i = 0\n    j = 0\n    while i < n:\n        n -= 1\n        while i < n and a[i] + a[n] < l:\n            i += 1\n        while j < n and a[j] + a[n] <= r:\n            j += 1\n        count += min(j, n) - i\n    print(count)", "t = int(input())\nfor q in range(t):\n    (n, l, r) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    res = 0\n    j = 0\n    i = 0\n    while i < n:\n        n -= 1\n        while i < n and a[i] + a[n] < l:\n            i += 1\n        while j < n and a[j] + a[n] <= r:\n            j += 1\n        res += min(j, n) - i\n    print(res)", "for _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    c = 0\n    i = 0\n    lo = n - 1\n    hi = n - 1\n    while i < hi:\n        lo = max(i, lo)\n        while lo > i and a[i] + a[lo] >= l:\n            lo = lo - 1\n        while hi > lo and a[i] + a[hi] > r:\n            hi = hi - 1\n        c += hi - lo\n        i += 1\n    print(c)", "R = lambda : map(int, input().split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, l, r) = R()\n    a = sorted(R())\n    i = j = q = 0\n    while i < n:\n        n -= 1\n        while i < n and a[i] + a[n] < l:\n            i += 1\n        while j < n and a[j] + a[n] <= r:\n            j += 1\n        q += min(j, n) - i\n    print(q)", "for _ in [0] * int(input()):\n    (n, l, r) = map(int, input().split())\n    a = sorted(map(int, input().split()))\n    t = 0\n    (start, end) = (0, n - 1)\n    while start < end:\n        if a[start] + a[end] > r:\n            t += end - start\n            end -= 1\n        else:\n            start += 1\n    (start, end) = (0, n - 1)\n    while start < end:\n        if a[start] + a[end] < l:\n            t += end - start\n            start += 1\n        else:\n            end -= 1\n    print(n * (n - 1) // 2 - t)", "for _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))\n    (count, i, j) = (0, 0, 0)\n    while i < n:\n        n -= 1\n        while i < n and a[i] + a[n] < l:\n            i += 1\n        while j < n and a[j] + a[n] <= r:\n            j += 1\n        count += min(j, n) - i\n    print(count)", "for t in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    i = 0\n    low = n - 1\n    high = n - 1\n    while i < high:\n        low = max(i, low)\n        while low > i and a[i] + a[low] >= l:\n            low -= 1\n        while high > low and a[i] + a[high] > r:\n            high -= 1\n        ans += high - low\n        i += 1\n    print(ans)", "t = int(input())\n\ndef solve(k):\n    j = 0\n    temp = 0\n    for i in range(n - 1, -1, -1):\n        while a[j] + a[i] <= k and j < i:\n            j += 1\n        if j <= i:\n            temp += j\n        else:\n            temp += i\n    return temp\nwhile t > 0:\n    t -= 1\n    (n, l, r) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(solve(r) - solve(l - 1))", "for _ in range(int(input())):\n    (n, s, r) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    l = sorted(l)\n    i = 0\n    h = n - 1\n    b = n - 1\n    while i < h:\n        b = max(i, b)\n        while b > i and l[i] + l[b] >= s:\n            b -= 1\n        while h > b and l[i] + l[h] > r:\n            h -= 1\n        c += h - b\n        i += 1\n    print(c)", "for _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    i = j = count = 0\n    while i < n:\n        n -= 1\n        while i < n and a[i] + a[n] < l:\n            i += 1\n        while j < n and a[j] + a[n] <= r:\n            j += 1\n        count += min(j, n) - i\n    print(count)", "list_ans = []\nfor _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    list1 = list(map(int, input().split()))\n    list1.sort()\n    i = j = 0\n    ans = 0\n    while i < n:\n        n -= 1\n        while i < n and list1[i] + list1[n] < l:\n            i += 1\n        while j < n and list1[j] + list1[n] <= r:\n            j += 1\n        ans += min(n, j) - i\n    list_ans.append(ans)\nfor item in list_ans:\n    print(item)", "def count_ranged_pairs(x, a, b):\n    x.sort()\n    output = [0] * len(x)\n    output2 = [0] * len(x)\n    (i, j) = (0, len(x) - 1)\n    while i - j <= 0:\n        if x[i] + x[j] >= a:\n            output[j] = i\n            j -= 1\n        else:\n            output[i] = j + 1\n            i += 1\n    (i, j) = (0, len(x) - 1)\n    while i - j <= 0:\n        if x[i] + x[j] <= b:\n            output2[i] = j\n            i += 1\n        else:\n            output2[j] = i - 1\n            j -= 1\n    answer = [o2 - o + 1 - (o <= i <= o2) for (i, (o, o2)) in enumerate(zip(output, output2))]\n    return sum(answer) / 2\nt = int(input())\nfor _ in range(t):\n    n = list(map(int, input().split(' ')))\n    a = list(map(int, input().split(' ')))\n    print(int(count_ranged_pairs(a, n[1], n[2])))", "for _ in range(int(input())):\n    (n, s, r) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    l = sorted(l)\n    i = 0\n    h = n - 1\n    b = n - 1\n    while i < h:\n        b = max(i, b)\n        while b > i and l[i] + l[b] >= s:\n            b -= 1\n        while h > b and l[i] + l[h] > r:\n            h -= 1\n        c += h - b\n        i += 1\n    print(c)", "for _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    low = 0\n    high = n - 1\n    (c1, c2) = (0, 0)\n    while low < high:\n        if arr[low] + arr[high] < l:\n            c1 += high - low\n            low += 1\n        else:\n            high -= 1\n    low = 0\n    high = n - 1\n    while low < high:\n        if arr[low] + arr[high] > r:\n            c2 += high - low\n            high -= 1\n        else:\n            low += 1\n    total = n * (n - 1) // 2\n    print(total - c1 - c2)", "t = int(input())\nfor _ in range(0, t):\n    (n, l, r) = map(int, input().split())\n    p = list(map(int, input().split()))\n    c = 0\n    i = 0\n    j = n - 1\n    p.sort()\n    while i < j:\n        if p[i] + p[j] <= r:\n            c = c + j - i\n            i = i + 1\n        else:\n            j = j - 1\n    i = 0\n    j = n - 1\n    p.sort()\n    while i < j:\n        if p[i] + p[j] < l:\n            c = c - j + i\n            i = i + 1\n        else:\n            j = j - 1\n    print(c)", "for _ in range(int(input())):\n    (n, l, r) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    (low, high) = (n - 1, n - 1)\n    idx = 0\n    while idx < high:\n        low = max(idx, low)\n        while low > idx and a[idx] + a[low] >= l:\n            low -= 1\n        while high > low and a[idx] + a[high] > r:\n            high -= 1\n        ans += high - low\n        idx += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, l, r) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))\n    count = 0\n    i = 0\n    j = 0\n    while i < n:\n        n -= 1\n        while i < n and a[i] + a[n] < l:\n            i += 1\n        while j < n and a[j] + a[n] <= r:\n            j += 1\n        count += min(j, n) - i\n    print(count)", "def count(x, a, b):\n    x.sort()\n    output = [0] * len(x)\n    output2 = [0] * len(x)\n    (i, j) = (0, len(x) - 1)\n    while i - j <= 0:\n        if x[i] + x[j] >= a:\n            output[j] = i\n            j -= 1\n        else:\n            output[i] = j + 1\n            i += 1\n    (i, j) = (0, len(x) - 1)\n    while i - j <= 0:\n        if x[i] + x[j] <= b:\n            output2[i] = j\n            i += 1\n        else:\n            output2[j] = i - 1\n            j -= 1\n    answer = [o2 - o + 1 - (o <= i <= o2) for (i, (o, o2)) in enumerate(zip(output, output2))]\n    return sum(answer) // 2\nt = int(input())\nfor i in range(0, t):\n    (n, l, r) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(count(a, l, r))", "for _ in range(int(input())):\n    (n, s, r) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    l = sorted(l)\n    i = 0\n    h = n - 1\n    b = n - 1\n    while i < h:\n        b = max(i, b)\n        while b > i and l[i] + l[b] >= s:\n            b -= 1\n        while h > b and l[i] + l[h] > r:\n            h -= 1\n        c += h - b\n        i += 1\n    print(c)", "t = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    x = list(map(int, input().split()))\n\n    def count_ranged_pairs(x, a, b):\n        x.sort()\n        output = [0] * len(x)\n        output2 = [0] * len(x)\n        (i, j) = (0, len(x) - 1)\n        while i - j <= 0:\n            if x[i] + x[j] >= a:\n                output[j] = i\n                j -= 1\n            else:\n                output[i] = j + 1\n                i += 1\n        (i, j) = (0, len(x) - 1)\n        while i - j <= 0:\n            if x[i] + x[j] <= b:\n                output2[i] = j\n                i += 1\n            else:\n                output2[j] = i - 1\n                j -= 1\n        answer = [o2 - o + 1 - (o <= i <= o2) for (i, (o, o2)) in enumerate(zip(output, output2))]\n        return sum(answer) / 2\n    print(int(count_ranged_pairs(x, a, b)))", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    l1 = list(map(int, input().split()))\n    l1.sort()\n    i = 0\n    cnt = 0\n    low = n - 1\n    high = n - 1\n    while i < high:\n        low = max(i, low)\n        while low > i and l1[i] + l1[low] >= a:\n            low -= 1\n        while high > low and l1[i] + l1[high] > b:\n            high -= 1\n        cnt += high - low\n        i += 1\n    print(cnt)", "T = int(input())\nfor case in range(T):\n    (n, l, r) = list(map(int, input().split()))\n    arr = sorted(list(map(int, input().split())))\n    c = 0\n    i = 0\n    h = n - 1\n    b = n - 1\n    while i < h:\n        b = max(i, b)\n        while b > i and arr[i] + arr[b] >= l:\n            b -= 1\n        while h > b and arr[i] + arr[h] > r:\n            h -= 1\n        c += h - b\n        i += 1\n    print(c)", "t = int(input())\nfor i in range(t):\n    (n, l, r) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    a = 0\n    b = n - 1\n    ans1 = 0\n    while a < b:\n        if arr[a] + arr[b] <= r:\n            ans1 += b - a\n            a += 1\n        else:\n            b -= 1\n    a = 0\n    b = n - 1\n    ans2 = 0\n    while a < b:\n        if arr[a] + arr[b] <= l - 1:\n            ans2 += b - a\n            a += 1\n        else:\n            b -= 1\n    print(ans1 - ans2)", "t = int(input())\nfor _ in range(t):\n    (n, l, r) = map(int, input().split())\n    a = list(map(int, input().split()))\n    (c, d) = (0, n - 1)\n    (k, m) = (0, 0)\n    a.sort()\n    while c < d:\n        if a[c] + a[d] < l:\n            k = k + d - c\n            c = c + 1\n        else:\n            d = d - 1\n    (c, d) = (0, n - 1)\n    while c < d:\n        if a[c] + a[d] > r:\n            m = m + d - c\n            d = d - 1\n        else:\n            c = c + 1\n    ans = n * (n - 1)\n    ans = ans // 2\n    ans = ans - k - m\n    print(ans)", "for _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    (i, j) = (0, n - 1)\n    c = 0\n    while i < j:\n        if a[i] + a[j] <= r:\n            c += j - i\n            i += 1\n        else:\n            j -= 1\n    (i, j) = (0, n - 1)\n    while i < j:\n        if a[i] + a[j] < l:\n            c -= j - i\n            i += 1\n        else:\n            j -= 1\n    print(c)", "s = int(input())\nfor _ in range(s):\n    (n, l, r) = map(int, input().split(' '))\n    a = list(map(int, input().split(' ')))\n    i = 0\n    j = 0\n    a.sort()\n    count = 0\n    while i < n:\n        n -= 1\n        while i < n and a[i] + a[n] < l:\n            i += 1\n        while j < n and a[j] + a[n] <= r:\n            j += 1\n        count += min(n, j) - i\n    print(count)", "t = int(input())\nfor T in range(t):\n    (n, l, r) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    a.sort()\n    (count, i, ind) = (0, 0, 0)\n    while i < n:\n        n -= 1\n        while i < n and a[i] + a[n] < l:\n            i += 1\n        while ind < n and a[ind] + a[n] <= r:\n            ind += 1\n        count += min(n, ind) - i\n    print(count)", "R = lambda : map(int, input().split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, l, r) = R()\n    a = sorted(R())\n    i = j = q = 0\n    while i < n:\n        n -= 1\n        while i < n and a[i] + a[n] < l:\n            i += 1\n        while j < n and a[j] + a[n] <= r:\n            j += 1\n        q += min(j, n) - i\n    print(q)", "T = int(input())\nfrange = range\nfprint = print\nfint = int\nfinput = input\nfor i in frange(T):\n    ans = 0\n    (n, l, r) = map(fint, finput().split())\n    arr = list(map(int, finput().split()))\n    arr.sort()\n    ans = 0\n    i = 0\n    j = 0\n    while i < n:\n        n -= 1\n        while i < n and arr[i] + arr[n] < l:\n            i += 1\n        while j < n and arr[j] + arr[n] <= r:\n            j += 1\n        ans += min(j, n) - i\n    fprint(ans)", "def count_r(x, a, b):\n    x.sort()\n    output = [0] * len(x)\n    output2 = [0] * len(x)\n    (i, j) = (0, len(x) - 1)\n    while i - j <= 0:\n        if x[i] + x[j] >= a:\n            output[j] = i\n            j -= 1\n        else:\n            output[i] = j + 1\n            i += 1\n    (i, j) = (0, len(x) - 1)\n    while i - j <= 0:\n        if x[i] + x[j] <= b:\n            output2[i] = j\n            i += 1\n        else:\n            output2[j] = i - 1\n            j -= 1\n    answer = [o2 - o + 1 - (o <= i <= o2) for (i, (o, o2)) in enumerate(zip(output, output2))]\n    return sum(answer) // 2\nt = int(input())\nwhile t:\n    (n, a, b) = map(int, input().split())\n    li = list(map(int, input().split()))\n    print(count_r(li, a, b))\n    t = t - 1", "def count_pairs(x, a, b):\n    x.sort()\n    output = [0] * len(x)\n    output2 = [0] * len(x)\n    (i, j) = (0, len(x) - 1)\n    while i - j <= 0:\n        if x[i] + x[j] >= a:\n            output[j] = i\n            j -= 1\n        else:\n            output[i] = j + 1\n            i += 1\n    (i, j) = (0, len(x) - 1)\n    while i - j <= 0:\n        if x[i] + x[j] <= b:\n            output2[i] = j\n            i += 1\n        else:\n            output2[j] = i - 1\n            j -= 1\n    answer = [o2 - o + 1 - (o <= i <= o2) for (i, (o, o2)) in enumerate(zip(output, output2))]\n    return sum(answer) // 2\nfor _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    print(count_pairs(a, l, r))", "for _ in range(int(input())):\n    (n, l, r) = list(map(int, input().strip().split()))\n    arr = list(map(int, input().strip().split()))\n    arr.sort()\n    i = 0\n    j = n - 1\n    c1 = 0\n    while i < j:\n        if arr[i] + arr[j] <= r:\n            i += 1\n        else:\n            c1 += j - i\n            j -= 1\n    i = 0\n    j = n - 1\n    c2 = 0\n    while i < j:\n        if arr[i] + arr[j] >= l:\n            j -= 1\n        else:\n            c2 += j - i\n            i += 1\n    ans = n * (n - 1) // 2 - c1 - c2\n    print(ans)", "def count_ranged_pairs(x, a, b):\n    x.sort()\n    output = [0] * len(x)\n    output2 = [0] * len(x)\n    (i, j) = (0, len(x) - 1)\n    while i - j <= 0:\n        if x[i] + x[j] >= a:\n            output[j] = i\n            j -= 1\n        else:\n            output[i] = j + 1\n            i += 1\n    (i, j) = (0, len(x) - 1)\n    while i - j <= 0:\n        if x[i] + x[j] <= b:\n            output2[i] = j\n            i += 1\n        else:\n            output2[j] = i - 1\n            j -= 1\n    answer = [o2 - o + 1 - (o <= i <= o2) for (i, (o, o2)) in enumerate(zip(output, output2))]\n    return sum(answer) // 2\nfor _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = count_ranged_pairs(a, l, r)\n    print(c)", "t = int(input())\nfor i in range(t):\n    (n, l, r) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))\n    kq = 0\n    u = n\n    v = n - 1\n    for j in range(0, n - 1):\n        u = max(u, j + 1)\n        while v > j and a[j] + a[v] > r:\n            v -= 1\n        if v == j:\n            break\n        while u - 1 > j and a[j] + a[u - 1] >= l:\n            u -= 1\n        if u > v:\n            continue\n        kq += v - u + 1\n    print(kq)", "for _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    c = 0\n    i = 0\n    lo = n - 1\n    hi = n - 1\n    while i < hi:\n        lo = max(i, lo)\n        while lo > i and a[i] + a[lo] >= l:\n            lo = lo - 1\n        while hi > lo and a[i] + a[hi] > r:\n            hi = hi - 1\n        c += hi - lo\n        i += 1\n    print(c)", "from sys import stdin\nfor __ in range(int(stdin.readline())):\n    (n, l, r) = map(int, stdin.readline().split())\n    li = [*map(int, stdin.readline().split())]\n    li.sort()\n    c = 0\n    i = 0\n    low = n - 1\n    high = n - 1\n    while i < high:\n        low = max(i, low)\n        while low > i and li[i] + li[low] >= l:\n            low -= 1\n        while high > low and li[i] + li[high] > r:\n            high -= 1\n        c += high - low\n        i += 1\n    print(c)", "def count_ranged_pairs(x, a, b):\n    x.sort()\n    output = [0] * len(x)\n    output2 = [0] * len(x)\n    (i, j) = (0, len(x) - 1)\n    while i - j <= 0:\n        if x[i] + x[j] >= a:\n            output[j] = i\n            j -= 1\n        else:\n            output[i] = j + 1\n            i += 1\n    (i, j) = (0, len(x) - 1)\n    while i - j <= 0:\n        if x[i] + x[j] <= b:\n            output2[i] = j\n            i += 1\n        else:\n            output2[j] = i - 1\n            j -= 1\n    answer = [o2 - o + 1 - (o <= i <= o2) for (i, (o, o2)) in enumerate(zip(output, output2))]\n    return int(sum(answer) / 2)\nt = int(input())\nwhile t != 0:\n    t = t - 1\n    (n, a, b) = [int(x) for x in input().split()]\n    x = []\n    x = list(map(int, input().split()))\n    print(count_ranged_pairs(x, a, b))", "t = int(input())\nfor _ in range(t):\n    (n, l, r) = list(map(int, input().split()))\n    lst = list(map(int, input().split()))\n    sortedlst = sorted(lst)\n    lpoint = 0\n    rpoint1 = n - 1\n    total1 = 0\n    while lpoint < rpoint1:\n        if sortedlst[lpoint] + sortedlst[rpoint1] <= r:\n            total1 += rpoint1 - lpoint\n            lpoint += 1\n        else:\n            rpoint1 -= 1\n    lpoint = 0\n    rpoint2 = n - 1\n    total2 = 0\n    while lpoint < rpoint2:\n        if sortedlst[lpoint] + sortedlst[rpoint2] <= l - 1:\n            total2 += rpoint2 - lpoint\n            lpoint += 1\n        else:\n            rpoint2 -= 1\n    print(total1 - total2)", "def count_below(cutoff):\n    ans = 0\n    big = n - 1\n    for small in range(n):\n        while big > small and a[small] + a[big] > cutoff:\n            big -= 1\n        ans += max(0, big - small)\n    return ans\nt = int(input())\nfor _ in range(t):\n    (n, l, r) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    a.sort()\n    ans = count_below(r)\n    ans -= count_below(l - 1)\n    print(ans)", "R = lambda : map(int, input().split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, l, r) = R()\n    a = sorted(R())\n    i = j = q = 0\n    while i < n:\n        n -= 1\n        while i < n and a[i] + a[n] < l:\n            i += 1\n        while j < n and a[j] + a[n] <= r:\n            j += 1\n        q += min(j, n) - i\n    print(q)", "for _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    s = 0\n    i = 0\n    j = n - 1\n    ans = 0\n    while j > i:\n        if a[i] + a[j] < l:\n            i += 1\n        else:\n            s += j - i\n            j -= 1\n    i = 0\n    j = n - 1\n    while j > i:\n        if a[i] + a[j] <= r:\n            i += 1\n        else:\n            ans += j - i\n            j -= 1\n    print(s - ans)", "R = lambda : map(int, input().split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, l, r) = R()\n    a = sorted(R())\n    i = j = q = 0\n    while i < n:\n        n -= 1\n        while i < n and a[i] + a[n] < l:\n            i += 1\n        while j < n and a[j] + a[n] <= r:\n            j += 1\n        q += min(j, n) - i\n    print(q)", "R = lambda : map(int, input().split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, l, r) = R()\n    a = sorted(R())\n    i = j = q = 0\n    while i < n:\n        n -= 1\n        while i < n and a[i] + a[n] < l:\n            i += 1\n        while j < n and a[j] + a[n] <= r:\n            j += 1\n        q += min(j, n) - i\n    print(q)", "user_input = lambda : map(int, input().split())\n(t,) = user_input()\nwhile t:\n    t -= 1\n    (n, l, r) = user_input()\n    arr1 = user_input()\n    arr2 = sorted(arr1)\n    ansl = 0\n    i = 0\n    j = n - 1\n    while i < j:\n        if arr2[i] + arr2[j] < l:\n            ansl += j - i\n            i += 1\n        else:\n            j -= 1\n    ansr = 0\n    i = 0\n    j = n - 1\n    while i < j:\n        if arr2[i] + arr2[j] < r + 1:\n            ansr += j - i\n            i += 1\n        else:\n            j -= 1\n    print(ansr - ansl)", "t = int(input())\nfor i in range(t):\n    (n, l, r) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))\n    count = 0\n    i = 0\n    j = 0\n    while i < n:\n        n -= 1\n        while i < n and a[i] + a[n] < l:\n            i += 1\n        while j < n and a[j] + a[n] <= r:\n            j += 1\n        count += min(j, n) - i\n    print(count)", "R = lambda : map(int, input().split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, l, r) = R()\n    a = sorted(R())\n    i = j = q = 0\n    while i < n:\n        n -= 1\n        while i < n and a[i] + a[n] < l:\n            i += 1\n        while j < n and a[j] + a[n] <= r:\n            j += 1\n        q += min(j, n) - i\n    print(q)", "t = int(input())\n\ndef count(a, maximum):\n    j = len(a) - 1\n    c = 0\n    for (i, val) in enumerate(a):\n        while j > i and a[i] + a[j] > maximum:\n            j = j - 1\n        c += max(j - i, 0)\n    return c\nfor _ in range(t):\n    (n, l, r) = map(lambda x: int(x), input().split())\n    arr = list(map(lambda x: int(x), input().split()))\n    arr.sort()\n    print(count(arr, r) - count(arr, l - 1))", "def count_ranged_pairs(x, a, b):\n    x.sort()\n    output = [0] * len(x)\n    output2 = [0] * len(x)\n    (i, j) = (0, len(x) - 1)\n    while i - j <= 0:\n        if x[i] + x[j] >= a:\n            output[j] = i\n            j -= 1\n        else:\n            output[i] = j + 1\n            i += 1\n    (i, j) = (0, len(x) - 1)\n    while i - j <= 0:\n        if x[i] + x[j] <= b:\n            output2[i] = j\n            i += 1\n        else:\n            output2[j] = i - 1\n            j -= 1\n    answer = [o2 - o + 1 - (o <= i <= o2) for (i, (o, o2)) in enumerate(zip(output, output2))]\n    return int(sum(answer) / 2)\n\ndef main():\n    t = int(input())\n    while t:\n        (n, l, r) = map(int, input().split())\n        arr = list(map(int, input().split()))\n        print(count_ranged_pairs(arr, l, r))\n        t -= 1\n    return\nmain()", "R = lambda : map(int, input().split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, l, r) = R()\n    a = sorted(R())\n    i = j = q = 0\n    while i < n:\n        n -= 1\n        while i < n and a[i] + a[n] < l:\n            i += 1\n        while j < n and a[j] + a[n] <= r:\n            j += 1\n        q += min(j, n) - i\n    print(q)", "for i in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    lst = sorted(list(map(int, input().split())))\n    i = 0\n    j = 0\n    ret = 0\n    while i < n:\n        n -= 1\n        while i < n and lst[i] + lst[n] < l:\n            i += 1\n        while j < n and lst[j] + lst[n] <= r:\n            j += 1\n        ret += min(j, n) - i\n    print(ret)", "t = int(input())\nfor u in range(t):\n    l1 = list(map(int, input().rstrip().split()))\n    n = l1[0]\n    l = l1[1]\n    r = l1[2]\n    a = list(map(int, input().rstrip().split()))\n    a.sort()\n    count = 0\n    start = 0\n    end = n - 1\n    while start < end:\n        if a[start] + a[end] <= r:\n            count += end - start\n            start += 1\n        else:\n            end -= 1\n    start = 0\n    end = n - 1\n    while start < end:\n        if a[start] + a[end] < l:\n            count -= end - start\n            start += 1\n        else:\n            end -= 1\n    print(count)", "for _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    i = 0\n    j = n - 1\n    ans = 0\n    ans1 = 0\n    while j > i:\n        if a[i] + a[j] < l:\n            i += 1\n        else:\n            ans += j - i\n            j -= 1\n    i = 0\n    j = n - 1\n    while j > i:\n        if a[i] + a[j] <= r:\n            i += 1\n        else:\n            ans1 += j - i\n            j -= 1\n    print(ans - ans1)", "import sys\nlines = sys.stdin.read().strip().split('\\n')\nt = int(lines[0])\nfor _ in range(t):\n    (n, l, r) = map(int, lines[_ * 2 + 1].strip().split())\n    nums = list(map(int, lines[_ * 2 + 2].strip().split()))\n    nums.sort()\n    start = -1\n    for (i, target) in enumerate(nums):\n        if target + nums[-1] >= l:\n            start = i\n            break\n    if start == -1:\n        print(0)\n        continue\n    (i, left, right) = (start, n - 1, n - 1)\n    count = 0\n    while i < right:\n        target = nums[i]\n        while left > i and target + nums[left] >= l:\n            left -= 1\n        if i > left:\n            count += (1 + right - i) * (right - i) // 2\n            break\n        left += 1\n        while right >= left and target + nums[right] > r:\n            right -= 1\n        if left > right:\n            i += 1\n            continue\n        count += right - left + 1\n        i += 1\n    print(count)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, l, r) = list(map(int, input().rstrip().split()))\n    arr = list(map(int, input().rstrip().split()))\n    arr.sort()\n    arr_0 = 0\n    arr_1 = n - 1\n    count2 = 0\n    count = 0\n    while arr_0 < arr_1:\n        if arr[arr_0] + arr[arr_1] <= r:\n            count = count + (arr_1 - arr_0)\n            arr_0 += 1\n        else:\n            arr_1 -= 1\n    arr_0 = 0\n    arr_1 = n - 1\n    while arr_0 < arr_1:\n        if arr[arr_0] + arr[arr_1] <= l - 1:\n            count2 = count2 + (arr_1 - arr_0)\n            arr_0 += 1\n        else:\n            arr_1 -= 1\n    print(-count2 + count)", "for _ in range(int(input())):\n    (n, s, r) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    l = sorted(l)\n    i = 0\n    h = n - 1\n    b = n - 1\n    while i < h:\n        b = max(i, b)\n        while b > i and l[i] + l[b] >= s:\n            b -= 1\n        while h > b and l[i] + l[h] > r:\n            h -= 1\n        c += h - b\n        i += 1\n    print(c)", "t = int(input())\nfor q in range(t):\n    (n, l, r) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    res = 0\n    j = 0\n    i = 0\n    while i < n:\n        n -= 1\n        while i < n and a[i] + a[n] < l:\n            i += 1\n        while j < n and a[j] + a[n] <= r:\n            j += 1\n        res += min(j, n) - i\n    print(res)"]