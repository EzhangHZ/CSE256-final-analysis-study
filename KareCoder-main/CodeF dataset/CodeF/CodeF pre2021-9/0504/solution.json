["import sys\n\ndef main():\n    n = int(input())\n    A = [int(a) for a in input().split()]\n    if n == 1:\n        print('1 1')\n        print(-A[0])\n        print('1 1')\n        print(0)\n        print('1 1')\n        print(0)\n        return\n    print(f'1 {n - 1}')\n    B = []\n    for i in range(n - 1):\n        B.append(A[i] * (n - 1))\n    print(' '.join(map(str, B)))\n    print(f'{n} {n}')\n    print(-A[-1])\n    print(f'1 {n}')\n    C = []\n    for i in range(n - 1):\n        C.append(-(A[i] + B[i]))\n    C.append(0)\n    print(' '.join(map(str, C)))\nmain()", "import sys\nimport math\nfrom bisect import bisect_right as br\nfrom decimal import Decimal\nfrom itertools import combinations as cb\n\ndef int_arr():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef str_arr():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nn = int(input())\narr = int_arr()\nif n == 1:\n    print(1, 1)\n    print(-arr[0])\n    print(1, 1)\n    print(0)\n    print(1, 1)\n    print(0)\n    exit()\nprint(1, n - 1)\nfor i in range(n - 1):\n    print(arr[i] * (n - 1), end=' ')\nprint()\nprint(1, n)\nfor i in range(n - 1):\n    print(-arr[i] * n, end=' ')\nprint(0, end='')\nprint()\nprint(n, n)\nprint(-arr[-1])", "n = int(input())\na = list(map(int, input().split()))\nl = a[-1]\nif n > 1:\n    print(1, n - 1)\n    print(*[(n - 1) * i for i in a[:n - 1]])\nelse:\n    print(1, 1)\n    print(0)\nprint(n, n)\nprint(-l)\nprint(1, n)\nprint(*[-n * i for i in a[:-1]] + [0])", "import sys\nsys.setrecursionlimit(10 ** 5)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef solve():\n    if n == 1:\n        print(1, 1)\n        print(-aa[0])\n        print(1, 1)\n        print(0)\n        print(1, 1)\n        print(0)\n        exit()\n    print(1, n)\n    bb = [-a * n for a in aa[:-1]] + [0]\n    print(*bb)\n    print(1, n - 1)\n    bb = [a * (n - 1) for a in aa[:-1]]\n    print(*bb)\n    print(n, n)\n    print(-aa[-1])\nn = II()\naa = LI()\nsolve()", "n = int(input())\na = list(map(int, input().split()))\nif n != 1:\n    print(n, n)\n    print(-a[-1])\n    print(1, n - 1)\n    res_2 = [a[i] * (n - 1) for i in range(n - 1)]\n    print(*res_2)\n    print(1, n)\n    res_3 = [-a[i] * n for i in range(n)]\n    res_3[-1] = 0\n    print(*res_3)\nelse:\n    print(1, 1)\n    print(-a[0])\n    print(1, 1)\n    print(0)\n    print(1, 1)\n    print(0)", "n = int(input())\narr = list(map(int, input().split()))\nif n == 1:\n    print(1, 1)\n    print(-arr[0])\n    print(1, 1)\n    print(0)\n    print(1, 1)\n    print(0)\nelse:\n    print(1, n - 1)\n    for i in range(n - 1):\n        print(arr[i] * (n - 1), end=' ')\n        arr[i] = arr[i] * n\n    print(' ')\n    print(n, n)\n    print(-arr[n - 1])\n    arr[n - 1] = 0\n    print(1, n)\n    for i in range(n):\n        print(-arr[i], end=' ')", "n = int(input())\na = []\na = list(map(int, input().split()))\nif n == 1:\n    print('1 1')\n    print(-a[0])\n    print('1 1')\n    print(0)\n    print('1 1')\n    print(0)\nelse:\n    print('1 {}'.format(n - 1))\n    for i in range(n - 1):\n        print('{}'.format((n - 1) * a[i]), end=' ')\n        a[i] = n * a[i]\n    print()\n    print('{} {}'.format(n, n))\n    print(-a[n - 1])\n    a[n - 1] = 0\n    print('{} {}'.format(1, n))\n    for i in range(n):\n        print('{}'.format(-a[i]), end=' ')\n    print()", "n = int(input())\na = []\na = list(map(int, input().split()))\nif n == 1:\n    print('1 1')\n    print(-a[0])\n    print('1 1')\n    print(0)\n    print('1 1')\n    print(0)\nelse:\n    print('1 {}'.format(n - 1))\n    for i in range(n - 1):\n        print('{}'.format((n - 1) * a[i]), end=' ')\n        a[i] = n * a[i]\n    print()\n    print('{} {}'.format(n, n))\n    print(-a[n - 1])\n    a[n - 1] = 0\n    print('{} {}'.format(1, n))\n    for i in range(n):\n        print('{}'.format(-a[i]), end=' ')\n    print()", "n = int(input())\na = []\na = list(map(int, input().split()))\nif n == 1:\n    print('1 1')\n    print(-a[0])\n    print('1 1')\n    print(0)\n    print('1 1')\n    print(0)\nelse:\n    print('1 {}'.format(n - 1))\n    for i in range(n - 1):\n        print('{}'.format((n - 1) * a[i]), end=' ')\n        a[i] = n * a[i]\n    print()\n    print('{} {}'.format(n, n))\n    print(-a[n - 1])\n    a[n - 1] = 0\n    print('{} {}'.format(1, n))\n    for i in range(n):\n        print('{}'.format(-a[i]), end=' ')\n    print()"]