["t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    temp_list = []\n    count = 1\n    max_num = arr[0]\n    for i in range(1, 2 * n):\n        if arr[i] > max_num:\n            max_num = arr[i]\n            temp_list.append(count)\n            count = 1\n        else:\n            count += 1\n    if count:\n        temp_list.append(count)\n    dp = 1\n    for i in temp_list:\n        dp |= dp << i\n    if dp & 1 << n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    array1 = list(map(int, input().split()))\n    lst = []\n    cont = 1\n    mx = array1[0]\n    for j in range(1, 2 * n):\n        if array1[j] > mx:\n            mx = array1[j]\n            lst.append(cont)\n            cont = 1\n        else:\n            cont += 1\n    if cont:\n        lst.append(cont)\n    dp = 1\n    for k in lst:\n        dp |= dp << k\n    if dp & 1 << n:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ls = []\n    cnt = 1\n    mx = a[0]\n    for i in range(1, 2 * n):\n        if a[i] > mx:\n            mx = a[i]\n            ls.append(cnt)\n            cnt = 1\n        else:\n            cnt += 1\n    if cnt:\n        ls.append(cnt)\n    dp = 1\n    for i in ls:\n        dp |= dp << i\n    if dp & 1 << n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    list_temp = []\n    count = 1\n    max_num = arr[0]\n    for i in range(1, 2 * n):\n        if arr[i] > max_num:\n            max_num = arr[i]\n            list_temp.append(count)\n            count = 1\n        else:\n            count += 1\n    if count:\n        list_temp.append(count)\n    dp = 1\n    for i in list_temp:\n        dp |= dp << i\n    if dp & 1 << n:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    lista = list(map(int, input().split()))\n    ls = []\n    cnt = 1\n    nmax = lista[0]\n    for i in range(1, 2 * n):\n        if lista[i] > nmax:\n            nmax = lista[i]\n            ls.append(cnt)\n            cnt = 1\n        else:\n            cnt += 1\n    if cnt:\n        ls.append(cnt)\n    dp = 1\n    for i in ls:\n        dp |= dp << i\n    if dp & 1 << n:\n        print('YES')\n    else:\n        print('NO')", "inp = int(input())\nfor i in range(inp):\n    n = int(input())\n    aux = list(map(int, input().split()))\n    lista = []\n    count = 1\n    result_max = aux[0]\n    for i in range(1, 2 * n):\n        if aux[i] > result_max:\n            result_max = aux[i]\n            lista.append(count)\n            count = 1\n        else:\n            count += 1\n    if count:\n        lista.append(count)\n    resultado = 1\n    for i in lista:\n        resultado |= resultado << i\n    if resultado & 1 << n:\n        print('YES')\n    else:\n        print('NO')", "entrada = int(input())\nfor i in range(entrada):\n    n = int(input())\n    aux = list(map(int, input().split()))\n    l = []\n    contador = 1\n    rmax = aux[0]\n    for i in range(1, 2 * n):\n        if aux[i] > rmax:\n            rmax = aux[i]\n            l.append(contador)\n            contador = 1\n        else:\n            contador += 1\n    if contador:\n        l.append(contador)\n    r = 1\n    for i in l:\n        r |= r << i\n    if r & 1 << n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    list_temp = []\n    count = 1\n    max_num = arr[0]\n    for i in range(1, 2 * n):\n        if arr[i] > max_num:\n            max_num = arr[i]\n            list_temp.append(count)\n            count = 1\n        else:\n            count += 1\n    if count:\n        list_temp.append(count)\n    dp = 1\n    for i in list_temp:\n        dp |= dp << i\n    if dp & 1 << n:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ls = []\n    cnt = 1\n    mx = a[0]\n    for i in range(1, 2 * n):\n        if a[i] > mx:\n            mx = a[i]\n            ls.append(cnt)\n            cnt = 1\n        else:\n            cnt += 1\n    if cnt:\n        ls.append(cnt)\n    dp = 1\n    for i in ls:\n        dp |= dp << i\n    if dp & 1 << n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    list_temp = []\n    count = 1\n    max_num = arr[0]\n    for i in range(1, 2 * n):\n        if arr[i] > max_num:\n            max_num = arr[i]\n            list_temp.append(count)\n            count = 1\n        else:\n            count += 1\n    if count:\n        list_temp.append(count)\n    dp = 1\n    for i in list_temp:\n        dp |= dp << i\n    if dp & 1 << n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    array1 = list(map(int, input().split()))\n    lst = []\n    cont = 1\n    mx = array1[0]\n    for j in range(1, 2 * n):\n        if array1[j] > mx:\n            mx = array1[j]\n            lst.append(cont)\n            cont = 1\n        else:\n            cont += 1\n    if cont:\n        lst.append(cont)\n    dp = 1\n    for k in lst:\n        dp |= dp << k\n    if dp & 1 << n:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ls = []\n    cnt = 1\n    mx = a[0]\n    for i in range(1, 2 * n):\n        if a[i] > mx:\n            mx = a[i]\n            ls.append(cnt)\n            cnt = 1\n        else:\n            cnt += 1\n    if cnt:\n        ls.append(cnt)\n    dp = 1\n    for i in ls:\n        dp |= dp << i\n    if dp & 1 << n:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ls = []\n    cnt = 1\n    mx = a[0]\n    for i in range(1, 2 * n):\n        if a[i] > mx:\n            mx = a[i]\n            ls.append(cnt)\n            cnt = 1\n        else:\n            cnt += 1\n    if cnt:\n        ls.append(cnt)\n    dp = 1\n    for i in ls:\n        dp |= dp << i\n    if dp & 1 << n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    array1 = list(map(int, input().split()))\n    lst = []\n    cont = 1\n    mx = array1[0]\n    for j in range(1, 2 * n):\n        if array1[j] > mx:\n            mx = array1[j]\n            lst.append(cont)\n            cont = 1\n        else:\n            cont += 1\n    if cont:\n        lst.append(cont)\n    dp = 1\n    for k in lst:\n        dp |= dp << k\n    if dp & 1 << n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    array1 = list(map(int, input().split()))\n    lst = []\n    cont = 1\n    mx = array1[0]\n    for j in range(1, 2 * n):\n        if array1[j] > mx:\n            mx = array1[j]\n            lst.append(cont)\n            cont = 1\n        else:\n            cont += 1\n    if cont:\n        lst.append(cont)\n    dp = 1\n    for k in lst:\n        dp |= dp << k\n    if dp & 1 << n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    array1 = list(map(int, input().split()))\n    lst = []\n    cont = 1\n    mx = array1[0]\n    for j in range(1, 2 * n):\n        if array1[j] > mx:\n            mx = array1[j]\n            lst.append(cont)\n            cont = 1\n        else:\n            cont += 1\n    if cont:\n        lst.append(cont)\n    dp = 1\n    for k in lst:\n        dp |= dp << k\n    if dp & 1 << n:\n        print('YES')\n    else:\n        print('NO')", "entrada = int(input())\nfor _ in range(entrada):\n    aux_1 = int(input())\n    entrada_2 = list(map(int, input().split()))\n    aux_2 = 1\n    lista = []\n    max_value = entrada_2[0]\n    for i in range(1, 2 * aux_1):\n        if max_value < entrada_2[i]:\n            max_value = entrada_2[i]\n            lista.append(aux_2)\n            aux_2 = 1\n        else:\n            aux_2 += 1\n    saida = 1\n    for i in lista:\n        saida |= saida << i\n    if saida & 1 << aux_1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    array1 = list(map(int, input().split()))\n    lst = []\n    cont = 1\n    mx = array1[0]\n    for j in range(1, 2 * n):\n        if array1[j] > mx:\n            mx = array1[j]\n            lst.append(cont)\n            cont = 1\n        else:\n            cont += 1\n    if cont:\n        lst.append(cont)\n    dp = 1\n    for k in lst:\n        dp |= dp << k\n    if dp & 1 << n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    temp_list = []\n    count = 1\n    max_num = arr[0]\n    for i in range(1, 2 * n):\n        if arr[i] > max_num:\n            max_num = arr[i]\n            temp_list.append(count)\n            count = 1\n        else:\n            count += 1\n    if count:\n        temp_list.append(count)\n    dp = 1\n    for i in temp_list:\n        dp |= dp << i\n    if dp & 1 << n:\n        print('YES')\n    else:\n        print('NO')", "size = int(input())\nfor _ in range(size):\n    aux_1 = int(input())\n    testes = list(map(int, input().split()))\n    aux_2 = 1\n    lista = []\n    max_value = testes[0]\n    for i in range(1, 2 * aux_1):\n        if max_value < testes[i]:\n            max_value = testes[i]\n            lista.append(aux_2)\n            aux_2 = 1\n        else:\n            aux_2 += 1\n    saida = 1\n    for i in lista:\n        saida |= saida << i\n    if saida & 1 << aux_1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    lst = []\n    count = 1\n    max = arr[0]\n    for i in range(1, 2 * n):\n        if arr[i] > max:\n            max = arr[i]\n            lst.append(count)\n            count = 1\n        else:\n            count += 1\n    if count:\n        lst.append(count)\n    dp = 1\n    for i in lst:\n        dp |= dp << i\n    if dp & 1 << n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    array1 = list(map(int, input().split()))\n    lst = []\n    cont = 1\n    mx = array1[0]\n    for j in range(1, 2 * n):\n        if array1[j] > mx:\n            mx = array1[j]\n            lst.append(cont)\n            cont = 1\n        else:\n            cont += 1\n    if cont:\n        lst.append(cont)\n    dp = 1\n    for k in lst:\n        dp |= dp << k\n    if dp & 1 << n:\n        print('YES')\n    else:\n        print('NO')", "entrada = int(input())\nfor i in range(entrada):\n    num = int(input())\n    aux = list(map(int, input().split()))\n    lista = []\n    cont = 1\n    vmax = aux[0]\n    for i in range(1, 2 * num):\n        if aux[i] > vmax:\n            vmax = aux[i]\n            lista.append(cont)\n            cont = 1\n        else:\n            cont += 1\n    if cont:\n        lista.append(cont)\n    ret = 1\n    for elem in lista:\n        ret |= ret << elem\n    if ret & 1 << num:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    p = [int(i) for i in input().split()]\n    blocks = []\n    max = p[0]\n    count = 1\n    for i in range(1, 2 * n):\n        if p[i] > max:\n            max = p[i]\n            blocks.append(count)\n            count = 1\n        else:\n            count += 1\n    if count:\n        blocks.append(count)\n    resultado = 1\n    for i in blocks:\n        resultado |= resultado << i\n    if resultado & 1 << n:\n        print('YES')\n    else:\n        print('NO')", "import sys\nsys.setrecursionlimit(10 ** 5)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\nfor _ in range(II()):\n    n = II()\n    aa = LI()\n    mx = aa[0]\n    cnt = 1\n    ln = []\n    for a in aa[1:]:\n        if a > mx:\n            ln.append(cnt)\n            cnt = 1\n            mx = a\n        else:\n            cnt += 1\n    ln.append(cnt)\n    mask = (1 << n + 1) - 1\n    cur = 1\n    for l in ln:\n        cur = (cur | cur << l) & mask\n        if cur.bit_length() == n + 1:\n            print('YES')\n            break\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ls = []\n    cnt = 1\n    mx = a[0]\n    for i in range(1, 2 * n):\n        if a[i] > mx:\n            mx = a[i]\n            ls.append(cnt)\n            cnt = 1\n        else:\n            cnt += 1\n    if cnt:\n        ls.append(cnt)\n    dp = 1\n    for i in ls:\n        dp |= dp << i\n    if dp & 1 << n:\n        print('YES')\n    else:\n        print('NO')", "from copy import copy\n\nclass Solution:\n\n    @staticmethod\n    def input():\n        n = int(input())\n        arr = input()\n        return (n, arr)\n\n    def __init__(self, n=None, arr=None):\n        if n is None:\n            (n, arr) = Solution.input()\n        self.n = n\n        self.arr = [int(x) for x in arr.split()]\n        self.blocks = []\n\n    def split_to_blocks(self):\n        blocks = []\n        curr_block_len = 1\n        lbound = self.arr[0]\n        for x in self.arr[1:]:\n            if x <= lbound:\n                curr_block_len += 1\n            if x > lbound:\n                blocks.append(curr_block_len)\n                curr_block_len = 1\n            lbound = max(x, lbound)\n        self.blocks = blocks\n\n    def knapsack(self):\n        achievable_arr_lens = {0}\n        for block_len in self.blocks:\n            new_arr_lens = copy(achievable_arr_lens)\n            for prev_len in achievable_arr_lens:\n                new_arr_lens.add(block_len + prev_len)\n            achievable_arr_lens = new_arr_lens\n            if self.n in achievable_arr_lens:\n                return True\n        return False\n\n    def solve(self):\n        self.split_to_blocks()\n        if self.knapsack():\n            print('YES')\n            return True\n        else:\n            print('NO')\n            return False\nfor _ in range(int(input())):\n    Solution().solve()", "from copy import copy\n\nclass Solution:\n\n    @staticmethod\n    def input():\n        n = int(input())\n        arr = input()\n        return (n, arr)\n\n    def __init__(self, n=None, arr=None):\n        if n is None:\n            (n, arr) = Solution.input()\n        self.n = n\n        self.arr = [int(x) for x in arr.split()]\n        self.blocks = []\n\n    def split_to_blocks(self):\n        blocks = []\n        curr_block_len = 1\n        lbound = self.arr[0]\n        for x in self.arr[1:]:\n            if x <= lbound:\n                curr_block_len += 1\n            if x > lbound:\n                blocks.append(curr_block_len)\n                curr_block_len = 1\n            lbound = max(x, lbound)\n        self.blocks = blocks\n\n    def knapsack(self):\n        achievable_arr_lens = {0}\n        for block_len in self.blocks:\n            new_arr_lens = copy(achievable_arr_lens)\n            for prev_len in achievable_arr_lens:\n                new_arr_lens.add(block_len + prev_len)\n            achievable_arr_lens = new_arr_lens\n            if self.n in achievable_arr_lens:\n                return True\n        return False\n\n    def solve(self):\n        self.split_to_blocks()\n        if self.knapsack():\n            print('YES')\n            return True\n        else:\n            print('NO')\n            return False\nfor _ in range(int(input())):\n    Solution().solve()", "from copy import copy\n\nclass Solution:\n\n    @staticmethod\n    def input():\n        n = int(input())\n        arr = input()\n        return (n, arr)\n\n    def __init__(self, n=None, arr=None):\n        if n is None:\n            (n, arr) = Solution.input()\n        self.n = n\n        self.arr = [int(x) for x in arr.split()]\n        self.blocks = []\n\n    def split_to_blocks(self):\n        blocks = []\n        curr_block_len = 1\n        lbound = self.arr[0]\n        for x in self.arr[1:]:\n            if x <= lbound:\n                curr_block_len += 1\n            if x > lbound:\n                blocks.append(curr_block_len)\n                curr_block_len = 1\n            lbound = max(x, lbound)\n        self.blocks = blocks\n\n    def knapsack(self):\n        achievable_arr_lens = {0}\n        for block_len in self.blocks:\n            new_arr_lens = copy(achievable_arr_lens)\n            for prev_len in achievable_arr_lens:\n                new_arr_lens.add(block_len + prev_len)\n            achievable_arr_lens = new_arr_lens\n            if self.n in achievable_arr_lens:\n                return True\n        return False\n\n    def solve(self):\n        self.split_to_blocks()\n        if self.knapsack():\n            print('YES')\n            return True\n        else:\n            print('NO')\n            return False\nfor _ in range(int(input())):\n    Solution().solve()", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    a = []\n    index = 0\n    c = 0\n    for i in range(2 * n - 1):\n        if s[index] < s[i + 1]:\n            a.append(i + 1 - index)\n            index = i + 1\n    m = {0}\n    for item in a:\n        nm = [w + item for w in m if w + item <= n]\n        m = m.union(nm)\n        if n in m:\n            c = 1\n            print('YES')\n            break\n    if c == 0:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    a = []\n    index = 0\n    c = 0\n    for i in range(2 * n - 1):\n        if s[index] < s[i + 1]:\n            a.append(i + 1 - index)\n            index = i + 1\n    m = {0}\n    for item in a:\n        nm = [w + item for w in m if w + item <= n]\n        m = m.union(nm)\n        if n in m:\n            c = 1\n            print('YES')\n            break\n    if c == 0:\n        print('NO')", "def main():\n    n = int(input())\n    p = [int(e) for e in input().split()]\n    prev = 0\n    items = [0]\n    for i in range(1, 2 * n):\n        if p[i] > p[prev]:\n            items.append(i - prev)\n            prev = i\n    weights = {0}\n    for item in items:\n        new_weights = [weight + item for weight in weights if weight + item <= n]\n        weights = weights.union(new_weights)\n        if n in weights:\n            print('YES')\n            return\n    print('NO')\nfor _ in range(int(input())):\n    main()", "def main():\n    n = int(input())\n    p = [int(e) for e in input().split()]\n    prev = 0\n    items = []\n    for i in range(1, 2 * n):\n        if p[i] > p[prev]:\n            items.append(i - prev)\n            prev = i\n    weights = {0}\n    for item in items:\n        new_weights = [weight + item for weight in weights if weight + item <= n]\n        weights = weights.union(new_weights)\n        if n in weights:\n            print('YES')\n            return\n    print('NO')\nfor _ in range(int(input())):\n    main()", "t = int(input())\nl = []\nfor i in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    a = []\n    index = 0\n    c = 0\n    for i in range(2 * n - 1):\n        if s[index] < s[i + 1]:\n            a.append(i + 1 - index)\n            index = i + 1\n    m = {0}\n    for item in a:\n        nm = [w + item for w in m if w + item <= n]\n        m = m.union(nm)\n        if n in m:\n            c = 1\n            l.append('YES')\n            break\n    if c == 0:\n        l.append('NO')\nfor i in l:\n    print(i)", "def main():\n    n = int(input())\n    p = [int(e) for e in input().split()]\n    prev = 0\n    items = [0]\n    for i in range(1, 2 * n):\n        if p[i] > p[prev]:\n            items.append(i - prev)\n            prev = i\n    weights = {0}\n    for item in items:\n        new_weights = set((weight + item for weight in weights if weight + item <= n))\n        weights = weights.union(new_weights)\n        if n in weights:\n            print('YES')\n            return\n    print('NO')\nfor _ in range(int(input())):\n    main()", "def psum(arr, t):\n    poss = [0 for i in range(t + 1)]\n    poss[0] = 1\n    for i in arr:\n        for j in range(t, -1, -1):\n            if poss[j] == 1 and j + i <= t:\n                poss[j + i] = 1\n    return poss[t] == 1\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    posts = [0]\n    mc = l[0]\n    for j in range(1, 2 * n):\n        if l[j] > mc:\n            posts.append(j)\n            mc = l[j]\n    posts.append(2 * n)\n    lengths = []\n    for j in range(len(posts) - 1):\n        lengths.append(posts[j + 1] - posts[j])\n    if psum(lengths, n):\n        print('YES')\n    else:\n        print('NO')", "def psum(arr, t):\n    poss = [0 for i in range(t + 1)]\n    poss[0] = 1\n    for i in arr:\n        for j in range(t, -1, -1):\n            if poss[j] == 1 and j + i <= t:\n                poss[j + i] = 1\n    return poss[t] == 1\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    posts = [0]\n    mc = l[0]\n    for j in range(1, 2 * n):\n        if l[j] > mc:\n            posts.append(j)\n            mc = l[j]\n    posts.append(2 * n)\n    lengths = []\n    for j in range(len(posts) - 1):\n        lengths.append(posts[j + 1] - posts[j])\n    print('YES') if psum(lengths, n) else print('NO')", "def psum(arr, t):\n    poss = [0 for i in range(t + 1)]\n    poss[0] = 1\n    for i in arr:\n        for j in range(t, -1, -1):\n            if poss[j] == 1 and j + i <= t:\n                poss[j + i] = 1\n    return poss[t] == 1\nfor i in range(int(input())):\n    (n, l) = (int(input()), list(map(int, input().split())))\n    (posts, mc) = ([0], l[0])\n    for j in range(1, 2 * n):\n        if l[j] > mc:\n            posts.append(j)\n            mc = l[j]\n    posts.append(2 * n)\n    lengths = []\n    for j in range(len(posts) - 1):\n        lengths.append(posts[j + 1] - posts[j])\n    print('YES') if psum(lengths, n) else print('NO')", "def psum(arr, t):\n    poss = [0 for i in range(t + 1)]\n    poss[0] = 1\n    for i in arr:\n        for j in range(t, -1, -1):\n            if poss[j] == 1 and j + i <= t:\n                poss[j + i] = 1\n    return poss[t] == 1\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    posts = [0]\n    mc = l[0]\n    for j in range(1, 2 * n):\n        if l[j] > mc:\n            posts.append(j)\n            mc = l[j]\n    posts.append(2 * n)\n    lengths = []\n    for j in range(len(posts) - 1):\n        lengths.append(posts[j + 1] - posts[j])\n    if psum(lengths, n):\n        print('YES')\n    else:\n        print('NO')", "def psum(arr, t):\n    poss = [0 for i in range(t + 1)]\n    poss[0] = 1\n    for i in arr:\n        for j in range(t, -1, -1):\n            if poss[j] == 1 and j + i <= t:\n                poss[j + i] = 1\n    return poss[t] == 1\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    posts = [0]\n    mc = l[0]\n    for j in range(1, 2 * n):\n        if l[j] > mc:\n            posts.append(j)\n            mc = l[j]\n    posts.append(2 * n)\n    lengths = []\n    for j in range(len(posts) - 1):\n        lengths.append(posts[j + 1] - posts[j])\n    if psum(lengths, n):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [[a[0]]]\n    x = a[0]\n    c = []\n    check = False\n    for i in range(1, 2 * n):\n        if not check:\n            if a[i] < x:\n                b[-1].append(a[i])\n            else:\n                c.append([a[i]])\n                y = a[i]\n                check = True\n        elif a[i] < y:\n            c[-1].append(a[i])\n        else:\n            b.append([a[i]])\n            x = a[i]\n            check = False\n    d = [0] * (len(b) + len(c))\n    for i in range(0, len(b) + len(c), 2):\n        d[i] = len(b[i // 2])\n    for i in range(1, len(b) + len(c), 2):\n        d[i] = len(c[i // 2])\n    d.sort()\n    dp = [False] * (n + 1)\n    dp[0] = True\n    for i in d:\n        for j in range(n, 0, -1):\n            if j >= i and dp[j - i]:\n                dp[j] = dp[j - i]\n    if not dp[n]:\n        print('NO')\n    else:\n        print('YES')"]