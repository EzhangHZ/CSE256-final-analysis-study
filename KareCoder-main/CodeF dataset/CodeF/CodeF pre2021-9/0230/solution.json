["num_inp = lambda : int(input())\narr_inp = lambda : list(map(int, input().split()))\nsp_inp = lambda : map(int, input().split())\nstr_inp = lambda : input()\nfor s in [*open(0)][2::2]:\n    print((t := ({*'14689'} & {*s})) and '1\\n' + t.pop() or '2\\n' + ((t := ({*'25'} & {*s[1:]})) and s[0] + t.pop() or [x * 2 for x in (*s, '') if s.count(x) ^ 1][0] or s.replace('3', '')))", "for s in [*open(0)][2::2]:\n    print((t := ({*'14689'} & {*s})) and '1\\n' + t.pop() or '2\\n' + ((t := ({*'25'} & {*s[1:]})) and s[0] + t.pop() or max((x * 2 * (s.count(x) - 1) for x in s))[:2] or s.replace('3', '')))", "def Composite(numList):\n    aloneList = ['1', '4', '6', '8', '9']\n    for num in numList:\n        if num in aloneList:\n            return (1, num)\n    if numList in ['23', '37', '53', '73']:\n        return 'any'\n    if '2' in numList[1:]:\n        return (2, numList[0] + '2')\n    if '5' in numList[1:]:\n        return (2, numList[0] + '5')\n    if numList[0] == '2':\n        if '7' in numList[1:]:\n            return (2, '27')\n        elif '3' in numList[1:]:\n            return (2, '33')\n    if numList[0] == '3':\n        if '3' in numList[1:]:\n            return (2, '33')\n        elif '7' in numList[1:]:\n            return (2, '77')\n    if numList[0] == '5':\n        if '7' in numList[1:]:\n            return (2, '57')\n        elif '3' in numList[1:]:\n            return (2, '33')\n    if numList[0] == '7':\n        if '7' in numList[1:]:\n            return (2, '77')\n        elif '3' in numList[1:]:\n            return (2, '33')\nN = int(input())\nfor _ in range(N):\n    n = input()\n    numList = input()\n    (l, ans) = Composite(numList)\n    print(l)\n    print(ans)", "for s in [*open(0)][2::2]:\n    print((t := ({*'14689'} & {*s})) and '1\\n' + t.pop() or '2\\n' + ((t := ({*'25'} & {*s[1:]})) and s[0] + t.pop() or [x * 2 for x in (*s, '') if s.count(x) ^ 1][0] or s.replace('3', '')))", "for s in [*open(0)][2::2]:\n    print((t := ({*'14689'} & {*s})) and '1\\n' + t.pop() or '2\\n' + ((t := ({*'25'} & {*s[1:]})) and s[0] + t.pop() or [x * 2 for x in (*s, '') if s.count(x) ^ 1][0] or s.replace('3', '')))", "for _ in range(int(input())):\n    k = int(input())\n    n = str(input())\n    contin = True\n    tmp = {'2': 0, '3': 0, '5': 0, '7': 0}\n    for i in n:\n        if i not in ['2', '3', '5', '7']:\n            print('1')\n            print(i)\n            contin = False\n            break\n        else:\n            tmp[i] += 1\n    if contin:\n        print('2')\n        if tmp['2'] > 1:\n            print('22')\n        elif tmp['3'] > 1:\n            print('33')\n        elif tmp['5'] > 1:\n            print('55')\n        elif tmp['7'] > 1:\n            print('77')\n        elif n[0] == '2':\n            if tmp['5'] == 1:\n                print(25)\n            else:\n                print(27)\n        elif n[0] == '3':\n            if tmp['5'] == 1:\n                print(35)\n            else:\n                print(32)\n        elif n[0] == '7':\n            if tmp['5'] == 1:\n                print(75)\n            else:\n                print(72)\n        elif tmp['2'] == 1:\n            print(52)\n        else:\n            print(57)", "class Solution:\n\n    def __init__(self):\n        self.prime = [1] * 101\n        for i in range(2, 100, 1):\n            j = i * 2\n            count = 2\n            while j <= len(self.prime):\n                self.prime[j] = 0\n                count += 1\n                j = i * count\n\n    def solve(self, n):\n        n = str(n)\n        for i in range(len(n)):\n            if n[i] in '14689':\n                print(1)\n                print(n[i])\n                return 1\n        for i in range(len(n)):\n            for j in range(i + 1, len(n), 1):\n                if self.prime[int(n[i] + n[j])]:\n                    continue\n                else:\n                    print(2)\n                    print(n[i] + n[j])\n                    return 1\nobj = Solution()\nt = int(input())\nfor _ in range(t):\n    x = int(input())\n    n = int(input())\n    obj.solve(n)", "for inp in range(int(input())):\n    a1 = int(input())\n    inp1 = input()\n    a3 = int(inp1)\n    find = True\n    len_x = ['4', '6', '8', '9', '1']\n    len = ['27', '52', '32', '57', '77', '33', '22', '35', '55', '75', '72', '25']\n    for i in len_x:\n        if i in inp1:\n            find = False\n            print(1)\n            print(i)\n            break\n    if find:\n        for i in len:\n            xx1 = inp1.find(i[0])\n            if xx1 != -1:\n                if i[1] in inp1[xx1 + 1:]:\n                    print(2)\n                    print(i)\n                    break", "def checkPairs(numDig, dig):\n    for i in range(numDig - 1):\n        for j in range(i + 1, numDig):\n            if dig[i] == dig[j]:\n                print(2)\n                print(dig[i] * 2)\n                return True\n    return False\n\ndef solve(numDig, dig):\n    for i in range(numDig):\n        if dig[i] in ['1', '4', '6', '8', '9']:\n            print(1)\n            print(dig[i])\n            return\n    if numDig == 2:\n        print(2)\n        print(''.join(dig))\n    elif checkPairs(numDig, dig):\n        return\n    else:\n        print(2)\n        while len(dig) != 2:\n            try:\n                dig.remove('3')\n            except:\n                dig.remove('7')\n        print(''.join(dig))\ntcs = int(input())\nfor i in range(tcs):\n    numDig = int(input())\n    dig = list(map(str, input()))\n    solve(numDig, dig)", "t = int(input())\n\ndef isPrime(x):\n    i = 2\n    while i * i <= x:\n        if x % i == 0:\n            return False\n        i += 1\n    return True\n\ndef solve():\n    k = int(input())\n    arr = [int(i) for i in input()]\n    for i in arr:\n        if not isPrime(i) or i == 1:\n            print(1)\n            print(i)\n            return\n    for i in range(k):\n        for j in range(i + 1, k):\n            val = str(arr[i]) + str(arr[j])\n            if not isPrime(int(val)):\n                print(2)\n                print(str(arr[i]) + str(arr[j]))\n                return\nfor i in range(t):\n    solve()", "import sys\ninput = sys.stdin.readline\nimport re\nfor _ in range(int(input())):\n    l = int(input())\n    num = str(input())\n    a = re.findall('([14689])', num)\n    b = re.findall('(2.*2|2.*5|2.*7|3.*2|3.*3|3.*5|5.*2|5.*5|5.*7|7.*2|7.*5|7.*7)', num)\n    if a != [] and a[0] != '':\n        print(1)\n        print(a[0])\n    elif b != [] and b[0] != '':\n        print(2)\n        print(b[0][0] + b[0][-1])", "for s in [*open(0)][2::2]:\n    print((t := ({*'14689'} & {*s})) and '1\\n' + t.pop() or '2\\n' + ((t := ({*'25'} & {*s[1:]})) and s[0] + t.pop() or max((x * 2 for x in (*s, '') if s.count(x) ^ 1)) or s.replace('3', '')))", "for s in [*open(0)][2::2]:\n    print((t := ({*'14689'} & {*s})) and '1\\n' + t.pop() or '2\\n' + ((t := ({*'25'} & {*s[1:]})) and s[0] + t.pop() or [x * 2 for x in (*s, '') if s.count(x) ^ 1][0] or s.replace('3', '')))", "from itertools import combinations\nimport sys\ninput = sys.stdin.readline\n\ndef getInt():\n    return int(input())\n\ndef getVars():\n    return map(int, input().split())\n\ndef getList():\n    return list(map(int, input().split()))\n\ndef getStr():\n    return input().strip()\n\ndef is_prime(m):\n    if m > 1:\n        for i in range(2, int(m / 2) + 1):\n            if m % i == 0:\n                return False\n        else:\n            return True\n    else:\n        return False\nt = getInt()\nfor _ in range(t):\n    m = getInt()\n    s = getStr()\n    n = len(s)\n    ans = []\n    ok = False\n    for i in range(n):\n        if int(s[i]) in [1, 4, 6, 8, 9]:\n            print(1)\n            print(s[i])\n            ok = True\n            break\n    if ok == True:\n        continue\n    base = list(combinations(s, 2))\n    for c in base:\n        m = int(c[0]) * 10 + int(c[1])\n        if is_prime(m) == False:\n            print(2)\n            print(m)\n            break", "def contest():\n    n = int(input())\n    s = input()\n    res = ''\n    one_numbers = ['1', '4', '6', '8', '9']\n    hist = {'2': 0, '3': 0, '5': 0, '7': 0}\n    some_num = {'2': ['2', '5', '7'], '3': ['2', '3', '5'], '5': ['2', '5', '7'], '7': ['2', '5', '7']}\n    first2357 = set()\n    for i in s:\n        if i in one_numbers:\n            print(1)\n            print(i)\n            return\n        else:\n            for firstdigit in first2357:\n                if i in some_num[firstdigit]:\n                    res = firstdigit + i\n            first2357.add(i)\n    print(2)\n    print(res)\nfor _ in range(int(input())):\n    contest()", "for _ in range(int(input())):\n    k = int(input())\n    n = input()\n    l1 = [1, 4, 6, 8, 9]\n    l2 = [25, 27, 32, 33, 22, 35, 52, 55, 57, 72, 75, 77]\n    t = 1\n    for i in n:\n        if int(i) in l1:\n            print(1)\n            print(i)\n            break\n    else:\n        for i in range(k):\n            for j in range(i + 1, k):\n                if int(n[i] + n[j]) in l2:\n                    print(2)\n                    print(n[i] + n[j])\n                    t = 0\n                    break\n            if t == 0:\n                break", "t = int(input())\nnotPrimes = [1, 4, 6, 8, 9]\nDi = {2: 3, 3: 7, 7: 3, 5: 3}\nwhile t > 0:\n    ok = True\n    t -= 1\n    xxx = int(input())\n    s = input().split()[0]\n    arr = [0] * 10\n    for x in s:\n        id = ord(x) - ord('0')\n        arr[id] += 1\n        if id in notPrimes:\n            ok = False\n            break\n    if not ok:\n        print(1)\n        for x in notPrimes:\n            if arr[x] != 0:\n                print(x)\n                break\n    else:\n        print(2)\n        ans = ''\n        for x in s:\n            id = ord(x) - ord('0')\n            if arr[id] >= 2:\n                ans = x + x\n                break\n            found = -1\n            for i in range(10):\n                if i != id and i != Di[id] and (arr[i] > 0):\n                    found = i\n                    break\n            if found != -1:\n                ans = x + str(found)\n            arr[id] -= 1\n        print(ans)", "t = int(input())\nfor i in range(t):\n    length = input()\n    num = input()\n    visited = {'2': 0, '3': 0, '5': 0, '7': 0}\n    result = ''\n    found_2 = False\n    found = False\n    for digit in num:\n        if digit != '2' and digit != '3' and (digit != '5') and (digit != '7'):\n            print(1)\n            print(digit)\n            found = True\n            break\n        elif not found_2:\n            if digit == '3':\n                if visited['3'] > 0:\n                    result = '33'\n                    found_2 = True\n                else:\n                    visited['3'] += 1\n            elif visited['2'] > 0:\n                found_2 = True\n                result = '2' + digit\n            elif visited['5'] > 0:\n                found_2 = True\n                result = '5' + digit\n            elif visited['7'] > 0:\n                found_2 = True\n                result = '7' + digit\n            elif visited['3'] > 0 and digit != '7':\n                found_2 = True\n                result = '3' + digit\n            else:\n                visited[digit] += 1\n    if not found:\n        print(2)\n        print(result)", "q = {'1', '4', '6', '8', '9'}\nfor i in range(int(input())):\n    n = int(input())\n    s = input()\n    for i in s:\n        if i in q:\n            print(1)\n            print(i)\n            break\n    else:\n        print(2)\n        z = {*s}\n        l = {}\n        k = {23, 53, 37, 73}\n        for i in z:\n            l[i] = s.count(i)\n        for i in l:\n            if l[i] > 1:\n                print(i * 2)\n                break\n        else:\n            t = 1\n            for i in s:\n                if t:\n                    for j in s:\n                        if i != j and int(i + j) not in k:\n                            print(i + j)\n                            t = 0\n                            break", "def entradasF():\n    entradas = []\n    t = int(input())\n    for caso in range(0, t):\n        entrada1 = int(input())\n        entrada2 = int(input())\n        entrada_temp = [entrada1, entrada2]\n        entradas.append(entrada_temp)\n    return entradas\n\ndef proceso(numero, digitos):\n    primos = [2, 3, 5, 7]\n    primosPropios = []\n    contador_primos = 0\n    for digito in str(numero):\n        if primos.count(int(digito)):\n            contador_primos += 1\n            primosPropios.append(digito)\n        else:\n            return int(digito)\n    if digitos == 1 or len(primosPropios) == 2:\n        return numero\n    if contador_primos == digitos:\n        for i in primosPropios:\n            primosAlternos = primosPropios\n            primosAlternos.remove(i)\n            for j in primosAlternos:\n                numTemp = int(f'{i}{j}')\n                divisores = 0\n                for n in range(1, numTemp + 1):\n                    if numTemp % n == 0:\n                        divisores += 1\n                if divisores > 2:\n                    return numTemp\n\ndef main():\n    entradas = entradasF()\n    for entrada in entradas:\n        numero = proceso(entrada[1], entrada[0])\n        digitos = len(str(numero))\n        print(digitos)\n        print(numero)\nmain()", "for s in [*open(0)][2::2]:\n    print((t := ({*'14689'} & {*s})) and '1\\n' + t.pop() or '2\\n' + ((t := ({*'25'} & {*s[1:]})) and s[0] + t.pop() or [x * 2 for x in (*s, '') if s.count(x) ^ 1][0] or s.replace('3', '')))", "from itertools import combinations as perm\n\ndef isprime(n):\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return 0\n    return 1\nt = int(input())\nfor x in range(t):\n    k = int(input())\n    n = int(input())\n    a = str(n)\n    s = list(set(a))\n    f = 0\n    for i in s:\n        if isprime(int(i)) == 0 or i == '1':\n            f = 1\n            print(1)\n            print(i)\n            break\n    if f == 0 and k == 2:\n        print(len(a))\n        print(n)\n    elif f == 0:\n        while f == 0:\n            i = 2\n            for j in perm(a, i):\n                b = ''.join(j)\n                q = b\n                b = int(b)\n                if isprime(b) == 0:\n                    print(i)\n                    print(b)\n                    f = 1\n                    break\n            i += 1\n            if i == len(a) + 1:\n                print(len(a))\n                print(n)\n                break", "digits = []\ndigits1 = []\nnot_simp = {'1', '4', '6', '8', '9'}\nsimp = {'11', '13', '17', '19', '23', '29', '31', '37', '53', '59', '71', '73', '79', '97'}\nn = int(input())\nfor i in range(n):\n    m = int(input())\n    digits.append(int(input()))\nfor k in digits:\n    f = 1\n    str_k = str(k)\n    for s in str_k:\n        if s in not_simp:\n            print(1)\n            print(s)\n            f = 0\n            break\n    if f:\n        i = 0\n        tmp = ''\n        while i < len(str_k) - 1:\n            j = i + 1\n            while j < len(str_k):\n                tmp = str_k[i] + str_k[j]\n                if tmp not in simp:\n                    print(2)\n                    print(tmp)\n                    j = 50\n                    i = 50\n                j += 1\n            i += 1", "import math\nt = int(input())\nfor z in range(t):\n    prime = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    a = int(input())\n    b = input()\n    ans = -1\n    val = -1\n    for i in range(a):\n        if b[i] == '1' or b[i] == '4' or b[i] == '6' or (b[i] == '8') or (b[i] == '9'):\n            ans = 1\n            val = b[i]\n            break\n    if ans != 1:\n        for i in range(a):\n            for j in range(i + 1, a):\n                if prime.count(int(b[i]) * 10 + int(b[j])) == 0:\n                    ans = 2\n                    val = int(b[i]) * 10 + int(b[j])\n                    break\n    print(ans)\n    print(val)", "r = [i for i in range(100)]\nr[1] = 0\nfor i in range(100):\n    if r[i]:\n        for j in range(i + i, 100, i):\n            r[j] = 0\nr = set(r)\nfor _ in range(int(input())):\n    n = int(input())\n    s = '0' + input()\n    b = 0\n    for i in range(n + 1):\n        if b:\n            break\n        for j in range(i + 1, n + 1):\n            if int(s[i] + s[j]) not in r:\n                print(len(str(int(s[i] + s[j]))))\n                print(int(s[i] + s[j]))\n                b = 1\n                break", "import sys\ninput = sys.stdin.readline\n\ndef getInt():\n    return int(input())\n\ndef getVars():\n    return map(int, input().split())\n\ndef getList():\n    return list(map(int, input().split()))\n\ndef getStr():\n    return input().strip()\nt = getInt()\nfor _ in range(t):\n    k = getInt()\n    s = getStr()\n    n = len(s)\n    ans = []\n    t = [0] * 10\n    for i in range(n):\n        if int(s[i]) in [1, 4, 6, 8, 9]:\n            ans = s[i]\n            break\n        elif i > 0 and int(s[i]) in [2, 5]:\n            ans = (s[i - 1], s[i])\n        else:\n            t[int(s[i])] += 1\n            if t[3] == 2:\n                ans = ('3', '3')\n            elif t[7] == 2:\n                ans = ('7', '7')\n    if len(ans) != 0:\n        print(len(ans))\n        print(''.join(ans))\n    else:\n        print(2)\n        if n == 2:\n            print(s)\n        elif n == 3:\n            print(s[0] + '7')", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    f = 0\n    t = ''\n    for i in s:\n        if i in '14689':\n            t = i\n            f = 1\n            break\n    if f:\n        print(1)\n        print(t)\n        continue\n    d = set()\n    f = 1\n    for i in s:\n        if i in d:\n            print(2)\n            print(i * 2)\n            f = 0\n            break\n        d.add(i)\n    if f:\n        if s[0] != '5' and '5' in d:\n            print(2)\n            print(s[0] + '5')\n            continue\n        elif s[0] != '2' and '2' in d:\n            print(2)\n            print(s[0] + '2')\n            continue\n        elif '2' in d and '7' in d:\n            print(2)\n            print('27')\n        elif '5' in d and '7' in d:\n            print(2)\n            print('57')", "is_prime = [True for i in range(205)]\nis_prime[0] = False\nis_prime[1] = False\ni = 2\nwhile i * i <= 205:\n    if is_prime[i]:\n        for j in range(i + i, 205, i):\n            is_prime[j] = False\n    i += 1\n\ndef solve(n, s):\n    idx = -1\n    for i in range(n):\n        if s[i] == '1' or s[i] == '4' or s[i] == '6' or (s[i] == '8') or (s[i] == '9'):\n            print(1)\n            print(s[i])\n            return\n    for i in range(n):\n        aux = []\n        aux.append(s[i])\n        for j in range(i + 1, n):\n            aux.append(s[j])\n            if not is_prime[int(''.join(aux))]:\n                print(2)\n                print(''.join(aux))\n                return\n            aux.pop()\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    no = input()\n    solve(n, no)", "prime = [2, 3, 5, 7]\nnot_prime = [1, 4, 6, 8, 9]\nnot_prime2 = [22, 25, 27, 32, 33, 35, 52, 55, 57, 72, 75, 77]\nt = int(input())\nfor __ in range(t):\n    n = int(input())\n    num = input()\n    if len(num) == 1:\n        print(1)\n        print(num)\n    else:\n        ans = 0\n        for i in range(n):\n            if int(num[i]) in not_prime:\n                ans = int(num[i])\n                break\n        if ans != 0:\n            print(1)\n            print(ans)\n        else:\n            for i in range(1, n):\n                ans1 = int(num[0] + num[i])\n                if i != n - 1:\n                    ans2 = int(num[1] + num[i + 1])\n                if ans1 in not_prime2:\n                    print(2)\n                    print(ans1)\n                    break\n                elif ans2 in not_prime2:\n                    print(2)\n                    print(ans2)\n                    break", "from itertools import combinations\nimport sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    s = input().rstrip()\n    flg = False\n    for t in s:\n        if int(t) not in [2, 3, 5, 7]:\n            print(1)\n            print(t)\n            flg = True\n            break\n    if not flg:\n        if n == 1 or n == 2:\n            print(n)\n            print(s)\n        elif n >= 3:\n            for t in combinations(list(s), 2):\n                if int(''.join(t)) not in [23, 37, 53, 73]:\n                    print(2)\n                    print(''.join(t))\n                    break", "for _t in range(int(input())):\n    n = int(input())\n    number = input()\n    non_primes = ['1', '4', '6', '8', '9']\n    primes = ['2', '3', '5', '7']\n    if any([digit in non_primes for digit in number]):\n        for non_prime in non_primes:\n            if non_prime in number:\n                x = non_prime\n        ans = '1' + '\\n' + x\n    else:\n        for prime in primes:\n            if number.count(prime) > 1:\n                ans = '2' + '\\n' + prime * 2\n                break\n        else:\n            if number[0] != '2' and '2' in number:\n                ans = '2' + '\\n' + number[0] + '2'\n            elif number[0] != '5' and '5' in number:\n                ans = '2' + '\\n' + number[0] + '5'\n            elif number[0] == '2':\n                ans = '2' + '\\n' + '27'\n            else:\n                ans = '2' + '\\n' + '57'\n    print(ans)", "from sys import stdin\ninput = stdin.readline\nprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nfor _ in range(int(input().strip())):\n    N = int(input().strip())\n    a = [i for i in input().strip()]\n    allprimes = sum([1 for i in a if int(i) in primes]) == N\n    if not allprimes:\n        print(1)\n        print([i for i in a if int(i) not in primes][0])\n        continue\n    print(2)\n    found = False\n    for i in range(N - 1):\n        for j in range(i + 1, N):\n            if not int(a[i] + a[j]) in primes:\n                print(int(a[i] + a[j]))\n                found = True\n                break\n        if found:\n            break", "from math import sqrt\nfrom itertools import count, islice\n\ndef is_prime(n):\n    if n < 2:\n        return False\n    for number in islice(count(2), int(sqrt(n) - 1)):\n        if n % number == 0:\n            return False\n    return True\n\ndef game():\n    n = int(input())\n    num = input()\n    ans = ''\n    for i in num:\n        if i == '1' or i == '4' or i == '6' or (i == '8') or (i == '9'):\n            print('1')\n            print(i)\n            return\n    for i in range(len(num) - 1):\n        for j in range(i + 1, len(num)):\n            ans = num[i] + num[j]\n            if is_prime(int(ans)) == False:\n                print(len(ans))\n                print(ans)\n                return\n    return\nt = int(input())\nwhile t:\n    game()\n    t -= 1", "import sys\nn = int(input())\ns1 = {'1', '4', '6', '8', '9'}\npre = {'5': ['2', '3', '7'], '2': ['3', '5', '7'], '7': ['2', '5'], '3': []}\nfor _ in range(n):\n    (k, s) = (int(input()), input())\n    find = False\n    d = {'2': 0, '3': 0, '5': 0, '7': 0}\n    for c in s:\n        if c in s1:\n            find = True\n            print(1)\n            print(c)\n            break\n        else:\n            d[c] += 1\n    if find:\n        continue\n    for (c, v) in d.items():\n        if v >= 2:\n            print(2)\n            print(c * 2)\n            find = True\n            break\n    if find:\n        continue\n    t = set()\n    for c in s:\n        for pre_c in pre[c]:\n            if pre_c in t:\n                find = True\n                print(2)\n                print(pre_c + c)\n                break\n        if find:\n            break\n        t.add(c)", "p = print\nfor s in [*open(0)][2::2]:\n    if (t := ({*'14689'} & {*s})):\n        p(1)\n        p(t.pop())\n    elif (t := ({*'25'} & {*s[1:]})):\n        p(2)\n        p(s[0] + t.pop())\n    elif (t := [x for x in s if s.count(x) > 1]):\n        p(2)\n        p(t[0] * 2)\n    else:\n        p(2)\n        p(s.replace('3', ''))", "t = int(input())\nfor _ in range(t):\n    d = int(input())\n    n = input()\n    if d == 1:\n        print('1\\n' + n)\n    elif '4' in n:\n        print('1\\n4')\n    elif '6' in n:\n        print('1\\n6')\n    elif '8' in n:\n        print('1\\n8')\n    elif '9' in n:\n        print('1\\n9')\n    elif '1' in n:\n        print('1\\n1')\n    else:\n        k = n.rfind('5')\n        if k > 0:\n            print('2\\n' + n[0] + '5')\n        elif k == 0:\n            if '7' in n:\n                print('2\\n57')\n            elif '2' in n:\n                print('2\\n52')\n            else:\n                print('2\\n33')\n        else:\n            k = n.rfind('2')\n            if k > 0:\n                print('2\\n' + n[0] + '2')\n            elif k == 0:\n                if '7' in n:\n                    print('2\\n27')\n                else:\n                    print('2\\n33')\n            else:\n                a = n.find('3')\n                b = n.rfind('3')\n                if a != b:\n                    print('2\\n33')\n                else:\n                    print('2\\n77')", "for i in range(int(input())):\n    k = int(input())\n    s = input()\n    seen = ''\n    l2 = []\n    ans = ''\n    (c1, c3, c7, c2, c5) = (0, 0, 0, 0, 0)\n    for j in s:\n        x = int(j)\n        if x in (1, 4, 6, 8, 9):\n            ans = str(x)\n            break\n        elif x in (5, 2):\n            if len(seen) == 0:\n                seen = str(x)\n            else:\n                ans = seen + str(x)\n            if x == 2:\n                c2 += 1\n            else:\n                c5 += 1\n        elif x in (3, 7):\n            if x != 3:\n                if c2 > 0:\n                    ans = '2' + str(x)\n                elif c5 > 0:\n                    ans = '5' + str(x)\n            if len(seen) == 0:\n                seen = str(x)\n            if x == 3:\n                c3 += 1\n            elif x == 7:\n                c7 += 1\n    if len(ans) != 0:\n        print(len(ans))\n        print(ans)\n    elif c3 > 1:\n        print(2)\n        print(33)\n    elif c7 > 1:\n        print(2)\n        print(77)", "comp = ['1', '4', '6', '8', '9']\nfor _ in range(int(input())):\n    a = int(input())\n    b = input()\n    d = {}\n    for i in b:\n        if i not in d:\n            d[i] = 0\n        d[i] += 1\n    ch = 0\n    ans = ''\n    for i in comp:\n        if i in d.keys():\n            ans = i\n            ch += 1\n    if ch > 0:\n        print('1\\n' + ans)\n    elif '2' in d and d['2'] > 1:\n        print('2\\n22')\n    elif '3' in d and d['3'] > 1:\n        print('2\\n33')\n    elif '5' in d and d['5'] > 1:\n        print('2\\n55')\n    elif '7' in d and d['7'] > 1:\n        print('2\\n77')\n    elif b[1:].count('2'):\n        print('2\\n' + b[0] + '2')\n    elif b[1:].count('5'):\n        print('2\\n' + b[0] + '5')\n    elif '2' in d and '7' in d:\n        print('2\\n27')\n    elif '5' in d and '7' in d:\n        print('2\\n57')", "a = '2357'\nl = ['22', '25', '27', '32', '33', '35', '52', '55', '57', '72', '75', '77']\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    k = int(input())\n    s = str(k)\n    i = 0\n    j = 0\n    m = ''\n    if s.count(a[0]) + s.count(a[1]) + s.count(a[2]) + s.count(a[3]) < n:\n        for x in s:\n            if x not in a:\n                print(1)\n                print(x)\n                break\n            else:\n                pass\n    else:\n        for x in range(n):\n            for i in range(x + 1, n):\n                if s[x] + s[i] in l:\n                    m += s[x] + s[i]\n                    break\n            if m != '':\n                break\n        print(2)\n        print(m)", "prime = [2, 3, 5, 7]\npossible = {2: [2, 5, 7], 3: [2, 3, 5], 5: [2, 5, 7], 7: [2, 5, 7]}\nn = int(input())\nfor _ in range(n):\n    unprimes = []\n    k = int(input())\n    nums = list(map(int, list(input())))\n    for x in nums:\n        if x not in prime:\n            print(1)\n            print(x)\n            break\n        else:\n            unprimes.append(x)\n    else:\n        print(2)\n        for i in range(k - 1):\n            flag = 0\n            for x in unprimes[i + 1:]:\n                if x in possible[unprimes[i]]:\n                    print(str(unprimes[i]) + str(x))\n                    flag = 1\n                    break\n            if flag:\n                break", "for _ in range(int(input())):\n    k = int(input())\n    num = input()\n    comp = set([1, 4, 6, 8, 9])\n    f = 0\n    count = [0] * 10\n    for i in num:\n        count[int(i)] += 1\n        if int(i) in comp:\n            f = 1\n            print(1)\n            print(int(i))\n            break\n    if f == 0 and count[2] >= 1:\n        if num[0] != '2':\n            print(2)\n            print(int(num[0]) * 10 + 2)\n            f = 1\n        elif count[5] >= 1:\n            print(2)\n            print(25)\n            f = 1\n        elif count[7] >= 1:\n            print(2)\n            print(27)\n            f = 1\n        elif count[2] >= 2:\n            print(2)\n            print(22)\n            f = 1\n    if count[5] >= 1 and f == 0:\n        if num[0] != '5':\n            print(2)\n            print(int(num[0]) * 10 + 5)\n            f = 1\n        elif count[7] != 0:\n            print(2)\n            print(57)\n            f = 1\n        elif count[5] >= 2:\n            print(2)\n            print(55)\n            f = 1\n    if count[3] >= 2 and f == 0:\n        print(2)\n        print(33)\n        f = 1\n    if count[7] >= 2 and f == 0:\n        print(2)\n        print(77)", "t = int(input())\nfor _ in range(t):\n    k = int(input())\n    n = input()\n    req_list = ['22', '25', '27', '33', '32', '35', '55', '52', '57', '77', '72', '75']\n    ans = False\n    if len(n) == 1:\n        print(1)\n        print(n)\n        continue\n    for i in range(k):\n        if n[i] == '1' or n[i] == '4' or n[i] == '6' or (n[i] == '8') or (n[i] == '9'):\n            print(1)\n            print(n[i])\n            ans = True\n            break\n    if ans == False:\n        for i in range(k):\n            for j in range(i + 1, k):\n                if n[i] + n[j] in req_list:\n                    print(2)\n                    print(n[i] + n[j])\n                    ans = True\n                    break\n            if ans == True:\n                break", "def prime(n):\n    if n == 1:\n        return False\n    elif n == 2:\n        return True\n    else:\n        for i in range(2, int(n ** 0.5) + 1):\n            if n % i == 0:\n                return False\n        return True\nd = {}\nfor _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    flag = 0\n    d = {int(i): 0 for i in range(1, 10)}\n    dind = {}\n    c = 0\n    for i in s:\n        d[int(i)] += 1\n        dind[c] = i\n        if not prime(int(i)):\n            print(1)\n            print(i)\n            flag = 1\n            break\n        c += 1\n    if flag == 0:\n        if d[2] > 1:\n            print(2)\n            print(22)\n        elif d[5] > 1:\n            print(2)\n            print(55)\n        elif d[7] > 1:\n            print(2)\n            print(77)\n        elif d[3] > 1:\n            print(2)\n            print(33)\n        else:\n            l = sorted(dind)\n            print(2)\n            lt = len(l)\n            fl = 0\n            for i in range(lt - 1):\n                for j in range(i + 1, lt):\n                    if not prime(int(dind[l[i]] + dind[l[j]])):\n                        print(int(dind[l[i]] + dind[l[j]]))\n                        fl = 1\n                        break\n                if fl == 1:\n                    break", "def isPrime(num):\n    flag = True\n    if num > 1:\n        for i in range(2, num):\n            if num % i == 0:\n                flag = False\n                break\n    return flag\nn = int(input())\nres = []\nfor i in range(n):\n    l = int(input())\n    num = input()\n    if '1' in num or '4' in num or '6' in num or ('8' in num) or ('9' in num):\n        for i in range(l):\n            if num[i] == '1' or num[i] == '4' or num[i] == '6' or (num[i] == '8') or (num[i] == '9'):\n                res.append(1)\n                res.append(int(num[i]))\n                break\n    else:\n        fl = False\n        for i in range(len(num)):\n            if fl != True:\n                for j in range(len(num)):\n                    if fl != True:\n                        if i != j and i < j:\n                            if isPrime(int(num[i] + num[j])) == False:\n                                res.append(len(num[i] + num[j]))\n                                res.append(int(num[i] + num[j]))\n                                fl = True\n                    else:\n                        break\n            else:\n                break\nprint(*res, sep='\\n')", "p = '2\\n'\nfor s in [*open(0)][2::2]:\n    print('1\\n' + t.pop() if (t := ({*'14689'} & {*s})) else p + s[0] + t.pop() if (t := ({*'25'} & {*s[1:]})) else p + 2 * t[0] if (t := [x for x in s if s.count(x) > 1]) else p + s.replace('3', ''))", "def solve():\n    total_num = int(input())\n    number = int(input())\n    arr = []\n    primes = [2, 3, 5, 7]\n    while number > 0:\n        arr.append(number % 10)\n        number = number // 10\n    arr.reverse()\n    for i in arr:\n        if i not in primes:\n            return [1, i]\n    for i in range(total_num):\n        if arr[i] == 2:\n            for j in range(i + 1, total_num):\n                if arr[j] == 5 or arr[j] == 2 or arr[j] == 7:\n                    return [2, arr[i] * 10 + arr[j]]\n        elif arr[i] == 3:\n            for j in range(i + 1, total_num):\n                if arr[j] == 5 or arr[j] == 2 or arr[j] == 3:\n                    return [2, arr[i] * 10 + arr[j]]\n        elif arr[i] == 5:\n            for j in range(i + 1, total_num):\n                if arr[j] == 5 or arr[j] == 2 or arr[j] == 7:\n                    return [2, arr[i] * 10 + arr[j]]\n        elif arr[i] == 7:\n            for j in range(i + 1, total_num):\n                if arr[j] == 5 or arr[j] == 2 or arr[j] == 7:\n                    return [2, arr[i] * 10 + arr[j]]\nremained_test_cases = 1\nremained_test_cases = int(input())\nwhile remained_test_cases > 0:\n    output = solve()\n    print(output[0])\n    print(output[1])\n    remained_test_cases -= 1", "for s in [*open(0)][2::2]:\n    print((t := ({*'14689'} & {*s})) and '1\\n' + t.pop() or '2\\n' + ((t := ({*'25'} & {*s[1:]})) and s[0] + t.pop() or ((t := [x for x in s if s.count(x) > 1]) and 2 * t[0]) or s.replace('3', '')))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    f = 0\n    t = ''\n    for i in s:\n        if i in '14689':\n            t = i\n            f = 1\n            break\n    if f:\n        print(1)\n        print(t)\n        continue\n    d = set()\n    f = 1\n    for i in s:\n        if i in d:\n            print(2)\n            print(i * 2)\n            f = 0\n            break\n        d.add(i)\n    if f:\n        if s[0] != '5' and '5' in d:\n            print(2)\n            print(s[0] + '5')\n            continue\n        elif s[0] != '2' and '2' in d:\n            print(2)\n            print(s[0] + '2')\n            continue\n        elif '2' in d and '7' in d:\n            print(2)\n            print('27')\n        elif '5' in d and '7' in d:\n            print(2)\n            print('57')", "for s in [*open(0)][2::2]:\n    print((t := ({*'14689'} & {*s})) and '1\\n' + t.pop() or '2\\n' + ((t := ({*'25'} & {*s[1:]})) and s[0] + t.pop() or next((x for x in s if s.count(x) > 1), 0) * 2 or s.replace('3', '')))", "for s in [*open(0)][2::2]:\n    print((t := ({*'14689'} & {*s})) and '1\\n' + t.pop() or '2\\n' + ((t := ({*'25'} & {*s[1:]})) and s[0] + t.pop() or (*(x * 2 for x in s if s.count(x) > 1), 0)[0] or s.replace('3', '')))", "from math import sqrt\n\ndef isprime(n):\n    res = True\n    for i in range(2, int(sqrt(n)) + 1):\n        if n % i == 0:\n            res = False\n            break\n    return res\nfor _ in range(int(input())):\n    k = int(input())\n    num = input()\n    found = False\n    if len(num) == 2:\n        (fr, se) = (num[0], num[1])\n        if fr in ['2', '3', '5', '7'] and se in ['2', '3', '5', '7']:\n            found = True\n            print(2)\n            print(int(num))\n    if not found:\n        res = False\n        for i in num:\n            if i in ['1', '4', '6', '8', '9']:\n                res = True\n                print(1)\n                print(i)\n                break\n        if not res:\n            l = list(num)\n            (a, b, c) = (int(l[0] + l[1]), int(l[1] + l[2]), int(l[0] + l[2]))\n            for i in [a, b, c]:\n                if not isprime(i):\n                    print(2)\n                    print(int(i))\n                    break", "for s in [*open(0)][2::2]:\n    print((t := ({*'14689'} & {*s})) and '1\\n' + t.pop() or '2\\n' + ((t := ({*'25'} & {*s[1:]})) and s[0] + t.pop() or [x * 2 for x in (*s, '') if s.count(x) ^ 1][0] or s.replace('3', '')))", "for s in [*open(0)][2::2]:\n    print((t := ({*'14689'} & {*s})) and '1\\n' + t.pop() or '2\\n' + ((t := ({*'25'} & {*s[1:]})) and s[0] + t.pop() or [x * 2 for x in (*s, '') if s.count(x) ^ 1][0] or s.replace('3', '')))", "for _ in range(int(input())):\n    n = int(input())\n    s = str(input())\n    l = ['4', '6', '8', '9', '1']\n    c = True\n    ll = ['15', '27', '51', '52', '32', '12', '21', '57', '77', '33', '22', '35', '55', '75', '72', '25']\n    for i in l:\n        if i in s:\n            print(1)\n            print(i)\n            c = False\n            break\n    if c == True:\n        for i in ll:\n            x = s.find(i[0])\n            if x != -1:\n                if i[1] in s[x + 1:]:\n                    print(2)\n                    print(i)\n                    break", "for _ in range(int(input())):\n    n = int(input())\n    l = list(input())\n    f = 0\n    for i in l:\n        if i in ['1', '4', '6', '8', '9']:\n            f = i\n            break\n    if f != 0:\n        print(1)\n        print(f)\n    else:\n        c = []\n        for i in range(n):\n            if l[i] in ['2', '3', '5', '7']:\n                c.append(l[i])\n        if c:\n            for j in c:\n                if j == '2':\n                    for i in range(1, len(c)):\n                        if c[i] in ['2', '5', '7']:\n                            print(2)\n                            print(j + c[i])\n                            f = 1\n                            break\n                elif j == '3':\n                    for i in range(1, len(c)):\n                        if c[i] in ['2', '5', '3']:\n                            print(2)\n                            print(j + c[i])\n                            f = 1\n                            break\n                elif j == '5':\n                    for i in range(1, len(c)):\n                        if c[i] in ['2', '5', '7']:\n                            print(2)\n                            print(j + c[i])\n                            f = 1\n                            break\n                else:\n                    for i in range(1, len(c)):\n                        if c[i] in ['2', '5', '7']:\n                            print(2)\n                            print(j + c[i])\n                            f = 1\n                            break\n                if f == 1:\n                    break", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if {'1', '4', '6', '8', '9'}.intersection(set([t for t in s])):\n        print(1, list(set(set([t for t in s])) & {'1', '4', '6', '8', '9'})[0], sep='\\n')\n    else:\n        for i in range(n):\n            for j in range(i + 1, n):\n                if any((int(s[i] + s[j]) % t == 0 for t in range(2, 10))):\n                    print(2, s[i] + s[j], sep='\\n')\n                    break\n            else:\n                continue\n            break", "for s in [*open(0)][2::2]:\n    print((t := ({*'14689'} & {*s})) and '1\\n' + t.pop() or '2\\n' + ((t := ({*'25'} & {*s[1:]})) and s[0] + t.pop() or max((x * 2 for x in (*s, '') if s.count(x) ^ 1)) or s.replace('3', '')))", "def solve(n: str):\n    data = {'2', '3', '5', '7'}\n    for i in n:\n        if i not in data:\n            print(1)\n            print(i)\n            return\n    data = {'53', '37', '73', '23'}\n    temp = set()\n    for i in n:\n        for j in temp:\n            if j + i not in data:\n                print(2)\n                print(j + i)\n                return\n        temp.add(i)\nfor i in range(int(input())):\n    n = int(input())\n    n = input()\n    solve(n)", "def solve():\n    safe_ind = 0\n    a = ''\n    for (i, el) in enumerate(n):\n        if el in safe:\n            ans = el\n            safe_ind += 1\n            break\n        else:\n            a += el\n    if safe_ind == 1:\n        return (1, int(ans))\n    else:\n        if a[0:2] in safe_2:\n            ans_else = a[0:2]\n        else:\n            b1 = a[0] + a[2]\n            b2 = a[1] + a[2]\n            if b1 in safe_2:\n                ans_else = b1\n            elif b2 in safe_2:\n                ans_else = b2\n        return (2, int(ans_else))\nsafe = ['1', '4', '6', '8', '9']\nsafe_2 = ['22', '32', '52', '72', '33', '25', '35', '55', '75', '27', '57', '77']\nt = int(input())\nfor cases in range(t):\n    k = int(input())\n    n = input()\n    (eins, zwei) = solve()\n    print(eins)\n    print(zwei)", "prime = ['2', '3', '5', '7']\nfor _ in range(int(input())):\n    k = int(input())\n    n = input()\n    c = 0\n    for i in n:\n        if not i in prime:\n            print('1')\n            print(int(i))\n            c = 1\n            break\n    if c == 0:\n        for i in range(k - 1):\n            if c == 0:\n                for j in range(i + 1, k):\n                    if c == 0:\n                        for z in range(2, 10):\n                            if int(n[i] + n[j]) % z == 0:\n                                print('2')\n                                print(n[i] + n[j])\n                                c = 1\n                                break", "def eratosthenes(n):\n    sieve = list(range(n + 1))\n    sieve[1] = 0\n    for i in sieve:\n        if i > 1:\n            for j in range(i + i, len(sieve), i):\n                sieve[j] = 0\n    sieve1 = set(sieve)\n    return sieve1\nsieve1 = eratosthenes(100)\nt = int(input())\nfor w in range(t):\n    n = int(input())\n    string = input()\n    find = False\n    for lett in string:\n        if int(lett) not in sieve1:\n            print(1)\n            print(int(lett))\n            find = True\n            break\n    if not find:\n        for i in range(n - 1):\n            if not find:\n                for j in range(i + 1, n):\n                    if int(string[i] + string[j]) not in sieve1:\n                        print(2)\n                        print(int(string[i] + string[j]))\n                        find = True\n                        break\n            else:\n                break", "PRIME_DIGITS = {2, 3, 5, 7}\nTWO_DIGIT_PRIMES = {11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n\ndef main():\n    n = int(input())\n    for _ in range(n):\n        k = int(input())\n        num = [int(digit_str) for digit_str in input()]\n        solve(k, num)\n\ndef solve(k, num):\n    for digit in num:\n        if digit not in PRIME_DIGITS:\n            print('1')\n            print(digit)\n            return\n    for i in range(len(num)):\n        for j in range(i + 1, len(num)):\n            if num[i] * 10 + num[j] not in TWO_DIGIT_PRIMES:\n                print('2')\n                print(num[i] * 10 + num[j])\n                return\nmain()", "from itertools import combinations\nfrom math import sqrt\nbad = {1, 4, 6, 8, 9}\n\ndef is_prime(n):\n    if n < 2:\n        return False\n    if n % 2 == 0:\n        return n == 2\n    k = 3\n    while k * k <= n:\n        if n % k == 0:\n            return False\n        k += 2\n    return True\nfor _ in range(int(input())):\n    one = True\n    k = int(input())\n    n = int(input())\n    for s in str(n):\n        if int(s) in bad:\n            print(1)\n            print(int(s))\n            one = False\n            break\n    sol = False\n    if one:\n        for i in range(2, k + 1):\n            if sol == False:\n                for j in combinations(str(n), i):\n                    if is_prime(int(''.join(j))) == False:\n                        print(i)\n                        print(int(''.join(j)))\n                        sol = True\n                        break", "def isPrime(n):\n    if i not in ('2', '3', '5', '7'):\n        return 0\n    else:\n        return 1\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    num = input()\n    num1 = set(num)\n    for i in num1:\n        if not isPrime(int(i)):\n            print(1)\n            print(i)\n            break\n    else:\n        if int(num) % 2 == 0:\n            print(2)\n            print(num[n - 2:])\n        elif '2' in num and num.index('2') != 0:\n            print(2)\n            c = num.index('2')\n            print(num[c - 1:c + 1])\n        elif '5' in num and num.index('5') != 0:\n            print(2)\n            c = num.index('5')\n            print(num[c - 1:c + 1])\n        elif num.count('2') >= 2:\n            print(2)\n            print(22)\n        elif num.count('3') >= 2:\n            print(2)\n            print(33)\n        elif num.count('5') >= 2:\n            print(2)\n            print(55)\n        elif num.count('7') >= 2:\n            print(2)\n            print(77)\n        else:\n            l = []\n            for i in num:\n                if i != '3':\n                    l.append(i)\n            c = 0\n            print(2)\n            for i in l:\n                if c < 2:\n                    print(i, end='')\n                else:\n                    break\n            print()", "from sys import stdin, setrecursionlimit, maxsize\nfrom collections import deque\nfrom heapq import *\nfrom math import sqrt, gcd\ninput = stdin.readline\nsetrecursionlimit(10 ** 5)\nMAX = 100\np = [1] * MAX\np[0] = 0\np[1] = 0\nfor i in range(2, MAX):\n    if p[i] == 0:\n        continue\n    for j in range(i * 2, MAX, i):\n        p[j] = 0\n\ndef solve(s, k):\n    for i in range(k):\n        if s[i] == '1' or s[i] == '4' or s[i] == '6' or (s[i] == '8') or (s[i] == '9'):\n            print(1)\n            print(s[i])\n            return 0\n    for i in range(k):\n        for j in range(i + 1, k):\n            if p[int(s[i]) * 10 + int(s[j])] == 0:\n                print(2)\n                print(s[i] + s[j])\n                return 0\nfor _ in range(int(input())):\n    k = int(input())\n    s = input().strip()\n    solve(s, k)", "prime = [False] * 100\nfor i in range(2, 100):\n    prime[i] = True\n    j = 2\n    while j * j <= i:\n        if i % j == 0:\n            prime[i] = False\n        j += 1\nfor _ in range(int(input())):\n    l = int(input())\n    num = input()\n    found = False\n    for n in num:\n        if '1' is n or '4' is n or '6' is n or ('8' is n) or ('9' is n):\n            print(f'1\\n{n}')\n            found = True\n            break\n    if found:\n        continue\n    for n in range(len(num)):\n        for j in range(n + 1, len(num)):\n            if not prime[int(num[n] + num[j])]:\n                print(f'2\\n{num[n] + num[j]}')\n                found = True\n                break\n        if found:\n            break", "p = int(input())\nfor _ in range(p):\n\n    def comp(x):\n        for y in range(2, int(x ** 0.5) + 1):\n            if x % y == 0:\n                return True\n        return False\n    k = int(input())\n    x = input()\n    what = {'1', '4', '6', '8', '9'}\n    stone = ''\n    f = set()\n    for a in x:\n        if a in what:\n            print('1')\n            print(a)\n            break\n        if len(stone) == 0:\n            for g in f:\n                if comp(int(g + a)):\n                    stone = g + a\n            f.add(a)\n    else:\n        print('2')\n        print(stone)", "def solution():\n    l = int(input())\n    n = input()\n    ar = []\n    ck = [1, 4, 6, 8, 9]\n    ar = [int(0) for i in range(60)]\n    cnt = int(0)\n    for i in n:\n        if int(i) in ck:\n            print('1')\n            print(i)\n            return\n    for i in n:\n        ar[int(i)] += 1\n        if ar[int(i)] > 1:\n            print(2)\n            print(i + i)\n            return\n        elif int(i) == 2 or int(i) == 5:\n            if cnt > 0:\n                print(2)\n                print(n[0] + i)\n                return\n        elif int(i) == 7:\n            if ar[5] > 0:\n                print(2)\n                print(57)\n                return\n            elif ar[2] > 0:\n                print(2)\n                print(27)\n                return\n        cnt += 1\nt = int(input())\nwhile t > 0:\n    t -= 1\n    solution()", "prim = ['1', '4', '6', '8', '9', '22', '25', '27', '32', '33', '35', '52', '55', '57', '72', '75', '77']\n\ndef calc(x, b):\n    v = []\n    for e in x:\n        if e in prim[:5]:\n            return e\n    if x in prim:\n        return x\n    x = x[:3]\n    if x[0] + x[1] in prim:\n        v.append(x[0] + x[1])\n    if x[0] + x[2] in prim:\n        v.append(x[0] + x[2])\n    if x[1] + x[2] in prim:\n        v.append(x[1] + x[2])\n    return min(v)\nfor _ in range(int(input())):\n    b = int(input())\n    x = input()\n    v = calc(x, b)\n    print(str(len(v)) + '\\n' + str(v))", "def solve(cnt, num):\n    prime = [2, 3, 5, 7]\n    for digit in num:\n        if digit not in prime:\n            print(1, digit, sep='\\n')\n            return\n    prime_2 = [23, 37, 53, 73]\n    for a in prime:\n        for b in prime:\n            if a * 10 + b in prime_2:\n                continue\n            if a in num and b in num[num.index(a) + 1:] and (num.index(b, num.index(a) + 1) > num.index(a)):\n                print(2, f'{a}{b}', sep='\\n')\n                return\n    print('Kke')\nqueue = []\nfor _ in range(int(input())):\n    queue.append((int(input()), list(map(int, list(input())))))\nfor el in queue:\n    solve(*el)"]