["number_of_ice_spheres = int(input())\nice_spheres_prices = list(map(int, input().split()))\nice_spheres_prices.sort()\nresult = []\nfor i in range(number_of_ice_spheres // 2):\n    result.append(ice_spheres_prices[-i - 1])\n    result.append(ice_spheres_prices[i])\nif number_of_ice_spheres % 2 == 1:\n    result.append(ice_spheres_prices[number_of_ice_spheres // 2])\n    print(number_of_ice_spheres // 2)\nelse:\n    print((number_of_ice_spheres - 1) // 2)\nprint(' '.join(map(str, result)))", "import io, os, sys\n\ndef print(*args, sep=' ', end='\\n'):\n    string = sep.join(map(str, args)) + end\n    sys.stdout.write(string)\n\ndef debug(*args, sep=' ', end='\\n'):\n    string = 'Debug: ' + sep.join(map(str, args)) + end\n    sys.stderr.write(string)\nN = int(input())\nA = list(map(int, input().split()))\nprint((N - 1) // 2)\nA.sort()\nB = [None] * N\ni = 1\nfor elt in A:\n    if i >= N:\n        i = 0\n    B[i] = elt\n    i += 2\nprint(' '.join(map(str, B)))", "from sys import stdin\n_ = int(stdin.readline())\nnums = sorted(map(lambda x: int(x), stdin.readline().split()))\ncheap = nums[:len(nums) // 2]\nexpensive = nums[len(cheap):]\nresult = []\nfor i in range(len(cheap)):\n    result.append(str(expensive[i]))\n    result.append(str(cheap[i]))\nif len(cheap) < len(expensive):\n    result.append(str(expensive[-1]))\nprint(len(expensive) - 1)\nprint(' '.join(result))", "n = int(input())\nl = input().split()\nfor i in range(len(l)):\n    l[i] = int(l[i])\nl = sorted(l)\nprint((n - 1) // 2)\nsmall = l[0:(n - 1) // 2]\nbig = l[(n - 1) // 2:]\nans = []\nif n % 2 == 0:\n    ans.append(str(big[-1]))\n    ans.append(str(big[-2]))\n    for i in range((n - 1) // 2):\n        ans.append(str(small[i]))\n        ans.append(str(big[i]))\nelse:\n    ans.append(str(big[-1]))\n    for i in range((n - 1) // 2):\n        ans.append(str(small[i]))\n        ans.append(str(big[i]))\nprint(' '.join(ans))", "from math import ceil\nn = int(input())\narr = list(map(int, input().split()))\narr.sort()\na = arr[:n // 2]\nb = arr[n // 2:]\nans = []\nwhile a:\n    ans.append(b.pop())\n    ans.append(a.pop())\nif b:\n    ans.append(b.pop())\nprint(ceil(n / 2) - 1)\nprint(' '.join([str(v) for v in ans]))", "n = int(input())\na = list(map(int, input().split()))\ncount = 0\na = sorted(a, reverse=True)\ni = 2\nwhile i < len(a):\n    if a[i - 1] > a[i]:\n        (a[i - 1], a[i]) = (a[i], a[i - 1])\n        count += 1\n    i += 2\nprint(count)\nprint(' '.join((str(k) for k in a)))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    output = [i for i in a]\n    output[1::2] = a[0:n // 2]\n    output[0::2] = a[n // 2:]\n    output = ' '.join(['%d' % i for i in output])\n    print(n // 2 - 1 + n % 2)\n    print(output)\nsolve()", "n = int(input())\narr = sorted(list(map(int, input().split())))\narr1 = arr[:n // 2]\narr2 = arr[n // 2:]\nllstr = ''\nfor i in range(len(arr1)):\n    llstr += str(arr2[i]) + ' '\n    llstr += str(arr1[i]) + ' '\nif n % 2 != 0:\n    llstr += str(arr2[len(arr2) - 1])\n    print(len(arr1))\nelse:\n    print(len(arr1) - 1)\nprint(llstr)", "def do(l, n):\n    o = l[0:n // 2]\n    k = l[n // 2:n]\n    nlist = []\n    for i in range(n // 2):\n        nlist.append(str(k[i]))\n        nlist.append(str(o[i]))\n    nlist.append(str(k[n // 2]))\n    return nlist\nn = int(input())\nl = list(map(int, input().split()))\nl.sort()\nif n % 2 == 0:\n    x = l[n - 1]\n    l.pop(n - 1)\n    a = do(l, n - 1)\n    a.append(str(x))\n    n -= 1\nelse:\n    a = do(l, n)\nprint(n // 2)\nprint(' '.join(a))", "n = int(input())\ns = input()\nprices = sorted(map(int, s.split(' ')))\noptimal_order = []\nhalf_way = n // 2\nfor i in range(half_way):\n    optimal_order.append(str(prices[half_way + i]))\n    optimal_order.append(str(prices[i]))\nif n % 2 == 1:\n    optimal_order.append(str(prices[-1]))\nprint((n - 1) // 2)\nprint(' '.join(optimal_order))", "import math\nn = int(input())\na = list(map(int, input().split()))\nb = [0 for i in range(n)]\nif n == 1 or n == 2:\n    print(0)\n    s = ' '.join((str(i) for i in a))\n    print(s)\nelse:\n    a.sort()\n    print(int(math.ceil(n / 2) - 1))\n    if n % 2 == 0:\n        b[0] = a[0]\n    b[n - 1] = a[n - 1]\n    for i in range(n - 2, -1, -2):\n        if i != 0:\n            b[i] = a[i - 1]\n            b[i - 1] = a[i]\n    s = ' '.join((str(i) for i in b))\n    print(s)", "from math import ceil\n\ndef fu():\n    return map(int, input().split(' '))\nn = int(input())\np = int((n - 1) / 2)\ns = sorted(list(fu()))\ns1 = s[:p]\ns2 = s[p:]\nA = ''\nfor i in range(p):\n    A += str(s2[i]) + ' ' + str(s1[i]) + ' '\nA += str(s2[p])\nif n % 2 == 0:\n    A += ' ' + str(s2[p + 1])\nprint(p)\nprint(A)", "n = int(input())\na = list(sorted(list(map(int, input().split()))))\nm = (n - 1) // 2\nprint(m)\nx = a[:m]\ny = a[m:]\ns = []\nfor i in range(m):\n    s += [y[i], x[i]]\ns += y[m:]\ns = list(map(str, s))\nprint(' '.join(s))", "for _ in range(1):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n % 2 == 1:\n        print(n // 2)\n        l.sort()\n        m = [0] * n\n        ind = 0\n        for i in range(1, n, 2):\n            m[i] = l[ind]\n            ind += 1\n        for i in range(0, n, 2):\n            m[i] = l[ind]\n            ind += 1\n        print(' '.join((str(x) for x in m)))\n    else:\n        print(n // 2 - 1)\n        l.sort()\n        m = [0] * n\n        ind = 0\n        for i in range(1, n, 2):\n            m[i] = l[ind]\n            ind += 1\n        for i in range(0, n, 2):\n            m[i] = l[ind]\n            ind += 1\n        print(' '.join((str(x) for x in m)))", "n = int(input())\nl = list(map(int, input().split()))\nl.sort()\nn = len(l)\nans = l[:]\nif n % 2:\n    slots = n // 2\nelse:\n    slots = n // 2 - 1\nfor i in range(slots):\n    ans[i * 2 + 1] = l[i]\nno_index = slots\nfor i in range(n // 2):\n    ans[i * 2] = l[no_index]\n    no_index += 1\nprint(slots)\nprint(' '.join(map(str, ans)).strip())", "import sys\nimport math\ninput = sys.stdin.readline\nN = int(input())\nA = list(map(int, input().split(' ')))\nA.sort()\nX = N // 2\nit1 = iter(A[:X])\nit2 = iter(A[X:])\nx = True\ny = True\nans = []\nwhile x or y:\n    try:\n        ans.append(next(it2))\n    except StopIteration:\n        x = False\n    try:\n        ans.append(next(it1))\n    except StopIteration:\n        y = False\nprint((N - 1) // 2)\nprint(' '.join(map(str, ans)))", "n = int(input())\ns = input()\nprices = sorted(map(int, s.split(' ')))\noptimal_order = []\nhalf_way = n // 2\nfor i in range(half_way):\n    optimal_order.append(str(prices[half_way + i]))\n    optimal_order.append(str(prices[i]))\nif n % 2 == 1:\n    optimal_order.append(str(prices[-1]))\n    print(n // 2)\nelse:\n    print(n // 2 - 1)\nprint(' '.join(optimal_order))", "def birth(n, arr):\n    if n == 2:\n        print(0)\n        return ' '.join(list(map(str, arr)))\n    lower = len(arr) // 2\n    arr = sorted(arr)\n    small = arr[:lower]\n    large = arr[lower:]\n    blanck = []\n    for i in range(lower):\n        blanck.append(large[i])\n        blanck.append(small[i])\n    if n % 2 != 0:\n        blanck.append(arr[-1])\n    else:\n        lower -= 1\n    print(lower)\n    blanck = list(map(str, blanck))\n    return ' '.join(blanck)\nn = int(input())\nprint(birth(n, list(map(int, input().strip().split()))))", "n = int(input())\na = list(map(int, input().split()))\nprint((n - 1) // 2)\ne = (n - 1) // 2\na.sort()\nb = a[:e]\nc = a[e:]\nd = []\nfor i in range(e):\n    d.append(c[i])\n    d.append(b[i])\nd.extend(c[e:])\nd = list(map(str, d))\nprint(' '.join(d))", "n = int(input())\ns = sorted(map(int, input().split()))\nans = [None] * n\nprint((n - 1) // 2)\ncount = 0\nfor i in range(1, len(s), 2):\n    ans[i] = str(s[count])\n    count += 1\nfor i in range(0, len(s), 2):\n    ans[i] = str(s[count])\n    count += 1\nprint(' '.join(ans))", "ks = int(input())\ncs = [int(i) for i in input().split()]\ncs.sort(reverse=True)\notv = 0\nfor i in range(1, ks - 1, 2):\n    s = cs[i]\n    cs[i] = cs[i + 1]\n    cs[i + 1] = s\n    otv = otv + 1\nprint(otv)\nprint(' '.join(map(str, cs)))", "t = int(input())\nl1 = input().split(' ')\nl1 = [int(x) for x in l1]\nl1.sort()\nl2 = [0 for i in range(t)]\nprint((t - 1) // 2)\nfor i in range(t):\n    if i % 2 == 0:\n        l2[i] = str(l1[-(i // 2 + 1)])\n    else:\n        l2[i] = str(l1[i // 2])\nprint(' '.join(l2))", "n = int(input())\nv = sorted(map(int, input().split()))\nprint((n - 1) // 2)\nx = []\nfor (a, b) in zip(v[0::2], v[1::2]):\n    x.append(b)\n    x.append(a)\nif len(x) < len(v):\n    x += [v[-1]]\nprint(*x, sep=' ')", "n = int(input())\nprice = input()\nif n <= 2:\n    print(0)\n    print(price)\nelse:\n    price = price.split()\n    price = [int(i) for i in price]\n    price.sort()\n    res1 = n // 2\n    res2 = []\n    for i in range(res1):\n        res2.append(str(price[res1 + i]))\n        res2.append(str(price[i]))\n    if n % 2 == 1:\n        res2.append(str(price[-1]))\n    if n % 2 == 0:\n        res1 -= 1\n    print(res1)\n    print(' '.join(res2))", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nif n % 2 == 0:\n    k = n // 2 - 1\nelse:\n    k = n // 2\nd = [0 for i in range(n)]\ni = 0\nj = n - 1\nfor i in range(0, k):\n    d[2 * i] = a[j]\n    d[2 * i + 1] = a[i]\n    i += 1\n    j -= 1\nif i == j:\n    d[n - 1] = a[i]\nelse:\n    d[n - 1] = a[i]\n    d[n - 2] = a[i + 1]\nprint(k)\nprint(' '.join(list(map(str, d))))", "n = int(input())\na = list(map(int, input().split()))\na.sort()\noutput = []\nleft = a[:n // 2]\nright = a[n // 2:]\ni = 0\nwhile i < n // 2:\n    output.append(right[i])\n    output.append(left[i])\n    i += 1\nif n % 2 == 1:\n    output.append(right[i])\nif n % 2 == 0:\n    print(n // 2 - 1)\nelse:\n    print(n // 2)\nprint(' '.join(map(str, output)))", "from math import *\nn = int(input())\nlista = [int(i) for i in input().split(' ')]\nlista.sort()\nfor i in range(1, len(lista), 2):\n    a = lista[i]\n    b = lista[i - 1]\n    lista[i - 1] = a\n    lista[i] = b\nprint(ceil(n / 2 - 1))\nprint(' '.join([str(i) for i in lista]))", "t = int(input())\na = list(map(int, input().split()))\na.sort()\ng = []\nif t % 2 == 0:\n    for j in range(t // 2):\n        g.append(a[t // 2 + j])\n        g.append(a[j])\n    print(t // 2 - 1)\n    print(' '.join(map(str, g)))\nelse:\n    for j in range(t // 2):\n        g.append(a[t // 2 + j])\n        g.append(a[j])\n    g.append(a[-1])\n    print(t // 2)\n    print(' '.join(map(str, g)))", "n = int(input())\na = list(map(int, input().split()))\nif n <= 2:\n    print(0)\n    print(' '.join(map(str, a)))\nelse:\n    a.sort()\n    b = [0] * n\n    j = 0\n    for i in range(1, n, 2):\n        b[i] = a[j]\n        j += 1\n    for i in range(0, n, 2):\n        b[i] = a[j]\n        j += 1\n    print((n - 1) // 2)\n    print(' '.join(map(str, b)))", "n = int(input())\nlst = input().split()\nfor i in range(n):\n    lst[i] = int(lst[i])\nlst.sort()\nans = 0\nif n % 2 != 0:\n    ans = n // 2\nelse:\n    ans = n // 2 - 1\nmid = []\nout = []\nm = []\nif n % 2 == 0:\n    for i in range(ans + 1):\n        mid.append(lst[i])\n    for i in range(ans + 1, n):\n        out.append(lst[i])\nelse:\n    for i in range(ans):\n        mid.append(lst[i])\n    for i in range(ans, n):\n        out.append(lst[i])\nfor i in range(n):\n    if i % 2 == 0:\n        m.append(str(out[i // 2]))\n    else:\n        m.append(str(mid[i // 2]))\nprint(ans)\nprint(' '.join(m))", "n = int(input())\nl = list(map(int, input().split()))\na = sorted(l)\nans = (n - 1) // 2\nj = -1\nfor i in range(0, n, 2):\n    l[i] = a[j]\n    j -= 1\nfor i in range(1, n, 2):\n    l[i] = a[j]\n    j -= 1\nprint(ans)\nprint(' '.join(list(map(str, l))))", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nb = [0] * n\nk = 0\nfor j in range(1, n, 2):\n    b[j] = a[k]\n    k = k + 1\nfor j in range(0, n, 2):\n    b[j] = a[k]\n    k = k + 1\nif n % 2 == 0:\n    print(n // 2 - 1)\nelse:\n    print(n // 2)\nprint(' '.join(map(str, b)))", "n = int(input())\narray = list(map(int, input().split()))\narray.sort()\noutput = []\ni = n - 1\nj = 0\nwhile i > j:\n    output.append(array[i])\n    output.append(array[j])\n    i -= 1\n    j += 1\nif i == j:\n    output.append(array[i])\nprint((n - 1) // 2)\nprint(' '.join(map(str, output)))", "import math\na = int(input())\narr = list(map(int, input().split()))\narr.sort()\nans = [0] * len(arr)\neven = [arr[i] for i in range(len(arr) // 2, len(arr))]\nodd = [arr[i] for i in range(0, len(arr) // 2)]\ni = 0\nfor j in even:\n    ans[i] = j\n    i = i + 2\ni = 1\nfor j in odd:\n    ans[i] = j\n    i = i + 2\nprint(math.ceil(a / 2) - 1)\nprint(' '.join(map(str, ans)))", "n = int(input())\na = [int(i) for i in input().split()]\na.sort()\ns = str(a[n // 2]) + ' '\nif n % 2 != 0:\n    for i in range(0, n // 2):\n        s += str(a[i]) + ' ' + str(a[n // 2 + i + 1]) + ' '\nelse:\n    for i in range(0, n // 2 - 1):\n        s += str(a[i]) + ' ' + str(a[n // 2 + i + 1]) + ' '\n    s += str(a[n // 2 - 1])\nn1 = n // 2\nif n % 2 == 0:\n    n1 -= 1\nprint(n1)\nprint(s)", "n = int(input())\na = list(map(int, input().split()))\na.sort(reverse=1)\nif n % 2 == 1:\n    print(int(n / 2))\n    for i in range(1, int(n / 2) + 1):\n        print(a[i], a[n - i], end=' ')\n    print(a[0])\nelse:\n    print(int(n / 2) - 1)\n    for i in range(1, int(n / 2)):\n        print(a[i], a[n - i], end=' ')\n    print(a[int(n / 2)], a[0])", "s = int(input().strip())\na = [int(x) for x in input().strip().split()]\nl = len(a)\na = sorted(a)\nif l % 2 != 0:\n    print(l // 2)\n    b = a[:l // 2 - 1]\n    c = a[l // 2:]\n    print(c[0], end=' ')\n    for i in range(l // 2):\n        print(a[i], c[i + 1], end=' ')\nelse:\n    print(l // 2 - 1)\n    b = a[:l // 2]\n    c = a[l // 2:]\n    for i in range(l // 2):\n        print(c[i], a[i], end=' ')", "s = int(input().strip())\na = [int(x) for x in input().strip().split()]\nl = len(a)\na = sorted(a)\nif l % 2 != 0:\n    print(l // 2)\n    b = a[:l // 2 - 1]\n    c = a[l // 2:]\n    print(c[0], end=' ')\n    for i in range(l // 2):\n        print(a[i], c[i + 1], end=' ')\nelse:\n    print(l // 2 - 1)\n    b = a[:l // 2]\n    c = a[l // 2:]\n    for i in range(l // 2):\n        print(c[i], a[i], end=' ')", "n = int(input())\narr = [int(x) for x in input().split()]\narr.sort()\nif n & 1 == 1:\n    l = n // 2\n    ans = l\n    li = []\n    left = arr[:l]\n    arr = arr[l:]\nelse:\n    l = n // 2 - 1\n    ans = l\n    left = arr[:l]\n    arr = arr[l:]\nprint(ans)\nfor i in range(len(left)):\n    print(arr[i], left[i], end=' ')\nfor i in range(len(left), len(arr)):\n    print(arr[i], end=' ')", "n = int(input())\nprices = list(map(int, input().split()))\nind = 0\nif n % 2 == 1:\n    print(int(n / 2))\nelse:\n    print(int(n / 2 - 1))\nprices.sort()\nlistCheap = prices[:int(n / 2)]\nlistExpensice = prices[int(n / 2):]\nfinalList = []\nfor i in range(int(n / 2) + 1):\n    try:\n        finalList.append(listExpensice[i])\n        finalList.append(listCheap[i])\n    except:\n        continue\nprint(*finalList)", "import sys\ninput = sys.stdin.readline\nn = int(input())\nw = sorted(map(int, input().split()))\nprint((n - 1) // 2)\nd = []\nfor i in range((n - 1) // 2):\n    d.append(w[(n - 1) // 2 + i])\n    d.append(w[i])\nd += w[(n - 1) // 2 + (n - 1) // 2:]\nprint(*d)", "from sys import stdin\nn = int(stdin.readline())\na = sorted(map(int, stdin.readline().split()))\nb = []\nif n % 2 == 1:\n    m = (n - 1) // 2\n    for i in range(m):\n        b.append(a[m + i])\n        b.append(a[i])\n    b.append(a[n - 1])\n    print(m)\n    print(*b)\nelse:\n    m = n // 2\n    for i in range(m - 1):\n        b.append(a[m - 1 + i])\n        b.append(a[i])\n    b.append(a[n - 2])\n    b.append(a[n - 1])\n    print(m - 1)\n    print(*b)", "n = int(input())\na = list(map(int, input().split()))\nb = a.copy()\nb.sort()\nans = 0\nb1 = b[n // 2:]\nb2 = b[:n // 2]\nans = []\nfor i in range(len(b2)):\n    ans.append(b1[i])\n    ans.append(b2[i])\nif len(b1) > len(b2):\n    ans.append(b1[-1])\nif n % 2 == 0:\n    print(len(b2) - 1)\nelse:\n    print(len(b2))\nprint(*ans)", "num_inp = lambda : int(input())\narr_inp = lambda : list(map(int, input().split()))\nsp_inp = lambda : map(int, input().split())\nt = int(input())\nl = sorted(list(map(int, input().split())))\nfor i in range(t // 2):\n    (l[i * 2], l[i * 2 + 1]) = (l[i * 2 + 1], l[i * 2])\nprint((t - 1) // 2)\nprint(*l)", "n = int(input())\narr = list(map(int, input().split()))\nif n < 2:\n    c = 0\nelif n % 2 == 0:\n    c = n // 2 - 1\nelse:\n    c = n // 2\narr.sort()\nprint(c)\nfor i in range(c):\n    print(arr[c + i], arr[i], end=' ')\nif n % 2 == 0:\n    print(arr[n - 2], arr[n - 1])\nelse:\n    print(arr[n - 1])", "n = int(input())\nll = list(map(int, input().split()))\nll.sort()\nkk = []\nfor i in range(n // 2):\n    kk.append(ll[-i - 1])\n    kk.append(ll[i])\nif n % 2 != 0:\n    kk.append(ll[n // 2])\n    print(n // 2)\n    print(*kk)\nelse:\n    print(n // 2 - 1)\n    print(*kk)", "input()\ns = [int(i) for i in input().split()]\ns.sort()\nfor i in range(1, len(s), 2):\n    (s[i], s[i - 1]) = (s[i - 1], s[i])\nprint((len(s) - 1) // 2)\nprint(*s)", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nprint((n + 1) // 2 - 1)\nb = []\nfor x in range(n // 2):\n    b.append(a[-x - 1])\n    b.append(a[x])\nif n % 2:\n    b.append(a[n // 2])\nprint(*b)", "n = int(input())\na = sorted(list(map(int, input().split())))\nb = a[::-1]\nprint((n - 1) // 2)\nfor i in range(n // 2):\n    print(b[i], a[i], end=' ')\nif n % 2 != 0:\n    print(a[n // 2])", "n = int(input())\na = sorted(list(map(int, input().split())))\nb = a[::-1]\nprint((n - 1) // 2)\nfor i in range(n // 2):\n    print(b[i], a[i], end=' ')\nif n % 2 != 0:\n    print(a[n // 2])", "from collections import deque\nn = int(input())\nnum = list(map(int, input().split()))\nif n <= 2:\n    print(0)\n    print(' '.join(map(str, num)))\nelse:\n    cnt = n - 2\n    if cnt % 2 == 0:\n        print(cnt // 2)\n    else:\n        print(cnt // 2 + 1)\n    num.sort()\n    max_value = [num[-1], num[-2]]\n    num.pop()\n    num.pop()\n    temp = []\n    num = deque(num)\n    for i in range(cnt):\n        if i % 2 == 0:\n            temp.append(num.popleft())\n        else:\n            temp.append(num.pop())\n    temp = [max_value[0]] + temp + [max_value[1]]\n    print(' '.join(map(str, temp)))", "n = int(input())\narr = list(map(int, input().split()))\narr.sort()\nans_arr = [0 for i in range(n)]\nind = n - 1\nfor i in range(0, n, 2):\n    ans_arr[i] = str(arr[ind])\n    ind -= 1\nfor i in range(1, n, 2):\n    ans_arr[i] = str(arr[ind])\n    ind -= 1\nif n % 2 == 0:\n    n -= 1\nans = n // 2\nprint(ans)\nprint(' '.join(ans_arr))", "n = int(input())\nlst = list(map(int, input().split()))\nlst.sort()\nans = [0] * n\nif n % 2 == 0:\n    print((n - 2) // 2)\n    p = 0\n    for i in range(1, n, 2):\n        ans[i] = str(lst[p])\n        p += 1\n    for i in range(0, n, 2):\n        ans[i] = str(lst[p])\n        p += 1\n    print(' '.join(ans))\nelse:\n    print((n - 1) // 2)\n    p = 0\n    for i in range(1, n, 2):\n        ans[i] = str(lst[p])\n        p += 1\n    for i in range(0, n, 2):\n        ans[i] = str(lst[p])\n        p += 1\n    print(' '.join(ans))", "n = int(input())\nvalues = list(map(int, input().split()))\nvalues.sort()\nans = []\nfor i in range(1, len(values), 2):\n    ans.append(values[i])\n    ans.append(values[i - 1])\nif n % 2 == 1:\n    ans.append(values[len(values) - 1])\nprint((n - 1) // 2)\nprint(' '.join([str(x) for x in ans]))", "def GetInput():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    return (n, a)\n\ndef Sol(n, a):\n    num_cheap = (n - 1) // 2\n    b = a.copy()\n    for i in range(1, n, 2):\n        (b[i - 1], b[i]) = (b[i], b[i - 1])\n    return (num_cheap, b)\n(n, a) = GetInput()\n(num_cheap, b) = Sol(n, a)\nprint(num_cheap)\nfor x in b:\n    print(x, end=' ')", "n = int(input())\na = list(map(int, input().strip().split()))\nm = (n - 1) // 2\na.sort()\nl = [a[m]]\nfor i in range(m):\n    l.append(a[i])\n    l.append(a[m + 1 + i])\nfor i in range(2 * m + 1, n):\n    l.append(a[i])\nprint(m)\nprint(*l)", "n = int(input())\nA = list(map(int, input().split()))\nA.sort()\nans = [0 for _ in range(n)]\nif n % 2 == 0:\n    print((n - 1) // 2)\nelse:\n    print(n // 2)\nj = 0\nk = 1\nfor i in range(n - 1, n // 2 - 1, -1):\n    ans[j] = A[i]\n    j += 2\nfor i in range(n // 2):\n    ans[k] = A[i]\n    k += 2\nprint(*ans)", "def main(n, a):\n    spheres = n // 2\n    new = []\n    i = 0\n    while i < spheres:\n        new.append(str(a[spheres + i]))\n        new.append(str(a[i]))\n        i += 1\n    if n % 2 != 0:\n        new.append(str(a[-1]))\n        return f\"{str(spheres)}\\n{' '.join(new)}\"\n    else:\n        return f\"{str(spheres - 1)}\\n{' '.join(new)}\"\nn = int(input())\na = sorted(list(map(int, input().split())))\nprint(main(n, a))", "n = int(input())\nl = list(map(int, input().split()))\nl.sort(reverse=True)\nv = 0\ni = 2\nwhile i < n:\n    v += 1\n    (l[i - 1], l[i]) = (l[i], l[i - 1])\n    i += 2\nprint(v)\nfor i in range(n):\n    l[i] = str(l[i])\ns = ' '.join(l)\nprint(s)", "n = int(input())\narr = input().strip().split()\narr = [int(ele) for ele in arr]\narr.sort()\nfirst = n // 2\nsecond = 0\nout = []\nwhile first < n or second < n // 2:\n    if first < n:\n        out.append(arr[first])\n    if second < n // 2:\n        out.append(arr[second])\n    first += 1\n    second += 1\nout = [str(ele) for ele in out]\nif n % 2:\n    print(n // 2)\n    print(' '.join(out))\nelse:\n    print(n // 2 - 1)\n    print(' '.join(out))", "n = int(input())\narray = [int(c) for c in input().split()]\nans = []\nif n % 2 == 1:\n    print(int((n - 2) // 2 + 1))\nelse:\n    print(int((n - 2) / 2))\narray.sort()\nx = n - 1\nfor i in range(n // 2):\n    ans.append(array[x])\n    x -= (n - 1) // 2 + 1\n    ans.append(array[x])\n    x += (n - 1) // 2\nif len(ans) != len(array):\n    ans.append(array[n // 2])\nprint(' '.join([str(c) for c in ans]))", "from math import *\nn = input()\nlista = [int(i) for i in input().split(' ')]\nlista.sort()\nfor i in range(1, len(lista), 2):\n    a = lista[i]\n    b = lista[i - 1]\n    lista[i - 1] = a\n    lista[i] = b\nprint(ceil(int(n) / 2 - 1))\nprint(' '.join([str(i) for i in lista]))", "import math\nn = int(input())\nl = list(map(int, input().split()))\nl.sort()\nprint(math.ceil(n / 2) - 1)\nif n >= 3:\n    for i in range(0, n - 1, 2):\n        (l[i], l[i + 1]) = (l[i + 1], l[i])\n    print(*l)\nelse:\n    print(*l)", "import math\nimport sys\nx = int(input())\na = sorted(list(map(int, input().split())))\nif x < 3:\n    print(0)\n    print(*a)\n    sys.exit()\nprint(math.ceil(x / 2 - 1))\nc = [a[int(x / 2)]]\nd = int(x / 2) + 1\nfor j in range(int(x / 2) - 1):\n    c.append(a[j])\n    c.append(a[d])\n    d = d + 1\nif x % 2 != 0:\n    c.append(a[int(x / 2) - 1])\n    c.append(a[d])\nelse:\n    c.append(a[int(x / 2) - 1])\nprint(*c)", "from math import ceil\nn = int(input())\na = list(map(int, input().split()))\nprint(ceil(n / 2) - 1)\na.sort()\ni = 1\ncur = 0\nres = [0 for i in range(n)]\nwhile i < len(a):\n    res[i] = a[cur]\n    i += 2\n    cur += 1\ni = 0\nwhile i < len(a):\n    res[i] = a[cur]\n    cur += 1\n    i += 2\nprint(' '.join([str(x) for x in res]))", "from math import ceil\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nprint(ceil(n / 2) - 1)\n(b, c) = (a[:n // 2], a[n // 2:])\nfor i in range(len(b)):\n    print(c[i], b[i], end=' ')\nprint('' if len(c) == len(b) else c[len(b)])", "n = int(input())\nl = sorted(map(int, input().split()))\nprint((n - 1) // 2)\nprint(*[l[n - i // 2 - 1] if i % 2 == 0 else l[i // 2] for i in range(n)])", "n = int(input())\nl = list(map(int, input().split()))\nl.sort()\nprint((n - 1) // 2)\ni = 0\nwhile i < n - 1:\n    (l[i], l[i + 1]) = (l[i + 1], l[i])\n    i += 2\nprint(*l)", "n = int(input())\nvect = [int(x) for x in input().split()]\nvect = sorted(vect)\nif n % 2 == 0:\n    print(int(n / 2) - 1)\n    print(vect[n - int(n / 2) - 1], end=' ')\n    for i in range(0, int(n / 2) - 1):\n        print(vect[i], vect[i + int(n / 2)], end=' ')\n    print(vect[n - 1])\nelse:\n    print(int(n / 2))\n    print(vect[n - int(n / 2) - 1], end=' ')\n    for i in range(0, int(n / 2)):\n        print(vect[i], vect[i + int(n / 2) + 1], end=' ')", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nfor i in range(0, n // 2 * 2, 2):\n    (a[i], a[i + 1]) = (a[i + 1], a[i])\nprint((n - 1) // 2)\nprint(*a)", "import math\nfrom heapq import heappush, heappop, heapify\nimport random\nimport string\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right, insort\nimport sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nH = 1000000000 + 7\nn = I()\nl = L()\nl.sort()\nb = [0] * n\n(b[::2], b[1::2]) = (l[n // 2:], l[:n // 2])\nprint(sum((b[i - 1] > b[i] < b[i + 1] for i in range(1, n - 1))))\nprint(*b)", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nx = int((n - 1) / 2)\nprint(x)\nfor i in range(1, n, 2):\n    (a[i], a[i - 1]) = (a[i - 1], a[i])\nfor i in range(0, n):\n    print(a[i], end=' ')", "n = int(input())\nl = [int(i) for i in input().split()]\nl = sorted(l)\nif n % 2 == 0:\n    print(n // 2 - 1)\nelse:\n    print((n - 1) // 2)\nans = [0] * n\nif n % 2 == 0:\n    for i in range(n // 2 - 1):\n        ans[1 + 2 * i] = l[i]\n    for i in range(n - (n // 2 - 1) - 1):\n        ans[2 * i] = l[i + n // 2 - 1]\n    ans[n - 1] = l[n - 1]\nelse:\n    for i in range((n - 1) // 2):\n        ans[1 + 2 * i] = l[i]\n    for i in range(n - (n - 1) // 2):\n        ans[2 * i] = l[i + (n - 1) // 2]\ns = ''\nfor i in ans:\n    s += str(i) + ' '\nprint(s)", "n = int(input())\ns = input()\nm = [int(s) for s in s.split()]\nm = sorted(m)\nif len(m) % 2 == 0:\n    l = n // 2 - 1\nelse:\n    l = n // 2\nf = m[:n // 2]\ns = m[n // 2:]\nz = 0\nb = []\nfor i in range(len(f)):\n    b.append(s[i])\n    b.append(f[i])\nif n % 2 != 0:\n    b.append(s[-1])\nprint(l)\nprint(*b)", "n = int(input())\na = list(map(int, input().split(' ')))\nif n % 2 == 0 and n != 2:\n    number = n // 2 - 1\nelif n % 2 != 0 and n != 1:\n    number = n // 2\nelif n == 2 or n == 1:\n    number = 0\nif n > 2:\n    a.sort()\n    p = a[:number]\n    neig = a[number:]\n    l = []\n    for i in range(len(p)):\n        l.append(neig[i])\n        l.append(p[i])\n    if n % 2 != 0:\n        l.append(neig[-1])\n    else:\n        l.append(neig[-2])\n        l.append(neig[-1])\n    print(number)\n    print(*l)\nelse:\n    print(0)\n    print(*a)", "n = int(input())\na = list(map(int, input().split()))\na = sorted(a)\nmid = n // 2\na1 = a[:mid]\na2 = a[mid:]\nif n % 2 == 0:\n    print(mid - 1)\nelse:\n    print(mid)\nfor i in range(mid):\n    print(a2[i], a1[i], end=' ')\nif n % 2 == 1:\n    print(a2[-1])", "x = int(input())\na = list(map(int, input().split()))\n\ndef answer(x, a):\n    a.sort()\n    n = (x - 1) // 2\n    if n == 0:\n        print(n)\n        print(' '.join((str(i) for i in a)))\n    else:\n        a1 = a[:n]\n        a2 = a[n:]\n        s = ''\n        for i in range(n):\n            s += str(a2[i]) + ' ' + str(a1[i]) + ' '\n        if x % 2 == 1:\n            s += str(a2[n])\n        else:\n            s += str(a2[n]) + ' ' + str(a2[n + 1])\n        print(n)\n        print(s)\nanswer(x, a)", "n = int(input())\ns = input()\nmyList = s.split()\nfor i in range(len(myList)):\n    myList[i] = int(myList[i])\nmyLen = len(myList)\nif myLen <= 2:\n    print(0)\n    print(s)\n    quit()\nmyList.sort(reverse=True)\nmyList1 = [0 for i in range(myLen)]\nmyList1[0] = myList[0]\nmyList1[-1] = myList[1]\nk = 2\nfor i in range(2, myLen - 1, 2):\n    myList1[i] = myList[k]\n    k += 1\nfor i in range(1, myLen - 1, 2):\n    myList1[i] = myList[k]\n    k += 1\nif myList1[-2] == 0:\n    myList1[-2] = myList[-1]\nprint((myLen - 1) // 2)\nmyList1 = [str(e) for e in myList1]\nprint(' '.join(myList1))", "t = int(input())\nice = list(map(int, input().split()))\nnew_ice = []\ncount = 0\nice.sort()\nif len(ice) % 2 != 0:\n    for i in range(0, len(ice) // 2 + 1):\n        new_ice.append(ice[len(ice) // 2 + i])\n        new_ice.append(ice[i])\n    del new_ice[-1]\nelif len(ice) <= 2:\n    for i in range(len(ice)):\n        new_ice.append(ice[i])\nelse:\n    for i in range(0, len(ice) // 2):\n        new_ice.append(ice[len(ice) // 2 + i])\n        new_ice.append(ice[i])\nfor i in range(1, len(new_ice) - 1, 1):\n    if new_ice[i] < new_ice[i - 1] and new_ice[i] < new_ice[i + 1]:\n        count += 1\nprint(count)\nprint(' '.join(map(str, new_ice)))", "n = int(input())\nnums = list(map(int, input().split()))\ntemp = nums[:]\nnums.sort()\nres = []\nif n <= 2:\n    print(0)\n    print(*temp)\nelse:\n    a = (n - 1) // 2\n    small = nums[:a]\n    i = 0\n    j = 0\n    new = nums[a:]\n    new_len = len(new)\n    while i < new_len and j < len(small):\n        res.append(new[i])\n        res.append(small[j])\n        i += 1\n        j += 1\n    res.extend(new[i:])\n    print(a)\n    print(*res)", "n = int(input())\nl = sorted(list(map(int, input().split())))\nif n % 2 == 1:\n    print(n // 2)\n    for i in range(n // 2):\n        print(l[-i - 1], l[i], end=' ')\n    print(l[n // 2])\nelse:\n    print(n // 2 - 1)\n    for i in range(n // 2 - 1):\n        print(l[-i - 1], l[i], end=' ')\n    print(l[n // 2], l[n // 2 - 1])", "n = int(input())\nl = sorted(list(map(int, input().split())))\nif n <= 2:\n    print(0)\n    print(*l)\nelif n % 2 == 0:\n    print(n // 2 - 1)\n    a = l[:n // 2]\n    b = l[n // 2:]\n    for i in range(n // 2):\n        print(b[i], a[i], end=' ')\nelse:\n    a = l[:n // 2]\n    b = l[n // 2:]\n    print(n // 2)\n    for i in range(n // 2):\n        print(b[i], a[i], end=' ')\n    print(b[-1])", "n = int(input())\ninp = sorted(list(map(int, input().split())))\nprint((n - 1) // 2)\nfor i in range(n // 2):\n    print(inp[n - i - 1], inp[i], sep=' ', end=' ')\nif n % 2 == 1:\n    print(inp[n // 2])", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nif len(a) % 2 == 1:\n    print(len(a) // 2)\n    for i in range(0, len(a) // 2):\n        print(a[len(a) // 2 + i], a[i], end=' ')\n    print(a[-1])\nelse:\n    print(len(a) // 2 - 1)\n    for i in range(0, len(a) // 2):\n        print(a[len(a) // 2 + i], a[i], end=' ')", "n = int(input())\na = list(map(int, input().split()))\na.sort()\ns = ''\nt = 0\nfor i in range(n):\n    if i % 2 != 0:\n        t = a[i]\n        a[i] = a[i - 1]\n        a[i - 1] = t\nfor i in a:\n    s += str(i) + ' '\nprint((n - 1) // 2)\nprint(s[:len(s) - 1])", "def fun(ls, n):\n    if n == 1 or n == 2:\n        print(0)\n        print(*ls)\n        return\n    position = n // 2\n    index = position - 1\n    ls = sorted(ls)\n    ans = [0 for i in range(n)]\n    even = n - 1\n    odd = 0\n    for i in range(n):\n        if i % 2 == 0:\n            ans[i] = ls[even]\n            even -= 1\n        else:\n            ans[i] = ls[odd]\n            odd += 1\n    if n % 2 != 0:\n        print(n // 2)\n    else:\n        print(n // 2 - 1)\n    print(*ans)\nn = int(input())\nls = list(map(int, input().split()))\nfun(ls, n)", "k = int(input())\nlst = list(map(int, input().split()))\nout = []\nlst = sorted(lst)\nz = int(k / 2)\nd = k % 2\nif d == 0:\n    z -= 1\nif k > 2:\n    for i in range(z):\n        out.append(lst[z + i])\n        out.append(lst[i])\n    if d == 0:\n        out.append(lst[k - 2])\n        out.append(lst[k - 1])\n    else:\n        out.append(lst[k - 1])\n    print(z)\n    print(*out)\nelse:\n    print(0)\n    print(*lst)", "n = int(input())\narr = sorted(map(int, input().split()))\nif n < 3:\n    print(0)\n    print(*arr)\nelse:\n    ans = []\n    half = n // 2\n    for (i, j) in zip(arr[:half], arr[half:]):\n        ans.append(j)\n        ans.append(i)\n    if n % 2 != 0:\n        ans.append(arr[-1])\n    print((n - 1) // 2)\n    print(*ans)", "from math import ceil\nn = int(input())\nl = list(map(int, input().split()))\nprint(ceil(n / 2) - 1)\ni = 0\nl.sort()\nwhile i < n - 1:\n    (l[i], l[i + 1]) = (l[i + 1], l[i])\n    i += 2\nprint(*l)", "import sys\n\ndef ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\ntc = 1\nwhile tc:\n    tc -= 1\n    n = int(input())\n    ls = ints()\n    print((n - 1) // 2)\n    ls.sort()\n    for i in range(1, n // 2 + 1):\n        print(ls[-i], ls[i - 1], end=' ')\n    if n % 2 != 0:\n        print(ls[n // 2], end='')\n    print()", "from math import ceil\nn = int(input())\nlst = list(map(int, input().split()))\nlst.sort()\nprint(ceil(n / 2) - 1)\nfor i in range(n):\n    if i % 2 == 0:\n        print(lst[n - 1 - int(i / 2)], end=' ')\n    else:\n        print(lst[i // 2], end=' ')", "from math import ceil\nn = int(input())\nlst = list(map(int, input().split()))\nlst.sort()\nprint(ceil(n / 2) - 1)\nfor i in range(n):\n    if i % 2 == 0:\n        print(lst[n - 1 - int(i / 2)], end=' ')\n    else:\n        print(lst[i // 2], end=' ')", "import math\nn = int(input())\narr = [int(x) for x in input().split()]\nlis = [None for i in range(n)]\narr.sort()\nif n < 3:\n    print(0)\n    print(*arr)\n    exit()\nj = 0\ni = 1\nfor k in range(math.ceil(n / 2) - 1):\n    lis[i] = arr[j]\n    i += 2\n    j += 1\nfor k in range(n):\n    if lis[k]:\n        continue\n    else:\n        lis[k] = arr[j]\n        j += 1\nprint(math.ceil(n / 2) - 1)\nprint(*lis)", "n = int(input())\nl = input().split()\nfor i in range(len(l)):\n    l[i] = int(l[i])\nl = sorted(l)\nif n % 2 == 0:\n    print(n // 2 - 1)\nelse:\n    print((n - 1) // 2)\nans = [0] * n\nif n % 2 == 0:\n    for i in range(n // 2 - 1):\n        ans[1 + 2 * i] = l[i]\n    for i in range(n - (n // 2 - 1) - 1):\n        ans[2 * i] = l[i + n // 2 - 1]\n    ans[n - 1] = l[n - 1]\nelse:\n    for i in range((n - 1) // 2):\n        ans[1 + 2 * i] = l[i]\n    for i in range(n - (n - 1) // 2):\n        ans[2 * i] = l[i + (n - 1) // 2]\ns = ''\nfor i in ans:\n    s += str(i) + ' '\nprint(s)", "t = int(input())\nl = sorted(list(map(int, input().split())))\nfor i in range(t // 2):\n    (l[i * 2], l[i * 2 + 1]) = (l[i * 2 + 1], l[i * 2])\nprint((t - 1) // 2)\nprint(*l)", "n = int(input())\na = sorted(list(map(int, input().split())))\nfor i in range(n // 2):\n    (a[i * 2], a[i * 2 + 1]) = (a[i * 2 + 1], a[i * 2])\nprint((n - 1) // 2)\nfor i in a:\n    print(i, end=' ')", "n = int(input())\na = list(map(int, input().split(' ')))\nb = a[:]\na.sort()\nfor i in range(int(n / 2)):\n    b[i * 2 + 1] = a[i]\nj = 0\nfor i in range(int(n / 2), n):\n    b[j] = a[i]\n    j += 2\nprint(int((n - 1) / 2))\nfor x in b:\n    print(x, end=' ')", "def resolve(a, n):\n    a.sort()\n    if len(a) % 2 == 0:\n        maxOder = len(a) // 2 - 1\n    else:\n        maxOder = len(a) // 2\n    print(maxOder)\n    res = [0] * n\n    j = 0\n    for i in range(1, n, 2):\n        res[i] = a[j]\n        j += 1\n    for i in range(0, n, 2):\n        res[i] = a[j]\n        j += 1\n    for res_item in res:\n        print(res_item, end=' ')\nn = int(input())\na = list(map(int, input().split(' ')))\nresolve(a, n)"]