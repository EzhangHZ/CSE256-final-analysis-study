["for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "def solve():\n    (x, y, n) = [int(i) for i in input().split()]\n    q = n // x * x + y\n    if q > n:\n        q -= x\n    return q\nt = int(input())\nans = []\nwhile t:\n    ans.append(str(solve()))\n    t -= 1\nprint('\\n'.join(ans))", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "res = ''\nfor _ in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    res += '%d\\n' % ((n - y) // x * x + y)\nprint(res)", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "noOfTests = int(input())\noutputs = []\nfor i in range(noOfTests):\n    thisLine = [int(x) for x in input().split(' ')]\n    divisor = thisLine[0]\n    remainder = thisLine[1]\n    maxnum = thisLine[2]\n    test1 = maxnum % divisor\n    if test1 == remainder:\n        outputs.append(maxnum)\n    elif test1 > remainder:\n        difference = test1 - remainder\n        outputs.append(maxnum - difference)\n    else:\n        difference = test1 - remainder + divisor\n        outputs.append(maxnum - difference)\nprint('\\n'.join((str(x) for x in outputs)))", "for _ in [*open(0)][1:]:\n    (x, y, n) = map(int, _.split())\n    print((n - y) // x * x + y)", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "for i in [*open(0)][1:]:\n    (a, b, c) = map(int, i.split())\n    print(c - (c - b) % a)", "def inner(x, y, n):\n    mod = n % x\n    if y == mod:\n        return n\n    elif y < mod:\n        return n - (mod - y)\n    else:\n        return n - (mod + (x - y))\n\ndef mod():\n    list1 = []\n    list2 = []\n    a = input()\n    for i in range(int(a)):\n        a = input()\n        a = [int(i) for i in a.split(' ')]\n        list1.append(a)\n    for i in list1:\n        k = inner(i[0], i[1], i[2])\n        list2.append(str(k))\n    return '\\n'.join(list2)\nprint(mod())", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "ans = []\nfor _ in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    i = n % x\n    if i == y:\n        ans.append(n)\n    elif i > y:\n        ans.append(n - i + y)\n    else:\n        ans.append(n - i - x + y)\nprint('\\n'.join(map(str, ans)))", "import sys\nt = int(sys.stdin.readline().split()[0])\nk = 0\nfor line in sys.stdin:\n    x = int(line.split()[0])\n    y = int(line.split()[1])\n    n = int(line.split()[2])\n    if n - n % x + y <= n:\n        print(n - n % x + y)\n    else:\n        print(n - n % x - (x - y))", "f = lambda x, y, n: n - (n % x - y) % x\nprint(*[f(*map(int, input().split())) for _ in range(int(input()))], sep='\\n')", "b = []\n\ndef Input():\n    (x, y, n) = map(int, input().split())\n    a = n % x\n    if a >= y:\n        b.append(n - a + y)\n    else:\n        b.append(n - a - x + y)\nt = int(input())\nfor i in range(t):\n    Input()\nfor i in range(t):\n    print(b[i])", "import sys\nimport threading\n\ndef get_numbers():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef find_path(graph, start, vis):\n    vis[start] = 1\n    if not vis[graph[start]]:\n        find_path(graph, graph[start], vis)\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        (x, y, n) = get_numbers()\n        if n % x == y:\n            print(n)\n        elif n % x < y:\n            print(n - (n % x + (x - y)))\n        else:\n            print(n - n % x + y)\nsys.setrecursionlimit(1 << 30)\nthreading.stack_size(1 << 27)\nmain_thread = threading.Thread(target=main)\nmain_thread.start()\nmain_thread.join()", "for s in [*open(0)][1:]:\n    (x, y, n) = map(int, s.split())\n    print(n - (n - y) % x)", "import sys\n\ndef in_int():\n    return int(sys.stdin.readline())\n\ndef in_str():\n    return sys.stdin.readline().rstrip()\n\ndef in_map_int():\n    return map(int, sys.stdin.readline().split())\n\ndef in_arr_int():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef in_arr_str():\n    return sys.stdin.readline().split()\n\ndef is_prime(n):\n    for i in range(2, int(n ** (1 / 2)) + 1):\n        if n % i == 0:\n            return True\n    return False\n\ndef solve(x, y, n):\n    a = n - n % x + y\n    b = n - n % x + y - x\n    return a if a <= n else b\n\ndef main():\n    t = in_int()\n    for _ in range(t):\n        (x, y, n) = in_map_int()\n        print(solve(x, y, n))\nmain()", "for i in [*open(0)][1:]:\n    (x, y, n) = map(int, i.split())\n    if n % x == y:\n        print(n)\n    elif n % x > y:\n        print(n - (n % x - y))\n    else:\n        print(n - x + abs(y - n % x))", "import sys\nfrom functools import lru_cache, cmp_to_key\nfrom heapq import merge, heapify, heappop, heappush\nfrom math import *\nfrom collections import defaultdict as dd, deque, Counter as C\nfrom itertools import combinations as comb, permutations as perm\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nfrom time import perf_counter\nfrom fractions import Fraction\nsys.setrecursionlimit(int(pow(10, 6)))\nmod = int(pow(10, 9) + 7)\nmod2 = 998244353\n\ndef data():\n    return sys.stdin.readline().strip()\n\ndef out(*var, end='\\n'):\n    sys.stdout.write(' '.join(map(str, var)) + end)\n\ndef l():\n    return list(sp())\n\ndef sl():\n    return list(ssp())\n\ndef sp():\n    return map(int, data().split())\n\ndef ssp():\n    return map(str, data().split())\n\ndef l1d(n, val=0):\n    return [val for i in range(n)]\n\ndef l2d(n, m, val=0):\n    return [l1d(n, val) for j in range(m)]\nt = 1\nt = int(input())\nfor _ in range(t):\n    (x, y, n) = l()\n    if n % x >= y:\n        print(n - n % x + y)\n    else:\n        print(max(y, n - x - n % x + y))", "import sys, os, time, json, random, math\nt = int(input())\nres = []\nfor i in range(t):\n    (x, y, n) = [int(_) for _ in input().split()]\n    if n // x * x + y > n:\n        res.append((n // x - 1) * x + y)\n    else:\n        res.append(n // x * x + y)\nfor r in res:\n    print(r)", "t = int(input())\nl = []\nfor x in range(t):\n    l.append([int(w) for w in input().split()])\nfor element in l:\n    n = True\n    if element[2] - element[2] % element[0] + element[1] <= element[2]:\n        print(element[2] - element[2] % element[0] + element[1])\n    else:\n        print(element[2] - element[2] % element[0] - (element[0] - element[1]))", "t = int(input())\ncase_lists = []\nfor i in range(t):\n    case_lists.append((int(x) for x in input().split()))\nfor item in case_lists:\n    (x, y, n) = item\n    if n - n % x + y > n - n % x - (x - y) and n - n % x + y <= n:\n        print(n - n % x + y)\n    else:\n        print(n - n % x - (x - y))", "a = int(input())\nx = []\nfor i in range(a):\n    b = input().split()\n    x.append(b)\nfor j in x:\n    tam_bolen = int(j[2]) // int(j[0])\n    sonuc = tam_bolen * int(j[0]) + int(j[1])\n    if sonuc <= int(j[2]):\n        print(sonuc)\n    else:\n        sonuc = (tam_bolen - 1) * int(j[0]) + int(j[1])\n        print(sonuc)", "for i in range(0, int(input())):\n    (num1, num2, num3) = map(int, input().split(' '))\n    print(num3 - (num3 - num2) % num1)", "t = int(input())\nfor i in range(t):\n    (x, y, n) = map(int, input().split())\n    print(n - (n % x - y) % x)", "t = int(input())\nfor z in range(t):\n    (x, y, n) = map(int, input().split())\n    print(n - (n - y) % x)", "t = int(input())\nfor _ in range(t):\n    (x, y, n) = map(int, input().split())\n    print(y + (n - y) // x * x)", "a = int(input())\nfor i in range(0, a):\n    (x, y, n) = map(int, input().split())\n    print(n - (n - y) % x)", "while True:\n    try:\n        t = eval(input())\n        for i in range(t):\n            (x, y, n) = map(int, input().split())\n            print((n - y) // x * x + y)\n    except:\n        break", "t = int(input())\nfor i in range(t):\n    (x, y, n) = map(int, input().split())\n    print(int((n - y) / x) * x + y)", "tt = int(input())\nfor _ in range(tt):\n    (x, y, n) = map(int, input().split())\n    d = n - y\n    d //= x\n    print(d * x + y)", "t = int(input())\nfor i in range(t):\n    (a, b, c) = map(int, input().split())\n    cnt = (c - b) // a\n    print(cnt * a + b)", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    print(c - (c - b) % a)", "for _ in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    m = (n - y) // x\n    print(x * m + y)", "for _ in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    print(n - (n - y) % x)", "for _ in range(int(input())):\n    (x, y, n) = input().split()\n    x = int(x)\n    y = int(y)\n    n = int(n)\n    print(x * (n // x) + y - x if x * (n // x) + y > n else x * (n // x) + y)", "for _ in range(int(input())):\n    (x, y, n) = input().split()\n    x = int(x)\n    y = int(y)\n    n = int(n)\n    print(x * (n // x) + y - x if x * (n // x) + y > n else x * (n // x) + y)", "for i in range(int(input())):\n    (x, t, p) = map(int, input().split())\n    print(p - (p - t) % x)", "for _ in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    print(n - (n - y) % x)", "for _ in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    print(n - (n - y) % x)", "t = int(input())\nfor i in range(t):\n    (x, y, n) = [int(x) for x in input().split()]\n    m = n % x\n    if m > y:\n        print(n - m + y)\n    elif m == y:\n        print(n)\n    elif m < y:\n        print(n - m - x + y)", "m = int(input())\nfor i in range(m):\n    (x, y, n) = map(int, input().split())\n    print((n - y) // x * x + y)", "for _ in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    print(n - (n - y) % x)", "t = int(input())\nfor _ in range(t):\n    (x, y, n) = map(int, input().split())\n    m = (n - y) // x\n    ans = y + m * x\n    print(ans)", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    print(c - (c - b) % a)", "t = int(input())\nfor i in range(t):\n    (x, y, n) = map(int, input().split())\n    print(n - (n - y) % x)", "t = int(input())\nfor i in range(t):\n    (x, y, n) = map(int, input().split())\n    print(n - (n - y) % x)", "t = int(input())\nfor _ in range(t):\n    (x, y, n) = map(int, input().split())\n    print(int((n - y) / x) * x + y)", "for i in range(int(input())):\n    (x, y, n) = input().split()\n    (x, y, n) = (int(x), int(y), int(n))\n    num = (n - y) // x\n    print(y + num * x)", "n = int(input())\nfor i in range(n):\n    (x, y, z) = map(int, input().split())\n    print(z - (z - y) % x)", "t = int(input())\nfor i in range(t):\n    (x, y, n) = [int(x) for x in input().split()]\n    m = n % x\n    if m > y:\n        print(n - m + y)\n    elif m == y:\n        print(n)\n    elif m < y:\n        print(n - m - x + y)", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    print(c - (c - b) % a)", "for _ in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    print(n - (n - y) % x)", "t = int(input())\nfor i in range(t):\n    (x, y, n) = map(int, input().split())\n    m = n % x\n    if m == y:\n        print(n)\n    elif m > y:\n        print(n - m + y)\n    elif m < y:\n        print(n - m - x + y)", "t = int(input())\nfor i in range(t):\n    (x, y, n) = map(int, input().split())\n    cnt = n // x\n    ans = x * cnt + y\n    if ans > n:\n        ans -= x\n    print(ans)", "for _ in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    print(n - (n - y) % x)", "for i in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    k = (n - y) // x\n    print(k * x + y)", "t = int(input())\nfor x0 in range(t):\n    (x, y, n) = map(int, input().split())\n    print((n - y) // x * x + y)", "a = int(input())\nfor i in range(a):\n    (x, y, n) = map(int, input().split())\n    d = (n - y) // x\n    s = d * x + y\n    print(s)", "for fi in range(int(input())):\n    x = input().split(' ')\n    print(int(x[0]) * ((int(x[2]) - int(x[1])) // int(x[0])) + int(x[1]))", "def main():\n    for t in range(int(input())):\n        (x, y, n) = map(int, input().split())\n        print((n - y) // x * x + y)\nmain()", "for _ in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    print((n - y) // x * x + y)", "for t in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    print((n - y) // x * x + y)", "t = int(input())\nfor i in range(t):\n    (x, y, n) = map(int, input().split())\n    w = (n - y) % x\n    print(n - w)", "for _ in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    print(n - (n - y) % x)", "for _ in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    a = n % x\n    if a >= y:\n        print(n - a + y)\n    else:\n        print(n - a - x + y)", "t = int(input())\nfor i in range(t):\n    (x, y, n) = map(int, input().split())\n    if n % x >= y:\n        print(n - (n % x - y))\n    else:\n        print(n - (n % x + 1) - (x - 1 - y))", "for s in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    print(n - (n - y) % x)", "for i in range(int(input())):\n    (x, y, n) = map(int, input().split())\n    if n % x == y:\n        print(n)\n    elif n % x > y:\n        print(n - n % x + y)\n    else:\n        print(n - x - n % x + y)", "t = int(input())\nfor i in range(t):\n    (x, y, n) = map(int, input().split(' '))\n    print(x * ((n - y) // x) + y)"]