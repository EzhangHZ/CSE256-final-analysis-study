["test_cases = int(input())\n\ndef handle() -> str:\n    lines = int(input())\n    passes = clears = 0\n    error_occurred = False\n    for _ in range(lines):\n        (p, c) = input().split(' ')\n        p = int(p)\n        c = int(c)\n        if c > p:\n            error_occurred = True\n        pass_diff = p - passes\n        clear_diff = c - clears\n        if clear_diff > pass_diff:\n            error_occurred = True\n        if pass_diff < 0 or clear_diff < 0:\n            error_occurred = True\n        passes += pass_diff\n        clears += clear_diff\n    if error_occurred:\n        return 'NO'\n    return 'YES'\nfor _ in range(test_cases):\n    print(handle())", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    (a, b) = (-1, -1)\n    ans = 'YES'\n    for i in range(n):\n        (p, c) = map(int, input().split())\n        if p < a or c < min(b, b - a + p) or c > p - a + b:\n            ans = 'NO'\n        else:\n            a = p\n            b = c\n    print(ans)", "from sys import stdin\n\ndef main():\n    nxt = iter(map(int, stdin.read().split())).__next__\n    for _ in range(nxt()):\n        u = v = w = f = 0\n        for _ in range(nxt()):\n            (p, c) = (nxt(), nxt())\n            pc = p - c\n            if u > p or v > c or w > pc:\n                f = 1\n            (u, v, w) = (p, c, pc)\n        print(('YES', 'NO')[f])\nmain()", "import sys\n\ndef answer(n, p, c):\n    num_p = p[0]\n    num_c = c[0]\n    if num_c > num_p:\n        return 'NO'\n    for i in range(1, n):\n        num_p = p[i] - p[i - 1]\n        num_c = c[i] - c[i - 1]\n        if num_p < 0:\n            return 'NO'\n        if num_c < 0:\n            return 'NO'\n        if num_c > num_p:\n            return 'NO'\n    return 'YES'\n\ndef main():\n    T = int(input())\n    while T:\n        n = int(input())\n        p = [0] * n\n        c = [0] * n\n        for i in range(n):\n            (p[i], c[i]) = [int(i) for i in sys.stdin.readline().split()]\n        print(answer(n, p, c))\n        T -= 1\n    return\nmain()", "for t in range(int(input())):\n    n = int(input())\n    ans = 'YES'\n    pcount = 0\n    ccount = 0\n    for i in range(n):\n        (p, c) = map(int, input().split())\n        if p < pcount or c < ccount or c - ccount > p - pcount:\n            ans = 'NO'\n        else:\n            pcount = p\n            ccount = c\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    a = 0\n    b = 0\n    f = 1\n    for t1 in range(n):\n        (p, c) = map(int, input().split())\n        if p < a or c < b or p < c or (p - a < c - b):\n            f = 0\n        a = p\n        b = c\n    if f == 0:\n        print('NO')\n    else:\n        print('YES')", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    (P, C) = (0, 0)\n    res = 'YES'\n    for _ in range(n):\n        (p, c) = map(int, input().split())\n        if p < P or c < C or p - P < c - C:\n            res = 'NO'\n        (P, C) = (p, c)\n    print(res)", "def cast(cre, typ):\n    return type(typ)(map(cre, typ))\n\ndef solution():\n    for t in range(int(input())):\n        n = int(input())\n        prev = [0, 0]\n        while n > 0:\n            n -= 1\n            cur = cast(int, input().split())\n            if prev[0] > cur[0] or prev[1] > cur[1] or cur[0] < cur[1] or (cur[0] - prev[0] < cur[1] - prev[1]):\n                print('NO')\n                break\n            if n == 0:\n                print('YES')\n            prev = cur\n        while n > 0:\n            n -= 1\n            input()\nsolution()", "from math import *\nfrom math import factorial as fact, comb as ncr\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom array import array\nfrom collections import Counter as ctr\nfrom collections import deque as dq\nli = lambda : list(map(int, input().split()))\narr = lambda a: array('i', a)\nbi = lambda n: bin(n).replace('0b', '')\n\ndef solve():\n    for _ in range(int(input())):\n        t = int(input())\n        m = n = 0\n        f = True\n        for i in range(t):\n            (a, b) = li()\n            if f and (a - m < b - n or b < n or a < m):\n                f = False\n            elif not f:\n                pass\n            else:\n                m = a\n                n = b\n        print('YES' if f else 'NO')\nsolve()", "for _ in range(int(input())):\n    (oldp, oldc) = (0, 0)\n    n = int(input())\n    pairs = [tuple(map(int, input().split())) for x in range(n)]\n    for (p, c) in pairs:\n        if p < oldp or c < oldc:\n            print('NO')\n            break\n        elif p - oldp < c - oldc:\n            print('NO')\n            break\n        (oldp, oldc) = (p, c)\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ps = 0\n    cs = 0\n    cnt = 0\n    for j in range(n):\n        (p, c) = map(int, input().split())\n        if (p - ps < 0 or p - ps < c - cs or c - cs < 0) and cnt == 0:\n            print('NO')\n            cnt += 1\n        else:\n            ps = p\n            cs = c\n    if cnt == 0:\n        print('YES')", "for i in range(int(input())):\n    n = int(input())\n    p_last = 0\n    c_last = 0\n    x = 0\n    for j in range(n):\n        (p, c) = map(int, input().split())\n        if (p - p_last < 0 or p - p_last < c - c_last or c - c_last < 0) and x == 0:\n            print('NO')\n            x = x + 1\n        else:\n            p_last = p\n            c_last = c\n    if x == 0:\n        print('YES')", "def solve():\n    l = (0, 0)\n    d = 0\n    y = 1\n    for _ in range(int(input())):\n        (a, b) = map(int, input().split())\n        if a - b >= d and a >= l[0] and (b >= l[1]):\n            l = (a, b)\n            d = a - b\n        elif y:\n            print('NO')\n            y = 0\n    if y:\n        print('YES')\nfor t in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    x = y = z = -1\n    t = 0\n    n = int(input())\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        if a < x or b < y or b > a or (a - b < z):\n            t = 1\n        x = a\n        y = b\n        z = a - b\n    else:\n        if t == 0:\n            print('YES')\n        else:\n            print('NO')", "for i in range(int(input())):\n    g = 0\n    a = 0\n    b = 0\n    for j in range(int(input())):\n        (f, n) = map(int, input().split())\n        if f - a < n - b:\n            g = g + 1\n        elif f < a:\n            g = g + 1\n        elif n < b:\n            g = g + 1\n        a = f\n        b = n\n    if g == 0:\n        print('YES')\n    else:\n        print('NO')", "import sys\n\ndef main():\n    res = ''\n    input = sys.stdin.readline\n    print = sys.stdout.write\n    t = int(input())\n    for _ in range(t):\n        sub_res = 'YES\\n'\n        n = int(input())\n        pl = 0\n        cl = 0\n        for __ in range(n):\n            (p, c) = map(int, input().split())\n            if p < pl or c < cl or p - pl < c - cl:\n                sub_res = 'NO\\n'\n            pl = p\n            cl = c\n        res += sub_res\n    print(res)\nmain()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    flag = 0\n    k = 0\n    l = 0\n    A = []\n    for i in range(n):\n        (p, c) = map(int, input().split())\n        if p - k < c - l:\n            flag = 1\n        if p == k and l > c:\n            flag = 1\n        if p < k or c < l:\n            flag = 1\n        if p < c:\n            flag = 1\n        k = p\n        l = c\n    print('YES') if flag == 0 else print('NO')", "import sys\nMAX_INT = 2 ** 62 - 1\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\n\ndef read_n_int() -> list:\n    return list(map(int, input().split()))\n\ndef read_int() -> int:\n    return int(input())\n\ndef main():\n    t = read_int()\n    for _ in range(t):\n        n = int(input())\n        (pre_p, pre_c) = (0, 0)\n        res = False\n        for _ in range(n):\n            (p, c) = map(int, input().split())\n            if not res and (p - pre_p < c - pre_c or p < pre_p or c < pre_c):\n                res = True\n            (pre_p, pre_c) = (p, c)\n        print('YES' if not res else 'NO')\nmain()", "from math import cos, e\nimport bisect as bs\nfrom math import *\n\ndef pro(arr):\n    (p, c) = arr[0]\n    if c > p:\n        print('NO')\n        return\n    n = len(arr)\n    for i in range(1, n):\n        (a, b) = arr[i]\n        if c > b or p > a or b - c > a - p:\n            print('NO')\n            return\n        (p, c) = (a, b)\n    print('YES')\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = []\n    for j in range(n):\n        arr.append(list(map(int, input().split())))\n    pro(arr)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    pt = 0\n    ct = 0\n    b = True\n    for j in range(n):\n        (p, c) = map(int, input().split())\n        if p < pt or c < ct or c > p or (p - c < pt - ct):\n            b = False\n        pt = p\n        ct = c\n    if b:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    f = 1\n    cnt = 0\n    wns = 0\n    for i in range(n):\n        (s1, s2) = map(int, input().split())\n        if s2 > s1 or cnt - wns > s1 - s2 or s2 < wns:\n            f = 0\n        (cnt, wns) = (s1, s2)\n    print('YES') if f else print('NO')", "def main():\n    n = int(input())\n    p = []\n    c = []\n    for __ in range(n):\n        (pi, ci) = map(int, input().split())\n        p.append(pi)\n        c.append(ci)\n    if p[0] < c[0]:\n        return 'NO'\n    for i in range(1, n):\n        if p[i] < c[i]:\n            return 'NO'\n        x = p[i] - p[i - 1]\n        y = c[i] - c[i - 1]\n        if x < 0 or y < 0:\n            return 'NO'\n        if x < y:\n            return 'NO'\n    return 'YES'\nfor _ in range(int(input())):\n    print(main())", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    flag = True\n    (pi, ci) = (0, 0)\n    for _ in range(n):\n        (pv, cv) = map(int, input().split())\n        if flag:\n            if pv - pi < cv - ci or pv < pi or cv < ci:\n                flag = False\n            (pi, ci) = (pv, cv)\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    flag = True\n    (pi, ci) = (0, 0)\n    for _ in range(n):\n        (pv, cv) = map(int, input().split())\n        if flag:\n            if pv - pi < cv - ci or pv < pi or cv < ci:\n                flag = False\n            (pi, ci) = (pv, cv)\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "def main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        ans = True\n        aux_p = 0\n        aux_c = 0\n        for j in range(n):\n            (p, c) = input().split()\n            del_p = int(p) - aux_p\n            del_c = int(c) - aux_c\n            aux_p = int(p)\n            aux_c = int(c)\n            if del_p < 0 or del_c < 0:\n                ans = False\n            elif del_c > del_p:\n                ans = False\n        if ans:\n            print('YES')\n        else:\n            print('NO')\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    (p, c) = ([], [])\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        p.append(x)\n        c.append(y)\n    t = 'YES'\n    for i in range(1, n):\n        x = p[i] - p[i - 1]\n        y = c[i] - c[i - 1]\n        if x < y:\n            t = 'NO'\n            break\n        elif x < 0 or y < 0:\n            t = 'NO'\n            break\n    x = p[0]\n    y = c[0]\n    if x < y:\n        t = 'NO'\n    elif x < 0 or y < 0:\n        t = 'NO'\n    print(t)", "for _ in range(int(input())):\n    (a, b) = ([], [])\n    yes = True\n    for i in range(int(input())):\n        (p, c) = map(int, input().split())\n        if a == [] and b == []:\n            a.append(p)\n            b.append(c)\n        if c > p:\n            yes = False\n        elif p - a[-1] >= c - b[-1]:\n            a.append(p)\n            b.append(c)\n        else:\n            yes = False\n    if yes:\n        c = sorted(a)\n        d = sorted(b)\n        if c == a and d == b:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "import sys\nreadLine = lambda : sys.stdin.readline()\nreadInt = lambda : int(sys.stdin.readline())\nreadInts = lambda : [int(x) for x in sys.stdin.readline().split(' ')]\n\ndef main():\n    solns = []\n    t = readInt()\n    for _ in range(t):\n        n = readInt()\n        valid = True\n        (p, c) = readInts()\n        if c > p:\n            valid = False\n        for l in range(1, n):\n            (nextP, nextC) = readInts()\n            if nextC - c > nextP - p:\n                valid = False\n            if nextC < c:\n                valid = False\n            if nextP < p:\n                valid = False\n            p = nextP\n            c = nextC\n        solns.append('YES' if valid else 'NO')\n    print('\\n'.join(solns))\nmain()", "import sys\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nns = lambda : readline().rstrip()\nni = lambda : int(readline().rstrip())\nnm = lambda : map(int, readline().split())\nnl = lambda : list(map(int, readline().split()))\nprn = lambda x: print(*x, sep='\\n')\n\ndef solve():\n    n = ni()\n    f = 0\n    a = c = 0\n    for _ in range(n):\n        (na, nc) = nm()\n        if a > na or c > nc or na - a < nc - c:\n            f = 1\n        (a, c) = (na, nc)\n    print('NO' if f else 'YES')\n    return\nT = ni()\nfor _ in range(T):\n    solve()", "def check_stat():\n    flag = True\n    n = int(input())\n    pl = sl = -1\n    for i in range(n):\n        (p, s) = map(int, input().split())\n        delta_p = p - pl\n        delta_s = s - sl\n        if delta_s > delta_p or pl > p or sl > s:\n            flag = False\n        pl = p\n        sl = s\n    return flag\nn_sets = int(input())\nfor i in range(n_sets):\n    if check_stat():\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    i = int(input())\n    a = b = t = 0\n    for x in range(i):\n        (p, c) = map(int, input().split())\n        if p < c or c - b > p - a:\n            t = 1\n        if p < a or c < b:\n            t = 1\n        a = p\n        b = c\n    print('NO' if t == 1 else 'YES')", "for i in range(int(input())):\n    p = c = 0\n    c1 = True\n    for i in range(int(input())):\n        (m, n) = map(int, input().split())\n        if m < p or n < c or n - c > m - p:\n            c1 = False\n        p = m\n        c = n\n    if c1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    (lp, lc) = map(int, input().split())\n    ok = lp >= lc\n    for _ in range(n - 1):\n        (p, c) = map(int, input().split())\n        dp = p - lp\n        dc = c - lc\n        if dp < 0 or dc < 0 or dc > dp:\n            ok = False\n        (lp, lc) = (p, c)\n    print('YES' if ok else 'NO')", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    alist = [list(map(int, input().split())) for _ in range(n)]\n    ans = 'YES'\n    if n == 1 and alist[-1][0] >= alist[-1][1]:\n        print(ans)\n        continue\n    elif n == 1:\n        print('NO')\n        continue\n    for i in range(n - 1):\n        if alist[i + 1][0] - alist[i][0] < alist[i + 1][1] - alist[i][1] or alist[i + 1][0] < alist[i][0] or alist[i + 1][1] < alist[i][1] or (alist[i][0] < alist[i][1]):\n            ans = 'NO'\n            break\n    print(ans)", "def miis():\n    return map(int, input().split())\nfor _ in range(int(input())):\n    n = int(input())\n    a = [list(miis()) for i in range(n)]\n    for i in range(n):\n        if a[i][0] < a[i][1]:\n            print('NO')\n            break\n        if i:\n            if a[i - 1][0] > a[i][0] or a[i - 1][1] > a[i][1] or a[i][0] - a[i - 1][0] < a[i][1] - a[i - 1][1]:\n                print('NO')\n                break\n    else:\n        print('YES')", "for i in range(int(input())):\n    n = int(input())\n    flag = True\n    (p_prev, c_prev) = map(int, input().split())\n    if p_prev < c_prev:\n        flag = False\n    for j in range(1, n):\n        (p, c) = map(int, input().split())\n        if (p_prev > p) | (c_prev > c) | (p < c) | (p - p_prev < c - c_prev):\n            flag = False\n        p_prev = p\n        c_prev = c\n    if flag == False:\n        print('NO')\n    else:\n        print('YES')", "for t in range(int(input())):\n    n = int(input())\n    plays = 0\n    clear = 0\n    f_p = 0\n    f_c = 0\n    k = 1\n    for i in range(n):\n        (p, c) = map(int, input().split())\n        plays += p\n        clear += c\n        ans_o = p - f_p\n        ans_t = c - f_c\n        if ans_o < 0 or ans_t < 0 or ans_o < ans_t:\n            k = 0\n        f_p = p\n        f_c = c\n    else:\n        if clear > plays or not k:\n            print('NO')\n        else:\n            print('YES')", "for t in range(int(input())):\n    n = int(input())\n    plays = 0\n    clear = 0\n    f_p = 0\n    f_c = 0\n    k = 1\n    for i in range(n):\n        (p, c) = map(int, input().split())\n        plays += p\n        clear += c\n        ans_o = p - f_p\n        ans_t = c - f_c\n        if ans_o < 0 or ans_t < 0 or ans_o < ans_t:\n            k = 0\n        f_p = p\n        f_c = c\n    else:\n        if clear > plays or not k:\n            print('NO')\n        else:\n            print('YES')", "import sys\n\ndef minp():\n    return sys.stdin.readline().strip()\n\ndef mint():\n    return int(minp())\n\ndef mints():\n    return map(int, minp().split())\n\ndef solve():\n    (a, b) = (0, 0)\n    bad = False\n    for i in range(mint()):\n        (c, d) = mints()\n        (da, db) = (c - a, d - b)\n        if da < 0 or db < 0:\n            bad = True\n        if da < db:\n            bad = True\n        a = c\n        b = d\n    print(['YES', 'NO'][bad])\nfor i in range(mint()):\n    solve()", "import sys\ninp = sys.stdin.readline\nt = int(inp())\nwhile t:\n    t -= 1\n    n = int(inp())\n    bp = 0\n    bc = 0\n    flag = True\n    while n:\n        n -= 1\n        (p, c) = map(int, inp().split())\n        if p < bp or c < bc or bc - c < bp - p:\n            flag = False\n        (bp, bc) = (p, c)\n    if flag == True:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin\na = int(stdin.readline())\nfor b in range(0, a):\n    c = int(stdin.readline())\n    d = stdin.readline().split()\n    C = int(d[0])\n    D = int(d[1])\n    if c == 1:\n        if C >= D:\n            print('YES')\n            continue\n        else:\n            print('NO')\n            continue\n    K = 0\n    for e in range(1, c):\n        d = stdin.readline().split()\n        A = C\n        B = D\n        C = int(d[0])\n        D = int(d[1])\n        if (C >= A and D >= B) and (C >= D and (C - A >= D - B and A >= B)):\n            continue\n        else:\n            print('NO')\n            for g in range(e + 1, c):\n                stdin.readline()\n            K = 1\n            break\n    if K == 0:\n        print('YES')", "from collections import Counter, defaultdict, deque\nfrom math import *\nimport sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    (p, c) = [int(x) for x in input().split()]\n    fail = False\n    if p < c:\n        fail = True\n    p0 = p\n    c0 = c\n    for i in range(1, n):\n        (p, c) = [int(x) for x in input().split()]\n        dc = c - c0\n        dp = p - p0\n        if dc < 0 or p0 < 0 or dp < dc:\n            fail = True\n        p0 = p\n        c0 = c\n    if fail:\n        print('NO')\n    else:\n        print('YES')\ntt = int(input())\nfor test in range(tt):\n    solve()", "f = int(input())\nfor q in range(f):\n    n = int(input())\n    A = 0\n    B = 0\n    k = 0\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        if a - A < b - B or a < A or b < B:\n            k = 1\n        A = a\n        B = b\n    if k == 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    (p0, c0) = (0, 0)\n    res = True\n    for i in range(100):\n        h = p0 + c0\n    for i in range(n):\n        (p, c) = map(int, input().split())\n        (ap, ac, p0, c0) = (p - p0, c - c0, p, c)\n        res = res and ap >= ac and (ac >= 0) and (ap >= 0)\n    print('YES' if res else 'NO')", "I = input\nfor _ in [0] * int(I()):\n    x = y = 0\n    f = 1\n    for _ in [0] * int(I()):\n        (p, c) = map(int, I().split())\n        f &= 0 <= c - y <= p - x\n        x = p\n        y = c\n    print('NYOE S'[f::2])", "t = int(input())\nfor i in range(t):\n    f = 0\n    lst1 = []\n    lst2 = []\n    n = int(input())\n    for j in range(n):\n        (a, b) = map(int, input().split())\n        lst1.append(a)\n        lst2.append(b)\n    if lst1[0] < lst2[0]:\n        f = 1\n        print('NO')\n    else:\n        m1 = lst1[0]\n        m2 = lst2[0]\n        for j in range(1, n):\n            if lst1[j] < m1 or lst2[j] > lst1[j] or lst2[j] - lst2[j - 1] > lst1[j] - lst1[j - 1] or (lst2[j] < m2):\n                f = 1\n                print('NO')\n                break\n            else:\n                m1 = lst1[j]\n                m2 = lst2[j]\n        if f == 0:\n            print('YES')", "t = int(input())\nfor l in range(0, t):\n    n = int(input())\n    f = True\n    (lp, lc) = (0, 0)\n    for i in range(0, n):\n        (p, c) = map(int, input().split())\n        if c - lc > p - lp or lp > p or lc > c:\n            f = False\n        lp = p\n        lc = c\n    if f:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(1, t + 1):\n    n = int(input())\n    p = 0\n    c = 0\n    result = 1\n    for j in range(n):\n        (a, b) = map(int, input().split())\n        if a < p or b < c or b - c > a - p:\n            result = 0\n        p = a\n        c = b\n    if result:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    f = True\n    x = 0\n    y = 0\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        if a < x or b < y or a - x < b - y:\n            f = False\n        x = a\n        y = b\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')", "for k in range(int(input())):\n    n1 = int(input())\n    f = True\n    x = 0\n    y = 0\n    for i in range(n1):\n        (a, b) = map(int, input().split())\n        if a < x or b < y or a - x < b - y:\n            f = False\n        x = a\n        y = b\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')", "def solve(play, clear, n):\n    if play[0] < clear[0]:\n        return 'NO'\n    for i in range(1, n):\n        if play[i] < play[i - 1] or clear[i] < clear[i - 1] or play[i] < clear[i] or (play[i] - play[i - 1] < clear[i] - clear[i - 1]):\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    play = [0] * n\n    clear = [0] * n\n    for i in range(n):\n        (play[i], clear[i]) = map(int, input().split())\n    print(solve(play, clear, n))", "def iscorrect(List):\n    l = len(List)\n    for i in range(l - 1):\n        a1 = List[i][0]\n        b1 = List[i][1]\n        a2 = List[i + 1][0]\n        b2 = List[i + 1][1]\n        if a1 > a2 or b1 > b2 or a1 < b1:\n            return False\n        elif a2 - a1 < b2 - b1:\n            return False\n    else:\n        return True\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    List = []\n    for i in range(n):\n        ab = list(map(int, input().rstrip().split()))\n        List += [ab]\n    if n == 1:\n        if List[0][0] >= List[0][1]:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES' if iscorrect(List) else 'NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = 0\n    a = 0\n    b = 0\n    for j in range(n):\n        (p, c) = map(int, input().split())\n        if p - a < c - b or c < b:\n            x = 1\n        a = p\n        b = c\n    if x == 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    plays = list()\n    levels = list()\n    for _ in range(n):\n        (p, l) = map(int, input().split())\n        plays.append(p)\n        levels.append(l)\n    if sorted(plays) != plays:\n        print('NO')\n    else:\n        flag = True\n        prev_play = 0\n        prev_level = 0\n        if prev_level > prev_play:\n            flag = False\n        else:\n            for i in range(n):\n                diff_level = levels[i] - prev_level\n                diff_plays = plays[i] - prev_play\n                if diff_level < 0 or diff_plays < 0:\n                    flag = False\n                    break\n                if diff_plays < diff_level:\n                    flag = False\n                    break\n                prev_play = plays[i]\n                prev_level = levels[i]\n        if flag:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    (l, r) = (0, 0)\n    w = [[int(k) for k in input().split()] for v in range(n)]\n    for j in range(n):\n        (p, c) = w[j]\n        if p >= l and c >= r and (p - l >= c - r):\n            pass\n        else:\n            print('NO')\n            break\n        (l, r) = (p, c)\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    T = [None] * n\n    for i in range(n):\n        T[i] = list(map(int, input().split()))\n    if T[0][1] > T[0][0]:\n        print('NO')\n    else:\n        for i in range(1, n):\n            if T[i - 1][0] > T[i][0] or T[i - 1][1] > T[i][1]:\n                print('NO')\n                break\n            elif T[i][1] - T[i - 1][1] > T[i][0] - T[i - 1][0]:\n                print('NO')\n                break\n        else:\n            print('YES')", "list_ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    list1 = []\n    for i in range(n):\n        list1.append(list(map(int, input().split())))\n    if list1[0][0] < list1[0][1]:\n        list_ans.append('NO')\n    else:\n        for i in range(n - 1):\n            if list1[i][0] > list1[i + 1][0] or list1[i][1] > list1[i + 1][1] or list1[i + 1][1] - list1[i][1] > list1[i + 1][0] - list1[i][0]:\n                list_ans.append('NO')\n                break\n        else:\n            list_ans.append('YES')\nfor item in list_ans:\n    print(item)", "for _ in range(int(input())):\n    L = []\n    n = int(input())\n    for i in range(n):\n        L.append([int(X) for X in input().split()])\n    flag = 0\n    for i in range(n):\n        if i == 0:\n            if L[i][0] < L[i][1]:\n                flag = 1\n                break\n        elif not (L[i][0] >= L[i - 1][0] and L[i][1] >= L[i - 1][1] and (L[i][0] - L[i - 1][0] >= L[i][1] - L[i - 1][1])):\n            flag = 1\n            break\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ps = 0\n    cs = 0\n    cnt = 0\n    for j in range(n):\n        (p, c) = map(int, input().split())\n        if (p - ps < 0 or p - ps < c - cs or c - cs < 0) and cnt == 0:\n            print('NO')\n            cnt += 1\n        else:\n            ps = p\n            cs = c\n    if cnt == 0:\n        print('YES')", "for pratyush in range(int(input())):\n    n = int(input())\n    (l, f) = ([], 'YES')\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        l.append((x, y))\n        if y > x:\n            f = 'NO'\n        if i == 0 or f == 'NO':\n            continue\n        (t, c) = (l[i][0] - l[i - 1][0], l[i][1] - l[i - 1][1])\n        if c > t or c < 0 or t < 0:\n            f = 'NO'\n    print(f)", "T = int(input())\nfor i in range(T):\n    flag = True\n    X = Y = -1\n    n = int(input())\n    for j in range(n):\n        xy = list(map(int, input().split()))\n        x = xy[0]\n        y = xy[1]\n        if y > x:\n            flag = False\n        if X > x:\n            flag = False\n        if Y > y:\n            flag = False\n        if X - Y > x - y:\n            flag = False\n        X = x\n        Y = y\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b) = ([], [])\n    yes = True\n    for i in range(int(input())):\n        (p, c) = map(int, input().split())\n        if a == [] and b == []:\n            a.append(p)\n            b.append(c)\n        if c > p:\n            yes = False\n        elif p - a[-1] >= c - b[-1]:\n            a.append(p)\n            b.append(c)\n        else:\n            yes = False\n    if yes:\n        d = sorted(a)\n        e = sorted(b)\n        if d == a and e == b:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "import sys\ninp = sys.stdin.readline\nt = int(inp())\nwhile t:\n    t -= 1\n    n = int(inp())\n    bp = 0\n    bc = 0\n    flag = True\n    while n:\n        n -= 1\n        (p, c) = map(int, inp().split())\n        if p < bp or c < bc or bc - c < bp - p:\n            flag = False\n        (bp, bc) = (p, c)\n    if flag == True:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = 0\n    b = 0\n    flag = 0\n    for i in range(n):\n        (p, c) = map(int, input().split())\n        if p < a or c < b or p < c or (p - a < c - b):\n            flag = 1\n        a = p\n        b = c\n    if flag == 0:\n        print('YES')\n    else:\n        print('NO')", "f = int(input())\nfor q in range(f):\n    n = int(input())\n    A = 0\n    B = 0\n    k = 0\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        if a - A < b - B or a < A or b < B:\n            k = 1\n        A = a\n        B = b\n    if k == 1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    (a, b) = (0, 0)\n    res = True\n    for i in range(n):\n        (c, d) = map(int, input().split())\n        if c - a < d - b or (a > c or b > d):\n            res = False\n        (a, b) = (c, d)\n    print(['NO', 'YES'][res])", "for _ in range(int(input())):\n    n = int(input())\n    stats = []\n    possible = True\n    for k in range(n):\n        stats.append(tuple(map(int, input().split())))\n    if stats[0][1] > stats[0][0]:\n        print('NO')\n        continue\n    if n == 1:\n        print('YES')\n        continue\n    else:\n        for i in range(1, n):\n            if stats[i][0] < stats[i - 1][0] or stats[i][1] < stats[i - 1][1]:\n                possible = False\n                break\n            elif stats[i][0] - stats[i - 1][0] < stats[i][1] - stats[i - 1][1]:\n                possible = False\n                break\n        print('YNEOS'[not possible::2])", "import sys\ninp = sys.stdin.readline\nt = int(inp())\nwhile t:\n    t -= 1\n    n = int(inp())\n    bp = 0\n    bc = 0\n    flag = True\n    while n:\n        n -= 1\n        (p, c) = map(int, inp().split())\n        if p < bp or c < bc or bc - c < bp - p:\n            flag = False\n        (bp, bc) = (p, c)\n    if flag == True:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        seq = [list(map(int, sys.stdin.readline().split())) for _ in range(n)]\n        prevTry = 0\n        prevClear = 0\n        res = 'YES'\n        for s in seq:\n            if s[0] < s[1]:\n                res = 'NO'\n                break\n            if s[0] < prevTry or s[1] < prevClear:\n                res = 'NO'\n                break\n            if s[0] - prevTry < s[1] - prevClear:\n                res = 'NO'\n                break\n            prevTry = s[0]\n            prevClear = s[1]\n        print(res)\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    (p, c) = (0, 0)\n    f = 1\n    for j in range(n):\n        (x, y) = map(int, input().split())\n        if x < p or y < c or y - c > x - p:\n            f = 0\n        (p, c) = (x, y)\n    if f:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin\nt = int(stdin.readline())\nfor _ in range(t):\n    n = int(stdin.readline())\n    valid = True\n    preva = 0\n    prevb = 0\n    for i in range(n):\n        (a, b) = map(int, stdin.readline().split())\n        if a < preva or b < prevb or b - prevb > a - preva:\n            if valid:\n                print('NO')\n                valid = False\n        preva = a\n        prevb = b\n    if valid:\n        print('YES')", "import sys\n\ndef isPossible(PC):\n    (p, c) = (PC[0][0], PC[0][1])\n    if c > p:\n        print('NO')\n        return\n    for i in range(1, len(PC)):\n        (p0, c0) = (PC[i - 1][0], PC[i - 1][1])\n        (p1, c1) = (PC[i][0], PC[i][1])\n        if c1 > p1:\n            print('NO')\n            return\n        if p0 > p1:\n            print('NO')\n            return\n        if c0 > c1:\n            print('NO')\n            return\n        if c1 - c0 > p1 - p0:\n            print('NO')\n            return\n    print('YES')\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef f(a, n):\n    return True\n\ndef is_permutation(arr):\n    for e in range(1, len(arr) + 1):\n        if e not in arr:\n            return False\n    return True\nt = inp()\nfor i in range(t):\n    n = inp()\n    PC = []\n    for i in range(n):\n        PC.append(inlt())\n    isPossible(PC)", "def funct(c, p):\n    for i in range(len(c) - 1):\n        if c[i] > c[i + 1]:\n            return 'NO'\n    for i in range(len(p) - 1):\n        if p[i] > p[i + 1]:\n            return 'NO'\n    for i in range(len(c)):\n        if c[i] > p[i]:\n            return 'NO'\n    for i in range(1, len(c)):\n        if p[i] - p[i - 1] < c[i] - c[i - 1]:\n            return 'NO'\n    return 'YES'\nn = int(input())\nfor i in range(n):\n    m = int(input())\n    c = []\n    p = []\n    for j in range(m):\n        s = input().split()\n        c.append(int(s[1]))\n        p.append(int(s[0]))\n    print(funct(c, p))", "def solve():\n    n = int(input())\n    ans_flag = True\n    (prev_p, prev_c) = (0, 0)\n    for _ in range(n):\n        (p, c) = map(int, input().split())\n        if p < prev_p or c < prev_c or c > p or (p - prev_p < c - prev_c):\n            ans_flag = False\n        (prev_p, prev_c) = (p, c)\n    print('YES' if ans_flag else 'NO')\nt = int(input())\nfor _ in range(t):\n    solve()", "def main():\n    for _ in range(int(input())):\n        result = True\n        pp = 0\n        cc = 0\n        for i in range(int(input())):\n            (p, c) = map(int, input().split())\n            if result:\n                dif_p = p - pp\n                dif_c = c - cc\n                if dif_p < 0 or dif_c < 0 or dif_c > dif_p:\n                    result = False\n                else:\n                    pp = p\n                    cc = c\n        print('YES' if result else 'NO')\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    (lastp, lastc) = (0, 0)\n    output = 'YES'\n    for i in range(n):\n        (p, c) = map(int, input().split())\n        if output == 'YES':\n            if p < c:\n                output = 'NO'\n                continue\n            if p < lastp:\n                output = 'NO'\n                continue\n            if c < lastc:\n                output = 'NO'\n                continue\n            if p - lastp < c - lastc:\n                output = 'NO'\n                continue\n            (lastp, lastc) = (p, c)\n    print(output)", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        seq = [list(map(int, sys.stdin.readline().split())) for _ in range(n)]\n        prevTry = 0\n        prevClear = 0\n        res = 'YES'\n        for s in seq:\n            if s[0] < s[1]:\n                res = 'NO'\n                break\n            if s[0] < prevTry or s[1] < prevClear:\n                res = 'NO'\n                break\n            if s[0] == prevTry and s[1] > prevClear:\n                res = 'NO'\n                break\n            if s[0] - prevTry < s[1] - prevClear:\n                res = 'NO'\n                break\n            prevTry = s[0]\n            prevClear = s[1]\n        print(res)\nmain()", "import sys\nI = sys.stdin.readline\nans = ''\nfor _ in range(int(I())):\n    n = int(I().strip())\n    flag = 1\n    cc = 0\n    cp = 0\n    for i in range(n):\n        (p, c) = map(int, I().split())\n        if p - cp < 0 or c - cc < 0:\n            flag = 0\n        elif p - cp < c - cc:\n            flag = 0\n        elif c > p:\n            flag = 0\n        elif p - cp == 0 and c - cc > 0:\n            flag = 0\n        cc = c\n        cp = p\n    if flag:\n        ans += 'YES\\n'\n    else:\n        ans += 'NO\\n'\nprint(ans)", "I = input\npr = print\n\ndef main():\n    for _ in range(int(I())):\n        (n, f) = (int(I()), 0)\n        (pmax, cmax) = map(int, I().split())\n        if pmax >= cmax:\n            for _ in range(n - 1):\n                if f:\n                    I()\n                    continue\n                (p, c) = map(int, I().split())\n                if p - pmax < 0 or c - cmax < 0 or p - pmax < c - cmax:\n                    pr('NO')\n                    f = 1\n                pmax = p\n                cmax = c\n            if 1 - f:\n                pr('YES')\n        else:\n            pr('NO')\n            for _ in range(n - 1):\n                I()\n                continue\nmain()", "for i in range(int(input())):\n    ans = ''\n    n = int(input())\n    for j in range(n):\n        (a, b) = map(int, input().split())\n        if j == 0:\n            (a_prev, b_prev) = (a, b)\n            dif = a - b\n            if dif < 0:\n                ans = 'NO'\n        elif a - b < dif or a < a_prev or b < b_prev:\n            ans = 'NO'\n        else:\n            (a_prev, b_prev) = (a, b)\n            dif = a - b\n        if j == n - 1:\n            print('YES') if ans == '' else print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    p = 0\n    c = 0\n    ans = 1\n    for i in range(n):\n        (P, C) = map(int, input().split())\n        if p == P and c == C:\n            continue\n        if p < P and c <= C <= c + P - p:\n            p = P\n            c = C\n            continue\n        ans = 0\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    kol = []\n    (f, g) = map(int, input().split())\n    kol.append([f, g])\n    flag = 0\n    if g > f:\n        print('NO')\n        flag = 1\n    for i in range(n - 1):\n        (p, c) = map(int, input().split())\n        kol.append([p, c])\n        if (c > p or kol[i][0] > p or kol[i][1] > c or (p - kol[i][0] < c - kol[i][1])) and flag == 0:\n            print('NO')\n            flag = 1\n    if flag == 0:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = []\n    m = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        l.append(a)\n        m.append(b)\n    p = l[:]\n    q = m[:]\n    p.sort()\n    q.sort()\n    f = 1\n    if p == l and q == m:\n        for i in range(n):\n            if i > 0:\n                if m[i] > m[i - 1]:\n                    k = m[i] - m[i - 1]\n                    if not l[i] - l[i - 1] >= k:\n                        f = 0\n                        break\n            if l[i] < m[i]:\n                f = 0\n                break\n        if f == 0:\n            print('NO')\n        else:\n            print('YES')\n    else:\n        print('NO')", "t = int(input())\nr = []\nfor i in range(t):\n    b = []\n    d = []\n    n = int(input())\n    for j in range(n):\n        a = list(map(int, input().split()))\n        b.append(a[0])\n        d.append(a[1])\n    if b[0] < d[0]:\n        r.append('NO')\n    else:\n        p = [x - b[i - 1] for (i, x) in enumerate(b) if i > 0]\n        c = [x - d[i - 1] for (i, x) in enumerate(d) if i > 0]\n        s1 = sum((1 for number in p if number < 0))\n        s2 = sum((1 for number in c if number < 0))\n        if s1 != 0 or s2 != 0:\n            r.append('NO')\n        else:\n            q = 0\n            for j in range(n - 1):\n                if p[j] != c[j]:\n                    if p[j] < c[j]:\n                        q = q + 1\n            if q != 0:\n                r.append('NO')\n            else:\n                r.append('YES')\nfor i in range(len(r)):\n    print(r[i])", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    p0 = 0\n    c0 = 0\n    out = 'YES'\n    for i in range(n):\n        (p, c) = tuple(map(int, input().split()))\n        if c > p or p < p0 or c < c0 or (c - c0 > p - p0):\n            out = 'NO'\n        p0 = p\n        c0 = c\n    print(out)", "for j in range(int(input())):\n    (a, b) = (0, 0)\n    ans = 1\n    for i in range(int(input())):\n        (c, d) = map(int, input().split())\n        if c - a < d - b or min(c - a, d - b) < 0:\n            ans = 0\n        (a, b) = (c, d)\n    if ans == 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    inside = 0\n    detect = 0\n    p_prev = 0\n    c_prev = 0\n    for i in range(n):\n        (play, clear) = [int(x) for x in input().split()]\n        if play < p_prev or clear < c_prev:\n            detect = 1\n        elif play < clear:\n            detect = 1\n        elif play - p_prev < clear - c_prev:\n            detect = 1\n        inside += 1\n        p_prev = play\n        c_prev = clear\n    if detect == 1:\n        print('NO')\n    elif inside == 1:\n        if play >= clear:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    p = []\n    c = []\n    for i in range(n):\n        (u, v) = map(int, input().split())\n        p.append(u)\n        c.append(v)\n    flag = 0\n    if p[0] < c[0]:\n        flag = 1\n    else:\n        i = 1\n        while i < n:\n            if p[i - 1] <= p[i] and c[i - 1] <= c[i] and (p[i] >= c[i]) and (p[i] - p[i - 1] >= c[i] - c[i - 1]):\n                i += 1\n            else:\n                flag = 1\n                break\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    li = [list(map(int, input().split())) for i in range(n)]\n    if n != 0:\n        (check1, check2) = (0, 0)\n        flag = 0\n        for i in range(0, n):\n            if check1 - li[i][0] > check2 - li[i][1]:\n                flag = 1\n                print('NO')\n                break\n            elif check1 > li[i][0] or check2 > li[i][1]:\n                flag = 1\n                print('NO')\n                break\n            else:\n                check1 = li[i][0]\n                check2 = li[i][1]\n        if flag == 0:\n            print('YES')", "t = int(input())\nfor j in range(t):\n    imposs = 0\n    n = int(input())\n    (pprev, cprev) = map(int, input().split())\n    if cprev > pprev:\n        imposs = 1\n    for i in range(1, n):\n        (p, c) = map(int, input().split())\n        pdiff = p - pprev\n        cdiff = c - cprev\n        if imposs == 0:\n            if c > p or cdiff < 0 or pdiff < 0 or (cdiff > pdiff):\n                imposs = 1\n            cprev = c\n            pprev = p\n    if imposs == 1:\n        print('NO')\n    else:\n        print('YES')", "def query(n, PC):\n    p_prev = 0\n    c_prev = 0\n    for (p, c) in PC:\n        play = p - p_prev\n        clear = c - c_prev\n        if play < 0 or clear < 0:\n            return 'NO'\n        if play < clear:\n            return 'NO'\n        p_prev = p\n        c_prev = c\n    return 'YES'\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        PC = [tuple(map(int, input().split())) for _ in range(n)]\n        print(query(n, PC))\nmain()", "def solve():\n    n = int(input())\n    points = [(int(number) for number in input().split()) for _ in range(n)]\n    (p_prev, c_prev) = points[0]\n    if c_prev > p_prev:\n        return 'NO'\n    for (p_curr, c_curr) in points[1:]:\n        if c_curr > p_curr:\n            return 'NO'\n        if p_curr == p_prev:\n            if c_curr != c_prev:\n                return 'NO'\n        elif p_curr > p_prev:\n            if c_prev < c_prev:\n                return 'NO'\n        else:\n            return 'NO'\n        delta_p = p_curr - p_prev\n        delta_c = c_curr - c_prev\n        if delta_p < 0:\n            return 'NO'\n        if delta_c < 0:\n            return 'NO'\n        if delta_p < delta_c:\n            return 'NO'\n        (p_prev, c_prev) = (p_curr, c_curr)\n    return 'YES'\ntask_number = int(input())\nfor _ in range(task_number):\n    print(solve())"]