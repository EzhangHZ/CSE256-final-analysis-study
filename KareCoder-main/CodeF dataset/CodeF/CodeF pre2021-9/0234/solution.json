["for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(n):\n        a += list(map(int, input().split()))\n    neg = sum(map(lambda x: x < 0, a))\n    b = [abs(x) for x in a]\n    if neg % 2 == 0:\n        print(sum(b))\n    else:\n        print(sum(b) - 2 * min(b))", "total = int(input())\nfor i in range(total):\n    input_list = input().split()\n    n = int(input_list[0])\n    m = int(input_list[1])\n    Grid = [[0 for x in range(m)] for y in range(n)]\n    for i in range(n):\n        input_grid = input().split()\n        for j in range(m):\n            Grid[i][j] = int(input_grid[j])\n    count = 0\n    sum = 0\n    for i in range(n):\n        for j in range(m):\n            if Grid[i][j] < 0:\n                count += 1\n    if count % 2 == 0:\n        for i in range(n):\n            for j in range(m):\n                sum += abs(Grid[i][j])\n        print(sum)\n    else:\n        min = abs(Grid[0][0])\n        for i in range(n):\n            for j in range(m):\n                sum += abs(Grid[i][j])\n                if abs(Grid[i][j]) < min:\n                    min = abs(Grid[i][j])\n        print(sum - 2 * min)", "def maxSum(arr, r):\n    (isZeroPresentInGrid, cntOFNegatives, ans) = (False, 0, 0)\n    smallestNum = 101\n    for i in range(r):\n        for num in arr[i]:\n            if num < 0:\n                cntOFNegatives += 1\n            elif num == 0:\n                isZeroPresentInGrid = True\n            ans += abs(num)\n            smallestNum = min(smallestNum, abs(num))\n    if isZeroPresentInGrid or cntOFNegatives % 2 == 0:\n        return ans\n    return ans - smallestNum * 2\nt = int(input())\nwhile t:\n    (r, c) = map(int, input().split(' '))\n    arr = []\n    for i in range(r):\n        row = list(map(int, input().split(' ')))\n        arr.append(row)\n    print(maxSum(arr, r))\n    t -= 1", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    (l, k) = ([], 0)\n    for i in range(n):\n        l += [*map(int, input().split())]\n    for i in range(n * m):\n        if l[i] < 0:\n            k += 1\n            l[i] *= -1\n    print(sum(l) - k % 2 * min(l) * 2)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (w, c) = ([], 0)\n    for _ in range(n):\n        w += list(map(int, input().split()))\n    w.sort()\n    for i in w:\n        if i < 0:\n            c += 1\n        if i >= 0:\n            break\n    w = sorted(map(abs, w))\n    if c % 2 == 0:\n        print(sum(w))\n    else:\n        print(sum(w[1:]) - w[0])", "for i in range(int(input())):\n    arr = input().split(' ')\n    arr = list(map(int, arr))\n    L = []\n    for j in range(arr[0]):\n        arr1 = input().split(' ')\n        arr1 = list(map(int, arr1))\n        L.extend(arr1)\n    s = 0\n    for k in L:\n        if k < 0:\n            s += 1\n    absList = list(map(abs, L))\n    if s % 2 == 0:\n        print(sum(absList))\n    else:\n        print(sum(absList) - min(absList) * 2)", "t = int(input())\nfor i in range(t):\n    (r, c) = input().split()\n    r = int(r)\n    c = int(c)\n    m = []\n    for i in range(0, r):\n        m.append([int(j) for j in input().split()])\n    m = sum(m, [])\n    a = r * c\n    b = 0\n    i = 0\n    n = []\n    for i in range(a):\n        if m[i] < 0:\n            b += 1\n            c = -1 * m[i]\n            n.append(c)\n        else:\n            n.append(m[i])\n        i += 1\n    if b % 2 == 0:\n        k = sum(n)\n        print(k)\n    else:\n        n.sort()\n        s = min(n)\n        s = -1 * s\n        n.remove(min(n))\n        n.append(s)\n        k = sum(n)\n        print(k)", "f_lamb = lambda : map(int, input().split())\nfor o in range(int(*f_lamb())):\n    (n, m) = f_lamb()\n    (g, k) = ([], 0)\n    for p in range(n):\n        g += [*f_lamb()]\n    for i in range(n * m):\n        if g[i] < 0:\n            k += 1\n            g[i] *= -1\n    print(sum(g) - k % 2 * min(g) * 2)", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    ls = []\n    for i in range(m):\n        ls.append(list(map(int, input().split())))\n    ls0 = []\n    lsx = []\n    t = 0\n    s = 0\n    for j in range(m):\n        for k in range(n):\n            if ls[j][k] < 0:\n                t += 1\n                ls0.append(ls[j][k])\n            else:\n                lsx.append(ls[j][k])\n    if t % 2 == 0:\n        print(sum(lsx) - sum(ls0))\n    else:\n        ls0.sort()\n        lsx.sort()\n        if len(lsx) == 0:\n            print(-sum(ls0) + 2 * ls0[-1])\n        elif ls0[-1] * -1 > lsx[0]:\n            print(sum(lsx) - sum(ls0) - 2 * lsx[0])\n        else:\n            print(sum(lsx) - sum(ls0) + 2 * ls0[-1])", "for _ in range(int(input())):\n    a = []\n    (n, m) = map(int, input().split())\n    for i in range(n):\n        a += list(map(int, input().split()))\n    neg = 0\n    su = 0\n    for x in a:\n        if x < 0:\n            neg += 1\n        su += abs(x)\n    b = [abs(x) for x in a]\n    if neg % 2 == 0:\n        print(su)\n    else:\n        print(su - 2 * min(b))", "t = int(input())\nfor q in range(t):\n    (x, y) = map(int, input().split())\n    ans = 2 ** 32\n    odd = val = 0\n    for i in range(x):\n        l = list(map(int, input().split()))\n        for j in l:\n            if j < 0:\n                odd += 1\n            val += abs(j)\n            ans = min(ans, abs(j))\n    if odd % 2 != 0:\n        val -= ans * 2\n    print(val)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = 1000000\n    c = [0, 0]\n    s = 0\n    for i in range(n):\n        for (j, x) in enumerate(map(int, input().split())):\n            y = abs(x)\n            s += y\n            d = min(d, y)\n            if x < 0:\n                c[(i + j) % 2] += 1\n    if c[0] % 2 == c[1] % 2:\n        print(s)\n    else:\n        print(s - d * 2)", "num_inp = lambda : int(input())\narr_inp = lambda : list(map(int, input().split()))\nsp_inp = lambda : map(int, input().split())\nstr_inp = lambda : input()\nfor i in range(int(input())):\n    (n, m) = map(int, input().split())\n    (l, k) = ([], 0)\n    for i in range(n):\n        l += [*map(int, input().split())]\n    for i in range(n * m):\n        if l[i] < 0:\n            k += 1\n            l[i] *= -1\n    print(sum(l) - k % 2 * min(l) * 2)", "import math\nimport collections\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    for a in range(n):\n        l1 = list(map(int, input().split()))\n        l.append(l1)\n    ans = 0\n    m1 = []\n    count = 0\n    mini = math.inf\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] < 0:\n                count += 1\n                mini = min(mini, -l[i][j])\n                ans += -l[i][j]\n            else:\n                mini = min(mini, abs(l[i][j]))\n                ans += abs(l[i][j])\n    if count % 2 == 0:\n        print(ans)\n    else:\n        print(ans - 2 * mini)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    p = abs(a[0][0])\n    (c, s, k) = (0, 0, 0)\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 0:\n                k = 1\n            elif a[i][j] < 0:\n                c += 1\n            s += abs(a[i][j])\n            if abs(a[i][j]) < p:\n                p = abs(a[i][j])\n    if k == 1 or c % 2 == 0:\n        print(s)\n    else:\n        print(s - 2 * p)", "t = int(input())\nfor q in range(t):\n    (x, y) = map(int, input().split())\n    ans = 2 ** 32\n    odd = val = 0\n    for i in range(x):\n        l = list(map(int, input().split()))\n        for j in l:\n            if j < 0:\n                odd += 1\n            val += abs(j)\n            ans = min(ans, abs(j))\n    if odd % 2 != 0:\n        val -= ans * 2\n    print(val)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    for i in range(n):\n        ls = list(map(int, input().split()))\n        l.append(ls)\n    count = 0\n    ans = 0\n    minimum = 101\n    for i in range(n):\n        for j in range(m):\n            x = l[i][j]\n            if x < 0:\n                count += 1\n            minimum = min(minimum, abs(x))\n            ans += abs(x)\n    if count % 2 == 0:\n        print(ans)\n    else:\n        print(ans - (minimum + minimum))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ans = 0\n    cn = 0\n    val = 1000000\n    for p in range(n):\n        B = list(map(int, input().split()))\n        for i in range(len(B)):\n            if B[i] < 0:\n                cn += 1\n            ans += abs(B[i])\n            val = min(val, abs(B[i]))\n    if cn % 2 != 0:\n        ans -= 2 * val\n    print(ans)", "inn = lambda : int(input())\ninm = lambda : map(int, input().split())\nins = lambda : str(input())\nina = lambda : list(map(int, input().split()))\n\ndef solve():\n    (n, m) = inm()\n    b = []\n    for i in range(n):\n        b += ina()\n    x = 0\n    if 0 in b:\n        for i in b:\n            x += abs(i)\n        print(x)\n    else:\n        lz = 0\n        for i in b:\n            lz += i < 0\n        if lz % 2 == 0:\n            for i in b:\n                x += abs(i)\n            print(x)\n        else:\n            c = []\n            d = []\n            for i in b:\n                x += abs(i)\n                if i < 0:\n                    c.append(i)\n                else:\n                    d.append(i)\n            x = x + 2 * max(c)\n            y = x\n            if len(d):\n                y = x - 2 * (max(c) + min(d))\n            print(max(x, y))\n\ndef main():\n    t = 1\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "import sys\n\ndef answer(n, m, a):\n    summ = 0\n    best_mn = 101\n    count_odds = 0\n    for i in range(n):\n        for j in range(m):\n            summ += abs(a[i][j])\n            best_mn = min(best_mn, abs(a[i][j]))\n            if a[i][j] < 0:\n                count_odds += 1\n    if count_odds % 2 == 0:\n        return summ\n    else:\n        return summ - 2 * best_mn\n\ndef main():\n    t = int(input())\n    while t:\n        (n, m) = [int(i) for i in sys.stdin.readline().split()]\n        a = []\n        for j in range(n):\n            a.append([int(i) for i in sys.stdin.readline().split()])\n        print(answer(n, m, a))\n        t -= 1\n    return\nmain()", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(n):\n        b = list(map(int, input().split()))\n        a += b\n    neg = 0\n    for i in a:\n        if i < 0:\n            neg += 1\n    if neg % 2 == 0:\n        print(sum([abs(i) for i in a]))\n    else:\n        print(sum([abs(i) for i in a]) - 2 * min([abs(i) for i in a]))", "for t in range(int(input())):\n    (n, m) = [int(k) for k in input().split()]\n    neg = 0\n    sm = 0\n    num = []\n    for i in range(n):\n        row = [int(k) for k in input().split()]\n        for ele in row:\n            sm += abs(ele)\n            if ele <= 0:\n                neg += 1\n            num += [abs(ele)]\n    if neg % 2:\n        num.sort()\n        sm -= num[0]\n        sm -= num[0]\n    print(sm)", "t = int(input())\nfor m in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(map(int, input().split())))\n    mn = 101\n    count = 0\n    s = 0\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] <= 0:\n                count = count + 1\n            s = s + abs(arr[i][j])\n            mn = min(mn, abs(arr[i][j]))\n    if count % 2 == 0:\n        print(s)\n    else:\n        print(s - 2 * mn)", "t = int(input())\nwhile t > 0:\n    (n, m) = [int(x) for x in input().split(' ')]\n    (add, minus, value) = (0, 0, 100000)\n    for i in range(n):\n        a = [int(x) for x in input().split(' ')]\n        for j in range(m):\n            if a[j] < 0:\n                minus += 1\n            value = min(value, abs(a[j]))\n            add += abs(a[j])\n    if minus % 2 != 0:\n        add -= 2 * value\n    print(add)\n    t -= 1", "from math import *\na = int(input())\nfor i in range(a):\n    minus = 0\n    minmod1 = 0\n    minmod2 = 1000\n    mod = 0\n    (n, m) = map(int, input().split())\n    for j in range(n):\n        line = [int(e) for e in input().split()]\n        for h in line:\n            if h < 0:\n                minus += 1\n        mod += sum([abs(g) for g in line])\n        minmod1 = min([abs(g) for g in line])\n        minmod2 = min(minmod1, minmod2)\n    if minus % 2 == 1:\n        print(mod - 2 * minmod2)\n    else:\n        print(mod)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(map(int, input().split())))\n    minn = 10 ** 18\n    summ = 0\n    neg = 0\n    for i in range(n):\n        for j in range(m):\n            minn = min(abs(arr[i][j]), minn)\n            if arr[i][j] < 0:\n                neg += 1\n            summ += abs(arr[i][j])\n    if neg % 2 == 0:\n        print(summ)\n    else:\n        print(summ - 2 * minn)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    neg = 0\n    for i in range(n):\n        a += list(map(int, input().split()))\n    neg = sum(map(lambda x: x < 0, a))\n    b = [abs(x) for x in a]\n    if neg % 2 == 0:\n        print(sum(b))\n    else:\n        print(sum(b) - 2 * min(b))", "def Signum(x):\n    return -1 if x < 0 else 0 if x == 0 else 1\nfor _ in range(int(input())):\n    (n, m) = input().split()\n    (Total, Zeros, Negatives, Minabs) = (0, 0, 0, 1000)\n    for _ in range(int(n)):\n        Row = list(map(int, input().split()))\n        for i in Row:\n            if Signum(i) == -1:\n                Negatives += 1\n            if Signum(i) == 0:\n                Zeros += 1\n            iAbs = abs(i)\n            if Minabs > iAbs:\n                Minabs = iAbs\n            Total += iAbs\n    if Zeros > 0 or Negatives % 2 == 0:\n        print(Total)\n    else:\n        print(Total - 2 * Minabs)", "def put(x):\n    count[0] += int(x <= 0)\n    return abs(x)\nt = int(input())\nfor j in range(t):\n    (m, n) = map(int, input().split())\n    count = [0]\n    a = []\n    for i in range(m):\n        a += [put(int(r)) for r in input().split()]\n    a.sort()\n    result = sum(a) - 2 * (count[0] % 2) * a[0]\n    print(result)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (negative, minn) = (0, 100)\n    ans = 0\n    for i in range(n):\n        k = list(map(int, input().split()))\n        for j in k:\n            if j < 0:\n                negative += 1\n            minn = min(minn, abs(j))\n            ans += abs(j)\n    if negative % 2 == 0:\n        print(ans)\n    else:\n        print(ans - 2 * minn)", "from math import *\na = int(input())\nfor x in range(a):\n    (b, c) = map(int, input().split())\n    d = []\n    for y in range(b):\n        j = list(map(int, input().split()))\n        d.append(j)\n    s = 0\n    mi = 999999999999\n    n = 0\n    for y in range(b):\n        for z in range(c):\n            if d[y][z] <= 0:\n                s += 1\n            if abs(d[y][z]) < mi:\n                mi = abs(d[y][z])\n            n += abs(d[y][z])\n    if s % 2 == 0:\n        print(n)\n    else:\n        print(n - 2 * mi)", "t = int(input())\nfor i in range(0, t):\n    k = []\n    (n, m) = list(map(int, input().split(' ')))\n    for i in range(0, n):\n        k.append(list(map(int, input().split(' '))))\n    flag = 0\n    for i in range(0, len(k)):\n        if 0 in k[i]:\n            flag = 1\n            break\n    s = 0\n    p = 10000000\n    q = 0\n    for i in range(0, len(k)):\n        for j in range(0, len(k[i])):\n            if k[i][j] < 0:\n                q += 1\n            s += abs(k[i][j])\n            p = min(p, abs(k[i][j]))\n    if flag == 1:\n        print(s)\n    elif q % 2 == 0:\n        print(s)\n    else:\n        print(s - 2 * p)", "for _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    a = []\n    for _ in range(n):\n        a.append(list(map(int, input().split())))\n    c = 0\n    s = 0\n    mini = abs(a[0][0])\n    for i in range(n):\n        for j in range(m):\n            s += abs(a[i][j])\n            if a[i][j] < 0:\n                c += 1\n            if abs(a[i][j]) < mini:\n                mini = abs(a[i][j])\n    if c % 2 == 0:\n        print(s)\n    else:\n        print(s - 2 * abs(mini))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = list()\n    s = 0\n    ans = 0\n    l = list()\n    for i in range(n):\n        a = list(map(int, input().split()))\n        for k in a:\n            if k < 0:\n                ans += 1\n            s += abs(k)\n            l.append(abs(k))\n    if ans % 2 == 1:\n        s = s - 2 * min(l)\n    print(s)", "def check(a, r, c):\n    summ = 0\n    minn = 99999999\n    evn = 0\n    for i in a:\n        for j in i:\n            if j <= 0:\n                evn += 1\n            summ += abs(j)\n            minn = min(minn, abs(j))\n    if evn % 2 == 0:\n        return summ\n    return summ - 2 * minn\nfor _ in range(int(input())):\n    (r, c) = map(int, input().split())\n    a = []\n    for i in range(r):\n        a.append(list(map(int, input().split())))\n    print(check(a, r, c))", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    (l, k) = ([], 0)\n    for i in range(n):\n        l += [*map(int, input().split())]\n    for i in range(n * m):\n        if l[i] < 0:\n            k += 1\n            l[i] *= -1\n    print(sum(l) - k % 2 * min(l) * 2)", "t = int(input())\nres = []\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    x = 0\n    c = 0\n    mi = 101\n    for j in range(n):\n        a = list(map(int, input().split()))\n        for k in range(m):\n            if a[k] < 0:\n                c += 1\n            if abs(a[k]) < mi:\n                mi = abs(a[k])\n            x += abs(a[k])\n    if c % 2 == 0:\n        res.append(x)\n    else:\n        res.append(x - 2 * mi)\nfor i in res:\n    print(i)", "t = int(input())\nfor i in range(t):\n    a = list(map(int, input().split()))\n    m = a[0]\n    n = a[1]\n    mat = []\n    for i in range(m):\n        mat.append(list(map(int, input().split())))\n    negcount = 0\n    minmat = 2000000000\n    total = 0\n    for i in range(m):\n        for j in range(n):\n            total += abs(mat[i][j])\n            minmat = min(minmat, abs(mat[i][j]))\n            if mat[i][j] < 0:\n                negcount += 1\n    if negcount & 1:\n        print(total - 2 * minmat)\n    else:\n        print(total)", "for _ in range(int(input())):\n    (r, c) = map(int, input().split())\n    (ans, d, neg, min) = (0, 0, 0, 101)\n    for i in range(r):\n        l = [int(k) for k in input().split()]\n        for j in range(c):\n            if l[j] == 0:\n                d = 1\n            elif l[j] < 0:\n                neg += 1\n            ans += abs(l[j])\n            if abs(l[j]) < min:\n                min = abs(l[j])\n    if d == 1 or neg % 2 == 0:\n        print(ans)\n    else:\n        print(ans - 2 * min)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (par, s, mn) = (0, 0, [])\n    for i in range(n):\n        (a, t) = (list(map(int, input().split())), [])\n        for j in a:\n            if j < 0:\n                par += 1\n                s -= j\n                t.append(abs(j))\n            else:\n                s += j\n                t.append(j)\n        mn.append(min(t))\n    if par % 2 == 0:\n        print(s)\n    else:\n        print(s - 2 * min(mn))", "I = input\nfor _ in [0] * int(I()):\n    s = ' '.join((I() for _ in [0] * int(I().split()[0])))\n    a = (*map(abs, map(int, s.split())),)\n    print(sum(a) - s.count('-') % 2 * 2 * min(a))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = [list(map(int, input().split())) for i in range(n)]\n    (neg, m, s) = (0, 100, 0)\n    for each in a:\n        for v in each:\n            m = min(m, abs(v))\n            if v < 0:\n                neg += 1\n            s += abs(v)\n    if not neg or neg % 2 == 0:\n        print(s)\n    else:\n        print(s - 2 * m)", "import sys\ninp = sys.stdin.readline\nfor _ in range(int(inp())):\n    (n, m) = map(int, inp().split())\n    data = [list(map(int, inp().split())) for i in range(n)]\n    zero = False\n    min_abs = sys.maxsize\n    cnt = 0\n    s = 0\n    for i in range(n):\n        for j in range(m):\n            tmp = data[i][j]\n            min_abs = min(min_abs, abs(tmp))\n            if tmp < 0:\n                cnt += 1\n                s += -tmp\n            elif tmp > 0:\n                s += tmp\n            else:\n                zero = True\n    if zero or cnt % 2 == 0:\n        print(s)\n    else:\n        print(s - 2 * min_abs)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = 0\n    arr = []\n    for _ in range(n):\n        l = list(map(int, input().split()))\n        arr += l\n        for el in l:\n            if el < 0:\n                c += 1\n    arr.sort()\n    if c % 2 == 0:\n        print(sum((abs(el) for el in arr)))\n    else:\n        p = []\n        for el in arr:\n            p.append(abs(el))\n        p.sort()\n        print(sum(p) - 2 * p[0])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    count = 0\n    ans = 0\n    minimum = 101\n    for i in range(n):\n        ls = list(map(int, input().split()))\n        for j in ls:\n            if j < 0:\n                count += 1\n            minimum = min(minimum, abs(j))\n            ans += abs(j)\n    if count % 2 == 0:\n        print(ans)\n    else:\n        print(ans - (minimum + minimum))", "from functools import lru_cache\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = []\n    mn = 1000000000.0\n    neg_amount = 0\n    s = 0\n    for i in range(n):\n        tmp = list(map(int, input().split()))\n        s += sum([abs(x) for x in tmp])\n        neg_amount += sum((1 for i in tmp if i < 0))\n        for i in tmp:\n            mn = min(mn, abs(i))\n        arr.append(tmp)\n    if neg_amount % 2 == 0:\n        print(s)\n    else:\n        print(s - 2 * mn)", "for i in range(int(input())):\n    arr = list(map(int, input().split()))\n    n = arr[0]\n    m = arr[1]\n    st = 0\n    s = 0\n    mn = 10 ** 9\n    for j in range(n):\n        row = list(map(int, input().split()))\n        s += sum([1 if k < 0 else 0 for k in row])\n        row = list(map(abs, row))\n        st += sum(row)\n        mn = min(mn, min(row))\n    if s % 2 == 0:\n        print(st)\n    else:\n        st = st - 2 * mn\n        print(st)", "def ass(a, b):\n    if a != b:\n        print(f'Assertion error: {a} != {b}')\n    else:\n        print('OK')\n\ndef number():\n    return int(input())\n\ndef numbers():\n    return [int(item) for item in input().split()]\n\ndef word():\n    return input()\n\ndef words():\n    return [item for item in input().split()]\n\ndef dump(lst):\n    for (i, item) in enumerate(lst):\n        print(i, item)\n\ndef binsearch(arr, a, b):\n    m = (a + b) // 2\n    if a >= b:\n        return a - 1 if arr[a] == 0 else a\n    return binsearch(arr, a, m - 1) if arr[m] == 0 else binsearch(arr, m + 1, b)\n\ndef f(arr):\n    arr = [item for sublist in arr for item in sublist]\n    neg = 0\n    pos = 0\n    zero = 0\n    summa = 0\n    smallest = abs(arr[0])\n    for item in arr:\n        if item < 0:\n            neg += 1\n        elif item == 0:\n            zero += 1\n        else:\n            pos += 1\n        summa += abs(item)\n        if abs(item) < smallest:\n            smallest = abs(item)\n    if neg % 2 == 0:\n        return summa\n    else:\n        return summa if zero > 0 else summa - 2 * smallest\nfor t in range(number()):\n    (n, m) = numbers()\n    arr = [numbers() for i in range(n)]\n    print(f(arr))", "for _ in range(int(input())):\n    mat = []\n    (n, m) = map(int, input().split())\n    neg = 0\n    mn = 9999999\n    res = 0\n    for i in range(n):\n        tmp = list(map(int, input().split()))\n        mat.append(tmp)\n    for i in range(n):\n        for j in range(m):\n            if mat[i][j] < 0:\n                neg += 1\n            mn = min(mn, abs(mat[i][j]))\n            res += abs(mat[i][j])\n    if neg % 2 != 0:\n        res -= 2 * mn\n    print(res)", "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n    (n, m) = R()\n    a = []\n    f = 0\n    for _ in [0] * n:\n        for x in R():\n            a += (abs(x),)\n            f ^= x < 0\n    print(sum(a) - 2 * min(a) * f)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = list()\n    s = 0\n    ans = 0\n    l = list()\n    for i in range(n):\n        a = list(map(int, input().split()))\n        for k in a:\n            if k < 0:\n                ans += 1\n            s += abs(k)\n            l.append(abs(k))\n    if ans % 2 == 1:\n        s = s - 2 * min(l)\n    print(s)", "for _ in range(int(input())):\n    (n, m) = [int(j) for j in input().split()]\n    b = []\n    for i in range(n):\n        a = [int(j) for j in input().split()]\n        b = b + a\n    c = 0\n    for k in b:\n        if k <= 0:\n            c = c + 1\n    if c % 2 != 0:\n        d = []\n        for t in b:\n            d.append(abs(t))\n        print(sum(d) - 2 * min(d))\n    else:\n        d = []\n        for t in b:\n            d.append(abs(t))\n        print(sum(d))", "for _ in range(int(input())):\n    (r, c) = map(int, input().split())\n    l = []\n    p = []\n    for i in range(r):\n        t = list(map(int, input().split()))\n        l.extend(t)\n    c = 0\n    for i in l:\n        if i < 0:\n            p.append(i * -1)\n            c += 1\n        else:\n            p.append(i)\n    su = sum(p)\n    if c % 2 == 0:\n        print(su)\n    else:\n        print(su - 2 * min(p))", "t = int(input())\nfor q in range(t):\n    (x, y) = map(int, input().split())\n    ans = 2 ** 32\n    odd = val = 0\n    for i in range(x):\n        l = list(map(int, input().split()))\n        for j in l:\n            if j < 0:\n                odd += 1\n            val += abs(j)\n            ans = min(ans, abs(j))\n    if odd % 2 != 0:\n        val -= ans * 2\n    print(val)", "t = int(input())\nwhile t != 0:\n    x = input()\n    x = x.split()\n    r = int(x[0])\n    c = int(x[1])\n    sum = 0\n    cnt = 0\n    l = 100000\n    for i in range(r):\n        x = input()\n        x = x.split()\n        for j in range(c):\n            sum += abs(int(x[j]))\n            if int(x[j]) <= 0:\n                cnt += 1\n            l = min(l, abs(int(x[j])))\n    if cnt % 2:\n        print(sum - 2 * l)\n    else:\n        print(sum)\n    t -= 1", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    k = []\n    co = 0\n    c = 0\n    for i in range(n):\n        x = list(map(int, input().split()))\n        l.append(x)\n    b = min(l[0])\n    c1 = 9999999999\n    for v in l:\n        co = co + v.count(0)\n    for j in range(len(l)):\n        for i in range(len(l[j])):\n            if l[j][i] < 0:\n                l[j][i] = abs(l[j][i])\n                c = c + 1\n        k.append(sum(l[j]))\n    for x in l:\n        c1 = min(c1, min(x))\n    if c % 2 == 0:\n        print(sum(k))\n    elif co > 0 and c % 2 == 1:\n        print(sum(k))\n    else:\n        print(sum(k) - 2 * c1)", "import sys\n\ndef ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\ntc = int(input())\nwhile tc:\n    tc -= 1\n    (n, m) = map(int, input().split())\n    (total, small) = (0, 99999999999)\n    neg = 0\n    mat = []\n    for i in range(n):\n        mat.append(ints())\n        for j in range(m):\n            if mat[-1][j] < 0:\n                neg += 1\n            total += abs(mat[-1][j])\n            if small > abs(mat[-1][j]):\n                small = abs(mat[-1][j])\n    if neg % 2 == 0:\n        small = 0\n    print(total - 2 * small)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split(' '))\n    a = [list(map(int, input().split(' '))) for _ in range(n)]\n    sum = 0\n    neg = 0\n    minn = 101\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] < 0:\n                neg += 1\n            sum += abs(a[i][j])\n            minn = min(minn, abs(a[i][j]))\n    if neg % 2 == 1:\n        print(sum - 2 * minn)\n    else:\n        print(sum)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    p = abs(a[0][0])\n    c = 0\n    s = 0\n    k = 0\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 0:\n                k = 1\n            elif a[i][j] < 0:\n                c += 1\n            s += abs(a[i][j])\n            if abs(a[i][j]) < p:\n                p = abs(a[i][j])\n    if k == 1 or c % 2 == 0:\n        print(s)\n    else:\n        print(s - 2 * p)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    total_neg = 0\n    min_el = 100\n    summ = 0\n    for _ in range(n):\n        arr = list(map(int, input().split()))\n        for i in arr:\n            if i < 0:\n                total_neg += 1\n            if abs(i) < min_el:\n                min_el = abs(i)\n            summ += abs(i)\n    if total_neg % 2 == 0:\n        print(summ)\n    else:\n        print(summ - 2 * min_el)", "I = lambda : map(int, input().split())\nfor i in range(int(*I())):\n    (n, m) = I()\n    (l, k) = ([], 0)\n    for i in range(n):\n        l += [*I()]\n    for i in range(n * m):\n        if l[i] < 0:\n            k += 1\n            l[i] *= -1\n    print(sum(l) - k % 2 * min(l) * 2)", "a = int(input())\nfor i in range(a):\n    (n, m) = map(int, input().split())\n    arr = []\n    minn = float('inf')\n    for i in range(n):\n        temp = list(map(int, input().split()))\n        arr.append(temp)\n    count = 0\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] < 0:\n                count = count + 1\n    summ = 0\n    for i in range(n):\n        for j in range(m):\n            summ = summ + abs(arr[i][j])\n            minn = min(minn, abs(arr[i][j]))\n    if count % 2 == 0:\n        print(summ)\n    else:\n        print(summ - 2 * abs(minn))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    c = 0\n    s = 0\n    mn = 10001\n    for i in range(n):\n        x = list(map(int, input().split()))\n        for j in range(m):\n            s += abs(x[j])\n            if mn > abs(x[j]):\n                mn = abs(x[j])\n            if x[j] < 0:\n                c += 1\n    if c % 2 == 0 or mn == 0:\n        print(s)\n    else:\n        print(s - 2 * mn)", "N = int(input())\nfor _ in range(N):\n    (n, m) = map(int, input().split())\n    a = list()\n    for i in range(n):\n        a += list(map(int, input().split()))\n    a.sort()\n    minAbs = 101\n    countNegative = 0\n    for i in range(len(a)):\n        if a[i] <= 0:\n            countNegative += 1\n            a[i] = -a[i]\n        if a[i] < minAbs:\n            minAbs = a[i]\n    if countNegative % 2 == 1:\n        print(sum(a) - minAbs * 2)\n    else:\n        print(sum(a))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m) = map(int, input().split())\n    res = []\n    mi = 1000000000000000000\n    (c1, c2, sum) = (0, 0, 0)\n    for i in range(n):\n        l = list(map(int, input().split()))\n        res.append(l)\n    for i in range(n):\n        for j in range(m):\n            if res[i][j] < 0:\n                c2 += 1\n            sum += abs(res[i][j])\n            mi = min(abs(res[i][j]), mi)\n    if c2 % 2 == 0:\n        print(sum)\n    else:\n        print(sum - 2 * mi)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = list()\n    for i in range(n):\n        temp = [int(j) for j in input().split()]\n        arr.append(temp)\n    sm = 0\n    count = 0\n    mn = float('inf')\n    for i in range(n):\n        for j in range(m):\n            sm += abs(arr[i][j])\n            if arr[i][j] <= 0:\n                count += 1\n            mn = min(mn, abs(arr[i][j]))\n    if count % 2 != 0:\n        sm = sm - 2 * abs(mn)\n    print(sm)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    x = 0\n    mn = None\n    sm = 0\n    for __ in range(n):\n        s = list(map(int, input().split()))\n        for i in s:\n            if mn is None or abs(i) < mn:\n                mn = abs(i)\n            if i <= 0:\n                x += 1\n            sm += abs(i)\n    if x % 2 == 0:\n        print(sm)\n    else:\n        print(sm - 2 * mn)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    lis = []\n    ne = 0\n    for _ in range(n):\n        num = list(map(int, input().split()))\n        for i in num:\n            if i < 0:\n                ne += 1\n            lis.append(abs(i))\n    lis.sort()\n    if ne % 2 == 0:\n        print(sum(lis))\n    else:\n        print(sum(lis) - 2 * lis[0])", "count = int(input())\nresult = []\n\ndef minus_counter(n, m, matr):\n    counter = 0\n    for i in range(n):\n        for j in range(m):\n            matr[i][j] = int(matr[i][j])\n            if matr[i][j] < 0:\n                counter += 1\n    return counter\n\ndef find_min(n, m, matr):\n    min_item = abs(matr[0][0])\n    for i in range(n):\n        for j in range(m):\n            if abs(matr[i][j]) < min_item:\n                min_item = abs(matr[i][j])\n    return min_item\n\ndef sum_matr(n, m, matr):\n    s = 0\n    for i in range(n):\n        for j in range(m):\n            s += abs(matr[i][j])\n    return s\nfor _ in range(count):\n    (n, m) = map(int, input().split())\n    matr = []\n    for i in range(n):\n        tmp = input()\n        tmp = tmp.split(' ')\n        matr.append(tmp)\n    minus = minus_counter(n, m, matr)\n    s = sum_matr(n, m, matr)\n    if minus % 2 == 1:\n        s -= 2 * find_min(n, m, matr)\n    result.append(s)\nfor i in range(count):\n    print(result[i])", "def count_negative(matrix):\n    count = 0\n    for i in range(len(matrix)):\n        for j in range(len(matrix[0])):\n            count += matrix[i][j] <= 0\n    return count\n\ndef matrix_sum(matrix):\n    summa = 0\n    for i in range(len(matrix)):\n        for j in range(len(matrix[0])):\n            summa += abs(matrix[i][j])\n    return summa\n\ndef matrix_min(matrix):\n    minimum = matrix[0][0]\n    for i in range(len(matrix)):\n        for j in range(len(matrix[0])):\n            minimum = minimum if abs(matrix[i][j]) > abs(minimum) else matrix[i][j]\n    return minimum\nmatrices = []\nlength = int(input())\nfor _ in range(length):\n    (n, m) = map(int, input().split())\n    matrix = []\n    for i in range(n):\n        matrix.append(list(map(int, input().split())))\n    matrices.append(matrix)\nfor matrix in matrices:\n    delta = 0 if count_negative(matrix) % 2 == 0 else 2 * abs(matrix_min(matrix))\n    print(matrix_sum(matrix) - delta)", "t = int(input())\nfields = []\nfor i in range(t):\n    (n, m) = list(map(int, input().split()))\n    field = []\n    for j in range(n):\n        field.append(list(map(int, input().split())))\n    fields.append(field)\nresults = []\nfor i in range(t):\n    negatives = 0\n    s = 0\n    for x in fields[i]:\n        for y in x:\n            if y <= 0:\n                negatives += 1\n            s += abs(y)\n    negatives %= 2\n    if negatives:\n        m = abs(fields[i][0][0])\n        for x in fields[i]:\n            for y in x:\n                n = abs(y)\n                if n < m:\n                    m = n\n        s -= m * 2\n    print(s)", "for _ in range(int(input())):\n    (row, col) = map(int, input().split())\n    arr = []\n    for i in range(row):\n        l = list(map(int, input().split()))\n        arr.extend(l)\n    neg = 0\n    for i in arr:\n        if i < 0:\n            neg += 1\n    for i in range(len(arr)):\n        arr[i] = abs(arr[i])\n    s = sum(arr)\n    mini = min(arr)\n    if neg % 2 == 0:\n        print(s)\n    else:\n        print(s - 2 * mini)", "def solve(n, m, res):\n    ans = 0\n    negs = 0\n    f = 0\n    x = 100000\n    for i in range(n):\n        for j in range(m):\n            if res[i][j] < 0:\n                negs += 1\n            if res[i][j] == 0:\n                f = 1\n            ans += abs(res[i][j])\n            x = min(x, abs(res[i][j]))\n    if f == 1:\n        return ans\n    elif negs % 2 != 0:\n        return ans - 2 * x\n    else:\n        return ans\nt = int(input())\nwhile t:\n    (n, m) = map(int, input().split())\n    res = []\n    for _ in range(n):\n        res.append(list(map(int, input().split())))\n    print(solve(n, m, res))\n    t -= 1", "t = int(input())\nanswers = []\nfor _ in range(t):\n    minAbs = 101\n    maxNegative = -100\n    negativeCntr = 0\n    zeroCntr = 0\n    S = 0\n    (n, m) = list(map(int, str(input()).split(' ')))\n    for _ in range(n):\n        nums = list(map(int, str(input()).split(' ')))\n        for num in nums:\n            if num < 0:\n                negativeCntr += 1\n            elif num == 0:\n                zeroCntr += 1\n            if abs(num) < minAbs:\n                minAbs = abs(num)\n            S += abs(num)\n    if negativeCntr % 2 != 0 and zeroCntr % 2 == 0:\n        S += -abs(minAbs) * 2\n    answers.append(S)\nfor i in answers:\n    print(i)", "for _ in range(int(input())):\n    (r, c) = map(int, input().split())\n    a = []\n    for i in range(r):\n        x = list(map(int, input().split()))\n        for j in x:\n            a.append(j)\n    count = 0\n    for q in range(r * c):\n        if a[q] < 0:\n            count += 1\n            a[q] = -a[q]\n    if count % 2 == 0:\n        print(sum(a))\n    else:\n        print(sum(a) - 2 * min(a))", "x = int(input())\nwhile x > 0:\n    x = x - 1\n    (c, d) = map(int, input().split())\n    zero_flag = False\n    neg = 0\n    h = []\n    minall = 99999999\n    for i in range(c):\n        k = list(map(int, input().split()))\n        for i in k:\n            if i == 0:\n                zero_flag = True\n            if i < 0:\n                neg += 1\n            if minall > abs(i):\n                minall = abs(i)\n        h.append(k)\n    sum1 = 0\n    if zero_flag == True:\n        for j in h:\n            for i in j:\n                sum1 += abs(i)\n    if zero_flag == False:\n        for j in h:\n            for i in j:\n                sum1 += abs(i)\n        if neg % 2 == 1:\n            sum1 = sum1 - 2 * minall\n    print(sum1)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    smallest = 100000000\n    neg = 0\n    ans = 0\n    for i in range(n):\n        for j in range(m):\n            ans += abs(a[i][j])\n            if abs(a[i][j]) < smallest:\n                smallest = abs(a[i][j])\n            if a[i][j] <= 0:\n                neg += 1\n    if neg % 2:\n        print(ans - 2 * smallest)\n    else:\n        print(ans)", "def maximize_sum(matrix):\n    negative = [x for x in matrix if x < 0]\n    positive = [x for x in matrix if x >= 0]\n    negative.sort()\n    positive.sort()\n    if len(positive) > 0:\n        if positive[0] == 0:\n            return sum(positive) + sum(list(map(lambda x: x * -1, negative)))\n    if len(negative) % 2 == 0:\n        return sum(positive) + sum(list(map(lambda x: x * -1, negative)))\n    else:\n        dup_negative = list(map(lambda x: x * -1, negative))\n        if len(positive) > 0:\n            if dup_negative[-1] > positive[0]:\n                return sum(dup_negative) + sum(positive[1:]) - positive[0]\n            else:\n                return sum(dup_negative[:-1]) + sum(positive) - dup_negative[-1]\n        else:\n            return sum(dup_negative[:-1]) - dup_negative[-1]\ntest = int(input())\nfor x in range(test):\n    (m, n) = list(map(int, input().split()))\n    matrix = []\n    for y in range(m):\n        matrix.extend(list(map(int, input().split())))\n    print(maximize_sum(matrix))", "t = int(input())\n\ndef solve():\n    (n, m) = map(int, input().split())\n    grid = []\n    for i in range(n):\n        grid.append(list(map(int, input().split())))\n    pos = 0\n    neg = 0\n    for i in grid:\n        for j in i:\n            if j > 0:\n                pos += 1\n            else:\n                neg += 1\n    pos += int(neg / 2) * 2\n    pos = int(pos)\n    lst = []\n    for i in grid:\n        for j in i:\n            lst.append(abs(j))\n    lst.sort()\n    lst.reverse()\n    ans = 0\n    for i in range(pos):\n        ans += lst[i]\n    for i in range(pos, len(lst)):\n        ans -= lst[i]\n    print(ans)\nfor i in range(t):\n    solve()", "def solve():\n    (n, m) = map(int, input().split())\n    c = 0\n    l = []\n    for i in range(n):\n        l1 = list(map(int, input().split()))\n        for j in l1:\n            if j < 0:\n                c += 1\n            l.append(abs(j))\n    if c % 2 == 0:\n        return sum(l)\n    elif l.count(0) > 0:\n        return sum(l)\n    else:\n        return sum(l) - 2 * min(l)\nfor _ in range(int(input())):\n    print(solve())", "for _ in range(int(input())):\n    (n, m) = [int(i) for i in input().split()]\n    l = []\n    for i in range(n):\n        l.append(list(map(int, input().split())))\n    ans = 0\n    least = int(1000000000.0)\n    exist = 0\n    for i in range(n):\n        for j in range(m):\n            ans += abs(l[i][j])\n            least = min(least, abs(l[i][j]))\n            if l[i][j] < 0:\n                exist += 1\n    if exist % 2 == 1:\n        print(ans - 2 * least)\n    else:\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    m = []\n    for i in range(x):\n        l = list(map(int, input().split()))\n        m.append(l)\n    n = 0\n    p = 0\n    z = 0\n    nsum = 0\n    psum = 0\n    minn = abs(m[0][0])\n    for i in range(x):\n        for j in range(y):\n            if minn > abs(m[i][j]):\n                minn = abs(m[i][j])\n            if m[i][j] == 0:\n                z += 1\n            elif m[i][j] < 0:\n                n += 1\n                nsum += m[i][j]\n            elif m[i][j] > 0:\n                p += 1\n                psum += m[i][j]\n    if z == 0 and n % 2 == 1:\n        print(psum - nsum - 2 * minn)\n    else:\n        print(psum - nsum)", "t = int(input())\nfor p in range(t):\n    (n, m) = map(int, input().split())\n    a = [list(map(int, input().split())) for i in range(n)]\n    neg = nil = s = 0\n    minmod = abs(a[0][0])\n    for i in range(n):\n        for j in range(m):\n            if abs(a[i][j]) < minmod:\n                minmod = abs(a[i][j])\n            if a[i][j] < 0:\n                neg += 1\n            elif a[i][j] == 0:\n                nil += 1\n            s += abs(a[i][j])\n    if nil > 0 or neg % 2 == 0:\n        print(s)\n    else:\n        print(s - 2 * minmod)", "t = int(input())\nfor i in range(0, t):\n    a = []\n    (n, m) = map(int, input().split())\n    k = 0\n    min_mod = 'str'\n    for j in range(0, n):\n        a.append(list(map(int, input().split())))\n        if min_mod == 'str':\n            min_mod = abs(a[-1][0])\n        for h in range(0, m):\n            if a[-1][h] < 0:\n                k += 1\n            if abs(a[-1][h]) < min_mod:\n                min_mod = abs(a[-1][h])\n    s = 0\n    for q in range(0, n):\n        for w in range(0, m):\n            s += abs(a[q][w])\n    if k % 2 == 0:\n        print(s)\n    else:\n        print(s - min_mod * 2)", "t = int(input())\nwhile t:\n    (n, m) = map(int, input().split())\n    mat = []\n    for i in range(n):\n        temp = list(map(int, input().split()))\n        mat.append(temp)\n    neg = 0\n    summ = 0\n    mini = float('inf')\n    for i in range(n):\n        for j in range(m):\n            if mat[i][j] <= 0:\n                neg += 1\n            mini = min(mini, abs(mat[i][j]))\n            summ += abs(mat[i][j])\n    if neg % 2 == 0:\n        print(summ)\n    else:\n        print(summ - mini * 2)\n    t -= 1", "def main():\n    for _ in range(int(input())):\n        (n, m) = map(int, input().split())\n        mm = []\n        cnt = 0\n        mn = 1000\n        sm = 0\n        flag = 0\n        for i in range(n):\n            l = list(map(int, input().split()))\n            mm.append(l)\n            for j in l:\n                sm += abs(j)\n                if j == 0:\n                    flag = 1\n                if j < 0:\n                    cnt += 1\n                mn = min(mn, abs(j))\n        if flag:\n            ans = sm\n        elif cnt & 1:\n            ans = sm - 2 * mn\n        else:\n            ans = sm\n        print(ans)\nmain()", "t = int(input())\nanswers = []\nfor _ in range(t):\n    nm = input().split()\n    grid = []\n    x = 0\n    y = 0\n    negatives = []\n    positives = []\n    numbers = []\n    for i in range(int(nm[0])):\n        row = input().split()\n        grid.append(row)\n    for j in range(int(nm[0])):\n        for k in range(int(nm[1])):\n            if int(grid[j][k]) > 0:\n                positives.append(int(grid[j][k]))\n                numbers.append(abs(int(grid[j][k])))\n            else:\n                y += 1\n                negatives.append(int(grid[j][k]))\n                numbers.append(abs(int(grid[j][k])))\n    if y % 2 == 0:\n        x = sum(numbers)\n    else:\n        z = min(numbers)\n        x = sum(numbers) - 2 * z\n    answers.append(x)\nfor m in range(t):\n    print(answers[m])", "for _ in range(int(input())):\n    l1 = []\n    (n, m) = list(map(int, input().strip().split()))\n    for i in range(n):\n        l2 = list(map(int, input().strip().split()))\n        l1.append(l2)\n    g = 0\n    sum1 = 0\n    h = 101\n    v = 0\n    for i in range(n):\n        for j in range(m):\n            if l1[i][j] == 0:\n                v = 1\n            elif l1[i][j] < 0:\n                e = -l1[i][j]\n                g += 1\n                sum1 += e\n                if e < h:\n                    h = e\n            else:\n                e = l1[i][j]\n                sum1 += e\n                if e < h:\n                    h = e\n    if g % 2 == 0 or v == 1:\n        print(sum1)\n    else:\n        print(sum1 - 2 * h)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    mx = []\n    a = 0\n    b = 0\n    for i in range(n):\n        y = list(map(int, input().split()))\n        for j in range(m):\n            l = y[j]\n            if l < 0:\n                a += 1\n            if l == 0:\n                b += 1\n            mx.append(abs(l))\n    u = a + b\n    if a % 2 == 0 or (a + b) % 2 == 0:\n        s = 0\n        for i in range(len(mx)):\n            s += mx[i]\n        print(s)\n    else:\n        s = 0\n        mx.sort()\n        for i in range(1, len(mx)):\n            s += mx[i]\n        print(s - mx[0])", "def read_matrix():\n    temp_matrix = []\n    for i in range(n):\n        temp_matrix.append(list(map(int, input().split())))\n    return temp_matrix\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    matrix = read_matrix()\n    neg_count = 0\n    min_min_el = (0, 0)\n    for y in range(n):\n        min_el = 0\n        negatives = 0\n        for x in range(m):\n            if matrix[y][x] < 0:\n                negatives += 1\n                matrix[y][x] *= -1\n            if matrix[y][x] < matrix[y][min_el]:\n                min_el = x\n        if negatives % 2 != 0:\n            neg_count += 1\n        if matrix[y][min_el] < matrix[min_min_el[0]][min_min_el[1]]:\n            min_min_el = (y, min_el)\n    if neg_count % 2 != 0:\n        matrix[min_min_el[0]][min_min_el[1]] *= -1\n    ans = 0\n    for y in range(n):\n        ans += sum(matrix[y])\n    print(ans)", "for T in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = [list(map(int, input().split()[:m])) for i in range(n)]\n    neg_count = 0\n    zero_count = False\n    (s, m) = (0, 100)\n    for i in range(n):\n        for val in a[i]:\n            if val < 0:\n                neg_count += 1\n            if val == 0:\n                zero_count = True\n            s += abs(val)\n            if m > abs(val) and val != 0:\n                m = abs(val)\n    if neg_count & 1 == 0:\n        print(s)\n    elif zero_count:\n        print(s)\n    else:\n        print(s - 2 * m)", "t = int(input())\nfor _ in range(t):\n    nm = list(map(int, input().split()))\n    n = nm[0]\n    numbers = []\n    for _ in range(n):\n        data = list(map(int, input().split()))\n        numbers += data\n    neg = 0\n    zero = 0\n    for i in numbers:\n        if i < 0:\n            neg += 1\n        elif i == 0:\n            zero += 1\n    if neg % 2 == 0 or zero > 0:\n        numbers = list(map(abs, numbers))\n        result = sum(numbers)\n    else:\n        numbers = list(map(abs, numbers))\n        minimum = min(numbers)\n        result = sum(numbers) - 2 * minimum\n    print(result)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    x = []\n    for i in range(n):\n        l = list(map(int, input().split()))\n        x += l\n    zero = 0\n    neg = []\n    positive = 0\n    ans = [abs(i) for i in x]\n    if 0 in x:\n        print(sum(ans))\n    else:\n        for j in x:\n            if j >= 0:\n                positive += j\n            else:\n                neg.append(j)\n        if len(neg) % 2 == 0:\n            answer = positive + -1 * sum(neg)\n            print(answer)\n        else:\n            mini = min(ans)\n            print(sum(ans) - 2 * mini)", "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n    (n, m) = R()\n    a = []\n    f = 0\n    for _ in [0] * n:\n        for x in R():\n            a += (abs(x),)\n            f ^= x <= 0\n    print(sum(a) - 2 * min(a) * f)", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    s = 0\n    for i in range(n):\n        x = list(map(int, input().split()))\n        l.append(x)\n        s = s + sum(x)\n    c = 0\n    mi = 1000000\n    s = 0\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] < 0:\n                c = c + 1\n            mi = min(mi, abs(l[i][j]))\n            s = s + abs(l[i][j])\n    if c % 2 == 1:\n        print(s - 2 * mi)\n    else:\n        print(s)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    suma = 0\n    j = 0\n    minx = 100000000000000000\n    for i in range(n):\n        a = list(map(int, input().split()))\n        for k in range(m):\n            suma += abs(a[k])\n            if a[k] < 0:\n                j += 1\n            minx = min(minx, abs(a[k]))\n    if j % 2 == 0:\n        print(suma)\n    else:\n        print(suma - minx - minx)", "R = lambda : map(int, input().split())\n(t,) = R()\nfor _ in [0] * t:\n    (n, m) = R()\n    a = []\n    f = 0\n    for _ in [0] * n:\n        for x in R():\n            a += (abs(x),)\n            f ^= x < 0\n    print(sum(a) - 2 * min(a) * f)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = [[int(i) for i in input().split()] for j in range(n)]\n    mini = 99999999999\n    count = 0\n    sum = 0\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] < 0:\n                count += 1\n            mini = min(abs(arr[i][j]), mini)\n            sum += abs(arr[i][j])\n    if count % 2 != 0:\n        print(sum - mini * 2)\n    else:\n        print(sum)"]