["for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(max((x * y for (x, y) in zip(a, a[1:]))))", "for s in [*open(0)][2::2]:\n    l = [*map(int, s.split())]\n    print(max((x * y for (x, y) in zip(l, l[1:]))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(max((x * y for (x, y) in zip(a, a[1:]))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(max((x * y for (x, y) in zip(a, a[1:]))))", "for sss in [*open(0)][2::2]:\n    aaa = (*map(int, sss.split()),)\n    print(max((xxx * yyy for (xxx, yyy) in zip(aaa, aaa[1:]))))", "import sys\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef LI1():\n    return list(map(int1, sys.stdin.readline().split()))\n\ndef LLI1(rows_number):\n    return [LI1() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline().rstrip()\ninf = 10 ** 16\nmd = 10 ** 9 + 7\n\ndef solve():\n    n = II()\n    aa = LI()\n    ans = max((a0 * a1 for (a0, a1) in zip(aa, aa[1:])))\n    print(ans)\nfor testcase in range(II()):\n    solve()", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(max((x * y for (x, y) in zip(a, a[1:]))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(max((x * y for (x, y) in zip(a, a[1:]))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(max((x * y for (x, y) in zip(a, a[1:]))))", "for g in [*open(0)][2::2]:\n    a = list(map(int, g.split()))\n    print(max([a[i] * a[i + 1] for i in range(len(a) - 1)]))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(max((x * y for (x, y) in zip(a, a[1:]))))", "for ss in [*open(0)][2::2]:\n    aa = (*map(int, ss.split()),)\n    print(max((xx * yy for (xx, yy) in zip(aa, aa[1:]))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(max((x * y for (x, y) in zip(a, a[1:]))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(max((x * y for (x, y) in zip(a, a[1:]))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(max((x * y for (x, y) in zip(a, a[1:]))))", "nt = int(input())\nans = []\n\ndef solve(arr):\n    maxe = 1\n    prod = 1\n    maxprod = 1\n    for x in range(len(arr) - 1):\n        prod = arr[x] * arr[x + 1]\n        if maxprod <= prod:\n            maxprod = prod\n    return maxprod\nfor x in range(nt):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n == 2:\n        ans.append(arr[0] * arr[1])\n        continue\n    ans.append(solve(arr))\nfor x in range(nt):\n    print(ans[x])", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef max_product(arr):\n    ans = 0\n    for i in range(len(arr) - 1):\n        ans = max(ans, arr[i] * arr[i + 1])\n    return ans\nt = inp()\nfor i in range(t):\n    n = inp()\n    arr = inlt()\n    print(max_product(arr))", "from sys import stdin\n\ndef main():\n    t = int(stdin.readline().strip())\n    for _ in range(t):\n        n = int(stdin.readline().strip())\n        a = list(map(int, stdin.readline().split()))\n        ans = -1\n        i = 0\n        while i < n - 1:\n            temp = a[i] * a[i + 1]\n            if temp > ans:\n                ans = temp\n            i += 1\n        print(ans)\nmain()", "import sys\ninput = sys.stdin.readline\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    a = [*map(int, input().split())]\n    print(max((a[i] * a[i + 1] for i in range(n - 1))))\n    t -= 1", "import sys\ninput = sys.stdin.readline\nt = int(input())\nmaxProd = 1\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    for i in range(n - 1):\n        if (temp := (a[i] * a[i + 1])) > maxProd:\n            maxProd = temp\n    print(maxProd)\n    maxProd = 1", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(max((x * y for (x, y) in zip(a, a[1:]))))", "import sys\ninput = lambda : sys.stdin.readline()\nint_arr = lambda : list(map(int, input().split()))\nstr_arr = lambda : list(map(str, input().split()))\nget_str = lambda : map(str, input().split())\nget_int = lambda : map(int, input().split())\nget_flo = lambda : map(float, input().split())\nmod = 1000000007\n\ndef solve(n, arr):\n    ans = float('-inf')\n    for i in range(1, n):\n        ans = max(arr[i - 1] * arr[i], ans)\n    print(ans)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = int_arr()\n    solve(n, arr)", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    data = list(map(int, input().split()))\n    for i in range(n - 1):\n        data[i] = data[i] * data[i + 1]\n    print(max(data))", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef main():\n    T = inp()\n    while T > 0:\n        n = inp()\n        arr = inlt()\n        ans = -1\n        for i in range(0, n - 1):\n            ans = max(ans, arr[i] * arr[i + 1])\n        print(ans)\n        T -= 1\nmain()", "from sys import stdin\n\ndef main():\n    cases = int(stdin.readline().strip())\n    for i in range(cases):\n        n = int(stdin.readline().strip())\n        A = [int(x) for x in stdin.readline().split()]\n        ans = 0\n        for j in range(n - 1):\n            ans = max(ans, A[j] * A[j + 1])\n        print(ans)\nmain()", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_string():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_print_int(x):\n    sys.stdout.write(str(x) + '\\n')\n\ndef get_print(x):\n    sys.stdout.write(x + '\\n')\n\ndef get_print_int_same(x):\n    sys.stdout.write(str(x) + ' ')\n\ndef get_print_same(x):\n    sys.stdout.write(x + ' ')\nfrom sys import maxsize\n\ndef solve():\n    for _ in range(get_int()):\n        n = get_int()\n        arr = get_list()\n        ans = arr[0] * arr[1]\n        for i in range(1, n - 1, 1):\n            ans = max(ans, arr[i] * arr[i + 1])\n        get_print_int(ans)\nsolve()", "from sys import stdin\ninput = stdin.readline\n\ndef findCherry(ln, nums):\n    maxProd = 0\n    currentMin = 0\n    for i in range(1, len(nums)):\n        maxProd = max(nums[i] * nums[i - 1], maxProd)\n    return maxProd\n\ndef processNums():\n    n = int(input())\n    for _ in range(n):\n        ln = int(input())\n        nums = list(map(int, input().split()))\n        print(findCherry(ln, nums))\nprocessNums()", "m = int(input())\nl = []\nfor _ in range(m):\n    t = int(input())\n    a = list(map(int, input().split()))\n    max = -44543\n    for i in range(t - 1):\n        if max < a[i] * a[i + 1]:\n            max = a[i] * a[i + 1]\n    l.append(max)\nfor i in l:\n    print(i)", "import math, sys, itertools\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nfor t in [wtf[i:i + 2] for i in range(1, len(wtf), 2)]:\n    n = int(t[0])\n    A = list(map(int, t[1].split()))\n    ans = []\n    M = max(A)\n    for i in range(n - 1):\n        ans.append(A[i] * A[i + 1])\n    print(max(ans))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    mx = -1\n    for i in range(n - 1):\n        if a[i] * a[i + 1] > mx:\n            mx = a[i] * a[i + 1]\n    print(mx)\nT = int(input())\nfor i in range(T):\n    solve()", "def solve(length, nums):\n    maxvalue = 0\n    for i in range(length - 1):\n        res = nums[i] * nums[i + 1]\n        maxvalue = max(res, maxvalue)\n    return maxvalue\nt = int(input())\noutput = []\nfor i in range(t):\n    n = int(input())\n    nums = [int(i) for i in input().split()]\n    output.append(solve(n, nums))\nprint(*output, sep='\\n')", "t = int(input())\nanswers = []\nfor _t in range(t):\n    n = int(input())\n    a = input()\n    a = [int(i) for i in a.split()]\n    max_prod = 0\n    for i in range(n - 1):\n        if a[i] * a[i + 1] > max_prod:\n            max_prod = a[i] * a[i + 1]\n    answers.append(max_prod)\nfor answer in answers:\n    print(answer)", "def cast(cre, typ):\n    return type(typ)(map(cre, typ))\n\ndef inp_lis(cre):\n    if cre == str:\n        return input().split()\n    elif cre == bool:\n        return cast(bool, cast(int, input().split()))\n    else:\n        return cast(cre, input().split())\n\ndef repl(str_, idx=-1, char=''):\n    leng = len(str_)\n    return str_[:idx] + char + str_[(leng + idx) % leng + 1:]\n\ndef solution():\n    for t in range(int(input())):\n        n = int(input())\n        seq = inp_lis(int)\n        maxv = 0\n        for i in range(n - 1):\n            if maxv < seq[i] * seq[i + 1]:\n                maxv = seq[i] * seq[i + 1]\n        print(maxv)\n    return\nsolution()", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    x = list(map(int, input().split()))\n    y = x[1:]\n    max = 0\n    for (i, j) in zip(x, y):\n        if i * j > max:\n            max = i * j\n    print(max)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(max((a[i] * a[i + 1] for i in range(n - 1))))", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    b = list(map(int, input().split()))\n    print(max((b[i - 1] * b[i] for i in range(1, a))))", "for _ in range(int(input())):\n    N = int(input())\n    li = list(map(int, input().split()))\n    print(max((li[i - 1] * li[i] for i in range(1, N))))", "t = int(input())\n\ndef maxPro():\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    max = 0\n    for i in range(n - 1):\n        m = l[i] * l[i + 1]\n        if max < m:\n            max = m\n    print(max)\nfor i in range(t):\n    maxPro()", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(max((a[i] * a[i + 1] for i in range(n - 1))))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1):\n        ans = max(ans, a[i] * a[i + 1])\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(max((a[i] * a[i + 1] for i in range(n - 1))))", "for _ in range(0, int(input())):\n    input()\n    v = list(map(int, input().split()))\n    x = max(zip(v, v[1:]), key=lambda x: x[0] * x[1])\n    print(x[0] * x[1])", "for i in range(int(input())):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    print(max((list1[i] * list1[i + 1] for i in range(n - 1))))", "import math\ndebug = True\n\ndef pprint(*args, delimiter='#', amount=10):\n    if debug:\n        print('{0} DEBUG {0}'.format(delimiter * amount))\n        print(*args)\n        print('{0} ----- {0}'.format('-' * amount))\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    maximal = 1\n    for i in range(n - 1):\n        if a[i] * a[i + 1] >= maximal:\n            maximal = a[i] * a[i + 1]\n    return maximal\nt = int(input())\nwhile t > 0:\n    t -= 1\n    print(solve())", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(max((a[i] * a[i + 1] for i in range(n - 1))))", "from math import ceil\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom array import array as arr\n\ndef li():\n    return list(map(int, input().split()))\n\ndef solve():\n    for _ in range(int(input())):\n        n = int(input())\n        a = li()\n        mx = 0\n        for i in range(n - 1):\n            if a[i] * a[i + 1] > mx:\n                mx = a[i] * a[i + 1]\n        print(mx)\nsolve()", "for _ in range(int(input())):\n    n = int(input())\n    arr = [*map(int, input().split())]\n    print(max([arr[i] * arr[i + 1] for i in range(n - 1)]))", "n = int(input())\nfor i in range(n):\n    c = 1\n    x = []\n    k = int(input())\n    p = list(map(int, input().split()))\n    for j in range(len(p) - 1):\n        c = p[j] * p[j + 1]\n        x.append(c)\n    print(max(x))", "import sys\ninput = sys.stdin.readline\nt = int(input())\nmaxProd = 1\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    for i in range(n - 1):\n        if (temp := (a[i] * a[i + 1])) > maxProd:\n            maxProd = temp\n    sys.stdout.write(str(maxProd) + '\\n')\n    maxProd = 1", "k = []\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = a[0] * a[1]\n    for i in range(1, n - 1):\n        p = max(p, a[i] * a[i + 1])\n    k.append(p)\nfor i in k:\n    print(i)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(max((x * y for (x, y) in zip(l, l[1:]))))", "def bestMaxMin(a):\n    res = 0\n    for i in range(1, len(a)):\n        if a[i] * a[i - 1] > res:\n            res = a[i] * a[i - 1]\n    return res\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    print(bestMaxMin(a))", "my_value = []\nfor i in range(int(input())):\n    num = int(input())\n    lis = list(map(int, input().split()))\n    max_ = 0\n    for i in range(num - 1):\n        max_ = max(max_, lis[i] * lis[i + 1])\n    my_value.append(max_)\nfor i in my_value:\n    print(i)", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    p = 1\n    for i in range(1, n):\n        if l1[i] * l1[i - 1] > p:\n            p = l1[i] * l1[i - 1]\n    print(p)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    mayor = 0\n    a = [int(x) for x in input().split()]\n    for i in range(n - 1):\n        if mayor < a[i] * a[i + 1]:\n            mayor = a[i] * a[i + 1]\n    print(mayor)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    max = l[0] * l[1]\n    for i in range(1, n - 1):\n        if l[i] * l[i + 1] > max:\n            max = l[i] * l[i + 1]\n    print(max)\n    t -= 1", "t1 = int(input())\nfor _ in range(t1):\n    n = int(input())\n    c = 0\n    a = list(map(int, input().split()))\n    for i in range(n - 1):\n        if a[i] * a[i + 1] > c:\n            c = a[i] * a[i + 1]\n    print(c)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(max((l[i - 1] * l[i] for i in range(1, n))))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max([x * y for (x, y) in zip(a[:-1], a[1:])])\n    print(m)", "bigres = []\nt = int(input())\nfor m in range(t):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    res = a[0] * a[1]\n    for q in range(len(a) - 1):\n        res = max(res, a[q] * a[q + 1])\n    bigres += [res]\nfor i in range(len(bigres)):\n    print(bigres[i])", "def sol(n):\n    l = list(map(int, input().split()))\n    return max((l[i - 1] * l[i] for i in range(1, n)))\nfor i in range(int(input())):\n    j = int(input())\n    print(sol(j))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(max((a[i] * a[i + 1] for i in range(n - 1))))", "mod = 1000000007\nfrom math import factorial, ceil, pow, sqrt, floor, gcd\nfrom sys import stdin, stdout\nfrom bisect import bisect_left, bisect_right\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    l = list(map(int, stdin.readline().split()))\n    maxy = 0\n    for i in range(1, n):\n        maxy = max(maxy, l[i] * l[i - 1])\n    print(maxy)", "for _ in range(int(input())):\n    input()\n    a = list(map(int, input().split()))\n    print(max((a[i] * a[i + 1] for i in range(len(a) - 1))))", "n = int(input())\narr = []\nfor x in range(n):\n    _ = input()\n    arr.append([int(k) for k in input().split()])\nfor current in arr:\n    current_max = 0\n    for x in range(1, len(current)):\n        if current_max < current[x] * current[x - 1]:\n            current_max = current[x] * current[x - 1]\n    print(current_max)", "for _ in range(int(input())):\n    n = int(input())\n    v = [int(x) for x in input().split(' ')]\n    s = []\n    for i in range(n - 1):\n        s.append(v[i] * v[i + 1])\n    print(max(s))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = 0\n    for i in range(n - 1):\n        if a[i] * a[i + 1] > m:\n            m = a[i] * a[i + 1]\n    print(m)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(max((arr[i] * arr[i + 1] for i in range(n - 1))))", "N = int(input())\nfor i in range(N):\n    m = int(input())\n    A = list(map(int, input().split()))\n    n = len(A)\n    c = 0\n    for i in range(n - 1):\n        f_i = A[i] * A[i + 1]\n        if f_i > c:\n            c = f_i\n    print(c)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(max((l[i - 1] * l[i] for i in range(1, n))))", "for _ in range(int(input())):\n    n = int(input())\n    que = list(map(int, input().split()))\n    max = 0\n    for i in range(1, n):\n        if max < que[i] * que[i - 1]:\n            max = que[i] * que[i - 1]\n    print(max)", "for z in range(int(input())):\n    n = int(input())\n    m = input()\n    a = list(map(int, m.split()))\n    b = [0] * (n - 1)\n    for _ in range(n - 1):\n        b[_] = a[_] * a[_ + 1]\n    print(max(b))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1):\n        ans = max(ans, l[i] * l[i + 1])\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    li = list(map(int, input().split()))\n    value = []\n    for i in range(len(li) - 1):\n        value.append(li[i] * li[i + 1])\n    print(max(value))", "for _ in range(int(input())):\n    a = int(input())\n    s = [int(i) for i in input().split()]\n    d = [s[i] * s[i + 1] for i in range(len(s) - 1)]\n    print(max(d))", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    m = 0\n    for i in range(n - 1):\n        t = arr[i] * arr[i + 1]\n        if t > m:\n            m = t\n    print(m)", "m = int(input())\nfor d in range(m):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = []\n    for i in range(n - 1):\n        l.append(a[i] * a[i + 1])\n    print(max(l))", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    R = []\n    for i in range(len(arr) - 1):\n        R.append(arr[i] * arr[i + 1])\n    print(max(R))", "for i in range(int(input())):\n    x = int(input())\n    arr = list(map(int, input().split(' ')))\n    maxx = arr[0] * arr[1]\n    for i in range(1, len(arr) - 1):\n        loc = arr[i] * arr[i + 1]\n        if loc > maxx:\n            maxx = loc\n    print(maxx)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = []\n    for i in range(n - 1):\n        a.append(l[i] * l[i + 1])\n    print(max(a))", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    an = a[0] * a[1]\n    for i in range(1, n):\n        an = max(an, a[i] * a[i - 1])\n    print(an)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    q = list(map(int, input().split()))\n    m = 0\n    for i in range(len(q) - 1):\n        m = max(m, q[i] * q[i + 1])\n    print(m)", "t = int(input())\noutput = []\nfor c in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1):\n        ans = max(ans, a[i] * a[i + 1])\n    output.append(ans)\nfor e in output:\n    print(e)", "for _ in range(int(input())):\n    x = int(input())\n    lis = list(map(int, input().split()))\n    fin = 0\n    for i in range(1, x):\n        if lis[i - 1] * lis[i] > fin:\n            fin = lis[i - 1] * lis[i]\n    print(fin)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    idx = a.index(m)\n    if idx == 0:\n        ans = m * a[1]\n    elif idx == n - 1:\n        ans = m * a[-2]\n    else:\n        ans = m * max(a[idx - 1], a[idx + 1])\n    for i in range(n - 1):\n        if a[i] * a[i + 1] > ans:\n            ans = a[i] * a[i + 1]\n    print(ans)", "def better(mult, c, d):\n    nult_new = c * d\n    if mult >= nult_new:\n        return mult\n    else:\n        return nult_new\n\ndef solve():\n    n = int(input())\n    nums = input().split()\n    l = [int(i) for i in nums]\n    mult = 0\n    for i in range(n - 1):\n        mult = better(mult, l[i], l[i + 1])\n    return mult\nfor _ in range(int(input())):\n    print(solve())", "t = int(input().strip())\nresult = []\nfor i in range(t):\n    n = int(input())\n    numbers = list(map(int, input().strip().split()))[:n]\n    r = 0\n    for j in range(n - 1):\n        r = max(r, numbers[j] * numbers[j + 1])\n    result.append(r)\nfor i in result:\n    print(i)", "from sys import *\ninput = lambda : stdin.readline()\nint_arr = lambda : list(map(int, stdin.readline().strip().split()))\nstr_arr = lambda : list(map(str, stdin.readline().split()))\nget_str = lambda : map(str, stdin.readline().strip().split())\nget_int = lambda : map(int, stdin.readline().strip().split())\nget_float = lambda : map(float, stdin.readline().strip().split())\nmod = 1000000007\nsetrecursionlimit(1000)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = int_arr()\n    mx = float('-inf')\n    for i in range(1, n):\n        mx = max(mx, arr[i] * arr[i - 1])\n    print(mx)", "a = int(input())\nfor i in range(0, a):\n    K = int(input())\n    P = list(map(int, input().split()))\n    max = -1\n    for i in range(K - 1):\n        if P[i] * P[i + 1] > max:\n            max = P[i] * P[i + 1]\n    print(max)", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        print(max((a[i - 1] * a[i] for i in range(1, n))))\nmain()", "def test():\n    n = int(input())\n    l = list(map(int, input().split()))\n    mx = 0\n    for i in range(n - 1):\n        mx = max(mx, l[i] * l[i + 1])\n    print(mx)\nt = int(input())\nwhile t:\n    test()\n    t -= 1"]