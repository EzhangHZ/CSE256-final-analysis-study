# Knowledge-Aware Prompt:

1. Read t, the number of test cases.

2. Loop t times to read each test case.

3. Read n and k, the length of the string and the k-th string to find.

4. Calculate the total number of strings of length n with n-2 'a's and 2 'b's as $\frac{n \cdot (n-1)}{2}$.

5. Implement a binary search algorithm to find the k-th string efficiently within the lexicographically ordered list of strings.

6. Use combinatorics to generate all possible strings with n-2 'a's and 2 'b's in lexicographical order.

7. Output the k-th string from the list.

8. End loop after processing all test cases.

# Problem:

For the given integer $n$ ($n > 2$) let's write down all the strings of length $n$ which contain $n-2$ letters 'a' and two letters 'b' in lexicographical (alphabetical) order.

You are given $n$ ($n > 2$) and $k$ ($1 \le k \le \frac{n \cdot (n-1)}{2}$). Print the $k$-th string from the list.

-----Input-----

The input contains one or more test cases.

The first line contains one integer $t$ ($1 \le t \le 10^4$) â€” the number of test cases to follow. Then $t$ test cases follow.

Each test case is written on the separate line containing two integers $n$ and $k$ ($3 \le n \le 10^5, 1 \le k \le \min(2\cdot10^9, \frac{n \cdot (n-1)}{2})$.

The sum of values $n$ over all test cases in the test doesn't exceed $10^5$.

-----Output-----

For each test case print the $k$-th string from the list of all described above strings of length $n$. Strings in the list are sorted lexicographically (alphabetically).

-----Examples-----

Input
7
5 1
5 2
5 8
5 10
3 1
3 2
20 100

Output
aaabb
aabab
baaba
bbaaa
abb
bab
aaaaabaaaaabaaaaaaaa

-----Note-----

None