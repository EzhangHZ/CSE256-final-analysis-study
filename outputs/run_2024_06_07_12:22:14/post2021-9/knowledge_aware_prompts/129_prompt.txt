# Knowledge-Aware Prompt:

1. Read $t$, the number of test cases.

2. Loop $t$ times to read each test case.

3. Read $n$, the length of the permutation.

4. Initialize a list $p$ to store the anti-Fibonacci permutations.

5. Generate anti-Fibonacci permutations of length $n$ by constructing the permutations step by step using constructive algorithms.

6. Check if $p_{i-2} + p_{i-1} \ne p_i$ holds for all $i$ ($3 \le i \le n$). If the condition is satisfied, add the permutation to the list $p$.

7. Print $n$ lines, each containing an anti-Fibonacci permutation of length $n$ from the list $p$ for the current test case.

8. Ensure that each test case's output contains $n$ distinct anti-Fibonacci permutations of size $n.

9. Repeat steps 2-8 for all test cases.

10. End the loop after processing all test cases.

Implement the above steps using constructive algorithms to generate distinct anti-Fibonacci permutations of length $n$ for each test case.