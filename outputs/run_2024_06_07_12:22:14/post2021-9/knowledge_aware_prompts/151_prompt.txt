# Problem:

You are given an array $a_1, a_2, \ldots, a_n$ of positive integers. A good pair is a pair of indices $(i, j)$ with $1 \leq i, j \leq n$ such that, for all $1 \leq k \leq n$, the following equality holds:

$$ |a_i - a_k| + |a_k - a_j| = |a_i - a_j|, $$ where $|x|$ denotes the absolute value of $x$.

Find a good pair. Note that $i$ can be equal to $j$.


-----Input-----

The input consists of multiple test cases. The first line contains a single integer $t$ ($1 \leq t \leq 1000$) — the number of test cases. Description of the test cases follows.

The first line of each test case contains an integer $n$ ($1 \leq n \leq 10^5$) — the length of the array.

The second line of each test case contains $n$ integers $a_1, a_2, \ldots, a_n$ ($1 \leq a_i \leq 10^9$) where $a_i$ is the $i$-th element of the array.

The sum of $n$ for all test cases is at most $2 \cdot 10^5$.


-----Output-----

For each test case, print a single line with two space-separated indices $i$ and $j$ which form a good pair of the array. The case $i=j$ is allowed. It can be shown that such a pair always exists. If there are multiple good pairs, print any of them.


-----Examples-----

Input
3
3
5 2 7
5
1 4 2 2 3
1
2
Output
2 3
1 2
1 1


-----Note-----

In the first case, for $i = 2$ and $j = 3$ the equality holds true for all $k$:

$k = 1$: $|a_2 - a_1| + |a_1 - a_3| = |2 - 5| + |5 - 7| = 5 = |2 - 7| = |a_2-a_3|$,

$k = 2$: $|a_2 - a_2| + |a_2 - a_3| = |2 - 2| + |2 - 7| = 5 = |2 - 7| = |a_2-a_3|$,

$k = 3$: $|a_2 - a_3| + |a_3 - a_3| = |2 - 7| + |7 - 7| = 5 = |2 - 7| = |a_2-a_3|$.

# Knowledge Description:

"math": Math algorithms are computational procedures used to perform mathematical operations, such as arithmetic, geometry, calculus, and algebra. They are used to solve mathematical problems and model real-world phenomena. Math algorithms include numerical methods, optimization techniques, and statistical analysis. They are essential in fields such as computer graphics, cryptography, finance, and engineering.

"sortings": Sorting algorithms are methods used to arrange a collection of data in a specific order, such as alphabetical or numerical. These algorithms vary in their efficiency, complexity, and suitability for different types of data. Common sorting algorithms include bubble sort, insertion sort, selection sort, merge sort, quicksort, and heapsort. Sorting is a fundamental operation in computer science, used in a variety of applications, including searching, indexing, and data analysis. Proper selection and implementation of sorting algorithms can significantly impact the performance and functionality of a software system.

# Knowledge-Aware Prompt:

1. Read t, the number of test cases.

2. Loop t times to read each test case.

3. Read n, the length of the array.

4. Read the array elements a.

5. Find and print any good pair of indices i and j meeting the given condition.